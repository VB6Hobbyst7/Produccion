VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "NCOMCredito"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit
'Public Event MostrarMensaje()
Dim lsMensaje As String

'ARCV 04-07-2006 (Definiciones por performance)
Private pMatCalend As Variant
Private pMatCalendMiViviSinMostrar As Variant 'ALPA20130730
Private pMatCalend_2 As Variant
Private pMatCalendNormalT1 As Variant
Private pMatCalendParalelo As Variant
Private pMatCalendMiVivResult As Variant
Private pMatCalendTmp As Variant
Private pMatCalendDistribuido As Variant
Private pMatCalendDistribuidoMiVivi As Variant

Private pMatCalendDistribuidoTempo As Variant
Private pMatCalendDistribuido_2 As Variant
Private pMatCalendDistribuidoParalelo As Variant
'---------------
'ARCV 13-02-2007
Private pMatGastosCancelacion As Variant
Private pnNumGastosCancel As Integer
'-----------------------------------------------
'FRHU 20121202
Dim fnPerContMini As Double
Dim fnTieMaxTotCre As Double
Dim fnMinCalSbsNorm As Double
Dim fnEndeMaxUniFami As Double
Dim fnEdadMaxClie As Double
'FIN FRHU 20121202
Dim oImpresora As COMFunciones.FCOMVarImpresion

'------------
Dim nPos1 As Integer
Dim nPos2 As Integer
Dim nPos3 As Integer
Dim nPos4 As Integer
Dim nPost As Integer

'->***** LUCV20180601, Agregó Según ERS022-2018
Private nTasaSegDes As Double
Private nCantAfiliadosSegDes As Integer
'<-***** Fin LUCV20180601

Public pbExcluyeGastos As Boolean 'CTI2 20181229 ***
Dim objProducto As COMDCredito.DCOMCredito '**ARLO20180712 ERS042 - 2018
Dim bEsPro515 As Boolean '**ARLO20180712 ERS042 - 2018
Dim bEsPro516 As Boolean '**ARLO20180712 ERS042 - 2018

'ANGC/RIRO 20200520 CofideReactiva ****
Public bAplicaComision As Boolean
Public nComisionCofideReactiva As Double
'END

'RIRO 20210515
Public nICVCuota As Double
Public nICVTotal As Double
'END RIRO

Public Sub ActualizaBloqueoCredito(ByVal psCtaCod As String, ByVal pnBloqueo As Integer)
Dim dCred As COMDCredito.DCOMCredito

    Set dCred = New COMDCredito.DCOMCredito
    Call dCred.ActualizaBloqueoCred(psCtaCod, pnBloqueo)
    Set dCred = Nothing
End Sub

Public Function CargaDatosBloqueoCred(ByVal psCtaCod As String, ByRef pnBloqueo As Integer) As String
Dim dCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim sMsgBox As String

    Set dCred = New COMDCredito.DCOMCredito
    Set R = dCred.RecuperaColocacCredCampos(psCtaCod, "bBloqueo")
    Set dCred = Nothing

    sMsgBox = ""
    pnBloqueo = 0
    If R.RecordCount = 0 Then
        sMsgBox = "Credito No Existe"
        Set R = Nothing
    Else
        pnBloqueo = IIf(IIf(IsNull(R!bBloqueo), False, R!bBloqueo) = True, 1, 0)
    End If
    
    CargaDatosBloqueoCred = sMsgBox
    
    
End Function

Public Sub LiberaGarantiaPago(ByVal pnMovNro As Long, ByVal poBase As COMDCredito.DCOMCredActBD, ByVal psCtaCod As String, ByVal psCodAge As String, ByVal psCodUser As String, _
    ByVal pdFecha As Date, ByVal pnPrestamo As Double, ByVal pnMontoCapital As Double, ByVal bCancelado As Boolean)

Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim R2 As ADODB.Recordset
Dim oBase As COMDCredito.DCOMCredActBD
Dim sSql As String
Dim sMovNro As String
Dim nMovNro As Long
Dim sOpeCod As String
Dim nSumaTotalGarantia As Double
Dim nPago As Double
Dim nMontoLibera As Double
Dim nMontoLiberaTotal As Double ' Total a liberar
Dim nMonToGravament As Double
Dim cTpoDoc As String 'MAVM 25102010
Dim cJoyGarCod As String 'MAVM 25102010

    Set oBase = poBase
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocGarantia(psCtaCod, oBase.coConex.ConexionActiva)
    
    'MAVM 25102010 ***
    If R.RecordCount <> 0 Then
        If R!cTpoDoc = "145" Then
            cTpoDoc = R!cTpoDoc
            cJoyGarCod = R!cNroDoc
        End If
    End If
    '***
    
    nSumaTotalGarantia = 0
    Do While Not R.EOF
        nSumaTotalGarantia = nSumaTotalGarantia + R!nGravado
        R.MoveNext
    Loop
    nSumaTotalGarantia = Format(nSumaTotalGarantia, "#0.00")
    nPago = Format(pnMontoCapital * nSumaTotalGarantia / pnPrestamo, "#0.00")
    R.Close

    nMontoLiberaTotal = 0

    Set R = oCred.RecuperaColocGarantia(psCtaCod, oBase.coConex.ConexionActiva)
    Do While Not R.EOF
        sSql = "Select cOpeCod from GarantiaOpe where nTpoGarantia = " & R!nTpoGarantia & " and nMoneda = " & R!nMoneda & " AND bReversion = 1 "
        Set R2 = New ADODB.Recordset
        R2.Open sSql, oBase.coConex.ConexionActiva, adOpenStatic, adLockReadOnly, adCmdText
        If R2.RecordCount > 0 Then
            sOpeCod = R2!copecod
        Else
            sOpeCod = ""
        End If
        R2.Close
        nMontoLibera = nPago * (R!nGravado / nSumaTotalGarantia)
        'nMontoLiberaTotal = nMontoLiberaTotal + nMontoLibera
        'calculamos el nuevo monto de gravament
        nMonToGravament = IIf(R!nGravament - nMontoLibera <= 0, 0, R!nGravament - nMontoLibera)
        'oBase.dBeginTrans
        'ARCV 30-07-2006-----------------
'        sSql = "UPDATE GARANTIAS SET nPorGravar = nPorGravar + " & Format(nMontoLibera, "#0.00")
'            sSql = sSql & ", nGravament = " & Format(nMonToGravament, "#0.00")
'            sSql = sSql & " WHERE cNumGarant = '" & R!cNumGarant & "'"
        sSql = "UPDATE GARANTIAS SET nGravament = " & Format(nMonToGravament, "#0.00")
        sSql = sSql & " WHERE cNumGarant = '" & R!cNumGarant & "'"
        '-----------------------------
            oBase.coConex.ConexionActiva.Execute sSql
        '----- MADM ---------
        If bCancelado Then
            sSql = " UPDATE ColocGarantia Set nEstado = 3 WHERE cNumGarant = '" & R!cNumGarant & "' "
            sSql = sSql & " AND  cCtaCod = '" & psCtaCod & "'"
            oBase.coConex.ConexionActiva.Execute sSql
            
            'MAVM 25102010 ***
            If cTpoDoc = "145" Then
                sSql = " UPDATE JoyaGarantia Set nJoyGarEstado = 2 WHERE cJoyGarCod = '" & cJoyGarCod & "' "
                oBase.coConex.ConexionActiva.Execute sSql
            End If
            '***
        End If
        '------ MADM ----------
        'sMovNro = oBase.GeneraMovNro(pdFecha, psCodAge, psCodUser)
        'Call oBase.dInsertMov(sMovNro, sOpeCod, "Asiento de Garantia", gMovEstContabMovContable, gMovFlagVigente, False)
        'nMovNro = oBase.dGetnMovNro(sMovNro)
        nMovNro = pnMovNro
        'Call oBase.dInsertMovCol(nMovNro, sOpeCod, psCtaCod, nTpoGarantia + IdSupGarant, R!nGravado, 0, "", 0, 0, 0, False)
        'Call oBase.dInsertMovColDet(nMovNro, sOpeCod, psCtaCod, nTpoGarantia + IdSupGarant, 1000, 0, R!nGravado, False)

        'En el numero de Calendario en caso de las garantias se asigna el cnumgarant convertido a entero

        Call oBase.dInsertMovCol(nMovNro, sOpeCod, psCtaCod, CLng(IIf(IsNull(R!cNumGarant), 0, R!cNumGarant)), nMontoLibera, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, sOpeCod, psCtaCod, CLng(IIf(IsNull(R!cNumGarant), 0, R!cNumGarant)), 1000, 0, nMontoLibera, False)

        R.MoveNext
    Loop
    ' LAYG - 2004/09/22   luis
    'nMovNro = pnMovNro
    'Call oBase.dInsertMovCol(nMovNro, sOpeCod, psCtacod, 0, nMontoLiberaTotal, 0, "", 0, 0, 0, False)
    'Call oBase.dInsertMovColDet(nMovNro, sOpeCod, psCtacod, 0, 1000, 0, nMontoLiberaTotal, False)

    R.Close
    Set oCred = Nothing

End Sub

Public Sub AsientoGarantia(ByVal psCtaCod As String, ByVal psCodAge As String, ByVal psCodUser As String, _
    ByVal pdFecha As Date, ByVal pnMovNro As Long, ByVal poBase As COMDCredito.DCOMCredActBD, ByVal pnCuota As Integer)

Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim R2 As ADODB.Recordset
Dim oBase As COMDCredito.DCOMCredActBD
Dim sSql As String
Dim sMovNro As String
Dim nMovNro As Long
Dim sOpeCod As String

    nMovNro = pnMovNro ' asignando el mismo nmovnro

    Set oBase = New COMDCredito.DCOMCredActBD
    Set oBase = poBase

'    Set oCred = New COMDCredito.DCOMCredito
'    Set R = oCred.RecuperaColocGarantia(psCtaCod)
'    Set oCred = Nothing

     sSql = "Select G.cTpoDoc, G.cNroDoc, G.nTpoGarantia, G.IdSupGarant, CG.cNumGarant, CG.cCtaCod, CG.nMoneda, CG.nGravado, ISNULL(G.nGravament,0) AS nGravament "
     sSql = sSql & " from ColocGarantia CG Inner Join Garantias G ON CG.cNumGarant = G.cNumGarant "
     sSql = sSql & " Where cCtaCod = '" & psCtaCod & "'"
     Set R = New ADODB.Recordset
     R.Open sSql, oBase.coConex.ConexionActiva, adOpenStatic, adLockReadOnly, adCmdText

    Do While Not R.EOF
        sSql = "Select cOpeCod from GarantiaOpe where nTpoGarantia = " & R!nTpoGarantia & " and nMoneda = " & R!nMoneda & " AND bReversion = 0 "
        Set R2 = New ADODB.Recordset
        R2.Open sSql, oBase.coConex.ConexionActiva, adOpenStatic, adLockReadOnly, adCmdText
        If R2.RecordCount > 0 Then
            sOpeCod = R2!copecod
        End If


        Call oBase.dInsertMovCol(nMovNro, sOpeCod, psCtaCod, CLng(R!cNumGarant), R!nGravado, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, sOpeCod, psCtaCod, CLng(R!cNumGarant), 1000, pnCuota, R!nGravado, False)

        R.MoveNext
    Loop
    R.Close
End Sub

Public Sub ActualizaCreditosVigentes(ByVal pMatCredVig As Variant)
Dim i As Integer
Dim oBase As COMDCredito.DCOMCredActBD

    If IsArray(pMatCredVig) Then
        If UBound(pMatCredVig) > 0 Then
            Set oBase = New COMDCredito.DCOMCredActBD
                oBase.coConex.ConexionActiva.Execute "DELETE ColocCredCredVig Where cCtaCod = '" & pMatCredVig(0, 0) & "'"
            For i = 0 To UBound(pMatCredVig) - 1
                Call oBase.dInsertColocCredCredVig(pMatCredVig(i, 0), pMatCredVig(i, 1), False)
            Next i
        End If
    End If
    Set oBase = Nothing
End Sub

'**********************************************************************
'FUNCION QUE ME DEVUELVE LA TASA EFECTIVA
'**********************************************************************
Function CreditosTasaEfectiva(ByVal pnCuota As Double, ByVal pnCuotas As Integer, ByVal pnMonto As Double, ByVal pnTasaIni As Double, ByVal pnPeriodo As Double) As Double
Dim i As Double
Dim nTasaTemp As Double
Dim nTasaTemp2 As Double
Dim nMontoAprox1 As Double
Dim nMontoAprox2 As Double

    CreditosTasaEfectiva = 0
    nMontoAprox1 = -999999
    'pnTasaIni = pnTasaIni / 100
    nTasaTemp = pnTasaIni
    For i = pnTasaIni / 100 To 1 Step 0.0000001
        nTasaTemp2 = i
        nMontoAprox2 = CDbl(Format(CuotaFija(nTasaTemp2 * 100, pnCuotas, pnMonto, pnPeriodo), "#0.00"))
        If nMontoAprox2 = pnCuota Then
            CreditosTasaEfectiva = i
            Exit For
        Else
            If nMontoAprox2 - pnCuota > 0 Then
                If Abs(nMontoAprox2 - pnCuota) > Abs(nMontoAprox1 - pnCuota) Then
                    CreditosTasaEfectiva = i - 0.0000001
                    Exit For
                Else
                    CreditosTasaEfectiva = i
                    Exit For
                End If
            End If
        End If
        nMontoAprox1 = nMontoAprox2
    Next i
End Function

'*****************************************************************
'FUNCION HALLA LA CUOTA FIJA CON FECHA FIJA
'*****************************************************************

Function CFijaFechaFija(ByVal pTasa As Double, ByVal pPlazo As Integer, ByVal pnMonto As Double, _
    ByVal pnPer As Double, ByVal pdFecDes As Date, ByVal pnDiaFijo As Integer, _
    ByVal pnDiasGracia As Integer, ByVal pnProxMes As Integer, Optional pnDeltaMes As Integer = 1, _
    Optional ByVal pbMiViv As Boolean = False, Optional ByVal pnDiaFijo2 As Integer = 0, _
    Optional ByVal pnNroCuotas As Integer = 0) As Double

Dim i As Integer
Dim SumTotal As Double
Dim nTasaDiaria As Double
Dim nValorActual As Double
Dim nDiasTrans As Integer
Dim dFecInicio, dFecVenc, dFecTemp As Date
Dim nDia, nMes, nAnio As Integer
Dim nProxMesTmp As Boolean
        
'*********** Manejo de 2 dias fijos
    If pnDiaFijo2 <> 0 Then
        
        nTasaDiaria = ((1 + (pTasa / 100)) ^ (1 / 30) - 1) * 100
        SumTotal = 0
        dFecInicio = pdFecDes + pnDiasGracia

        If Day(pdFecDes) <= pnDiaFijo2 - 8 Then
            nDia = pnDiaFijo2
        Else
            nDia = pnDiaFijo
        End If
        
        nMes = Month(dFecInicio)
        nAnio = Year(dFecInicio)

        If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
            If nDia = 31 Then
                nDia = 30
            End If
        End If
        If nMes = 2 Then
            If nDia >= 29 Then
                If nAnio Mod 4 = 0 Then 'si es biciesto
                    nDia = 29
                Else
                    nDia = 28
                End If
            End If
        End If

        dFecTemp = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Trim(Str(nAnio)), "dd/mm/yyyy"))
        If dFecTemp < dFecInicio Then
            nProxMesTmp = True
        Else
            nProxMesTmp = False
        End If

        If pnProxMes Or nProxMesTmp Or pnDeltaMes = 6 Then
            nMes = nMes + pnDeltaMes
        End If
        For i = 1 To pPlazo
        
            If nMes > 12 Then
                nMes = nMes - 12
                nAnio = nAnio + 1
            End If
            If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
                If nDia = 31 Then
                    nDia = 30
                End If
            End If
            If nMes = 2 Then
                If nDia >= 29 Then
                    If nAnio Mod 4 = 0 Then 'si es biciesto
                        nDia = 29
                    Else
                        nDia = 28
                    End If
                End If
            End If

            dFecVenc = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Format(nAnio, "0000"), "dd/mm/yyyy"))
            If i = 1 And pbMiViv Then
                dFecInicio = dFecInicio - pnDiasGracia
            End If
            nDiasTrans = dFecVenc - dFecInicio
            nValorActual = (1 / (1 + (nTasaDiaria / 100))) ^ (nDiasTrans)
            SumTotal = SumTotal + nValorActual
            
            If nDia = pnDiaFijo Then
                nDia = pnDiaFijo2
            Else
                nDia = pnDiaFijo
                nMes = nMes + pnDeltaMes
            End If
            
        Next i

        CFijaFechaFija = pnMonto / SumTotal
    
    Else
        nTasaDiaria = ((1 + (pTasa / 100)) ^ (1 / 30) - 1) * 100
        SumTotal = 0
        dFecInicio = pdFecDes + pnDiasGracia

        nDia = pnDiaFijo
        nMes = Month(dFecInicio)
        nAnio = Year(dFecInicio)
        
        'MAVM 20110104 ***
        If Not (nDia >= Day(dFecInicio) And (Not pnProxMes)) Then
            If pnDiasGracia <> 0 Then
                dFecTemp = dFecInicio + 30
                nDia = Day(dFecTemp)
                nMes = Month(dFecTemp)
                nAnio = Year(dFecTemp)
            Else
                nMes = nMes + pnDeltaMes
                If nMes > 12 Then
                    nMes = nMes - 12
                    nAnio = nAnio + 1
                End If
                
                If nMes = 2 Then
                    If nDia > 28 Then
                        If nAnio Mod 4 = 0 Then
                            nDia = 29
                        Else
                            nDia = 28
                        End If
                    End If
                Else
                    If nDia > 30 Then
                        If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
                            nDia = 30
                        End If
                    End If
                End If
                
                If CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Trim(Str(nAnio)), "dd/mm/yyyy")) - dFecInicio < 5 Then
                   'MADM 201120218
                    nMes = nMes + pnDeltaMes
                    If nMes > 12 Then
                        nAnio = nAnio + 1
                        nMes = 1
                    End If
                    'END MADM
                End If
            End If
        End If
        '***
        
        If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
            If nDia = 31 Then
                nDia = 30
            End If
        End If
        If nMes = 2 Then
            If nDia >= 29 Then
                If nAnio Mod 4 = 0 Then 'si es biciesto
                    nDia = 29
                Else
                    nDia = 28
                End If
            End If
        End If

        dFecTemp = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Trim(Str(nAnio)), "dd/mm/yyyy"))
        
        If dFecTemp <= dFecInicio Then  '23-05-2006
            nProxMesTmp = True
        Else
            nProxMesTmp = False
        End If

        'Comentado Por MAVM
        'If pnProxMes Or nProxMesTmp Or pnDeltaMes = 6 Then
        '    nMes = nMes + pnDeltaMes
        'End If
        
        For i = 1 To pPlazo
            If nMes > 12 Then
                nMes = nMes - 12
                nAnio = nAnio + 1
            End If
            If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
                If nDia = 31 Then
                    nDia = 30
                End If
            End If
            If nMes = 2 Then
                If nDia >= 29 Then
                    If nAnio Mod 4 = 0 Then 'si es biciesto
                        nDia = 29
                    Else
                        nDia = 28
                    End If
                End If
            End If

            dFecVenc = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Format(nAnio, "0000"), "dd/mm/yyyy"))
            
            If i = 1 And pbMiViv Then
                dFecInicio = dFecInicio - pnDiasGracia
            End If
            nDiasTrans = dFecVenc - dFecInicio
            nValorActual = (1 / (1 + (nTasaDiaria / 100))) ^ (nDiasTrans)
            SumTotal = SumTotal + nValorActual
            nDia = pnDiaFijo
            nMes = nMes + pnDeltaMes
        Next i

        CFijaFechaFija = pnMonto / SumTotal
        
    End If
    
    CFijaFechaFija = CDbl(Format(CFijaFechaFija, "#0.00"))

End Function


'***********************************************
'*  FUNCION QUE HALLA EL INTERES DE UN PERIODO DE DIAS TRANACURRIDOS
'***********************************************
Public Function TasaIntPerDias(ByVal pnTasaInter As Double, ByVal pnDiasTrans As Integer) As Double
    
    TasaIntPerDias = ((1 + pnTasaInter / 100) ^ (pnDiasTrans / 30)) - 1
End Function

Public Function MontoIntPerDias(ByVal pnTasaInter As Double, ByVal pnDiasTrans As Integer, ByVal pnMonto As Double) As Double
    MontoIntPerDias = (((1 + pnTasaInter / 100) ^ (pnDiasTrans / 30)) - 1) * pnMonto
    MontoIntPerDias = CDbl(Format(MontoIntPerDias, "#0.00"))
End Function

Public Function MontoIntPersDiasQuincena(ByVal pnTasaMensual As Double, ByVal pnDiasTrans As Integer, ByVal pnMonto As Double) As Double
    Dim nTasaDiaria As Double
    Dim nTasaQuincenal As Double
    'Conviertiendo a tasaquincenal

    nTasaDiaria = ((1 + (pnTasaMensual / 100)) ^ (1 / 30) - 1) * 100
    nTasaQuincenal = ((1 + (nTasaDiaria / 100)) ^ (15) - 1)
    MontoIntPersDiasQuincena = Format(((1 + nTasaQuincenal) ^ (pnDiasTrans / 15) - 1) * pnMonto, "#0.00")
End Function
'*********************************************************
'FUNCION QUE HALLA LA CUOTA FIJA APARTIR DE LA TASA DE INTERES Y EL PLAZO
'*********************************************************
Public Function CuotaFija(ByVal pnTasa As Double, ByVal pnCuotas As Integer, ByVal pnMonto As Double, ByVal pnPeriodo As Double) As Double
Dim Pot1 As Double
Dim nTasaTmp As Double
    nTasaTmp = TasaIntPerDias(pnTasa, pnPeriodo)
'Obtengo la cuota de pago
    Pot1 = (1 + nTasaTmp) ^ pnCuotas
    CuotaFija = ((Pot1 * nTasaTmp) / (Pot1 - 1)) * pnMonto
    CuotaFija = CDbl(Format(CuotaFija, "#0.00"))
End Function

'*********************************************************
'FUNCION QUE HALLA EL PLAZO APROXIMADO PARA UNA CUOTA FIJA
'*********************************************************
Public Function PlazoDeCuotaFija(ByVal pnTasa As Double, ByVal pnCuotasMax As Integer, _
    ByVal pnMonto As Double, ByVal pnPeriodo As Double, ByVal pnCuotaObjetivo As Double) As Integer
Dim nCuotaTemp As Double
Dim nCuotaResult As Double
Dim nCuotaTemp2  As Double
Dim i As Integer
    For i = pnCuotasMax To 1 Step -1
        nCuotaTemp = CuotaFija(pnTasa, i, pnMonto, pnPeriodo)
        If nCuotaTemp <= pnCuotaObjetivo Then
            nCuotaResult = nCuotaTemp
            Exit For
        End If
    Next i
    If i = 0 Then
        PlazoDeCuotaFija = pnCuotasMax
    Else
        PlazoDeCuotaFija = i
    End If

End Function

'*****************************************************************************************

Public Function PlazoDeCuotaFijaPFDis(ByVal pnTasa As Double, ByVal pnCuotasMax As Integer, _
    ByVal pnMonto As Double, ByVal pnPeriodo As Double, ByVal pnCuotaObjetivo As Double, ByVal pnMontoPago As Double) As Integer
Dim nCuotaTemp As Double
Dim nCuotaResult As Double
Dim nCuotaTemp2  As Double
Dim i As Integer
    
    nCuotaTemp = pnCuotaObjetivo
    For i = pnCuotasMax To 1 Step -1
        If nCuotaTemp > pnMontoPago Then
            Exit For
        Else
            nCuotaTemp = nCuotaTemp + pnCuotaObjetivo
        End If
        
    Next i
    If i = 0 Then
        PlazoDeCuotaFijaPFDis = pnCuotasMax
    Else
        PlazoDeCuotaFijaPFDis = i
    End If
End Function

'marg ERS004-2017
Public Function PlazoDeCuotaFijaPFDis2(ByVal pnNewSaldoCapital As Double, ByVal pnCuotaObjetivo As Double) As Integer
'PlazoDeCuotaFijaPFDis2 = Fix(pnNewSaldoCapital / pnCuotaObjetivo) + 1
    
    '->***** LUCV20180530, Según Anexo 002 del Acta066-2018
    'PlazoDeCuotaFijaPFDis2 = Round(((pnNewSaldoCapital / pnCuotaObjetivo) + 1), 0)
    If (pnNewSaldoCapital / pnCuotaObjetivo) < 1 And (pnCuotaObjetivo > pnNewSaldoCapital) Then
        PlazoDeCuotaFijaPFDis2 = 1
    Else
        PlazoDeCuotaFijaPFDis2 = Fix(pnNewSaldoCapital / pnCuotaObjetivo) + 1
    End If
    '<-***** Fin LUCV20180530
End Function
'end marg

'FUNCION QUE HALLA EL NUMERO DE CUOTAS APROXIMADO MANTENER LA FECHA DE VENC. DEL CREDITO
'*****************************************************************************************
Public Function CuotasAproximada(ByVal pdHoy As Date, ByVal pdFecVenc As Date, _
    ByVal pnPeriodo As Integer, Optional ByVal pnDia As Integer = 0, Optional ByVal pbProxMes As Boolean = True) As Integer
Dim i As Integer
Dim nValor As Integer
Dim dFecHoy As Date
Dim dFecTemp As Date
Dim nMes, nAnio, nDia As Integer
Dim bProxMes As Boolean

    bProxMes = pbProxMes

    'If Day(pdHoy) <= pnDia Then
    '    bProxMes = True
    'Else
    '    bProxMes = False
    'End If
    If CInt((pdFecVenc - pdHoy) / IIf(pnPeriodo = 0, 30, pnPeriodo)) = 1 Then
        nValor = 1
    Else
        nValor = CInt((pdFecVenc - pdHoy) / IIf(pnPeriodo = 0, 30, pnPeriodo)) + 1
    End If
    dFecHoy = pdHoy
    CuotasAproximada = nValor

    If pnPeriodo = 0 Then
        dFecTemp = dFecHoy
            nMes = Month(pdHoy)
            nAnio = Year(pdHoy)
            nDia = pnDia

            For i = 0 To nValor - 1
                nDia = pnDia
                If Not (i = 0 And pnDia > Day(pdHoy) And (Not bProxMes)) Then
                    nMes = nMes + 1
                    If nMes > 12 Then
                        nAnio = nAnio + 1
                        nMes = 1
                    End If
                Else
                    If nMes = 2 Then
                        If nDia >= 29 Then
                            If nAnio Mod 4 <> 0 Then
                                nMes = nMes + 1
                            End If
                        End If
                    Else
                        If nDia > 30 Then
                            If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                nMes = nMes + 1
                            End If
                        End If
                    End If
                End If
                If nMes = 2 Then
                    If nDia > 28 Then
                        If nAnio Mod 4 = 0 Then
                            nDia = 29
                        Else
                            nDia = 28
                        End If
                    End If
                Else
                    If nDia > 30 Then
                        If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                            nDia = 30
                        End If
                    End If
                End If
                dFecTemp = CDate(Right("0" & Trim(Str(nDia)), 2) & "/" & Right("0" & Trim(Str(nMes)), 2) & "/" & Trim(Str(nAnio)))
                If dFecTemp > pdFecVenc Then

                    Exit For
                End If
                CuotasAproximada = i + 1
        Next i

    Else
        For i = nValor To 1 Step -1
            If DateAdd("d", i * pnPeriodo, dFecHoy) <= pdFecVenc Then
                CuotasAproximada = i
                Exit For
            End If
        Next i
    End If
End Function

Public Function PlazoDeCuotaFijaFechaFija(ByVal pnCuotaObjetivo As Double, ByVal pTasa As Double, ByVal pPlazo As Integer, ByVal pnMonto As Double, _
    ByVal pnPer As Double, ByVal pdFecDes As Date, ByVal pnDiaFijo As Integer, _
    ByVal pnDiasGracia As Integer, ByVal pnProxMes As Integer, Optional pnDeltaMes As Integer = 1) As Integer

Dim nCuotaTemp As Double
Dim nCuotaResult As Double
Dim i As Integer
Dim nCuota As Double
    nCuota = 0
    For i = pPlazo To 1 Step -1
        nCuotaTemp = CFijaFechaFija(pTasa, i, pnMonto, pnPer, pdFecDes, pnDiaFijo, pnDiasGracia, pnProxMes, pnDeltaMes)
        If i = pPlazo Then
            nCuota = nCuotaTemp
        End If
        If nCuotaTemp > pnCuotaObjetivo Then
            nCuotaResult = nCuota
            Exit For
        End If
        nCuota = nCuotaTemp
    Next i
    PlazoDeCuotaFijaFechaFija = i + 1

End Function

Public Function PorcentajeCuotaCredConsumo(ByVal psConsCuotaCredConsumo As String) As Double
Dim oConecta As COMConecta.DCOMConecta
Dim sSql As String
Dim R As ADODB.Recordset

    On Error GoTo ErrorPorcentajeCuotaCredConsumo
    sSql = "Select nParamValor from ColocParametro Where nParamVar = " & psConsCuotaCredConsumo
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set R = oConecta.CargaRecordSet(sSql)
    If Not R.BOF And Not R.EOF Then
        PorcentajeCuotaCredConsumo = R!nParamValor / 100
    Else
        PorcentajeCuotaCredConsumo = 0
    End If
    oConecta.CierraConexion
    Set oConecta = Nothing
    R.Close
    Set R = Nothing
    Exit Function

ErrorPorcentajeCuotaCredConsumo:
    Set oConecta = Nothing
    Set R = Nothing
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function


'CMACICA_CSTS - 26/11/2003 - ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Public Function ValidaCuotaParaTipoCredito(ByVal pnMonedaCod As Integer, ByVal pnMontoCuota As Double, ByVal pnMonedaFteCod As Integer, ByVal pnMontoIngCliFte As Double, ByVal pnValor As Double, ByVal pdFecha As Date) As String
Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nTipoCambioFijo As Double
Dim nMontoMN As Double
Dim nMontoME As Double
Dim nMontoIngCliFte As Double

    On Error GoTo ErrorValidaCuotaParaTipoCredito

    nMontoME = 0
    nMontoMN = 0
    ValidaCuotaParaTipoCredito = ""

    Set oGeneral = New COMDConstSistema.DCOMGeneral
    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdFecha, TCFijoMes)
    nTipoCambioFijo = CDbl(Format(nTipoCambioFijo, "#0.00"))
    Set oGeneral = Nothing

    'Moneda de la Fte de Ingreso
    If pnMonedaFteCod = COMDConstantes.gMonedaNacional Then  'Moneda Nacional '
       nMontoMN = pnMontoIngCliFte
       nMontoMN = CDbl(Format(nMontoMN, "#0.00"))

       nMontoME = nMontoME + (nMontoMN / nTipoCambioFijo)
    Else 'Moneda Extrangera '
       nMontoME = nMontoME + CDbl(Format(pnMontoIngCliFte, "#0.00"))
       nMontoMN = nMontoMN + (nMontoME * nTipoCambioFijo)
    End If

    'Moneda del Prestamo
    If pnMonedaCod = COMDConstantes.gMonedaNacional Then
        nMontoIngCliFte = 0
        If nMontoMN > 0 Then
            nMontoIngCliFte = nMontoIngCliFte + nMontoMN
        End If
    End If

    If pnMonedaCod = COMDConstantes.gMonedaExtranjera Then
        nMontoIngCliFte = 0
        If nMontoME > 0 Then
            nMontoIngCliFte = nMontoIngCliFte + nMontoME
        End If
    End If

    'Verifica la Condicion
    If pnMontoCuota > Format(pnValor * nMontoIngCliFte, "#0.00") Then
       ValidaCuotaParaTipoCredito = "Monto de Cuota No Puede Ser Mayor que  el " & Format(pnValor * 100, "#0.00") & "% del Sueldo Neto del Cliente para este Tipo de Crédito"
    End If

    Exit Function

ErrorValidaCuotaParaTipoCredito:
        Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function
' -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


 Public Function ValidaDatosGarantiaCredito(ByVal pnMonto As Double, ByVal pnMontoDisponible As Double) As String

    ValidaDatosGarantiaCredito = ""
    'Valida Existencia de Disponible
    If pnMontoDisponible = 0 Then
        ValidaDatosGarantiaCredito = "No Existe Disponible para Esta Garantia"
        Exit Function
    End If
    'Valida que Monto del Gravament no Exeda al Disponible
    If pnMonto > pnMontoDisponible Then
        ValidaDatosGarantiaCredito = "Monto de Garantia No debe Exeder al Disponible"
        Exit Function
    End If

 End Function

Public Function ValidaGrabarDesembolso(ByVal psCtaCod As String, Optional ByVal pnPrestamo As Double, Optional ByVal pbDesembCC As Boolean, Optional ByVal psCtaAbo As String, Optional ByVal pbCtaAhoNueva As Boolean = False, _
                                        Optional ByVal pbDesembInfoGas As Boolean = False) As String
                                        'BRGO 20111111 - Se agregó el parámetro pbDesembInfoGas
Dim oBase As COMDCredito.DCOMCredActBD
Dim oCredito As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim sCodLinea As String

    On Error GoTo ErrorValidaGrabarDesembolso
    ValidaGrabarDesembolso = ""
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    Set oCredito = Nothing
    sCodLinea = R!cLineaCred
    R.Close
    Set R = Nothing

'    Set oBase = New COMDCredito.DCOMCredActBD
'    Set R = oBase.RecuperaLineasCreditoSaldo(sCodLinea)
'    Set oBase = Nothing
'
'    If R.BOF And R.EOF Then
'        ValidaGrabarDesembolso = "Falta definir los saldos de la Linea de Credito, Consulte con Caja General"
'        R.Close
'        Set R = Nothing
'        Exit Function
'    End If
'    R.Close
'    Set R = Nothing

    If pnPrestamo <= 0 Then
        ValidaGrabarDesembolso = "Monto de Prestamo debe ser mayor que cero"
        Exit Function
    End If

    If (pbDesembCC Or pbDesembInfoGas) And Not pbCtaAhoNueva Then 'BRGO 20111111
        If Trim(psCtaAbo) = "" Then
            ValidaGrabarDesembolso = "Falta seleccionar la Cuenta de Ahorro a la que se va a depositar el Desembolso"
            Exit Function
        End If
    End If
    Exit Function

ErrorValidaGrabarDesembolso:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function
Private Function DameTipoCuota(ByVal pnTipoCuota As Integer) As Integer
        If pnTipoCuota = gColocCalendCodFFCC Or pnTipoCuota = gColocCalendCodFFCCPG Or pnTipoCuota = gColocCalendCodPFCC Or pnTipoCuota = gColocCalendCodPFCCPG Then
            DameTipoCuota = 2
        End If
        If pnTipoCuota = gColocCalendCodFFCF Or pnTipoCuota = gColocCalendCodFFCFPG Or pnTipoCuota = gColocCalendCodPFCF Or pnTipoCuota = gColocCalendCodPFCFPG Then
            DameTipoCuota = 1
        End If
        If pnTipoCuota = gColocCalendCodFFCD Or pnTipoCuota = gColocCalendCodFFCDPG Or pnTipoCuota = gColocCalendCodPFCD Or pnTipoCuota = gColocCalendCodPFCDPG Then
            DameTipoCuota = 3
        End If
End Function

Private Function DameTipoPeriodo(ByVal pnTipoPeriodo As Integer) As Integer
    If pnTipoPeriodo = gColocCalendCodFFCC Or pnTipoPeriodo = gColocCalendCodFFCCPG Or pnTipoPeriodo = gColocCalendCodFFCD Or pnTipoPeriodo = gColocCalendCodFFCCPG _
          Or pnTipoPeriodo = gColocCalendCodFFCCPG Or pnTipoPeriodo = gColocCalendCodFFCD Or pnTipoPeriodo = gColocCalendCodFFCDPG Or pnTipoPeriodo = gColocCalendCodFFCF Or pnTipoPeriodo = gColocCalendCodFFCFPG Then
            DameTipoPeriodo = 2
        End If
        If pnTipoPeriodo = gColocCalendCodPFCC Or pnTipoPeriodo = gColocCalendCodPFCCPG Or pnTipoPeriodo = gColocCalendCodPFCD Or pnTipoPeriodo = gColocCalendCodPFCCPG _
          Or pnTipoPeriodo = gColocCalendCodPFCCPG Or pnTipoPeriodo = gColocCalendCodPFCD Or pnTipoPeriodo = gColocCalendCodPFCDPG Or pnTipoPeriodo = gColocCalendCodPFCF Or pnTipoPeriodo = gColocCalendCodPFCFPG Then
            DameTipoPeriodo = 1
        End If
End Function

Public Function DesembolsarCredito(ByRef pnMovNro As Long, ByRef pMatDatosAho As Variant, ByVal psCtaCod As String, ByVal pnPrestamo As Double, ByVal pnMontoDesembolso As Double, _
        ByVal pMatGastos As Variant, ByVal MatCargoAutom As Variant, ByVal pdHoy As Date, ByVal psCodAge As String, psCodUser As String, _
        ByVal pbDesembCC As Boolean, Optional ByVal pbCtaAhoNueva As Boolean = False, _
        Optional ByVal MatCredCanc As Variant = Nothing, Optional ByVal pnContMatCredCanc As Integer = -1, Optional ByVal psCtaAbo As String = "", _
        Optional ByVal pRSRela As ADODB.Recordset = Nothing, Optional ByVal pnTasa As Double = 0#, Optional ByVal pnPersoneria As Integer = 0, _
        Optional ByVal pnTipoCuenta As Integer = 0, Optional ByVal pnTipoTasa As Integer = 0, Optional ByVal pbDocumento As Boolean = False, _
        Optional ByVal psNroDoc As String = "", Optional ByVal psCodIF As String = "", _
        Optional ByVal pnMontoGastos As Double = 0#, Optional ByVal pnMontoCancelaciones As Double = 0#, Optional psPersLavDinero As String = "", _
        Optional ByVal pnITF As Double = 0#, _
        Optional pbITFAplica As Boolean = True, Optional pnITFAbono As Double = 0, Optional pnITFGasto As Double = 0, Optional pnITFCancelacion As Double = 0, Optional pbITFAsumido As Boolean = False, _
        Optional psItfOperacion As String = "", _
        Optional ByVal psProyectoActual As String = "", Optional ByVal pvbDesembCheque As Boolean = False, Optional ByVal psBanco As String = "", Optional ByVal psNumCheque As String = "", Optional ByVal psCtaBco As String = "", Optional ByRef psCtaAboR As String, _
        Optional ByVal pMatDatosAhoNew As Variant = "", Optional ByVal pnMontoPoliza As Double = 0, Optional psVisLavDinero As String = "", _
        Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", Optional ByVal psTpoCredCod As String = "", Optional ByVal lnDescripCuota As Variant = "", _
        Optional ByVal pbDesembInfoGas As Boolean = False, Optional ByVal rsEmpRel As ADODB.Recordset = Nothing, Optional ByRef pMatDatosAhoEmp As Variant = Nothing, Optional ByVal psProveedorLeasing As Variant = "", Optional ByVal psCuotaInicialLeasing As Variant = "", Optional ByRef pMatDatosAho2 As Variant = "", _
        Optional ByVal pnMontoRetirar As Double = 0#, Optional ByVal psGlosaBloqueo As String = "", Optional ByRef pMatCuentaGastoCierre As Variant = "") As String
        'DAOR 20070511,psVisLavDinero
        'BRGO 20111111 - Se agregó parámetros pbDesembInfoGas, rsEmpRel para el producto Ecotaxi
        'FRHU 20140228 RQ14006 - Se agregó el parametro pnMontoRetirar y psGlosaBloqueo
        
'Se agregaron los campos
'psAgeCodAct psTpoProdCod psTpoCredCod
'para el proyecto de basilea II
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
'Dim oCredIntCont As COMDCredito.DCOMCredito 'VAPA 20171116 FROM 60 Comentado by NAGL 20180609
Dim oDLeasing As COMDCredito.DCOMleasing
'Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim oBase As COMDCredito.DCOMCredActBD
Dim oLinea As COMDCredito.DCOMLineaCredito
Dim oCalend As NCOMCalendario
Dim oDCalend As COMDCredito.DCOMCalendario
Dim oGastos As NCOMGasto
Dim sLineaCod As String
'Dim nMontoReservado As Double
'Dim nMontoColocado As Double
Dim MatCalendPagos As Variant
Dim MatCalendPagos_2 As Variant
Dim MatGracia As Variant
Dim nPeriodoGracia As Integer
Dim nTasaInteres As Double
Dim nNroCalen As Integer
Dim nNroProxDesemb As Integer
Dim nCuotaCom As Integer
Dim nMiViv As Integer
Dim i As Integer
Dim MatGastos As Variant
Dim MatDesemb() As String
Dim ContDesemb As Integer
'Dim MatGastosDesemb(1000, 3) As String
'Dim ContGastosDesemb As Integer
Dim nNumGastos As Integer
Dim nNumTransac As Long
Dim sMovNro As String
Dim nMovNro As Long
Dim nMovNroAnt As Long
Dim nConsCred As String
Dim sMetLiquid As String
Dim bTransac As Boolean
Dim MatDesParcial As Variant

'Para MiVivienda
Dim oParam As COMDCredito.DCOMParametro
Dim nTramoNoConsMonto As Double
Dim nTramoConsMonto As Double
Dim nTramoNoConsPorcen As Double
'Dim nTramoConsTasa As Double
Dim nMontoGarantia As Double
Dim oGar As COMDCredito.DCOMGarantia
Dim nCuotaTemp As String
Dim dFecTran As Date

'Para Cancelacion de Creditos
Dim MatCalendTemp As Variant
Dim MatCalendDistrTemp As Variant
Dim sMetLiqTmp As String
Dim RTmp As ADODB.Recordset
Dim MatRSCancel() As ADODB.Recordset
Dim MatRSCancelCalPend() As Variant
Dim RCalendActual As ADODB.Recordset
Dim RCalendDesembActual As ADODB.Recordset
Dim RColocCalendDesembActual As ADODB.Recordset

'Para Apertura de Cuenta de Ahorros
Dim sCtaApe As String
Dim nMivivMontoCondonadoCapital As Double
Dim nMivivMontoCondonadoInteres As Double
Dim sTipoGasto As String
Dim sConsAhoRetGas As String
Dim sConsAhoRetCan As String

Dim bAmpliado As Boolean
Dim oAmpliado As COMDCredito.DCOMAmpliacion
Dim oITF As COMDConstSistema.FCOMITF

Dim sOpeCodItfAbonoCuenta As String
Dim bAbonoCuenta As Boolean
'Dim bAbonoCtaVinculados As Boolean 'BRGO 20111109

Dim sEstadoCreditoParcial As String
Dim oDCred As COMDCredito.DCOMCredito
Dim nDias As Integer
Dim nPeriodo As Integer
Dim sSql As String

'ALPA 20111020 **********************************
Dim sMovNroOP As String
Dim clsMovOP As COMNCredito.NCOMLeasing
Dim oCredLeasing As COMDCredito.DCOMleasing
Dim oRsDLeasing As ADODB.Recordset
Dim lsPersCodLeasing As String
Dim lsPersNombreLeasing As String
Dim nMovNroLeasing As Long
'************************************************

'**DAOR 20070413*********************************
Dim rPlzFjoGar As ADODB.Recordset
Dim sMovNroBloq As String
Dim nMovNroBloq As Long
Dim sOperacionBloq As String
'************************************************
Dim lnCuotaBalon As Integer 'WIOR 20131111
'MAVM 20130209 ***
Dim nMontoGra As Double
'***
Dim nDatoVivienda As Integer 'JUEZ 20140122
'ALPA 20140312
Dim oCred As COMDCredito.DCOMCredito
Dim RGar As ADODB.Recordset
Dim nPolizaBF As Integer
Dim dFechaPBF As Date
'***************
Dim pnMontoMivivienda As Currency
Dim nMovNroITFEliminarCancel As Long 'EJVG20140922
Dim pnCuotaMivivienda As Integer 'ALPA 20141223
'WIOR 20140826 ***************************
Dim MatCalendSegDes As Variant
ReDim MatCalendSegDes(4, 0)
Dim R2 As ADODB.Recordset
'WIOR FIN ****************-****************
'VAPA 20171116 FROM 60******Comentado by NAGL 20180609*****
'Dim sMovNroIntDif As String
'Dim lnMontoIntDif As Double
'Dim R3 As ADODB.Recordset
'Dim nMovNroInt As Long
'Dim lsCredsCancelar As String
'VAPA END from 60 ****************END NAGL 20180609*********
Dim nTipoPeriodo As Integer 'APRI20171024 CORREO20171014
Dim nCondicionCred As Integer 'LUCV20180601, Según ERS022-2018
Dim bEsReactiva As Boolean 'RIRO 20200611
Dim nTipoBienFuturo As Integer 'CTI50012021
Dim bAperturaGastoCierre As Boolean 'CTI520210408
Dim nMontoGastoCierre As Double

        On Error GoTo ErrorDesembolsarCredito
        
        bAperturaGastoCierre = (psTpoProdCod = "802" Or psTpoProdCod = "806") And IsArray(pMatCuentaGastoCierre)
        
        nMontoGastoCierre = 0
        If (bAperturaGastoCierre) Then
            nMontoGastoCierre = pMatCuentaGastoCierre(7)
        End If
        
        'ALPA20140312
        Set oCred = New COMDCredito.DCOMCredito
        Set RGar = New ADODB.Recordset
        Set RGar = oCred.RecuperaGarantiasCredito(psCtaCod)
        
        ' RIRO 20200611 ***********
        bEsReactiva = False
        bEsReactiva = oCred.EsReactiva(psCtaCod)
        ' END RIRO ****************
        
        If RGar!nPolizaBF = 1 Then
            nPolizaBF = 1
            dFechaPBF = Format(RGar!dFechaPBF)
        Else
            nPolizaBF = 0
            dFechaPBF = "01/01/1900"
        End If
        nTipoBienFuturo = RGar!nTpoBienContrato 'CTI5ERS0012021
        Set oCred = Nothing
        '*************************
        nMontoGra = 0 'MAVM 20130209
        'MADM 20110526 - 20110408
        Dim sMensFecAprob As String
        sMensFecAprob = DevolverFechaAprobacion(psCtaCod)
        'END MADM
        
        bAbonoCuenta = False
        
        Set oITF = New COMDConstSistema.FCOMITF
        
        oITF.fgITFParametros
        
        Set oDCred = New COMDCredito.DCOMCredito
        sEstadoCreditoParcial = CStr(oDCred.RecuperaEstadoCredito(psCtaCod))
        Set oDCred = Nothing
        
        Set oAmpliado = New COMDCredito.DCOMAmpliacion
        bAmpliado = oAmpliado.ValidaCreditoaAmpliar(psCtaCod)
        Set oAmpliado = Nothing
        
        If bAmpliado = True Then
            Set oAmpliado = New COMDCredito.DCOMAmpliacion
            Call oAmpliado.ActualizandoGarantiasAmpliadas(psCtaCod)
            Set oAmpliado = Nothing
        End If
        'ALPA 20111209*******************************************************
        '**ARLO20180712 ERS042 - 2018
        Set objProducto = New COMDCredito.DCOMCredito
        If objProducto.GetResultadoCondicionCatalogo("N0000102", Mid(psCtaCod, 6, 3)) Then
        'If (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
        '**ARLO20180712 ERS042 - 2018
            Set oCredLeasing = New COMDCredito.DCOMleasing
            Set oRsDLeasing = New ADODB.Recordset
            Set oRsDLeasing = oCredLeasing.RecuperaDatosClienteLeasing(psCtaCod)

            Do While Not oRsDLeasing.EOF
                If oRsDLeasing("nPrdPersRelac") = 20 Then
                    lsPersCodLeasing = oRsDLeasing("cPersCod")
                    lsPersNombreLeasing = oRsDLeasing("cPersNombre")
                End If
            oRsDLeasing.MoveNext
            Loop

            Set clsMovOP = New COMNCredito.NCOMLeasing
            sMovNroOP = clsMovOP.GeneraMovNro(pdHoy, psAgeCodAct, psCodUser)
            Set clsMovOP = Nothing
            Sleep (1000)
        End If
        '*********************************************************************
        
        'inicializa Datos de Ahorros
        pMatDatosAho(0) = "" 'Cuenta de Ahorros
        pMatDatosAho(1) = "0.00" 'Monto de Apertura
        pMatDatosAho(2) = "0.00" 'Interes Ganado de Abono
        pMatDatosAho(3) = "0.00" 'Interes Ganado de Retiro Gastos
        pMatDatosAho(4) = "0.00" 'Interes Ganado de Retiro Cancelaciones
        pMatDatosAho(5) = "0.00" 'Monto de Abono
        pMatDatosAho(6) = "0.00" 'Monto de Retiro de Gastos
        pMatDatosAho(7) = "0.00" 'Monto de Retiro de Cancelaciones
        pMatDatosAho(8) = "0.00" 'Saldo Disponible Abono
        pMatDatosAho(9) = "0.00" 'Saldo Contable Abono
        pMatDatosAho(10) = "0.00" 'Saldo Disponible Retiro de Gastos
        pMatDatosAho(11) = "0.00" 'Saldo Contable Retiro de Gastos
        pMatDatosAho(12) = "0.00" 'Saldo Disponible Retiro de Cancelaciones
        pMatDatosAho(13) = "0.00" 'Saldo Contable Retiro de Cancelaciones
        pMatDatosAho(14) = "0.00" 'Monto de Retiro Efectivo 'FRHU20140228 RQ14006
        pMatDatosAho(15) = "0.00" 'Saldo Disponible Retiro Efectivo 'FRHU20140228 RQ14006
        pMatDatosAho(16) = "0.00" 'Saldo Contable Retiro Efectivo 'FRHU20140228 RQ14006
        pMatDatosAho(17) = "0.00" 'Interes Ganado Retiro Efectivo 'FRHU20140228 RQ14006

        bTransac = False
        'Valida datos antes de Desembolsar
        DesembolsarCredito = ValidaGrabarDesembolso(psCtaCod, pnPrestamo, pbDesembCC, psCtaAbo, pbCtaAhoNueva, pbDesembInfoGas)
        If DesembolsarCredito <> "" Then
            Exit Function
        End If
        
        If pbDesembCC Then
            If pbCtaAhoNueva Then
                'If Mid(psCtaAbo, 4, 2) <> psCodAge Then 'Cuenta de Otra Age
                '    nConsCred = gCredDesembCtaNuevaDOA
                'Else
                    nConsCred = gCredDesembCtaNueva
                    sConsAhoRetGas = gCredDesembCtaRetiroGastos
                    sConsAhoRetCan = gCredDesembCtaRetiroCancelacion
                'End If
            Else
                ''*** PEAC 20090514 ****** ESTO SOLUCIONA CUANDO SE GENERA EL ASIENTO EN DONDE EL
                ''*** COD.DE OPE. DEBE SER DE ACUERDO A LA AGENCIA DEL CREDITO
                'If Mid(psCtaAbo, 4, 2) <> psCodAge Then 'Cuenta de Otra Age
                'ALPA 20100610 B2**************************************************************
                'If Mid(psCtaAbo, 4, 2) <> Mid(psCtaCod, 4, 2) Then 'Cuenta de Otra Age
                If Mid(psCtaAbo, 4, 2) <> psAgeCodAct Then 'Cuenta de Otra Age
                '******************************************************************************
                ''************************
                    nConsCred = gCredDesembCtaExistDOA
                    sConsAhoRetGas = gCredDesembCtaRetiroGastosDOA
                    sConsAhoRetCan = gCredDesembCtaRetiroCancelacionDOA
                Else
                    nConsCred = gCredDesembCtaExist
                    sConsAhoRetGas = gCredDesembCtaRetiroGastos
                    sConsAhoRetCan = gCredDesembCtaRetiroCancelacion
                End If
            End If
            'RIRO 20200611 ****
            If bEsReactiva Then
                sConsAhoRetGas = IIf(bEsReactiva, "100949", gCredDesembCtaRetiroGastos) 'RIRO20200611
            End If
            'END RIRO *********
            bAbonoCuenta = True
            sOpeCodItfAbonoCuenta = "990108"
        Else
            If pvbDesembCheque Then
                nConsCred = gCredDesembCheque
            Else
                nConsCred = gCredDesembEfec
            End If
            
        End If
        'ALPA 20111209*********************
        '**ARLO20180712 ERS042 - 2018
        Set objProducto = New COMDCredito.DCOMCredito
        If objProducto.GetResultadoCondicionCatalogo("N0000103", Mid(psCtaCod, 6, 3)) Then
        'If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
        '**ARLO20180712 ERS042 - 2018
            nConsCred = gCredDesembLeasing
        End If
        '**********************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocaciones(psCtaCod)
        sLineaCod = R!cLineaCred
        pnMontoMivivienda = IIf(IsNull(R!nMontoMiVivienda), 0, R!nMontoMiVivienda) 'ALPA20140612
        pnCuotaMivivienda = IIf(IsNull(R!nCuotaPolizaMivivienda), 0, R!nCuotaPolizaMivivienda) 'ALPA20141223
        R.Close
        Set R = Nothing

        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        sTipoGasto = R!cTipoGasto

        'MAVM 20130209 ***
        If R.RecordCount <> 0 Then
            If R!nTipoGracia = 6 Then nMontoGra = MontoIntPerDias(R!nTasaGracia, R!nPeriodoGracia, pnPrestamo)
        End If
        '***
        R.Close
        Set R = Nothing

        Set R = oCredito.RecuperaProducto(psCtaCod)
        nTasaInteres = Format(R!nTasaInteres, "#0.0000")
        nNumTransac = IIf(IsNull(R!nTransacc), 0, R!nTransacc)
        R.Close
        Set R = Nothing
        Set R = oCredito.RecuperaColocacCred(psCtaCod)
        'Manejo de Operaciones VAC
        Dim bVAC As Boolean
        Dim nPreParaAmpliacion As Integer 'ALPA20150408
        bVAC = IIf(IsNull(R!bVAC), False, R!bVAC)
        '**********************
        nNroCalen = R!nNroCalen
        nNroProxDesemb = R!nNroProxDesemb
        sMetLiquid = R!cMetLiquidacion
        nCuotaCom = R!bCuotaCom
        nMiViv = R!bMiVivienda
        lnCuotaBalon = IIf(IsNull(R!nCuotaBalon), 0, R!nCuotaBalon) 'WIOR 20131111
        nCondicionCred = IIf(IsNull(R!nColocCondicion), 0, R!nColocCondicion) 'LUCV20180601, Según ERS022-2018
        
        'WIOR 20151224 - COMENTO
        '        If nMiViv = 1 Then
        '            nNroCalen = R!nNroCalPar
        '        End If
        
        'MAVM 03112009 ***
        Dim nExoSegDes As Integer
        If R!nExoSeguroDes = 1 Then
        nExoSegDes = R!nExoSeguroDes
        End If
        nDatoVivienda = IIf(IsNull(R!nDatoVivienda), 0, R!nDatoVivienda) 'JUEZ 20140122
        'APRI20180821 ERS061-2018
        Dim nExoSegMYPE As Integer
        If R!nExoSegMYPE Then
            nExoSegMYPE = 1
        End If
        'END APRI
        '***
        R.Close
        Set R = Nothing
        Set oCredito = Nothing


        Set oBase = Nothing
        Set oBase = New COMDCredito.DCOMCredActBD
        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)

        'Recupera Calendario de Desembolsos
        ContDesemb = 0
        Set oDCalend = New COMDCredito.DCOMCalendario
        Set R = oDCalend.RecuperaCalendarioDesemb(psCtaCod)
        
        Do While Not R.EOF
            ContDesemb = ContDesemb + 1
            R.MoveNext
        Loop
        If ContDesemb > 0 Then
            ReDim MatDesemb(ContDesemb, 3)
            ContDesemb = 0
            R.MoveFirst
            Do While Not R.EOF
                ContDesemb = ContDesemb + 1
                If R!ncoloccalendestado = 1 Then
                    MatDesemb(ContDesemb - 1, 0) = Format(R!dPago, "dd/mm/yyyy")
                Else
                    MatDesemb(ContDesemb - 1, 0) = Format(R!dVenc, "dd/mm/yyyy")
                End If
                MatDesemb(ContDesemb - 1, 1) = Format(R!nCapital, "#0.00")
                MatDesemb(ContDesemb - 1, 2) = Format(R!dVenc, "dd/mm/yyyy")
                R.MoveNext
            Loop
        End If
        R.Close
        MatDesParcial = MatDesemb

        'Actualiza MatDesembolsos
        If ContDesemb > 1 Then
            For i = 0 To UBound(MatDesParcial) - 1
                If i = nNroProxDesemb - 1 Then
                    MatDesParcial(i, 0) = Format(pdHoy, "dd/mm/yyyy")
                Else
                    If i > nNroProxDesemb - 1 Then
                        MatDesParcial(i, 1) = "0.00"
                    End If
                End If
            Next i

        End If

        Set R = Nothing

'        Set RCalendActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota)
'        Set RCalendDesembActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
'        Set RColocCalendDesembActual = oDCalend.RecuperaColocCalendario(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
'        Set oDCalend = Nothing
        'ALPA 20110607*****************************************************
        '**ARLO20180712 ERS042 - 2018
        Set objProducto = New COMDCredito.DCOMCredito
        If objProducto.GetResultadoCondicionCatalogo("N0000104", Mid(psCtaCod, 6, 3)) Then
        'If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
        '**ARLO20180712 ERS042 - 2018
            Set oDLeasing = New COMDCredito.DCOMleasing
            Set RCalendActual = oDLeasing.RecuperaColocCalendDetLeasing(psCtaCod, nNroCalen, gColocCalendAplCuota)
            Set RCalendDesembActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
            Set RColocCalendDesembActual = oDLeasing.RecuperaColocCalendarioLeasing(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
            Set oDLeasing = Nothing
            Set oDCalend = Nothing
        Else
            Set RCalendActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota)
            Set RCalendDesembActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
            Set RColocCalendDesembActual = oDCalend.RecuperaColocCalendario(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
            Set oDCalend = Nothing
        End If
        '********************************************************************
        'Verificando si tiene un calendario de tipo Directores y Trabajadores
        '********************************************************************
        Dim oCalendX As COMDCredito.DCOMCalendario
        Dim bQuincenal As Boolean

        Set oCalendX = New COMDCredito.DCOMCalendario
        bQuincenal = oCalendX.VerificaCalendQuincenal(psCtaCod)
        Set oCalendX = Nothing

        '********************************************************************
        'Genera Nuevo Calendario
        '********************************************************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        Set oCredito = Nothing
        
        '->***** LUCV20180601, Agregó según ERS022-2018
        nTasaSegDes = ObtenerTasaSeguroDesg(psCtaCod, pdHoy, nCantAfiliadosSegDes)
        
        Dim nMontoPoliza As Double
        Dim nTasaSegInc As Double
        Dim oNGasto As COMNCredito.NCOMGasto
        Set oNGasto = New COMNCredito.NCOMGasto
        nMontoPoliza = 0

        nMontoPoliza = oNGasto.RecuperaMontoPoliza(psCtaCod, _
                                                   CInt(R!nCuotas), _
                                                   gColocConceptoCodGastoPolizaIncendioHipoteca, _
                                                   nTasaSegInc, _
                                                   IIf(nCondicionCred = "3", True, False))
        '<-***** Fin LUCV20180601
        
        If R!nColocCalendCod <> gColocCalendCodCL Then
            Set oCalend = New NCOMCalendario
            nPeriodoGracia = IIf(IsNull(R!nPeriodoGracia), 0, R!nPeriodoGracia)
                       
            If nPeriodoGracia > 0 Then
                MatGracia = oCalend.GeneraGracia(R!nTipoGracia, CDbl(Format(TasaIntPerDias(nTasaInteres, nPeriodoGracia) * pnPrestamo, "#0.00")), R!nCuotas)
            End If

            'WIOR 20151223 - COMENTO
            '            If nMiViv = 1 Then
            '
            '                'Porcentaje Real sin dividir enter 100
            '                Set oParam = New COMDCredito.DCOMParametro
            '                'MAVM 20120402 ***
            '                'nTramoNoConsPorcen = oParam.RecuperaValorParametro(gColocMiVivTramo)
            '                'ALPA 20140511****************************************************
            '                If pnMontoMivivienda > oParam.RecuperaValorParametro(2001) * 50 Then
            '                        nTramoNoConsPorcen = oParam.RecuperaValorParametro(gColocMiVivBonoBuenPagador2)
            '                Else
            '                        nTramoNoConsPorcen = oParam.RecuperaValorParametro(gColocMiVivBonoBuenPagador)
            '                End If
            '                '*****************************************************************
            '                '***
            '                Set oParam = Nothing
            '
            '                'MAVM 20120401 ***
            '                'nTramoNoConsMonto = Format((nTramoNoConsPorcen / 100) * pnPrestamo, "#0.00")
            '                nTramoNoConsMonto = Format(nTramoNoConsPorcen, "#0.00")
            '                '***
            '
            '                nTramoConsMonto = Format(pnPrestamo - nTramoNoConsMonto, "#0.00")
            '                MatCalendPagos = oCalend.GeneraCalendario(nTramoConsMonto, nTasaInteres, R!nCuotas, _
            '                             R!nPlazo, pdHoy, DameTipoCuota(R!nColocCalendCod), DameTipoPeriodo(R!nColocCalendCod), _
            '                            IIf(IsNull(R!nTipoGracia), 0, R!nTipoGracia), nPeriodoGracia, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), _
            '                            IIf(R!nProxMes = 0, False, True), MatGracia, True)
            '                MatCalendPagos_2 = oCalend.GeneraCalendario(nTramoNoConsMonto, nTasaInteres, R!nCuotas / 6, _
            '                            180, pdHoy, Fija, FechaFija, _
            '                            Exonerada, 0, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), IIf(R!nProxMes = 0, False, True), MatGracia, True, , , , 6)
            '                MatCalendPagos_2 = UnirMatricesMiVivienda(MatCalendPagos, MatCalendPagos_2, pnPrestamo)
            '                nCuotaTemp = CDbl(MatCalendPagos_2(7, 2))
            '                MatCalendPagos_2 = DiferencialMatricesMiVivienda(MatCalendPagos, MatCalendPagos_2)
            '            Else
                If ContDesemb > 1 Then
                    Set oDCalend = New COMDCredito.DCOMCalendario
                        nDias = oDCalend.ObtenerDiasPeriodoParcial(psCtaCod, pdHoy)
                    Set oDCalend = Nothing
                    If nDias > 0 Then
                       nPeriodo = R!nPlazo - nDias
                    Else
                       nPeriodo = R!nPlazo
                    End If
                Else
                       nPeriodo = R!nPlazo
                End If
                
                nTipoPeriodo = DameTipoPeriodo(R!nColocCalendCod)  'APRI20171024 CORREO20171014
                
'                MatCalendPagos = oCalend.GeneraCalendario(pnPrestamo, nTasaInteres, R!nCuotas, R!nPlazo, _
'                    pdHoy, DameTipoCuota(R!nColocCalendCod), DameTipoPeriodo(R!nColocCalendCod), _
'                    IIf(IsNull(R!nTipoGracia), 0, R!nTipoGracia), nPeriodoGracia, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), _
'                    IIf(R!nProxMes = 0, False, True), MatGracia, True, IIf(nCuotaCom = 1, True, False), IIf(ContDesemb > 1, True, False), MatDesParcial, , , bQuincenal)

    
                'Modificacion de LMMD por Desembolsos parciales
                MatCalendPagos = oCalend.GeneraCalendario(pnPrestamo, nTasaInteres, R!nCuotas, nPeriodo, _
                    pdHoy, DameTipoCuota(R!nColocCalendCod), nTipoPeriodo, IIf(IsNull(R!nTipoGracia), 0, R!nTipoGracia), _
                    nPeriodoGracia, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), IIf(R!nProxMes = 0, False, True), _
                    MatGracia, True, IIf(nCuotaCom = 1, True, False), IIf(ContDesemb > 1, True, False), MatDesParcial, , , bQuincenal, _
                    IIf(IsNull(R!bGraciaEnCuotas), False, R!bGraciaEnCuotas), IIf(IsNull(R!nTasaGracia), 0, R!nTasaGracia), _
                    IIf(IsNull(R!nPeriodoFechaFija2), 0, R!nPeriodoFechaFija2), , , psCtaCod, sMensFecAprob, lnDescripCuota, nMontoGra, _
                    "N", lnCuotaBalon, , , nTasaSegDes, MatCalendSegDes, nExoSegMYPE, nMontoPoliza, nTasaSegInc)
                'APRI 20171024 -  DameTipoPeriodo(R!nColocCalendCod) -> nTipoPeriodo
                'MADM 20110531 - parametro sMensFecAprob - lnDescripCuota
                'MAVM 20130209: pnMontoGra, psIncluyeIntCap
                'WIOR 20131111 AGREGO lnCuotaBalon
                'MAVM 20130209 ***
                'LUCV20180601: Agregó: psCtaCod, nTasaSegDes, MatCalendSegDes, nMontoPoliza, nExoSegMYPE - Según ERS022-2018
                For i = 0 To UBound(MatCalendPagos) - 1
                    MatCalendPagos(i, 4) = Format(CDbl(MatCalendPagos(i, 4)) + CDbl(MatCalendPagos(i, 11)), "#0.00")
                Next i
                '***
                
                nCuotaTemp = CDbl(MatCalendPagos(0, 2))
            'End If'WIOR 20151223 - COMENTO

            Set oCalend = Nothing

        R.Close
        Set R = Nothing
        '********************************************************************
        'GENERACION DE GASTOS
        '********************************************************************
        Set oGar = New COMDCredito.DCOMGarantia
        nMontoGarantia = oGar.RecuperaMontoGarantiaCredito(psCtaCod)
        Set oGar = Nothing
        Set oGastos = New NCOMGasto
        
        'MAVM 03112009 *** Se Agrego el parametro
        'MatGastos = oGastos.GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalendPagos(0, 2)), pnPrestamo, , , , , , , , , IIf(nPeriodo = 0, "2", "1"), nPeriodo)
        'ALPA 20100607 B2***********************************
        'MatGastos = oGastos.GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalendPagos(0, 2)), pnPrestamo, , , , , , , , , IIf(nPeriodo = 0, "2", "1"), nPeriodo, nExoSegDes)
        'ALPA 20140318*******************************
        'MatGastos = oGastos.GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalendPagos(0, 2)), pnPrestamo, , , , , , , , , IIf(nPeriodo = 0, "2", "1"), nPeriodo, nExoSegDes, psAgeCodAct, psTpoProdCod, psTpoCredCod, pdHoy)
        'MatGastos = oGastos.GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalendPagos(0, 2)), pnPrestamo, , , , , , , , , IIf(nPeriodo = 0, "2", "1"), nPeriodo, nExoSegDes, psAgeCodAct, psTpoProdCod, psTpoCredCod, pdHoy, , , , nPolizaBF, dFechaPBF, MatCalendSegDes)
        
         MatGastos = oGastos.GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalendPagos(0, 2)), pnPrestamo, , , , , , , , , nTipoPeriodo, nPeriodo, nExoSegDes, psAgeCodAct, psTpoProdCod, psTpoCredCod, pdHoy, , , , nPolizaBF, dFechaPBF, MatCalendSegDes, pnCuotaMivivienda, , nExoSegMYPE)
        'APRI20180821 ERS061-2018 AGREGÓ nExoSegMYPE
        'APRI 20171024 IIf(nPeriodo = 0, "2", "1") -> nTipoPeriodo
        'ALPA 20141223 SE AGREGO EL PARAMETRO pnCuotaMivivienda
        'WIOR 20120521 SE AGREGO EL PARAMETRO pdHoy para el parametro de pdFechaSis
        '***************************************************
        '***
        'MatGastos = GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalendPagos(0, 2)), pnPrestamo)
        Set oGastos = Nothing


        '********************************************************************
        'Para Cancelacion de Creditos
        '********************************************************************
        If nNroProxDesemb = 1 Then
            Dim pMatCalendTmp As Variant    'ARCV 02-03-2007
            
            ReDim MatRSCancel(pnContMatCredCanc)
            ReDim MatRSCancelCalPend(pnContMatCredCanc)
            Set oCredito = New COMDCredito.DCOMCredito
            Set RTmp = New ADODB.Recordset
            For i = 0 To pnContMatCredCanc - 1
                Set MatRSCancel(i) = oCredito.RecuperaDatosCreditoVigente(MatCredCanc(i, 0))
                MatRSCancelCalPend(i) = RecuperaMatrizCalendarioPendiente(MatCredCanc(i, 0))
                'ARCV 16-04-2007 (Cobrar el Gasto la proxima cuota a pagar)
                'ARCV 02-03-2007': Cobrar solo los Gastos vencidos, inclusive en la Cuota Actual
                'pMatCalendTmp = MatRSCancelCalPend(i)
                'If CDate(pMatCalendTmp(0, 0)) > pdHoy Then
                '    pMatCalendTmp(0, 9) = 0
                'End If
                'MatRSCancelCalPend(i) = pMatCalendTmp
                '----------
            Next i
            Set oCredito = Nothing

        End If
        '********************************************************************
        'INICIO DE TRANSACCION
        '********************************************************************
        Call oBase.dBeginTrans
        bTransac = True
        '********************************************************************
        If nTipoBienFuturo = gTpoBienFuturo Then
            Call oBase.dUpdateGarantiaFechaConstatacion(psCtaCod, DateAdd("yyyy", 1, pdHoy))
        End If
        '********************************************************************
        'Inserta Movimiento
        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oBase.dGetnMovNro(sMovNro)
        pnMovNro = nMovNro

        'WIOR 20140203 ******************************
        Call oBase.ActualizaCredVinculados(psCtaCod, "", 2, 5)
        'WIOR FIN ***********************************
        
        '**********************************************************
        'Apertura de Cuenta de Ahorro
        '**********************************************************
        If pbDesembCC And pbCtaAhoNueva Then
                '***** Cobrar ITF
'                sCtaApe = oBase.CapAperturaCuenta(gCapAhorros, CInt(Mid(psCtaCod, 9, 1)), _
'                         pRSRela, sMovNro, psCodAge, nConsCred, pnTasa, pnPrestamo, pdHoy, 1, _
'                         pnPersoneria, "", pnTipoCuenta, pnTipoTasa, pbDocumento, psNroDoc, psCodIF)
'FRHU 20140228 RQ 14006
'                sCtaApe = oBase.CapAperturaCuenta(gCapAhorros, CInt(Mid(psCtaCod, 9, 1)), _
'                         pRSRela, sMovNro, psCodAge, nConsCred, pnTasa, 0, pdHoy, 1, _
'                          pnPersoneria, "", pnTipoCuenta, pnTipoTasa, pbDocumento, psNroDoc, psCodIF, _
'                         , , , , , , , , CInt(pMatDatosAhoNew(0)), CDbl(pMatDatosAhoNew(1)), CInt(pMatDatosAhoNew(2)), CStr(pMatDatosAhoNew(3)))
                'ARCV 13-02-2007
                'Se agrego los datos de la Matriz
                
                '**********************
'FRHU FIN 20140228 RQ 14006
                'FRHU 20140228 RQ14006, Se quito CStr(pMatDatosAhoNew(3))-> Promotor
                sCtaApe = oBase.CapAperturaCuenta(gCapAhorros, CInt(Mid(psCtaCod, 9, 1)), _
                         pRSRela, sMovNro, psCodAge, nConsCred, pnTasa, 0, pdHoy, 1, _
                          pnPersoneria, "", pnTipoCuenta, pnTipoTasa, pbDocumento, psNroDoc, psCodIF, _
                         , , , , , , , , CInt(pMatDatosAhoNew(0)), CDbl(pMatDatosAhoNew(1)), CInt(pMatDatosAhoNew(2)))
                'FIN FRHU 20140228 RQ14006
                psCtaAbo = sCtaApe
                psCtaAboR = sCtaApe
                pMatDatosAho(1) = Format(pnPrestamo, "#0.00")
                
                
        End If
        pMatDatosAho(0) = psCtaAbo
        '**********************************************************
        '**********************************************************
        'Apertura de Cuenta de Ahorro de Gastos de Cierre (FMV y TP)
        '**********************************************************
        If bAperturaGastoCierre Then
            Dim rsRelacionGastoCierre As ADODB.Recordset
            Set rsRelacionGastoCierre = New ADODB.Recordset
            
            With rsRelacionGastoCierre
                .Fields.Append "Codigo", adVarChar, 13
                .Fields.Append "Relacion", adSmallInt
                .Open
                .AddNew
                .Fields("Codigo") = pMatCuentaGastoCierre(0)
                .Fields("Relacion") = 10
            End With
        
            pMatCuentaGastoCierre(12) = oBase.CapAperturaCuenta(gCapAhorros, CInt(Mid(psCtaCod, 9, 1)), _
                     rsRelacionGastoCierre, sMovNro, psCodAge, gCredDesembCtaNueva, pMatCuentaGastoCierre(6), 0, pdHoy, 1, _
                      pMatCuentaGastoCierre(2), "", pMatCuentaGastoCierre(4), pMatCuentaGastoCierre(5), False, "", "", _
                     , , , , , , , , pMatCuentaGastoCierre(3), 0, pMatCuentaGastoCierre(11))
            
            Set rsRelacionGastoCierre = Nothing
        End If
        '**********************************************************

        '***********************************************************
        'Proceso de Cancelacion de Creditos
        '**********************************************************
        Dim nMontoTotalARetirarXCancelacion As Double
        'Dim nMovNroITFEliminarCancel As Long
        Dim loMov As COMDMov.DCOMMov
        Dim nITFCanc As Double 'BRGO 20111020
        Dim nRedondeoITF As Double 'BRGO 20111020
        nMontoTotalARetirarXCancelacion = 0
        nMovNroITFEliminarCancel = nMovNro
        If nNroProxDesemb = 1 Then
            Set oCredito = New COMDCredito.DCOMCredito
            Set RTmp = New ADODB.Recordset
            
            For i = 0 To pnContMatCredCanc - 1
                Set RTmp = MatRSCancel(i)
                sMetLiqTmp = RTmp!cMetLiquidacion
                RTmp.Close
                'MatCalendTemp = RecuperaMatrizCalendarioPendiente(MatCredCanc(I, 0))
                MatCalendTemp = MatRSCancelCalPend(i)
                'ARCV 12-07-2006
                'MatCalendDistrTemp = MatrizDistribuirCancelacion(MatCredCanc(i, 0), MatCalendTemp, oITF.fgITFCalculaImpuestoIncluido(CDbl(MatCredCanc(i, 1)), True), sMetLiqTmp, pdHoy)
                MatCalendDistrTemp = MatrizDistribuirCancelacion(MatCredCanc(i, 0), MatCalendTemp, CDbl(MatCredCanc(i, 1)), sMetLiqTmp, pdHoy, , , , True, True)
                'Call AmortizarCredito(MatCredCanc(I, 0), MatCalendTemp, MatCalendDistrTemp, CDbl(MatCredCanc(I, 1)), pdHoy, sMetLiqTmp, IIf(pbDesembCC, gColocTipoPagoCargoCta, gColocTipoPagoEfectivo), psCodAge, psCodUser, , oBase, nmovnro, , , , , , sMovNro, , , , , , , , oITF.fgTruncar(CDbl(MatCredCanc(I, 1)) - oITF.fgITFCalculaImpuestoIncluido(CDbl(MatCredCanc(I, 1)), True), 2), , True)
                
                'JUEZ 20130930 Para cobrar ITF en la Cancelacion sólo cuando es desembolso efectivo *******
                If Not pbDesembCC Then
                    '*** BRGO 20111020 ************************************************
                    nITFCanc = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(CDbl(MatCredCanc(i, 1))), 2)
                    nRedondeoITF = fgDiferenciaRedondeoITF(nITFCanc)
                    nITFCanc = IIf(nRedondeoITF > 0, nITFCanc - nRedondeoITF, nITFCanc)
                    '*** END BRGO
                End If
                 'END JUEZ ********************************************************************************
                'ALPA 20150408
                Set R2 = New ADODB.Recordset
                Set R2 = oCredito.RecuperaColocacCred(MatCredCanc(i, 0))
                nPreParaAmpliacion = IIf(IsNull(R2!bPreparaCobroAmpliacion), 0, R2!bPreparaCobroAmpliacion) 'ALPA20150408
                                
                                Dim SaldoCapNewCalend As Double         'ADD ANGC20210806
                Dim x As Integer
                If nPreParaAmpliacion = 1 Then
                    SaldoCapNewCalend = MatrizSaldoCapital(MatCalendTemp, MatCalendDistrTemp)
                    If SaldoCapNewCalend = 0 Then
                        For x = 0 To UBound(MatCalendDistrTemp) - 1
                            MatCalendDistrTemp(x, 2) = Trim(Str(gColocCalendEstadoPagado))
                        Next x
                    End If
                End If
                                
                                Call AmortizarCredito(MatCredCanc(i, 0), MatCalendTemp, MatCalendDistrTemp, CDbl(MatCredCanc(i, 1)), pdHoy, sMetLiqTmp, IIf(pbDesembCC, gColocTipoPagoCargoCta, gColocTipoPagoEfectivo), psCodAge, psCodUser, , oBase, nMovNro, , , , , , sMovNro, , , , , , , , nITFCanc, , True, , , , , , , , , , , , , , , , , , , , nPreParaAmpliacion)
                Set R2 = Nothing
                '*****BRGO 20111012 *****************************************************
                If nITFCanc + nRedondeoITF > 0 Then
                   Set loMov = New COMDMov.DCOMMov
                   Call loMov.InsertaMovRedondeoITF("", i + 1, nITFCanc + nRedondeoITF, nITFCanc, nMovNro)
                   Set loMov = Nothing
                End If
                '*** End BRGO *****************
                
                'NSSE 06/11/2006 - NO DEBE TENER ITF
                'nMontoTotalARetirarXCancelacion = nMontoTotalARetirarXCancelacion + oITF.fgITFCalculaImpuestoIncluido(CDbl(MatCredCanc(I, 1)), True)
                nMontoTotalARetirarXCancelacion = nMontoTotalARetirarXCancelacion + CDbl(MatCredCanc(i, 1))
                
            Next i
            Set oITF = Nothing
            Set oCredito = Nothing
        End If
        '**********************************************************
        'Final de Proceso de Cancelacion
        '**********************************************************

        'Actualiza la Saldos de Linea
        Set oLinea = New COMDCredito.DCOMLineaCredito
        'Set R = oBase.RecuperaLineasCreditoSaldo(sLineaCod, True)
        'Set oLinea = Nothing
        'nMontoReservado = CDbl(Format(R!nMontoReservado, "#0.00"))
        'nMontoColocado = CDbl(Format(R!nMontoColocado, "#0.00"))
        'R.Close
        'Set R = Nothing
        'nMontoReservado = nMontoReservado - pnPrestamo
        'nMontoColocado = nMontoColocado + pnPrestamo
        'Call oBase.dUpdateLineaCreditoSaldo(sLineaCod, , , nMontoColocado, , nMontoReservado, False)
        
        '**ARLO20180712 ERS042 - 2018
        Set objProducto = New COMDCredito.DCOMCredito
        If Not objProducto.GetResultadoCondicionCatalogo("N0000105", Mid(psCtaCod, 6, 3)) Then
        'If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
        '**ARLO20180712 ERS042 - 2018
        
        'Nuevo Calendario de Desembolsos
        For i = 0 To ContDesemb - 1
            '**Modificado por CAPI 20080105, Se formateo fecha
            Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, i + 1, CDate(Format(MatDesemb(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Desembolsos -  Desembolso", gColocCalendConceptoProcDesembolsado, False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatDesemb(i, 1)), 0, "", False)
        Next i

        'Nuevos Gastos de Desembolsos
        For i = 0 To nNumGastos - 1
            If CInt(Trim(Right(MatGastos(i, 0), 10))) = gColocCalendAplDesembolso Then
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
            End If
        Next i

        'Para Desembolsos Parciales Actualizo del Calendario Anterior
        'ColoCalendario
        If nNroProxDesemb <> 1 Then
            Do While Not RColocCalendDesembActual.EOF
                Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen + 1, RColocCalendDesembActual!nCuota, gColocCalendAplDesembolso, , RColocCalendDesembActual!ncoloccalendestado, , , False, , IIf(IsNull(RColocCalendDesembActual!dPago), CDate("01/01/1900"), RColocCalendDesembActual!dPago))
                RColocCalendDesembActual.MoveNext
            Loop
        End If
        RColocCalendDesembActual.Close
        'ColoCalendDet
        If nNroProxDesemb <> 1 Then
            Do While Not RCalendDesembActual.EOF
                Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, RCalendDesembActual!nCuota, RCalendDesembActual!nPrdConceptoCod, , RCalendDesembActual!nMontoPagado, "", False)
                RCalendDesembActual.MoveNext
            Loop
        End If
        RCalendDesembActual.Close

        'Nuevo Calendario de Pagos
        For i = 0 To UBound(MatCalendPagos) - 1
            '**Modificado por CAPI 20080105, Se formateo fecha
            Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, CDate(Format(MatCalendPagos(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Pagos - Desembolso", gColocCalendConceptoProcDesembolsado, False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompVencido, 0, 0, "", False)
            If CDbl(MatCalendPagos(i, 5)) > 0 Then
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalendPagos(i, 5)), 0, "", False)
            End If
        Next i
        
        'RIRO 20200829 ******* Liquidación ***
        Dim nLiquidacion As Long
        nLiquidacion = -1
        oBase.RegistraLiquidacion psCtaCod, psCodUser, pnMovNro, nLiquidacion, MatCalendPagos(UBound(MatCalendPagos) - 1, 1), 3
        If nLiquidacion > 0 Then
            For i = 0 To UBound(MatCalendPagos) - 1
                If IsNumeric(MatCalendPagos(i, 17)) Then
                    If CDbl(MatCalendPagos(i, 17)) > 0 Then
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 17)), 1 ' Int. Comp. Calculado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 4)), 2 ' Int. Comp. Asignado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 9999, CInt(MatCalendPagos(i, 18)), 3 ' Días Calculados
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 19)), 4 ' Int. Comp. Diferencia Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 20)), 5 ' Int. Grac. Generado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 21)), 6 ' Int. Comp. Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 22)), 7 ' Int. Comp. Asignado
                    End If
                End If
            Next i
        End If
        'END RIRO ****************************
        
        'Nuevos Gastos de Cuota
        For i = 0 To nNumGastos - 1
            If CInt(Trim(Right(MatGastos(i, 0), 10))) = gColocCalendAplCuota Then
                'By Capi 07032008 para que no grabe gastos con valor cero, se quito validacion del DCOM que afectaba a otros conceptos como mora.
                'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
                If CDbl(MatGastos(i, 3)) > 0 Then
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
                End If
            End If
        Next i
        
        'WIOR 20140825 ********************************
        Call oBase.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalen + 1)
        If IsArray(MatCalendSegDes) Then
            If Trim(MatCalendSegDes(0, 0)) <> "" Then
                For i = 0 To UBound(MatCalendSegDes, 2)
                    Call oBase.dInsertColocCalendDetSegDes(psCtaCod, nNroCalen + 1, CInt(MatCalendSegDes(0, i)), CInt(MatCalendSegDes(1, i)), CDbl(MatCalendSegDes(2, i)), CDbl(MatCalendSegDes(3, i)))
                Next i
            End If
        End If
        'WIOR FIN *************************************
        
        If nNroProxDesemb <> 1 Then
            Do While Not RCalendActual.EOF
                Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, RCalendActual!nCuota, RCalendActual!nPrdConceptoCod, , RCalendActual!nMontoPagado, "", False)
                RCalendActual.MoveNext
            Loop
        End If
        RCalendActual.Close
        
        'WIOR 20151223 - COMENTO
        '        If nMiViv = 1 Then
        '
        '            For i = 0 To UBound(MatCalendPagos_2) - 1
        '                Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 2, gColocCalendAplCuota, i + 1, CDate(MatCalendPagos_2(i, 0)), gColocCalendEstadoPendiente, "Calendario de Pagos - Desembolso", gColocCalendConceptoProcDesembolsado, False)
        '                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 2, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos_2(i, 3)), 0, "", False)
        '                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 2, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos_2(i, 4)), 0, "", False)
        '                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 2, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
        '                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 2, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompVencido, 0, 0, "", False)
        '                If CDbl(MatCalendPagos_2(i, 5)) > 0 Then
        '                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 2, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalendPagos_2(i, 5)), 0, "", False)
        '                End If
        '            Next i
        '            'Llena Tabla de Calificacion (ColocCalifMiViv) Buen Pagador o Mal Pagador
        '            For i = 0 To UBound(MatCalendPagos) - 1
        '                Call oBase.dInsertColocCalifMiViv(psCtaCod, i + 1, nNroCalen + 1, i + 1, CDate(MatCalendPagos(i, 0)), gColocCalendEstadoPendiente)
        '            Next i
        '
        '        End If
    'ALPA 20111209
        Else
    'Aqui se elabora el calendario Leasing
    'Calendario
    For i = 0 To ContDesemb - 1
         '**Modificado por CAPI 20080105, Se formateo fecha
         Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, i + 1, CDate(Format(MatDesemb(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Desembolsos -  Desembolso", gColocCalendConceptoProcDesembolsado, False)
         Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatDesemb(i, 1)), 0, "", False)
    Next i
    
    'Cuotas
    Set oDLeasing = New COMDCredito.DCOMleasing
    Set oDCalend = New COMDCredito.DCOMCalendario
    Set RCalendActual = New ADODB.Recordset
    Set RColocCalendDesembActual = New ADODB.Recordset
    Set RCalendActual = oDLeasing.RecuperaColocCalendDetLeasing(psCtaCod, nNroCalen, gColocCalendAplCuota)
    Set RCalendDesembActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
    Set RColocCalendDesembActual = oDLeasing.RecuperaColocCalendarioLeasing(psCtaCod, nNroCalen, gColocCalendAplDesembolso)

    While Not RColocCalendDesembActual.EOF
        Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, RColocCalendDesembActual!nCuota, CDate(RColocCalendDesembActual!dVenc), gColocCalendEstadoPendiente, "Calendario de Pagos - Desembolso", gColocCalendConceptoProcDesembolsado, False)
        RColocCalendDesembActual.MoveNext
    Wend
    'ALPA 20120413****************
    While Not RCalendActual.EOF
        Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, RCalendActual!nCuota, RCalendActual!nPrdConceptoCod, CDbl(IIf(IsNull(RCalendActual!nMonto), 0, RCalendActual!nMonto)), 0, "", False)
        RCalendActual.MoveNext
    Wend
    Set oDLeasing = Nothing
    Set oDCalend = Nothing
    End If
    
    Call oBase.dInsertaConceptosInteresCorridos(psCtaCod)
    '*************************************************************************************


    Else ' Si es Cuota Libre
        MatCalendPagos = RecuperaMatrizCalendarioPendiente(psCtaCod)
        Call oBase.dBeginTrans
        bTransac = True
        'Inserta Movimiento
        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oBase.dGetnMovNro(sMovNro)
        pnMovNro = nMovNro
        nNroCalen = nNroCalen - 1
        nMovNroITFEliminarCancel = nMovNro 'EJVG20140922
    End If

        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        Set oCredito = Nothing

        'Actualiza Estado
        Call oBase.dInsertColocacEstado(psCtaCod, pdHoy, gColocEstVigNorm, R!nCuotas, pnPrestamo, "Desembolso de Credito", R!nColocCalendCod, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), nPeriodoGracia, R!nPlazo, R!nTipoGracia, R!nTipoDesembolso, R!nProxMes, R!nCalendDinamico, False, , , , , IIf(IsNull(R!bGraciaEnCuotas), -1, R!bGraciaEnCuotas), IIf(IsNull(R!nTasaGracia), 0, R!nTasaGracia))
        'Actualiza Colocaciones
        If nNroProxDesemb = 1 Then
            Call oBase.dUpdateColocaciones(psCtaCod, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatDesemb(0, 0)) _
                , CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), pnPrestamo, , , pdHoy, False)
        Else
            Call oBase.dUpdateColocaciones(psCtaCod, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatDesemb(0, 0)) _
                , CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), pnPrestamo, , , , False, True)
        End If
        'Actualiza ColocacCred
        'ALPA 20110609*********************************
        'Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdHoy), , , , IIf(UBound(MatCargoAutom) > 0, 1, 0), , 0, 1, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
        '**ARLO20180712 ERS042 - 2018
        Set objProducto = New COMDCredito.DCOMCredito
        If Not objProducto.GetResultadoCondicionCatalogo("N0000106", Mid(psCtaCod, 6, 3)) Then
        'If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
        '**ARLO20180712 ERS042 - 2018
            Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdHoy), , , , IIf(UBound(MatCargoAutom) > 0, 1, 0), , 0, 1, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
        Else
            Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdHoy), , , , IIf(UBound(MatCargoAutom) > 0, 1, 0), , 0, 0, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
        End If
        '**********************************************

        'Actualiza Producto
        If nNroProxDesemb = 1 Then
            Call oBase.dUpdateProducto(psCtaCod, , pnPrestamo, gColocEstVigNorm, pdHoy, nNumTransac + 1, False)
        Else
            Call oBase.dUpdateProducto(psCtaCod, , pnPrestamo, , pdHoy, nNumTransac + 1, False, , True)
        End If
        R.Close
        Set R = Nothing

        'Inserta Movimientos en MovCol
        'If (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
                'Call oBase.dInsertMov(sMovNroOP, "300497", lsPersNombreLeasing, gMovEstContabMovContable, gMovFlagVigente, False)
                'nMovNroLeasing = oBase.dGetnMovNro(sMovNroOP)
                
                'Call oBase.dAgregaMovDoc(nMovNroLeasing, TpoDocBolDep, psCtaCod, pdHoy, False)
                'Call oBase.dAgregaMovOpeVarias(nMovNroLeasing, pnPrestamo + pnITF, psCtaCod, lsPersCodLeasing, IIf(Mid(psCtaCod, 9, 1) = "1", 1, 0), "300497")
                'Call oBase.dInsertMovRef(nMovNroLeasing, nmovnro, False)
        'End If
        Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, CDbl(Format(pnPrestamo, "#0.00")), 0, sMetLiquid, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatCalendPagos(0, 0)), False, IIf(ContDesemb > 1, sEstadoCreditoParcial, gColocEstAprob))   'ANGC/RIRO 20200520 Se retiró (pnMontoGastos)
        
        'ANGC/RIRO 20200520 ***
        If pnMontoGastos > 0 And Not pbDesembCC Then 'RIRO20200611 Corrección
            Call oBase.dInsertMovCol(nMovNro, IIf(pbDesembCC, "100949", "100948"), psCtaCod, nNroCalen + 1, CDbl(Format(pnMontoGastos, "#0.00")), 0, sMetLiquid, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatCalendPagos(0, 0)), False, IIf(ContDesemb > 1, sEstadoCreditoParcial, gColocEstAprob)) 'ADD ANGC/RIRO 20200520
        End If
        'END
        
        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, gColocConceptoCodCapital, nNroProxDesemb, pnPrestamo, False)


        '*************** ITF *********************************
        '-- BRGO 20111020 ----
        nRedondeoITF = fgDiferenciaRedondeoITF(pnITF)
        pnITF = IIf(nRedondeoITF > 0, pnITF - nRedondeoITF, pnITF)
        '--- END BRGO
        'ALPA 20120420*****************************
        If pnITF > 0 Then
            '**ARLO20180712 ERS042 - 2018
            Set objProducto = New COMDCredito.DCOMCredito
            If objProducto.GetResultadoCondicionCatalogo("N0000107", Mid(psCtaCod, 6, 3)) Then
            'If (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
            '**ARLO20180712 ERS042 - 2018
                Call oBase.dInsertMovCol(nMovNro, gITFCobroCargoArFi, psCtaCod, 0, pnITF, 0, sMetLiquid, 0, False, gColocEstAprob)
                Call oBase.dInsertMovColDet(nMovNro, gITFCobroCargoArFi, psCtaCod, 0, gConcITFCliente, nNroProxDesemb, pnITF, False)
            Else
                Call oBase.dInsertMovCol(nMovNro, IIf(bAbonoCuenta = True, sOpeCodItfAbonoCuenta, gCredITFDesemb), psCtaCod, 0, pnITF, 0, sMetLiquid, 0, False, gColocEstAprob)
                Call oBase.dInsertMovColDet(nMovNro, IIf(bAbonoCuenta = True, sOpeCodItfAbonoCuenta, gCredITFDesemb), psCtaCod, 0, gConcITFCliente, nNroProxDesemb, pnITF, False)
            End If
        End If
        
        '---BRGO 20111012 ----
        If nITFCanc + nRedondeoITF > 0 Then
            Set loMov = New COMDMov.DCOMMov
            Call loMov.InsertaMovRedondeoITF("", 2, pnITF + nRedondeoITF, pnITF, nMovNro)
            Set loMov = Nothing
        End If
        '-- End BRGO
        '********************************************************
        'ARCV 08-03-2007 + Tipo Operacion Desembolso (27-06-2007)
        'LUCV20180601, Comentó según ERS022-2018 (Se evidencia que esta operacion ya no es utilizada)
'        If pnMontoPoliza > 0 Then
'            Call oBase.dInsertMovCol(nMovNro, IIf(bAbonoCuenta = True, "101401", "101400"), psCtaCod, 0, pnMontoPoliza, 0, sMetLiquid, 0, False, gColocEstAprob)
'            Call oBase.dInsertMovColDet(nMovNro, IIf(bAbonoCuenta = True, "101401", "101400"), psCtaCod, 0, "1120", nNroProxDesemb, pnMontoPoliza, False)
'        End If
        'Fin LUCV20180601
        '----------
        'JUEZ 20140122 ********************************************************
        If Left(psTpoCredCod, 1) = "8" Then
            If nDatoVivienda = 1 Then
                Call oBase.dInsertMovCol(nMovNro, gAsientoCapHipoPrimeraVivienda, psCtaCod, 0, pnPrestamo, 0, "", 0, 0, 0)
                Call oBase.dInsertMovColDet(nMovNro, gAsientoCapHipoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnPrestamo, False)
            ElseIf nDatoVivienda = 2 Then
                Call oBase.dInsertMovCol(nMovNro, gAsientoCapHipoNoPrimeraVivienda, psCtaCod, 0, pnPrestamo, 0, "", 0, 0, 0)
                Call oBase.dInsertMovColDet(nMovNro, gAsientoCapHipoNoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnPrestamo, False)
            End If
        End If
        'END JUEZ *************************************************************
        
        'Ingresa el Monto de Todos los Gastos del desembolso
        For i = 0 To UBound(pMatGastos) - 1
            If pMatGastos(i, 1) <> 0 And Not pbDesembCC Then 'RIRO 20200611 Add pbDesembCC
                'Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, CLng(pMatGastos(i, 2)), CInt(pMatGastos(i, 0)), Format(-1 * pMatGastos(i, 1), "#0.00"), False)
                Call oBase.dInsertMovColDet(nMovNro, IIf(pbDesembCC, "100949", "100948"), psCtaCod, nNroCalen + 1, CLng(pMatGastos(i, 2)), CInt(pMatGastos(i, 0)), Format(pMatGastos(i, 1), "#0.00"), False) 'ANGC/RIRO 20200520, se retiró el "-1" y se añadió el código de operación "100948"
            End If
        Next i
        
        'Desembolso con Cheque
        If pvbDesembCheque Then
            Call oBase.dInsertMovColDesembChq(nMovNro, psBanco, psNumCheque, psCtaBco)
        End If
        
        '********************************************************************
        'Actualiza Calendario de Desembolsos
        Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, nNroProxDesemb, gColocConceptoCodCapital, , pnPrestamo, , False)

        '********************************************************************
        'Actualiza Gastos de Desembolso
        If nNumGastos > 0 Then
            For i = 0 To UBound(pMatGastos) - 1
                'If CInt(Trim(Right(pMatGastos(i, 0), 10))) = gColocCalendAplDesembolso Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, nNroProxDesemb, CLng(Trim(Right(pMatGastos(i, 2), 20))), , CDbl(pMatGastos(i, 1)), , False)
                'End If
            Next i
        End If
        'Cambia a estado Cancelado el Desembolso
        Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen + 1, nNroProxDesemb, gColocCalendAplDesembolso, , gColocCalendEstadoPagado, , , False, , pdHoy)

        '*****************************************************************
        'Actualiza Cuentas de Ahorro en caso de Abono Cta
        '*****************************************************************
        If pbDesembCC And Not pbCtaAhoNueva Then
            If Not pbDesembInfoGas Then 'BRGO 20111125 Verifica si no es Desembolso del producto Ecotaxi
                Dim nMontoAbonoCtaFinal As Double
                nMontoAbonoCtaFinal = pnPrestamo
                
                If (nMontoGastoCierre > 0) Then
                    nMontoAbonoCtaFinal = nMontoAbonoCtaFinal - nMontoGastoCierre
                End If
                
                'Recalculo del monto de ITF del monto final a abonar
                If (nMontoAbonoCtaFinal <> pnPrestamo) Then
                    Set oITF = New COMDConstSistema.FCOMITF
                    oITF.fgITFParametros
                    pnITFAbono = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(nMontoAbonoCtaFinal), 2)
                End If
                
                '--- BRGO 20111020 -----
                nRedondeoITF = fgDiferenciaRedondeoITF(pnITFAbono)
                pnITFAbono = IIf(nRedondeoITF > 0, pnITFAbono - nRedondeoITF, pnITFAbono)
                '--- END BRGO
                
                'ARCV 26-06-2007 : Se desconto el monto de la Poliza
                'oBase.CapAbonoCuentaAho pMatDatosAho, psCtaAbo, pnPrestamo, nConsCred, sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion
                'oBase.CapAbonoCuentaAho pMatDatosAho, psCtaAbo, pnPrestamo - pnMontoPoliza, nConsCred, sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'LUCV20180601, Comentó según ERS022-2018
                'oBase.CapAbonoCuentaAho pMatDatosAho, psCtaAbo, pnPrestamo, nConsCred, sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'LUCV20180601, Quitó (- pnMontoPoliza). Según ERS022-2018
                oBase.CapAbonoCuentaAho pMatDatosAho, psCtaAbo, nMontoAbonoCtaFinal, nConsCred, sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'CTI520210408 Según ERS001-2021
                '*****BRGO 20111020 *****************************************************
                If pnITFAbono + nRedondeoITF > 0 Then
                    Set loMov = New COMDMov.DCOMMov
                    Call loMov.InsertaMovRedondeoITF("", 2, pnITFAbono + nRedondeoITF, pnITFAbono, nMovNro)
                    Set loMov = Nothing
                End If
                '*** End BRGO *****************
            
                'pMatDatosAho(5) = pnPrestamo - pnMontoPoliza 'LUCV20180601, Comentó según ERS022-2018
                'pMatDatosAho(5) = pnPrestamo 'LUCV20180601, Quitó Parámetro: pnMontoPoliza (ERS022-2018)
                pMatDatosAho(5) = nMontoAbonoCtaFinal 'LUCV20180601, Quitó Parámetro: pnMontoPoliza (ERS022-2018)
            Else 'BRGO 20111125 Distribuye Desembolso en cuentas de Vinculados
                Dim pMatDatosAhoAbo(14) As String
                Dim nRelacionEmp As Integer
                Dim sCtaCodConsecionario As String
                Dim sCtaCodOperGarantia As String
                Dim nMontoGarantiaInfogas As Double
                i = 0
                While Not rsEmpRel.EOF And Not rsEmpRel.BOF
                    nRelacionEmp = CInt(Trim(Right(rsEmpRel!cRelacion, 4)))
                    
                    If nRelacionEmp = gColRelPersConsecionario Then
                        sCtaCodConsecionario = CStr(rsEmpRel!cCtaCodAbono)
                    End If
                    
                    If nRelacionEmp = gColRelPersOperGarantia Then
                        sCtaCodOperGarantia = CStr(rsEmpRel!cCtaCodAbono)
                        nMontoGarantiaInfogas = Format(rsEmpRel!nMontoAbono, "#,##0.00")
                    End If
                    If nRelacionEmp <> gColRelTasacion And nRelacionEmp <> gColRelComisionEstructuracion And nRelacionEmp <> gColRelPersOperGarantia Then
                        pMatDatosAhoAbo(0) = CStr(rsEmpRel!cCtaCodAbono) 'Cuenta de Ahorros
                        pMatDatosAhoAbo(1) = Format(rsEmpRel!nMontoAbono, "#,##0.00") 'Monto de Abono
                        pMatDatosAhoAbo(2) = "0.00" 'Interes Ganado de Abono
                        pMatDatosAhoAbo(3) = "0.00" 'Interes Ganado de Retiro Gastos
                        pMatDatosAhoAbo(4) = "0.00" 'Interes Ganado de Retiro Cancelaciones
                        pMatDatosAhoAbo(5) = "0.00" 'Monto de Abono
                        pMatDatosAhoAbo(6) = "0.00" 'Monto de Retiro de Gastos
                        pMatDatosAhoAbo(7) = "0.00" 'Monto de Retiro de Cancelaciones
                        pMatDatosAhoAbo(8) = "0.00" 'Saldo Disponible Abono
                        pMatDatosAhoAbo(9) = "0.00" 'Saldo Contable Abono
                        pMatDatosAhoAbo(10) = "0.00" 'Saldo Disponible Retiro de Gastos
                        pMatDatosAhoAbo(11) = "0.00" 'Saldo Contable Retiro de Gastos
                        pMatDatosAhoAbo(12) = "0.00" 'Saldo Disponible Retiro de Cancelaciones
                        pMatDatosAhoAbo(13) = "0.00" 'Saldo Contable Retiro de Cancelaciones
                        Set oITF = New COMDConstSistema.FCOMITF
                        oITF.fgITFParametros
                        pnITFAbono = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(rsEmpRel!nMontoAbono), 2)
                        nRedondeoITF = fgDiferenciaRedondeoITF(pnITFAbono)
                        pnITFAbono = IIf(nRedondeoITF > 0, pnITFAbono - nRedondeoITF, pnITFAbono)
                        oBase.CapAbonoCuentaAho pMatDatosAhoAbo, rsEmpRel!cCtaCodAbono, Format(rsEmpRel!nMontoAbono, "#,##0.00"), nConsCred, sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion
                        
                        pMatDatosAhoEmp(14 * i + 0) = pMatDatosAhoAbo(0)
                        pMatDatosAhoEmp(14 * i + 1) = pMatDatosAhoAbo(1)
                        pMatDatosAhoEmp(14 * i + 2) = pMatDatosAhoAbo(2)
                        pMatDatosAhoEmp(14 * i + 3) = pMatDatosAhoAbo(3)
                        pMatDatosAhoEmp(14 * i + 4) = pMatDatosAhoAbo(4)
                        pMatDatosAhoEmp(14 * i + 5) = pMatDatosAhoAbo(5)
                        pMatDatosAhoEmp(14 * i + 6) = pMatDatosAhoAbo(6)
                        pMatDatosAhoEmp(14 * i + 7) = pMatDatosAhoAbo(7)
                        pMatDatosAhoEmp(14 * i + 8) = pMatDatosAhoAbo(8)
                        pMatDatosAhoEmp(14 * i + 9) = pMatDatosAhoAbo(9)
                        pMatDatosAhoEmp(14 * i + 10) = pMatDatosAhoAbo(10)
                        pMatDatosAhoEmp(14 * i + 11) = pMatDatosAhoAbo(11)
                        pMatDatosAhoEmp(14 * i + 12) = pMatDatosAhoAbo(12)
                        pMatDatosAhoEmp(14 * i + 13) = pMatDatosAhoAbo(13)
                        
                        If pnITFAbono + nRedondeoITF > 0 Then
                            Set loMov = New COMDMov.DCOMMov
                            Call loMov.InsertaMovRedondeoITF("", nRelacionEmp, pnITFAbono + nRedondeoITF, pnITFAbono, nMovNro)
                            Set loMov = Nothing
                        End If
                        i = i + 1
                    ElseIf nRelacionEmp = gColRelTasacion Then
                        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, gColocConceptoCodTasacionVehiculo, nNroProxDesemb, Format(rsEmpRel!nMontoAbono, "#,##0.00"), False)
                    ElseIf nRelacionEmp = gColRelComisionEstructuracion Then
                        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, gColocConceptoCodComisionEstructuracion, nNroProxDesemb, Format(rsEmpRel!nMontoAbono, "#,##0.00"), False)
                    End If
                    rsEmpRel.MoveNext
                Wend
                
                'Asocia la Cuenta de Recaudación del Cliente al Crédito
                Set oCredito = New COMDCredito.DCOMCredito
                Call oBase.AgregaNuevoProdPersCofide(psCtaCod, oCredito.RecuperaTitularCredito(psCtaCod), gColRelPersTitularCred, psCtaAbo, "0.00") 'Se graba el monto de la Tasación
                
                rsEmpRel.MoveFirst
                'Debita de la cuenta del Concesionario el monto de garantía
                'Abona en la cuenta alterna del Operador el monto de garantía
                
                Set oCredito = Nothing
                Set oITF = Nothing
            End If
            Set rsEmpRel = Nothing
        End If
        '*** End BRGO *****************
        
        'By Capi 20012008 para que exonere de inactivas
        If pbDesembCC Then
            oBase.ExoneraInactivas psCtaAbo, sMovNro
        End If
        

        'Actualiza CargoAutomatico
        For i = 0 To UBound(MatCargoAutom) - 1
            Call oBase.dInsertColocCargoAutoma(psCtaCod, i + 1, MatCargoAutom(i), False)
        Next i

        ''''''''''''''''''''
        ' Lavado de Dinero
        'By Capi 20012008 comentado porque no debe registrar-Riesgos
        'If psPersLavDinero <> "" Then
        '    Call oBase.dInsertaMovLavDinero(nmovnro, psPersLavDinero, psVisLavDinero)
        'End If
        '
        ''''''''''''''''''''

       If nNroProxDesemb = 1 Then
'            'Asiento de Garantias
            'Call AsientoGarantia(psCtaCod, psCodAge, psCodUser, pdHoy, nMovNro, oBase, nNroProxDesemb)
            oBase.dAsientoGarantiaDesembolso nMovNro, psCtaCod 'EJVG20150819
        ' verificando lo de las garantias
'            Dim oCredGarant As New COMDCredito.DCOMCredito
'            Dim rsCredGarant As Recordset
'            Dim rsCredGarant1 As Recordset
'            Dim sSQL As String
'            Dim cOpeCod As String
'
'            Set oCredGarant = New COMDCredito.DCOMCredito
'            Set rsCredGarant = oCredGarant.RecuperaColocGarantia(psCtaCod)
'            Set oCredGarant = Nothing
'
'            Do Until rsCredGarant.EOF
'                sSQL = "Select cOpeCod From GarantiaOpe Where nTpoGarantia='" & rsCredGarant!nTpoGarantia & " and nMoneda = " & rsCredGarant!nMoneda & " AND bReversion = 0 "
'                Set rsCredGarant1 = New ADODB.Recordset
'                rsCredGarant1.Open sSQL, oBase.coConex.ConexionActiva, adOpenStatic, adLockOptimistic, adCmdText
'                If rsCredGarant1.RecordCount > 0 Then
'                    cOpeCod = rsCredGarant1!cOpeCod
'                End If
'
'                Call oBase.dInsertMovCol(nMovNro, cOpeCod, CLng(rsCredGarant!cNumGarant), rsCredGarant!nGravado, 0, "", 0, 0, 0, False)
'                Call oBase.dInsertMovColDet(nMovNro, cOpeCod, psCtaCod, CLng(rsCredGarant!cNumGarant), 1000, 0, rsCredGarant!nGravado, False)
'            Loop

       End If
       
        'Elimina ITF Desembolso Con Apertura o Abono
        If pbDesembCC Then
            sSql = "DELETE MovColDet Where cCtaCod = '" & psCtaCod & "' AND nMovNro = " & nMovNroITFEliminarCancel & " AND cOpeCod like '99%'"
            oBase.coConex.ConexionActiva.Execute sSql
        
            sSql = "DELETE MovCol Where cCtaCod = '" & psCtaCod & "' AND nMovNro = " & nMovNroITFEliminarCancel & " AND cOpeCod like '99%'"
            oBase.coConex.ConexionActiva.Execute sSql
        End If
        '--------------------------------
        Call oBase.InsertaSegMultiriesgoDesgravamenTrama(psCtaCod) 'APRI20181121 ERS071-2018 - MEJORA
        Call oBase.dCommitTrans 'ARCV 30-04-2007
        
        Call oBase.dBeginTrans  'ARCV 30-04-2007
            
        '**DAOR 20070413, Bloquear Cuentas de PLazo Fijo Asociados como Garantías***************
        '**Tipo de Bloqueo 11:Bloqueo para Retiro, Motivo Bloqueo 3:Garantia
        '**Estado de las Cuentas de Plazos Fijo 1200:Bloqueo Retiro
        
        sMovNroBloq = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
        'Set rPlzFjoGar = New ADODB.Recordset
        Set rPlzFjoGar = oBase.RecuperaPlazosFijosAsocComoGarantia(psCtaCod)
        While Not rPlzFjoGar.EOF
            oBase.NuevoBloqueoRetiro rPlzFjoGar!cCtaCod, 3, IIf(Mid(rPlzFjoGar!cCtaCod, 6, 3) = "234", "CTS", "Plazo Fijo") & " Asociado como garantía del Crédito " & psCtaCod, sMovNroBloq
            sOperacionBloq = IIf(Mid(rPlzFjoGar!cCtaCod, 6, 3) = "232", "201101", IIf(Mid(rPlzFjoGar!cCtaCod, 6, 3) = "233", "211101", "221101"))
            oBase.AgregaMov sMovNroBloq, sOperacionBloq, IIf(Mid(rPlzFjoGar!cCtaCod, 6, 3) = "234", "CTS", "Plazo Fijo") & " Asociado como garantía del Crédito " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente
            nMovNroBloq = oBase.GetnMovNro(sMovNroBloq)
            oBase.AgregaMovCap nMovNroBloq, sOperacionBloq, rPlzFjoGar!cCtaCod, rPlzFjoGar!nSaldo, rPlzFjoGar!nSaldoDisp, rPlzFjoGar!nSaldo
            oBase.AgregaMovCapDet nMovNroBloq, sOperacionBloq, rPlzFjoGar!cCtaCod, gConcCapital, rPlzFjoGar!nSaldo
            oBase.ActualizaEstadoCuenta rPlzFjoGar!cCtaCod, 1200, pdHoy, sMovNroBloq
            rPlzFjoGar.MoveNext
        Wend
        
        Set rPlzFjoGar = Nothing
        
        '***************************************************************************************
        
        '*** BRGO 20111213 Se bloquea la cuenta de Ahorro de recaudo asociado al crédito Ecotaxi
        If pbDesembInfoGas And psCtaAbo <> "" Then
            Set rPlzFjoGar = oBase.GetDatosCuentaAho(psCtaAbo)
            oBase.NuevoBloqueoRetiro psCtaAbo, 8, "Ahorro Asociado como Cta. Recaudo del Crédito " & psCtaCod, sMovNroBloq
            oBase.AgregaMov sMovNroBloq, "201101", "Ahorro Asociado como Cta. Recaudo del Crédito " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente
            nMovNroBloq = oBase.GetnMovNro(sMovNroBloq)
            
            oBase.AgregaMovCap nMovNroBloq, "201101", psCtaAbo, rPlzFjoGar!nSaldo, rPlzFjoGar!nSaldoDisp, rPlzFjoGar!nSaldo
            oBase.AgregaMovCapDet nMovNroBloq, "201101", psCtaAbo, gConcCapital, rPlzFjoGar!nSaldo
            oBase.ActualizaEstadoCuenta psCtaAbo, 1200, pdHoy, sMovNroBloq
            Set rPlzFjoGar = Nothing
        End If
        '*** END BRGO **************************************************************

       Call oBase.dCommitTrans

        'Si es con Apertura Abonar el Monto del Prestamo
        If pbDesembCC And pbCtaAhoNueva Then
            '*** BRGO 20111020 ************************************************
            nRedondeoITF = fgDiferenciaRedondeoITF(pnITFAbono)
            pnITFAbono = IIf(nRedondeoITF > 0, pnITFAbono - nRedondeoITF, pnITFAbono)
            '*** END BRGO
            
            If Mid(psCtaCod, 4, 2) = psCodAge Then 'APRI20191005 RFC1910070011
             'oBase.CapAbonoCuentaAho pMatDatosAho, sCtaApe, pnPrestamo - pnMontoPoliza, "100103", sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'LUCV20180601, Comentó Según ERS022-2018
             oBase.CapAbonoCuentaAho pMatDatosAho, sCtaApe, pnPrestamo, "100103", sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'LUCV20180601, Agregó Según ERS022-2018
            Else
             'oBase.CapAbonoCuentaAho pMatDatosAho, sCtaApe, pnPrestamo - pnMontoPoliza, "100104", sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'APRI20191005 RFC1910070011 'LUCV20180601, Comentó Según ERS022-2018
             oBase.CapAbonoCuentaAho pMatDatosAho, sCtaApe, pnPrestamo, "100104", sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion 'APRI20191005 RFC1910070011 'LUCV20180601, Agregó Según ERS022-2018
            End If
            'pMatDatosAho(5) = pnPrestamo - pnMontoPoliza 'LUCV20180601, Comentó Según ERS022-2018
            pMatDatosAho(5) = pnPrestamo 'LUCV20180601, Agregó Según ERS022-2018
            
            '*****BRGO 20111012 *****************************************************
            If nITFCanc + nRedondeoITF > 0 Then
                Set loMov = New COMDMov.DCOMMov
                Call loMov.InsertaMovRedondeoITF(sMovNro, 1, pnITFAbono + nRedondeoITF, pnITFAbono)
                Set loMov = Nothing
            End If
            '*** End BRGO *****************
        
        End If
        
        '***************************************************************
        'Abono y Bloqueo en Cta de Ahorro de Gastos de Cierre (FMV y TP)
        '***************************************************************
        If bAperturaGastoCierre Then
            Dim nRedondeoITFGC As Double
            Dim vMatAhorroGC As Variant
            Dim nITFValorGC As Double
            
            '*** ABONO CUENTA AHORRO ***
            Set oITF = New COMDConstSistema.FCOMITF
            oITF.fgITFParametros
            nITFValorGC = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(nMontoGastoCierre), 2)
            nRedondeoITFGC = fgDiferenciaRedondeoITF(nITFValorGC)
            nITFValorGC = IIf(nRedondeoITFGC > 0, nITFValorGC - nRedondeoITFGC, nITFValorGC)
        
            ReDim vMatAhorroGC(20)
        'oBase.CapAbonoCuentaAho vMatAhorroGC, pMatCuentaGastoCierre(12), nMontoGastoCierre, gCredDesembCtaExist, sMovNro, "Abono por gastos de cierre al crédito N° " & psCtaCod, , , , , , , pdHoy, "", pbITFAplica, nITFValorGC, pbITFAsumido, psItfOperacion
        oBase.CapAbonoCuentaAho vMatAhorroGC, pMatCuentaGastoCierre(12), nMontoGastoCierre, nConsCred, sMovNro, "Abono por gastos de cierre al crédito N° " & psCtaCod, , , , , , , pdHoy, "", pbITFAplica, nITFValorGC, pbITFAsumido, psItfOperacion       'ANGC APRI 20210917

        If nITFValorGC + nRedondeoITFGC > 0 Then
                Set loMov = New COMDMov.DCOMMov
                Call loMov.InsertaMovRedondeoITF(sMovNro, 23, nITFValorGC + nRedondeoITFGC, nITFValorGC)
                Set loMov = Nothing
            End If
            pMatCuentaGastoCierre(13) = nITFValorGC
            'oBase.dUpdateMov nMovNro, , "Abono por gastos de cierre al crédito N° " & psCtaCod
            
            '*** BLOQUEO CUENTA AHORRO ***
            Dim sMovNroBloqGC As String
            Dim nMovNroBloqGC As Long
            Dim rPlzFjoGarGC As ADODB.Recordset
            
            sMovNroBloqGC = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
            Set rPlzFjoGarGC = oBase.GetDatosCuentaAho(pMatCuentaGastoCierre(12))
            oBase.NuevoBloqueoRetiro pMatCuentaGastoCierre(12), gCapMotBlqRetOrdenAdministracion, "Bloqueo por gastos de cierre al crédito N° " & psCtaCod, sMovNroBloqGC
            oBase.AgregaMov sMovNroBloqGC, "201101", "Bloqueo por gastos de cierre al crédito N° " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente
            oBase.AgregarRelaAhoCred pMatCuentaGastoCierre(12), psCtaCod, sMovNroBloqGC, True
            
            nMovNroBloqGC = oBase.GetnMovNro(sMovNroBloqGC)
            
            oBase.AgregaMovCap nMovNroBloqGC, "201101", pMatCuentaGastoCierre(12), rPlzFjoGarGC!nSaldo, rPlzFjoGarGC!nSaldoDisp, rPlzFjoGarGC!nSaldo
            oBase.AgregaMovCapDet nMovNroBloqGC, "201101", pMatCuentaGastoCierre(12), gConcCapital, rPlzFjoGarGC!nSaldo
            oBase.ActualizaEstadoCuenta pMatCuentaGastoCierre(12), gCapEstBloqTotal, pdHoy, sMovNroBloqGC
            Set rPlzFjoGarGC = Nothing
            
            'Actualiza Cuenta de Ahorro de gasto
            oBase.ActualizaCuentaAbonoGastoFMV psCtaCod, pMatCuentaGastoCierre(12)
        End If

        'Call oBase.dCommitTrans 'DAOR 20070413

            'Elimina ITF Desembolso Con Apertura o Abono
'            If pbDesembCC Then
'                sSql = "DELETE MovColDet Where cCtaCod = '" & psCtaCod & "' AND nMovNro = " & nMovNroITFEliminarCancel & " AND cOpeCod like '99%'"
'                oBase.coConex.ConexionActiva.Execute sSql
'
'                sSql = "DELETE MovCol Where cCtaCod = '" & psCtaCod & "' AND nMovNro = " & nMovNroITFEliminarCancel & " AND cOpeCod like '99%'"
'                oBase.coConex.ConexionActiva.Execute sSql
'            End If

            
            Set oITF = New COMDConstSistema.FCOMITF
        
            oITF.fgITFParametros
        
            'Retiro de Gastos y Cancelaciones
            If pbDesembCC Then
                nMovNroAnt = nMovNro
                
                If pbDesembInfoGas And nMontoGarantiaInfogas > 0 Then
                    Dim clsCap As COMNCaptaGenerales.NCOMCaptaMovimiento
                    Set clsCap = New COMNCaptaGenerales.NCOMCaptaMovimiento
                    Dim lsBoleta As String
                
                    For i = 4 To 5
                        Sleep (1000)
                        Call oBase.dBeginTrans
                        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
                        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
                        nMovNro = oBase.dGetnMovNro(sMovNro)
                        Call oBase.dInsertMovRef(nMovNro, nMovNroAnt)

                        If i = 4 Then
                            pMatDatosAhoAbo(0) = sCtaCodConsecionario
                        Else
                            pMatDatosAhoAbo(0) = sCtaCodOperGarantia
                        End If
                        pMatDatosAhoAbo(1) = Format(nMontoGarantiaInfogas, "#,##0.00")
                        pMatDatosAhoAbo(2) = "0.00": pMatDatosAhoAbo(3) = "0.00": pMatDatosAhoAbo(4) = "0.00"
                        pMatDatosAhoAbo(5) = "0.00": pMatDatosAhoAbo(6) = "0.00": pMatDatosAhoAbo(7) = "0.00"
                        pMatDatosAhoAbo(8) = "0.00": pMatDatosAhoAbo(9) = "0.00": pMatDatosAhoAbo(10) = "0.00"
                        pMatDatosAhoAbo(11) = "0.00": pMatDatosAhoAbo(12) = "0.00": pMatDatosAhoAbo(13) = "0.00"

                        '*** BRGO 20111020 ************************************************
                        nRedondeoITF = fgDiferenciaRedondeoITF(pnITFGasto)
                        pnITFGasto = IIf(nRedondeoITF > 0, pnITFGasto - nRedondeoITF, pnITFGasto)
                        '*** END BRGO

                        If i = 4 Then
                            oBase.CapCargoCuentaAho pMatDatosAhoAbo, sCtaCodConsecionario, nMontoGarantiaInfogas, gAhoTransCargo, sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, , , , , , , , , Mid(psCtaCod, 9, 1), pbITFAplica, pnITFGasto, pbITFAsumido, psItfOperacion
                        Else
                            oBase.CapAbonoCuentaAho pMatDatosAhoAbo, sCtaCodOperGarantia, nMontoGarantiaInfogas, gAhoTransAbono, sMovNro, "", , , , , , , pdHoy, "", pbITFAplica, pnITFAbono, pbITFAsumido, psItfOperacion
                        End If

                        '*****BRGO 20111020 *****************************************************
                        If pnITFGasto + nRedondeoITF > 0 Then
                           Set loMov = New COMDMov.DCOMMov
                           Call loMov.InsertaMovRedondeoITF("", 1, pnITFGasto + nRedondeoITF, pnITFGasto, nMovNro)
                           Set loMov = Nothing
                        End If
                        '*** End BRGO *****************

                        pMatDatosAhoAbo(6) = Format(nMontoGarantiaInfogas, "#0.00")

                        pMatDatosAhoEmp(14 * i + 0) = pMatDatosAhoAbo(0)
                        pMatDatosAhoEmp(14 * i + 1) = pMatDatosAhoAbo(1)
                        pMatDatosAhoEmp(14 * i + 2) = pMatDatosAhoAbo(2)
                        pMatDatosAhoEmp(14 * i + 3) = pMatDatosAhoAbo(3)
                        pMatDatosAhoEmp(14 * i + 4) = pMatDatosAhoAbo(4)
                        pMatDatosAhoEmp(14 * i + 5) = pMatDatosAhoAbo(5)
                        pMatDatosAhoEmp(14 * i + 6) = pMatDatosAhoAbo(6)
                        pMatDatosAhoEmp(14 * i + 7) = pMatDatosAhoAbo(7)
                        pMatDatosAhoEmp(14 * i + 8) = pMatDatosAhoAbo(8)
                        pMatDatosAhoEmp(14 * i + 9) = pMatDatosAhoAbo(9)
                        pMatDatosAhoEmp(14 * i + 10) = pMatDatosAhoAbo(10)
                        pMatDatosAhoEmp(14 * i + 11) = pMatDatosAhoAbo(11)
                        pMatDatosAhoEmp(14 * i + 12) = pMatDatosAhoAbo(12)
                        pMatDatosAhoEmp(14 * i + 13) = pMatDatosAhoAbo(13)
                        Call oBase.dCommitTrans
                    Next
                End If
                
                If pnMontoGastos > 0 Then
                    Call oBase.dBeginTrans
                    sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
                    Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
                    nMovNro = oBase.dGetnMovNro(sMovNro)
                    Call oBase.dInsertMovRef(nMovNro, nMovNroAnt)
                    
                    '*** BRGO 20111020 ************************************************
                    nRedondeoITF = fgDiferenciaRedondeoITF(pnITFGasto)
                    pnITFGasto = IIf(nRedondeoITF > 0, pnITFGasto - nRedondeoITF, pnITFGasto)
                    '*** END BRGO
                    
                    oBase.CapCargoCuentaAho pMatDatosAho, psCtaAbo, pnMontoGastos, sConsAhoRetGas, sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, , , , , , , , , Mid(psCtaCod, 9, 1), pbITFAplica, pnITFGasto, pbITFAsumido, psItfOperacion

                    '*****BRGO 20111020 *****************************************************
                    If pnITFGasto + nRedondeoITF > 0 Then
                       Set loMov = New COMDMov.DCOMMov
                       Call loMov.InsertaMovRedondeoITF("", 1, pnITFGasto + nRedondeoITF, pnITFGasto, nMovNro)
                       Set loMov = Nothing
                    End If
                    '*** End BRGO *****************
                
                    pMatDatosAho(6) = Format(pnMontoGastos, "#0.00")
                    Call oBase.dCommitTrans
                End If
                If pnMontoCancelaciones > 0 Then
                        Sleep 1000
                        Call oBase.dBeginTrans
                        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
                        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
                        nMovNro = oBase.dGetnMovNro(sMovNro)
                        Call oBase.dInsertMovRef(nMovNro, nMovNroAnt)
                        '*** BRGO 20111020 ************************************************
                        nRedondeoITF = fgDiferenciaRedondeoITF(pnITFCancelacion)
                        pnITFCancelacion = IIf(nRedondeoITF > 0, pnITFCancelacion - nRedondeoITF, pnITFCancelacion)
                        '*** END BRGO
                    
                        'oBase.CapCargoCuentaAho pMatDatosAho, psCtaAbo, pnMontoCancelaciones, sConsAhoRetCan, sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, True, , , , , , , True, Mid(psCtaCod, 9, 1), pbITFAplica, pnITFCancelacion, pbITFAsumido, psItfOperacion
                        oBase.CapCargoCuentaAho pMatDatosAho, psCtaAbo, nMontoTotalARetirarXCancelacion, sConsAhoRetCan, sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, True, , , , , , , True, Mid(psCtaCod, 9, 1), pbITFAplica, pnITFCancelacion, pbITFAsumido, psItfOperacion
                        
                        '*****BRGO 20111020 *****************************************************
                        If pnITFCancelacion + nRedondeoITF > 0 Then
                           Set loMov = New COMDMov.DCOMMov
                           Call loMov.InsertaMovRedondeoITF("", 1, pnITFCancelacion + nRedondeoITF, pnITFCancelacion, nMovNro)
                           Set loMov = Nothing
                        End If
                        '*** End BRGO *****************
                        
                        pMatDatosAho(7) = Format(pnMontoCancelaciones, "#0.00")
                        'Eliminar los ITF Por Cancelacion
                         For i = 0 To pnContMatCredCanc - 1
                            sSql = "DELETE MovColDet Where cCtaCod = '" & MatCredCanc(i, 0) & "' AND nMovNro = " & nMovNroITFEliminarCancel & " AND cOpeCod like '99%'"
                            oBase.coConex.ConexionActiva.Execute sSql

                            sSql = "DELETE MovCol Where cCtaCod = '" & MatCredCanc(i, 0) & "' AND nMovNro = " & nMovNroITFEliminarCancel & " AND cOpeCod like '99%'"
                            oBase.coConex.ConexionActiva.Execute sSql
                         Next i
                        Call oBase.dCommitTrans
                End If
            End If
        'FRHU 20140228 RQ14006 - Retiro y BloqueoRetiro,
            'Solo va entrar cuando el destino de credito es "Cambio en estructura de Pasivo"
            If pnMontoRetirar > 0 Then
                '**************
                '*** RETIRO ***
                '**************
                'JUEZ 20130930 Para cobrar ITF en la Cancelacion sólo cuando es desembolso efectivo *******
                'If Not pbDesembCC Then
                    '*** BRGO 20111020 ************************************************
                    'nITFCanc = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(CDbl(MatCredCanc(i, 1))), 2)
                    nITFCanc = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(pnMontoRetirar), 2)
                    nRedondeoITF = fgDiferenciaRedondeoITF(nITFCanc)
                    nITFCanc = IIf(nRedondeoITF > 0, nITFCanc - nRedondeoITF, nITFCanc)
                    '*** END BRGO
                'End If
                'END JUEZ ********************************************************************************
                Sleep 1000
                Call oBase.dBeginTrans
                sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
                Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
                nMovNro = oBase.dGetnMovNro(sMovNro)
                Call oBase.dInsertMovRef(nMovNro, nMovNroAnt)
                '*** BRGO 20111020 ************************************************
                'nRedondeoITF = fgDiferenciaRedondeoITF(pnITFCancelacion)
                'pnITFCancelacion = IIf(nRedondeoITF > 0, pnITFCancelacion - nRedondeoITF, pnITFCancelacion)
                '*** END BRGO
                    
                'oBase.CapCargoCuentaAho pMatDatosAho, psCtaAbo, pnMontoCancelaciones, sConsAhoRetCan, sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, True, , , , , , , True, Mid(psCtaCod, 9, 1), pbITFAplica, pnITFCancelacion, pbITFAsumido, psItfOperacion
                'FRHU 20140429 INCIDENTE: Se cambio el parametro gITFCobroEfectivo por psItfOperacion
                'oBase.CapCargoCuentaAho pMatDatosAho, psCtaAbo, pnMontoRetirar, "200301", sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, True, , , , , , , True, Mid(psCtaCod, 9, 1), pbITFAplica, nITFCanc, , gITFCobroEfectivo, True
                oBase.CapCargoCuentaAho pMatDatosAho, psCtaAbo, pnMontoRetirar, "200301", sMovNro, "", pdHoy, TpoDocBolDep, "", "", False, True, , , , , , , True, Mid(psCtaCod, 9, 1), pbITFAplica, nITFCanc, , psItfOperacion, True
                'FIN FRHU 20140429
                pMatDatosAho(14) = Format(pnMontoRetirar, "#0.00")
                '*****************************
                '*** BLOQUEO CUENTA AHORRO ***
                '*****************************
                
                sMovNroBloq = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
                Set rPlzFjoGar = oBase.GetDatosCuentaAho(psCtaAbo)
                oBase.NuevoBloqueoRetiro psCtaAbo, 24, psGlosaBloqueo & ": Cambio en Estructura de Pasivo " & psCtaCod, sMovNroBloq
                oBase.AgregaMov sMovNroBloq, nConsCred, psGlosaBloqueo & ": Cambio en Estructura de Pasivo " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente
                oBase.AgregarRelaAhoCred psCtaAbo, psCtaCod, sMovNroBloq, True
                
                nMovNroBloq = oBase.GetnMovNro(sMovNroBloq)
                Call oBase.dInsertMovRef(nMovNroBloq, nMovNroAnt)
            
                oBase.AgregaMovCap nMovNroBloq, "201101", psCtaAbo, rPlzFjoGar!nSaldo, rPlzFjoGar!nSaldoDisp, rPlzFjoGar!nSaldo
                oBase.AgregaMovCapDet nMovNroBloq, "201101", psCtaAbo, gConcCapital, rPlzFjoGar!nSaldo
                oBase.ActualizaEstadoCuenta psCtaAbo, gCapEstBloqRetiro, pdHoy, sMovNroBloq
                Set rPlzFjoGar = Nothing
                Call oBase.dCommitTrans
            End If
        'FIN FRHU 20140228
        Set oITF = Nothing

        '**************************************************************************
        'Para Creditos MiVivienda Cancelar Primeras 6 Cuotas del Tramo Concesional
        '**************************************************************************
        'WIOR 20151223 - COMENTO
        '        If nMiViv Then
        '            Call oBase.dBeginTrans
        '            nMivivMontoCondonadoCapital = 0
        '            nMivivMontoCondonadoInteres = 0
        '            For i = 0 To 5
        '                nMivivMontoCondonadoCapital = nMivivMontoCondonadoCapital + CDbl(MatCalendPagos_2(i, 3))
        '                nMivivMontoCondonadoInteres = nMivivMontoCondonadoInteres + CDbl(MatCalendPagos_2(i, 4)) + CDbl(MatCalendPagos_2(i, 5))
        '                Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen + 2, i + 1, gColocCalendAplCuota, , gColocCalendEstadoPagado, "Calendario de Pagos - Desembolso", gColocCalendConceptoProcDesembolsado, False)
        '                Call oBase.dUpdateColocCalifMiViv(psCtaCod, nNroCalen + 1, i + 1, , , , pdHoy)
        '            Next i
        '            If (nMivivMontoCondonadoCapital + nMivivMontoCondonadoInteres) > 0 Then
        '                Call oBase.dInsertMovCol(nMovNro, gCredMiVivCondonacion, psCtaCod, nNroCalen + 2, CDbl(Format(nMivivMontoCondonadoCapital + nMivivMontoCondonadoInteres, "#0.00")), 0, sMetLiquid, 0, 0, 0, False)
        '                Call oBase.dInsertMovColDet(nMovNro, gCredMiVivCondonacion, psCtaCod, nNroCalen + 2, gColocConceptoCodCapital, 0, nMivivMontoCondonadoCapital, False)
        '                Call oBase.dInsertMovColDet(nMovNro, gCredMiVivCondonacion, psCtaCod, nNroCalen + 2, gColocConceptoCodInteresCompensatorio, 0, nMivivMontoCondonadoInteres, False)
        '            End If
        '            Call oBase.dCommitTrans
        '        End If

'        If nNroProxDesemb = 1 Then
'            'Asiento de Garantias
'            Call AsientoGarantia(psCtacod, psCodAge, psCodUser, pdHoy)
'        End If

        '************* Para el Manejo de Operaciones VAC
        If psProyectoActual = "H" And bVAC Then
            
            sSql = "UPDATE ColocacCred SET nSaldoVAC= P.nSaldo/I.nIndiceVac," & _
                    " nFactorVAC= I.nIndiceVac " & _
                    " FROM ColocacCred C INNER JOIN Producto P ON C.cCtaCod=P.cCtaCod, IndiceVac I " & _
                    " WHERE C.cCtaCod= '" & psCtaCod & "' AND I.dIndiceVac='" & Format(pdHoy - 1, "mm-dd-yyyy") & "'"
            
            oBase.coConex.Ejecutar sSql
            
        End If
        '***********************************************
                'VAPA 20171116 FROM 60*******Comentado by NAGL 20180609******
       
        'If bAmpliado = True Then 'vapa 20171125
            'Call oBase.dBeginTrans 'VAPA

            'Set oCredIntCont = New COMDCredito.DCOMCredito
            'Set R3 = New ADODB.Recordset
            'Set R3 = oCredIntCont.RecuperaInteresDiferidoCont(psCtaCod)

            'Set R3 = oCredito.RecuperaColocacCred(MatCredCanc(i, 0))
            'lnMontoIntDif = R3!nMontoIntDif

            'Set R3 = Nothing
            'Set oCredIntCont = Nothing
        'vapa20170926

        'VAPA 20170926
         
            'sMovNroIntDif = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
            'oBase.AgregaMov sMovNroIntDif, gCredIntDifeAmpliado, "REGISTRO DE INTERES DIFERIDO - CREDITOS AMPLIADO  " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente
            'nMovNroInt = oBase.GetnMovNro(sMovNroIntDif)

            'oBase.dInsertMovCol nMovNroInt, gCredIntDifeAmpliado, psCtaCod, nNroCalen + 1, lnMontoIntDif, 0, sMetLiquid, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatCalendPagos(0, 0)), False, IIf(ContDesemb > 1, sEstadoCreditoParcial, gColocEstAprob)
            'oBase.dInsertMovColDet nMovNroInt, gCredIntDifeAmpliado, psCtaCod, nNroCalen + 1, gColocConceptoCodInteresDiferidoAmp, nNroProxDesemb, lnMontoIntDif, False

        'Call oBase.dCommitTrans
        'VAPA 20171116 **************************************************************************
     'End If
        'VAPA END 20171125 FROM 60******Comentado by NAGL 20180609**********
                
        Set oBase = Nothing

        Exit Function

ErrorDesembolsarCredito:
    If bTransac Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function ValidaCargaDatosDesembolso(ByVal psCtaCod As String, ByVal dHoy As Date) As String
Dim oCredito As COMDCredito.DCOMCalendario
Dim oCredDatos As COMDCredito.DCOMCredito
'Dim oCredGen As COMDConstSistema.DCOMGeneral
Dim R As ADODB.Recordset
Dim RTemp As ADODB.Recordset
Dim nDias As Integer
Dim nDiasMin As Integer
Dim dTemp As Date
Dim nCuota As Integer
Dim nNroCalen As Integer
Dim nTipoDesemb As Integer
Dim nBloqueo As Integer

    On Error GoTo ErrorValidaCargaDatosDesembolso
    ValidaCargaDatosDesembolso = ""

    Set oCredDatos = New COMDCredito.DCOMCredito
    Set R = oCredDatos.RecuperaColocacCred(psCtaCod)
    If R.EOF And R.BOF Then
        Exit Function
    End If
    nBloqueo = IIf(IIf(IsNull(R!bBloqueo), 0, R!bBloqueo), 1, 0)
    nTipoDesemb = IIf(IsNull(R!nTipoDesembolso), -1, R!nTipoDesembolso)
    
    Set R = oCredDatos.RecuperaProducto(psCtaCod)
    Set oCredDatos = Nothing
    If R.RecordCount = 0 Then
        ValidaCargaDatosDesembolso = "Credito No ha sido Aprobado"
        R.Close
        Set R = Nothing
        Exit Function
    Else
        If (R!nPrdEstado = gColocEstVigMor Or R!nPrdEstado = gColocEstVigNorm Or R!nPrdEstado = gColocEstVigVenc _
            Or R!nPrdEstado = gColocEstRefMor Or R!nPrdEstado = gColocEstRefNorm Or R!nPrdEstado = gColocEstRefVenc) And nTipoDesemb <> 1 Then
            ValidaCargaDatosDesembolso = "Credito ya Esta Vigente"
            R.Close
            Set R = Nothing
            Exit Function

        Else

            If R!nPrdEstado <> gColocEstAprob And nTipoDesemb <> 1 Then
                ValidaCargaDatosDesembolso = "Credito No ha sido Aprobado"
                R.Close
                Set R = Nothing
                Exit Function
            Else
                
                If nBloqueo = 1 Then
                    ValidaCargaDatosDesembolso = "Credito BLOQUEADO"
                    R.Close
                    Set R = Nothing
                    Exit Function
                End If
            End If
        End If
    End If
    
    'MAVM 20110514 ***
    Set oCredDatos = New COMDCredito.DCOMCredito
    Set R = oCredDatos.RecuperaLlaveProceso(ColocCredLlaveProceso.gColCredNivApr)
    If Not R.EOF And Not R.BOF Then
        Dim nNivApr As Integer
        nNivApr = R!nConsValor
    End If
    
    If nNivApr = 1 Then
        Dim nMontoDesemb As Double
        Dim sTipoCred As String
        Set R = oCredDatos.RecuperaMontoDesemb(psCtaCod)
        nMontoDesemb = R!nMonto
        sTipoCred = R!cTpoCredCod
        
        Set R = oCredDatos.RecuperaNivApr(psCtaCod)
        
        If Not R.EOF And Not R.BOF Then
            If R.RecordCount = 1 Then
                If Mid(R!cCodCargo, 4, 6) = "001002" Or Mid(R!cCodCargo, 4, 6) = "001003" Then
                    If Not (nMontoDesemb > "10000" And nMontoDesemb <= "150000") Then
                        ValidaCargaDatosDesembolso = "Requiere Niveles de Aprobacion. Comuniquese con el Area de Creditos"
                    End If
                End If
            Else
                ValidaCargaDatosDesembolso = "Requiere Niveles de Aprobacion. Comuniquese con el Area de Creditos"
            End If
        Exit Function
        End If
        
        Set oCredDatos = Nothing
    End If
    '***
    
    R.Close
    Set R = Nothing

    Set oCredDatos = New COMDCredito.DCOMCredito
    Set R = oCredDatos.RecuperaColocacCred(psCtaCod)
    Set oCredDatos = Nothing
    nCuota = IIf(IsNull(R!nNroProxDesemb), 0, R!nNroProxDesemb)
    nNroCalen = IIf(IsNull(R!nNroCalen), 0, R!nNroCalen)
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCalendario
    Set R = oCredito.RecuperaColocCalendario(psCtaCod, nNroCalen, gColocCalendAplDesembolso, nCuota)
    Set oCredito = Nothing
    If R.EOF Then
        ValidaCargaDatosDesembolso = "No se tiene registrado un Calendario correctamente"
        Exit Function
    End If
    dTemp = CDate(Format(R!dVenc, "dd/mm/yyyy"))
    R.Close
    Set R = Nothing

    'Set oCredGen = New COMDConstSistema.DCOMGeneral
    Set RTemp = RecuperaParametro(gColocTiposDesembolso)
    'Set oCredGen = Nothing
    nDias = IIf(IsNull(RTemp!nParamValor), 0, RTemp!nParamValor)
    RTemp.Close
    Set RTemp = Nothing

    If DateDiff("d", dTemp, dHoy) > nDias Then
        ValidaCargaDatosDesembolso = "La Fecha del Desembolso " & Format(dTemp, "dd/mm/yyyy") & " a rebazado el Minimo de Tolerancia de dias para Desembolsar "
        Exit Function
    End If

    '
    'Set oCredGen = New COMDConstSistema.DCOMGeneral
    'Set RTemp = oCredGen.RecuperaParametro(3019)
    Set RTemp = RecuperaParametro(3019)
    'Set oCredGen = Nothing
    nDiasMin = IIf(IsNull(RTemp!nParamValor), 0, RTemp!nParamValor)
    RTemp.Close
    Set RTemp = Nothing

    If DateDiff("d", dTemp, dHoy) > nDiasMin Then
        ValidaCargaDatosDesembolso = "La Fecha del Desembolso " & Format(dTemp, "dd/mm/yyyy") & " es inferior al Minimo de Tolerancia de dias para Desembolsar "
        Exit Function
    End If


    Exit Function

ErrorValidaCargaDatosDesembolso:
    Err.Raise Err.Number, "Error En Proceso", Err.Description


End Function

'07052006
Public Function SugerenciaCredito(ByVal psCtaCod As String, ByVal pnEstadoActual As ColocEstado, ByVal pnEstado As ColocEstado, ByVal pdEstado As Date, ByVal pnNroTransac As Long, ByVal psLineaCred As String, ByVal pnTasa As Double, ByVal pnMonto As Double, _
        ByVal pnNroCuotas As Integer, ByVal pnPlazo As Integer, ByVal pnTipoCuota As ColocTipoCalend, ByVal pnDiaFijo As Integer, _
        ByVal pnProxMes As Integer, ByVal pnTipoDesemb As ColocTiposDesembolso, ByVal pnCalendDinamico As Integer, _
        ByVal pnGraciaSug As Integer, ByVal pnTasaGracia As Double, ByVal pnTipoGracia As ColocTiposGracia, _
        ByVal nNroCalend As Integer, ByVal MatCalendDes As Variant, ByVal MatCalendPagos As Variant, _
        ByVal MatCalendPagos_2 As Variant, ByVal pnCuotaCom As Integer, ByVal pnMiViv As Integer, _
        ByVal pnNroCalenPar As Integer, ByVal psTipoGasto As String, ByVal pnTasaMora As Double, ByVal pMatCredVig As Variant, ByVal psDescripcion As String, _
        Optional ByVal bAmpliacion As Boolean, Optional ByVal bQuincenal As Boolean, _
        Optional ByVal pnDiaFijo2 As Integer = 0, Optional ByVal pnIncremCapital As Integer = 0, _
        Optional ByVal pnVAC As Integer = -1, _
        Optional ByVal pnNumConCer As Integer = -1, _
        Optional ByVal pnNumConMic As Integer = -1, Optional psTipoCredCod As String, Optional psTipoInstCod As String, Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", Optional ByVal prsRelEmp As ADODB.Recordset = Nothing, _
        Optional ByVal nMontoTasacion As Double = 0, Optional ByVal nMontoCEC As Double = 0, _
        Optional ByVal pbMicroseguro As Boolean = False, Optional ByVal pnTipoMicroseguro As Integer = 0, Optional ByVal pbMultiriesgo As Boolean = False, Optional ByVal pnDatoVivienda As Integer, Optional ByVal pnCuotaBalon As Integer = 0, Optional ByVal pnMontoMivivienda As Currency = 0#, Optional ByVal pnCuotaMivienda As Integer = -1, _
        Optional pnTasaExononeracion As Double = 0, Optional pbPreferencial As Integer = 0, Optional ByRef pvGravamen As Variant = Nothing, Optional ByRef pbRequierePoliza As Boolean = False, Optional ByVal prsSobreEndCodigos As ADODB.Recordset = Nothing, _
        Optional ByVal pnMontoExpEsteCred As Double = 0#) As String
        'DAOR 20061216: Se aumentó el parametro Numero de Consultas a Certicom
'Se agrego el Numero de consultas Score Microfinanzas Gitu 20-05-2009
'Se agrego los parametros "prsRelEmp","nMontoTasacion","nMontoCEC" - BRGO 20111103
'Se agrego los parametros pbMicroseguro, pnTipoMicroseguro, pbMultiriesgo -WIOR 20120517
'Se agrego parametro pnDatoVivienda - JUEZ 20130913
        'WIOR 20131111 AGREGO pnCuotaBalon
'ALPA20141030 se agregó parametro pnTasaExononeracion
'ALPA 20141030 AGREGO pbExoneracionTasa
'EJVG20150513 Agregó pvGravamen
'WIOR 20160613 AGREGO Optional ByVal prsSobreEndCodigos As ADODB.Recordset = Nothing
'EJVG2016713 Se agregó pnMontoExpEsteCred y pbEliminarEvaluacion
Dim oCredito As COMDCredito.DCOMCredActBD
Dim oLinea As COMDCredito.DCOMLineaCredito
Dim R As ADODB.Recordset
Dim i As Integer
Dim sSql As String
Dim D As COMConecta.DCOMConecta
Dim nRefin As Integer
Dim bEsRefinanciado As Boolean 'DAOR 20070409
Dim Index As Integer
Dim lvGravamen() As tGarantiaGravamen

    On Error GoTo ErrorSugerenciaCredito
    Set D = New COMConecta.DCOMConecta
    sSql = "Select cCtaCod from ColocacRefinanc where cCtaCod = '" & psCtaCod & "'"
    D.AbreConexion
    Set R = D.CargaRecordSet(sSql)
    If R.RecordCount > 0 Then
        nRefin = 2
        bEsRefinanciado = True 'DAOR 20070409
    Else
        nRefin = 1
    End If

'    sSql = "DELETE CredAprobacion Where cCtaCod = '" & psCtaCod & "'"
'    D.ConexionActiva.Execute sSql

     '******* comentado valido para edpyme confianza 20-06-2006 avmm ************
'    sSql = "Select CC.cCodCargo, CC.bComentario"
'    sSql = sSql & " From CredRangoCargo CC"
'    sSql = sSql & " Inner Join CredRangos CR ON CR.ccodRango = CC.ccodRango"
'    sSql = sSql & " Where CR.nMoneda = " & Mid(psCtaCod, 9, 1) & " And CR.nTipoCred = " & nRefin
'    sSql = sSql & " And CR.nMontoMin <= " & Format(pnMonto, "#0.00") & " And CR.nMontoMax >= " & Format(pnMonto, "#0.00")
'    sSql = sSql & " AND CR.cCodProd='" & Mid(psCtaCod, 6, 3) & "'"
'
'    Set R = D.CargaRecordSet(sSql)
'    Do While Not R.EOF
'
'        sSql = "INSERT INTO CredAprobacion(cCtaCod, cCodCargo, cCodUsu, cNomUsu, dFecApr, bComen, cComen) "
'        sSql = sSql & " VALUES('" & psCtaCod & "','" & R!cCodCargo & "',NULL,NULL,NULL," & IIf(R!bComentario, "1", "0") & ", NULL)"
'
'        D.ConexionActiva.Execute sSql
'
'        R.MoveNext
'    Loop
'    D.CierraConexion
'    Set D = Nothing
    '******************************************************************************
    'EJVG20150513 ***
    If Not IsArray(pvGravamen) Then
    SugerenciaCredito = ValidaGarantia(psCtaCod, pdEstado, pnMonto, bAmpliacion)
    If SugerenciaCredito <> "" Then
        Exit Function
    End If
    End If
    'END EJVG *******
    Set oCredito = New COMDCredito.DCOMCredActBD
    oCredito.dBeginTrans
    'EJVG20150513 ***
    If IsArray(pvGravamen) Then
        lvGravamen = pvGravamen
        If Not GrabarCoberturaGarantia(psCtaCod, psTpoProdCod, pnMonto, lvGravamen, oCredito) Then
            SugerenciaCredito = "Sucedió un error al registrar las coberturas de las Garantías"
            oCredito.dRollbackTrans
            Set oCredito = Nothing
            Exit Function
        End If
    End If
    'END EJVG *******
    Call oCredito.dUpdateProducto(psCtaCod, pnTasa, 0#, pnEstado, pdEstado, pnNroTransac, False)
'ALPA 20100607 B2*************************
    'Inserta Tasa Compensatoria
'    If pnEstadoActual <> pnEstado Then
'        Call oCredito.dInsertProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntCompNormal, pnTasa, False)
'    Else
'        Call oCredito.dUpdateProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntCompNormal, pnTasa, False)
'    End If
    Call oCredito.dDeleteProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntCompNormal, False)
    Call oCredito.dInsertProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntCompNormal, pnTasa, False)
'******************************************
    'Inserta TasaGracia
    If pnGraciaSug > 0 Then
        Call oCredito.dDeleteProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia, False)
        Call oCredito.dInsertProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia, pnTasaGracia, False)
    Else
        Call oCredito.dDeleteProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia, False)
    End If

    'Interes Compenstorio Vencido
    Call oCredito.dDeleteProductoTasaInteres(psCtaCod, 6, False)
    Call oCredito.dInsertProductoTasaInteres(psCtaCod, 6, Format(((1 + pnTasa / 100) ^ (1 / 30) - 1) * 100, "#0.0000"), False)
    'Interes Compenstorio Mora
    Call oCredito.dDeleteProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntMoratNormal, False)
    Call oCredito.dInsertProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntMoratNormal, pnTasaMora, False)
    'ALPA 20100604 B2*****************************************************************************************************************************************************
    'Call oCredito.dUpdateColocaciones(psCtaCod, pnPlazo, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), 0, pnTipoCuota, psLineaCred, pdEstado, False)
    'ALPA 20150129***********
    'Call oCredito.dUpdateColocaciones(psCtaCod, pnPlazo, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), 0, pnTipoCuota, psLineaCred, pdEstado, False, , , , , psTipoCredCod, psTipoInstCod, pnMontoMivivienda, pnCuotaMivienda)
    Call oCredito.dUpdateColocaciones(psCtaCod, pnPlazo, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), 0, pnTipoCuota, psLineaCred, pdEstado, False, , , , , psTipoCredCod, psTipoInstCod, pnMontoMivivienda, pnCuotaMivienda, pnTasaExononeracion, pbPreferencial)
    'ALPA 20100604 B2*****************************************************************************************************************************************************
    If pnEstadoActual <> pnEstado Then
        If bQuincenal = True Then
           Call oCredito.dInsertColocacEstado(psCtaCod, pdEstado, pnEstado, pnNroCuotas, pnMonto, Replace(psDescripcion, "'", "''"), 81, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, , , , , pnCuotaBalon) 'WIOR 20131111 AGREGO pnCuotaBalon
        Else
           'Se modifico para manejar 2 dias fijos
           Call oCredito.dInsertColocacEstado(psCtaCod, pdEstado, pnEstado, pnNroCuotas, pnMonto, Replace(psDescripcion, "'", "''"), pnTipoCuota, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, pnDiaFijo2, pnIncremCapital, , , pnCuotaBalon) 'WIOR 20131111 AGREGO
        End If
    Else
        If bQuincenal = True Then
            Call oCredito.dUpdateColocacEstado(psCtaCod, pdEstado, pnEstado, pnNroCuotas, pnMonto, Replace(psDescripcion, "'", "''"), 81, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, psTipoGasto, pnCuotaBalon) 'WIOR 20131111 AGRGEO pnCuotaBalon
        Else
            'Se modifico para manejar 2 dias fijos
            Call oCredito.dInsertColocacEstado(psCtaCod, pdEstado, pnEstado, pnNroCuotas, pnMonto, Replace(psDescripcion, "'", "''"), pnTipoCuota, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, pnDiaFijo2, pnIncremCapital, , , pnCuotaBalon) 'WIOR 20131111 AGREGO pnCuotaBalon
        End If
    End If

    '*** BRGO 20111103 - Registra los datos de las Empresas Vinculadas ************************
    '**ARLO20180712 ERS042 - 2018
    Set objProducto = New COMDCredito.DCOMCredito
    If objProducto.GetResultadoCondicionCatalogo("N0000136", psTpoProdCod) Then
    'If psTpoProdCod = "517" Then
    '**ARLO20180712 ERS042 - 2018
        Call oCredito.EliminaRelacionesInfogas(psCtaCod)
        While Not prsRelEmp.EOF And Not prsRelEmp.BOF
            Call oCredito.AgregaNuevoProdPersCofide(psCtaCod, prsRelEmp!Codigo, Trim(Right(prsRelEmp!Relacion, 4)), prsRelEmp!CtaAbono, prsRelEmp!Monto)
            prsRelEmp.MoveNext
        Wend
        Call oCredito.AgregaNuevoProdPersCofide(psCtaCod, 16, 16, "", nMontoTasacion) 'Se graba el monto de la Tasación
        Call oCredito.AgregaNuevoProdPersCofide(psCtaCod, 17, 17, "", nMontoCEC) 'Se graba el monto de la Comisión Estructuración de Caja
    End If
    '*** END BRGO *****************************************************************************

    Set oLinea = New COMDCredito.DCOMLineaCredito
    'Comentado por DAOR 20070409
    'Set R = oLinea.RecuperaLineadeCredito(psLineaCred)
    'DAOR 20070409****************************************************
    If Not bEsRefinanciado Then
        Set R = oLinea.RecuperaLineadeCredito(psLineaCred)
    Else
        Set R = oLinea.RecuperaLineadeCredito(psLineaCred, False)
    End If
    '*****************************************************************
    Set oLinea = Nothing
'    If bQuincenal = True Then
'        Call oCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , 81, pnCalendDinamico, pnTipoDesemb, nNroCalend, , R!cPersCod, IIf(IsNull(R!nMoneda), CInt(Mid(psLineaCred, 5, 1)), R!nMoneda), False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , pnVAC)
'    Else
'        Call oCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , pnTipoCuota, pnCalendDinamico, pnTipoDesemb, nNroCalend, , R!cPersCod, IIf(IsNull(R!nMoneda), CInt(Mid(psLineaCred, 5, 1)), R!nMoneda), False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , pnVAC)
'    End If
    
    'DAOR 20061216, Se aumentó el campo pnNumConCer
    'Se aumento el campo pnNumConMic Gitu 20-05-2009
    If bQuincenal = True Then
        Call oCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , 81, pnCalendDinamico, pnTipoDesemb, nNroCalend, , R!cPersCod, IIf(IsNull(R!nMoneda), CInt(Mid(psLineaCred, 5, 1)), R!nMoneda), False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , pnVAC, , , pnNumConCer, , , , , pnNumConMic, , pnDatoVivienda, pnCuotaBalon) 'WIOR 20131111 AGREGO pnCuotaBalon
    Else
        Call oCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , pnTipoCuota, pnCalendDinamico, pnTipoDesemb, nNroCalend, , "", Mid(psCtaCod, 9, 1), False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , pnVAC, , , pnNumConCer, , , , , pnNumConMic, , pnDatoVivienda, pnCuotaBalon) 'WIOR 20131111 AGREGO pnCuotaBalon
    End If

    R.Close
    Set R = Nothing
    'Borrado de Calendario
    Call oCredito.dDeleteColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplDesembolso, , , False)
    Call oCredito.dDeleteColocCalendario(psCtaCod, nNroCalend, gColocCalendAplDesembolso, , False)

    Call oCredito.dDeleteColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, , , False)
    Call oCredito.dDeleteColocCalendario(psCtaCod, nNroCalend, gColocCalendAplCuota, , False)


    'Nuevo Calendario
    For i = 0 To UBound(MatCalendDes) - 1
        Call oCredito.dInsertColocCalendario(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, CDate(MatCalendDes(i, 0)), gColocCalendEstadoPendiente, "Calendario de Sugerencia Desembolsos", gColocCalendConceptoProcSugerido, False)
        Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatCalendDes(i, 1)), 0, "", False)
    Next i
    
    '**ARLO20180712 ERS042 - 2018
    bEsPro515 = False
    bEsPro516 = False
    
    Set objProducto = New COMDCredito.DCOMCredito
    If objProducto.GetResultadoCondicionCatalogo("N0000108", Mid(psCtaCod, 6, 3)) Then
        bEsPro515 = True
    ElseIf objProducto.GetResultadoCondicionCatalogo("N0000109", Mid(psCtaCod, 6, 3)) Then
        bEsPro516 = True
    End If
    
    For i = 0 To UBound(MatCalendPagos) - 1
        Call oCredito.dInsertColocCalendario(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), CDate(MatCalendPagos(i, 0)), gColocCalendEstadoPendiente, "Calendario de Sugerencia Pagos", gColocCalendConceptoProcSugerido, False)
        If pnTipoCuota <> gColocCalendCodCL Then
            Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
            Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
            Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresMoratorio, 0, 0, "", False)
            If CDbl(MatCalendPagos(i, 5)) > 0 Then
                Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresGracia, CDbl(MatCalendPagos(i, 5)), 0, "", False)
            End If
            
            '->***** LUCV20180601. Según ERS022-2018
            If CDbl(MatCalendPagos(i, 7)) > 0 Then 'Seguro Desgravamen
                Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoSeguro7, CDbl(MatCalendPagos(i, 7)), 0, "", False)
            End If
            
            If CDbl(MatCalendPagos(i, 8)) > 0 Then 'Poliza Contra Incendio - Hipotecarios
                Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoPolizaIncendioHipoteca, CDbl(MatCalendPagos(i, 8)), 0, "", False)
            End If
            
            If CDbl(MatCalendPagos(i, 9)) > 0 Then 'Poliza Contra Incendio - Hipotecarios (Periodo Gracia - Prorrateado)
                Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoPolizaIncendioHipotecaGracia, CDbl(MatCalendPagos(i, 9)), 0, "", False)
            End If
            '<-***** Fin LUCV20180601
            
            Set objProducto = New COMDCredito.DCOMCredito
            If objProducto.GetResultadoCondicionCatalogo("N0000110", Mid(psCtaCod, 6, 3)) Then
                Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoIGV, CDbl(MatCalendPagos(i, 6)), 0, "", False)
            End If
            '***************************************************************************
        Else
            Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
            Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
            Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(bEsPro515, MatCalendPagos(i, 1), IIf(bEsPro516, MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresMoratorio, 0, 0, "", False)
        End If
    Next i
    '**ARLO20180712 ERS042 - 2018

    'WIOR 20160111 - COMENTO
    '    If pnMiViv = 1 Then
    '        Call oCredito.dDeleteColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, , , False)
    '        Call oCredito.dDeleteColocCalendario(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, , False)
    '        For i = 0 To UBound(MatCalendPagos_2) - 1
    '            Call oCredito.dInsertColocCalendario(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, CDate(MatCalendPagos_2(i, 0)), gColocCalendEstadoPendiente, "Calendario de Sugerencia Pagos", gColocCalendConceptoProcSugerido, False)
    '            If pnTipoCuota <> gColocCalendCodCL Then
    '                Call oCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos_2(i, 3)) - CDbl(MatCalendPagos(i, 3)), 0, "", False)
    '                Call oCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos_2(i, 4)) - CDbl(MatCalendPagos(i, 4)), 0, "", False)
    '                Call oCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
    '                If CDbl(MatCalendPagos_2(i, 5)) > 0 Then
    '                    Call oCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalendPagos_2(i, 5)), 0, "", False)
    '                End If
    '            End If
    '        Next i
    '    End If
    
    'WIOR 20120517 ************************************************************************
    Call oCredito.QuitarColocacionMicroseguro(psCtaCod)
    Call oCredito.QuitarColocacionMultiriesgo(psCtaCod)
    If pbMicroseguro Then
        Call oCredito.RegistrarColocacionMicroseguro(psCtaCod, pnTipoMicroseguro, pdEstado, 1)
    Else
        Call oCredito.QuitarBeneficiariosMicroseguro(psCtaCod)
    End If
    
    If pbMultiriesgo Then
        Call oCredito.RegistrarColocacionMultiriesgo(psCtaCod, pdEstado, 1)
    Else
        Call oCredito.QuitarMueblesMultiriesgo(psCtaCod)
    End If
    'WIOR - FIN ***************************************************************************
    Call ActualizaCreditosVigentes(pMatCredVig)
    
    'EJVG20150602 ***
    pbRequierePoliza = RequierePoliza(psCtaCod, psTipoCredCod, pnMonto, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), , oCredito)
    If pbRequierePoliza Then
        oCredito.CancelarSolicitudPoliza psCtaCod, oCredito.GeneraMovNro(pdEstado, "01", "SIST"), "Cancelación de Solicitud de Poliza por edición de Sugerencia", True
        oCredito.InsertarSolicitudPoliza psCtaCod, CDate(pdEstado & " " & oCredito.coConex.GetHoraServer())
    End If
    'END EJVG *******
    
    'WIOR 20160613 ***
    'CTI3 ERS0032020*********************************************************
'    oCredito.SobreEndEliminarSolicitudBloq psCtaCod
'
'    If Not prsSobreEndCodigos Is Nothing Then
'        oCredito.SobreEndRegistrarSolicitudBloq psCtaCod, prsSobreEndCodigos
'    End If
    '************************************************************************
    'WIOR FIN ********
    'CTI3 ERS0032020
    oCredito.RegistrarCuotasRSE_Admision psCtaCod
    '**********************************
    oCredito.dUpdateMontoExposicionEsteCredito psCtaCod, pnMontoExpEsteCred 'EJVG20160712
    
    oCredito.InsertarObservacionesCredSegDesg psCtaCod, pnMonto 'APRI20181121 ERS071-2018
    
    'oCredito.dEjecutaBatch
    oCredito.dCommitTrans
    Set oCredito = Nothing

    Exit Function

ErrorSugerenciaCredito:
    oCredito.dRollbackTrans
    Err.Raise Err.Number, "Error En Proceso SugerenciaCredito", Err.Description

End Function
Public Function EsRefinanciado(ByVal psCtaCod As String, Optional ByVal PregCapInt As Boolean = False) As Boolean
Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset

    On Error GoTo ErrorEsRefinanciado
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacRefinanc(psCtaCod)


    Set oCred = Nothing
    If R.RecordCount > 0 Then
        If PregCapInt Then
            Set oCred = New COMDCredito.DCOMCredito
            Set R = oCred.RecuperaColocacCred(psCtaCod)
            Set oCred = Nothing
            If R!bRefCapInt = True Then
                EsRefinanciado = True
            Else
                EsRefinanciado = False
            End If
            R.Close
        Else
            EsRefinanciado = True
        End If

    Else
        EsRefinanciado = False
    End If
    Exit Function

ErrorEsRefinanciado:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function


Public Function EsSustiDeudor(ByVal psCtaCod As String, Optional ByVal PregCapInt As Boolean = False) As Boolean
Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset

    On Error GoTo ErrorEsSustiDeudor
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacRefinanc(psCtaCod)

    Set oCred = Nothing
    If R.RecordCount > 0 Then
        If R!bSustiDeudor Then
            'Set oCred = New COMDCredito.DCOMCredito
            'Set R = oCred.RecuperaColocacCred(psCtaCod)
            'Set oCred = Nothing
            'If R!bRefCapInt = True Then
            '    EsSustiDeudor = True
            'Else
            '    EsSustiDeudor = False
            'End If
            R.Close
            EsSustiDeudor = True
        Else
            EsSustiDeudor = False
        End If

    Else
        EsSustiDeudor = False
    End If
    Exit Function

ErrorEsSustiDeudor:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function MontosARefinanciar(ByVal psCtaCod As String, ByVal pdHoy As Date) As Variant
Dim R As ADODB.Recordset
Dim MatCalend As Variant
Dim MatCalendTempo As Variant
Dim nMontoInt As Double
Dim nMontoGastos As Double
Dim nMontoCap As Double
Dim oCredito As COMDCredito.DCOMCredito
Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nTipoCambioFijo As Double
Dim nInteres As Double
Dim nGastos As Double
Dim nCapital As Double

    On Error GoTo ErrorMontosARefinanciar
    nMontoInt = 0
    nMontoGastos = 0
    nMontoCap = 0


    Set oGeneral = New COMDConstSistema.DCOMGeneral
    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdHoy, TCFijoMes)
    nTipoCambioFijo = CDbl(Format(nTipoCambioFijo, "#0.000"))
    Set oGeneral = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaCreditosRefinanciados(psCtaCod)
    Set oCredito = Nothing
    Do While Not R.EOF
        MatCalend = RecuperaMatrizCalendarioPendiente(R!cCtaCodref)
        MatCalendTempo = RecuperaMatrizCalendarioPendiente(R!cCtaCodref, True)
        MatCalend = UnirMatricesMiViviendaAmortizacion(MatCalend, MatCalendTempo)

        'Agregado por LMMD
        'MAVM 10112009 Se agrego los intereses compensatorios
        nInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCalend, pdHoy) - MatrizGastosFecha(R!cCtaCodref, MatCalend) + MatrizInteresGraAFecha(R!cCtaCodref, MatCalend, pdHoy)
        'nGastos = MatrizGastosFecha(R!cCtaCodref, MatCalend)
        nGastos = TotalGastosAFecha(R!cCtaCodref, pdHoy) 'JUEZ 20140922
        nCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCalend)

        'verificando la moneda
        If Mid(psCtaCod, 9, 1) = "1" Then
            'Soles
             If Mid(R!cCtaCodref, 9, 1) = "2" Then
                 nInteres = nInteres * nTipoCambioFijo
                 nGastos = nGastos * nTipoCambioFijo
                 nCapital = nCapital * nTipoCambioFijo
             End If
        Else
            'Dolares
            If Mid(R!cCtaCodref, 9, 2) = "1" Then
               nInteres = (nInteres / nTipoCambioFijo)
               nGastos = (nGastos / nTipoCambioFijo)
               nCapital = (nCapital / nTipoCambioFijo)
            End If
        End If

'        nMontoInt = nMontoInt + MatrizInteresGastosAFecha(R!cCtaCodref, MatCalend, pdHoy) - MatrizGastosFecha(R!cCtaCodref, MatCalend)
'        nMontoGastos = nMontoGastos + MatrizGastosFecha(R!cCtaCodref, MatCalend)
'        nMontoCap = nMontoCap + MatrizCapitalAFecha(R!cCtaCodref, MatCalend)

        nMontoInt = nMontoInt + nInteres
        nMontoGastos = nMontoGastos + nGastos
        nMontoCap = nMontoCap + nCapital

        R.MoveNext
    Loop
    R.Close
    Set R = Nothing

    MontosARefinanciar = Array(Format(nMontoInt, "#0.00"), Format(nMontoGastos, "#0.00"), Format(nMontoCap, "#0.00"))
    Exit Function

ErrorMontosARefinanciar:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

'LUCV20160617, Segun ERS004-2016 **********
Public Function MontosARefinanciarAprobacion(ByVal psCtaCod As String, ByVal pdHoy As Date) As Variant
'NOTA:
     'CAnt.: Credito Anterior o Credito de Referencia(Crédito que fue Refinaciado)
     'CNue.: Crédito Nuevo Refinanciado ("Credito Nuevo", resultado de la refinanciacion del "Credito de referencia")
Dim R As ADODB.Recordset
Dim rsRefinaSol As ADODB.Recordset
Dim rsColoc As ADODB.Recordset 'Para CAnt.
Dim rsProducto As ADODB.Recordset
Dim MatCalend As Variant
Dim MatCalendTempo As Variant

Dim oCredito As COMDCredito.DCOMCredito
Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nTipoCambioFijo As Double

Dim nInteres As Double
Dim nGastos As Double
Dim nCapital As Double
Dim MatRefinaAproba() As String

Dim nSaldoCal As Double 'Calculo Saldo para CNue.
Dim pnTasa As Double 'Tasa para el CAnt.

 On Error GoTo ErrorMontosARefinanciarAprobacion
    Set oGeneral = New COMDConstSistema.DCOMGeneral
    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdHoy, TCFijoMes)
    nTipoCambioFijo = CDbl(Format(nTipoCambioFijo, "#0.000"))
    Set oGeneral = Nothing
    
    'Recupera los Créditos Refinanciados:
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaCreditosRefinanciados(psCtaCod)
    Set oCredito = Nothing
    
'    '1. Obtener: Saldo y FechaInicial del CAnt.
'    Set oCredito = New COMDCredito.DCOMCredito
'    Set rsColoc = oCredito.RecuperaColocaciones(R!cCtaCodref)
'    Set oCredito = Nothing
'    dFecIni = R!dMontoColUltCal
'    nSaldoCal = R!nMontoColUltCal
'    rsColoc.Close
'    Set rsColoc = Nothing
'
'    '2. Calculo de Tasa del CAnt.
'    Set oCredito = New COMDCredito.DCOMCredito
'    Set rsProducto = oCredito.RecuperaProducto(R!cCtaCodref)
'    Set oCredito = Nothing
'    pnTasa = R!nTasaInteres
'    rsProducto.Close
'    Set rsProducto = Nothing
    
    'Redimension de la Matriz
    If Not R.BOF And Not R.EOF Then
    ReDim MatRefinaAproba(R.RecordCount, 10)
    Else
    ReDim MatRefinaAproba(0, 0)
    End If
    
    Do While Not R.EOF
        'Extraido de la Validacion de "MontosARefinanciar" (Aprobacion)
        MatCalend = RecuperaMatrizCalendarioPendiente(R!cCtaCodref)
        MatCalendTempo = RecuperaMatrizCalendarioPendiente(R!cCtaCodref, True)
        MatCalend = UnirMatricesMiViviendaAmortizacion(MatCalend, MatCalendTempo)
            nInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCalend, pdHoy) - MatrizGastosFecha(R!cCtaCodref, MatCalend) + MatrizInteresGraAFecha(R!cCtaCodref, MatCalend, pdHoy)
            nGastos = TotalGastosAFecha(R!cCtaCodref, pdHoy)
            nCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCalend)
        
        'Verificacion de Moneda (psCtaCod <> cCtaRef)
        If Mid(psCtaCod, 9, 1) = "1" Then
            'Soles a Dolares
             If Mid(R!cCtaCodref, 9, 1) = "2" Then
                 nInteres = nInteres * nTipoCambioFijo
                 nGastos = nGastos * nTipoCambioFijo
                 nCapital = nCapital * nTipoCambioFijo
             End If
        Else
            'Dolares a Soles
            If Mid(R!cCtaCodref, 9, 2) = "1" Then
               nInteres = (nInteres / nTipoCambioFijo)
               nGastos = (nGastos / nTipoCambioFijo)
               nCapital = (nCapital / nTipoCambioFijo)
            End If
        End If
         
        'Matriz para Insertar-> (Colocacrefinanc y ColocacRefinancDet) (Extraido de la Solicitud de Credito Refinanciado. Opcion: Refinanciar)
        MatRefinaAproba(R.Bookmark - 1, 0) = psCtaCod
        MatRefinaAproba(R.Bookmark - 1, 1) = R!cCtaCodref
        MatRefinaAproba(R.Bookmark - 1, 2) = Format(nCapital + nGastos + nInteres, "#0.00") 'Monto (Capital + Gastos + Intereses)
        MatRefinaAproba(R.Bookmark - 1, 3) = Format(nCapital, "#0.00") 'Capital
        'MatRefinaAproba(R.Bookmark - 1, 4) = Format(MatrizInteresCompAFecha(R!cCtaCodref, MatCalend, pdHoy, nSaldoCal, pnTasa) + MatrizInteresCompVencidoFecha(psCtaCod, MatCalend), "#0.00") '+ lnInteresDiferido 'Interes Compensatorio
        MatRefinaAproba(R.Bookmark - 1, 4) = Format(MatrizInteresCompAFecha(R!cCtaCodref, MatCalend, pdHoy) + MatrizInteresCompVencidoFecha(psCtaCod, MatCalend), "#0.00") '+ lnInteresDiferido 'Interes Compensatorio
        MatRefinaAproba(R.Bookmark - 1, 5) = Format(MatrizInteresMorFecha(R!cCtaCodref, MatCalend), "#0.00") 'Interes Moratorio
        'MatRefinaAproba(R.Bookmark - 1, 6) = Format(MatrizInteresGraciaFecha(R!cCtaCodref, MatCalend, pdHoy, nSaldoCal), "#0.00") 'Interes Gracia
        MatRefinaAproba(R.Bookmark - 1, 6) = Format(MatrizInteresGraciaFecha(R!cCtaCodref, MatCalend, pdHoy), "#0.00") 'Interes Gracia
        MatRefinaAproba(R.Bookmark - 1, 7) = Format(MatrizInteresSuspensoFecha(R!cCtaCodref, MatCalend), "#0.00") 'Interes Suspendido
        MatRefinaAproba(R.Bookmark - 1, 8) = Format(MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCalend), "#0.00") ' Interes Reprogramado
        MatRefinaAproba(R.Bookmark - 1, 9) = Format(nGastos, "#0.00") 'Gastos
    R.MoveNext
    Loop
    R.Close
    Set R = Nothing
    MontosARefinanciarAprobacion = MatRefinaAproba
    Exit Function

ErrorMontosARefinanciarAprobacion:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'Fin -> LUCV20160617 **********


'MAVM 20130209
'Private Function ValidaGarantia(ByVal psCtaCod As String, ByVal pdGarantia As Date, ByVal pnMonto As Double, Optional ByVal bAmpliacion As Boolean) As String
Public Function ValidaGarantia(ByVal psCtaCod As String, ByVal pdGarantia As Date, ByVal pnMonto As Double, Optional ByVal bAmpliacion As Boolean) As String
Dim oCred As COMDCredito.DCOMCredito
Dim nPorcGarant As Double
Dim nMontoGarantia As Double
Dim rsCred As ADODB.Recordset

    On Error GoTo ErrorValidaSugerenciaAprobacion
    Set oCred = New COMDCredito.DCOMCredito
    nMontoGarantia = oCred.RecuperaMontoGarantiaCredito(psCtaCod, pdGarantia, bAmpliacion)
    '*** BRGO 20111107 *********************************
    '**ARLO20180712 ERS042 - 2018
    Set objProducto = New COMDCredito.DCOMCredito
    If objProducto.GetResultadoCondicionCatalogo("N0000111", Mid(psCtaCod, 6, 3)) Then
    'If Mid(psCtaCod, 6, 3) = "517" Then
    '**ARLO20180712 ERS042 - 2018
        Set rsCred = oCred.RecuperaParametro(1029)
        If Not rsCred.EOF And Not rsCred.BOF Then
            nPorcGarant = rsCred!nParamValor
            pnMonto = pnMonto * nPorcGarant
        End If
    End If
    '*** END BRGO **************************************
    Set oCred = Nothing
    ValidaGarantia = ""
    If nMontoGarantia < pnMonto Then
        ValidaGarantia = "Garantia No Cubre el Monto del Credito"
        Exit Function
    End If
    Exit Function

ErrorValidaSugerenciaAprobacion:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function CalendarioDesembolsos(ByVal psCtaCod As String, ByVal pnMonto As Double, _
        ByVal pnTipoDesemb As ColocTiposDesembolso, ByVal nNroCalend As Integer, _
        ByVal MatCalendDes As Variant) As String

Dim oCredito As COMDCredito.DCOMCredActBD
Dim oDCalend As COMDCredito.DCOMCalendario
Dim i As Integer
Dim bTransac As Boolean

    On Error GoTo ErrorCalendarioDesembolsos
    bTransac = False

    CalendarioDesembolsos = ValidaGrabarDesembolso(psCtaCod, pnMonto)

    If CalendarioDesembolsos <> "" Then
        Exit Function
    End If

    Set oCredito = New COMDCredito.DCOMCredActBD
    Call oCredito.dBeginTrans
    bTransac = True

    Call oCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , nNroCalend, , , , False, , , -1)

    'NUEVO CALENDARIO

    'Desembolsos
    Dim nMontoPagado As Double

    For i = 0 To UBound(MatCalendDes) - 1

        If CInt(MatCalendDes(i, 2)) = 1 Then
           nMontoPagado = CDbl(MatCalendDes(i, 1))
        Else
            nMontoPagado = 0
        End If

        Call oCredito.dInsertColocCalendario(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, CDate(MatCalendDes(i, 0)), CInt(MatCalendDes(i, 2)), "Nuevo Calendario de Desembolsos", gColocCalendConceptoProcOtro, False)
        Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatCalendDes(i, 1)), nMontoPagado, "", False)
    Next i


    'Pagos
    Dim RColocCalendPagosActual As ADODB.Recordset
    Dim RCalendPagosDetActual As ADODB.Recordset

    Set oDCalend = New COMDCredito.DCOMCalendario

        Set RColocCalendPagosActual = oDCalend.RecuperaColocCalendario(psCtaCod, nNroCalend - 1, gColocCalendAplCuota)
        Set RCalendPagosDetActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalend - 1, gColocCalendAplCuota)

    'Inserta ColocCalendario
        Do While Not RColocCalendPagosActual.EOF
           Call oCredito.dInsertColocCalendario(psCtaCod, nNroCalend, RColocCalendPagosActual!nColocCalendApl, RColocCalendPagosActual!nCuota, RColocCalendPagosActual!dVenc, RColocCalendPagosActual!ncoloccalendestado, RColocCalendPagosActual!CDescripcion, RColocCalendPagosActual!nCalendProc, False)
           RColocCalendPagosActual.MoveNext
        Loop
        RColocCalendPagosActual.Close

        'Inserta ColocCalendario ColocCalendDet
        Do While Not RCalendPagosDetActual.EOF
           Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, RCalendPagosDetActual!nColocCalendApl, RCalendPagosDetActual!nCuota, RCalendPagosDetActual!nPrdConceptoCod, RCalendPagosDetActual!nMonto, RCalendPagosDetActual!nMontoPagado, RCalendPagosDetActual!cFlag, False)
           RCalendPagosDetActual.MoveNext
        Loop
        RCalendPagosDetActual.Close


    oCredito.dCommitTrans
    Set oCredito = Nothing

    Exit Function

ErrorCalendarioDesembolsos:
    If bTransac Then
        oCredito.dRollbackTrans
        Set oCredito = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso CalendarioDesembolsos", Err.Description

End Function

Public Function ImprimeConsolidadoCred(ByVal psCtaCod As String, ByVal psOrigen As String, ByVal pdFecha As Date) As ADODB.Recordset

Dim oCon As COMConecta.DCOMConecta
Dim Sql  As String
Set oCon = New COMConecta.DCOMConecta

oCon.AbreConexion
Sql = "SELECT GETDATE() "
Set ImprimeConsolidadoCred = oCon.CargaRecordSet(Sql)
oCon.CierraConexion
Set oCon = Nothing

End Function


Public Function ImprimeConsolidadoConsumo(ByVal psCtaCod As String, ByVal psOrigen As String, ByVal pdFecha As Date) As ADODB.Recordset
    
    Dim oCon As COMConecta.DCOMConecta
    Dim Sql As String
    Set oCon = New COMConecta.DCOMConecta

    
    oCon.AbreConexion
    Sql = "Select GETDATE() "
    Set ImprimeConsolidadoConsumo = oCon.CargaRecordSet(Sql)
    oCon.CierraConexion
    Set oCon = Nothing

End Function

' Creado para Imprimer contrato Agricola
Public Function ImprimeConsolidadoCredAgricola(ByVal pstrCtaCod As String, ByVal psOrigen As String, pdFecha As Date) As ADODB.Recordset
Dim oCon As COMConecta.DCOMConecta
Dim Sql  As String
Set oCon = New COMConecta.DCOMConecta

oCon.AbreConexion
Sql = "SELECT GETDATE() "
Set ImprimeConsolidadoCredAgricola = oCon.CargaRecordSet(Sql)
oCon.CierraConexion
Set oCon = Nothing

End Function


Public Function AprobacionCredito(ByVal psCtaCod As String, ByVal pnEstado As ColocEstado, ByVal pdEstado As Date, ByVal pnNroTransac As Long, ByVal psLineaCred As String, ByVal pnTasa As Double, ByVal pnMonto As Double, _
        ByVal pnNroCuotas As Integer, ByVal pnPlazo As Integer, ByVal pnTipoCuota As ColocTipoCalend, ByVal pnDiaFijo As Integer, _
        ByVal pnProxMes As Integer, ByVal pnTipoDesemb As ColocTiposDesembolso, ByVal pnCalendDinamico As Integer, _
        ByVal pnGraciaSug As Integer, ByVal pnTasaGracia As Double, ByVal pnTipoGracia As ColocTiposGracia, _
        ByVal nNroCalend As Integer, ByVal MatCalendDes As Variant, ByVal MatCalendPagos As Variant, _
        ByVal MatGastos As Variant, ByVal pNumGastos As Integer, ByVal psApoderado As String, _
        ByVal pnCuotaCom As Integer, ByVal pnMiViv As Integer, ByVal pnNroCalenPar As Integer, _
        Optional ByVal MatCalendPagos_2 As Variant = "", _
        Optional pbRefinanc As Boolean = False, Optional pbCapitalInter As Boolean = False, _
        Optional ByVal psCodAge As String = "", Optional ByVal psCodUsu As String = "", Optional ByVal psTipoGasto As String = "F", Optional ByVal MatCredVig As Variant = "", _
        Optional ByVal bAmpliacion As Boolean, Optional ByVal bQuincenal As Boolean, _
        Optional ByVal pbBloqueo As Integer = 0, Optional ByVal pnDiaFijo2 As Integer = 0, Optional ByVal pnIncremCapital As Integer = -1, _
        Optional ByVal pbGraciaEnCuotas As Integer = -1, Optional ByVal pnAproReglamento As Integer = 0, Optional ByVal pnExoSeguroDes As Integer = 0, _
        Optional ByVal pbDesBcoNac As Boolean = False, Optional ByVal psClaveCli As String = "", Optional ByVal psCodAgeBcoNac As String = "", _
        Optional ByVal pnTasCosEfeAnu As Double = 0, Optional ByVal psCtaCodAho As String = "", Optional ByRef pnMovNro1 As Long, Optional ByRef pIdCampana As Integer = -1, Optional ByVal psDestCred As String, Optional ByVal psCondCred As String, Optional ByVal psPersCod As String = "", _
        Optional ByVal pnMontoOri As Double, Optional ByVal pnDiasVoucher As Integer = -1, Optional ByVal pnExoSegMYPE As Integer = 0, Optional ByVal pbTrabajadoVinc As Boolean = False, Optional ByVal pnTipoVinculado As Integer, Optional ByVal pnMontoMivivienda As Currency = 0#, _
        Optional ByVal pMatCalendSegDes As Variant, Optional ByRef pArrDatos As Variant = Nothing) As String
        'DAOR 20070202, DAOR 20070419 pnTasCosEfeAnu
        'Optional ByVal pnTasCosEfeAnu As Double = 0, Optional ByVal psCtaCodAho As String = "", Optional ByRef pnMovNro1 As Long, Optional ByRef pIdCampana As Integer = -1, Optional ByVal psDestCred As String, Optional ByVal psCondCred As String) As String 'DAOR 20070202, DAOR 20070419 pnTasCosEfeAnu
        'By Capi 10042008 Se agrego parametro psCtaAhoCod para desembolso
        'Add Gitu 06-05-2009 se agrego la variable de id de campaña para la aprobacion
        'MAVM 20090702 psDestCred
        'MAVM 20130209
        'AMDO 20130723 pnDiasVoucher TI-ERS077-2013
        'WIOR 20131111 AGREGO pnCuotaBalon
        'WIOR 20140128 agrego pbTrabajadoVinc y pnTipoVinculado
        'WIOR 20140825 AGREGO pMatCalendSegDes
        'EJVG20150518 Se agregó array pArrDatos por llegar al límite de Parametros
        'APRI20180821 ERS061-2018 REEMPLAZO pnCuotaBalon POR pnExoSegMYPE
Dim oDCredito As COMDCredito.DCOMCredActBD
Dim R As ADODB.Recordset
Dim RRef As ADODB.Recordset
Dim i As Integer
Dim nMontoReservado As Double
Dim bTransac As Boolean
Dim MatCredRef As Variant

Dim MatCredRefAprobar As Variant 'LUCV20160617, Segun ERS004-2016
Dim nMotivoRef As Integer 'LUCV20160617, Segun ERS004-2016
Dim sMotivoDetRef As String 'LUCV20160617, Segun ERS004-2016
Dim rsRefSol As ADODB.Recordset 'LUCV20160617, Segun ERS004-2016

Dim MatCredRefTempo As Variant
Dim MatCalend As Variant
Dim oCredito As COMDCredito.DCOMCredito
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim sMovNro As String
Dim nMovNro As Long
Dim nMontoRefTmp As Double
Dim nMontoRefTmpCapital As Double
Dim nMontoRefTmpInteres As Double
Dim nMontoRefTmpInterSusp As Double
Dim nMontoRefTmpGastosSusp As Double
Dim nMontoRefTmpNew As Double
Dim nMontoRefTmpCapitalNew As Double
Dim nMontoRefTmpInteresNew As Double
Dim nMontoRefTmpInterSuspNew As Double
Dim nMontoRefTmpGastosSuspNew As Double
Dim nMontoRefTempo As Double

Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nEstadCredRef As Integer
Dim sConsCred As String
Dim sConsCred2 As String
Dim nTipoCambioFijo As Double
Dim nIntSuspTot As Double
Dim nGastoSuspTot As Double

Dim MatrizMatCredRef() As Variant
Dim MatrizGastosCredRef() As Variant
Dim MatrizGastosCredRefTempo As Variant
Dim MatrizGastosCredGrp As Variant
Dim k As Integer

Dim nEstado As Integer

Dim sCadCtaGastoTemp As String

'08-06-2006
Dim sSql As String
Dim D As COMConecta.DCOMConecta
Dim nRefin As Integer
Dim nNivApr As Integer 'MAVM 20110523
Dim oLeasing As COMDCredito.DCOMleasing 'ALPA 20111209
'Dim bGarantAval As Boolean 'JUEZ 20130809
Dim RAval As ADODB.Recordset 'JUEZ 20130809
Dim nPrestamo As Double 'JUEZ 20130809
Dim bReprogRoyaAmarilla As Boolean 'JUEZ 20131022
Dim nMovNroReversionReprog As Long 'JUEZ 20131022
Dim RReprog As ADODB.Recordset 'JUEZ 20131022
Dim nCapitalCtaCodRef As Double 'JUEZ 20131022
Dim sTpoCredCodRef, sTpoCredCod As String 'JUEZ 20140122
Dim nDatoViviendaRef, nDatoVivienda As Integer 'JUEZ 20140122
Dim dFecVigRef As Date 'JUEZ 20140122
Dim bReprogDesNat As Boolean 'EJVG20140325
Dim nMovNroReversionReprogDesNat As Long 'EJVG20140325
Dim nCapitalCtaCodRefDesNat As Double 'EJVG20140325
Dim lnInteresDiferido As Currency 'ALPA 20150805***************
Dim lnInteresDiferidoCA As Currency 'ALPA 20150805***************
Dim lnRefinanciadoDeVigenteCancelado As Currency 'LUCV20160616, Segun ERS004-2016
Dim dFecGrab As Date 'LUCV20160616, Segun ERS004-2016
'-----------------
'WIOR 20150421 ***
Dim nIntDiferido As Double
Dim sOpeTrasIntDif As String
nIntDiferido = 0
sOpeTrasIntDif = ""
'WIOR FIN ********
Dim lvGravamen() As tGarantiaGravamen 'EJVG20150518
Dim lsTpoProdCod As String 'EJVG20150518
Dim iMat As Integer 'EJVG20150518
    On Error GoTo ErrorSugerenciaCredito
    'EJVG20150518 ***
    ReDim lvGravamen(0)
    If IsArray(pArrDatos) Then
        For iMat = 0 To UBound(pArrDatos)
            Select Case iMat
                Case 0: lvGravamen = pArrDatos(iMat)
                Case 1: lsTpoProdCod = pArrDatos(iMat)
            End Select
        Next
    End If
    'END EJVG *******
    nIntSuspTot = 0
    nGastoSuspTot = 0
    bTransac = False
    'EJVG20150518 ***
    If Not IsArray(lvGravamen) Then
    AprobacionCredito = ValidaGarantia(psCtaCod, pdEstado, pnMonto, bAmpliacion)
    If AprobacionCredito <> "" Then
        Exit Function
    End If
    End If
    'END EJVG *******
    AprobacionCredito = ValidaGrabarDesembolso(psCtaCod, pnMonto)
    If AprobacionCredito <> "" Then
        Exit Function
    End If

'08-06-2006
    Set D = New COMConecta.DCOMConecta
    sSql = "Select cCtaCod from ColocacRefinanc where cCtaCod = '" & psCtaCod & "'"
    D.AbreConexion
    Set R = D.CargaRecordSet(sSql)
    If R.RecordCount > 0 Then
        nRefin = 2
    Else
        nRefin = 1
    End If
    
    'MAVM 20110513 ***
    'sSql = "DELETE CredAprobacion Where cCtaCod = '" & psCtaCod & "'"
    'D.ConexionActiva.Execute sSql
    
    'sSql = "Select CC.cCodCargo, CC.bComentario"
    'sSql = sSql & " From CredRangoCargo CC"
    'sSql = sSql & " Inner Join CredRangos CR ON CR.ccodRango = CC.ccodRango"
    'sSql = sSql & " Where CR.nMoneda = " & Mid(psCtaCod, 9, 1) & " And CR.nTipoCred = " & nRefin
    'sSql = sSql & " And CR.nMontoMin <= " & Format(pnMonto, "#0.00") & " And CR.nMontoMax >= " & Format(pnMonto, "#0.00")
    'sSql = sSql & " AND CR.cCodProd='" & Mid(psCtaCod, 6, 3) & "'"
    
    'Set R = D.CargaRecordSet(sSql)
    'Do While Not R.EOF

    '    sSql = "INSERT INTO CredAprobacion(cCtaCod, cCodCargo, cCodUsu, cNomUsu, dFecApr, bComen, cComen) "
    '    sSql = sSql & " VALUES('" & psCtaCod & "','" & R!cCodCargo & "',NULL,NULL,NULL," & IIf(R!bComentario, "1", "0") & ", NULL)"

    '    D.ConexionActiva.Execute sSql

    '    R.MoveNext
    'Loop
    'D.CierraConexion
    'Set D = Nothing
    
'    sSql = "Select nConsValor From Constante Where nConsCod = '" & ColocCredLlaveProceso.gColCredNivApr & "' And nConsValor <> '" & ColocCredLlaveProceso.gColCredNivApr & "'"
'    Set R = D.CargaRecordSet(sSql)
'    If Not R.EOF And Not R.BOF Then
'        nNivApr = R!nConsValor
'    End If
    'ALPA 20110615
    '**ARLO20180712 ERS042 - 2018
    Set objProducto = New COMDCredito.DCOMCredito
    If objProducto.GetResultadoCondicionCatalogo("N0000112", Mid(psCtaCod, 6, 3)) Then
    'If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
    '**ARLO20180712 ERS042 - 2018
        Set oLeasing = New COMDCredito.DCOMleasing
        Call oLeasing.ActualizarLeasingCotizacion(psCtaCod, psPersCod)
    End If
    '**************************
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaLlaveProceso(ColocCredLlaveProceso.gColCredNivApr)
    If Not R.EOF And Not R.BOF Then
        nNivApr = R!nConsValor
    End If
        
    If nNivApr = 1 Then
        If pbRefinanc = False Then
            Dim sTipoRiesgo, sTpoCredito, sCargo, sCondXCargo, sMov, sCargoActual As String
            Dim pnMontoSol As Double
            sSql = "Update ColocCredPreNivApr Set iEstado = 9 Where cCtaCod = '" & psCtaCod & "'"
            D.ConexionActiva.Execute sSql
            
            sSql = "Select G.IdSupGarant From ColocGarantia CG Inner Join Garantias G ON CG.cNumGarant = G.cNumGarant WHERE CG.cCtaCod = '" & psCtaCod & "'"
            Set R = D.CargaRecordSet(sSql)
            If Not R.EOF And Not R.BOF Then
                sTipoRiesgo = IIf(R!IdSupGarant = 3, "001", "002")
            End If
                
            sSql = "Select cTpoCredCod From ColoCaciones Where cCtaCod = '" & psCtaCod & "'"
            Set R = D.CargaRecordSet(sSql)
            If Not R.EOF And Not R.BOF Then
                sTpoCredito = R!cTpoCredCod
            End If
            
            Set oGeneral = New COMDConstSistema.DCOMGeneral
            Dim rs As New ADODB.Recordset
            Set rs = oGeneral.GetDataUser(psCodUsu)
            If Not rs.EOF And Not rs.BOF Then
                sCargo = rs!cRHCargoCod
            End If
            Set rs = Nothing
            Set oGeneral = Nothing
            
            If Mid(psCtaCod, 9, 1) = "1" Then
                pnMontoSol = pnMonto
            Else
                sSql = "Select Top 1 nValFijo as Fijo From TipoCambio Where SubString(Convert(VarChar(12), dFecCamb,103), 4, 2) = '" & Format(Mid(pdEstado, 4, 2) - 1, "00") & "'" & " Order BY dFecCamb desc"
                Set R = D.CargaRecordSet(sSql)
                If R.RecordCount <> 0 Then
                    pnMontoSol = pnMonto * R!Fijo
                End If
            End If
            
            sSql = "Select CNAC.cCargoCod"
            sSql = sSql & " From ColocCredNivApr CNA"
            sSql = sSql & " Inner Join ColocCredNivAprCargo CNAC on CNA.cNivAprCod = CNAC.cNivAprCod"
            sSql = sSql & " Inner Join ColocCredNivAprTipoCredito CNATC on CNA.cNivAprCod = CNATC.cNivAprCod"
            sSql = sSql & " Where nMontoMin < " & Format(pnMontoSol, "#0.00") & " And nMontoMax >= " & Format(pnMontoSol, "#0.00")
            sSql = sSql & " And CNATC.cTipoCreditoCod = '" & sTpoCredito & "'"
            sSql = sSql & " And CNA.cRiesgoCod = '" & sTipoRiesgo & "'"
            sSql = sSql & " And CNATC.cAgeCod = '" & psCodAge & "'"
            
            Set R = D.CargaRecordSet(sSql)
            Do While Not R.EOF
                
                If R.RecordCount > 1 Then
                    If sCargo = "002001" Or sCargo = "002002" Or sCargo = "002003" Then
                        sCondXCargo = "1"
                    Else
                        sCondXCargo = IIf(sCargo = Mid(Trim(R!cCargoCod), 4, 6), "1", "0")
                    End If
                    
                    If sCondXCargo = 1 Then
                        Set oFunciones = New COMNContabilidad.NCOMContFunciones
                            sMov = oFunciones.GeneraMovNro(pdEstado, psCodAge, psCodUsu)
                        Set oFunciones = Nothing
                    End If
                                    
                    If Mid(Trim(R!cCargoCod), 4, 6) = "002001" Or Mid(Trim(R!cCargoCod), 4, 6) = "002002" Or Mid(Trim(R!cCargoCod), 4, 6) = "002003" Then
                        If psCodAge = "01" Then
                            sCargoActual = Mid(Trim(R!cCargoCod), 1, 8) & "1"
                        ElseIf psCodAge = "12" Then
                            sCargoActual = Mid(Trim(R!cCargoCod), 1, 8) & "3"
                        Else
                            sCargoActual = Mid(Trim(R!cCargoCod), 1, 8) & "2"
                        End If
                    Else
                        sCargoActual = Trim(R!cCargoCod)
                    End If
                    
                    sSql = "INSERT INTO ColocCredPreNivApr(cCtaCod, cCodCargo, vComentario, iEstado, cMovNro, iTipoAprob) "
                    sSql = sSql & " VALUES('" & psCtaCod & "', '" & sCargoActual & "', " & "''" & ", " & CInt(sCondXCargo) & ", '" & sMov & "', " & CInt(sCondXCargo) & ")"
                    D.ConexionActiva.Execute sSql
                    sMov = ""
                    sCargoActual = ""
                End If
                R.MoveNext
            Loop
            D.CierraConexion
            Set D = Nothing
        End If
    End If
    '***
    
'-----------------------
'LUCV20160617, Comentó, Segun ERS004-2016 ->**********
'    If pbRefinanc Then
'        '************************************************
'        'Recupera los calendarios de Pagos de Todos los Creditos Pendientes
'        '************************************************
'        Set oCredito = New COMDCredito.DCOMCredito
'        Set R = oCredito.RecuperaColocacRefinanc(psCtaCod)
'        ReDim MatrizMatCredRef(0)
'        ReDim MatrizGastosCredRef(0)
'        sCadCtaGastoTemp = "("
'        Do While Not R.EOF
'            MatCredRef = RecuperaMatrizCalendarioPendiente(R!cCtaCodref)
'            MatCredRefTempo = RecuperaMatrizCalendarioPendiente(R!cCtaCodref, True)
'            MatCredRef = UnirMatricesMiViviendaAmortizacion(MatCredRef, MatCredRefTempo)
'
'            ReDim Preserve MatrizMatCredRef(R.Bookmark)
'            MatrizMatCredRef(R.Bookmark - 1) = MatCredRef
'
'            ReDim Preserve MatrizGastosCredRef(R.Bookmark)
'            'ARCV 26-06-2007
'            MatrizGastosCredRef(R.Bookmark - 1) = RecuperaMatrizGastosPendiente(R!cCtaCodref)
'            'MatrizGastosCredRef(R.Bookmark - 1) = MatrizGastosFecha(pdEstado, MatCredRef)
'            '-----------------
'            sCadCtaGastoTemp = sCadCtaGastoTemp & "'" & R!cCtaCodref & "',"
'            R.MoveNext
'        Loop
'        R.Close
'        Set oCredito = Nothing
'
'        MatCredRef = RecuperaMatrizRefinanciados(psCtaCod)
'
'        'Obtiene Gastos Agrupados de Todos los Calendarios
'        sCadCtaGastoTemp = Mid(sCadCtaGastoTemp, 1, Len(sCadCtaGastoTemp) - 1) & ")"
'        MatrizGastosCredGrp = RecuperaMatrizGastosPendienteAgrupado(sCadCtaGastoTemp)
'
'        'JUEZ 20140122 **********************************
'        Set oCredito = New COMDCredito.DCOMCredito
'        Set RAval = oCredito.RecuperaColocaciones(psCtaCod)
'        sTpoCredCod = RAval!cTpoCredCod
'        Set RAval = Nothing
'        Set RAval = oCredito.RecuperaColocacCred(psCtaCod)
'        nDatoVivienda = IIf(IsNull(RAval!nDatoVivienda), 0, RAval!nDatoVivienda)
'        Set RAval = Nothing
'        'END JUEZ ***************************************
'    End If
'LUCV20160617, <- Fin **********

    Set oFunciones = New COMNContabilidad.NCOMContFunciones
    sMovNro = oFunciones.GeneraMovNro(pdEstado, psCodAge, psCodUsu)
    Set oFunciones = Nothing

    Set oDCredito = New COMDCredito.DCOMCredActBD
    Call oDCredito.dBeginTrans
    bTransac = True
    
    'EJVG20150513 ***
    If IsArray(lvGravamen) Then
        If Not GrabarCoberturaGarantia(psCtaCod, lsTpoProdCod, pnMonto, lvGravamen, oDCredito) Then
            AprobacionCredito = "Sucedió un error al registrar las coberturas de las Garantías"
            oDCredito.dRollbackTrans
            Set oCredito = Nothing
            Exit Function
        End If
    End If
    'END EJVG *******
    Call oDCredito.dAjusteResgistroGarantia(psCtaCod, pdEstado, pnMonto) 'EJVG20160616->Reajusta Registro Cobertura en caso bajen el monto del crédito
    
    Call oDCredito.dUpdateProducto(psCtaCod, pnTasa, 0#, pnEstado, pdEstado, pnNroTransac, False)
    'ALPA 20091202**********************
    Call oDCredito.dUpdateProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntCompNormal, pnTasa, False)
    
    If pnGraciaSug > 0 Then
        Call oDCredito.dDeleteProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia, False)
        Call oDCredito.dInsertProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia, pnTasaGracia, False)
    Else
        Call oDCredito.dDeleteProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia, False)
    End If
    
    
    '************************************
    'Ingresa Apoderado
    If ObtieneAgenciaCredEval(psCodAge) = 0 Then 'JUEZ 20121218
        Call oDCredito.dInsertProductoPersona(psCtaCod, psApoderado, gColRelPersApoderado, False)
    End If
    'Reserva Monto de Prestamo en Saldos de Linea de Credito
'    Set R = oDCredito.RecuperaLineasCreditoSaldo(psLineaCred, True)
'    nMontoReservado = IIf(IsNull(R!nMontoReservado), 0, CDbl(Format(R!nMontoReservado, "#0.00")))
'    nMontoReservado = nMontoReservado + pnMonto
'    R.Close
'    Set R = Nothing
'    Call oDCredito.dUpdateLineaCreditoSaldo(psLineaCred, , , , , nMontoReservado, False)

    'Inserta TasaGracia
    If pnGraciaSug = 0 Then
        Call oDCredito.dDeleteProductoTasaInteres(psCtaCod, gColocTasaCompGraCia)
    End If

    Call oDCredito.dUpdateColocaciones(psCtaCod, pnPlazo, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), 0, pnTipoCuota, Trim(psLineaCred), pdEstado, False, , , , , , , pnMontoMivivienda)
    
    'Comentado por DAOR 20070419
    'Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , , , , , , , , , , , , pbBloqueo)
    
    '**DAOR 20070419***********************************************************************
    'Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , , , , , , , , , , , , pbBloqueo, , , , , pnTasCosEfeAnu, psCtaCodAho, , pIdCampana)
    Call oDCredito.dUpdateColocacCred(psCtaCod, , psCondCred, psDestCred, , , , , , , , , , , , , , , , , , , , , , pbBloqueo, , , , , pnTasCosEfeAnu, psCtaCodAho, , pIdCampana, , pnDiasVoucher)
    'By Capi 10042008 se agrego parametro psCtaCodAho para desembolso
    '**************************************************************************************
    
    If bQuincenal = True Then
        Call oDCredito.dInsertColocacEstado(psCtaCod, pdEstado, pnEstado, pnNroCuotas, pnMonto, "Aprobacion de Credito", 81, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, , , , , 0) 'WIOR 20131111 AGREGO 'APRI20180821 ERS061-2018 REEPLAZO pnCuotaBalon POR 0
        'Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , 81, pnCalendDinamico, pnTipoDesemb, nNroCalend, 1, , , False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , , , , , , , , , , , , pnCuotaBalon) 'WIOR 2013AGREGO pnCuotaBalon
        Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , 81, pnCalendDinamico, pnTipoDesemb, nNroCalend, 1, , , False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , , , , , , , , , , , , 0) 'APRI20180821 ERS061-2018 REEPLAZO pnCuotaBalon POR 0
    Else
        Call oDCredito.dInsertColocacEstado(psCtaCod, pdEstado, pnEstado, pnNroCuotas, pnMonto, "Aprobacion de Credito", pnTipoCuota, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, pnDiaFijo2, pnIncremCapital, pbGraciaEnCuotas, pnTasaGracia, 0) 'WIOR AGREGO pnCuotaBalon 'APRI20180821 ERS061-2018 REEPLAZO pnCuotaBalon POR 0
        'Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , pnTipoCuota, pnCalendDinamico, pnTipoDesemb, nNroCalend, 1, , , False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , , , , , , , , , , , , pnCuotaBalon) 'WIOR 20131111 AGREGO pnCuotaBalon
        Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , pnTipoCuota, pnCalendDinamico, pnTipoDesemb, nNroCalend, 1, , , False, pnCuotaCom, pnMiViv, pnNroCalenPar, , , , , , , , , , , , , , , , 0) 'APRI20180821 ERS061-2018 REEPLAZO pnCuotaBalon POR 0
    End If

    '**DAOR 20070202, Para creditos que serán desembolsados en el banco de la nación******
    Call oDCredito.dDeleteColocConvBcoNac(psCtaCod)
    If pbDesBcoNac = True Then
        Call oDCredito.dInsertColocacConvBcoNac(psCtaCod, psClaveCli, psCodAgeBcoNac, gDesBcoNacNuevo)
    End If
    '*************************************************************************************
    
    'WIOR 20140128 **********************************
    Call oDCredito.dDeleteCredVinculados(psCtaCod, 1)
    If pbTrabajadoVinc Then
        Call oDCredito.dInsertCredVinculados(psCtaCod, pnMonto, sMovNro, pnTipoVinculado, 1)
    End If
    'WIOR FIN ***************************************
    
    'Nuevo Calendario
    'Desembolsos
    For i = 0 To UBound(MatCalendDes) - 1
        Call oDCredito.dInsertColocCalendario(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, CDate(MatCalendDes(i, 0)), gColocCalendEstadoPendiente, "Calendario de Aprobacion Desembolsos", gColocCalendConceptoProcAprobado, False)
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatCalendDes(i, 1)), 0, "", False)
    Next i
    
    'Pagos
    For i = 0 To UBound(MatCalendPagos) - 1
        '**Modificado por CAPI 20080105, se formateo la fecha del calendario
        Call oDCredito.dInsertColocCalendario(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, CDate(Format(MatCalendPagos(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Aprobacion Pagos", gColocCalendConceptoProcAprobado, False)
        If pnTipoCuota <> gColocCalendCodCL Then
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresMoratorio, 0, 0, "", False)
            If CDbl(MatCalendPagos(i, 5)) > 0 Then
                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresGracia, CDbl(MatCalendPagos(i, 5)), 0, "", False)
            End If
            
            'Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoPolizaIncendioHipoteca, CDbl(MatCalendPagos(i, 15)), 0, "", False) 'LUCV20180601, Según ERS022-2018. 1231 - POLIZA CONTRA INCENDIO
            
            'ALPA 20120413*******************
            If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoIGV, CDbl(MatCalendPagos(i, 6)), 0, "", False)
                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoSeguro7, CDbl(MatCalendPagos(i, 8)), 0, "", False)
            End If
            '********************************
        Else
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodInteresMoratorio, 0, 0, "", False)
            'ALPA 20120413*******************
            If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoIGV, CDbl(MatCalendPagos(i, 6)), 0, "", False)
                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, IIf(Mid(psCtaCod, 6, 3) = "515", MatCalendPagos(i, 1), IIf(Mid(psCtaCod, 6, 3) = "516", MatCalendPagos(i, 1), i + 1)), gColocConceptoCodGastoSeguro7, CDbl(MatCalendPagos(i, 8)), 0, "", False)
            End If
            '********************************
        End If
    Next i

    'Gastos
    'Comentado AVMM  25-05-2007
    'If Not pbRefinanc Then
    'ALPA 20120413**************************************************
    If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
        For i = 0 To pNumGastos - 1
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
        Next i
        
        'WIOR 20140825 ********************************
        Call oDCredito.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalend)
        If IsArray(pMatCalendSegDes) Then
            If Trim(pMatCalendSegDes(0, 0)) <> "" Then
                For i = 0 To UBound(pMatCalendSegDes, 2)
                    Call oDCredito.dInsertColocCalendDetSegDes(psCtaCod, nNroCalend, CInt(pMatCalendSegDes(0, i)), CInt(pMatCalendSegDes(1, i)), CDbl(pMatCalendSegDes(2, i)), CDbl(pMatCalendSegDes(3, i)))
                Next i
            End If
        End If
        'WIOR FIN *************************************
    'End If
    End If
    '****************************************************************

    '*********************************************************
    '************* REFINANCIACION DE CREDITO ***************** 'Comentado por LUCV - ERS2016-004(Refinanciacion Creditos Estado 2030)
    '*********************************************************
'    If pbRefinanc Then
'
'        Set oGeneral = New COMDConstSistema.DCOMGeneral
'        nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdEstado, TCFijoMes)
'        Set oGeneral = Nothing
'
'        Call oDCredito.dInsertColocacEstado(psCtaCod, pdEstado, gColocEstRefNorm, pnNroCuotas, pnMonto, "Refinanciacion de Credito", pnTipoCuota, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, pnDiaFijo2, pnIncremCapital, pbGraciaEnCuotas, pnTasaGracia)
'        nMontoRefTmpNew = 0
'        nMontoRefTmpCapitalNew = 0
'        nMontoRefTmpInteresNew = 0
'        Call oDCredito.dInsertMov(sMovNro, gCredRefinanciacion, "", gMovEstContabMovContable, gMovFlagVigente, False)
'        nMovNro = oDCredito.dGetnMovNro(sMovNro)
'
'        Set oCredito = New COMDCredito.DCOMCredito
'        Set R = oCredito.RecuperaColocacRefinanc(psCtaCod)
'        Do While Not R.EOF
'            Set RRef = oCredito.RecuperaProducto(R!cCtaCodref)
'            nEstadCredRef = RRef!nPrdEstado
'            RRef.Close
'            Set RRef = Nothing
'            MatCredRef = MatrizMatCredRef(R.Bookmark - 1)
'            'JUEZ 20130809 ***************************
'            'EJVG20160307->Comentó [AVALES]
'            'Set RAval = oCredito.RecuperaGarantes(R!cCtaCodref)
'            'bGarantAval = False
'            'If Not RAval.EOF Then bGarantAval = True
'            Set RAval = oCredito.RecuperaColocaciones(R!cCtaCodref)
'            nPrestamo = RAval!nMontoCol
'            sTpoCredCodRef = RAval!cTpoCredCod 'JUEZ 20140122
'            dFecVigRef = RAval!dVigencia 'JUEZ 20140122
'            Set RAval = Nothing
'            'END JUEZ ********************************
'            'JUEZ 20131022 ***************************
'            bReprogRoyaAmarilla = False
'            'Set RReprog = oCredito.ExisteReprogramacionxDesastreNat(R!cCtaCodref, gCredReprogRoyaAmarilla)
'            Set RReprog = oDCredito.ExisteReprogramacionxDesastreNat(R!cCtaCodref, gCredReprogRoyaAmarilla, , False) 'FRHU 20150725 INCIDENTE
'            If RReprog.RecordCount > 0 Then
'                bReprogRoyaAmarilla = True
'                nMovNroReversionReprog = RReprog!nMovNro
'                nCapitalCtaCodRef = RReprog!nCapital
'            End If
'            Set RReprog = Nothing
'            'END JUEZ ********************************
'            'EJVG20140325 ***
'            'Set RReprog = oCredito.ExisteReprogramacionxDesastreNat(R!cCtaCodref, gCredReprogDesastreNat)
'            Set RReprog = oDCredito.ExisteReprogramacionxDesastreNat(R!cCtaCodref, gCredReprogDesastreNat, , False) 'FRHU 20150725 INCIDENTE
'            If RReprog.RecordCount > 0 Then
'                bReprogDesNat = True
'                nMovNroReversionReprogDesNat = RReprog!nMovNro
'                nCapitalCtaCodRefDesNat = RReprog!nCapital
'            End If
'            Set RReprog = Nothing
'            'END EJVG *******
'            'JUEZ 20140122 ******************************************
'            Set RRef = oCredito.RecuperaColocacCred(R!cCtaCodref)
'            nDatoViviendaRef = IIf(IsNull(RRef!nDatoVivienda), 0, RRef!nDatoVivienda)
'            RRef.Close
'            Set RRef = Nothing
'            Set RRef = oCredito.RecuperaProducto(R!cCtaCodref)
'            nCapitalCtaCodRef = RRef!nSaldo
'            Set RRef = Nothing
'            'END JUEZ ***********************************************
'
'            'WIOR 20150428 ***
'            nIntDiferido = 0
'            sOpeTrasIntDif = ""
'
'            Set RRef = oCredito.ObtenerInteresDiferidoPendCredito(R!cCtaCodref)
'            If RRef.RecordCount > 0 Then
'                nIntDiferido = IIf(IsNull(RRef!nIntDifPend), 0, RRef!nIntDifPend)
'            End If
'
'            If nEstadCredRef = gColocEstVigNorm Or nEstadCredRef = gColocEstVigVenc Or nEstadCredRef = gColocEstVigMor Then
'                If nEstadCredRef = gColocEstVigNorm Then
'                    sOpeTrasIntDif = gCredTransRefIntDifVig
'                End If
'
'                If nEstadCredRef = gColocEstVigVenc Or nEstadCredRef = gColocEstVigMor Then
'                    sOpeTrasIntDif = gCredTransRefIntDifVenc
'                End If
'            End If
'
'            Set RRef = Nothing
'            'WIOR FIN ********
'
'            If pbCapitalInter Then
'
'                If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
'                    'MAVM 01112009 Se Agrego Intr Gracia
'                    'nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                    'nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                    nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'                Else
'                    If Mid(R!cCtaCod, 9, 1) = "1" Then
'                        'MAVM 01112009 Se Agrego Intr Gracia
'                        'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)) * nTipoCambioFijo
'                        'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)) * nTipoCambioFijo
'                        nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) * nTipoCambioFijo 'JUEZ 20140922
'                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                    Else
'                        'MAVM 01112009 Se Agrego Intr Gracia
'                        'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)) / nTipoCambioFijo
'                        'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)) / nTipoCambioFijo
'                        nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) / nTipoCambioFijo 'JUEZ 20140922
'                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                    End If
'                End If
'
'                Call oDCredito.dInsertColocacRefinanc(psCtaCod, R!cCtaCodref, nMontoRefTempo, gColocEstadoRefinancAprobado, pdEstado, False, R!bSustiDeudor)
'            Else
'                If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
'                    nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                Else
'                    If Mid(R!cCtaCod, 9, 1) = "1" Then
'                        nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) * nTipoCambioFijo
'                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                    Else
'                        nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) / nTipoCambioFijo
'                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                    End If
'                End If
'                ' CMACICA_CSTS - 11/11/2003 ----------------------------
'                Call oDCredito.dInsertColocacRefinanc(psCtaCod, R!cCtaCodref, nMontoRefTempo, gColocEstadoRefinancAprobado, pdEstado, False, R!bSustiDeudor)
'                '-------------------------------------------------------
'            End If
'
'            'Inserta en ColocacCredRefinancDet y en el Calendario
'                If pbCapitalInter Then
'
'                    If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
'                        'MAVM 01112009 Se Agrego Intr Gracia
'                        'nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                        'nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                        nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'                    Else
'                        If Mid(R!cCtaCod, 9, 1) = "1" Then
'                            'MAVM 01112009 Se Agrego Intr Gracia
'                            'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)) * nTipoCambioFijo
'                            'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)) * nTipoCambioFijo
'                            nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) * nTipoCambioFijo 'JUEZ 20140922
'                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                        Else
'                            'MAVM 01112009 Se Agrego Intr Gracia
'                            'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)) / nTipoCambioFijo
'                            'nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)) / nTipoCambioFijo
'                            nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) / nTipoCambioFijo 'JUEZ 20140922
'                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                        End If
'                    End If
'
'                    Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, nMontoRefTempo, 0, gColocEstadoRefinancAprobado, gColocConceptoCodCapital, pdEstado, False)
'                Else
'                    If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
'                        nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                    Else
'                        If Mid(R!cCtaCod, 9, 1) = "1" Then
'                            nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) * nTipoCambioFijo
'                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                        Else
'                            nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) / nTipoCambioFijo
'                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
'                        End If
'                    End If
'
'                    Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, nMontoRefTempo, 0, gColocEstadoRefinancAprobado, gColocConceptoCodCapital, pdEstado, False)
'                End If
'                lnInteresDiferido = 0 'ALPA20150804*******************
'                lnInteresDiferidoCA = lnInteresDiferidoCA + oDCredito.dObtenerDiferidoCreditoRefinanciadoDeVigenteCancelado(R!cCtaCodref, pdEstado, Mid(psCtaCod, 9, 1), False)
'                lnInteresDiferido = lnInteresDiferido + oDCredito.dObtenerDiferidoCreditoRefinanciadoDeVigenteCancelado(R!cCtaCodref, pdEstado, Mid(psCtaCod, 9, 1), False)
'                'MAVM 20110117 Correción Asiento Contable ***
'                If pbCapitalInter Then
'                    If MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCredRef) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresReprogramado, pdEstado, False)
'                        lnInteresDiferido = lnInteresDiferido + MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCredRef) 'ALPA20150804*******************
'                    End If
'                    If MatrizInteresSuspensoFecha(R!cCtaCodref, MatCredRef) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresSuspensoFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresSuspenso, pdEstado, False)
'                        lnInteresDiferido = lnInteresDiferido + MatrizInteresSuspensoFecha(R!cCtaCodref, MatCredRef) 'ALPA20150804*******************
'                    End If
'                    If MatrizInteresGraciaFecha(R!cCtaCodref, MatCredRef, pdEstado) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresGraciaFecha(R!cCtaCodref, MatCredRef, pdEstado), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresGracia, pdEstado, False)
'                        lnInteresDiferido = lnInteresDiferido + MatrizInteresGraciaFecha(R!cCtaCodref, MatCredRef, pdEstado) 'ALPA20150804*******************
'                    End If
'                    If MatrizInteresMorFecha(R!cCtaCodref, MatCredRef) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresMorFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresMoratorio, pdEstado, False)
'                        lnInteresDiferido = lnInteresDiferido + MatrizInteresMorFecha(R!cCtaCodref, MatCredRef) 'ALPA20150804*******************
'                    End If
'                    If MatrizInteresCompAFecha(R!cCtaCodref, MatCredRef, pdEstado) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresCompAFecha(R!cCtaCodref, MatCredRef, pdEstado), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresCompensatorio, pdEstado, False)
'                        lnInteresDiferido = lnInteresDiferido + MatrizInteresCompAFecha(R!cCtaCodref, MatCredRef, pdEstado) 'ALPA20150804*******************
'                    End If
'                    If MatrizInteresCompVencidoFecha(R!cCtaCodref, MatCredRef) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresCompVencidoFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresCompVencido, pdEstado, False)
'                        lnInteresDiferido = lnInteresDiferido + MatrizInteresCompVencidoFecha(R!cCtaCodref, MatCredRef) 'ALPA20150804*******************
'                    End If
'                    'JUEZ 20140922 *****************************
'                    'If MatrizGastosFecha(R!cCtaCodref, MatCredRef) > 0 Then
'                    '    Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizGastosFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodGastoVarios, pdEstado, False)
'                    If TotalGastosAFecha(R!cCtaCodref, pdEstado) > 0 Then
'                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, TotalGastosAFecha(R!cCtaCodref, pdEstado), 0, gColocEstadoRefinancAprobado, gColocConceptoCodGastoVarios, pdEstado, False)
'                    End If
'                    'END JUEZ **********************************
'                End If
'                '***
'            'ALPA 20150804********************
'            Call oDCredito.dUpdateColocacCred_InteresDiferido(psCtaCod, lnInteresDiferido, False)
'            '*********************************
'            'Halla la Constante
'            If pbCapitalInter Then
'                Select Case nEstadCredRef
'                    Case gColocEstRefMor
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefCapIntDMMorSoles
'                                sConsCred2 = gCredRefRefCapIntIngDMDolares
'                            Else
'                                sConsCred = gCredRefRefCapIntMorSoles
'                                sConsCred2 = gCredRefRefCapIntIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefCapIntDMMorDolares
'                                sConsCred2 = gCredRefRefCapIntIngDMSoles
'                            Else
'                                sConsCred = gCredRefRefCapIntMorDolares
'                                sConsCred2 = gCredRefRefCapIntIngDolares
'                            End If
'                        End If
'                    Case gColocEstRefNorm
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefCapIntDMNormSoles
'                                sConsCred2 = gCredRefRefCapIntIngDMDolares
'                            Else
'                                sConsCred = gCredRefRefCapIntNormSoles
'                                sConsCred2 = gCredRefRefCapIntIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefCapIntDMNormDolares
'                                sConsCred2 = gCredRefRefCapIntIngDMSoles
'                            Else
'                                sConsCred = gCredRefRefCapIntNormDolares
'                                sConsCred2 = gCredRefRefCapIntIngDolares
'                            End If
'                        End If
'                    Case gColocEstRefVenc
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefCapIntDMVencSoles
'                                sConsCred2 = gCredRefRefCapIntIngDMDolares
'                            Else
'                                sConsCred = gCredRefRefCapIntVencSoles
'                                sConsCred2 = gCredRefRefCapIntIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefCapIntDMVencDolares
'                                sConsCred2 = gCredRefRefCapIntIngDMSoles
'                            Else
'                                sConsCred = gCredRefRefCapIntVencDolares
'                                sConsCred2 = gCredRefRefCapIntIngDMDolares
'                            End If
'                        End If
'                    Case gColocEstVigMor
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefCapIntDMMorSoles
'                                sConsCred2 = gCredRefCapIntIngDMDolares
'                            Else
'                                sConsCred = gCredRefCapIntMorSoles
'                                sConsCred2 = gCredRefCapIntIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefCapIntDMMorDolares
'                                sConsCred2 = gCredRefCapIntIngDMSoles
'                            Else
'                                sConsCred = gCredRefCapIntMorDolares
'                                sConsCred2 = gCredRefCapIntIngDolares
'                            End If
'                        End If
'                    Case gColocEstVigNorm
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefCapIntDMNormSoles
'                                sConsCred2 = gCredRefCapIntIngDMDolares
'                            Else
'                                sConsCred = gCredRefCapIntNormSoles
'                                sConsCred2 = gCredRefCapIntIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefCapIntDMNormDolares
'                                sConsCred2 = gCredRefCapIntIngDMSoles
'                            Else
'                                sConsCred = gCredRefCapIntNormDolares
'                                sConsCred2 = gCredRefCapIntIngDolares
'                            End If
'                        End If
'                    Case gColocEstVigVenc
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefCapIntDMVencSoles
'                                sConsCred2 = gCredRefCapIntIngDMDolares
'                            Else
'                                sConsCred = gCredRefCapIntVencSoles
'                                sConsCred2 = gCredRefCapIntIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefCapIntDMVencDolares
'                                sConsCred2 = gCredRefCapIntIngDMSoles
'                            Else
'                                sConsCred = gCredRefCapIntVencDolares
'                                sConsCred2 = gCredRefCapIntIngDolares
'                            End If
'                        End If
'                End Select
'            Else
'                Select Case nEstadCredRef
'                    Case gColocEstRefMor
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefDMMorSoles
'                                sConsCred2 = gCredRefRefIngDMDolares
'                            Else
'                                sConsCred = gCredRefRefMorSoles
'                                sConsCred2 = gCredRefRefIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefDMMorDolares
'                                sConsCred2 = gCredRefRefIngDMSoles
'                            Else
'                                sConsCred = gCredRefRefMorDolares
'                                sConsCred2 = gCredRefRefIngDolares
'                            End If
'                        End If
'                    Case gColocEstRefNorm
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefDMNormSoles
'                                sConsCred2 = gCredRefRefIngDMDolares
'                            Else
'                                sConsCred = gCredRefRefNormSoles
'                                sConsCred2 = gCredRefRefIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefDMNormDolares
'                                sConsCred2 = gCredRefRefIngDMSoles
'                            Else
'                                sConsCred = gCredRefRefNormDolares
'                                sConsCred2 = gCredRefRefIngDolares
'                            End If
'                        End If
'                    Case gColocEstRefVenc
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefDMVencSoles
'                                sConsCred2 = gCredRefRefIngDMDolares
'                            Else
'                                sConsCred = gCredRefRefVencSoles
'                                sConsCred2 = gCredRefRefIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefRefDMVencDolares
'                                sConsCred2 = gCredRefRefIngDMSoles
'                            Else
'                                sConsCred = gCredRefRefVencDolares
'                                sConsCred2 = gCredRefRefIngDolares
'                            End If
'                        End If
'                    Case gColocEstVigMor
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefDMMorSoles
'                                sConsCred2 = gCredRefIngDMDolares
'                            Else
'                                sConsCred = gCredRefMorSoles
'                                sConsCred2 = gCredRefIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefDMMorDolares
'                                sConsCred2 = gCredRefIngDMSoles
'                            Else
'                                sConsCred = gCredRefMorDolares
'                                sConsCred2 = gCredRefIngDolares
'                            End If
'                        End If
'                    Case gColocEstVigNorm
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefDMNormSoles
'                                sConsCred2 = gCredRefIngDMDolares
'                            Else
'                                sConsCred = gCredRefNormSoles
'                                sConsCred2 = gCredRefIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefDMNormDolares
'                                sConsCred2 = gCredRefIngDMSoles
'                            Else
'                                sConsCred = gCredRefNormDolares
'                                sConsCred2 = gCredRefIngDolares
'                            End If
'                        End If
'                    Case gColocEstVigVenc
'                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefDMVencSoles
'                                sConsCred2 = gCredRefIngDMDolares
'                            Else
'                                sConsCred = gCredRefVencSoles
'                                sConsCred2 = gCredRefIngSoles
'                            End If
'                        Else
'                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                                sConsCred = gCredRefDMVencDolares
'                                sConsCred2 = gCredRefIngDMSoles
'                            Else
'                                sConsCred = gCredRefVencDolares
'                                sConsCred2 = gCredRefIngDolares
'                            End If
'                        End If
'                End Select
'            End If
'
'            'Movimiento para Credito Antiguo
'            If pbCapitalInter Then
'                'MAVM 01112009 Se agrego interes compensatorio
'                'nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                'nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                'MAVM 01112009 Se agrego interes compensatorio
'                'nMontoRefTmpInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                nMontoRefTmpInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                'nMontoRefTmpGastosSusp = MatrizGastosFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpGastosSusp = TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'                nMontoRefTmpInterSusp = nMontoRefTmpInteres
'                'Insertar Movimientos
'                Call oDCredito.dInsertMovCol(nMovNro, sConsCred, R!cCtaCodref, 0, nMontoRefTmp, 0, 0, 0, False, gColocEstAprob)
'                Call oDCredito.dInsertMovColDet(nMovNro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapital, False)
''ARCV 28-06-2007
''                If nMontoRefTmpInteres > 0 Then
''                    Call oDCredito.dInsertMovColDet(nmovnro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInteres, False)
''                End If
'                If nMontoRefTmpInteres > 0 Or nMontoRefTmpGastosSusp > 0 Then
'                    Call oDCredito.dInsertMovColDet(nMovNro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInteres + nMontoRefTmpGastosSusp, False)
'                End If
''--------
'
'                'Inserta Movimiento para Gastos Capitalizados al Detalle
''ARCV 28-06-2007
''                If nMontoRefTmpGastosSusp > 0 Then
''                    'Call oCredito.dInsertMovCol(nMovNro, gCredRefGastosSuspenso, R!cCtaCodRef, 0, nMontoRefTmpGastosSusp, 0, 0, 0, False, gColocEstAprob)
''                    'Call oCredito.dInsertMovColDet(nMovNro, gCredRefGastosSuspenso, R!cCtaCodRef, 0, gColocConceptoCodGastoSuspenso, 0, nMontoRefTmpGastosSusp, False)
''                    k = -1
''                    For i = 0 To UBound(MatrizGastosCredRef) - 1
''                        MatrizGastosCredRefTempo = MatrizGastosCredRef(i)
''                        If UBound(MatrizGastosCredRefTempo) > 0 Then
''                            If MatrizGastosCredRefTempo(0, 3) = R!cCtaCodref Then
''                                k = i
''                                Exit For
''                            End If
''                        End If
''                    Next i
''
''                    If k <> -1 Then
''                        MatrizGastosCredRefTempo = MatrizGastosCredRef(k)
''                        For i = 0 To UBound(MatrizGastosCredRefTempo) - 1
''
''                            Call oDCredito.dInsertMovColDet(nmovnro, sConsCred, R!cCtaCodref, 0, CLng(MatrizGastosCredRefTempo(i, 1)), CLng(MatrizGastosCredRefTempo(i, 0)), CDbl(MatrizGastosCredRefTempo(i, 2)), False)
''
''                        Next i
''                    End If
''
''                    nGastoSuspTot = nGastoSuspTot + nMontoRefTmpGastosSusp
''
''                End If
''--------------------------
'            Else
'                'Solo capital, Intereses y Gastos en suspenso son de otro Movimiento
'                nMontoRefTmp = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpInterSusp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef)
'                'nMontoRefTmpGastosSusp = MatrizGastosFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpGastosSusp = TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'
'                'Insertar Movimientos
'                Call oDCredito.dInsertMovCol(nMovNro, sConsCred, R!cCtaCodref, 0, nMontoRefTmp, 0, 0, 0, False, gColocEstAprob)
'                Call oDCredito.dInsertMovColDet(nMovNro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapital, False)
'
'                'Insertar Movimientos Interes en suspenso
''ARCV 26-06-2007
''                If nMontoRefTmpInterSusp > 0 Then
''                    'Actualiza Calendario
''                    nIntSuspTot = nIntSuspTot + nMontoRefTmpInterSusp
''                    'Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, UBound(MatCalendPagos), gColocConceptoCodInteresSuspenso, nMontoRefTmpInterSusp, 0, "", False)
''                End If
''                If nMontoRefTmpGastosSusp > 0 Then
''                    nGastoSuspTot = nGastoSuspTot + nMontoRefTmpGastosSusp
''                    'Call oCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, UBound(MatCalendPagos), gColocConceptoCodGastoVarios, nMontoRefTmpGastosSusp, 0, "", False)
''                End If
'
'                    nIntSuspTot = nIntSuspTot + nMontoRefTmpInterSusp + nMontoRefTmpGastosSusp
''---------------
'            End If
'
'            'Insertar Movimientos Intereses en suspenso
''ARCV 26-06-2007
''            If nMontoRefTmpInterSusp > 0 Then
''                Call oDCredito.dInsertMovCol(nmovnro, gCredRefIntSuspenso, R!cCtaCodref, 0, nMontoRefTmpInterSusp, 0, 0, 0, False, gColocEstAprob)
''                Call oDCredito.dInsertMovColDet(nmovnro, gCredRefIntSuspenso, R!cCtaCodref, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInterSusp, False)
''            End If
'            If nMontoRefTmpInterSusp > 0 Or nMontoRefTmpGastosSusp > 0 Then
'                Call oDCredito.dInsertMovCol(nMovNro, gCredRefIntSuspenso, R!cCtaCodref, 0, nMontoRefTmpInterSusp + nMontoRefTmpGastosSusp, 0, 0, 0, False, gColocEstAprob)
'                Call oDCredito.dInsertMovColDet(nMovNro, gCredRefIntSuspenso, R!cCtaCodref, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInterSusp + nMontoRefTmpGastosSusp, False)
'            End If
'            If lnInteresDiferidoCA Then
'                Call oDCredito.dInsertMovCol(nMovNro, "101111", psCtaCod, 0, Round(lnInteresDiferidoCA, 2), 0, 0, 0, False, gColocEstAprob)
'                Call oDCredito.dInsertMovColDet(nMovNro, "101111", psCtaCod, 0, gColocRFAInteresDiferido, 0, Round(lnInteresDiferidoCA, 2), False)
'            End If
''-------------
'            'Insertar Movimientos Gastos en suspenso
''ARCV 26-06-2007
''            If nMontoRefTmpGastosSusp > 0 Then
''                Call oDCredito.dInsertMovCol(nmovnro, gCredRefGastosSuspenso, R!cCtaCodref, 0, nMontoRefTmpGastosSusp, 0, 0, 0, False, gColocEstAprob)
''                'Call oCredito.dInsertMovColDet(nMovNro, gCredRefGastosSuspenso, R!cCtaCodRef, 0, gColocConceptoCodGastoSuspenso, 0, nMontoRefTmpGastosSusp, False)
''
''                k = -1
''                For i = 0 To UBound(MatrizGastosCredRef) - 1
''                    MatrizGastosCredRefTempo = MatrizGastosCredRef(i)
''                    If UBound(MatrizGastosCredRefTempo) > 0 Then
''                        If MatrizGastosCredRefTempo(0, 3) = R!cCtaCodref Then
''                            k = i
''                            Exit For
''                        End If
''                    End If
''                Next i
''
''                If k <> -1 Then
''                    MatrizGastosCredRefTempo = MatrizGastosCredRef(k)
''                    For i = 0 To UBound(MatrizGastosCredRefTempo) - 1
''                        Call oDCredito.dInsertMovColDet(nmovnro, gCredRefGastosSuspenso, R!cCtaCodref, 0, CLng(MatrizGastosCredRefTempo(i, 1)), CLng(MatrizGastosCredRefTempo(i, 0)), CDbl(MatrizGastosCredRefTempo(i, 2)), False)
''                    Next i
''                End If
''
''            End If
''--------------
'            'Movimiento para Credito Nuevo
'            If pbCapitalInter Then
'                'MAVM 01112009 Int Gracia
'                'nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                'nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                'MAVM 01112009 Int Gracia
'                'nMontoRefTmpInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
'                'ARCV 26-06-2007
'                'nMontoRefTmpGastosSusp = MatrizGastosFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpGastosSusp = TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
'                '---------
'                'Si es Diferente Moneda
'                If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                    Set oGeneral = New COMDConstSistema.DCOMGeneral
'                    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdEstado, TCFijoMes)
'                    Set oGeneral = Nothing
'                    If CInt(Mid(psCtaCod, 9, 1)) = COMDConstantes.gMonedaNacional Then 'de Dolares a Soles
'                        nMontoRefTmp = nMontoRefTmp * nTipoCambioFijo
'                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
'                        nMontoRefTmpCapital = nMontoRefTmpCapital * nTipoCambioFijo
'                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
'                        nMontoRefTmpInteres = nMontoRefTmpInteres * nTipoCambioFijo
'                        nMontoRefTmpInteres = CDbl(Format(nMontoRefTmpInteres, "#0.00"))
'                    Else 'De Soles a Dolares
'                        nMontoRefTmp = nMontoRefTmp / nTipoCambioFijo
'                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
'                        nMontoRefTmpCapital = nMontoRefTmpCapital / nTipoCambioFijo
'                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
'                        nMontoRefTmpInteres = nMontoRefTmpInteres / nTipoCambioFijo
'                        nMontoRefTmpInteres = CDbl(Format(nMontoRefTmpInteres, "#0.00"))
'                    End If
'                End If
'
'                nMontoRefTmpNew = nMontoRefTmpNew + nMontoRefTmp
'                nMontoRefTmpNew = CDbl(Format(nMontoRefTmpNew, "#0.00"))
'                nMontoRefTmpCapitalNew = nMontoRefTmpCapitalNew + nMontoRefTmpCapital
'                nMontoRefTmpCapitalNew = CDbl(Format(nMontoRefTmpCapitalNew, "#0.00"))
'                'ARCV 26-06-2007
'                'nMontoRefTmpInteresNew = nMontoRefTmpInteresNew + nMontoRefTmpInteres
'                nMontoRefTmpInteresNew = nMontoRefTmpInteresNew + nMontoRefTmpInteres + nMontoRefTmpGastosSusp
'                '------
'                nMontoRefTmpInteresNew = CDbl(Format(nMontoRefTmpInteresNew, "#0.00"))
'
'            Else
'                nMontoRefTmp = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
'                'Si es Diferente Moneda
'                If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
'                    Set oGeneral = New COMDConstSistema.DCOMGeneral
'                    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdEstado, TCFijoMes)
'                    Set oGeneral = Nothing
'                    If CInt(Mid(psCtaCod, 9, 1)) = COMDConstantes.gMonedaNacional Then 'de Dolares a Soles
'                        nMontoRefTmp = nMontoRefTmp * nTipoCambioFijo
'                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
'                        nMontoRefTmpCapital = nMontoRefTmpCapital * nTipoCambioFijo
'                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
'                    Else 'De Soles a Dolares
'                        nMontoRefTmp = nMontoRefTmp / nTipoCambioFijo
'                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
'                        nMontoRefTmpCapital = nMontoRefTmpCapital / nTipoCambioFijo
'                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
'                    End If
'                End If
'
'                nMontoRefTmpNew = nMontoRefTmpNew + nMontoRefTmp
'                nMontoRefTmpNew = CDbl(Format(nMontoRefTmpNew, "#0.00"))
'                nMontoRefTmpCapitalNew = nMontoRefTmpCapitalNew + nMontoRefTmpCapital
'                nMontoRefTmpCapitalNew = CDbl(Format(nMontoRefTmpCapitalNew, "#0.00"))
'            End If
'
'
'            'Actualiza Estado
'            If R!bSustiDeudor Then
'               nEstado = gColocEstCancelado
'            Else
'                nEstado = gColocEstRefinanc
'            End If
'            Call oDCredito.dUpdateProducto_Estado(R!cCtaCodref, nEstado, pdEstado, , False, True)
'
'            'EJVG20151119 Se comentó asiento reversión de avales
'            ''JUEZ 20130809 REVERSION GARANTIA MONTO TOTAL PRESTAMO DEL CREDITO CANCELADO POR REFINANCIADO ***
'            'If bGarantAval Then
'            '    Call oDCredito.dInsertMovCol(nMovNro, gReversionGarantAvales, R!cCtaCodref, 0, nPrestamo, 0, "", 0, 0, 0, False)
'            '    Call oDCredito.dInsertMovColDet(nMovNro, gReversionGarantAvales, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nPrestamo, False)
'            'End If
'            ''END JUEZ ***************************************************************************************
'            'JUEZ 20131022 **********************************************************************************
'            If bReprogRoyaAmarilla Then
'                Call oDCredito.dInsertMovCol(nMovNro, gReversionReprogRoyaAmarilla, R!cCtaCodref, 0, nCapitalCtaCodRef, 0, "", 0, 0, 0, False)
'                Call oDCredito.dInsertMovColDet(nMovNro, gReversionReprogRoyaAmarilla, R!cCtaCodref, 0, gColocConceptoCodCapitalReprogRoyaAmarilla, 0, nCapitalCtaCodRef, False)
'                Call oDCredito.dUpdateCredReprogNatEspeciales(nMovNroReversionReprog, 1)
'                Call oDCredito.dInsertMovRef(nMovNro, nMovNroReversionReprog, False)
'            End If
'            'END JUEZ ***************************************************************************************
'            'EJVG20140325 ***
'            If bReprogDesNat Then
'                Call oDCredito.dInsertMovCol(nMovNro, gReversionReprogDesNat, R!cCtaCodref, 0, nCapitalCtaCodRefDesNat, 0, "", 0, 0, 0, False)
'                Call oDCredito.dInsertMovColDet(nMovNro, gReversionReprogDesNat, R!cCtaCodref, 0, gColocConceptoCodCapitalReprogxDesNat, 0, nCapitalCtaCodRefDesNat, False)
'                Call oDCredito.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogDesNat, 1)
'                Call oDCredito.dInsertMovRef(nMovNro, nMovNroReversionReprogDesNat, False)
'            End If
'            'END EJVG *******
'            'JUEZ 20140122 ******************************************************************************
'            If Left(sTpoCredCodRef, 1) = "8" And DateDiff("D", dFecVigRef, "01/01/2013") <= 0 Then
'                If nDatoViviendaRef = 1 Then
'                    Call oDCredito.dInsertMovCol(nMovNro, gReversionCapHipoPrimeraVivienda, R!cCtaCodref, 0, nCapitalCtaCodRef, 0, "", 0, 0, 0)
'                    Call oDCredito.dInsertMovColDet(nMovNro, gReversionCapHipoPrimeraVivienda, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nCapitalCtaCodRef, False)
'                ElseIf nDatoViviendaRef = 2 Then
'                    Call oDCredito.dInsertMovCol(nMovNro, gReversionCapHipoNoPrimeraVivienda, R!cCtaCodref, 0, nCapitalCtaCodRef, 0, "", 0, 0, 0)
'                    Call oDCredito.dInsertMovColDet(nMovNro, gReversionCapHipoNoPrimeraVivienda, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nCapitalCtaCodRef, False)
'                End If
'            End If
'            'END JUEZ ***********************************************************************************
'
'            'WIOR 20150428 ***
'            If nIntDiferido > 0 And Trim(sOpeTrasIntDif) <> "" Then
'                Call oDCredito.dInsertMovCol(nMovNro, sOpeTrasIntDif, R!cCtaCodref, 0, nIntDiferido, 0, "", 0, 0, 0)
'                Call oDCredito.dInsertMovColDet(nMovNro, sOpeTrasIntDif, R!cCtaCodref, 0, gColocConceptoCodInteresDiferidoAmp, 0, nIntDiferido, False)
'            End If
'            'WIOR FIN ********
'
'            oDCredito.dUpdateCoberturaGarantiaxCredito R!cCtaCodref 'EJVG20151119
'            R.MoveNext
'        Loop
'        R.Close
'        Set R = Nothing
'
'        'Graba Movimientos de Credito Nuevo Totalizado de Todos los Creditos Antiguos
'        If nGastoSuspTot > 0 And Not pbCapitalInter Then
'            For i = 0 To UBound(MatrizGastosCredGrp) - 1
'                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, UBound(MatCalendPagos), CLng(MatrizGastosCredGrp(i, 0)), CDbl(MatrizGastosCredGrp(i, 1)), 0, "", False)
'            Next i
'        End If
'        If nIntSuspTot > 0 And Not pbCapitalInter Then
'            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, UBound(MatCalendPagos), gColocConceptoCodInteresSuspenso, nIntSuspTot, 0, "", False)
'        End If
'        'EJVG20151119 Se comentó asiento de avales
'        ''JUEZ 20130809 ***************************
'        'Set RAval = oCredito.RecuperaGarantes(psCtaCod)
'        'bGarantAval = False
'        'If Not RAval.EOF Then bGarantAval = True
'        'Set RAval = Nothing
'        ''END JUEZ ********************************
'        Set oCredito = Nothing
'
'        'Ingresar Movimientos para Nuevo Credito
'        If pbCapitalInter Then
'            'Inserta Movimientos
'            Call oDCredito.dInsertMovCol(nMovNro, sConsCred2, psCtaCod, 0, nMontoRefTmpNew, 0, 0, 0, False, gColocEstAprob)
'            Call oDCredito.dInsertMovColDet(nMovNro, sConsCred2, psCtaCod, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapitalNew, False)
''ARCV 26-06-2007
''            If nMontoRefTmpInteresNew > 0 Then
''                Call oDCredito.dInsertMovColDet(nmovnro, sConsCred2, psCtaCod, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInteresNew, False)
''            End If
''
''            If nGastoSuspTot > 0 Then
''                For i = 0 To UBound(MatrizGastosCredGrp) - 1
''                    Call oDCredito.dInsertMovColDet(nmovnro, sConsCred2, psCtaCod, 0, CLng(MatrizGastosCredGrp(i, 0)), 0, CDbl(MatrizGastosCredGrp(i, 1)), False)
''                Next i
''            End If
'            If nMontoRefTmpInteresNew > 0 Then
'                Call oDCredito.dInsertMovColDet(nMovNro, sConsCred2, psCtaCod, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInteresNew, False)
'            End If
''------------
'        Else
'            'Insertar Movimientos
'            Call oDCredito.dInsertMovCol(nMovNro, sConsCred2, psCtaCod, 0, nMontoRefTmpNew, 0, 0, 0, False, gColocEstAprob)
'            Call oDCredito.dInsertMovColDet(nMovNro, sConsCred2, psCtaCod, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapitalNew, False)
'        End If
'
'        'Actualiza Estado de Producto
'        Call oDCredito.dUpdateProducto(psCtaCod, , pnMonto, gColocEstRefNorm, pdEstado, 0, False)
'        'Actualiza Colocaciones
'        Call oDCredito.dUpdateColocaciones(psCtaCod, , , pnMonto, , , pdEstado, False)
'        'EJVG20151119 Se comentó asiento de avales
'        ''JUEZ 20130809 AJUSTE GARANTIA MONTO REFINANCIADO DEL NUEVO CREDITO **********
'        'If bGarantAval Then
'        '    Call oDCredito.dInsertMovCol(nMovNro, gAsientoGarantAvales, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0, False)
'        '    Call oDCredito.dInsertMovColDet(nMovNro, gAsientoGarantAvales, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto, False)
'        'End If
'        ''END JUEZ ********************************************************************
'        'JUEZ 20140122 ******************************************************************************
'        If Left(sTpoCredCod, 1) = "8" Then
'            If nDatoVivienda = 1 Then
'                Call oDCredito.dInsertMovCol(nMovNro, gAsientoCapHipoPrimeraVivienda, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0)
'                Call oDCredito.dInsertMovColDet(nMovNro, gAsientoCapHipoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto, False)
'            ElseIf nDatoVivienda = 2 Then
'                Call oDCredito.dInsertMovCol(nMovNro, gAsientoCapHipoNoPrimeraVivienda, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0)
'                Call oDCredito.dInsertMovColDet(nMovNro, gAsientoCapHipoNoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto, False)
'            End If
'        End If
'        'END JUEZ ***********************************************************************************
'        oDCredito.dAsientoGarantiaRefinancia nMovNro, psCtaCod 'EJVG20160222
'    Else
'        'Call oCredito.dInsertMov(sMovNro, gCredAprobacion, "Aprobacion de Credito", gMovEstContabNoContable, gMovFlagVigente, False)
'        'nMovNro = oCredito.dGetnMovNro(sMovNro)
'        'Call oCredito.dInsertMovCol(nMovNro, gCredAprobacion, psCtaCod, 0, pnMonto, 0, "", 0, False, gColocEstAprob)
'    End If
'Fin Comentado por LUCV, ERS2016-004


    'WIOR 20160111 -COMENTO
    '    If pnMiViv = 1 Then
    '        Call oDCredito.dDeleteColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, , , False)
    '        Call oDCredito.dDeleteColocCalendario(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, , False)
    '        For i = 0 To UBound(MatCalendPagos_2) - 1
    '            Call oDCredito.dInsertColocCalendario(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, CDate(MatCalendPagos_2(i, 0)), gColocCalendEstadoPendiente, "Calendario de Sugerencia Pagos", gColocCalendConceptoProcSugerido, False)
    '            If pnTipoCuota <> gColocCalendCodCL Then
    '                Call oDCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos_2(i, 3)) - CDbl(MatCalendPagos(i, 3)), 0, "", False)
    '                Call oDCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos_2(i, 4)) - CDbl(MatCalendPagos(i, 4)), 0, "", False)
    ''                Call oDCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos_2(i, 3)), 0, "", False)
    ''                Call oDCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos_2(i, 4)), 0, "", False)
    '                Call oDCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
    '                If CDbl(MatCalendPagos_2(i, 5)) > 0 Then
    '                    Call oDCredito.dInsertColocCalendDet(psCtaCod, pnNroCalenPar, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalendPagos_2(i, 5)), 0, "", False)
    '                End If
    '            End If
    '        Next i
    '    End If
    
    '*** PEAC 20080813
    pnMovNro1 = nMovNro
                
    'ANGC/RIRO 20200520 ReactivaCofide ***
    oDCredito.CofideReactivaValidaComision psCtaCod, bAplicaComision, nComisionCofideReactiva
    'END *****
                
    oDCredito.dCommitTrans
    oDCredito.coConex.ConexionActiva.Execute ("DELETE ColocCredCredVig where cctacod = '" & psCtaCod & "'")
    Call ActualizaCreditosVigentes(MatCredVig)
    
    '--- Actualiza  ColocCred por el tema de Aprobación con Reglamento AVMM -- 15-12-2006 ---
    'Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , , , , , , , , , , , , , , pnAproReglamento, pnExoSeguroDes)
    Call oDCredito.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , , , , , , , , , , , , , , pnAproReglamento, pnExoSeguroDes, , , , , , , , , , , , pnExoSegMYPE) 'APRI20181025 ERS061-2018
    '----------------------------------------------------------------------------------------
    
'    Movimiento de Aprobacion de Credito -- Comentado AVMM -20-05-2006
'    Set oFunciones = New COMNContabilidad.NCOMContFunciones
'    sMovNro = oFunciones.GeneraMovNro(pdEstado, psCodAge, psCodUsu)
'    Set oFunciones = Nothing
'    Call oDCredito.dInsertMov(sMovNro, gCredAprobacionMov, "", gMovEstContabMovContable, gMovFlagVigente, False)
'    nmovnro = oDCredito.dGetnMovNro(sMovNro)
'    Call oDCredito.dInsertMovCol(nmovnro, gCredAprobacionMov, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0)
'    Call oDCredito.dInsertMovColDet(nmovnro, gCredAprobacionMov, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto)
'
'    Set oCredito = Nothing
'    Set oDCredito = Nothing


'****** Para el Caso del Registro de ColocacRefinanc (Aprobacion : Estado-> 2)*****
    If pbRefinanc Then
        '************************************************
        'Recupera los calendarios de Pagos de Todos los Creditos Pendientes
        '************************************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacRefinanc(psCtaCod)
        ReDim MatrizMatCredRef(0)
        ReDim MatrizGastosCredRef(0)
        sCadCtaGastoTemp = "("
        Do While Not R.EOF
            MatCredRef = RecuperaMatrizCalendarioPendiente(R!cCtaCodref)
            MatCredRefTempo = RecuperaMatrizCalendarioPendiente(R!cCtaCodref, True)
            MatCredRef = UnirMatricesMiViviendaAmortizacion(MatCredRef, MatCredRefTempo)

            ReDim Preserve MatrizMatCredRef(R.Bookmark)
            MatrizMatCredRef(R.Bookmark - 1) = MatCredRef

            ReDim Preserve MatrizGastosCredRef(R.Bookmark)
            'ARCV 26-06-2007
            MatrizGastosCredRef(R.Bookmark - 1) = RecuperaMatrizGastosPendiente(R!cCtaCodref)
            'MatrizGastosCredRef(R.Bookmark - 1) = MatrizGastosFecha(pdEstado, MatCredRef)
            '-----------------
            sCadCtaGastoTemp = sCadCtaGastoTemp & "'" & R!cCtaCodref & "',"
            R.MoveNext
        Loop
        R.Close
        Set oCredito = Nothing

        'MatCredRef = RecuperaMatrizRefinanciados(psCtaCod)

        'Obtiene Gastos Agrupados de Todos los Calendarios
        sCadCtaGastoTemp = Mid(sCadCtaGastoTemp, 1, Len(sCadCtaGastoTemp) - 1) & ")"
        MatrizGastosCredGrp = RecuperaMatrizGastosPendienteAgrupado(sCadCtaGastoTemp)

        'JUEZ 20140122 **********************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set RAval = oCredito.RecuperaColocaciones(psCtaCod)
        sTpoCredCod = RAval!cTpoCredCod
        Set RAval = Nothing
        Set RAval = oCredito.RecuperaColocacCred(psCtaCod)
        nDatoVivienda = IIf(IsNull(RAval!nDatoVivienda), 0, RAval!nDatoVivienda)
        Set RAval = Nothing
        'END JUEZ ***************************************
    

'LUCV20160616, Según ERS004-2016 ->**********
    lnRefinanciadoDeVigenteCancelado = 0
    MatCredRefAprobar = MontosARefinanciarAprobacion(psCtaCod, pdEstado)
        If IsArray(MatCredRefAprobar) Then
            Set oDCredito = New DCOMCredActBD
            dFecGrab = CDate(Format(CDate(Format(pdEstado, "dd/mm/yyyy") & Space(1) & Format(oDCredito.dFechaHora, "hh:mm:ss")), "dd/mm/yyyy hh:mm:ss"))
            Set oDCredito = Nothing
            'Obtiene Datos de ColocRefinac (Estado 1)
            Set oCredito = New COMDCredito.DCOMCredito
            Set rsRefSol = oCredito.RecuperaColocacRefinancSolicitado(psCtaCod, gColocEstadoRefinancSolicitado)
            nMotivoRef = rsRefSol!nMotivoRef
            sMotivoDetRef = rsRefSol!sMotivoDetRef
            Set oCredito = Nothing
            Set rsRefSol = Nothing
            
            If UBound(MatCredRefAprobar) > 0 Then
                For i = 0 To UBound(MatCredRefAprobar) - 1
                    'ColocacRefinanc -> Aprobacion: Estado(2)
                    sSql = "INSERT INTO ColocacRefinanc(cCtaCod,cCtaCodRef,nEstado,dEstado,nMontoRef,nMotivoRef,sMotivoDetRef)"
                    sSql = sSql & " VALUES('" & psCtaCod & "','"
                    sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                    sSql = sSql & gColocEstadoRefinancSugerido & ","
                    sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                    sSql = sSql & MatCredRefAprobar(i, 2) & "," & nMotivoRef
                    sSql = sSql & ",'" & sMotivoDetRef & "')"
                    D.ConexionActiva.Execute sSql
                    
                    '**** Ingreso del Detalle *****
                    'ColocacRefinancDet -> Aprobacion: Estado(2)
                    'Capital (1000)
                    sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                    sSql = sSql & " VALUES('" & psCtaCod & "','"
                    sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                    sSql = sSql & gColocEstadoRefinancSugerido & ","
                    sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                    sSql = sSql & gColocConceptoCodCapital & ","
                    sSql = sSql & MatCredRefAprobar(i, 3) & ","
                    sSql = sSql & "0.00)"
                    D.ConexionActiva.Execute sSql
                    
                    If pbCapitalInter Then
                        'Interes Compensatorio
                        If CDbl(MatCredRefAprobar(i, 4)) > 0 Then
                            sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                            sSql = sSql & " VALUES('" & psCtaCod & "','"
                            sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                            sSql = sSql & gColocEstadoRefinancSugerido & ","
                            sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                            sSql = sSql & gColocConceptoCodInteresCompensatorio & ","
                            sSql = sSql & MatCredRefAprobar(i, 4) & ","
                            sSql = sSql & "0.00)"
                            D.ConexionActiva.Execute sSql
                        End If
    
                        'Interes Moratorio
                        If CDbl(MatCredRefAprobar(i, 5)) > 0 Then
                            sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                            sSql = sSql & " VALUES('" & psCtaCod & "','"
                            sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                            sSql = sSql & gColocEstadoRefinancSugerido & ","
                            sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                            sSql = sSql & gColocConceptoCodInteresMoratorio & ","
                            sSql = sSql & MatCredRefAprobar(i, 5) & ","
                            sSql = sSql & "0.00)"
                            D.ConexionActiva.Execute sSql
                        End If
    
                        'Interes Gracia
                        If CDbl(MatCredRefAprobar(i, 6)) > 0 Then
                            sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                            sSql = sSql & " VALUES('" & psCtaCod & "','"
                            sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                            sSql = sSql & gColocEstadoRefinancSugerido & ","
                            sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                            sSql = sSql & gColocConceptoCodInteresGracia & ","
                            sSql = sSql & MatCredRefAprobar(i, 6) & ","
                            sSql = sSql & "0.00)"
                            D.ConexionActiva.Execute sSql
                        End If
    
                        'Interes Suspenso
                        If CDbl(MatCredRefAprobar(i, 7)) > 0 Then
                            sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                            sSql = sSql & " VALUES('" & psCtaCod & "','"
                            sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                            sSql = sSql & gColocEstadoRefinancSugerido & ","
                            sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                            sSql = sSql & gColocConceptoCodInteresSuspenso & ","
                            sSql = sSql & MatCredRefAprobar(i, 7) & ","
                            sSql = sSql & "0.00)"
                            D.ConexionActiva.Execute sSql
                        End If
    
                        'Interes Reprogramado
                        If CDbl(MatCredRefAprobar(i, 8)) > 0 Then
                            sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                            sSql = sSql & " VALUES('" & psCtaCod & "','"
                            sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                            sSql = sSql & gColocEstadoRefinancSugerido & ","
                            sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                            sSql = sSql & gColocConceptoCodInteresReprogramado & ","
                            sSql = sSql & MatCredRefAprobar(i, 8) & ","
                            sSql = sSql & "0.00)"
                            D.ConexionActiva.Execute sSql
                        End If
    
                        'Gastos
                        If CDbl(MatCredRefAprobar(i, 9)) > 0 Then
                            sSql = "INSERT INTO ColocacRefinancDet(cCtaCod,cCtaCodRef,nEstado,dEstado,nPrdConceptoCod,nMonto,nMontoPagado)"
                            sSql = sSql & " VALUES('" & psCtaCod & "','"
                            sSql = sSql & MatCredRefAprobar(i, 1) & "',"
                            sSql = sSql & gColocEstadoRefinancSugerido & ","
                            sSql = sSql & "'" & Format(dFecGrab, "mm/dd/yyyy hh:mm:ss") & "',"
                            sSql = sSql & gColocConceptoCodGastoVarios & ","
                            sSql = sSql & MatCredRefAprobar(i, 9) & ","
                            sSql = sSql & "0.00)"
                            D.ConexionActiva.Execute sSql
                        End If
                    End If
                Next i
            End If
    End If
   'LUCV20160616 <- Fin**********
End If

    Exit Function

ErrorSugerenciaCredito:
    If bTransac Then
        oDCredito.dRollbackTrans
        Set oDCredito = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso SugerenciaCredito", Err.Description

End Function

'Public Function InteresGastosAFecha(ByVal psCtaCod As String, ByVal pdHoy As Date, ByVal pnMonto As Double, ByVal pdVig As Date, ByVal pnTasa As Double) As Double
'Dim R As ADODB.Recordset
'Dim oCalend As COMDCredito.DCOMCalendario
'Dim nMontoGanado As Double
'Dim nMontoAFecha As Double
'Dim dFecIni As Date
'Dim nSaldoCap As Double
'Dim nSaldoCal As Double
'
'    'Calculo de Montos Ya Ganados
'    Set oCalend = New Dcalendario
'    Set R = oCalend.RecuperaCalendarioPagosDeuda(psCtaCod)
'    nMontoGanado = 0
'    nSaldoCap = 0
'    Do While Not R.EOF
'        nMontoGanado = nMontoGanado + CDbl(Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00"))
'        nMontoGanado = nMontoGanado + CDbl(Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00"))
'        nMontoGanado = nMontoGanado + CDbl(Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00"))
'        nMontoGanado = nMontoGanado + CDbl(Format(IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00"))
'        nMontoGanado = nMontoGanado + CDbl(Format(IIf(IsNull(R!NGasto), 0, R!NGasto), "#0.00"))
'        If pdHoy >= R!dvenc Then
'            nMontoGanado = nMontoGanado + CDbl(Format(R!nIntComp, "#0.00"))
'        End If
'        nSaldoCap = nSaldoCap + CDbl(Format(R!nCapital, "#0.00"))
'        R.MoveNext
'    Loop
'    R.Close
'    Set R = Nothing
'
'    dFecIni = pdVig
'    nSaldoCal = pnMonto
'
'    'Interes a la fecha
'    nMontoAFecha = 0
'    Set R = oCalend.RecuperaCalendarioPagos(psCtaCod)
'    Do While Not R.EOF
'        If pdHoy >= R!dvenc Then
'            nSaldoCal = nSaldoCal - R!nCapital
'            nSaldoCal = CDbl(Format(nSaldoCal, "#0.00"))
'            dFecIni = R!dvenc
'        Else
'            nMontoAFecha = TasaIntPerDias(pnTasa, pdHoy - dFecIni) * nSaldoCal
'        End If
'        R.MoveNext
'    Loop
'    R.Close
'    Set R = Nothing
'    Set oCalend = Nothing
'
'    'Total Calculado es
'    InteresGastosAFecha = CDbl(Format(nMontoGanado + nMontoAFecha, "#0.00"))
'
'End Function
Public Function InteresGastosAFecha(ByVal psCtaCod As String, ByVal pdHoy As Date) As Double
Dim MatCalend As Variant
'ARCV 02-03-2007
Dim RGas As ADODB.Recordset
Dim oBase As COMDCredito.DCOMCredActBD
Dim oCredito As COMDCredito.DCOMCredito
Set oBase = New COMDCredito.DCOMCredActBD
Dim nSaldoCal As Double
Dim R As ADODB.Recordset

Set oCredito = New COMDCredito.DCOMCredito
Set R = oCredito.RecuperaColocaciones(psCtaCod)
Set oCredito = Nothing

nSaldoCal = R!nMontoColUltCal

'Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdHoy, "mm/dd/yyyy") & "')")
'Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha('" & psCtaCod & "','" & Format(pdHoy, "mm/dd/yyyy") & "')") 'ALPA 20150407 'LUCV20180601, Comentó
'Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(pdHoy, "mm/dd/yyyy") & "', -1)") 'ALPA 20150407  'LUCV20180601, Agregó
Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(pdHoy, "mm/dd/yyyy") & "', -1,-1,-1)") 'ALPA 20150407  'LUCV20180601, Agregó

'--------

    'Calculo de Montos Ya Ganados
    MatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
    'Total Calculado es
    'ARCV 02-03-2007
    'InteresGastosAFecha = CDbl(Format(MatrizInteresGastosAFecha(psCtaCod, MatCalend, pdHoy), "#0.00"))
    InteresGastosAFecha = CDbl(Format(MatrizInteresGastosAFecha(psCtaCod, MatCalend, pdHoy) + MatrizInteresGraciaFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal) - MatrizGastosFecha(psCtaCod, MatCalend), "#0.00"))
    InteresGastosAFecha = Format(InteresGastosAFecha + RGas!nGasto, "#0.00")
    
End Function

Public Function MatrizGastosFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        ''nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 9)) 'Gastos 'COMENTADO POR MARG ERS004-2017
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 13)) 'Gastos 'MARG ERS004-2017
    Next i

    'Total Calculado es
    MatrizGastosFecha = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Public Function MatrizGastosFechaCancelacion(ByVal psCtaCod As String, ByVal MatCalend As Variant, Optional pdHoy As Date) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        'If MatCalend(i, 0) <= pdHoy Then COMENTADO APRI20170919
        If Month(MatCalend(i, 0)) <= Month(pdHoy) And Year(MatCalend(i, 0)) = Year(pdHoy) Then 'APRI20170919 MEJORA INC1708210001
            nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 9)) 'Gastos
        End If
    Next i
    
    If nMontoGanado = 0 Then
        For i = 0 To 0
            nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 9)) 'Gastos
        Next i
    End If
    
    'Total Calculado es
    MatrizGastosFechaCancelacion = CDbl(Format(nMontoGanado, "#0.00"))

End Function


Public Function MatrizInteresReprogramadoFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 7)) 'Interes Reprogramado
    Next i

    'Total Calculado es
    MatrizInteresReprogramadoFecha = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Public Function MatrizInteresCompensatorioVencido(ByVal MatCalend As Variant) As Double
Dim nMontoGanado As Double
Dim i As Integer

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 11)) 'Interes Suspenso
    Next i

    'Total Calculado es
    MatrizInteresCompensatorioVencido = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Public Function MatrizInteresSuspensoFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 8)) 'Interes Suspenso
    Next i

    'Total Calculado es
    MatrizInteresSuspensoFecha = CDbl(Format(nMontoGanado, "#0.00"))

End Function

'revisar nSaldoCal y pnMontoCol

Public Function MatrizInteresGraciaFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, _
    Optional pnMontoCol As Double = -1) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim i As Integer
Dim nSaldoCal As Double
Dim pnTasa As Double
Dim nDiasGracia As Integer
Dim nPlazo As Integer
Dim nPerFechaFija As Integer
Dim ldFecha As Date
Dim oCalend As COMDCredito.DCOMCalendario
Dim nTipoPeriodo As Integer
Dim ldFecIniGracia As Date
Dim oConec As COMConecta.DCOMConecta
Dim sSql As String
Dim nTipoGracia As Double 'MADM 20101018
Dim sSqls As String 'MADM 20101018
Dim nCuotas As Integer 'MADM 20101018

'RIRO 20200910 ******
Dim bAplicaLiqCalendIterativo As Boolean
Dim bLiquidacionActualizada As Boolean
Dim oGen As COMDConstSistema.DCOMGeneral
Dim rsLiquidacion As ADODB.Recordset
Set oGen = New COMDConstSistema.DCOMGeneral
Set oCalend = New COMDCredito.DCOMCalendario
bAplicaLiqCalendIterativo = False
bLiquidacionActualizada = False
bAplicaLiqCalendIterativo = IIf(Val(oGen.LeeConstSistema(741)) = 1, True, False)
bLiquidacionActualizada = oCalend.VerificaActualizacionLiquidacion(psCtaCod, "")
Set oGen = Nothing
'END RIRO ***********

If bAplicaLiqCalendIterativo And bLiquidacionActualizada Then
    Set rsLiquidacion = oCalend.ObtieneLiquidacionCab(psCtaCod, Format(pdHoy, "yyyyMMdd"))
    Set oCalend = Nothing
    MatrizInteresGraciaFecha = 0
    If Not rsLiquidacion Is Nothing Then
        If rsLiquidacion.State = 1 Then
            If Not rsLiquidacion.EOF And Not rsLiquidacion.BOF Then
                MatrizInteresGraciaFecha = rsLiquidacion!nIntGracTotalFecha
            End If
        End If
    End If
Else
    If pnMontoCol = -1 Then
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocaciones(psCtaCod)
        Set oCredito = Nothing
        
        '*** peac 20071204
        'nSaldoCal = R!nMontoCol
        nSaldoCal = R!nMontoColUltCal
        
        R.Close
        Set R = Nothing
    Else
        nSaldoCal = pnMontoCol
    End If

    Set oCalend = New COMDCredito.DCOMCalendario
    dFecIni = oCalend.RecuperaFechaInicioCuota(psCtaCod, 1, gColocCalendAplCuota)
    Set oCalend = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntGracia)
    Set oCredito = Nothing
    If Not R.BOF And Not R.EOF Then
        pnTasa = R!nTasaInteres
    Else
        MatrizInteresGraciaFecha = 0
        R.Close
        Set R = Nothing
        Exit Function
    End If
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set oCredito = Nothing
    If R.EOF Then
        nDiasGracia = 0
    Else
        nDiasGracia = R!nPeriodoGracia
        'Add by Gitu 21-08-08
        nPerFechaFija = R!nPeriodoFechaFija
        nTipoPeriodo = R!nColocCalendCod
        
        nTipoGracia = R!nTipoGracia 'MADM 20101018
        nCuotas = R!nCuotas
        If R!nColocCalendCod = gColocCalendCodPFCC Or R!nColocCalendCod = gColocCalendCodPFCCPG _
            Or R!nColocCalendCod = gColocCalendCodPFCD Or R!nColocCalendCod = gColocCalendCodPFCDPG _
            Or R!nColocCalendCod = gColocCalendCodPFCF Or R!nColocCalendCod = gColocCalendCodPFCFPG Then
            nPlazo = R!nPlazo 'GITU 10/04/2008
        End If
        
        If R!nColocCalendCod = gColocCalendCodFFCC Or R!nColocCalendCod = gColocCalendCodFFCCPG _
            Or R!nColocCalendCod = gColocCalendCodFFCD Or R!nColocCalendCod = gColocCalendCodFFCDPG _
            Or R!nColocCalendCod = gColocCalendCodFFCF Or R!nColocCalendCod = gColocCalendCodFFCFPG Then
            nPlazo = 30
        End If
        
        ldFecIniGracia = CDate(Format(dFecIni, "dd/mm/yyyy")) + nPlazo
        'End Gitu
    End If
    R.Close
    Set R = Nothing

'    If DateAdd("d", nDiasGracia, dFecIni) > pdHoy Then
'        nDiasGracia = 0
'    End If

    nMontoGanado = 0
    
    'Si es Cierto ya Vencio la Fecha de Gracia
    'Modify GITU 21-08-08
    '**** Se comento porque ahora los dias de gracias son despues del plazo *****'
    'If Abs(CDate(Format(pdHoy, "dd/mm/yyyy")) - CDate(Format(dFecIni, "dd/mm/yyyy"))) >= nDiasGracia Then
    '****************************************************************************'
    If CDate(Format(pdHoy, "dd/mm/yyyy")) - CDate(Format(ldFecIniGracia, "dd/mm/yyyy")) >= nDiasGracia Then
        'Calculo de Montos Ya Ganados
        For i = 0 To UBound(MatCalend) - 1
            nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 5)) 'Interes Moratorio
        Next i
    Else
        If CDate(Format(pdHoy, "dd/mm/yyyy")) < CDate(Format(ldFecIniGracia, "dd/mm/yyyy")) Then
            'nMontoGanado = TasaIntPerDias(pnTasa, CDate(Format(pdHoy, "dd/mm/yyyy")) - CDate(Format(dFecIni, "dd/mm/yyyy"))) * nSaldoCal
            nMontoGanado = 0
        Else
            'MAVM 20120104 ***
            'If UBound(MatCalend) = 1 Then
            '    If MatCalend(0, 8) = "0.00" Then
            '        nMontoGanado = 0
            '    End If
            'Else
            '    nMontoGanado = TasaIntPerDias(pnTasa, CDate(Format(pdHoy, "dd/mm/yyyy")) - CDate(Format(ldFecIniGracia, "dd/mm/yyyy"))) * nSaldoCal
            'End If
            nMontoGanado = TasaIntPerDias(pnTasa, CDate(Format(pdHoy, "dd/mm/yyyy")) - CDate(Format(ldFecIniGracia, "dd/mm/yyyy"))) * nSaldoCal
            
        End If
        
        'Add by Gitu 02-09-2008 para ver si ya amoritzo algo de la cuota y restar
        'el monto pagado al monto ganado modify 14-09-2008 by gitu
        If nMontoGanado > 0 Then
            sSql = "Select isnull(nMontoPagado,0)  as nMontoPagado From ColocCalendDet Where cCtaCod = '" & psCtaCod & "' AND nColocCalendApl = 1 " _
                 & " AND nNroCalen =  (Select nNroCalen from ColocacCred Where cctaCod = '" & psCtaCod & "')" _
                 & " AND nPrdConceptoCod = 1102 AND nCuota = " & MatCalend(i, 1)
    
            Set oConec = New COMConecta.DCOMConecta
            oConec.AbreConexion
            Set R = oConec.CargaRecordSet(sSql)
            Dim nMonto As Double
            If Not R.EOF And Not R.BOF Then
                nMonto = IIf(IsNull(R!nMontoPagado), 0, R!nMontoPagado)
            Else
                nMonto = 0
            End If
        
            oConec.CierraConexion
            Set oConec = Nothing
     
            nMontoGanado = nMontoGanado - nMonto
     
            If nMontoGanado < 0 Then
                nMontoGanado = 0
            End If
            
            'MADM 20101018 SUG ALPA
            If nTipoGracia = 1 Then
                If MatCalend(i, 1) <> 1 Then
                    nMontoGanado = 0
                End If
            ElseIf nMonto = 0 And MatCalend(i, 5) = 0 Then
                nMontoGanado = 0
            End If
            'END MADM
            
            If nCuotas = 1 And MatCalend(i, 5) = 0 Then nMontoGanado = 0 'JUEZ 20141128
            
        End If
        'End GITU
    End If
    'End Gitu
    
    'Total Calculado es
    MatrizInteresGraciaFecha = CDbl(Format(nMontoGanado, "#0.00"))

End If

End Function

Public Function MatrizCapitalAFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim nMontoGanado As Double
Dim i As Integer
    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 3)) 'Capital
    Next i

    'Total Calculado es
    MatrizCapitalAFecha = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Private Sub MatrizActualizarEstadoCalendCancelado(ByRef MatCalendDistrib As Variant, Optional ByVal pbVerficaSolosCapital As Boolean = False, _
    Optional ByVal pbNoCancelar As Boolean = True, Optional ByVal MatCalend As Variant = "", _
    Optional ByVal pnMontoInteresFecha As Double = -1)  'ARCV 30-07-2006 (pnInteresAFecha)

Dim i As Integer

    For i = 0 To UBound(MatCalendDistrib) - 1
        If pbNoCancelar Then

            If pbVerficaSolosCapital Then
                If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
                    If CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) Then
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPagado))
                    Else
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPendiente))
                    End If
                End If
            Else
                If pnMontoInteresFecha > 0 Then 'ARCV 30-07-2006
                    'CDbl(MatCalend(i, 5)) = CDbl(MatCalendDistrib(i, 5)) And _ 'ARCV 26-06-2007 (Interes a la Fecha ya incluye el Periodo de Gracia)

                    If CDbl(MatCalend(i, 8)) = CDbl(MatCalendDistrib(i, 8)) And _
                        CDbl(MatCalend(i, 7)) = CDbl(MatCalendDistrib(i, 7)) And _
                        CDbl(MatCalend(i, 6)) = CDbl(MatCalendDistrib(i, 6)) And _
                        CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) Then
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPagado))
                    End If
                Else
                    'ARCV 30-07-2006 (Solo Capital...los interes son 0)
                    If CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) Then
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPagado))
                    End If
                End If
            End If
        Else
            If Not pbVerficaSolosCapital Then
                If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
                     '3 Capital 9 Gastos 6 Mora 4 int.Compensatorio
                    If CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) And _
                        CDbl(MatCalend(i, 9)) = CDbl(MatCalendDistrib(i, 9)) And _
                        CDbl(MatCalend(i, 6)) = CDbl(MatCalendDistrib(i, 6)) And _
                        CDbl(MatCalend(i, 4)) = CDbl(MatCalendDistrib(i, 4)) Then
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPagado))
                    Else
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPendiente))
                    End If
                End If
             Else
             
                If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
                    'If CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) Then       'COMENT ANGC20210730
                    If CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) And _
                        CDbl(MatCalend(i, 9)) = CDbl(MatCalendDistrib(i, 9)) And _
                        CDbl(MatCalend(i, 6)) = CDbl(MatCalendDistrib(i, 6)) And _
                        CDbl(MatCalend(i, 4)) = CDbl(MatCalendDistrib(i, 4)) And _
                        CDbl(MatCalend(i, 5)) = CDbl(MatCalendDistrib(i, 5)) Then
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPagado))
                    Else
                        MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPendiente))
                    End If
                End If
                             
            End If
        End If
    Next i
End Sub
Public Function MatrizInteresMorFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 6)) 'Interes Moratorio
    Next i

    'Total Calculado es
    MatrizInteresMorFecha = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Public Function MatrizInteresCompVencidoFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 11)) 'Interes Moratorio
    Next i

    'Total Calculado es
    MatrizInteresCompVencidoFecha = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Public Function MatrizCapitalCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizCapitalCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizCapitalCalendario = MatrizCapitalCalendario + CDbl(MatCalend(i, 3))
    Next i
End Function

Public Function CalculaGastoPenalidadCancelacion(ByVal pnSaldoCap As Double, ByVal pnMoneda As Integer) As Double
Dim oGasto As COMDCredito.DCOMGasto
Dim R As ADODB.Recordset
Dim nValor As Double
    Set oGasto = New COMDCredito.DCOMGasto
    nValor = oGasto.RecuperaGastoValorPenalidadCancelacion(pnMoneda)
    Set oGasto = Nothing
    nValor = CDbl(Format(nValor / 100, "#0.00"))
    CalculaGastoPenalidadCancelacion = CDbl(Format(nValor * pnSaldoCap, "#0.00"))
End Function

Public Function MatrizIntCompCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntCompCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntCompCalendario = MatrizIntCompCalendario + CDbl(MatCalend(i, 4))
    Next i
End Function

Public Function MatrizIntGraciaCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntGraciaCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntGraciaCalendario = MatrizIntGraciaCalendario + CDbl(MatCalend(i, 5))
    Next i
End Function

Public Function MatrizIntComVencCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntComVencCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntComVencCalendario = MatrizIntComVencCalendario + CDbl(MatCalend(i, 11))
    Next i
End Function

Public Function MatrizIntMoratorioCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntMoratorioCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntMoratorioCalendario = MatrizIntMoratorioCalendario + CDbl(MatCalend(i, 6))
    Next i
End Function

Public Function MatrizIntReprogCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntReprogCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntReprogCalendario = MatrizIntReprogCalendario + CDbl(MatCalend(i, 7))
    Next i
End Function

Public Function MatrizIntSuspensoCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntSuspensoCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntSuspensoCalendario = MatrizIntSuspensoCalendario + CDbl(MatCalend(i, 8))
    Next i
End Function

Public Function MatrizIntGastosCalendario(ByVal MatCalend As Variant) As Double
Dim i As Integer
    MatrizIntGastosCalendario = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizIntGastosCalendario = MatrizIntGastosCalendario + CDbl(MatCalend(i, 9))
    Next i
End Function

Public Function MatrizInteresCompAFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, _
    Optional pnMontoCol As Double = -1, Optional pnTasaInteres As Double = -1, Optional ByVal pbDesagio As Boolean = False, Optional ByVal pbCalenDin As Boolean = False, _
    Optional pnTipoLiq As Integer) As Double
    'JOEP20200408 Mejora para identificar Modulo de reprograamcion
    'RIRO20200910 pnTipoLiq / 1 Pago de cuotas, 2 Reprogramación
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim nMontoGanado As Double
Dim nMontoAFecha As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double
Dim nColocCalendCod As Integer
Dim sSql As String
Dim oConec As COMConecta.DCOMConecta
Dim nDiasGracia As Long
Dim nPlazo As Long
Dim ldFecha As Date
Dim dFechaDesp As Date
Dim ldFecIniGracia As Date
Dim nTipoPeriodo As Integer

'RIRO 20200910 ******
Dim bAplicaLiqCalendIterativo As Boolean
Dim bLiquidacionActualizada As Boolean
Dim oGen As COMDConstSistema.DCOMGeneral
Dim rsLiquidacion As ADODB.Recordset
Set oGen = New COMDConstSistema.DCOMGeneral
Set oCalend = New COMDCredito.DCOMCalendario
bAplicaLiqCalendIterativo = False
bLiquidacionActualizada = False
bAplicaLiqCalendIterativo = IIf(Val(oGen.LeeConstSistema(741)) = 1, True, False)
bLiquidacionActualizada = oCalend.VerificaActualizacionLiquidacion(psCtaCod, "")
Set oGen = Nothing
'END RIRO ***********

If bAplicaLiqCalendIterativo And bLiquidacionActualizada Then
    Set rsLiquidacion = oCalend.ObtieneLiquidacionCab(psCtaCod, Format(pdHoy, "yyyyMMdd"))
    Set oCalend = Nothing
    MatrizInteresCompAFecha = 0
    If Not rsLiquidacion Is Nothing Then
        If rsLiquidacion.State = 1 Then
            If Not rsLiquidacion.EOF And Not rsLiquidacion.BOF Then
                MatrizInteresCompAFecha = rsLiquidacion!nIntCompTotalFecha
            End If
        End If
    End If
Else

'Calculo de Montos Ya Ganados
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocacCred(psCtaCod)
    Set oCredito = Nothing
    nColocCalendCod = R!nColocCalendCod
    R.Close
    
    nMontoGanado = 0
    nSaldoCap = 0
    nMontoAFecha = 0

    If nColocCalendCod <> 70 Then
        For i = 0 To UBound(MatCalend) - 1
            If pdHoy >= Format(CDate(MatCalend(i, 0)), "dd/mm/yyyy") Then
                nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 4))
            End If
        Next i
    Else
        nMontoGanado = nMontoGanado + CDbl(MatCalend(0, 4))
    End If


    'revisar nSaldoCal
    If nColocCalendCod <> 70 Then
        If pnMontoCol = -1 Then
            Set oCredito = New COMDCredito.DCOMCredito
            Set R = oCredito.RecuperaColocaciones(psCtaCod)
            Set oCredito = Nothing
            
            '*** PEAC 20071204 **********
            'nSaldoCal = R!nMontoCol
            nSaldoCal = R!nMontoColUltCal
            '****************************

            R.Close
            Set R = Nothing
        Else
            If pbCalenDin Then
                Dim oDCalenCred As COMDCredito.DCOMCalendario
                Set oDCalenCred = New COMDCredito.DCOMCalendario
                Set R = oDCalenCred.RecuperaCalendarioDesemb(psCtaCod)
                Set oDCalenCred = Nothing
                nSaldoCal = 0
                Do While Not R.EOF
                    'para cuando cancele un calendario dinamico antes de la fecha
                    If R!ncoloccalendestado = 1 Then
                    
                        '*** PEAC 20071204 **********************************
                        'nSaldoCal = nSaldoCal + R!nCapital
                        nSaldoCal = nSaldoCal + R!nCapitalUltCal
                        '****************************************************
                    End If
                    R.MoveNext
                Loop
                R.Close
                Set R = Nothing
            Else
                nSaldoCal = pnMontoCol
            End If
        End If

        Set oCalend = New COMDCredito.DCOMCalendario
        dFecIni = Format(oCalend.RecuperaFechaInicioCuota(psCtaCod, CInt(MatCalend(0, 1)), gColocCalendAplCuota, pbCalenDin), "dd/mm/yyyy")
        Set oCalend = Nothing

        If pnTasaInteres = -1 Then
            Set oCredito = New COMDCredito.DCOMCredito
            Set R = oCredito.RecuperaProducto(psCtaCod)
            Set oCredito = Nothing
            pnTasa = R!nTasaInteres
            R.Close
            Set R = Nothing
        Else
            pnTasa = pnTasaInteres
        End If

        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        Set oCredito = Nothing
        
        If R.EOF Then
            nDiasGracia = 0
        Else
            nDiasGracia = R!nPeriodoGracia
            'Add by Gitu 21-08-08
            nTipoPeriodo = R!nColocCalendCod
        
            If R!nColocCalendCod = gColocCalendCodPFCC Or R!nColocCalendCod = gColocCalendCodPFCCPG _
                Or R!nColocCalendCod = gColocCalendCodPFCD Or R!nColocCalendCod = gColocCalendCodPFCDPG _
                Or R!nColocCalendCod = gColocCalendCodPFCF Or R!nColocCalendCod = gColocCalendCodPFCFPG Then
                nPlazo = R!nPlazo 'GITU 10/04/2008
            End If
        
            If R!nColocCalendCod = gColocCalendCodFFCC Or R!nColocCalendCod = gColocCalendCodFFCCPG _
                Or R!nColocCalendCod = gColocCalendCodFFCD Or R!nColocCalendCod = gColocCalendCodFFCDPG _
                Or R!nColocCalendCod = gColocCalendCodFFCF Or R!nColocCalendCod = gColocCalendCodFFCFPG Then
                nPlazo = 30
            End If
        
            ldFecIniGracia = CDate(Format(dFecIni, "dd/mm/yyyy")) + nPlazo
            'End Gitu
        End If
        
        '** Genera Fecha para validar el calculo de interes si el credito tiene gracia **'
        'If nPlazo > 0 Then
        '    ldFecha = CDate(Format(dFecIni + nPlazo, "dd/mm/yyyy"))
        'Else
        '    ldFecha = CDate(Format(DateAdd("m", 1, dFecIni), "dd/mm/yyyy"))
        'End If
        'Validacion de la garcia

        'Validando la gracia en caso que cancele y no haya terminado la gracia modificado por LMMD
        'dFechaDesp = DateAdd("d", nDiasGracia, dFecIni)

        'If pdHoy <= dFechaDesp Then
        '    nDiasGracia = 0
       ' End If

        R.Close
        Set R = Nothing

        'Interes a la fecha
        nMontoAFecha = 0
        For i = 0 To UBound(MatCalend) - 1
            If pdHoy >= Format(CDate(MatCalend(i, 0)), "dd/mm/yyyy") Then
                dFecIni = Format(CDate(MatCalend(i, 0)), "dd/mm/yyyy")
            Else
                If (pdHoy - dFecIni) > 0 Then
                    If MatCalend(i, 1) = "1" Then
                       'If TasaIntPerDias(pnTasa, (pdHoy - dFecIni) - nDiasGracia) > 0 Then
                       '     nMontoAFecha = TasaIntPerDias(pnTasa, (pdHoy - dFecIni) - nDiasGracia) * nSaldoCal
                       'Else
                            'Modify Gitu 21-08-2008
                            '** Se Agrego la validacion porque si cancela antes del plazo calculaba con todo los dias de gracia
                            If CDate(Format(pdHoy, "dd/mm/yyyy")) < CDate(Format(ldFecIniGracia, "yyyy/mm/dd")) Then
                                nMontoAFecha = TasaIntPerDias(pnTasa, (pdHoy - dFecIni)) * nSaldoCal
                            Else
                                'nMontoAFecha = TasaIntPerDias(pnTasa, (pdHoy - (dFecIni + nDiasGracia))) * nSaldoCal
                                nMontoAFecha = TasaIntPerDias(pnTasa, (ldFecIniGracia - dFecIni)) * nSaldoCal
                            End If
                       'End If
                        'nMontoAFecha = TasaIntPerDias(pnTasa, pdHoy -dFecIni) * (CDbl(MatCalend(I, 10)) + CDbl(MatCalend(I, 3)))
                    Else
                        nMontoAFecha = TasaIntPerDias(pnTasa, pdHoy - dFecIni) * CDbl(SaldoK(psCtaCod, pdHoy))
                        'nMontoAFecha = TasaIntPerDias(pnTasa, pdHoy - dFecIni) * CDbl(MatCalend(I, 10))
                    End If
                End If
                sSql = "Select isnull(nMontoPagado,0)  as nMontoPagado From ColocCalendDet Where cCtaCod = '" & psCtaCod & "' AND nColocCalendApl = 1 "
                sSql = sSql & " AND nNroCalen =  (Select nNroCalen from ColocacCred Where cctaCod = '" & psCtaCod & "')"
                sSql = sSql & " AND nPrdConceptoCod = 1100 AND nCuota = " & MatCalend(i, 1)
                
                'Comentado por gitu 23-09-2008
'                sSql = "Select nMontoPagado From ColocCalendDet Where cCtaCod = '" & psCtaCod & "' AND nColocCalendApl = 1 "
'                sSql = sSql & " AND nNroCalen =  (Select nNroCalen from ColocacCred Where cctaCod = '" & psCtaCod & "')"
'                sSql = sSql & " AND nPrdConceptoCod = 1100 AND nCuota = " & MatCalend(i, 1)
                Set oConec = New COMConecta.DCOMConecta
                oConec.AbreConexion
                Set R = oConec.CargaRecordSet(sSql)
                Dim nMonto As Double
                If Not R.EOF And Not R.BOF Then
                    nMonto = IIf(IsNull(R!nMontoPagado), 0, R!nMontoPagado)
                Else
                    nMonto = 0
                End If
                
                nMontoAFecha = nMontoAFecha - nMonto
                
                'ARCV 14-11-2006 (YA NO COBRAMOS DESAGIO)
                If nMontoAFecha < 0 Then
                    nMontoAFecha = 0
                End If
                
                If Not pbDesagio And nMontoAFecha < 0 Then
                    nMontoAFecha = 0
                End If
                oConec.CierraConexion
                Set oConec = Nothing
                Exit For
            End If
        Next i
    End If
    MatrizInteresCompAFecha = CDbl(Format(nMontoGanado + nMontoAFecha, "#0.00"))
End If
    
    'Total Calculado es
    

End Function
Public Function SaldoK(ByVal pcCtaCod As String, ByVal dPago As Date) As Currency
    Dim oConec As COMConecta.DCOMConecta
    Dim sSql As String
    Dim rs As ADODB.Recordset
    'Calculo del SaldoCapital
'        sSQL = "Select Top 1 (Select Sum(nMonto) From ColocCalendDet CD Where  C.cCtaCod=CD.cCtaCod and"
'        sSQL = sSQL & " C.nNroCalen = CD.nNroCalen And CD.cCtaCod = C.cCtaCod"
'        sSQL = sSQL & " and CD.nPrdConceptoCod in(1000,1010) and CD.nColocCalendApl=0)-"
'        sSQL = sSQL & " (Select Sum(nMontoPagado) From ColocCalendDet CD Where  C.cCtaCod=CD.cCtaCod and"
'        sSQL = sSQL & " C.nNroCalen = CD.nNroCalen And CD.cCtaCod = C.cCtaCod"
'        sSQL = sSQL & " and CD.nPrdConceptoCod in(1000 ,1010)and CD.nColocCalendApl=1) as SK"
'        sSQL = sSQL & " From colocCalendario C"
'        sSQL = sSQL & " Where C.cCtaCod='" & pcCtaCod & "' and  nNroCalen=(Select nNroCalen From ColocacCred Where cCtaCod='" & pcCtaCod & "')"

    '**Modificado por DAOR 20071110
    'sSql = "Select nMontoCol as SK From Colocaciones Where cCtacod='" & pcCtaCod & "'"
    
    
    'RIRO20200630 Comentado por RIRO ******
    'sSql = "select nMonto  as SK from ColocCalendDet "
    'sSql = sSql & " where cCtaCod='" & pcCtaCod & "' and nColocCalendApl=0 and nPrdConceptoCod=1000 "
    'sSql = sSql & "     and nNroCalen=(select nNroCalen from ColocacCred where cCtaCod='" & pcCtaCod & "') "
    'Set oConec = New COMConecta.DCOMConecta
    'oConec.AbreConexion
    'Set rs = oConec.CargaRecordSet(sSql)
    '
    'If Not rs.EOF And Not rs.BOF Then
    '    SaldoK = rs!SK
    'End If
    ''En el Caso pague cuotas atrasada y cancele el credito
    'sSql = "Select isnull(Sum(nMonto),0) as Capital"
    'sSql = sSql & " From ColocCalendDet a "
    'sSql = sSql & " inner join ColocCalendario b on a.cctacod=b.cctacod and a.nnrocalen=b.nnrocalen and "
    'sSql = sSql & " a.nColocCalendApl=b.nColocCalendApl and a.ncuota=b.nCuota "
    'sSql = sSql & " Where a.nPrdConceptoCod in(1000,1010) and b.dVenc<='" & Format(CStr(dPago), "MM/dd/yyyy") & "' and b.nColocCalendApl=1 "
    'sSql = sSql & " and a.cctacod='" & pcCtaCod & "' and a.nNroCalen=(Select nNroCalen From ColocacCred Where cCtaCod='" & pcCtaCod & "')"
    'sSql = sSql & " and a.nMontoPagado <>0 " ''JOEP20200321 Add Mejora Reprogramacion
    
    'FIN COMENTARIO RIRO
    
    
    'RIRO ADD 20200630
    
    sSql = "stp_sel_SaldoK '" & pcCtaCod & "', '" & Format(dPago, "yyyyMMdd") & "' "
    
    Set oConec = New COMConecta.DCOMConecta
    oConec.AbreConexion
    
    'END RIRO 20200630
    
    Set rs = New ADODB.Recordset
    Set rs = oConec.CargaRecordSet(sSql)
    If Not rs.EOF And Not rs.BOF Then
        SaldoK = IIf(IsNull(rs!nSaldoK), 0, rs!nSaldoK)
    End If
    Set rs = Nothing
    oConec.CierraConexion
    Set oConec = Nothing
End Function


'revisar nsaldocal
Public Function MatrizInteresTotalesAFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByVal pbCalDin As Boolean = False) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    Set oCredito = Nothing

    '*** PEAC 20071204
    'dFecIni = R!dVigencia
    'nSaldoCal = R!nMontoCol
    
    dFecIni = R!dMontoColUltCal
    nSaldoCal = R!nMontoColUltCal
    
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaProducto(psCtaCod)
    Set oCredito = Nothing
    pnTasa = R!nTasaInteres
    R.Close
    Set R = Nothing

    'Total Calculado a la fecha
    MatrizInteresTotalesAFecha = CDbl(Format(MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresGraciaFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal) + _
                MatrizInteresMorFecha(psCtaCod, MatCalend) + _
                MatrizInteresCompAFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal, pnTasa, , pbCalDin) + MatrizInteresCompensatorioVencido(MatCalend), "#0.00"))
End Function

Public Function MatrizInteresTotalesAFechaSinMora(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByVal pbCalenDin As Boolean = False) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    Set oCredito = Nothing
    'posicion cliente
    
    ' *** PEAC 20071204
    'dFecIni = R!dVigencia
    'nSaldoCal = R!nMontoCol
    
    dFecIni = R!dMontoColUltCal
    nSaldoCal = R!nMontoColUltCal
    
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaProducto(psCtaCod)
    Set oCredito = Nothing
    pnTasa = R!nTasaInteres
    R.Close
    Set R = Nothing

    'Total Calculado a la fecha
    
    MatrizInteresTotalesAFechaSinMora = CDbl(Format(MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresCompAFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal, pnTasa, True, pbCalenDin) + MatrizInteresCompensatorioVencido(MatCalend), "#0.00"))
    
    'Comentado por gitu 07-05-2009
    'MatrizInteresTotalesAFechaSinMora = CDbl(Format(MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresGraciaFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal) + _
                MatrizInteresCompAFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal, pnTasa, True, pbCalenDin) + MatrizInteresCompensatorioVencido(MatCalend), "#0.00"))
End Function


Public Function MatrizInteresGastosAFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByVal pbDesagio As Boolean = False, Optional ByVal pbCalenDin As Boolean = False) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    Set oCredito = Nothing

    '*** PEAC 20071204
    'dFecIni = R!dVigencia
    'nSaldoCal = R!nMontoCol
    
    dFecIni = R!dMontoColUltCal
    nSaldoCal = R!nMontoColUltCal
    
    
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaProducto(psCtaCod)
    Set oCredito = Nothing
    pnTasa = R!nTasaInteres
    R.Close
    Set R = Nothing

    'Total Calculado a la fecha
    'ARCV 23-02-2007
    'Se quito de la suma del interes de gracia gitu 07-05-2009
    MatrizInteresGastosAFecha = CDbl(Format(MatrizGastosFecha(psCtaCod, MatCalend) + _
                MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresMorFecha(psCtaCod, MatCalend) + _
                MatrizInteresCompAFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal, pnTasa, pbDesagio, pbCalenDin) + MatrizInteresCompensatorioVencido(MatCalend), "#0.00"))
    
    'Comentado por gitu 07-05-2009
    'MatrizInteresGastosAFecha = CDbl(Format(MatrizGastosFecha(psCtaCod, MatCalend) + _
                MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresGraciaFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal) + _
                MatrizInteresMorFecha(psCtaCod, MatCalend) + _
                MatrizInteresCompAFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal, pnTasa, pbDesagio, pbCalenDin) + MatrizInteresCompensatorioVencido(MatCalend), "#0.00"))
                
    'MatrizInteresGastosAFecha = CDbl(Format(MatrizGastosVencidos(MatCalend, pdHoy) + _
                MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresGraciaFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal) + _
                MatrizInteresMorFecha(psCtaCod, MatCalend) + _
                MatrizInteresCompAFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal, pnTasa, pbDesagio, pbCalenDin) + MatrizInteresCompensatorioVencido(MatCalend), "#0.00"))

End Function

'Actualiza la Tabla de Calificacion para Mi Vivienda con el ultimo calendario
Public Sub ActualizarCalificacionMIVivienda(ByVal psCtaCod As String)
Dim MatCalend As Variant
Dim i As Integer
Dim oBase As COMDCredito.DCOMCredActBD
Dim k As Integer
Dim oCred As COMDCredito.DCOMCredito
Dim nNroCalen As Integer
Dim R As ADODB.Recordset

    Set oBase = New COMDCredito.DCOMCredActBD
    MatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)

    oBase.dBeginTrans

    Set oCred = New COMDCredito.DCOMCredito
    k = oCred.UltimaCuotaCanceladaOriginal(psCtaCod)
    k = k + 1
    Call oBase.dEliminaCuotasPendientesCalifMiViv(psCtaCod)
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    nNroCalen = R!nNroCalen
    Set oCred = Nothing

    For i = 0 To UBound(MatCalend) - 1
        Call oBase.dInsertColocCalifMiViv(psCtaCod, k, nNroCalen, MatCalend(i, 1), CDate(MatCalend(i, 0)), gColocCalendEstadoPendiente)
        k = k + 1
    Next i
    oBase.dCommitTrans
    Set oBase = Nothing
End Sub

Public Function ReprogramarCreditoenMemoriaTotalMiVivienda(ByVal psCtaCod As String, ByVal pdHoy As Date, _
    ByRef pMatTramo_2 As Variant, Optional ByVal pbMantieneCuota As Boolean = True) As Variant

Dim oCred As COMDCredito.DCOMCredito
Dim oCalend As NCOMCalendario
Dim oDCalend As COMDCredito.DCOMCalendario
Dim RAprob As ADODB.Recordset
Dim MatCalendPagos_2, MatCalendPagos As Variant
Dim R As ADODB.Recordset
Dim RColoc As ADODB.Recordset
Dim nInteresReprog As Double
Dim nMontoPrestamo As Double
Dim nCuotasPendientes As Integer
Dim nTipocalend As Integer
Dim oParam As COMDCredito.DCOMParametro
Dim nTramoNoConsPorcen, nTramoNoConsMonto As Double
Dim nTramoConsMonto As Double
Dim nCuotaTemp As Integer
Dim nCuotaObjetivo As Double
Dim nCuotaFinal As Integer
Dim nCalifBuenPagador As Integer
Dim RCred As ADODB.Recordset
Dim MatCal As Variant
Dim nCuotaObjetivoTemp As Double
Dim i As Integer

    ReDim MatCalend(0, 0)
    MatCal = RecuperaMatrizCalendarioPendiente(psCtaCod)
    nCuotaObjetivo = MatrizMontoCuota(MatCal, CInt(MatCal(UBound(MatCal) - 2, 1)))
    MatCal = RecuperaMatrizCalendarioPendiente(psCtaCod, True)
    nCuotaObjetivo = nCuotaObjetivo + MatrizMontoCuota(MatCal, CInt(MatCal(UBound(MatCal) - 2, 1)))

    Set oCred = New COMDCredito.DCOMCredito
    nCuotaFinal = oCred.RecuperaUltimaCuotaEvaluada(psCtaCod)
    Set RCred = oCred.RecuperaColocacCred(psCtaCod)
    nCalifBuenPagador = RCred!nCalPago
    Set RAprob = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set RColoc = oCred.RecuperaColocaciones(psCtaCod)
    Set R = oCred.RecuperaProducto(psCtaCod)
    nMontoPrestamo = CDbl(Format(R!nSaldo, "#0.00"))

    Set oCred = Nothing
    nInteresReprog = 0#

    Set oDCalend = New COMDCredito.DCOMCalendario
    nCuotasPendientes = oDCalend.CuotasPendientes(psCtaCod)
    Set oDCalend = Nothing

    If RAprob!nColocCalendCod = gColocCalendCodFFCF Or RAprob!nColocCalendCod = gColocCalendCodFFCFPG _
        Or RAprob!nColocCalendCod = gColocCalendCodPFCFPG Or RAprob!nColocCalendCod = gColocCalendCodPFCF Then
        nTipocalend = 1
    End If

    If RAprob!nColocCalendCod = gColocCalendCodFFCC Or RAprob!nColocCalendCod = gColocCalendCodFFCCPG _
        Or RAprob!nColocCalendCod = gColocCalendCodPFCCPG Or RAprob!nColocCalendCod = gColocCalendCodPFCC Then
        nTipocalend = 2
    End If

    If RAprob!nColocCalendCod = gColocCalendCodFFCD Or RAprob!nColocCalendCod = gColocCalendCodFFCDPG _
        Or RAprob!nColocCalendCod = gColocCalendCodPFCDPG Or RAprob!nColocCalendCod = gColocCalendCodPFCD Then
        nTipocalend = 3
    End If
    Set oCalend = New NCOMCalendario

        'Si Mantiene la Cuota entonces Halla Nuevo Plazo
        If Not pbMantieneCuota Then
            nCuotasPendientes = CuotasAproximada(pdHoy, RColoc!dVenc, RAprob!nPlazo, RAprob!nPeriodoFechaFija)
        Else
            'Halla el plazo aproximado para mantener la cuota
            'nCuotasPendientes = PlazoDeCuotaFijaFechaFija(nCuotaObjetivo, R!nTasaInteres, _
            '    RAprob!nCuotas, nMontoPrestamo, 0, RColoc!dVigencia, RAprob!nPeriodoFechaFija, _
            '    RAprob!nPeriodoGracia, RAprob!nProxMes)

            For i = RAprob!nCuotas To 1 Step -1
                'Porcentaje Real sin dividir enter 100
                Set oParam = New COMDCredito.DCOMParametro
                nTramoNoConsPorcen = oParam.RecuperaValorParametro(gColocMiVivTramo)
                Set oParam = Nothing

                nCuotasPendientes = i

                nTramoNoConsMonto = Format((nTramoNoConsPorcen / 100) * nMontoPrestamo, "#0.00")
                nTramoConsMonto = Format(nMontoPrestamo - nTramoNoConsMonto, "#0.00")
                MatCalendPagos = oCalend.GeneraCalendario(nTramoConsMonto, R!nTasaInteres, nCuotasPendientes, _
                            IIf(IsNull(RAprob!nPlazo), 0, RAprob!nPlazo), pdHoy, nTipocalend, IIf(RAprob!nPeriodoFechaFija > 0, 2, 1), _
                            Exonerada, 0, RAprob!nPeriodoFechaFija, _
                            IIf(RAprob!nProxMes = 0, False, True), , True)
                '(nCuotasPendientes / 6) + 0.5 redondeo hacia arriba
                MatCalendPagos_2 = oCalend.GeneraCalendario(nTramoNoConsMonto, R!nTasaInteres, (nCuotasPendientes / 6) + 0.5, _
                            180, pdHoy, Fija, PeriodoFijo, _
                            Exonerada, 0, RAprob!nPeriodoFechaFija, _
                            IIf(RAprob!nProxMes = 0, False, True), , True)

                MatCalendPagos_2 = UnirMatricesMiViviendaReprogramado(MatCalendPagos, MatCalendPagos_2, nMontoPrestamo, nCalifBuenPagador, nCuotaFinal)
                nCuotaTemp = CDbl(MatCalendPagos_2(7, 2))
                MatCalendPagos_2 = DiferencialMatricesMiVivienda(MatCalendPagos, MatCalendPagos_2)

                nCuotaObjetivoTemp = MatrizMontoCuota(MatCalendPagos, CInt(MatCalendPagos(7, 1)))
                nCuotaObjetivoTemp = nCuotaObjetivoTemp + MatrizMontoCuota(MatCalendPagos_2, CInt(MatCalendPagos_2(7, 1)))

                If nCuotaObjetivoTemp > nCuotaObjetivo Then
                    Exit For
                End If

            Next i

            nCuotasPendientes = i + 1


        End If

        'Porcentaje Real sin dividir enter 100
        Set oParam = New COMDCredito.DCOMParametro
        nTramoNoConsPorcen = oParam.RecuperaValorParametro(gColocMiVivTramo)
        Set oParam = Nothing


        nTramoNoConsMonto = Format((nTramoNoConsPorcen / 100) * nMontoPrestamo, "#0.00")
        nTramoConsMonto = Format(nMontoPrestamo - nTramoNoConsMonto, "#0.00")
        MatCalendPagos = oCalend.GeneraCalendario(nTramoConsMonto, R!nTasaInteres, nCuotasPendientes, _
                    IIf(IsNull(RAprob!nPlazo), 0, RAprob!nPlazo), pdHoy, nTipocalend, IIf(RAprob!nPeriodoFechaFija > 0, 2, 1), _
                    Exonerada, 0, RAprob!nPeriodoFechaFija, _
                    IIf(RAprob!nProxMes = 0, False, True), , True)

        MatCalendPagos_2 = oCalend.GeneraCalendario(nTramoNoConsMonto, R!nTasaInteres, nCuotasPendientes / 6, _
                    180, pdHoy, Fija, PeriodoFijo, _
                    Exonerada, 0, RAprob!nPeriodoFechaFija, _
                    IIf(RAprob!nProxMes = 0, False, True), , True)

        MatCalendPagos_2 = UnirMatricesMiViviendaReprogramado(MatCalendPagos, MatCalendPagos_2, nMontoPrestamo, nCalifBuenPagador, nCuotaFinal)
        nCuotaTemp = CDbl(MatCalendPagos_2(7, 2))
        MatCalendPagos_2 = DiferencialMatricesMiVivienda(MatCalendPagos, MatCalendPagos_2)

        nCuotaObjetivoTemp = MatrizMontoCuota(MatCalendPagos, CInt(MatCalendPagos(7, 1)))
        nCuotaObjetivoTemp = nCuotaObjetivoTemp + MatrizMontoCuota(MatCalendPagos_2, CInt(MatCalendPagos_2(7, 1)))


    Set oCalend = Nothing
    R.Close
    Set R = Nothing
    RAprob.Close
    Set RAprob = Nothing

    pMatTramo_2 = MatCalendPagos_2
    ReprogramarCreditoenMemoriaTotalMiVivienda = MatCalendPagos
End Function

Public Function ReprogramarCreditoenMemoriaTotal(ByVal psCtaCod As String, ByVal pdHoy As Date, _
                                                Optional ByVal pbMantieneCuota As Boolean = True, _
                                                Optional ByVal pnMontoPago As Double) As Variant
                                                'MAVM 20100826 Se adiciono pnMontoPago
Dim oCred As COMDCredito.DCOMCredito
Dim oCalend As NCOMCalendario
Dim oDCalend As COMDCredito.DCOMCalendario
Dim RAprob As ADODB.Recordset
Dim MatCalend As Variant
Dim R As ADODB.Recordset
Dim RColoc As ADODB.Recordset
Dim nInteresReprog As Double
Dim nMontoPrestamo As Double
Dim nCuotasPendientes As Integer
Dim nTipocalend As Integer
Dim nCuotaObjetivo As Double
Dim RMantPP As ADODB.Recordset 'MAVM 20100826
Dim nNewCuotaObjetivo As Double 'MARG ERS004-2017
Dim bReduccionCuotaPagAnt As Boolean 'LUCV20180320, Según ERS087-2017
Dim nCondicionCred As Integer 'LUCV20180320, Según ERS087-2017
Dim nExoSegDes As Integer 'LUCV20180320, Según ERS087-2017
Dim RCred As ADODB.Recordset 'LUCV20180320, Según ERS087-2017

    ReDim MatCalend(0, 0)
    Set oCred = New COMDCredito.DCOMCredito
    Set RAprob = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set RColoc = oCred.RecuperaColocaciones(psCtaCod)
    Set R = oCred.RecuperaProducto(psCtaCod) 'MAVM 01092010
    nMontoPrestamo = CDbl(Format(R!nSaldo, "#0.00"))
    'LUCV20180601, Según ERS022-2018
    Set RCred = oCred.RecuperaColocacCred(psCtaCod)
    nCondicionCred = IIf(IsNull(RCred!nColocCondicion), 0, RCred!nColocCondicion)
    If RCred!nExoSeguroDes = 1 Then
        nExoSegDes = RCred!nExoSeguroDes
    End If
    'Fin LUCV20180601
    Set RMantPP = oCred.RecuperaCredMantPrepago(psCtaCod, pdHoy) 'MAVM 01092010
    'nCuotaObjetivo = oCred.CuotaAprobada(psCtaCod)
    'nCuotaObjetivo = oCred.CuotaNormalPago(psCtaCod) 'LUCV20180320, Comentó. Según ERS087-2017
    nCuotaObjetivo = oCred.CuotaFijaMensualPago(psCtaCod) 'LUCV20180320, Comentó. Según ERS087-2017
    Set oCred = Nothing
    'nInteresReprog = InteresGastosAFecha(pscatcod, pdHoy, nMontoPrestamo, R!dPrdestado, R!nTasaInteres) + (TasaIntPerDias(R!nTasaInteres, dFecReprog - pdHoy) * R!nSaldo)
    nInteresReprog = 0#
    bReduccionCuotaPagAnt = False 'LUCV20180320, Según ERS087-2017
    
    Set oDCalend = New COMDCredito.DCOMCalendario
    nCuotasPendientes = oDCalend.CuotasPendientes(psCtaCod)
    Set oDCalend = Nothing
    If RAprob!nColocCalendCod = gColocCalendCodFFCF Or RAprob!nColocCalendCod = gColocCalendCodFFCFPG _
        Or RAprob!nColocCalendCod = gColocCalendCodPFCFPG Or RAprob!nColocCalendCod = gColocCalendCodPFCF Then
        nTipocalend = 1
    End If
    If RAprob!nColocCalendCod = gColocCalendCodFFCC Or RAprob!nColocCalendCod = gColocCalendCodFFCCPG _
        Or RAprob!nColocCalendCod = gColocCalendCodPFCCPG Or RAprob!nColocCalendCod = gColocCalendCodPFCC Then
        nTipocalend = 2
    End If
    If RAprob!nColocCalendCod = gColocCalendCodFFCD Or RAprob!nColocCalendCod = gColocCalendCodFFCDPG _
        Or RAprob!nColocCalendCod = gColocCalendCodPFCDPG Or RAprob!nColocCalendCod = gColocCalendCodPFCD Then
        nTipocalend = 3
    End If
    Set oCalend = New NCOMCalendario
    
    
    'MAVM 20100826
    If pbMantieneCuota Then
        'Halla las cuotas aproximado para mantener la fecha de vencimiento del credito
        If RAprob!nPlazo = 0 Then 'Fecha Fija
            If RMantPP.RecordCount <> "0" Then
                If RMantPP!nMantNroCuota = 0 Then 'Reduccion Nro. Cuota
                    nCuotasPendientes = PlazoDeCuotaFijaFechaFija(nCuotaObjetivo, R!nTasaInteres, nCuotasPendientes, nMontoPrestamo, 0, _
                                                                RColoc!dVigencia, RAprob!nPeriodoFechaFija, RAprob!nPeriodoGracia, _
                                                                IIf(IsNull(RAprob!nProxMes), 0, RAprob!nProxMes))
                    bReduccionCuotaPagAnt = True 'LUCV20180320, Según ERS087-2017
                Else 'Reduccion Monto Cuota
                    nCuotasPendientes = nCuotasPendientes
                End If
            End If
        Else                      'Periodo Fijo
            If RMantPP.RecordCount <> "0" Then
                If nCuotasPendientes <> RMantPP!nCuotasPend Then
                    nCuotasPendientes = RMantPP!nCuotasPend
                End If
                If RMantPP!nMantNroCuota = 0 Then 'Reduccion Nro. Cuota
'                   nCuotasPendientes = PlazoDeCuotaFijaPFDis(R!nTasaInteres, nCuotasPendientes, nMontoPrestamo, _
'                                       IIf(IsNull(RAprob!nPlazo), 0, RAprob!nPlazo), nCuotaObjetivo, pnMontoPago) 'MARG ERS004-2017 COMENTADO
                    nCuotasPendientes = PlazoDeCuotaFijaPFDis2(MatrizSaldoCapital(pMatCalend, pMatCalendDistribuido), nCuotaObjetivo) 'MARG ERS004-2017
                    bReduccionCuotaPagAnt = True 'LUCV20180320, Según ERS087-2017
                Else 'Reduccion Monto Cuota
                    nCuotasPendientes = PlazoDeCuotaFija(R!nTasaInteres, nCuotasPendientes, nMontoPrestamo, _
                                                         IIf(IsNull(RAprob!nPlazo), 0, RAprob!nPlazo), nCuotaObjetivo)
                End If
            End If
        End If
    Else
        nCuotasPendientes = CuotasAproximada(pdHoy, RColoc!dVenc, RAprob!nPlazo, RAprob!nPeriodoFechaFija, IIf(IsNull(RAprob!nProxMes), 0, RAprob!nProxMes))
    End If
    
    Dim oCredit As COMDCredito.DCOMCredActBD
    Set oCredit = New COMDCredito.DCOMCredActBD
    'COMENTADO X MADM 20120221 - DESPUES PROCESO
    'oCredit.dInsertCredMantPrepago psCtaCod, Format(pdHoy, "yyyymmdd"), , , 1
    '***
    
    '->***** LUCV20180601, Agregó según ERS022-2018
        Dim nMontoPoliza As Double
        Dim nTasaSegInc As Double
        Dim oNGasto As COMNCredito.NCOMGasto
        Set oNGasto = New COMNCredito.NCOMGasto
        nMontoPoliza = 0
        
        nTasaSegDes = ObtenerTasaSeguroDesg(psCtaCod, pdHoy, nCantAfiliadosSegDes)
        nMontoPoliza = oNGasto.RecuperaMontoPoliza(psCtaCod, _
                                                   nCuotasPendientes, _
                                                   gColocConceptoCodGastoPolizaIncendioHipoteca, _
                                                   nTasaSegInc, _
                                                   IIf(nCondicionCred = "3", True, False))
    '<-***** Fin LUCV20180601
    
    MatCalend = oCalend.GeneraCalendario(nMontoPrestamo, R!nTasaInteres, nCuotasPendientes, IIf(IsNull(RAprob!nPlazo), _
                            0, RAprob!nPlazo), pdHoy, nTipocalend, IIf(RAprob!nPeriodoFechaFija > 0, 2, 1), Exonerada, _
                            0, RAprob!nPeriodoFechaFija, IIf(IsNull(RAprob!nProxMes), 0, RAprob!nProxMes), , True, _
                            , , , , , , , , , , , psCtaCod, , , , , , , bReduccionCuotaPagAnt, nTasaSegDes, , nExoSegDes, nMontoPoliza, nTasaSegInc)
                            'LUCV20180320, agregó bReduccionCuotaPagAnt Según ERS087-2017
                            'LUCV20180601, Agregó nTasaSegDes, , nExoSegDes, nMontoPoliza, nTasaSegInc, según ERS022-2018
    '--->***** LUCV20180320, Según ERS087-2017
    If RMantPP!nMantNroCuota = 0 Then 'Cuotas pendientes dinámica sólo en reducción de cuotas
        nNewCuotaObjetivo = CDbl(MatCalend(nCuotasPendientes - 1, 3)) + CDbl(MatCalend(nCuotasPendientes - 1, 4)) '+ CDbl(MatCalend(nCuotasPendientes - 1, 5)) 'Capital + Int.Comp + Int. Gracia
        Do While nNewCuotaObjetivo > nCuotaObjetivo
            nCuotasPendientes = nCuotasPendientes + 1
            ReDim MatCalend(0, 0)
            MatCalend = oCalend.GeneraCalendario(nMontoPrestamo, R!nTasaInteres, nCuotasPendientes, IIf(IsNull(RAprob!nPlazo), _
                                0, RAprob!nPlazo), pdHoy, nTipocalend, IIf(RAprob!nPeriodoFechaFija > 0, 2, 1), Exonerada, _
                                0, RAprob!nPeriodoFechaFija, IIf(IsNull(RAprob!nProxMes), 0, RAprob!nProxMes), , True, _
                                , , , , , , , , , , , psCtaCod, , , , , , , bReduccionCuotaPagAnt, nTasaSegDes, , nExoSegDes, nMontoPoliza, nTasaSegInc)
                              'LUCV20180601, Agregó: nTasaSegDes, , nExoSegDes, nMontoPoliza, nTasaSegInc
            nNewCuotaObjetivo = CDbl(MatCalend(nCuotasPendientes - 1, 3)) + CDbl(MatCalend(nCuotasPendientes - 1, 4)) '+ CDbl(MatCalend(nCuotasPendientes - 1, 5)) 'Capital + Int.Comp + Int. Gracia
        Loop
    End If
    '<---***** Fin LUCV20180320
    
    '--->***** LUCV20180320, Según ERS087-2017
    '*********MARG ERS004-2017*********
'    nNewCuotaObjetivo = CDbl(MatCalend(0, 3)) + CDbl(MatCalend(0, 4)) + CDbl(MatCalend(0, 5)) 'Capital + Int.Comp + Int. Gracia
'    Do While nNewCuotaObjetivo > nCuotaObjetivo
'        nCuotasPendientes = nCuotasPendientes + 1
'        ReDim MatCalend(0, 0)
'        MatCalend = oCalend.GeneraCalendario(nMontoPrestamo, R!nTasaInteres, nCuotasPendientes, IIf(IsNull(RAprob!nPlazo), 0, RAprob!nPlazo), _
'                pdHoy, nTipocalend, IIf(RAprob!nPeriodoFechaFija > 0, 2, 1), Exonerada, 0, RAprob!nPeriodoFechaFija, IIf(IsNull(RAprob!nProxMes), 0, RAprob!nProxMes), , True, , , , , , , , , , , , psCtaCod)
'        nNewCuotaObjetivo = CDbl(MatCalend(0, 3)) + CDbl(MatCalend(0, 4)) + CDbl(MatCalend(0, 5)) 'Capital + Int.Comp + Int. Gracia
'    Loop
    '*********END MARG*******************
    '<---***** Fin LUCV20180320
    
    oCredit.dInsertCredMantPrepago psCtaCod, Format(pdHoy, "yyyymmdd"), , , 1
    
    Set oCalend = Nothing
    R.Close
    Set R = Nothing
    RAprob.Close
    Set RAprob = Nothing
    RMantPP.Close 'LUCV20180320, Según ERS087-2017
    Set RMantPP = Nothing 'LUCV20180320, Según ERS087-2017
    RCred.Close 'LUCV20180320, Según ERS087-2017
    Set RCred = Nothing 'LUCV20180320, Según ERS087-2017
    ReprogramarCreditoenMemoriaTotal = MatCalend
End Function

Public Function ReprogramarCreditoSoloFechasMemoria(ByVal pnCuota As Integer, ByVal pnFechaFija As Integer, _
    ByVal pnPlazo As Integer, ByVal pMatCal As Variant) As Variant

Dim i As Integer
Dim dFecTemp As Date
Dim pnDiaFijo As Integer
Dim nMes, nAnio, nDia As Integer
Dim MatCalTmp As Variant
        MatCalTmp = pMatCal
        'Recalculo de fechas de Vencimiento
            dFecTemp = CDate(MatCalTmp(pnCuota - 1, 0))
            pnDiaFijo = pnFechaFija
            If pnFechaFija <> 0 Then
                nMes = Month(dFecTemp)
                nAnio = Year(dFecTemp)
                nDia = pnDiaFijo
                For i = pnCuota - 1 To UBound(MatCalTmp) - 1
                        nDia = pnDiaFijo
                        If Not (i = 0 And pnDiaFijo > Day(dFecTemp)) Then
                            nMes = nMes + 1
                            If nMes > 12 Then
                                nAnio = nAnio + 1
                                nMes = 1
                            End If
                        Else
                            If nMes = 2 Then
                                If nDia >= 29 Then
                                    If nAnio Mod 4 <> 0 Then
                                        nMes = nMes + 1
                                    End If
                                End If
                            Else
                                If nDia > 30 Then
                                    If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                        nMes = nMes + 1
                                    End If
                                End If
                            End If
                        End If
                        If nMes = 2 Then
                            If nDia > 28 Then
                                If nAnio Mod 4 = 0 Then
                                    nDia = 29
                                Else
                                    nDia = 28
                                End If
                            End If
                        Else
                            If nDia > 30 Then
                                If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                    nDia = 30
                                End If
                            End If
                        End If
                        dFecTemp = CDate(Right("0" & Trim(Str(nDia)), 2) & "/" & Right("0" & Trim(Str(nMes)), 2) & "/" & Trim(Str(nAnio)))
                        MatCalTmp(i, 0) = Format(dFecTemp, "dd/mm/yyyy")
                Next i
            Else
                For i = pnCuota - 1 To UBound(MatCalTmp) - 1
                    dFecTemp = dFecTemp + pnPlazo
                    MatCalTmp(i, 0) = Format(dFecTemp, "dd/mm/yyyy")
                Next i
            End If
        ReprogramarCreditoSoloFechasMemoria = MatCalTmp
End Function

Public Function ReprogramarCreditoMonto(ByVal pMatCalend As Variant, ByVal pnFila As Integer, ByVal pnMonto As Double)
Dim i As Integer
Dim nMontoCal As Double
Dim nDiferencia As Double

    nMontoCal = CDbl(pMatCalend(pnFila, 2)) + CDbl(pMatCalend(pnFila, 4)) + CDbl(pMatCalend(pnFila, 6)) + CDbl(pMatCalend(pnFila, 8)) + CDbl(pMatCalend(pnFila, 10)) + CDbl(pMatCalend(pnFila, 12)) + CDbl(pMatCalend(pnFila, 14))
    If nMontoCal <> pnMonto Then
        nDiferencia = pMatCalend(pnFila, 2)

        If pnMonto > CDbl(pMatCalend(pnFila, 4)) + CDbl(pMatCalend(pnFila, 6)) + CDbl(pMatCalend(pnFila, 8)) + CDbl(pMatCalend(pnFila, 10)) + CDbl(pMatCalend(pnFila, 12)) + CDbl(pMatCalend(pnFila, 14)) Then
            pMatCalend(pnFila, 2) = Format(pnMonto - (CDbl(pMatCalend(pnFila, 4)) + CDbl(pMatCalend(pnFila, 6)) + CDbl(pMatCalend(pnFila, 8)) + CDbl(pMatCalend(pnFila, 10)) + CDbl(pMatCalend(pnFila, 12)) + CDbl(pMatCalend(pnFila, 14))), "#0.00")
            nDiferencia = nDiferencia - CDbl(pMatCalend(pnFila, 2))
        End If
    End If

    pMatCalend(UBound(pMatCalend) - 1, 2) = Format(CDbl(pMatCalend(UBound(pMatCalend) - 1, 2)) + nDiferencia, "#0.00")

    ReprogramarCreditoMonto = pMatCalend

End Function


Public Function ReprogramarCreditoenMemoria(ByVal psCtaCod As String, ByVal pnTasa As Double, _
    ByVal pdFecOrig As Date, ByVal pdFecReprog As Date, ByVal nFilaReprog As Integer, ByVal pnTipoReprog As Integer, _
    Optional ByVal pbNoCargarMatriz As Boolean = False, Optional ByVal pMatCalend As Variant = "", _
    Optional ByVal pnMonto As Double = 0, Optional ByVal pdVigencia As Date, Optional ByVal pnPactoOriginal As Long = 0, Optional ByVal pdFecUltCuota As Date) As Variant

Dim MontoAReprogramar As Double
Dim MontoAProratear As Double
Dim MontoIntTemp As Double
Dim nDias As Integer
Dim i As Integer
Dim J As Integer
Dim nCapitalFusionado As Double
Dim MatCalTmp() As String
Dim MatCalTmp1() As String
Dim nNumFilasReal As Integer
Dim nPunt As Integer
Dim nMontoCredito As Double
Dim nMontoMovido(7, 2) As Double
Dim nMontoMovidoProrateado(7, 2) As Double
Dim nMontoSaldo As Double
Dim MatCalend() As String
Dim oCal As COMDCredito.DCOMCalendario
Dim oCredito As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim nMontoDesemb As Double
Dim dFecTmp As Date
Dim nPlazoApr As Integer
Dim nFechaFija As Integer
Dim pnDiaFijo As Integer
Dim nMes As Integer
Dim nDia As Integer
Dim nAnio As Integer
Dim dFecTemp As Date
Dim nCuotaApr As Double
Dim nMontoSaldoAux As Double
Dim lbFlagFinal As Boolean

    'Carga Calendario A Reprogramar
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)

    nMontoCredito = IIf(IsNull(R!nMonto), 0, R!nMonto)
    nMontoSaldo = IIf(IsNull(R!nMonto), 0, R!nMonto)
    nFechaFija = IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija)
    nPlazoApr = IIf(IsNull(R!nPlazo), 0, R!nPlazo)
    nMontoDesemb = nMontoCredito
    R.Close
    Set R = Nothing

    nMontoCredito = oCredito.SaldoPactadoCredito(psCtaCod)
    nMontoSaldo = nMontoCredito
    Set oCredito = Nothing
    Set oCal = New COMDCredito.DCOMCalendario

    If Not pbNoCargarMatriz Or Not IsArray(pMatCalend) Then
        Set R = oCal.RecuperaCalendarioPagos(psCtaCod)
        ReDim MatCalend(R.RecordCount, 22)
        Do While Not R.EOF
            MatCalend(R.Bookmark - 1, 0) = Format(R!dVenc, "dd/mm/yyyy") 'Fecha de Vencimiento
            MatCalend(R.Bookmark - 1, 1) = Trim(Str(R!nCuota)) 'NroCuota
            MatCalend(R.Bookmark - 1, 2) = Format(IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00") 'Capital
            MatCalend(R.Bookmark - 1, 3) = Format(IIf(IsNull(R!nCapitalPag), 0, R!nCapitalPag), "#0.00") 'Capital Pagado
            MatCalend(R.Bookmark - 1, 4) = Format(IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00") 'Interes Compensatorio
            MatCalend(R.Bookmark - 1, 5) = Format(IIf(IsNull(R!nIntCompPag), 0, R!nIntCompPag), "#0.00") 'Interes Compensatorio Pagado
            MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00") 'Interes Moratorio
            MatCalend(R.Bookmark - 1, 7) = Format(IIf(IsNull(R!nIntMorPag), 0, R!nIntMorPag), "#0.00") 'Interes Moratorio Pagado
            MatCalend(R.Bookmark - 1, 8) = Format(IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00") 'Interes Reprogramado
            MatCalend(R.Bookmark - 1, 9) = Format(IIf(IsNull(R!nIntReprogPag), 0, R!nIntReprogPag), "#0.00") 'Interes Reprogramado Pagado
            MatCalend(R.Bookmark - 1, 10) = Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00") 'Interes Gracia
            MatCalend(R.Bookmark - 1, 11) = Format(IIf(IsNull(R!nIntGraciaPag), 0, R!nIntGraciaPag), "#0.00") 'Interes Gracia Pagado
            MatCalend(R.Bookmark - 1, 12) = Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00") 'Interes Suspenso
            MatCalend(R.Bookmark - 1, 13) = Format(IIf(IsNull(R!nIntSuspensoPag), 0, R!nIntSuspensoPag), "#0.00") 'Interes Suspenso Pagado
            MatCalend(R.Bookmark - 1, 14) = Format(IIf(IsNull(R!nGasto), 0, R!nGasto), "#0.00") 'Gastos
            MatCalend(R.Bookmark - 1, 15) = Format(IIf(IsNull(R!nGastoPag), 0, R!nGastoPag), "#0.00") 'Gastos Pagados
            nMontoCredito = nMontoCredito - IIf(IsNull(R!nCapital), 0, R!nCapital)
            nMontoCredito = CDbl(Format(nMontoCredito, "#0.00"))
            MatCalend(R.Bookmark - 1, 16) = Format(nMontoCredito, "#0.00") 'Saldo Capital
            MatCalend(R.Bookmark - 1, 17) = Trim(Str(R!ncoloccalendestado))
            MatCalend(R.Bookmark - 1, 18) = Format(IIf(IsNull(R!nIntCompVenc), 0, R!nIntCompVenc), "#0.00") 'Interes Compensatorio Vencido
            MatCalend(R.Bookmark - 1, 19) = Format(IIf(IsNull(R!nIntCompVencPag), 0, R!nIntCompVencPag), "#0.00") 'Interes Compensatorio Vencido Pagado
            MatCalend(R.Bookmark - 1, 20) = Format(IIf(IsNull(R!dPago), Null, R!dPago), "dd/mm/yyyy")
            MatCalend(R.Bookmark - 1, 21) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
            R.MoveNext
        Loop
        R.Close
        Set R = Nothing
    End If

    If IsArray(pMatCalend) Then
        MatCalend = pMatCalend
    End If

    If CDate(MatCalend(nFilaReprog, 0)) = pdFecReprog And pnTipoReprog <> 4 Then
        ReprogramarCreditoenMemoria = MatCalend
        Exit Function
    End If

    MatCalend(nFilaReprog, 0) = Format(pdFecReprog, "dd/mm/yyyy")
    'Mover la Fechas
    nCapitalFusionado = 0
    For i = 0 To 6
        nMontoMovido(i, 0) = 0#
        nMontoMovido(i, 1) = 0#
    Next i

     If (pnTipoReprog = 1 Or pnTipoReprog = 4) Then 'Proratear 'CALCULO SEGUN cmac ica
        nNumFilasReal = UBound(MatCalend)
    Else
        nNumFilasReal = UBound(MatCalend) + 1
    End If

    ReDim Preserve MatCalTmp(nNumFilasReal, 21)
    nPunt = 0
    J = 0
    For i = 0 To UBound(MatCalend) - 1
        If MatCalend(i, 0) <> "" Then
            MatCalTmp(nPunt, 0) = MatCalend(i, 0)
            MatCalTmp(nPunt, 1) = nPunt + 1
            MatCalTmp(nPunt, 2) = MatCalend(i, 2)
            MatCalTmp(nPunt, 3) = MatCalend(i, 3)
            MatCalTmp(nPunt, 4) = MatCalend(i, 4)
            MatCalTmp(nPunt, 5) = MatCalend(i, 5)
            MatCalTmp(nPunt, 6) = MatCalend(i, 6)
            MatCalTmp(nPunt, 7) = MatCalend(i, 7)
            MatCalTmp(nPunt, 8) = MatCalend(i, 8)
            MatCalTmp(nPunt, 9) = MatCalend(i, 9)
            MatCalTmp(nPunt, 10) = MatCalend(i, 10)
            MatCalTmp(nPunt, 11) = MatCalend(i, 11)
            MatCalTmp(nPunt, 12) = MatCalend(i, 12)
            MatCalTmp(nPunt, 13) = MatCalend(i, 13)
            MatCalTmp(nPunt, 14) = MatCalend(i, 14)
            MatCalTmp(nPunt, 15) = MatCalend(i, 15)
            MatCalTmp(nPunt, 17) = MatCalend(i, 17)
            MatCalTmp(nPunt, 18) = MatCalend(i, 18)
            MatCalTmp(nPunt, 19) = MatCalend(i, 19)
            MatCalTmp(nPunt, 20) = MatCalend(i, 20)
            MatCalTmp(nPunt, 21) = MatCalend(i, 21)
            
            nPunt = nPunt + 1
            'Solo Pendientes
            If CInt(Trim(MatCalTmp(nPunt - 1, 17))) = gColocCalendEstadoPendiente Then
                J = J + 1 'Total Pendientes
            End If
        End If
    Next i
    'Recalculo de Saldos
    nMontoSaldoAux = nMontoSaldo
    For i = 0 To UBound(MatCalend) - 1
        nMontoSaldo = nMontoSaldo - CDbl(MatCalTmp(i, 2))
        nMontoSaldo = CDbl(Format(nMontoSaldo, "#0.00"))
        MatCalTmp(i, 16) = Format(nMontoSaldo, "#0.00")
    Next i

    If pnTipoReprog <> 3 Then 'Proratear
        If pnTipoReprog = 4 Then 'segun cmac ica
            'Calculo por Dias Reprogramados
            If nFilaReprog = 0 Then
                nDias = CDate(MatCalTmp(nFilaReprog, 0)) - pdVigencia
            Else
                nDias = CDate(MatCalTmp(nFilaReprog, 0)) - pdFecOrig
                If nDias < 0 Then
                    nDias = CDate(MatCalTmp(nFilaReprog, 0)) - CDate(MatCalTmp(nFilaReprog - 1, 0))
                End If
            End If

            If nFilaReprog = 0 Then
                MontoAReprogramar = TasaIntPerDias(pnTasa, nDias) * nMontoDesemb
            Else
                MontoAReprogramar = TasaIntPerDias(pnTasa, nDias) * CDbl(MatCalTmp(nFilaReprog - 1, 16))
            End If
            If Val(MatCalTmp(nFilaReprog + 1, 2)) > 0 Then
                nCuotaApr = CDbl(Format(CDbl(MatCalTmp(nFilaReprog + 1, 2)) + CDbl(MatCalTmp(nFilaReprog + 1, 4)) + CDbl(IIf(MatCalTmp(nFilaReprog + 1, 10) = "", "0", MatCalTmp(nFilaReprog + 1, 10))), "#0.00"))
            Else
                nCuotaApr = CDbl(Format(CDbl(MatCalTmp(nFilaReprog - 1, 2)) + CDbl(MatCalTmp(nFilaReprog - 1, 4)) + CDbl(IIf(MatCalTmp(nFilaReprog - 1, 10) = "", "0", MatCalTmp(nFilaReprog - 1, 10))), "#0.00"))
            End If
            MontoAReprogramar = CDbl(Format(MontoAReprogramar, "#0.00"))
            MatCalTmp(nFilaReprog, 4) = MontoAReprogramar  ' interes
            If pnMonto = 0 Then
                If (nFilaReprog + 1) <> UBound(MatCalTmp) Then
                    MatCalTmp(nFilaReprog, 2) = nCuotaApr - (MontoAReprogramar + MatCalTmp(nFilaReprog, 10)) ' capital
                End If
            Else
                MatCalTmp(nFilaReprog, 2) = pnMonto - (MontoAReprogramar + MatCalTmp(nFilaReprog, 10)) ' capital
            End If
            If nFilaReprog = 0 Then
                MatCalTmp(nFilaReprog, 16) = Format(nMontoDesemb - CDbl(MatCalTmp(nFilaReprog, 2)), "#0.00")
            Else
                MatCalTmp(nFilaReprog, 16) = Format(CDbl(MatCalTmp(nFilaReprog - 1, 16)) - CDbl(MatCalTmp(nFilaReprog, 2)), "#0.00")
            End If
        Else
            '1  :Calulo por Dias Reprogramados
            'nDias es el Número de Dias a Reprogramar
            nDias = CDate(MatCalTmp(nFilaReprog, 0)) - pdFecOrig
            If nDias < 0 Then
                nDias = CDate(MatCalTmp(nFilaReprog, 0)) - CDate(MatCalTmp(nFilaReprog - 1, 0))
            End If
            If nFilaReprog = 0 Then
                MontoAReprogramar = TasaIntPerDias(pnTasa, nDias) * nMontoDesemb
            Else
                MontoAReprogramar = TasaIntPerDias(pnTasa, nDias) * CDbl(MatCalTmp(nFilaReprog - 1, 16))
            End If
            MontoAReprogramar = CDbl(Format(MontoAReprogramar, "#0.00"))
        End If
    Else
        nFilaReprog = UBound(MatCalTmp) - 2
    End If
    If pnTipoReprog <> 4 Then
        'Recalculo de fechas de Vencimiento
        dFecTmp = CDate(MatCalTmp(nFilaReprog, 0))
        'ARCV 17-07-2006
        'pnDiaFijo = nFechaFija
        pnDiaFijo = Day(pdFecReprog)
        '---------------------
        If nFechaFija <> 0 Then
            nMes = Month(dFecTmp)
            nAnio = Year(dFecTmp)
            nDia = pnDiaFijo
            If MatCalTmp(nFilaReprog + 1, 2) <> "" Then
                nCuotaApr = CDbl(Format(CDbl(MatCalTmp(nFilaReprog + 1, 2)) + CDbl(MatCalTmp(nFilaReprog + 1, 4)), "#0.00"))
            End If
            For i = nFilaReprog + 1 To UBound(MatCalTmp) - 1
                    nDia = pnDiaFijo
                    If Not (i = 0 And pnDiaFijo > Day(dFecTmp)) Then
                        nMes = nMes + 1
                        If nMes > 12 Then
                            nAnio = nAnio + 1
                            nMes = 1
                        End If
                    Else
                        If nMes = 2 Then
                            If nDia >= 29 Then
                                If nAnio Mod 4 <> 0 Then
                                    nMes = nMes + 1
                                End If
                            End If
                        Else
                            If nDia > 30 Then
                                If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                    nMes = nMes + 1
                                End If
                            End If
                        End If
                    End If
                    If nMes = 2 Then
                        If nDia > 28 Then
                            If nAnio Mod 4 = 0 Then
                                nDia = 29
                            Else
                                nDia = 28
                            End If
                        End If
                    Else
                        If nDia > 30 Then
                            If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                nDia = 30
                            End If
                        End If
                    End If
                    dFecTemp = CDate(Right("0" & Trim(Str(nDia)), 2) & "/" & Right("0" & Trim(Str(nMes)), 2) & "/" & Trim(Str(nAnio)))
                    MatCalTmp(i, 0) = Format(dFecTemp, "dd/mm/yyyy")
                    If i = nFilaReprog + 1 Then
                        nDias = CDate(MatCalTmp(i, 0)) - dFecTmp
                    Else
                        nDias = CDate(MatCalTmp(i, 0)) - CDate(MatCalTmp(i - 1, 0))
                    End If
                    MontoIntTemp = TasaIntPerDias(pnTasa, nDias) * CDbl(MatCalTmp(i - 1, 16))
                    MatCalTmp(i, 4) = Format(MontoIntTemp, "#0.00")
                    MatCalTmp(i, 2) = CDbl(Format(nCuotaApr - CDbl(MatCalTmp(i, 4)), "#0.00"))

                    If UBound(MatCalTmp) - 1 = i Then
                        If CDbl(MatCalTmp(i - 1, 16)) < CDbl(MatCalTmp(i, 2)) Then
                            MatCalTmp(i, 2) = MatCalTmp(i - 1, 16)
                        End If
                    End If
                    MatCalTmp(i, 16) = Format(CDbl(MatCalTmp(i - 1, 16)) - CDbl(MatCalTmp(i, 2)), "#0.00")
            Next i
        Else
            For i = nFilaReprog + 1 To UBound(MatCalTmp) - 1
                dFecTmp = dFecTmp + nPlazoApr
                MatCalTmp(i, 0) = Format(dFecTmp, "dd/mm/yyyy")
            Next i
        End If
    Else
        'If pnPactoOriginal = 1 Then
            'Recalculo de fechas de Vencimiento
            lbFlagFinal = False
            dFecTmp = CDate(MatCalTmp(nFilaReprog, 0))
            'ARCV 17-07-2006
            'pnDiaFijo = nFechaFija
            pnDiaFijo = Day(pdFecReprog)
            '---------------------

            If nFechaFija <> 0 Then
                nMes = Month(dFecTmp)
                nAnio = Year(dFecTmp)
                nDia = pnDiaFijo
                If MatCalTmp(nFilaReprog + 1, 2) <> "" Then
                    nCuotaApr = CDbl(Format(CDbl(MatCalTmp(nFilaReprog + 1, 2)) + CDbl(MatCalTmp(nFilaReprog + 1, 4)) + CDbl(MatCalTmp(nFilaReprog + 1, 10)), "#0.00"))
                End If
                For i = nFilaReprog + 1 To UBound(MatCalTmp) - 1
                        nDia = pnDiaFijo
                        If Not (i = 0 And pnDiaFijo > Day(dFecTmp)) Then
                            nMes = nMes + 1
                            If nMes > 12 Then
                                nAnio = nAnio + 1
                                nMes = 1
                            End If
                        Else
                            If nMes = 2 Then
                                If nDia >= 29 Then
                                    If nAnio Mod 4 <> 0 Then
                                        nMes = nMes + 1
                                    End If
                                End If
                            Else
                                If nDia >= 30 Then
                                    If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                        nMes = nMes + 1
                                    End If
                                    If nMes = 1 Or nMes = 3 Or nMes = 5 Or nMes = 7 Or nMes = 8 Or nMes = 10 Or 12 Then
                                        nDia = 31
                                    End If
                                End If
                            End If
                        End If
                        If nMes = 2 Then
                            If nDia > 28 Then
                                If nAnio Mod 4 = 0 Then
                                    nDia = 29
                                Else
                                    nDia = 28
                                End If
                            End If
                        Else
                            If nDia > 30 Then
                                If nMes = 4 Or nMes = 6 Or nMes = 9 Or 11 Then
                                    nDia = 30
                                End If
                                If nMes = 1 Or nMes = 3 Or nMes = 5 Or nMes = 7 Or nMes = 8 Or nMes = 10 Or 12 Then
                                    nDia = 31
                                End If
                            End If
                        End If

                        'If UBound(MatCalTmp) - 1 = I Then ' si es la ultima cuota coger la fecha de vencimiento de la ultima cuota
                         dFecTemp = CDate(Right("0" & Trim(Str(nDia)), 2) & "/" & Right("0" & Trim(Str(nMes)), 2) & "/" & Trim(Str(nAnio)))
                         ' si la fecha de la cuota calculada es mayor que ultima fecha de la ultima cuota

                        If dFecTemp > pdFecUltCuota Then
                            dFecTemp = pdFecUltCuota
                            lbFlagFinal = True
                        End If
                        'Else
                        '    dFecTemp = CDate(Right("0" & Trim(Str(nDia)), 2) & "/" & Right("0" & Trim(Str(nMes)), 2) & "/" & Trim(Str(nAnio)))
                        'End If


                        MatCalTmp(i, 0) = Format(dFecTemp, "dd/mm/yyyy")
                        If i = nFilaReprog + 1 Then
                            nDias = CDate(MatCalTmp(i, 0)) - dFecTmp
                        Else
                            nDias = CDate(MatCalTmp(i, 0)) - CDate(MatCalTmp(i - 1, 0))
                        End If

                        MontoIntTemp = TasaIntPerDias(pnTasa, nDias) * CDbl(MatCalTmp(i - 1, 16))
                        MatCalTmp(i, 4) = Format(MontoIntTemp, "#0.00")
                        MatCalTmp(i, 2) = CDbl(Format(nCuotaApr - CDbl(MatCalTmp(i, 4)) - CDbl(MatCalTmp(i, 10)), "#0.00"))

                        If UBound(MatCalTmp) - 1 = i Then
                            If CDbl(MatCalTmp(i - 1, 16)) < CDbl(MatCalTmp(i, 2)) Then
                                MatCalTmp(i, 2) = MatCalTmp(i - 1, 16)
                            End If
                        End If
                        MatCalTmp(i, 16) = Format(CDbl(MatCalTmp(i - 1, 16)) - CDbl(MatCalTmp(i, 2)), "#0.00")
                        If CDbl(MatCalTmp(i - 1, 16)) <= CDbl(MatCalTmp(i, 2)) Then
                            MatCalTmp(i, 2) = MatCalTmp(i - 1, 16)
                            MatCalTmp(i, 16) = 0
                            Exit For
                        End If
                        If lbFlagFinal = True Then
                            Exit For
                        End If
                Next i
            Else
                For i = nFilaReprog + 1 To UBound(MatCalTmp) - 1
                    dFecTmp = dFecTmp + nPlazoApr
                    If dFecTemp > pdFecUltCuota Then
                        dFecTemp = pdFecUltCuota
                        lbFlagFinal = True
                    End If
                    'If UBound(MatCalTmp) - 1 = I Then ' si es la ultima cuota coger la fecha de vencimiento de la ultima cuota
                    '    dFecTmp = pdFecUltCuota
                    'Else
                    '
                    'End If
                    MatCalTmp(i, 0) = Format(dFecTmp, "dd/mm/yyyy")

                    If lbFlagFinal Then Exit For
                Next i

                dFecTmp = CDate(MatCalTmp(nFilaReprog, 0))
                For i = nFilaReprog + 1 To UBound(MatCalTmp) - 1
                    If i = nFilaReprog + 1 Then
                        nDias = CDate(MatCalTmp(i, 0)) - dFecTmp
                    Else
                        nDias = CDate(MatCalTmp(i, 0)) - CDate(MatCalTmp(i - 1, 0))
                    End If
                    MontoIntTemp = TasaIntPerDias(pnTasa, nDias) * CDbl(MatCalTmp(i - 1, 16))
                    MatCalTmp(i, 4) = Format(MontoIntTemp, "#0.00")
                    MatCalTmp(i, 2) = CDbl(Format(nCuotaApr - CDbl(MatCalTmp(i, 4)) - CDbl(MatCalTmp(i, 10)), "#0.00"))

                    MatCalTmp(i, 16) = Format(CDbl(MatCalTmp(i - 1, 16)) - CDbl(MatCalTmp(i, 2)), "#0.00")
                    If CDbl(MatCalTmp(i - 1, 16)) <= CDbl(MatCalTmp(i, 2)) Then
                        MatCalTmp(i, 2) = MatCalTmp(i - 1, 16)
                        MatCalTmp(i, 16) = 0
                        Exit For
                    End If
                Next
            End If
'        Else
'            '************************************* si no es de acuerdo a lo aprobado *******************************
'            dFecTmp = CDate(MatCalTmp(nFilaReprog, 0))
'            For I = nFilaReprog + 1 To UBound(MatCalTmp) - 1
'                If I = nFilaReprog + 1 Then
'                    nDias = CDate(MatCalTmp(I, 0)) - dFecTmp
'                Else
'                    nDias = CDate(MatCalTmp(I, 0)) - CDate(MatCalTmp(I - 1, 0))
'                End If
'                MontoIntTemp = TasaIntPerDias(pnTasa, nDias) * CDbl(MatCalTmp(I - 1, 16))
'                MatCalTmp(I, 4) = Format(MontoIntTemp, "#0.00")
'                MatCalTmp(I, 2) = CDbl(Format(nCuotaApr - CDbl(MatCalTmp(I, 4)) - CDbl(MatCalTmp(I, 10)), "#0.00"))
'
'                MatCalTmp(I, 16) = Format(CDbl(MatCalTmp(I - 1, 16)) - CDbl(MatCalTmp(I, 2)), "#0.00")
'                If CDbl(MatCalTmp(I - 1, 16)) <= CDbl(MatCalTmp(I, 2)) Then
'                    MatCalTmp(I, 2) = MatCalTmp(I - 1, 16)
'                    MatCalTmp(I, 16) = 0
'                    Exit For
'                End If
'            Next
    '    End If
            'Recalculamos los saldos
            Dim lnSaldo As Double
            Dim m As Integer
            Dim lnIndiceNew As Long
            lnSaldo = nMontoSaldoAux
            lnIndiceNew = 0
            For J = 0 To UBound(MatCalend) - 1
                lnSaldo = lnSaldo - CDbl(MatCalTmp(J, 2))
                lnSaldo = CDbl(Format(lnSaldo, "#0.00"))
                MatCalTmp(J, 16) = Format(lnSaldo, "#0.00")
                If MatCalTmp(J, 16) >= 0 Then
                    lnIndiceNew = lnIndiceNew + 1
                End If
            Next J
            Dim lnDias As Long
            If lnSaldo > 0 And pnPactoOriginal = 0 Then
                m = UBound(MatCalTmp)
                ReDim Preserve MatCalTmp(m, 21)
                If MatCalTmp(m - 1, 0) < pdFecUltCuota Then
                    lnIndiceNew = lnIndiceNew + 1
                    MatCalTmp(m, 0) = DateAdd("d", nDias, MatCalTmp(m - 1, 0))
                    If CDate(MatCalTmp(m, 0)) > pdFecUltCuota Then
                        MatCalTmp(m, 0) = pdFecUltCuota
                    End If
                    lnDias = DateDiff("d", MatCalTmp(m - 1, 0), pdFecUltCuota)
                    MontoIntTemp = TasaIntPerDias(pnTasa, lnDias) * lnSaldo
                    MatCalTmp(m, 1) = Format(Trim(Str(Val(MatCalTmp(m - 1, 0)) + 1)), "0000") 'NroCuota
                    MatCalTmp(m, 2) = lnSaldo
                    MatCalTmp(m, 3) = Format(0, "#0.00") 'Capital Pagado
                    MatCalTmp(m, 4) = Format(MontoIntTemp, "#0.00") 'Interes Compensatorio
                    MatCalTmp(m, 5) = Format(0, "#0.00") 'Interes Compensatorio Pagado
                    MatCalTmp(m, 6) = Format(0, "#0.00") 'Interes Moratorio
                    MatCalTmp(m, 7) = Format(0, "#0.00") 'Interes Moratorio Pagado
                    MatCalTmp(m, 8) = Format(0, "#0.00") 'Interes Reprogramado
                    MatCalTmp(m, 9) = Format(0, "#0.00") 'Interes Reprogramado Pagado
                    MatCalTmp(m, 10) = Format(0, "#0.00") 'Interes Gracia
                    MatCalTmp(m, 11) = Format(0, "#0.00") 'Interes Gracia Pagado
                    MatCalTmp(m, 12) = Format(0, "#0.00") 'Interes Suspenso
                    MatCalTmp(m, 13) = Format(0, "#0.00") 'Interes Suspenso Pagado
                    MatCalTmp(m, 14) = Format(0, "#0.00") 'Gastos
                    MatCalTmp(m, 15) = Format(0, "#0.00") 'Gastos Pagados
                    MatCalTmp(m, 16) = Format(0, "#0.00")
                    MatCalTmp(m, 17) = Format(0, "#0.00")
                    MatCalTmp(m, 18) = Format(0, "#0.00") 'Interes Compensatorio Vencido
                    MatCalTmp(m, 19) = Format(0, "#0.00") 'Interes Compensatorio Vencido Pagado
                    MatCalTmp(m, 21) = Format(0, "#0.00") 'Mora para el proceso de reprogramación en LOTE
                Else
                     If lnSaldo > 0 Then
                        MatCalTmp(UBound(MatCalTmp) - 1, 2) = MatCalTmp(UBound(MatCalTmp) - 1, 2) + lnSaldo
                        MatCalTmp(UBound(MatCalTmp) - 1, 16) = Format(0, "#0.00")
                    End If
                End If

            Else
                If lnSaldo > 0 Then
                    MatCalTmp(UBound(MatCalTmp) - 1, 2) = MatCalTmp(UBound(MatCalTmp) - 1, 2) + lnSaldo
                    MatCalTmp(UBound(MatCalTmp) - 1, 16) = Format(0, "#0.00")
                End If
            End If


            ReDim MatCalTmp1(lnIndiceNew, 21)
            For J = 0 To UBound(MatCalTmp1) - 1
                    'If J <= lnIndiceNew Then
                        MatCalTmp1(J, 0) = MatCalTmp(J, 0)
                        MatCalTmp1(J, 1) = J + 1
                        MatCalTmp1(J, 2) = MatCalTmp(J, 2)
                        MatCalTmp1(J, 3) = MatCalTmp(J, 3)
                        MatCalTmp1(J, 4) = MatCalTmp(J, 4)
                        MatCalTmp1(J, 5) = MatCalTmp(J, 5)
                        MatCalTmp1(J, 6) = MatCalTmp(J, 6)
                        MatCalTmp1(J, 7) = MatCalTmp(J, 7)
                        MatCalTmp1(J, 8) = MatCalTmp(J, 8)
                        MatCalTmp1(J, 9) = MatCalTmp(J, 9)
                        MatCalTmp1(J, 10) = MatCalTmp(J, 10)
                        MatCalTmp1(J, 11) = MatCalTmp(J, 11)
                        MatCalTmp1(J, 12) = MatCalTmp(J, 12)
                        MatCalTmp1(J, 13) = MatCalTmp(J, 13)
                        MatCalTmp1(J, 14) = MatCalTmp(J, 14)
                        MatCalTmp1(J, 15) = MatCalTmp(J, 15)
                        MatCalTmp1(J, 16) = MatCalTmp(J, 16)
                        MatCalTmp1(J, 17) = MatCalTmp(J, 17)
                        MatCalTmp1(J, 18) = MatCalTmp(J, 18)
                        MatCalTmp1(J, 19) = MatCalTmp(J, 19)
                        MatCalTmp1(J, 20) = MatCalTmp(J, 20)
                        MatCalTmp1(J, 21) = MatCalTmp(J, 21)
                    'End If
            Next J
    End If
            '3  :Recalcula el Saldo Capital
            nMontoSaldo = MatCalTmp(nFilaReprog, 16)
            For i = nFilaReprog + 1 To UBound(MatCalTmp) - 1
                If pnTipoReprog <> 2 Then
                    If i = UBound(MatCalTmp) - 1 Then
                        MatCalTmp(i, 2) = Format(nMontoSaldo, "#0.00")
                    End If
                Else
                    If i = UBound(MatCalTmp) - 2 Then
                        MatCalTmp(i, 2) = Format(nMontoSaldo, "#0.00")
                    End If
                End If
                nMontoSaldo = nMontoSaldo - CDbl(MatCalTmp(i, 2))
                nMontoSaldo = Format(nMontoSaldo, "#0.00")
                MatCalTmp(i, 16) = Format(nMontoSaldo, "#0.00")
            Next i

    If pnTipoReprog = 1 Then 'Proratear
        MontoAProratear = Format((MontoAReprogramar / (UBound(MatCalTmp) - nFilaReprog)), "#0.00")

        For i = nFilaReprog To UBound(MatCalTmp) - 1
            MatCalTmp(i, 8) = Format(CDbl(MatCalTmp(i, 8)) + CDbl(MontoAProratear), "#0.00")
        Next i

    Else    'A la Ultima Cuota
        If pnTipoReprog = 3 Then 'Pasar Interes a Ultima Cuota (Especial)
            MontoIntTemp = 0
            For i = 0 To UBound(MatCalTmp) - 2
                If CDbl(MatCalTmp(i, 2)) > 0 And MatCalTmp(i, 17) = "0" Then
                    MontoIntTemp = MontoIntTemp + CDbl(MatCalTmp(i, 4))
                    MatCalTmp(i, 4) = "0.00"
                End If
            Next i

            MatCalTmp(UBound(MatCalTmp) - 1, 1) = Trim(Str(UBound(MatCalTmp)))
            MatCalTmp(UBound(MatCalTmp) - 1, 2) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 3) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 4) = Format(CDbl(MontoIntTemp), "#0.00")
            MatCalTmp(UBound(MatCalTmp) - 1, 5) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 6) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 7) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 8) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 9) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 10) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 11) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 12) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 13) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 14) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 15) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 16) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 17) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 18) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 19) = "0.00"
            MatCalTmp(UBound(MatCalTmp) - 1, 21) = "0.00"
        Else
            If pnTipoReprog <> 4 Then
                MatCalTmp(UBound(MatCalTmp) - 1, 1) = Trim(Str(UBound(MatCalTmp)))
                MatCalTmp(UBound(MatCalTmp) - 1, 2) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 3) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 4) = Format(CDbl(MontoAReprogramar), "#0.00")
                MatCalTmp(UBound(MatCalTmp) - 1, 5) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 6) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 7) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 8) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 9) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 10) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 11) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 12) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 13) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 14) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 15) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 16) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 17) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 18) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 19) = "0.00"
                MatCalTmp(UBound(MatCalTmp) - 1, 21) = "0.00"
            End If
        End If
    End If
    Set oCal = Nothing
    If pnTipoReprog <> 4 Then
        ReprogramarCreditoenMemoria = MatCalTmp
    Else
        ReprogramarCreditoenMemoria = MatCalTmp1
    End If
End Function

'**EJVG20121210, se aumento el parametro pbReprogxDesastreNat
'**Modificado por DAOR 20070411, se aumentaron parametros requeridos para generar Matriz de Gastos
'**pnTipoPeriodo,pnPlazo
Public Function ReprogramarCredito(ByVal psCtaCod As String, ByVal MatCalend As Variant, _
    ByVal pnTipoReprog As Integer, Optional pnMiViv As Boolean = False, Optional MatCalend_2 As Variant = "", _
    Optional pdHoy As Date = CDate("01/01/1900"), Optional pnRFA As Boolean = False, _
    Optional ByVal psCodUser, Optional ByVal psCodAge As String, _
    Optional pnTipoPeriodo As Integer, Optional pnPlazo As Integer, _
    Optional ByVal pbRpgSinPrePago As Boolean = False, Optional ByRef pnMovNro As Long, Optional ByVal pnPeriodoFechaFija As Integer = 0, _
    Optional ByVal pbReprogxDesastreNat As Boolean = False, _
    Optional ByVal pbComisionReprog As Boolean = False, Optional ByVal pnTipoComision As Integer = 0, _
    Optional ByVal pnPersoneria As Integer = 0, Optional ByVal pbReprogRoyaAmarilla As Boolean = False, Optional ByVal pbPrepagoCred As Boolean = False, _
    Optional ByVal psGlosa As String = "", _
    Optional ByVal pnNewTCEA As Double = 0, _
    Optional ByVal pbReprogZonaInundada = False, _
    Optional ByVal pbPagoAnticipado As Boolean = False, _
    Optional ByVal pnTipoReprogCovid As Integer = 0, _
    Optional ByVal pnTipoLiquidacion As Integer = -1, _
    Optional ByVal pnMontoCuota As Currency = -1) As String
    'JOEP 20170311 Se agrego pnNewTCEA para reprogramacion
    'JUEZ 20130412 Se agregó pbComisionReprog, pnTipoComision y pnPersoneria
    'By Capi 03062008 se adiciono parametro pbRpgSinPrePago para diferenciar las reprogramaciones producto del prepago
    'JUEZ 20131022 Se agregó pbReprogRoyaAmarilla
    'PASI 20150205 Se agregó pbPrepagoCred
    'JUEZ 20160216 Se agregó psGlosa
    'PASI 20170327 se agregó pbReprogZonaInundada
    'LUCV20180424, Se agregó pbPagoAnticipado
    'JOEP20200525, Add pnTipoReprogCovid Mantener cuota
    'pnTipoReprog = 1 Reprogramacion con Edicion de Fecha
    'pnTipoReprog = 2 Reprogramacion Total Otorgamiento de un Nuevo
    '                 Credito bajo el Saldo de capital Existente y las mismas condiciones que el anterior
    'pnTipoLiquidacion RIRO 20200903, 1 = reprogramacion, 2 = prepago / Correccion liquidacion
    'JOEP20200926 TasaEspecial y reduccion de monto
Dim oCredito As COMDCredito.DCOMCredito
Dim oBase As COMDCredito.DCOMCredActBD
Dim oCalend As COMDCredito.DCOMCalendario
Dim nNroCalen As Integer
Dim R As ADODB.Recordset
Dim RAprob As ADODB.Recordset
Dim RReprog As ADODB.Recordset 'JUEZ 20160216
Dim i As Integer
Dim oGastos As NCOMGasto
Dim nNumGastos As Integer
Dim MatDesemb As Variant
Dim MatGastos As Variant
Dim nMontoPrestamoRep As Double
Dim sTipoGasto As String
Dim sMovNro As String
Dim nMovNro As Long
Dim nDiasAtraso As Integer
Dim nEstadoProducto As Integer
Dim sSql As String
'Dim oConecta As COMConecta.DCOMConecta
Dim lsMovNroDesNat As String, lsOpeCodDesNat As String 'EJVG20121212
Dim lnMovNroDesNat As Long 'EJVG20121212
'JUEZ 20130412 ******************
Dim lnMontoComision As Double
Dim lnNroProxCuota As Integer
Dim lnPrdConceptoComision As Integer
'END JUEZ ***********************
'JUEZ 20131022 *************************
Dim lnConceptoReprogNatEspeciales As String
Dim lsGlosaReprogNatEspeciales As String
Dim bReversionRoyaAmarilla As Boolean
Dim lnMovNroReversionReprog As Long
Dim lnMovNroReversionReprogNew As Long
Dim lsMovNroReversionReprog As String

bReversionRoyaAmarilla = False
lnMovNroReversionReprog = 0
'END JUEZ ******************************
'WIOR 20140826 *************************
Dim MatCalendSegDes As Variant
ReDim MatCalendSegDes(4, 0)
'WIOR FIN ******************************
'WIOR 20160226 ***
Dim bPriCuotaPend As Boolean
bPriCuotaPend = True
'WIOR FIN ********

Dim bReversionDesNat As Boolean 'EJVG20140325
Dim nNumMesesPorDia As Integer 'JUEZ 20150708
Dim nNumMesesPorMes As Integer 'JUEZ 20150708
Dim lnTCVenta As Double 'JUEZ 20151229

Dim rsValorExiIntGra As ADODB.Recordset  'JOEP 20170227
Dim rsValorExiSegDesg As ADODB.Recordset  'JOEP 20170227
'PASI 20170327*******************************
Dim bReversionZonaInundada As Boolean
'PASI END************************************
Dim rsValorExisteSegIncGracia As ADODB.Recordset  'LUCV20180601

    On Error GoTo ErrorReprogramarCredito
    ReDim MatDesemb(0, 0)
    ReprogramarCredito = ""
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocacCred(psCtaCod)
    Set RAprob = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    sTipoGasto = IIf(IsNull(RAprob!cTipoGasto), "F", RAprob!cTipoGasto)
    
    If pnMiViv Then
        nNroCalen = R!nNroCalPar + 1
    Else
        nNroCalen = R!nNroCalen + 1
    End If

    nDiasAtraso = R!nDiasAtraso
    lnNroProxCuota = R!nNroProxCuota 'JUEZ 20130412
    R.Close
    Set R = Nothing

    Set R = oCredito.RecuperaProducto(psCtaCod)
     nMontoPrestamoRep = R!nSaldo
     nEstadoProducto = R!nPrdEstado

    Set R = Nothing

    If pnMiViv Then
        Set R = oCredito.RecuperaProducto(psCtaCod)
        nMontoPrestamoRep = R!nSaldo
        R.Close
        Set oGastos = New NCOMGasto
        MatGastos = oGastos.GeneraCalendarioGastos(MatCalend, MatDesemb, nNumGastos, pdHoy, psCtaCod, 1, "DE", sTipoGasto, CDbl(MatCalend(0, 2)), nMontoPrestamoRep, , , , , , , , , , , , , , , , , , , , , MatCalendSegDes) 'WIOR 20140826 AGREGO MatCalendSegDes
        Set oGastos = Nothing
    Else
        '**DAOR 20070411, Generar matriz de gastos**********************
        ReDim MatDesemb(1, 2)
        MatDesemb(0, 0) = Format(pdHoy, "dd/mm/yyyy")
        MatDesemb(0, 1) = Format(nMontoPrestamoRep, "#0.00")
        Set oGastos = New NCOMGasto
        MatGastos = oGastos.GeneraCalendarioGastos(MatCalend, MatDesemb, nNumGastos, pdHoy, _
                                                   psCtaCod, 1, "RP", sTipoGasto, _
                                                   CDbl(MatCalend(0, 2)), nMontoPrestamoRep, , , , , , , , , pnTipoPeriodo, _
                                                   pnPlazo, , , , , , , , , , , MatCalendSegDes, , pbPrepagoCred)
                                                   'WIOR 20140826 AGREGO MatCalendSegDes
                                                   'LUCV20180424, Agregó pbPrepagoCred
                                                
        Set oGastos = Nothing
        '*******************************************************************
    End If
    
    'JUEZ 20150708 No cobrar gastos siguiente calendario ************
    If pbPrepagoCred Then
        If UBound(MatCalend) = 1 Then
            For i = 0 To nNumGastos - 1
                'If CLng(Trim(Right(MatGastos(i, 2), 20))) = 1217 Or CLng(Trim(Right(MatGastos(i, 2), 20))) = 1231 Then
                MatGastos(i, 3) = 0
            Next i
        Else
            Set oCalend = New COMDCredito.DCOMCalendario
            If oCalend.VerificaCuotaGastoPagadoCalendAnt(psCtaCod, Year(MatCalend(0, 0)), Month(MatCalend(0, 0))) Then
                For i = 0 To nNumGastos - 1
                    If CInt(Trim(MatGastos(i, 1))) = CInt(MatCalend(0, 1)) Then
                        'If CLng(Trim(Right(MatGastos(i, 2), 20))) = 1217 Or CLng(Trim(Right(MatGastos(i, 2), 20))) = 1231 Then
                        MatGastos(i, 3) = 0
                    End If
                Next i
            Else
                For i = 0 To nNumGastos - 1
                    If CInt(Trim(MatGastos(i, 1))) = CInt(MatCalend(0, 1)) Then
                        If CLng(Trim(Right(MatGastos(i, 2), 20))) = 1217 Then
                            nNumMesesPorDia = Round(DateDiff("d", pdHoy, MatCalend(0, 0)) / 30, 0)
                            nNumMesesPorMes = DateDiff("m", pdHoy, MatCalend(0, 0))
                                
                            MatGastos(i, 3) = CDbl(MatGastos(i, 3)) / IIf(nNumMesesPorDia >= nNumMesesPorMes, nNumMesesPorDia, nNumMesesPorMes)
                        End If
                    End If
                Next i
            End If
            Set oCalend = Nothing
        End If
    End If
    'END JUEZ *******************************************************

    '********************************************************
    'Se agrego esta condicion porque generaba un error cuando
    'se volvia a reprogramar sin cerrar el fomulario
    'By Gitu 2009-02-16
    '********************************************************
    If pnTipoReprog = -1 Then
        pnTipoReprog = 0
    End If
    'END Gitu
    
    'JUEZ 20151229 ******************************************
    Dim oDGeneral As COMDConstSistema.NCOMTipoCambio
    Set oDGeneral = New COMDConstSistema.NCOMTipoCambio
        lnTCVenta = oDGeneral.EmiteTipoCambio(pdHoy, TCVenta)
    Set oDGeneral = Nothing
    'END JUEZ ***********************************************
    'JUEZ 20130412 **************************************************
    If pbComisionReprog Then
        lnPrdConceptoComision = IIf(pnPersoneria = 1, gColocConceptoCodGastoComisionReprogNat, gColocConceptoCodGastoComisionReprogJur)
        Set R = oCredito.RecuperaProductoConcepto(lnPrdConceptoComision)
        'lnMontoComision = CDbl(R!nValor)
        lnMontoComision = CDbl(R!nValor) / IIf(Mid(psCtaCod, 9, 1) = gMonedaNacional, 1, lnTCVenta)
    End If
    'END JUEZ *******************************************************
    'JUEZ 20131022 **************************************************
    'If pbReprogRoyaAmarilla Then
        'Set R = oCredito.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogRoyaAmarilla) 'JOEP20200323 Covid-19 comento
        Set R = oCredito.ExisteReprogramacionxDesastreNat(psCtaCod, "100929") 'JOEP20200323 Covid-19 Add
        If R.RecordCount > 0 Then
            bReversionRoyaAmarilla = True
            lnMovNroReversionReprog = R!nMovNro
        End If
        Set R = Nothing
    'End If
    'END JUEZ *******************************************************
        'EJVG20140325 ***
        Set R = oCredito.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogDesastreNat)
        If R.RecordCount > 0 Then
            bReversionDesNat = True
            lnMovNroReversionReprog = R!nMovNro
        End If
        Set R = Nothing
        'END EJVG *******
    'PASI 20170327 **************************************************
        Set R = oCredito.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogZonaInundada)
        If R.RecordCount > 0 Then
            bReversionZonaInundada = True
            lnMovNroReversionReprog = R!nMovNro
        End If
        Set R = Nothing
    'PASI END********************************************************
    'PASI 20150205
        If pbPrepagoCred Then
            bReversionRoyaAmarilla = False
            bReversionDesNat = False
            bReversionZonaInundada = False 'PASI 20170410************
        End If
    'END PASI
    
    If pbRpgSinPrePago Then Set RReprog = oCredito.RecuperaColocacReprogramadoEstado(psCtaCod, gEstReprogSolicitado) 'JUEZ 20160216 joep20200326 covid19 revertir
    'If pbRpgSinPrePago Then Set RReprog = oCredito.RecuperaColocacReprogramadoCovid19(psCtaCod, 207) 'JUEZ 20160216 joep20200326 covid19 revertir
    
    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    
    'RIRO 20200829 ******* Liquidación ***
    'Insertando datos de Liquidación.
    Dim nLiquidacion As Long
    nLiquidacion = -1
    oBase.RegistraLiquidacion psCtaCod, psCodUser, pnMovNro, nLiquidacion, MatCalend(UBound(MatCalend) - 1, 1), pnTipoLiquidacion
    If nLiquidacion > 0 Then
        For i = 0 To UBound(MatCalend) - 1
            'pnTipoReprog => 0 : Si es reprogramación
            If pnTipoReprog = 0 Then
                If MatCalend(i, 17) = 0 Then 'Si la cuota está pendiente
                    If IsNumeric(MatCalend(i, 18)) Then
                        If CDbl(MatCalend(i, 18)) > 0 Then
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 18)), 1 ' Int. Comp. Calculado
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 4)), 2 ' Int. Comp. Asignado
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 9999, CInt(MatCalend(i, 19)), 3 ' Días Calculados
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 20)), 4 ' Int. Comp. Diferencia Capitalizado
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 21)), 5 ' Int. Grac. Generado
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 22)), 6 ' Int. Comp. Capitalizado
                            oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 23)), 7 ' Int. Comp. Asignado
                        End If
                    End If
                End If
            End If
            'pnTipoReprog => 2 : Si es pago anticipado
            If pnTipoReprog = 2 Then
                If IsNumeric(MatCalend(i, 17)) Then
                    If CDbl(MatCalend(i, 17)) > 0 Then
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 17)), 1
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 4)), 2
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 9999, CInt(MatCalend(i, 18)), 3
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 19)), 4 ' Int. Comp. Diferencia Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 20)), 5 ' Int. Comp. Diferencia Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 21)), 6 ' Int. Comp. Diferencia Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalend(i, 1)), 1100, CDbl(MatCalend(i, 22)), 7 ' Int. Comp. Diferencia Capitalizado
                    End If
                End If
            End If
        Next i
    End If
    'END RIRO ****************************
    
    If pnTipoReprog = 1 Then
        For i = 0 To UBound(MatCalend) - 1
            If Val(MatCalend(i, 2)) + Val(MatCalend(i, 4)) + Val(MatCalend(i, 8)) > 0 Then
            'MADM 20091217 sug ALPA***************************************
            If i = 0 Then
               Call oBase.dInsertCalendarioReprogradoLote(nNroCalen, psCtaCod, False)
        
               Call oBase.dInsertCalendarioDetReprogradoLote(nNroCalen, psCtaCod, False)
               
            End If
        '******************************************************************
               'Cambio por LMMD para se grabe la fecha de pago de las cuotas pagadas en el nuevo calendario reprogramado
               If CInt(MatCalend(i, 17)) = 1 Then
                  Call oBase.dInsertColocCalendarioReprog(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), CDate(MatCalend(i, 0)), CDate(MatCalend(i, 20)), CInt(MatCalend(i, 17)), "Calendario Reprogramado", gColocCalendConceptoProcReprogramado, False)
               Else
                Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), CDate(MatCalend(i, 0)), CInt(MatCalend(i, 17)), "Calendario Reprogramado", gColocCalendConceptoProcReprogramado, False)
               End If

                If CDbl(MatCalend(i, 2)) > 0 Then
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodCapital, CDbl(MatCalend(i, 2)), CDbl(MatCalend(i, 3)), "", False)
                End If

                If CDbl(MatCalend(i, 4)) > 0 Then
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresCompensatorio, CDbl(MatCalend(i, 4)), CDbl(MatCalend(i, 5)), "", False)
                End If

                'Tiene que insertarle si o si para cobrar mora
'                If pnLogRepreLote = 0 Then
'                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresMoratorio, CDbl(MatCalend(i, 6)), CDbl(MatCalend(i, 7)), "", False)
'                Else
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresMoratorio, CDbl(MatCalend(i, 21)), CDbl(MatCalend(i, 7)), "", False)
'                End If

                'Intereses Reprogramados
                'Graba Como Nuevo Concepto
                'If CDbl(MatCalend(I, 8)) > 0 Then
                '    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(I, 1)), gColocConceptoCodInteresReprogramado, CDbl(MatCalend(I, 8)), CDbl(MatCalend(I, 9)), "", False)
                'End If
                'Graba Acumulandolo en Int Comp Vencido por Presentar Problemas al Calcular Deuda a la Fecha
                If CDbl(MatCalend(i, 8)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresCompensatorio, CDbl(MatCalend(i, 8)), , "", False, , True)
                End If

                If CDbl(MatCalend(i, 10)) > 0 Then
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresGracia, CDbl(MatCalend(i, 10)), CDbl(MatCalend(i, 11)), "", False)
                End If
                If CDbl(MatCalend(i, 12)) > 0 Then
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresSuspenso, CDbl(MatCalend(i, 12)), CDbl(MatCalend(i, 13)), "", False)
                End If

                If pnRFA = True Then 'COMISION COFIDE RFA
                    If CDbl(MatCalend(i, 14)) > 0 Then
                        Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), 124352, CDbl(MatCalend(i, 14)), CDbl(MatCalend(i, 15)), "", False)
                    End If
                Else
                    If CDbl(MatCalend(i, 14)) > 0 Then
                        Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodGastoVarios, CDbl(MatCalend(i, 14)), CDbl(MatCalend(i, 15)), "", False)
                    End If
                End If
                'If CDbl(MatCalend(I, 18)) > 0 Then
                'Tiene que insertarle si o si para cobrar Interes Comp vencido
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), gColocConceptoCodInteresCompVencido, CDbl(MatCalend(i, 18)), CDbl(MatCalend(i, 19)), "", False)
                'End If
            End If
        Next i
    ElseIf pnTipoReprog = 0 Then
    
        'Update ColocacCred Set nnroproxcuota=1 where cctacod = '106033011002873753'
        'By Capi 14042008 para que
        
        'Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , 1)
        'Add By gitu 05-02-2009
        'Set oConecta = New COMConecta.DCOMConecta
        'oConecta.AbreConexion
        
        sSql = "Insert ColocCalendario " _
             & "Select cCtaCod, " & nNroCalen & ",nColocCalendApl,nCuota,dVenc,dPago,nColocCalendEstado,cDescripcion,cColocCalenFlag,nCalendProc,cColocMiVivEval " _
             & "from ColocCalendario Where cCtaCod = '" & psCtaCod & "' And nNroCalen = " & nNroCalen - 1
        'sSQL = "exec stp_Ins_InsertColocCalendario " & psCtaCod & "," & nNroCalen
        'oConecta.Ejecutar sSql
        'oBase.dInsertColocCalendarioxMigracion psCtaCod, nNroCalen, nNroCalen - 1 'EJVG20140325 'Comento joep20200526 mantener cuota covid
        oBase.dInsertColocCalendarioxMigracion psCtaCod, nNroCalen, nNroCalen - 1, False, pnTipoReprogCovid, UBound(MatCalend) 'EJVG20140325'Add joep20200526 mantener cuota covid
        
        sSql = "Insert ColocCalenddet " _
             & "Select cCtaCod, " & nNroCalen & ", nColocCalendApl, nCuota, nPrdConceptoCod, nMonto, nMontoPagado, cFlag " _
             & "from ColocCalenddet Where cCtaCod = '" & psCtaCod & "' And nNroCalen = " & nNroCalen - 1
        'sSQL = "exec stp_Ins_InsertColocCalendDet " & psCtaCod & "," & nNroCalen
        'oConecta.Ejecutar sSql
        'oBase.dInsertColocCalendDetxMigracion psCtaCod, nNroCalen, nNroCalen - 1 'EJVG20140325 'Comento joep20200526 mantener cuota covid
        oBase.dInsertColocCalendDetxMigracion psCtaCod, nNroCalen, nNroCalen - 1, False, pnTipoReprogCovid, UBound(MatCalend) 'EJVG20140325'Add joep20200526 mantener cuota covid
        
        'WIOR 20140826 **********************************
        'Call oBase.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalen)'Comento JOEP20201012 - Facilidades Crediticias.
        'Call oBase.dMigrarColocCalendDetSegDes(psCtaCod, nNroCalen - 1)'Comento JOEP20201012 - Facilidades Crediticias.
        'WIOR FIN ***************************************
        
        'oConecta.CierraConexion
        'Set oConecta = Nothing
        
        'Call oBase.dInsertColocCalendarioTot(psCtaCod, nNroCalen - 1)
        'Call oBase.dInsertColocCalendDetTot(psCtaCod, nNroCalen - 1)
        
        If pnNewTCEA > 0 Then
            Call oBase.ActualizarTCEA(psCtaCod, pnNewTCEA) 'JOEP se tiene que actualizar TCEA 20170227
        End If
        
         For i = 0 To UBound(MatCalend) - 1
            'If Val(MatCalend(i, 2)) + Val(MatCalend(i, 4)) + Val(MatCalend(i, 8)) > 0 Then
            If Val(MatCalend(i, 2)) + Val(MatCalend(i, 4)) > 0 Then
                'If MatCalend(i, 8) = 0 Then 'LUCV20180601. Comentó Según ERS022-2018
                If MatCalend(i, 17) = 0 Then 'LUCV20180601. Agregó.
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, MatCalend(i, 1), gColocCalendAplCuota, MatCalend(i, 0), , "Calendario Reprogramado de Pagos", nNroCalen - 1, False)
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodCapital, CDbl(MatCalend(i, 3))) 'JOEP Agrego Capital 27022017
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresCompensatorio, CDbl(MatCalend(i, 9)))
                    
                    'JOEP 20170227 Verifica si existe el concepto Interes Gracia
                    Set rsValorExiIntGra = oCredito.VerificaExisteInteresGracia(psCtaCod, nNroCalen - 1, MatCalend(i, 1), gColocConceptoCodInteresGracia)
                        
                    If rsValorExiIntGra!bExisteIntGra = 0 Then
                        Call oBase.dInsertaConceptosIntGracia(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresGracia, CDbl(MatCalend(i, 5)), "0.00", "")        'JOEP Agrego Interes Gracia 27022017
                    Else
                        Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresGracia, CDbl(MatCalend(i, 5))) 'JOEP Agrego Interes Gracia 27022017
                    End If
                    'FIN JOEP 20170227
                        
                    'LUCV20180601. Según ERS022-2018.
                    Set rsValorExisteSegIncGracia = oCredito.VerificaExisteInteresGracia(psCtaCod, nNroCalen - 1, MatCalend(i, 1), gColocConceptoCodGastoPolizaIncendioHipotecaGracia)

                    If rsValorExisteSegIncGracia!bExisteIntGra = 0 Then
                        Call oBase.dInsertaConceptosIntGracia(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodGastoPolizaIncendioHipotecaGracia, CDbl(MatCalend(i, 16)), "0.00", "") 'POLIZA CONTRA INCENDIO - HIPOTECARIOS (PERIODO GRACIA)
                    Else
                        Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodGastoPolizaIncendioHipotecaGracia, CDbl(MatCalend(i, 16))) 'POLIZA CONTRA INCENDIO - HIPOTECARIOS (PERIODO GRACIA)
                    End If
                    
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresMoratorio, 0)
                    'Fin LUCV20180601
                        
                    'WIOR 20160216 ***
                    If bPriCuotaPend Then
                        Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodGastoPolizaIncendioHipoteca, CDbl(MatCalend(i, 15)))
                        'Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodGastoSeguro7, CDbl(MatCalend(i, 11)))'Comentado por JOEP 27022017
                        'bPriCuotaPend = False
                    End If
                    'WIOR FIN ********
                     'Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodGastoSeguro7, CDbl(MatCalend(i, 11))) 'JOEP se tiene que actualizar los montos 20170227. LUCV20180601. Comentó
                     Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodGastoSeguro7, CDbl(MatCalend(i, 8))) 'JOEP se tiene que actualizar los montos 20170227. LUCV20180601
                End If
            End If
        Next i
    Else
        'Se descomento para los prepagos gitu 11-02-2009
        Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , 1)
        'End Add Gitu
        For i = 0 To UBound(MatCalend) - 1
            If Val(MatCalend(i, 2)) + Val(MatCalend(i, 4)) + Val(MatCalend(i, 8)) > 0 Then
                ' Modify by GITU 22-08-08

                If MatCalend(i, 8) = "" Then
                    MatCalend(i, 8) = 0
                End If

                'Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen, gColocCalendAplCuota, i + 1, CDate(MatCalend(i, 0)), gColocCalendEstadoPendiente, "Calendario Reprogramado de Pagos", gColocCalendConceptoProcReprogramado, False)
                Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), CDate(MatCalend(i, 0)), gColocCalendEstadoPendiente, "Calendario Reprogramado de Pagos", gColocCalendConceptoProcReprogramado, False)

                    'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalend(i, 3)), 0, "", False)
                    'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalend(i, 4)), 0, "", False)
                    'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)

                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodCapital, CDbl(MatCalend(i, 3)), 0, "", False)
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresCompensatorio, CDbl(MatCalend(i, 4)), 0, "", False)
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresMoratorio, 0, 0, "", False)
                    If CDbl(MatCalend(i, 5)) > 0 Then
                        'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalend(i, 5)), 0, "", False)
                        Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresGracia, CDbl(MatCalend(i, 5)), 0, "", False)
                    End If
                    'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompVencido, 0, 0, "", False)
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, MatCalend(i, 1), gColocConceptoCodInteresCompVencido, 0, 0, "", False)
                    If pnRFA = True Then 'COMISION COFIDE RFA
                        If CDbl(MatCalend(i, 14)) > 0 Then
                            'Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), 124352, CDbl(MatCalend(i, 14)), CDbl(MatCalend(i, 15)), "", False)
                            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalend(i, 1)), 124352, CDbl(MatCalend(i, 14)), CDbl(MatCalend(i, 15)), "", False)
                        End If
                    End If
            End If
            'End GITU
        Next i
        '**DAOR 20070411, Insertar Gastos************************************
        'Comentado por GITU 05-02-2009 porque cmabio el proceso de reprogramacion
        
        For i = 0 To nNumGastos - 1
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
        Next i
        '********************************************************************
        'JOEP20201119 comento joep se cambio de posicion para que se registre
        'WIOR 20140826 ********************************
        'Call oBase.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalen)
'        If IsArray(MatCalendSegDes) Then
'            If Trim(MatCalendSegDes(0, 0)) <> "" Then
'                For i = 0 To UBound(MatCalendSegDes, 2)
'                    Call oBase.dInsertColocCalendDetSegDes(psCtaCod, nNroCalen, CInt(MatCalendSegDes(0, i)), CInt(MatCalendSegDes(1, i)), CDbl(MatCalendSegDes(2, i)), CDbl(MatCalendSegDes(3, i)))
'                Next i
'            End If
'        End If
        'WIOR FIN *************************************
        'JOEP20201119 comento joep se cambio de posicion para que se registre
        
        If pnMiViv Then
            For i = 0 To nNumGastos - 1
                If CInt(Trim(Right(MatGastos(i, 0), 10))) = gColocCalendAplCuota Then
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
                End If
            Next i
            For i = 0 To UBound(MatCalend_2) - 1
                If i >= 0 And i <= 5 Then
                    Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, CDate(MatCalend_2(i, 0)), gColocCalendEstadoPendiente, "Calendario Reporgramado de Pagos", gColocCalendConceptoProcReprogramado, False)
                Else
                    Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, CDate(MatCalend_2(i, 0)), gColocCalendEstadoPendiente, "Calendario Reporgramado de Pagos", gColocCalendConceptoProcReprogramado, False)
                End If
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalend_2(i, 3)), 0, "", False)
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalend_2(i, 4)), 0, "", False)
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompVencido, 0, 0, "", False)
                    If CDbl(MatCalend_2(i, 5)) > 0 Then
                        Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalend_2(i, 5)), 0, "", False)
                    End If
            Next i
        End If
    End If
    
    ''*** PEAC 20090513 - AL REPROGRAMAR NO DEBE TOCAR LA FECHA DE VIGENCIA EN COLOCACIONES
'    If pnTipoReprog = 1 Then
'        Call oBase.dUpdateColocaciones(psCtaCod, , , , , , pdHoy)
'    ElseIf pnTipoReprog = 0 Then
'        Call oBase.dUpdateColocaciones(psCtaCod, , , , , , pdHoy)
'    End If
    ''*******************
    
    If pnTipoReprog = 2 Then
        
        Set R = oCredito.RecuperaProducto(psCtaCod)
        nMontoPrestamoRep = R!nSaldo
        R.Close

        Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen, gColocCalendAplDesembolso, 1, pdHoy, 1, "Reprogramacion", gColocCalendConceptoProcReprogramado, False)
        Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplDesembolso, 1, 1000, nMontoPrestamoRep, 0, 0, False)
        
        'ARCV 21-07-2006
        'Call oBase.dUpdateColocaciones(psCtaCod, , , , , ,  pdHoy)
        
        '**Modificado por DAOR 20080319 ***********************************************************
        'Set R = oBase.CargaRecordSet("SELECT * FROM ColocacEstado WHERE cCtaCod='" & psCtaCod & "' AND nPrdEstado=" & gColocEstVigNorm)
        Set R = oBase.CargaRecordSet("select top 1 * from ColocacEstado where cCtaCod='" & psCtaCod & "' and nPrdEstado in (" & gColocEstVigNorm & "," & gColocEstRefNorm & ") order by nPrdEstado, dPrdEstado")
        '******************************************************************************************
        
        Call oBase.dInsertColocacEstado(psCtaCod, pdHoy, R!nPrdEstado, UBound(MatCalend), nMontoPrestamoRep, "Renovacion de Credito", R!nColocCalendCod, R!nPeriodoFechaFija, R!nPeriodoGracia, R!nPlazo, R!nTipoGracia, R!nTipoDesembolso, IIf(IsNull(R!nProxMes), 0, R!nProxMes), IIf(IsNull(R!nCalendDinamico), 0, R!nCalendDinamico))
        '--------------------------
    'Else
        'Actualizando la parte de desembolsos
        'Comentado por gitu 05-02-2009
        'Call oBase.dInsertaDesembolsosReprogramado(psCtaCod, nNroCalen)
        'end gitu
    End If
    sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    
    'ALPA 05062008 se agrego parametro sMovNro para que grabe la fecha y usuario que hizo la reprogramacion
    Dim lcCodOpe As String
    If pbRpgSinPrePago Then
    'Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , nNroCalen, , , , False, , , nNroCalen + 1)
        Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , nNroCalen, , , , False, , , nNroCalen + 1, , , , , , , , , , , sMovNro)
        lcCodOpe = "100902"
    Else
        'madm 20090112 -------------------------
        If pnTipoReprog = 1 Then
        Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , nNroCalen, , , , False, , , nNroCalen + 1, , , , , , , , , , , sMovNro)
        Else
        Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , nNroCalen, , , , False, , , nNroCalen + 1)
        End If
        'end madm --------------------------------
        lcCodOpe = "100913"
    End If
    
    'insertando movimiento
    'By Capi 14042008 para diferenciar por tipo de operacion cuando son prepagos
    'Call oBase.dInsertMov(sMovNro, "100902", "", gMovEstContabMovContable, gMovFlagExtornado, False)
    Call oBase.dInsertMov(sMovNro, lcCodOpe, "", gMovEstContabMovContable, gMovFlagExtornado, False)
    nMovNro = oBase.dGetnMovNro(sMovNro)
    pnMovNro = nMovNro
    
    'RIRO 20200829 ******* Liquidación ***
    'Insertando datos de Liquidación.
    If nLiquidacion > 0 Then
        oBase.RegistraLiquidacion psCtaCod, psCodUser, pnMovNro, nLiquidacion, MatCalend(UBound(MatCalend) - 1, 1), 1
    End If
    'END RIRO ****************************
    
    'Call oBase.dInsertMovCol(nmovnro, "100902", psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto)
    Call oBase.dInsertMovCol(nMovNro, lcCodOpe, psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto)
    '
    'ALPA 20110201********
    If pnPeriodoFechaFija > 0 Then
        Call oCredito.ActualizarColocacEstado(psCtaCod, gColocEstAprob, pnPeriodoFechaFija)
    End If
    '*********************
    'JUEZ 20131022 *********************************************************
    If bReversionRoyaAmarilla Then
        Sleep 1000
        lsMovNroReversionReprog = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
        'Call oBase.dInsertMov(lsMovNroReversionReprog, gReversionReprogRoyaAmarilla, "Reversión Reprogramación x Emergencia Cafe (Roya Amarilla) del Crédito: " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente, False)'JOEP20200323 Covid-19 Comento
        Call oBase.dInsertMov(lsMovNroReversionReprog, "107337", "Reversión Reprogramación por Covid-19: " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente, False) 'JOEP20200323 Covid-19 add
        lnMovNroReversionReprogNew = oBase.dGetnMovNro(lsMovNroReversionReprog)
        'Call oBase.dInsertMovCol(lnMovNroReversionReprogNew, gReversionReprogRoyaAmarilla, psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto)'JOEP20200323 Covid-19 Comento
        Call oBase.dInsertMovCol(lnMovNroReversionReprogNew, "107337", psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto) 'JOEP20200323 Covid-19 add
        'Call oBase.dInsertMovColDet(lnMovNroReversionReprogNew, gReversionReprogRoyaAmarilla, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalReprogRoyaAmarilla, 1, nMontoPrestamoRep, False)'JOEP20200323 Covid-19 Comento
        Call oBase.dInsertMovColDet(lnMovNroReversionReprogNew, "107337", psCtaCod, CLng(nNroCalen), "1080", 1, nMontoPrestamoRep, False) 'JOEP20200323 Covid-19 add
        
        Call oBase.dUpdateCredReprogNatEspeciales(lnMovNroReversionReprog, 1)
        Call oBase.dInsertMovRef(lnMovNroReversionReprogNew, lnMovNroReversionReprog)
    End If
    'END JUEZ **************************************************************
    'EJVG20140325 ***
    If bReversionDesNat Then
        Sleep 1000
        lsMovNroReversionReprog = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
        Call oBase.dInsertMov(lsMovNroReversionReprog, gReversionReprogDesNat, "Reversión Reprogramación por Desastre Natural O Conflicto Social del Crédito: " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente, False)
        lnMovNroReversionReprogNew = oBase.dGetnMovNro(lsMovNroReversionReprog)
        Call oBase.dInsertMovCol(lnMovNroReversionReprogNew, gReversionReprogDesNat, psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto)
        Call oBase.dInsertMovColDet(lnMovNroReversionReprogNew, gReversionReprogDesNat, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalReprogxDesNat, 1, nMontoPrestamoRep, False)
        Call oBase.dUpdateCredReprogNatEspeciales(lnMovNroReversionReprog, 1)
        Call oBase.dInsertMovRef(lnMovNroReversionReprogNew, lnMovNroReversionReprog)
    End If
    'END EJVG *******
    'PASI 20170327 *********************************************************
    If bReversionZonaInundada Then
        Sleep 1000
        lsMovNroReversionReprog = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
        Call oBase.dInsertMov(lsMovNroReversionReprog, gReversionReprogZonaInundada, "Reversión Reprogramación por Zona Afectada por Inundación del Crédito: " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente, False)
        lnMovNroReversionReprogNew = oBase.dGetnMovNro(lsMovNroReversionReprog)
        Call oBase.dInsertMovCol(lnMovNroReversionReprogNew, gReversionReprogZonaInundada, psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto)
        Call oBase.dInsertMovColDet(lnMovNroReversionReprogNew, gReversionReprogZonaInundada, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalReprogZonaInundada, 1, nMontoPrestamoRep, False)
        Call oBase.dUpdateCredReprogNatEspeciales(lnMovNroReversionReprog, 1)
        Call oBase.dInsertMovRef(lnMovNroReversionReprogNew, lnMovNroReversionReprog)
    End If
    'PASI END **************************************************************
    'EJVG20121210 ***
    'JUEZ 20131022 *********************************************************
    'lsOpeCodDesNat = "100920"
    'If pbReprogxDesastreNat = True Then
    If pbReprogxDesastreNat Or pbReprogRoyaAmarilla Or pbReprogZonaInundada Then 'PASI20170405 agrego pbReprogZonaInundada
        If pbReprogxDesastreNat Then
            lsOpeCodDesNat = gCredReprogDesastreNat
            lsGlosaReprogNatEspeciales = "Reprogramación x Desastre Natural o conflicto social del Crédito: " & psCtaCod
            lnConceptoReprogNatEspeciales = gColocConceptoCodCapitalReprogxDesNat
        ElseIf pbReprogRoyaAmarilla Then
            'lsOpeCodDesNat = gCredReprogRoyaAmarilla 'JOEP20200324 Covid-19 Comento
            lsOpeCodDesNat = "100929" 'JOEP20200324 Covid-19 Add
            'lsGlosaReprogNatEspeciales = "Reprogramación x Emergencia Cafe (Roya Amarilla) del Crédito: " & psCtaCod 'JOEP20200324 Covid-19 Comento
            lsGlosaReprogNatEspeciales = "Reprogramación x Emergencia Sanitaria Covid-19: " & psCtaCod 'JOEP20200324 Covid-19 Add
            'lnConceptoReprogNatEspeciales = gColocConceptoCodCapitalReprogRoyaAmarilla 'JOEP20200324 Covid-19 Comento
            lnConceptoReprogNatEspeciales = "1080" 'JOEP20200324 Covid-19 Add
        ElseIf pbReprogZonaInundada Then 'PASI 20170327
            lsOpeCodDesNat = gCredReprogZonaInundada
            lsGlosaReprogNatEspeciales = "Reprogramación por Zona Afectada por Inundación del Crédito: " & psCtaCod
            lnConceptoReprogNatEspeciales = gColocConceptoCodCapitalReprogZonaInundada
        End If
    'END JUEZ **************************************************************
        Sleep 1000
        lsMovNroDesNat = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
        Call oBase.dInsertMov(lsMovNroDesNat, lsOpeCodDesNat, lsGlosaReprogNatEspeciales, gMovEstContabMovContable, gMovFlagVigente, False)
        lnMovNroDesNat = oBase.dGetnMovNro(lsMovNroDesNat)
        Call oBase.dInsertMovCol(lnMovNroDesNat, lsOpeCodDesNat, psCtaCod, nNroCalen, nMontoPrestamoRep, nDiasAtraso, "GMIC", 0, nMontoPrestamoRep, nEstadoProducto)
        Call oBase.dInsertMovColDet(lnMovNroDesNat, lsOpeCodDesNat, psCtaCod, CLng(nNroCalen), lnConceptoReprogNatEspeciales, 1, nMontoPrestamoRep, False)
        
        Call oBase.dInsertaCredReprogNatEspeciales(lnMovNroDesNat, psCtaCod)
    End If
    'END EJVG *******
    'JUEZ 20130412 *********************************************************
    If pbComisionReprog Then
        If pnTipoComision = 1 Then
            Call oBase.dUpdateComision(psCtaCod, gComisionReprogCredito)
        ElseIf pnTipoComision = 2 Then
            'EJVG20140325 ***
            If Not oBase.dExisteConceptoColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, lnNroProxCuota, lnPrdConceptoComision) Then
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, lnNroProxCuota, lnPrdConceptoComision, lnMontoComision, 0, "")
            Else
                oBase.dUpdateColocCalendDet psCtaCod, nNroCalen, gColocCalendAplCuota, lnNroProxCuota, lnPrdConceptoComision, lnMontoComision, , , , , True
            End If
            'END EJVG *******
        End If
    End If
    'END JUEZ **************************************************************
    'Pagos anticipados. JOEP20201112
    If pnTipoReprog = 2 Then
        Call oBase.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalen)
        Call oBase.dMigrarColocCalendDetSegDes(psCtaCod, nNroCalen - 1, , pnTipoReprogCovid, UBound(MatCalend))
    End If
    'Pagos anticipados. JOEP20201112
    'JUEZ 20160316 *************************************
    If pbRpgSinPrePago Then
        Call oBase.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalen, , pnTipoReprogCovid, UBound(MatCalend)) 'Add JOEP20201012 - Facilidades Crediticias.
        Call oBase.dMigrarColocCalendDetSegDes(psCtaCod, nNroCalen - 1, , pnTipoReprogCovid, UBound(MatCalend)) 'Add JOEP20201012 - Facilidades Crediticias.
        
        RegistraReprogramacionEstado psCtaCod, pdHoy, gEstReprogReprogramado, nMontoPrestamoRep, sMovNro, nDiasAtraso, _
                                      RReprog!nCuotasReprog, RReprog!dFecCuotaVenc, RReprog!dFecNuevaCuotaVenc, psGlosa, , oBase, , , , pnTipoReprogCovid, pnMontoCuota 'JOEP20200926 tasa especial y reduccion de monto
                                      'RReprog!nCuotasReprog, RReprog!dFecCuotaVenc, RReprog!dFecNuevaCuotaVenc, psGlosa, , oBase'comento JOEP20200926 tasa especial y reduccion de monto
    End If
    'END JUEZ ******************************************
    oBase.dCommitTrans

    Set oBase = Nothing

    'APRI20171121 ERS028-2017
    Dim oSeg As COMDCaptaGenerales.DCOMSeguros
    Set oSeg = New COMDCaptaGenerales.DCOMSeguros
    oSeg.ActualizaPoliza (psCtaCod)
    Set oSeg = Nothing
    'END APRI

    Exit Function

ErrorReprogramarCredito:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Sub AjustaCalendarioACapital(ByRef pMatCalend As Variant, ByVal nMontoCapital As Double)
Dim i As Integer
Dim nSum As Double
Dim bFin As Integer

nSum = 0
bFin = 0
For i = 0 To i < UBound(pMatCalend) - 1
    'Sumo Capital
    nSum = nSum + CDbl(pMatCalend(i, 2))
    If bFin = 0 Then
        If nSum > nMontoCapital Then
            pMatCalend(i, 2) = Format(CDbl(pMatCalend(i, 2)) - (nSum - nMontoCapital), "#0.00")
            bFin = 1
        End If
    Else
        pMatCalend(i, 2) = "0.00"
    End If
Next i

End Sub

Private Function MatrizDistribuirGastos(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, ByRef pnMonto As Double, _
        Optional ByVal DistVert As Boolean = False)
Dim i As Integer

    For i = 0 To UBound(MatCalend) - 1
        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If

        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And (CDbl(MatCalend(i, 9)) - CDbl(MatCalendDistrib(i, 9))) > 0 Then
            If pnMonto > (CDbl(MatCalend(i, 9)) - CDbl(MatCalendDistrib(i, 9))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 9)) - CDbl(MatCalendDistrib(i, 9)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 9) = MatCalend(i, 9)
            Else
                MatCalendDistrib(i, 9) = Format(CDbl(MatCalendDistrib(i, 9)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i

End Function
'*********************************************************
'** Cubrir Verticalmente Todas las Moras de las Cuotas
'*********************************************************
Private Function MatrizDistribuirMora(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
ByRef pnMonto As Double, Optional ByVal DistVert As Boolean = False, Optional ByVal pbCobrarMora As Boolean = True)
'NAGL 20190719 Según ERS036-2018 Agregó pbCobrarMora
Dim i As Integer

    For i = 0 To UBound(MatCalend) - 1

        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If

        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 6)) - CDbl(MatCalendDistrib(i, 6))) > 0 Then
            If pnMonto > (CDbl(MatCalend(i, 6)) - CDbl(MatCalendDistrib(i, 6))) Then
                If pbCobrarMora = True Then
                    pnMonto = pnMonto - (CDbl(MatCalend(i, 6)) - CDbl(MatCalendDistrib(i, 6)))
                    pnMonto = CDbl(Format(pnMonto, "#0.00"))
                    MatCalendDistrib(i, 6) = MatCalend(i, 6)
                Else
                    MatCalendDistrib(i, 6) = MatCalend(i, 6)
                End If 'Condicional Agregado by NAGL 20190719 Según ERS036-2018
            Else
                If pbCobrarMora = True Then
                    MatCalendDistrib(i, 6) = pnMonto 'NAGL 20191231 Cambió de MatCalendDistrib(i, 6)+ pnMonto a pnMonto
                    pnMonto = 0
                Else
                    MatCalendDistrib(i, 6) = Format(CDbl(MatCalend(i, 6)), "#0.00") 'NAGL 20191231 Cambió de MatCalendDistrib(i, 6)+ pnMonto a MatCalend(i, 6)
                End If
                'pnMonto = 0 'Comentado by NAGL 2091230 Según Correo
            End If
        End If
    Next i
End Function

Private Function MatrizDistribuirInteresICancelacion(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
    ByRef pnMonto As Double, Optional ByVal DistVert As Boolean = False, Optional ByRef pnMontoGra As Double)

'MAVM 20100119
Dim nMontoIntComp As Double
Dim nMontoIntCompAcum As Double
Dim nSumMontoIntComp As Double
Dim nSumMontoIntGra As Double

'JOEP20211019 Mejora en pago anticipado
If (pnMonto - pnMontoGra) < 0 Then
    nMontoIntComp = pnMonto
    nMontoIntCompAcum = pnMonto
Else
    nMontoIntComp = pnMonto - pnMontoGra
    nMontoIntCompAcum = pnMonto - pnMontoGra
End If
'JOEP20211019 Mejora en pago anticipado

'Comento JOEP20211019 Mejora en pago anticipado
'nMontoIntComp = pnMonto - pnMontoGra
'nMontoIntCompAcum = pnMonto - pnMontoGra
'Comento JOEP20211019 Mejora en pago anticipado
'******

Dim i As Integer
Dim bSiCubrio As Boolean
    bSiCubrio = False
    For i = 0 To UBound(MatCalend) - 1
        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If

        'Cubre Interes en Suspenso
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8))) > 0 Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 8) = MatCalend(i, 8)
                
                '** Juez 20120730 ***
                nMontoIntComp = CDbl(Format(nMontoIntComp - MatCalendDistrib(i, 8), "#0.00"))
                nMontoIntCompAcum = CDbl(Format(nMontoIntCompAcum - MatCalendDistrib(i, 8), "#0.00"))
                '** End Juez ********
            Else
                MatCalendDistrib(i, 8) = Format(CDbl(MatCalendDistrib(i, 8)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Cubre Intereses Reprogramados
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7))) > 0 Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 7) = MatCalend(i, 7)
            Else
                MatCalendDistrib(i, 7) = Format(CDbl(MatCalendDistrib(i, 7)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Intereses de Gracia
        'If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMontoGra > 0 _
            And (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) > 0 Then
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) > 0 And pnMontoGra <> 0 Then
            'Comentado por MAVM 28012010
            'And (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) > 0 Then
            bSiCubrio = True
            'Mody By gitu 07-05-2009
'            If pnMontoGra > (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) Then
'                pnMontoGra = pnMontoGra - (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5)))
'                pnMontoGra = CDbl(Format(pnMontoGra, "#0.00"))
'                MatCalendDistrib(i, 5) = MatCalend(i, 5)
'            Else
'                If pnMontoGra > pnMonto Then
'                    pnMontoGra = pnMonto
'                    MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMontoGra, "#0.00")
'                    pnMontoGra = 0
'                    pnMonto = 0
'                Else
'                    MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMontoGra, "#0.00")
'                    pnMontoGra = 0
'                End If
'
'            End If
            If pnMonto > (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) And pnMontoGra >= (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                
                MatCalendDistrib(i, 5) = MatCalend(i, 5)
                'MAVM 20100119 ******
                nSumMontoIntGra = nSumMontoIntGra + CDbl(Format(MatCalend(i, 5), "#0.00"))
                '******
                'JIPR20201124
                If nSumMontoIntGra > pnMontoGra Then
                MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + (pnMontoGra - nSumMontoIntGra), "#0.00")
                End If
                'JIPR20201124
                
            Else
            
                'JOEP20211019 Mejora en pago anticipado
                If pnMonto - (CDbl(pnMontoGra) - CDbl(nSumMontoIntGra)) < 0 Then
                    pnMonto = CDbl(Format(pnMonto, "#0.00"))
                    MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMonto, "#0.00")
                    nSumMontoIntGra = nSumMontoIntGra + Format(CDbl(MatCalendDistrib(i, 5)), "#0.00")
                    pnMonto = 0
                    pnMontoGra = 0
                    nSumMontoIntGra = 0
                Else
                    If pnMontoGra > nSumMontoIntGra Then
                        pnMonto = pnMonto - (CDbl(pnMontoGra) - CDbl(nSumMontoIntGra))
                        pnMonto = CDbl(Format(pnMonto, "#0.00"))
                        MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + (pnMontoGra - nSumMontoIntGra), "#0.00")
                        nSumMontoIntGra = nSumMontoIntGra + Format(CDbl(MatCalendDistrib(i, 5)), "#0.00")
                    End If
                End If
            'JOEP20211019 Mejora en pago anticipado
            
            'MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMonto, "#0.00")
                'pnMonto = 0
            'Comento JOEP20211019 Mejora en pago anticipado
'                If pnMontoGra > nSumMontoIntGra Then
'                    pnMonto = pnMonto - (CDbl(pnMontoGra) - CDbl(nSumMontoIntGra))
'                    pnMonto = CDbl(Format(pnMonto, "#0.00"))
'                    MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + (pnMontoGra - nSumMontoIntGra), "#0.00")
'                    nSumMontoIntGra = nSumMontoIntGra + Format(CDbl(MatCalendDistrib(i, 5)), "#0.00")
'                End If
            'Comento JOEP20211019 Mejora en pago anticipado
            End If
        End If
        'Intereses Compensatorio Vencido
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) > 0 Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 11) = MatCalend(i, 11)
                
                'RIRO 20210609 Add ICV
                nMontoIntComp = CDbl(Format(nMontoIntComp - MatCalendDistrib(i, 11), "#0.00"))
                nMontoIntCompAcum = CDbl(Format(nMontoIntCompAcum - MatCalendDistrib(i, 11), "#0.00"))
                'RIRO 20210609 Add ICV
            Else
                MatCalendDistrib(i, 11) = Format(CDbl(MatCalendDistrib(i, 11)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Intereses Compensatorios
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) > 0 Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) And nMontoIntComp > (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) And Round(nMontoIntComp, 2) > Round(nSumMontoIntComp, 2) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                If nMontoIntCompAcum > MatCalend(i, 4) Then '19022010 GITU
                    MatCalendDistrib(i, 4) = MatCalend(i, 4)
                    nMontoIntCompAcum = nMontoIntCompAcum - MatCalend(i, 4)
                Else
                    MatCalendDistrib(i, 4) = nMontoIntCompAcum
                End If
                    'MatCalendDistrib(i, 4) = IIf(nSumMontoIntComp = 0, MatCalend(i, 4), nMontoIntComp - nSumMontoIntComp)
                    
                'MAVM 20100119 ******
                nSumMontoIntComp = nSumMontoIntComp + CDbl(Format(MatCalend(i, 4), "#0.00"))
                '******
            Else
                'MAVM 20100119 ******
                If Round(nMontoIntComp, 2) > Round(nSumMontoIntComp, 2) Then
                    pnMonto = pnMonto - (CDbl(nMontoIntComp) - CDbl(nSumMontoIntComp))
                    pnMonto = CDbl(Format(pnMonto, "#0.00"))
                    MatCalendDistrib(i, 4) = Format(CDbl(MatCalendDistrib(i, 4)) + (nMontoIntComp - nSumMontoIntComp), "#0.00")
                    nSumMontoIntComp = nSumMontoIntComp + Format(CDbl(MatCalendDistrib(i, 4)), "#0.00")
                End If
                'Comentado por MAVM 20100119
                'MatCalendDistrib(i, 4) = Format(CDbl(MatCalendDistrib(i, 4)) + pnMonto, "#0.00")
                'pnMonto = 0
            End If
        End If
        If bSiCubrio Then
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i
End Function

Private Function MatrizDistribuirInteresI(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
    ByRef pnMonto As Double, Optional ByVal DistVert As Boolean = False, Optional ByRef pnMontoGra As Double, Optional ByVal nMontoIntComp As Currency = 0)
Dim i As Integer
Dim nSumIntComp As Currency
Dim bSiCubrio As Boolean
    bSiCubrio = False
    For i = 0 To UBound(MatCalend) - 1
        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If ((CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0)) Then

                Exit Function
            End If
        End If

        'Cubre Interes en Suspenso
        If (CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8))) > 0) Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 8) = MatCalend(i, 8)
            Else
                MatCalendDistrib(i, 8) = Format(CDbl(MatCalendDistrib(i, 8)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Cubre Intereses Reprogramados
        If (CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7))) > 0) Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 7) = MatCalend(i, 7)
            Else
                MatCalendDistrib(i, 7) = Format(CDbl(MatCalendDistrib(i, 7)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        
        'RIRO 20210529 ADD POR ICV
        'Intereses Compensatorio Vencido
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) > 0 Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 11) = MatCalend(i, 11)
            Else
                MatCalendDistrib(i, 11) = Format(CDbl(MatCalendDistrib(i, 11)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        
        'Intereses de Gracia
        'If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMontoGra > 0 _
            And (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) > 0 Then
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) > 0 Then
            bSiCubrio = True
            'Mody By gitu 07-05-2009
'            If pnMontoGra > (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) Then
'                pnMontoGra = pnMontoGra - (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5)))
'                pnMontoGra = CDbl(Format(pnMontoGra, "#0.00"))
'                MatCalendDistrib(i, 5) = MatCalend(i, 5)
'            Else
'                If pnMontoGra > pnMonto Then
'                    pnMontoGra = pnMonto
'                    MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMontoGra, "#0.00")
'                    pnMontoGra = 0
'                    pnMonto = 0
'                Else
'                    MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMontoGra, "#0.00")
'                    pnMontoGra = 0
'                End If
'
'            End If
            If pnMonto > (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 5) = MatCalend(i, 5)
            Else
                MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'RIRO 20210529 COMENTADO POR ICV
        'Intereses Compensatorio Vencido
                'If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                '    And (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) > 0 Then
                '    bSiCubrio = True
                '    If pnMonto > (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) Then
                '        pnMonto = pnMonto - (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11)))
                '        pnMonto = CDbl(Format(pnMonto, "#0.00"))
                '        MatCalendDistrib(i, 11) = MatCalend(i, 11)
                '    Else
                '        MatCalendDistrib(i, 11) = Format(CDbl(MatCalendDistrib(i, 11)) + pnMonto, "#0.00")
                '        pnMonto = 0
                '    End If
                'End If
        'Intereses Compensatorios
        'ALPA 20110527 - nSumIntComp
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) > 0 Then
            If (nMontoIntComp > nSumIntComp) Or nMontoIntComp = 0 Then
                bSiCubrio = True
                If pnMonto > (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) Or (pnMonto > (nMontoIntComp - nSumIntComp)) Then
                 If ((nMontoIntComp - nSumIntComp) >= CDbl(MatCalend(i, 4))) Or (nMontoIntComp = 0 And pnMonto >= CDbl(MatCalend(i, 4))) Then
                    pnMonto = pnMonto - (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4)))
                    pnMonto = CDbl(Format(pnMonto, "#0.00"))
                    nSumIntComp = nSumIntComp + (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4)))
                    MatCalendDistrib(i, 4) = MatCalend(i, 4)
                 Else
                    If nMontoIntComp > 0 Then
                        pnMonto = pnMonto - ((nMontoIntComp - nSumIntComp) - CDbl(MatCalendDistrib(i, 4)))
                        pnMonto = CDbl(Format(pnMonto, "#0.00"))
                        MatCalendDistrib(i, 4) = (nMontoIntComp - nSumIntComp)
                        nSumIntComp = nSumIntComp + ((nMontoIntComp - nSumIntComp))
                    Else
                        MatCalendDistrib(i, 4) = CDbl(Format(pnMonto, "#0.00"))
                        pnMonto = 0
                    End If
                End If
                Else
                    MatCalendDistrib(i, 4) = Format(CDbl(MatCalendDistrib(i, 4)) + pnMonto, "#0.00")
                    pnMonto = 0
                End If
            End If
        End If
        'END ALPA
        If bSiCubrio Then
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i
End Function
', Optional ByVal pnMontoGra As Currency = 0
Private Function MatrizDistribuirCapital(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
    ByRef pnMonto As Double, Optional ByVal DistVert As Boolean = False)
Dim i As Integer

    For i = 0 To UBound(MatCalend) - 1

        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If

        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3))) > 0 Then
            If pnMonto > (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 3) = MatCalend(i, 3)
            Else
                MatCalendDistrib(i, 3) = Format(CDbl(MatCalendDistrib(i, 3)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i
End Function


Private Sub MatrizActualizarEstadoCuota(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant)
Dim i As Integer
    For i = 0 To UBound(MatCalend) - 1
        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
                If CDbl(MatCalend(i, 8)) = CDbl(MatCalendDistrib(i, 8)) And _
                    CDbl(MatCalend(i, 7)) = CDbl(MatCalendDistrib(i, 7)) And _
                    CDbl(MatCalend(i, 6)) = CDbl(MatCalendDistrib(i, 6)) And _
                    CDbl(MatCalend(i, 5)) = CDbl(MatCalendDistrib(i, 5)) And _
                    CDbl(MatCalend(i, 4)) = CDbl(MatCalendDistrib(i, 4)) And _
                    CDbl(MatCalend(i, 3)) = CDbl(MatCalendDistrib(i, 3)) And CDbl(MatCalend(i, 11)) = CDbl(MatCalendDistrib(i, 11)) _
                    And CDbl(MatCalend(i, 9)) = CDbl(MatCalendDistrib(i, 9)) Then   'Faltaba el Concepto de Gastos
                    MatCalendDistrib(i, 2) = Trim(Str(gColocCalendEstadoPagado))
                End If
        End If
    Next i
End Sub

'ARCV 12-07-2006
'pbVerificaSoloCapital para las Cancelaciones de Credito con desembolso de otros
Public Function MatrizDistribuirCancelacion(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
                 ByVal psMetLiquidacion As String, ByVal pdHoy As Date, Optional ByVal pbNoCancelar As Boolean = False, Optional ByVal pbCalenDin As Boolean = False, _
                 Optional ByVal pCancel As Boolean = True, _
                 Optional ByVal pbVerificaSoloCapital As Boolean = False, Optional ByVal pbCancAnt As Boolean = False, _
                 Optional ByVal pbExcluyeGastos As Boolean = False) As Variant

'pbExcluyeGastos CTI2 20190306
Dim MatCalendDistrib As Variant
Dim nMontoGastos As Double
Dim nMontoMora As Double
Dim nMontoInteres As Double
Dim nMontoInterGra As Double 'Add by gitu 07-05-2009
Dim nMontoCapital As Double
Dim nMontoTotalTmp As Double
Dim nMontoPagoTmp As Double
Dim J As Integer
Dim oDCred As COMDCredito.DCOMCredActBD 'JUEZ 20140404

Dim nMontoInteresFecha As Double 'ARCV 30-07-2006

        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
        nMontoTotalTmp = 0
        nMontoPagoTmp = pnMontoPago
        For J = 1 To 4
                Select Case Mid(psMetLiquidacion, J, 1)
                    Case "G"
                        nMontoGastos = MatrizGastosFecha(psCtaCod, MatCalend)
                        'JUEZ 20140404 Si es cancelacion anticipada ********
                        If pbCancAnt Then
                            Set oDCred = New COMDCredito.DCOMCredActBD
                            nMontoGastos = oDCred.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha2('" & psCtaCod & "','" & Format(pdHoy, "mm/dd/yyyy") & IIf(pbExcluyeGastos, "',1)", "',0)"))!nGasto 'pbExcluyeGastos CTI2 20190306
                            Set oDCred = Nothing
                        End If
                        'END JUEZ ******************************************
                        If nMontoPagoTmp > nMontoGastos Then
                            nMontoPagoTmp = nMontoPagoTmp - nMontoGastos
                        Else
                            nMontoGastos = nMontoPagoTmp
                            nMontoPagoTmp = 0#
                        End If
                        nMontoTotalTmp = nMontoTotalTmp + nMontoGastos
                        Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMontoGastos, True)
                    Case "M"
                        nMontoMora = MatrizInteresMorFecha(psCtaCod, MatCalend)
                        If nMontoPagoTmp > nMontoMora Then
                            nMontoPagoTmp = nMontoPagoTmp - nMontoMora
                        Else
                            nMontoMora = nMontoPagoTmp
                            nMontoPagoTmp = 0#
                        End If
                        nMontoTotalTmp = nMontoTotalTmp + nMontoMora
                        Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMontoMora, True)
                    Case "I", "i", "Y"
                        nMontoInteres = CDbl(Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, MatCalend, pdHoy, pbCalenDin), "#0.00"))
                        nMontoInterGra = CDbl(Format(MatrizInteresGraAFecha(psCtaCod, MatCalend, pdHoy, True), "#0.00"))
                                                
                        nMontoInteresFecha = nMontoInteres 'ARCV 30-07-2006
                        
                        If pCancel = True Then
                            If nMontoPagoTmp > nMontoInteres Then
                                nMontoPagoTmp = nMontoPagoTmp - (nMontoInteres + nMontoInterGra)
                            Else
                                nMontoInteres = nMontoPagoTmp
                                nMontoPagoTmp = 0#
                            End If
                            nMontoTotalTmp = nMontoTotalTmp + nMontoInteres + nMontoInterGra
                            'Comentado por MAVM Sug Por MADM
                            'Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
                            Call MatrizDistribuirInteresICancelacion(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
                       Else
                       
'                            If nMontoPagoTmp > IIf(nMontoInteres > 0, nMontoInteres, 0) Then
'                                nMontoPagoTmp = nMontoPagoTmp - (IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra)
'                            Else
'                                nMontoInteres = nMontoPagoTmp - nMontoInterGra 'Corregido por MAVM 01-12-2009
'                                nMontoPagoTmp = 0#
'                            End If
                            
                            'Modificado x MADM 20101130
                            Dim bCubreInt As Boolean
                            
                            If nMontoPagoTmp >= (IIf(nMontoInteres > 0, nMontoInteres, 0) + IIf(nMontoInterGra > 0, nMontoInterGra, 0)) Then
                                nMontoPagoTmp = Round(nMontoPagoTmp - (IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra), 2)
                                bCubreInt = True
                            ElseIf nMontoPagoTmp >= IIf(nMontoInteres >= 0, nMontoInteres, 0) And (nMontoPagoTmp >= IIf(nMontoInterGra > 0, nMontoInterGra, 0)) Then
                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInterGra, 2)
                                nMontoInteres = nMontoPagoTmp
                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInteres, 2)
                                bCubreInt = True
                            ElseIf nMontoPagoTmp >= IIf(nMontoInterGra > 0, nMontoInterGra, 0) And (nMontoPagoTmp < IIf(nMontoInteres > 0, nMontoInteres, 0)) Then
                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInterGra, 2)
                                nMontoInteres = nMontoPagoTmp
                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInteres, 2)
                                bCubreInt = True
                            ElseIf nMontoPagoTmp >= IIf(nMontoInteres > 0, nMontoInteres, 0) And (nMontoPagoTmp < IIf(nMontoInterGra > 0, nMontoInterGra, 0)) Then
                                nMontoInterGra = nMontoPagoTmp
                                nMontoInteres = 0#
                                nMontoPagoTmp = 0#
                                bCubreInt = True
                            End If

                            If bCubreInt = False Then
                                nMontoInterGra = nMontoPagoTmp
                                nMontoInteres = 0#
                                nMontoPagoTmp = 0#
                            End If
                            'end MADM
                            
                            nMontoTotalTmp = nMontoTotalTmp + IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra 'Corregido Gitu 26-08-09
                            Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra, True, nMontoInterGra, nMontoInteres) 'Corregido Gitu 26-08-09
                       End If
                    Case "C"
                        nMontoCapital = MatrizCapitalAFecha(psCtaCod, MatCalend)
                        If nMontoPagoTmp > nMontoCapital Then
                            nMontoPagoTmp = nMontoPagoTmp - nMontoCapital
                        Else
                            nMontoCapital = nMontoPagoTmp
                            nMontoPagoTmp = 0#
                        End If
                        nMontoTotalTmp = nMontoTotalTmp + nMontoCapital
                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoCapital, True)
                        'Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoTotalTmp, True) 'Coment gitu 13-06-2009
                End Select
        Next J
        If (Mid(psMetLiquidacion, 3, 1) = "i" Or Mid(psMetLiquidacion, 3, 1) = "Y") And pbNoCancelar Then
            If Mid(psMetLiquidacion, 3, 1) = "Y" Then
                Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, True, pbNoCancelar, MatCalend)
            Else
                Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, False, pbNoCancelar, MatCalend)
            End If
        Else
               If Mid(psMetLiquidacion, 3, 1) = "Y" And pCancel = False Then
                    Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, True, False, MatCalend)
               Else
                    If Mid(psMetLiquidacion, 3, 1) = "i" Then
                        Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, True, pbNoCancelar, MatCalend)
                    Else
                        'Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, , pbNoCancelar, MatCalend)
                        Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, pbVerificaSoloCapital, pbNoCancelar, MatCalend, nMontoInteresFecha) 'ARCV 12-07-2006 + 30-07-2006
                    End If
               End If
        End If
        MatrizDistribuirCancelacion = MatCalendDistrib
End Function

Public Function MatrizDistribuirCalendCuotaLibre(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
                 ByVal psMetLiquidacion As String, ByVal pdHoy As Date, ByVal pnIntPend As Double, _
                 ByRef pnIntPendientePagado As Double) As Variant

Dim MatCalendDistrib As Variant
Dim nMontoGastos As Double
Dim nMontoMora As Double
Dim nMontoInteres As Double
Dim nMontoCapital As Double
Dim nMontoTotalTmp As Double
Dim nMontoPago As Double
Dim J As Integer

        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
        nMontoTotalTmp = 0
        nMontoPago = pnMontoPago

        'Cubre Gastos
        If nMontoPago > 0 Then
            Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMontoPago, True)
        End If
        'Cubre Mora
        If nMontoPago > 0 Then
            Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMontoPago)
        End If
        'Cubre Interes
        If nMontoPago > 0 Then
            If nMontoPago > pnIntPend Then
                nMontoPago = nMontoPago - pnIntPend
                pnIntPendientePagado = pnIntPend
            Else
                pnIntPendientePagado = nMontoPago
                nMontoPago = 0
                Exit Function
            End If
            Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMontoPago, True)
        End If
        'Cubrir Capital
        If nMontoPago > 0 Then
            Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoPago, True)
        End If
        MatrizDistribuirCalendCuotaLibre = MatCalendDistrib

End Function


Public Function MatrizDistribuirCalendDinamico(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
                 ByVal psMetLiquidacion As String, ByVal pdHoy As Date) As Variant

Dim MatCalendDistrib As Variant
Dim nMontoGastos As Double
Dim nMontoMora As Double
Dim nMontoInteres As Double
Dim nMontoInterGra As Double 'Add by gitu 07-05-2009
Dim nMontoCapital As Double
Dim nMontoTotalTmp As Double
Dim nMontoPago As Double
Dim J As Integer
Dim nMivivienda As Integer
Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset

        Set oCred = New COMDCredito.DCOMCredito
        Set R = oCred.RecuperaColocacCred(psCtaCod)
        Set oCred = Nothing
        nMivivienda = IIf(IsNull(R!bMiVivienda), 0, R!bMiVivienda)
        R.Close
        'SE GENERA EL CALENDARIO DE DISTRIBUIDO
        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
        nMontoTotalTmp = 0
        nMontoPago = pnMontoPago
        For J = 1 To 4
            Select Case Mid(psMetLiquidacion, J, 1)
                Case "G"
                    If nMivivienda = 1 Then
                        nMontoGastos = MatrizGastosVencidos(MatCalend, pdHoy)
                    Else
                        'nMontoGastos = MatrizGastosFecha(psCtaCod, MatCalend)
                        nMontoGastos = MatrizGastosFechaCancelacion(psCtaCod, MatCalend, pdHoy)
                    End If
                    nMontoPago = nMontoPago - nMontoGastos
                    Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMontoGastos, True)
                Case "M"
                    nMontoMora = MatrizInteresMorFecha(psCtaCod, MatCalend)
                    nMontoPago = nMontoPago - nMontoMora
                    Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMontoMora, True)
                Case "I"
                    nMontoInteres = CDbl(Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, MatCalend, pdHoy, True), "#0.00"))
                    'Add by gitu 07-05-2009....CORREGIR!!!
                    nMontoInterGra = CDbl(Format(MatrizInteresGraAFecha(psCtaCod, MatCalend, pdHoy, True), "#0.00"))
                                        
                    'JOEP20211019 Mejora en Pago anticipado
                    'nMontoPago = nMontoPago - (nMontoInteres + nMontoInterGra)
                    If (nMontoPago - (nMontoInteres + nMontoInterGra)) < 0 Then
                        Call MatrizDistribuirInteresICancelacion(MatCalend, MatCalendDistrib, nMontoPago, True, nMontoInterGra)
                        nMontoPago = 0
                    Else
                        nMontoPago = nMontoPago - (nMontoInteres + nMontoInterGra)
                        Call MatrizDistribuirInteresICancelacion(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
                    End If
                    'JOEP20211019 Mejora en Pago anticipado
                                        
                    'nMontoPago = nMontoPago - nMontoInteres
                    'MAVM 20100820 Prepago***
                    'Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
                    
                    'Comento JOEP20211019 Mejora en Pago anticipado
                    'Call MatrizDistribuirInteresICancelacion(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
                    'Comento JOEP20211019 Mejora en Pago anticipado
                    '***
                Case "C"
                    nMontoCapital = MatrizCapitalVencido(MatCalend, pdHoy)
                    nMontoPago = nMontoPago - nMontoCapital
                    If nMontoCapital > 0 Then
                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoCapital, True)
                    End If
            End Select
            nMontoPago = CDbl(Format(nMontoPago, "#0.00"))
            Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
        Next J
        If nMontoPago > 0 Then
            Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoPago, True)
            Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
        End If
        MatrizDistribuirCalendDinamico = MatCalendDistrib
End Function

Public Function MatrizDistribuirMontoMiVivienda(ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
                    ByVal psMetLiquidacion As String) As Variant
Dim i As Integer
Dim J As Integer
Dim MatCalendDistrib As Variant
Dim nMonto As Double

        nMonto = pnMontoPago
        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
        Do While nMonto > 0
            For J = 1 To 4
                Select Case Mid(psMetLiquidacion, J, 1)
                    Case "G"
                        Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMonto)
                    Case "M"
                        Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMonto)
                    Case "I"
                        Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMonto)
                    Case "C"
                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMonto)
                End Select
                Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
            Next J
        Loop
        MatrizDistribuirMontoMiVivienda = MatCalendDistrib
End Function

Public Function MatrizDistribuirMonto(ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
                    ByVal psMetLiquidacion As String, Optional ByVal pnMontoIntFecha As Double = 0#, Optional ByVal pnMontoIntFechaGra As Double = 0#, Optional ByVal pbCobrarMora As Boolean = True) As Variant
'NAGL 20190719 Según ERS036-2018 Agregó pbCobrarMora
Dim i As Integer
Dim J As Integer
Dim MatCalendDistrib As Variant
Dim nMonto As Double
Dim nMontoTemp As Double

        nMonto = pnMontoPago
        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
        Do While nMonto > 0
            For J = 1 To 4
                Select Case Mid(psMetLiquidacion, J, 1)
                    Case "G"
                        Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMonto)
                    Case "M"
                        'Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMonto) 'Comentado by NAGL 20190719
                        Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMonto, , pbCobrarMora) 'NAGL 20190719 Según ERS036-2018 Agregó pbCobrarMora
                    Case "I"
                        Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMonto, , pnMontoIntFechaGra)
                    Case "C"
                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMonto)
                End Select
                Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
            Next J
        Loop
        MatrizDistribuirMonto = MatCalendDistrib
End Function

Public Function MatrizSaldoCapital(ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizSaldoCapital = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizSaldoCapital = MatrizSaldoCapital + (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3)))
        MatrizSaldoCapital = CDbl(Format(MatrizSaldoCapital, "#0.00"))
    Next i
End Function

Public Function MatrizSaldoCapitalMiVivienda(ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant, ByVal MatCalendDistribParalelo As Variant, Optional ByVal MatCalendParalelo As Variant) As Double
Dim i As Integer

    MatrizSaldoCapitalMiVivienda = 0
    For i = 0 To UBound(MatCalend) - 1
        MatrizSaldoCapitalMiVivienda = MatrizSaldoCapitalMiVivienda + CDbl(MatCalendParalelo(i, 3)) + CDbl(MatCalend(i, 3)) - (CDbl(MatCalendDistrib(i, 3)) + CDbl(MatCalendDistribParalelo(i, 3)))
        'MatrizSaldoCapitalMiVivienda = MatrizSaldoCapitalMiVivienda + (CDbl(MatCalend(i, 3)) - MatrizCapitalPagado(MatCalend))
        MatrizSaldoCapitalMiVivienda = CDbl(Format(MatrizSaldoCapitalMiVivienda, "#0.00"))
    Next i
    'MatrizSaldoCapitalMiVivienda = MatrizSaldoCapitalMiVivienda - MatrizCapitalPagado(MatCalendDistribParalelo)

End Function

Public Function MatrizMontoCuota(ByVal MatCalend As Variant, ByVal pnNroCuota As Integer) As Double
Dim i As Integer
    MatrizMontoCuota = 0
    For i = 0 To UBound(MatCalend) - 1
        If CInt(MatCalend(i, 1)) = pnNroCuota Then
            MatrizMontoCuota = MatrizMontoCuota + CDbl(MatCalend(i, 3)) + CDbl(MatCalend(i, 4)) + CDbl(MatCalend(i, 5))
            MatrizMontoCuota = CDbl(Format(MatrizMontoCuota, "#0.00"))
            Exit Function
        End If
    Next i
End Function

Public Function MatrizCuotaPendiente(ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant) As Integer
Dim i As Integer
    MatrizCuotaPendiente = 0
    For i = 0 To UBound(MatCalend) - 1
        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
            MatrizCuotaPendiente = CInt(MatCalendDistrib(i, 1))
            Exit For
        End If
    Next i
End Function
Public Function MatrizCapitalPagado(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizCapitalPagado = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizCapitalPagado = MatrizCapitalPagado + CDbl(MatCalendDistrib(i, 3))
    Next i

End Function

Public Function MatrizIntCompPagado(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizIntCompPagado = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizIntCompPagado = MatrizIntCompPagado + CDbl(MatCalendDistrib(i, 4))
    Next i
End Function

Public Function MatrizIntCompVencPagado(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizIntCompVencPagado = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizIntCompVencPagado = MatrizIntCompVencPagado + CDbl(MatCalendDistrib(i, 11))
    Next i
End Function

Public Function MatrizIntGraciaPagado(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizIntGraciaPagado = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizIntGraciaPagado = MatrizIntGraciaPagado + CDbl(MatCalendDistrib(i, 5))
    Next i
End Function

Public Function MatrizIntMorPagado(ByVal MatCalendDistrib As Variant, Optional pbCobrarMora As Boolean = True) As Double
'NAGL 20190814 Según ERS036-2018  Agregó pbCobrarMora
Dim i As Integer
    MatrizIntMorPagado = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizIntMorPagado = MatrizIntMorPagado + IIf(pbCobrarMora = True, CDbl(MatCalendDistrib(i, 6)), 0) 'NAGL 20190814 Agregó Condicional IIf(pbCobrarMora = True, CDbl(MatCalendDistrib(i, 6)), 0)
    Next i
End Function

Public Function MatrizIntReprogPag(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizIntReprogPag = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizIntReprogPag = MatrizIntReprogPag + CDbl(MatCalendDistrib(i, 7))
    Next i

End Function

Public Function MatrizIntSuspensoPag(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizIntSuspensoPag = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizIntSuspensoPag = MatrizIntSuspensoPag + CDbl(MatCalendDistrib(i, 8))
    Next i
End Function

Public Function MatrizGastoPag(ByVal MatCalendDistrib As Variant) As Double
Dim i As Integer
    MatrizGastoPag = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        MatrizGastoPag = MatrizGastoPag + CDbl(MatCalendDistrib(i, 9))
    Next i
End Function

Public Function MatrizCuotasPagadas(ByVal MatCalendDistrib As Variant) As String
Dim i As Integer
    MatrizCuotasPagadas = ""
    For i = 0 To UBound(MatCalendDistrib) - 1
        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPagado Then
            MatrizCuotasPagadas = MatrizCuotasPagadas & MatCalendDistrib(i, 1) & ","
        End If
    Next i
    If Len(MatrizCuotasPagadas) > 0 Then
        MatrizCuotasPagadas = Mid(MatrizCuotasPagadas, 1, Len(MatrizCuotasPagadas) - 1)
    Else
        MatrizCuotasPagadas = "0"
    End If

End Function
Public Function MatrizFechaCuotaPendiente(ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant) As Date
Dim i As Integer
    For i = 0 To UBound(MatCalend) - 1
        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
            MatrizFechaCuotaPendiente = CDate(MatCalendDistrib(i, 0))
            Exit For
        End If
    Next i
End Function

Public Function MatrizEstadoCalendario(ByVal MatCalendDistrib As Variant) As Integer
Dim i As Integer
    MatrizEstadoCalendario = gColocCalendEstadoPagado
    For i = 0 To UBound(MatCalendDistrib) - 1
        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPendiente Then
            MatrizEstadoCalendario = gColocCalendEstadoPendiente
            Exit For
        End If
    Next i
End Function

Public Function CrearMatrizparaAmortizacion(ByVal MatCalend As Variant) As Variant
Dim MatCalendAmortiz() As String
Dim i As Integer
    ReDim MatCalendAmortiz(UBound(MatCalend), 12)

    For i = 0 To UBound(MatCalend) - 1
        MatCalendAmortiz(i, 0) = MatCalend(i, 0)
        MatCalendAmortiz(i, 1) = MatCalend(i, 1)
        MatCalendAmortiz(i, 2) = MatCalend(i, 2)
        MatCalendAmortiz(i, 3) = "0.00"
        MatCalendAmortiz(i, 4) = "0.00"
        MatCalendAmortiz(i, 5) = "0.00"
        MatCalendAmortiz(i, 6) = "0.00"
        MatCalendAmortiz(i, 7) = "0.00"
        MatCalendAmortiz(i, 8) = "0.00"
        MatCalendAmortiz(i, 9) = "0.00"
        MatCalendAmortiz(i, 11) = "0.00"
        MatCalendAmortiz(i, 10) = MatCalend(i, 10)
    Next i
    CrearMatrizparaAmortizacion = MatCalendAmortiz
End Function

Function RecuperaMatrizRefinanciados(ByVal psCtaCod As String) As Variant
Dim oCalend As COMDCredito.DCOMCalendario
Dim R As ADODB.Recordset
Dim MatCalend() As String
    On Error GoTo ErrorRecuperaMatrizRefinanciados
    Set oCalend = New COMDCredito.DCOMCalendario
    Set R = oCalend.RecuperaRefinanciados(psCtaCod)
    If Not R.BOF And Not R.EOF Then
        ReDim MatCalend(R.RecordCount, 17)
    Else
        ReDim MatCalend(0, 0)
    End If
    Do While Not R.EOF
        MatCalend(R.Bookmark - 1, 0) = R!cCtaCod
        MatCalend(R.Bookmark - 1, 1) = R!cCtaCodref
        MatCalend(R.Bookmark - 1, 2) = R!nMontoRef
        MatCalend(R.Bookmark - 1, 3) = Format(IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
        MatCalend(R.Bookmark - 1, 4) = Format(IIf(IsNull(R!nCapitalPag), 0, R!nCapitalPag), "#0.00")
        MatCalend(R.Bookmark - 1, 5) = Format(IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
        MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntCompPag), 0, R!nIntCompPag), "#0.00")
        MatCalend(R.Bookmark - 1, 7) = Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
        MatCalend(R.Bookmark - 1, 8) = Format(IIf(IsNull(R!nIntGraciaPag), 0, R!nIntGraciaPag), "#0.00")
        MatCalend(R.Bookmark - 1, 9) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
        MatCalend(R.Bookmark - 1, 10) = Format(IIf(IsNull(R!nIntMorPag), 0, R!nIntMorPag), "#0.00")
        MatCalend(R.Bookmark - 1, 11) = Format(IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00")
        MatCalend(R.Bookmark - 1, 12) = Format(IIf(IsNull(R!nIntReprogPag), 0, R!nIntReprogPag), "#0.00")
        MatCalend(R.Bookmark - 1, 13) = Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00")
        MatCalend(R.Bookmark - 1, 14) = Format(IIf(IsNull(R!nIntSuspensoPag), 0, R!nIntSuspensoPag), "#0.00")
        MatCalend(R.Bookmark - 1, 15) = Format(IIf(IsNull(R!nGastos), 0, R!nGastos), "#0.00")
        MatCalend(R.Bookmark - 1, 16) = Format(IIf(IsNull(R!nGastosPag), 0, R!nGastosPag), "#0.00")
        R.MoveNext
    Loop
    R.Close
    Set R = Nothing
    Set oCalend = Nothing
    RecuperaMatrizRefinanciados = MatCalend
    Exit Function

ErrorRecuperaMatrizRefinanciados:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Function SumarTotal(ByVal RTotal As ADODB.Recordset) As Double
    Dim dTotal As Double
    Do While Not RTotal.EOF
        dTotal = dTotal + IIf(IsNull(RTotal!nCapital), 0, RTotal!nCapital)
        RTotal.MoveNext
    Loop
    RTotal.Close
    Set RTotal = Nothing
    SumarTotal = dTotal
End Function

Function RecuperaMatrizCalendarioInicial(ByVal psCtaCod As String, Optional nMontoInicial As Double = -1, _
    Optional ByVal pbCalendParalelo As Boolean = False, Optional ByVal pbParaImpresion As Boolean = False, _
    Optional ByVal psFecDesem As String = "", Optional ByVal pnTasaInt As Double = 0) As Variant
    'PASI TI-ERS136-2013 20131219 AGREGO psFecDesem,pnTasaInt

Dim R As ADODB.Recordset
Dim RTotal As ADODB.Recordset
Dim RCred As ADODB.Recordset
'***Agregado por PASI20140102 TI-ERS136-2013
Dim RCD As ADODB.Recordset
Dim oNCalend As NCOMCalendario
Dim oNCredito As COMNCredito.NCOMCredito
Dim oCalendX As COMDCredito.DCOMCalendario
Dim oDCalend As COMDCredito.DCOMCalendario
'***Fin PASI
Dim oCalend As COMDCredito.DCOMCalendario
Dim oCredito As COMDCredito.DCOMCredito
Dim MatCalend() As String
Dim nMontoSaldo As Double
Dim i As Integer
'***Agregado por PASI20140102 TI-ERS136-2013
Dim rsColocEst As ADODB.Recordset
Dim rsCC As ADODB.Recordset
Dim nTipoGracia As Integer
Dim MatGracia As Variant
Dim nCuotas As Integer
Dim MatCalenPAgos As Variant
Dim nPeriodoGracia As Integer
Dim nDias As Integer
Dim nPeriodo As Integer
Dim nCuotaCom As Integer
Dim nMiViv As Integer
Dim nNroProxDesemb As Integer
Dim MatCalendPagos As Variant
Dim nPlazo As Integer
Dim nPeriodoFecFija As Integer
Dim pnProxMes As Integer
Dim lnDescripCuota() As String
Dim sMensFecAprob As String
Dim ContDesemb As Integer
Dim MatDesemb() As String
Dim MatDesParcial As Variant
Dim bQuincenal As Boolean
Dim nMontoGra As Double
'PASI FIN ****************************

    On Error GoTo ErrorRecuperaMatrizCalendarioInicial
    Set oCalend = New COMDCredito.DCOMCalendario
    Set R = oCalend.RecuperaCalendarioPagos(psCtaCod, , pbCalendParalelo, , True)
    Set RTotal = oCalend.RecuperaCalendarioPagos(psCtaCod, , pbCalendParalelo, , True)
    Set oCalend = Nothing
    'ARCV 14-02-2007
    'ReDim MatCalend(R.RecordCount, 11)
    'ReDim MatCalend(R.RecordCount, 13)
    'ReDim MatCalend(R.RecordCount, 14) 'By Capi 28122007 para insertar columna de gastos
    'ReDim MatCalend(R.RecordCount, 16) 'WIOR 20120528 PARA LOS NUEVOs GASTOs DE MICROSEGURO Y  MULTIRIESGO
    'ReDim MatCalend(R.RecordCount, 17) 'RECO20150601 ERS023-2015 SE AGREGO GASTO MULTIRIESGO MYPE
    ReDim MatCalend(R.RecordCount, 18) 'LUCV20180601, Según ERS022-2018
    '------
    Set oCredito = New COMDCredito.DCOMCredito
    Set RCred = oCredito.RecuperaColocaciones(psCtaCod)
    
    'If nMontoInicial <> -1 Then
        'nMontoSaldo = nMontoInicial
        nMontoSaldo = SumarTotal(RTotal)
    'Else
        'nMontoSaldo = CDbl(Format(RCred!nMontoCol, "#0.00"))
    'End If
    
    '***Agregado por PASI20140102 TI-ERS136-2013
    nMontoGra = 0
    nTipoGracia = 0
    nCuotas = 0
    nPlazo = 0
    nPeriodoFecFija = 0
    pnProxMes = 0
    
    If Trim(psFecDesem) <> "" Then
        
        Set oNCredito = New COMNCredito.NCOMCredito
        
        sMensFecAprob = DevolverFechaAprobacion(psCtaCod)
        lnDescripCuota = DevolverPrimeraFechaPago(psCtaCod, nMontoSaldo, CDate(psFecDesem), CDate(sMensFecAprob), , True)
        
        nPeriodoGracia = 0
        Set rsColocEst = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        If Not (rsColocEst.EOF And rsColocEst.BOF) Then
            nTipoGracia = IIf(IsNull(rsColocEst!nTipoGracia), 0, rsColocEst!nTipoGracia)
            nCuotas = IIf(IsNull(rsColocEst!nCuotas), 0, rsColocEst!nCuotas)
            nPlazo = IIf(IsNull(rsColocEst!nPlazo), 0, rsColocEst!nPlazo)
            nPeriodoFecFija = IIf(IsNull(rsColocEst!nPeriodoFechaFija), 0, rsColocEst!nPeriodoFechaFija)
            pnProxMes = IIf(IsNull(rsColocEst!nProxMes), 0, rsColocEst!nProxMes)
            
            nPlazo = IIf(nPlazo = 0, 30, nPlazo)
            
            If Not (R.EOF And R.BOF) Then
                nPeriodoGracia = DateDiff("D", CDate(psFecDesem), CDate(Format(R!dVenc, "dd/mm/yyyy")))
            End If
            nPeriodoGracia = IIf(nPeriodoGracia > nPlazo, nPeriodoGracia - nPlazo, 0)
            If rsColocEst!nTipoGracia = 6 Then nMontoGra = MontoIntPerDias(rsColocEst!nTasaGracia, nPeriodoGracia, nMontoSaldo)
        End If
        
        Set rsCC = oCredito.RecuperaColocacCred(psCtaCod)
        nNroProxDesemb = rsCC!nNroProxDesemb
        nMiViv = rsCC!bMiVivienda
        nCuotaCom = rsCC!bCuotaCom
        
        'Recupera Calendario de Desembolsos
        ContDesemb = 0
        Set oDCalend = New COMDCredito.DCOMCalendario
        Set RCD = oDCalend.RecuperaCalendarioDesemb(psCtaCod)
        
        Do While Not RCD.EOF
            ContDesemb = ContDesemb + 1
            RCD.MoveNext
        Loop
        If ContDesemb > 0 Then
            ReDim MatDesemb(ContDesemb, 3)
            ContDesemb = 0
            RCD.MoveFirst
            Do While Not RCD.EOF
                ContDesemb = ContDesemb + 1
                If RCD!ncoloccalendestado = 1 Then
                    MatDesemb(ContDesemb - 1, 0) = Format(RCD!dPago, "dd/mm/yyyy")
                Else
                    MatDesemb(ContDesemb - 1, 0) = Format(RCD!dVenc, "dd/mm/yyyy")
                End If
                MatDesemb(ContDesemb - 1, 1) = Format(RCD!nCapital, "#0.00")
                MatDesemb(ContDesemb - 1, 2) = Format(RCD!dVenc, "dd/mm/yyyy")
                RCD.MoveNext
            Loop
        End If
        RCD.Close
        MatDesParcial = MatDesemb

        'Actualiza MatDesembolsos
        If ContDesemb > 1 Then
            For i = 0 To UBound(MatDesParcial) - 1
                If i = nNroProxDesemb - 1 Then
                    MatDesParcial(i, 0) = Format(psFecDesem, "dd/mm/yyyy")
                Else
                    If i > nNroProxDesemb - 1 Then
                        MatDesParcial(i, 1) = "0.00"
                    End If
                End If
            Next i

        End If

            Set oCalendX = New COMDCredito.DCOMCalendario
            bQuincenal = oCalendX.VerificaCalendQuincenal(psCtaCod)
            Set oCalendX = Nothing
        
        
        If rsColocEst!nColocCalendCod <> gColocCalendCodCL Then
            Set oNCalend = New NCOMCalendario
            If nPeriodoGracia > 0 Then
                MatGracia = oNCalend.GeneraGracia(nTipoGracia, CDbl(Format(TasaIntPerDias(pnTasaInt, nPeriodoGracia) * nMontoSaldo, "#0.00")), nCuotas)
            End If
            If nMiViv <> 1 Then
                 If ContDesemb > 1 Then
                    Set oDCalend = New COMDCredito.DCOMCalendario
                        nDias = oDCalend.ObtenerDiasPeriodoParcial(psCtaCod, psFecDesem)
                    Set oDCalend = Nothing
                    If nDias > 0 Then
                       nPeriodo = rsColocEst!nPlazo - nDias
                    Else
                       nPeriodo = rsColocEst!nPlazo
                    End If
                Else
                       nPeriodo = rsColocEst!nPlazo
                End If
            End If
            MatCalendPagos = oNCalend.GeneraCalendario(nMontoSaldo, pnTasaInt, nCuotas, nPeriodo, _
                    psFecDesem, DameTipoCuota(rsColocEst!nColocCalendCod), DameTipoPeriodo(rsColocEst!nColocCalendCod), _
                    nTipoGracia, nPeriodoGracia, nPeriodoFecFija, _
                    IIf(pnProxMes = 0, False, True), MatGracia, True, IIf(nCuotaCom = 1, True, False), IIf(ContDesemb > 1, True, False), MatDesParcial, , , bQuincenal, IIf(IsNull(rsColocEst!bGraciaEnCuotas), False, rsColocEst!bGraciaEnCuotas), IIf(IsNull(rsColocEst!nTasaGracia), 0, rsColocEst!nTasaGracia), IIf(IsNull(rsColocEst!nPeriodoFechaFija2), 0, rsColocEst!nPeriodoFechaFija2), , , , sMensFecAprob, lnDescripCuota, nMontoGra, "N") 'ARCV 29-07-2006'sMensFecAprob
        End If
        R.MoveFirst
    End If
    'PASI FIN  *********************************
    
    Set oCredito = Nothing
    Do While Not R.EOF
        MatCalend(R.Bookmark - 1, 0) = Format(R!dVenc, "dd/mm/yyyy")
        MatCalend(R.Bookmark - 1, 1) = Trim(Str(R!nCuota))
        MatCalend(R.Bookmark - 1, 2) = Trim(Str(R!ncoloccalendestado))
        '****Modificado por PASI TI-ERS136-2013 20131220 ********************
        'MatCalend(R.Bookmark - 1, 3) = Format(IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
        'MatCalend(R.Bookmark - 1, 4) = Format(IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
        'MatCalend(R.Bookmark - 1, 5) = Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
        If Trim(psFecDesem) <> "" Then
            MatCalend(R.Bookmark - 1, 3) = Format(MatCalendPagos(R.Bookmark - 1, 3), "#0.00")
            MatCalend(R.Bookmark - 1, 4) = Format(CDbl(MatCalendPagos(R.Bookmark - 1, 4)) + CDbl(MatCalendPagos(R.Bookmark - 1, 11)), "#0.00")
            MatCalend(R.Bookmark - 1, 5) = Format(MatCalendPagos(R.Bookmark - 1, 5), "#0.00")
        Else
            MatCalend(R.Bookmark - 1, 3) = Format(IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
            MatCalend(R.Bookmark - 1, 4) = Format(IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
            MatCalend(R.Bookmark - 1, 5) = Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
        End If
        'PASI FIN ***************
        'MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
        MatCalend(R.Bookmark - 1, 6) = "0.00"
        MatCalend(R.Bookmark - 1, 7) = Format(IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00")
        'MatCalend(R.Bookmark - 1, 8) = Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00")
        MatCalend(R.Bookmark - 1, 8) = "0.00"
        MatCalend(R.Bookmark - 1, 9) = Format(IIf(IsNull(R!nGasto), 0, R!nGasto), "#0.00")
        nMontoSaldo = nMontoSaldo - IIf(IsNull(R!nCapital), 0, R!nCapital)
        nMontoSaldo = CDbl(Format(nMontoSaldo, "#0.00"))
        MatCalend(R.Bookmark - 1, 10) = Format(nMontoSaldo, "#0.00")
        'ARCV 14-02-2007
        MatCalend(R.Bookmark - 1, 11) = Format(IIf(IsNull(R!nGastoComision), 0, R!nGastoComision), "#0.00")
        MatCalend(R.Bookmark - 1, 12) = Format(IIf(IsNull(R!nGastoSegDes), 0, R!nGastoSegDes), "#0.00")
        'By Capi 28122007
        MatCalend(R.Bookmark - 1, 13) = Format(IIf(IsNull(R!nGastoEstCta), 0, R!nGastoEstCta), "#0.00")
        '*** PEAC 20090721
        If Mid(psCtaCod, 6, 3) <> "517" Then
            MatCalend(R.Bookmark - 1, 14) = Format(IIf(IsNull(R!nGastoPolizaIncendio), 0, R!nGastoPolizaIncendio), "#0.00")
        Else 'BRGO 20111205
            MatCalend(R.Bookmark - 1, 14) = Format(IIf(IsNull(R!nGastoPolizaVehiculo), 0, R!nGastoPolizaVehiculo), "#0.00")
        End If
        '----------
        'WIOR 20120528 *******************************************************
        If IIf(IsNull(R!nGastoMicroseguros), 0, R!nGastoMicroseguros) > 0 Then
            MatCalend(R.Bookmark - 1, 15) = Format(IIf(IsNull(R!nGastoMicroseguros), 0, R!nGastoMicroseguros), "#0.00")
            If IIf(IsNull(R!nGastoSeguroMultiriesgo), 0, R!nGastoSeguroMultiriesgo) > 0 Then
                MatCalend(R.Bookmark - 1, 16) = Format(IIf(IsNull(R!nGastoSeguroMultiriesgo), 0, R!nGastoSeguroMultiriesgo), "#0.00")
            End If
        Else
            If IIf(IsNull(R!nGastoSeguroMultiriesgo), 0, R!nGastoSeguroMultiriesgo) > 0 Then
                MatCalend(R.Bookmark - 1, 15) = Format(IIf(IsNull(R!nGastoSeguroMultiriesgo), 0, R!nGastoSeguroMultiriesgo), "#0.00")
            End If
        End If
        'WIOR FIN ************************************************************
        'RECO20150601 ERS023-2015************************************
            MatCalend(R.Bookmark - 1, 17) = Format(IIf(IsNull(R!nGastoMultMYPE), 0, R!nGastoMultMYPE), "#0.00")
        'RECO FIN****************************************************
            MatCalend(R.Bookmark - 1, 18) = Format(IIf(IsNull(R!nGastoPolizaIncendioGracia), 0, R!nGastoPolizaIncendioGracia), "#0.00") 'LUCV20180601, Según ERS022-2018
        
        R.MoveNext
    Loop
    R.Close
    Set R = Nothing

    If pbParaImpresion And pbCalendParalelo Then
        Set oCredito = New COMDCredito.DCOMCredito
        Set RCred = oCredito.RecuperaDatosComunes(psCtaCod, True, Array(gColocEstSolic, gColocEstSug, gColocEstAprob, gColocEstVigMor, gColocEstVigNorm, gColocEstVigVenc, gColocEstRefMor, gColocEstRefNorm, gColocEstRefVenc))
        If Not IsNull(RCred!nMontoCol) Then
            nMontoSaldo = CDbl(Format(RCred!nMontoCol, "#0.00"))
        End If
        If nMontoSaldo = 0 Then
            nMontoSaldo = RCred!nMontoSol
        End If
        Set oCredito = Nothing

        Set oCalend = New COMDCredito.DCOMCalendario
        Set R = oCalend.RecuperaCalendarioPagos(psCtaCod)
        Set oCalend = Nothing
        Do While Not R.EOF
            MatCalend(R.Bookmark - 1, 0) = Format(R!dVenc, "dd/mm/yyyy")
            MatCalend(R.Bookmark - 1, 1) = Trim(Str(R!nCuota))
            MatCalend(R.Bookmark - 1, 2) = Trim(Str(R!ncoloccalendestado))
            'Modificado por PASI TI-ERS136-2013 20131220 ********************
            'MatCalend(R.Bookmark - 1, 3) = Format(CDbl(MatCalend(R.Bookmark - 1, 3)) + IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
            'MatCalend(R.Bookmark - 1, 4) = Format(CDbl(MatCalend(R.Bookmark - 1, 4)) + IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
            'MatCalend(R.Bookmark - 1, 5) = Format(CDbl(MatCalend(R.Bookmark - 1, 5)) + IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
            If Trim(psFecDesem) <> "" Then
                MatCalend(R.Bookmark - 1, 3) = Format(CDbl(MatCalend(R.Bookmark - 1, 3)) + CDbl(MatCalendPagos(R.Bookmark - 1, 3)), "#0.00")
                MatCalend(R.Bookmark - 1, 4) = Format(CDbl(MatCalend(R.Bookmark - 1, 4)) + (CDbl(MatCalendPagos(R.Bookmark - 1, 4)) + CDbl(MatCalendPagos(R.Bookmark - 1, 11))), "#0.00")
                MatCalend(R.Bookmark - 1, 5) = Format(CDbl(MatCalend(R.Bookmark - 1, 5)) + CDbl(MatCalendPagos(R.Bookmark - 1, 5)), "#0.00")
            Else
                MatCalend(R.Bookmark - 1, 3) = Format(CDbl(MatCalend(R.Bookmark - 1, 3)) + IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
                MatCalend(R.Bookmark - 1, 4) = Format(CDbl(MatCalend(R.Bookmark - 1, 4)) + IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
                MatCalend(R.Bookmark - 1, 5) = Format(CDbl(MatCalend(R.Bookmark - 1, 5)) + IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
            End If
            'PASI FIN ***************
            MatCalend(R.Bookmark - 1, 6) = Format(CDbl(MatCalend(R.Bookmark - 1, 6)) + IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
            MatCalend(R.Bookmark - 1, 7) = Format(CDbl(MatCalend(R.Bookmark - 1, 7)) + IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00")
            'MatCalend(R.Bookmark - 1, 8) = Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00")
            MatCalend(R.Bookmark - 1, 8) = "0.00"
            MatCalend(R.Bookmark - 1, 9) = Format(CDbl(MatCalend(R.Bookmark - 1, 8)) + IIf(IsNull(R!nGasto), 0, R!nGasto), "#0.00")
            nMontoSaldo = nMontoSaldo - CDbl(MatCalend(R.Bookmark - 1, 3))
            nMontoSaldo = CDbl(Format(nMontoSaldo, "#0.00"))
            MatCalend(R.Bookmark - 1, 10) = Format(nMontoSaldo, "#0.00")
            'ARCV 14-02-2007
            MatCalend(R.Bookmark - 1, 11) = Format(IIf(IsNull(R!nGastoComision), 0, R!nGastoComision), "#0.00")
            MatCalend(R.Bookmark - 1, 12) = Format(IIf(IsNull(R!nGastoSegDes), 0, R!nGastoSegDes), "#0.00")
            '----------
            R.MoveNext
        Loop
        R.Close
        Set R = Nothing
    End If
    RecuperaMatrizCalendarioInicial = MatCalend
    Exit Function

ErrorRecuperaMatrizCalendarioInicial:
    ReDim MatCalend(0, 0)
    RecuperaMatrizCalendarioInicial = MatCalend
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function


Function RecuperaMatrizGastosPendiente(ByVal psCtaCod As String) As Variant
Dim oCredito As COMDCredito.DCOMCalendario
Dim MatGastos() As String
Dim R As ADODB.Recordset

    Set oCredito = New COMDCredito.DCOMCalendario
    Set R = oCredito.RecuperaCalendarioGastosPendientes(psCtaCod, gColocCalendAplCuota)
    Set oCredito = Nothing
    'Cuota, Concepto, Monto
    ReDim MatGastos(0)
    If R.RecordCount > 0 Then
        ReDim MatGastos(R.RecordCount, 4)
    End If
    Do While Not R.EOF
        MatGastos(R.Bookmark - 1, 0) = Trim(Str(R!nCuota))
        MatGastos(R.Bookmark - 1, 1) = Trim(Str(R!nPrdConceptoCod))
        MatGastos(R.Bookmark - 1, 2) = Format(R!nMonto - R!nMontoPagado, "#0.00")
        MatGastos(R.Bookmark - 1, 3) = psCtaCod
        R.MoveNext
    Loop
    R.Close

    RecuperaMatrizGastosPendiente = MatGastos

End Function

Function RecuperaMatrizGastosPendienteAgrupado(ByVal psCtaCod As String) As Variant
Dim oCredito As COMDCredito.DCOMCalendario
Dim MatGastos() As String
Dim R As ADODB.Recordset

    Set oCredito = New COMDCredito.DCOMCalendario
    Set R = oCredito.RecuperaCalendarioGastosPendientesAgrupado(psCtaCod)
    Set oCredito = Nothing
    'Concepto, Monto
    ReDim MatGastos(0)
    If R.RecordCount > 0 Then
        ReDim MatGastos(R.RecordCount, 2)
    End If
    Do While Not R.EOF
        MatGastos(R.Bookmark - 1, 0) = Trim(Str(R!nPrdConceptoCod))
        MatGastos(R.Bookmark - 1, 1) = Format(R!nMonto, "#0.00")

        R.MoveNext
    Loop
    R.Close

    RecuperaMatrizGastosPendienteAgrupado = MatGastos

End Function

Function RecuperaMatrizCalendarioPendiente(ByVal psCtaCod As String, Optional ByVal pbParalelo As Boolean = False, _
 Optional ByVal pBrfa As Boolean, Optional ByVal pbExcluyeGastos As Boolean = False) As Variant
Dim R As ADODB.Recordset
Dim RTmp As ADODB.Recordset
Dim RCred As ADODB.Recordset
Dim oCalend As COMDCredito.DCOMCalendario
Dim oCredito As COMDCredito.DCOMCredito
Dim MatCalend() As String
Dim nMontoSaldo As Double
Dim oGen As COMDCredito.DCOMFeriado
Dim nNumDiasfer As Integer
Dim dFecSisTmp As Date
Dim oCons As COMDConstSistema.NCOMConstSistema
Dim bFeriado As Boolean
Dim i As Integer
Dim nIntPend, nColocCalendCod, nIntFecha  As Double
Dim dVigencia As Date
Dim nSaldo As Double
Dim nDiasTranscurridos As Integer
Dim nTasaInt As Double
Dim nDiasAtraso As Integer

'CTI2 20181229 ADD pbExcluyeGastos

    'On Error GoTo ErrorRecuperaMatrizCalendarioPendiente

    Set oGen = New COMDCredito.DCOMFeriado
    Set oCons = New COMDConstSistema.NCOMConstSistema
    dFecSisTmp = CDate(oCons.LeeConstSistema(gConstSistFechaSistema))
    Set oCons = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocacCred(psCtaCod)
    If R.RecordCount > 0 Then
        nIntPend = R!nIntPend
        nColocCalendCod = R!nColocCalendCod
        nDiasAtraso = R!nDiasAtraso
        R.Close
    Else
        Set R = Nothing
        Exit Function
    End If
    
    'Para el caso de los Creditos Solicitados
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    If R.RecordCount > 0 Then
        dVigencia = IIf(IsNull(R!dVigencia), 0, R!dVigencia)
        R.Close
    Else
        Set R = Nothing
        Exit Function
    End If
    
    Set R = oCredito.RecuperaProducto(psCtaCod)
    If R.RecordCount > 0 Then
        nSaldo = R!nSaldo
        nTasaInt = R!nTasaInteres
        Set oCredito = Nothing
        R.Close
    Else
        Set R = Nothing
        Exit Function
    End If
    
    Set oCalend = New COMDCredito.DCOMCalendario
    Set R = oCalend.RecuperaCalendarioPagosPendiente(psCtaCod, pbParalelo, pBrfa, pbExcluyeGastos) 'CTI2 ADD pbExcluyeGastos
    Set oCalend = Nothing
    ReDim MatCalend(R.RecordCount, 13)
    If R.RecordCount > 0 Then
        Set oCredito = New COMDCredito.DCOMCredito
        'Set RCred = oCredito.RecuperaColocaciones(psCtaCod)
        'nMontoSaldo = CDbl(Format(RCred!nMontoCol, "#0.00"))
        nMontoSaldo = CDbl(Format(IIf(IsNull(R!nMontoPrestamo), 0, R!nMontoPrestamo), "#0.00"))
        'Set oCredito = Nothing
        Do While Not R.EOF

            MatCalend(R.Bookmark - 1, 0) = Format(R!dVenc, "dd/mm/yyyy")
            MatCalend(R.Bookmark - 1, 1) = Trim(Str(R!nCuota))
            MatCalend(R.Bookmark - 1, 2) = Trim(Str(R!ncoloccalendestado))
            MatCalend(R.Bookmark - 1, 3) = Format(IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
            MatCalend(R.Bookmark - 1, 4) = Format(IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
            MatCalend(R.Bookmark - 1, 5) = Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
            MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00") 'RIRO 20200808 ADD
            
            'RIRO 20200808 Comentado
            'If dFecSisTmp > R!dVenc Then
            '   bFeriado = False
            '    'Si se le cobra Mora
            '    If R!dVenc <> 0 Then
            '        For i = 0 To DateDiff("d", R!dVenc, dFecSisTmp) - 1
            '
            '            Set RTmp = oGen.DetallaFeriado(R!dVenc + i, Mid(psCtaCod, 4, 2))
            '            If RTmp.RecordCount > 0 Then
            '                bFeriado = True
            '            Else
            '                bFeriado = False
            '                Exit For
            '            End If
            '            RTmp.Close
            '
            '            If i = 2 Then
            '                Exit For
            '            End If
            '        Next i
            '    End If
            '    If bFeriado Then
            '        MatCalend(R.Bookmark - 1, 6) = "0.00"
            '    Else
            '        MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
            '    End If
            'Else
            '    MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
            'End If
            'END RIRO
            
            MatCalend(R.Bookmark - 1, 7) = Format(IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00")
            MatCalend(R.Bookmark - 1, 8) = Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00")
            MatCalend(R.Bookmark - 1, 9) = Format(IIf(IsNull(R!nGasto), 0, R!nGasto), "#0.00")
            MatCalend(R.Bookmark - 1, 12) = Format(nMontoSaldo, "#0.00")
            nMontoSaldo = nMontoSaldo - IIf(IsNull(R!nSaldoCap), 0, R!nSaldoCap)
            nMontoSaldo = CDbl(Format(nMontoSaldo, "#0.00"))
            MatCalend(R.Bookmark - 1, 10) = Format(nMontoSaldo, "#0.00")
            MatCalend(R.Bookmark - 1, 11) = Format(IIf(IsNull(R!nIntCompVenc), 0, R!nIntCompVenc), "#0.00")
            MatCalend(R.Bookmark - 1, 12) = Format(IIf(IsNull(R!nITF), 0, R!nITF), "#0.00")
            'MARG ERS004-2017
            MatCalend(R.Bookmark - 1, 13) = Format(IIf(IsNull(R!nGasto2), 0, R!nGasto2), "#0.00")
            'END MARG
            R.MoveNext
        Loop
    End If
    R.Close
    Set R = Nothing
    Set oGen = Nothing

    'Si es cuota libre hallar Interes a la Fecha
    If nColocCalendCod = 70 And nDiasAtraso <= 0 Then
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaUltimoMovimiento(psCtaCod)
        Set oCredito = Nothing
        If R.RecordCount > 0 Then
            dVigencia = R!dFecPago
        End If
        R.Close
        nDiasTranscurridos = DateDiff("d", dVigencia, dFecSisTmp)
        If nDiasTranscurridos > 0 Then
            nIntFecha = (TasaIntPerDias(nTasaInt, nDiasTranscurridos) * nSaldo) + nIntPend
        Else
            nIntFecha = nIntPend
        End If

        For i = 0 To UBound(MatCalend) - 1
            If i = 0 Then
                MatCalend(i, 4) = Format(nIntFecha, "#0.00")
            Else
                MatCalend(i, 4) = "0.00"
            End If
        Next i

    End If

    RecuperaMatrizCalendarioPendiente = MatCalend
    Exit Function

ErrorRecuperaMatrizCalendarioPendiente:
    ReDim MatCalend(0, 0)
    RecuperaMatrizCalendarioPendiente = MatCalend
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

'MAVM Corregir Historial del Credito (Gastos)
Function RecuperaMatrizCalendarioPendienteHistorial(ByVal psCtaCod As String, Optional ByVal pbParalelo As Boolean = False, _
 Optional ByVal pBrfa As Boolean) As Variant
Dim R As ADODB.Recordset
Dim RTmp As ADODB.Recordset
Dim RCred As ADODB.Recordset
Dim oCalend As COMDCredito.DCOMCalendario
Dim oCredito As COMDCredito.DCOMCredito
Dim MatCalend() As String
Dim nMontoSaldo As Double
Dim oGen As COMDCredito.DCOMFeriado
Dim nNumDiasfer As Integer
Dim dFecSisTmp As Date
Dim oCons As COMDConstSistema.NCOMConstSistema
Dim bFeriado As Boolean
Dim i As Integer
Dim nIntPend, nColocCalendCod, nIntFecha  As Double
Dim dVigencia As Date
Dim nSaldo As Double
Dim nDiasTranscurridos As Integer
Dim nTasaInt As Double
Dim nDiasAtraso As Integer

    'On Error GoTo ErrorRecuperaMatrizCalendarioPendiente

    Set oGen = New COMDCredito.DCOMFeriado
    Set oCons = New COMDConstSistema.NCOMConstSistema
    dFecSisTmp = CDate(oCons.LeeConstSistema(gConstSistFechaSistema))
    Set oCons = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocacCred(psCtaCod)
    If R.RecordCount > 0 Then
        nIntPend = R!nIntPend
        nColocCalendCod = R!nColocCalendCod
        nDiasAtraso = R!nDiasAtraso
        R.Close
    Else
        Set R = Nothing
        Exit Function
    End If
    
    'Para el caso de los Creditos Solicitados
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    If R.RecordCount > 0 Then
        dVigencia = IIf(IsNull(R!dVigencia), 0, R!dVigencia)
        R.Close
    Else
        Set R = Nothing
        Exit Function
    End If
    
    Set R = oCredito.RecuperaProducto(psCtaCod)
    If R.RecordCount > 0 Then
        nSaldo = R!nSaldo
        nTasaInt = R!nTasaInteres
        Set oCredito = Nothing
        R.Close
    Else
        Set R = Nothing
        Exit Function
    End If
    
    Set oCalend = New COMDCredito.DCOMCalendario
    Set R = oCalend.RecuperaCalendarioPagosPendienteHistorial(psCtaCod, pbParalelo, pBrfa)
    Set oCalend = Nothing
    'ReDim MatCalend(R.RecordCount, 13)
    ReDim MatCalend(R.RecordCount, 17) 'EJVG20140925
    If R.RecordCount > 0 Then
        Set oCredito = New COMDCredito.DCOMCredito
        'Set RCred = oCredito.RecuperaColocaciones(psCtaCod)
        'nMontoSaldo = CDbl(Format(RCred!nMontoCol, "#0.00"))
        nMontoSaldo = CDbl(Format(IIf(IsNull(R!nMontoPrestamo), 0, R!nMontoPrestamo), "#0.00"))
        'Set oCredito = Nothing
        Do While Not R.EOF

            MatCalend(R.Bookmark - 1, 0) = Format(R!dVenc, "dd/mm/yyyy")
            MatCalend(R.Bookmark - 1, 1) = Trim(Str(R!nCuota))
            MatCalend(R.Bookmark - 1, 2) = Trim(Str(R!ncoloccalendestado))
            MatCalend(R.Bookmark - 1, 3) = Format(IIf(IsNull(R!nCapital), 0, R!nCapital), "#0.00")
            MatCalend(R.Bookmark - 1, 4) = Format(IIf(IsNull(R!nIntComp), 0, R!nIntComp), "#0.00")
            MatCalend(R.Bookmark - 1, 5) = Format(IIf(IsNull(R!nIntGracia), 0, R!nIntGracia), "#0.00")
            MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00") 'RIRO 20200808 ADD
            
            'RIRO 20200808 Comentado
            'If dFecSisTmp > R!dVenc Then
            '   bFeriado = False
            '    'Si se le cobra Mora
            '    If R!dVenc <> 0 Then
            '        For i = 0 To DateDiff("d", R!dVenc, dFecSisTmp) - 1
            '
            '            Set RTmp = oGen.DetallaFeriado(R!dVenc + i, Mid(psCtaCod, 4, 2))
            '            If RTmp.RecordCount > 0 Then
            '                bFeriado = True
            '            Else
            '                bFeriado = False
            '                Exit For
            '            End If
            '            RTmp.Close
            '
            '            If i = 2 Then
            '                Exit For
            '            End If
            '        Next i
            '    End If
            '    If bFeriado Then
            '        MatCalend(R.Bookmark - 1, 6) = "0.00"
            '    Else
            '        MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
            '    End If
            'Else
            '    MatCalend(R.Bookmark - 1, 6) = Format(IIf(IsNull(R!nIntMor), 0, R!nIntMor), "#0.00")
            'End If
            ' End RIRO

            MatCalend(R.Bookmark - 1, 7) = Format(IIf(IsNull(R!nIntReprog), 0, R!nIntReprog), "#0.00")
            MatCalend(R.Bookmark - 1, 8) = Format(IIf(IsNull(R!nIntSuspenso), 0, R!nIntSuspenso), "#0.00")
            'MatCalend(R.Bookmark - 1, 9) = Format(IIf(IsNull(R!nGasto), 0, R!nGasto), "#0.00")
            MatCalend(R.Bookmark - 1, 12) = Format(nMontoSaldo, "#0.00")
            nMontoSaldo = nMontoSaldo - IIf(IsNull(R!nSaldoCap), 0, R!nSaldoCap)
            nMontoSaldo = CDbl(Format(nMontoSaldo, "#0.00"))
            MatCalend(R.Bookmark - 1, 10) = Format(nMontoSaldo, "#0.00")
            MatCalend(R.Bookmark - 1, 11) = Format(IIf(IsNull(R!nIntCompVenc), 0, R!nIntCompVenc), "#0.00")
            MatCalend(R.Bookmark - 1, 12) = Format(IIf(IsNull(R!nITF), 0, R!nITF), "#0.00")
            'EJVG20140925 ***
            MatCalend(R.Bookmark - 1, 13) = Format(IIf(IsNull(R!nGastoComision), 0, R!nGastoComision), "#0.00") 'Gasto Comisión: Todos los gastos no detallados
            MatCalend(R.Bookmark - 1, 14) = Format(IIf(IsNull(R!nGastoSegDes), 0, R!nGastoSegDes), "#0.00") 'Seg. Desgravamen
            MatCalend(R.Bookmark - 1, 15) = Format(IIf(IsNull(R!nGastoPolizaIncendio), 0, R!nGastoPolizaIncendio), "#0.00") 'Seg. contra Incendio
            MatCalend(R.Bookmark - 1, 16) = Format(IIf(IsNull(R!nGastoPolizaVehiculo), 0, R!nGastoPolizaVehiculo), "#0.00") 'Seg. Vehicular Multiriesgo
            MatCalend(R.Bookmark - 1, 9) = Format(CDbl(MatCalend(R.Bookmark - 1, 13)) + CDbl(MatCalend(R.Bookmark - 1, 14)) + CDbl(MatCalend(R.Bookmark - 1, 15)) + CDbl(MatCalend(R.Bookmark - 1, 16)), "#0.00") 'Total de Gastos
            'END EJVG *******
            R.MoveNext
        Loop
    End If
    R.Close
    Set R = Nothing
    Set oGen = Nothing

    'Si es cuota libre hallar Interes a la Fecha
    If nColocCalendCod = 70 And nDiasAtraso <= 0 Then
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaUltimoMovimiento(psCtaCod)
        Set oCredito = Nothing
        If R.RecordCount > 0 Then
            dVigencia = R!dFecPago
        End If
        R.Close
        nDiasTranscurridos = DateDiff("d", dVigencia, dFecSisTmp)
        If nDiasTranscurridos > 0 Then
            nIntFecha = (TasaIntPerDias(nTasaInt, nDiasTranscurridos) * nSaldo) + nIntPend
        Else
            nIntFecha = nIntPend
        End If

        For i = 0 To UBound(MatCalend) - 1
            If i = 0 Then
                MatCalend(i, 4) = Format(nIntFecha, "#0.00")
            Else
                MatCalend(i, 4) = "0.00"
            End If
        Next i

    End If

    RecuperaMatrizCalendarioPendienteHistorial = MatCalend
    Exit Function

ErrorRecuperaMatrizCalendarioPendiente:
    ReDim MatCalend(0, 0)
    RecuperaMatrizCalendarioPendienteHistorial = MatCalend
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function MatrizGastosVencidos(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizGastosVencidos = 0
    If MatCalend(0, 9) = "" Then
        MatCalend(0, 9) = "0.00"
    End If

    'ARCV 23-02-2007    'Cobrar solo los vencidos
    MatrizGastosVencidos = MatrizGastosVencidos + CDbl(MatCalend(0, 9))
    '-----
    For i = 1 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizGastosVencidos = MatrizGastosVencidos + CDbl(MatCalend(i, 9))
        End If
    Next i
End Function

Public Function MatrizIntCompVencido(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizIntCompVencido = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizIntCompVencido = MatrizIntCompVencido + CDbl(MatCalend(i, 4))
        End If
    Next i
End Function

Public Function MatrizIntCompVencVencido(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizIntCompVencVencido = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizIntCompVencVencido = MatrizIntCompVencVencido + CDbl(MatCalend(i, 11))
        End If
    Next i
End Function

Public Function MatrizIntReprogVencido(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizIntReprogVencido = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizIntReprogVencido = MatrizIntReprogVencido + CDbl(MatCalend(i, 7))
        End If
    Next i
End Function

Public Function MatrizIntSuspensoVencido(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizIntSuspensoVencido = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizIntSuspensoVencido = MatrizIntSuspensoVencido + CDbl(MatCalend(i, 8))
        End If
    Next i
End Function

Public Function MatrizIntGraciaVencido(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizIntGraciaVencido = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizIntGraciaVencido = MatrizIntGraciaVencido + CDbl(MatCalend(i, 5))
        End If
    Next i
End Function

Public Function MatrizIntCompVencidoCalendCierre(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizIntCompVencidoCalendCierre = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            MatrizIntCompVencidoCalendCierre = MatrizIntCompVencidoCalendCierre + CDbl(MatCalend(i, 11))
        End If
    Next i
End Function

Public Function MatrizIntCompVencidoCierre(ByRef MatCalend As Variant, ByVal pdHoy As Date, ByVal pnTasa As Double, ByVal pnMontoAcum As Double) As Double
Dim i As Integer
Dim nIntTempo As Double

    MatrizIntCompVencidoCierre = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            nIntTempo = CDbl(Format((((1 + (pnTasa / 100)) ^ (1 / 30)) - 1), "#0.000000")) * CDbl(MatCalend(i, 3))
            MatCalend(i, 3) = Format(CDbl(MatCalend(i, 3)) + nIntTempo, "#0.000000")
            MatrizIntCompVencidoCierre = MatrizIntCompVencidoCierre + nIntTempo
        End If
    Next i
    MatrizIntCompVencidoCierre = MatrizIntCompVencidoCierre + pnMontoAcum
End Function


Public Function MatrizCapitalVencido(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizCapitalVencido = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= Format(CDate(MatCalend(i, 0)), "dd/mm/yyyy") Then
            MatrizCapitalVencido = MatrizCapitalVencido + CDbl(MatCalend(i, 3))
        End If
    Next i
End Function

Public Function MatrizDeudaAlaFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double

    'MatrizDeudaAlaFecha = MatrizCapitalVencido(MatCalend, pdHoy) + MatrizInteresGastosAFecha(psCtaCod, MatCalend, pdHoy)
    MatrizDeudaAlaFecha = MatrizCapitalCalendario(MatCalend) + MatrizInteresGastosAFecha(psCtaCod, MatCalend, pdHoy)
End Function

Public Function MatrizMoraTotal(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
    MatrizMoraTotal = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(0, 0)) Then
            MatrizMoraTotal = MatrizMoraTotal + CDbl(MatCalend(i, 6))
        End If
    Next i
End Function

Public Function MatrizCuotasEnMora(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Integer
Dim i As Integer
    MatrizCuotasEnMora = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy > CDate(MatCalend(i, 0)) Then
            MatrizCuotasEnMora = MatrizCuotasEnMora + 1
        End If
    Next i
End Function

Public Function MatrizMontoCalendDinamico(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByVal pnMivivienda As Integer = 0, _
                                          Optional ByVal pdFecSis As Date = 0)

    MatrizMontoCalendDinamico = 0
    'MatrizMontoCalendDinamico = MatrizMontoCalendDinamico + MatrizCapitalVencido(MatCalend, pdHoy) _
    '    + MatrizGastosVencidos(MatCalend, pshoy) + MatrizInteresTotalesAFecha(psCtaCod, MatCalend, pdHoy)
    If pnMivivienda = 1 Then
        MatrizMontoCalendDinamico = MatrizMontoCalendDinamico + MatrizCapitalVencido(MatCalend, pdHoy) _
            + MatrizGastosVencidos(MatCalend, pdFecSis) + MatrizInteresTotalesAFecha(psCtaCod, MatCalend, pdHoy)
    Else
        MatrizMontoCalendDinamico = MatrizMontoCalendDinamico + MatrizCapitalVencido(MatCalend, pdHoy) _
            + MatrizGastosFecha(psCtaCod, MatCalend) + MatrizInteresTotalesAFecha(psCtaCod, MatCalend, pdHoy, True)
    End If
End Function

'**********************************************************************
'* Funcion que trabaja conla Matriz de Calendario ya cargado
'*  y calcula va  a Capital de lo que tiene que pagar el Cliente para Ponerse al Dia
'***********************************************************************
Public Function MatrizMontoCapitalAPagar(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
Dim J As Integer
    MatrizMontoCapitalAPagar = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            For J = 3 To 9
                MatrizMontoCapitalAPagar = MatrizMontoCapitalAPagar + CDbl(MatCalend(i, 3))
            Next J
        End If
    Next i
    If MatrizMontoCapitalAPagar = 0 Then
        MatrizMontoCapitalAPagar = MatrizMontoCapitalAPagar + CDbl(MatCalend(0, 3))
    End If
End Function
'**********************************************************************
'* Funcion que trabaja conla Matriz de Calendario ya cargado
'*  y calcula lo que tiene que pagar el Cliente para Ponerse al Dia
'***********************************************************************

Public Function DistribuirMatrizMiVivEnDosCalendarios(ByRef pMatCalendDistribParalelo As Variant, _
    ByRef pMatCalendDistrib As Variant, ByVal pMatResult As Variant, ByVal pMatCalendParalelo As Variant, _
    ByVal pMatCalend As Variant, ByVal nCalPago As Integer)

Dim i, J As Integer
Dim k As Integer
Dim m As Integer
Dim nMontoPago As Double

    '*******************************************************************
    'Si es Mi vivienda Distribuir Amortizacion
    '*******************************************************************

    'Primero gastos al calandario no consecional

    For i = 0 To UBound(pMatResult) - 1
        For m = 3 To 11
            If m <> 10 Then
                nMontoPago = nMontoPago + CDbl(pMatResult(i, m))
                If nMontoPago > 0 Then

                    'If nCalPago = 0 Then 'Si es Mal Pagador
                        'Capital, e Intereses del paralelo
                        For k = 0 To UBound(pMatCalendDistribParalelo) - 1
                            If pMatCalendDistribParalelo(k, 1) = pMatResult(i, 1) Then
                                For J = 3 To 11
                                    If J = m Then
                                        If nMontoPago > CDbl(pMatCalendParalelo(k, J)) Then
                                            pMatCalendDistribParalelo(k, J) = pMatCalendParalelo(k, J)
                                            nMontoPago = nMontoPago - CDbl(pMatCalendParalelo(k, J))
                                        Else
                                            pMatCalendDistribParalelo(k, J) = Format(nMontoPago, "#0.00")
                                            nMontoPago = 0
                                        End If
                                    End If
                                Next J
                                Exit For
                            End If
                        Next k
                    'End If

                    'Capital, e Intereses
                    For k = 0 To UBound(pMatCalendDistrib) - 1
                        If pMatCalendDistrib(k, 1) = pMatResult(i, 1) Then
                            For J = 3 To 11
                                If J = m Then
                                    If nMontoPago > CDbl(pMatCalend(k, J)) Then
                                        pMatCalendDistrib(k, J) = pMatCalend(k, J)
                                        nMontoPago = nMontoPago - CDbl(pMatCalend(k, J))
                                    Else
                                        pMatCalendDistrib(k, J) = Format(nMontoPago, "#0.00")
                                        nMontoPago = 0
                                    End If
                                    If nMontoPago > 0 Then
                                        pMatCalendDistrib(k, J) = Format(CDbl(pMatCalendDistrib(k, J)) + nMontoPago, "#0.00")
                                        nMontoPago = 0
                                    End If
                                End If
                            Next J
                            Exit For
                        End If
                    Next k
                End If
            End If
        Next m
    Next i
    Call MatrizActualizarEstadoCuota(pMatCalendParalelo, pMatCalendDistribParalelo)
    Call MatrizActualizarEstadoCuota(pMatCalend, pMatCalendDistrib)

End Function

Public Function MatrizMontoPagado(ByVal MatCalendDistrib As Variant, _
    Optional ByVal pnCuota As Integer = -1) As Double
Dim i, J As Integer
    MatrizMontoPagado = 0

    If pnCuota <> -1 Then
        For i = 0 To UBound(MatCalendDistrib) - 1
            If CInt(MatCalendDistrib(i, 1)) = pnCuota Then
                For J = 3 To 9
                    MatrizMontoPagado = MatrizMontoPagado + MatCalendDistrib(i, J)
                Next J
                MatrizMontoPagado = MatrizMontoPagado + MatCalendDistrib(i, 11)
                Exit For
            End If
        Next i
    Else
        For i = 0 To UBound(MatCalendDistrib) - 1
            For J = 3 To 9
                MatrizMontoPagado = MatrizMontoPagado + MatCalendDistrib(i, J)
            Next J
            MatrizMontoPagado = MatrizMontoPagado + MatCalendDistrib(i, 11)
        Next i
    End If
End Function

Public Function MatrizCalculoMoraSimuladorPagos(ByVal MatCalend As Variant, ByVal pdHoy As Date, _
    ByVal pdFin As Date, ByVal pnTasaintMor As Double) As Double
Dim i As Integer
    MatrizCalculoMoraSimuladorPagos = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            If pdFin > pdHoy Then
                MatrizCalculoMoraSimuladorPagos = MatrizCalculoMoraSimuladorPagos + Format(((pnTasaintMor / 100) * (pdFin - pdHoy)) * MatCalend(i, 3), "#0.00")
            Else
                MatrizCalculoMoraSimuladorPagos = 0
            End If
        Else
            If pdFin >= CDate(MatCalend(i, 0)) Then
                MatrizCalculoMoraSimuladorPagos = MatrizCalculoMoraSimuladorPagos + Format(((pnTasaintMor / 100) * (pdFin - CDate(MatCalend(i, 0)))) * MatCalend(i, 3), "#0.00")
            End If
        End If
    Next i
End Function

Public Function MatrizMontoAPagar(ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByRef pnMonIntGra As Double, Optional ByRef pbCuotasVencidas As Boolean = False, Optional ByRef pnMonIntComp As Double = 0, Optional ByRef pnMonGasto As Double = 0) As Double '** Juez 20120528 pbCuotasVencidas
Dim i As Integer
Dim J As Integer
    MatrizMontoAPagar = 0
    pbCuotasVencidas = False '** Juez 20120528
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy >= CDate(MatCalend(i, 0)) Then
            For J = 3 To 9
                MatrizMontoAPagar = MatrizMontoAPagar + CDbl(MatCalend(i, J))
            Next J
            'Add by gitu 13-06-2009 se agrego para que cargue el interes de gracia
            MatrizMontoAPagar = MatrizMontoAPagar + CDbl(MatCalend(i, 11))
            pnMonIntGra = pnMonIntGra + CDbl(MatCalend(i, 5))
            pnMonIntComp = pnMonIntComp + CDbl(MatCalend(i, 4))
            pnMonGasto = pnMonGasto + CDbl(MatCalend(i, 9))
            pbCuotasVencidas = True '** Juez 20120528
        End If
    Next i
    If MatrizMontoAPagar = 0 Then
        For J = 3 To 9
            MatrizMontoAPagar = MatrizMontoAPagar + CDbl(MatCalend(0, J))
        Next J
        pnMonIntGra = CDbl(MatCalend(0, 5))
        MatrizMontoAPagar = MatrizMontoAPagar + CDbl(MatCalend(0, 11))
    End If
End Function


Public Function MatrizMontoAPagarCuotaPendiente(ByVal MatCalend As Variant, ByVal pdHoy As Date) As Double
Dim i As Integer
Dim J As Integer
    MatrizMontoAPagarCuotaPendiente = 0
    For J = 3 To 9
            MatrizMontoAPagarCuotaPendiente = MatrizMontoAPagarCuotaPendiente + CDbl(MatCalend(0, J))
    Next J
    MatrizMontoAPagarCuotaPendiente = MatrizMontoAPagarCuotaPendiente + CDbl(MatCalend(0, 11))

End Function

Private Function ValidaAmortizacionCredito(ByVal pnMonto As Double) As String
    ValidaAmortizacionCredito = ""
    If pnMonto = 0 Then
        ValidaAmortizacionCredito = "Monto de Pago debe ser Mayor que Cero"
    End If
End Function

Public Function ValidaMontoPrestamo(ByVal psCtaCod As String, ByVal pnMontoPrestamo As Double, ByVal pdFecha As Date) As String
Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nTipoCambioFijo As Double
Dim nMontoMN As Double
Dim nMontoME As Double

Dim nMontoMaxRiesgosExt As Double
Dim nMontoMaxPolizaSegExt As Double
Dim oCredGen As COMDConstSistema.DCOMGeneral
Dim RTemp As ADODB.Recordset

    On Error GoTo ErrorValidaMontoPrestamo

    ' Obtiene el Parametro del Monto Max del Credito, para solicitar el reporte de Riesgos
    Set oCredGen = New COMDConstSistema.DCOMGeneral
    Set RTemp = RecuperaParametro(3054)
    Set oCredGen = Nothing
    nMontoMaxRiesgosExt = IIf(IsNull(RTemp!nParamValor), 0, RTemp!nParamValor)
    RTemp.Close
    Set RTemp = Nothing

    ' Obtiene el Parametro del Monto Max del Credito, para solicitar Poliza de Seguros
    Set oCredGen = New COMDConstSistema.DCOMGeneral
    Set RTemp = RecuperaParametro(3055)
    Set oCredGen = Nothing
    nMontoMaxPolizaSegExt = IIf(IsNull(RTemp!nParamValor), 0, RTemp!nParamValor)
    RTemp.Close
    Set RTemp = Nothing

    ValidaMontoPrestamo = ""

    Set oGeneral = New COMDConstSistema.DCOMGeneral
    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdFecha, TCFijoMes)
    nTipoCambioFijo = CDbl(Format(nTipoCambioFijo, "#0.00"))
    Set oGeneral = Nothing

    'Moneda Nacional '
    If CInt(Mid(psCtaCod, 9, 1)) = COMDConstantes.gMonedaNacional Then
       nMontoMN = pnMontoPrestamo
       nMontoMN = CDbl(Format(pnMontoPrestamo, "#0.00"))

       nMontoME = nMontoMN / nTipoCambioFijo
    End If

    'Moneda Extrangera '
    If CInt(Mid(psCtaCod, 9, 1)) = COMDConstantes.gMonedaExtranjera Then
        nMontoME = pnMontoPrestamo
        nMontoME = CDbl(Format(nMontoME, "#0.00"))

    End If

    If nMontoME > nMontoMaxRiesgosExt Then
       ValidaMontoPrestamo = "El Monto del Crédito supera los $" & CStr(nMontoMaxRiesgosExt) & ", deberá presentar Informe de Riesgos." & Chr(13)
    End If

    If nMontoME > nMontoMaxPolizaSegExt Then
       ValidaMontoPrestamo = ValidaMontoPrestamo & "El Monto del Crédito supera los $" & CStr(nMontoMaxPolizaSegExt) & ", deberá presentar Póliza de Seguros."
    End If


    Exit Function

ErrorValidaMontoPrestamo:
        Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function


Public Function ValidaMontoParaTipoCredito(ByVal psTipoCred As String, ByVal psMonedaCod As String, ByVal pnMontoPrestamo As Double, ByVal psMonedaFteCod As String, ByVal pnMontoFte As Double, ByVal pdFecha As Date) As String
Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nTipoCambioFijo As Double
Dim nMontoMN As Double
Dim nMontoME As Double
Dim nMontoMaxExt As Double
Dim sTipoCred As String

    On Error GoTo ErrorValidaMontoParaTipoCredito

    nMontoMaxExt = 30000
    nMontoME = 0

    ValidaMontoParaTipoCredito = ""

    Set oGeneral = New COMDConstSistema.DCOMGeneral
    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdFecha, TCFijoMes)
    nTipoCambioFijo = CDbl(Format(nTipoCambioFijo, "#0.00"))
    Set oGeneral = Nothing

    If CInt(psMonedaCod) = COMDConstantes.gMonedaNacional Then 'Moneda Nacional '
       nMontoMN = pnMontoPrestamo
       nMontoMN = CDbl(Format(nMontoMN, "#0.00"))

       nMontoME = nMontoME + (nMontoMN / nTipoCambioFijo)
    Else 'Moneda Extrangera '
       nMontoME = nMontoME + CDbl(Format(pnMontoPrestamo, "#0.00"))
    End If

    If CInt(psMonedaFteCod) = COMDConstantes.gMonedaNacional Then 'Moneda Nacional '
       nMontoMN = pnMontoFte
       nMontoMN = CDbl(Format(nMontoMN, "#0.00"))

       nMontoME = nMontoME + (nMontoMN / nTipoCambioFijo)
    Else 'Moneda Extrangera '
       nMontoME = nMontoME + pnMontoFte
    End If


    If nMontoME > nMontoMaxExt And psTipoCred = "20" Then 'De MES a COMERCIAL
       ValidaMontoParaTipoCredito = "El Monto del Crédito supera los $" & CStr(Format(nMontoMaxExt, "#0.00")) & ", deberia considerarlo como Tipo de Crédito COMERCIAL"
    End If

    If nMontoME < nMontoMaxExt And psTipoCred = "10" Then 'De COMERCIAL a MES
       ValidaMontoParaTipoCredito = "El Monto del Crédito no supera los $" & CStr(Format(nMontoMaxExt, "#0.00")) & ", deberia considerarlo como Tipo de Crédito MES"
    End If

    Exit Function

ErrorValidaMontoParaTipoCredito:
        Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function


Private Function DevuelveMatrizGastosCredito(ByRef pnNumreg As Integer, ByVal psCtaCod As String, ByVal nNroCalen As Integer) As Variant
Dim R As ADODB.Recordset
Dim oCalend As COMDCredito.DCOMCalendario
Dim MatGastosCred() As String
        Set oCalend = New COMDCredito.DCOMCalendario
        Set R = oCalend.RecuperaCalendarioGastos(psCtaCod, nNroCalen, 0, gColocCalendAplCuota, True, pbExcluyeGastos) 'CTI2 ADD pbExcluyeGastos 20190101
        Set oCalend = Nothing
        pnNumreg = 0
        pnNumreg = R.RecordCount
        If R.RecordCount > 0 Then
            ReDim MatGastosCred(R.RecordCount, 3)
            Do While Not R.EOF
                MatGastosCred(R.Bookmark - 1, 0) = Trim(Str(R!nCuota))
                MatGastosCred(R.Bookmark - 1, 1) = Trim(Str(R!nPrdConceptoCod))
                MatGastosCred(R.Bookmark - 1, 2) = Format(R!nMonto - R!nMontoPagado, "#0.00")
                R.MoveNext
            Loop
        End If
        R.Close

        DevuelveMatrizGastosCredito = MatGastosCred

End Function

Private Function DevuelveMatrizGastosCreditoCuota(pnNumreg As Integer, ByVal pnCuota As Integer, MatGastosCred As Variant, ByVal pnNumRegGasCred As Integer) As Variant
Dim i As Integer
Dim nCont As Integer
Dim MatGastosCredCuota() As String
    nCont = 0
    For i = 0 To pnNumRegGasCred - 1
        If pnCuota = CInt(MatGastosCred(i, 0)) Then
           nCont = nCont + 1
        End If
    Next i

    ReDim MatGastosCredCuota(nCont, 3)
    nCont = 0
    For i = 0 To pnNumRegGasCred - 1
        If pnCuota = CInt(MatGastosCred(i, 0)) Then
           nCont = nCont + 1
           MatGastosCredCuota(nCont - 1, 0) = MatGastosCred(i, 0)
           MatGastosCredCuota(nCont - 1, 1) = MatGastosCred(i, 1)
           MatGastosCredCuota(nCont - 1, 2) = MatGastosCred(i, 2)
        End If
    Next i
    pnNumreg = nCont
    DevuelveMatrizGastosCreditoCuota = MatGastosCredCuota
End Function

Public Function AmortizarCredito(ByVal psCtaCod, ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant, _
            ByVal pnMonto As Double, ByVal pdHoy As Date, ByVal psMetLiquid As String, ByVal pnTipoPago As ColocTipoPago, _
            ByVal psCodAge As String, ByVal psCodUser As String, Optional psNroDoc As String = "", _
            Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing, Optional ByVal pnMovNro As Long = -1, _
            Optional ByVal pnNroDacion As Integer = -1, Optional pbEnOtraCmac As Boolean = False, Optional psPersCmac As String = "", _
            Optional ByVal pnIntPend As Double = 0, Optional ByVal pnIntPendPagado As Double = 0, _
            Optional psMovnroTemp As String = "", Optional ByVal pMatGastosGen As Variant = "", Optional ByVal pnNumGastosGen As Integer = -1, _
            Optional ByVal MatCalendDistribParalelo As Variant = "", Optional ByVal pnCalPago As Integer = 1, _
            Optional ByVal MatCalendParalelo As Variant = "", Optional ByVal pnPrepago As Integer = 0, _
            Optional psPersLavDinero As String = "", Optional pnITF As Double = 0#, _
            Optional ByVal pnMontoDesagio As Double = 0, Optional ByVal pbInicioTrans As Boolean = False, _
            Optional ByRef psMensajeValidacion As String = "", Optional ByVal psProyectoActual As String = "", _
            Optional ByVal psTitLavDinero As String = "", Optional ByVal psOrdLavDinero As String = "", _
            Optional ByVal psReaLavDinero As String = "", Optional ByVal psBenLavDinero As String = "", _
            Optional ByVal psVisLavDinero As String = "", Optional pnMovNroTem As Long = 0, _
            Optional ByVal bPorAfectacion As Boolean = False, _
            Optional ByVal MatCalendDistribuidoMiVivi As Variant = "", _
            Optional ByVal pnMontoComPreCanc As Double = 0, _
            Optional ByVal psCtaCodCargo As String = "", _
            Optional ByRef pMatAho As Variant = "", _
            Optional pnTpoDoc As Integer = 47, _
            Optional psPersCod As String = "", _
            Optional ByVal psIFTpo As String = "01", Optional ByVal psIFCta As String = "", _
            Optional ByVal pnMovNroRVD As Long = 0, Optional ByVal pnMovNroPend As Long = 0, _
            Optional pnPreParaAmpliacion As Integer = 0) As String 'Optional pnMontoIntDif As Double = 0
            'VAPA20170805 AGREGO pnMontoIntDif FROM 60 Comentado by NAGL 20180609
            'DAOR 20070511,psVisLavDinero
            'Parametro bPorAfectacion agregado por ELRO el 20120329, según RFC023-2012
            'JUEZ 20130925 Se agregó parametro pnMontoComPreCanc
            'JUEZ 20131227 Se agregó parametro psCtaCodCargo y pMatAho
            'EJVG20140408 Se agregó parametros pnTpoDoc,psPersCod,psIFTpo,psIFCta x Cambios Cheque
            'RIRO20140530 ERS017, Se agregó parámetro pnMovNroRVD, pnMovNroPend
                                

'By Capi 20012008 se agrego los ultimos 5 parametros
Dim oBase As COMDCredito.DCOMCredActBD
Dim nEstadoCred As Integer
Dim nEstadoCredTemp As Integer
Dim R As ADODB.Recordset
Dim oCred As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim nTransacc As Long
Dim sLineaCred As String
Dim nMontoColocado As Double
Dim dFecPend As Date
Dim nDiasAtraso As Integer
Dim i, k As Integer
Dim nNroCalen As Integer
Dim nMontoGasto As Double
Dim sMovNro As String
Dim nMovNro As Long
Dim nConsCred As String
Dim pnPlazo As Integer
Dim bTran As Boolean
'Dim oFunciones As New COMNContabilidad.NCOMContFunciones
Dim dFechaTran As Date
Dim nIntPend As Double
Dim nMontoPago As Double
Dim nMontoPago_2 As Double
Dim nNroCalPar As Integer
Dim nMivivienda As Integer
Dim MatGastosCred As Variant
Dim NumregGastosCred As Integer
Dim MatGastosCuota As Variant
Dim NumRegGastosCuota As Integer
Dim nBuenPagador As Integer
Dim nPrestamo As Double
Dim CapitalPagado As Double
Dim nDiasAtrasoMov As Integer
Dim opeITFChequeEfect As String
'Se Agrego para el Manejo de las Operaciones VAC
Dim nCapitalVAC As Double
nCapitalVAC = 0
'Dim bGarantAval As Boolean 'JUEZ 20130429
Dim bReprogRoyaAmarilla As Boolean 'JUEZ 20131022
Dim nMovNroReversionReprog As Long 'JUEZ 20131022
Dim sTpoCredCod As String 'JUEZ 20140122
Dim nDatoVivienda As Integer 'JUEZ 20140122
Dim dFecVig As Date 'JUEZ 20140122
Dim bReprogDesNat As Boolean 'EJVG20140325
Dim nMovNroReversionReprogDesNat As Long 'EJVG20140325

Dim bReprogZonaInundada As Boolean 'PASI 20170327
Dim nMovNroReversionReprogZonaInundada As Long 'PASI 20170327
Dim bReprogCovid19 As Boolean 'APRI20200430 POR COVID-19
Dim nMovNroReversionCovid19 As Long 'APRI20200430 POR COVID-19
Dim nInteresComPagado As Double 'APRI20200709 POR COVID
'************************
'WIOR 20150421 ***
Dim nIntDiferido As Currency
Dim nRevIntDif As Currency
Dim nRevIntDifAcum As Currency
Dim sOpeRevIntDif As String
Dim nIntDiferidoPend As Currency
Dim bMIVIVIENDAAnt As Boolean 'FRHU 20160525 INCIDENTE

nRevIntDifAcum = 0
sOpeRevIntDif = ""
nIntDiferidoPend = 0
'WIOR FIN ********
'****Comentado by NAGL 20180609****
'VAPA20170805 FROM 60**********************
'Dim nMontInDif As Double
'Dim lsCtaCodNew As String
'Dim lbExistePreAmpliacion As Boolean
'Dim lbValidaPreAmpliacion As Boolean
'Dim lbRegIntDif As Boolean
'END VAPA 20170805 from 60******************
'********END NAGL 20180609*********
Dim lnPorcentaje As Currency
Dim lbRefVigente As Integer

'PASI20170622, Mejoras en 100220 ****************
Dim sOpeTpoMov As String

    On Error GoTo ErrorAmortizarPago

    If pnTipoPago = gColocTipoPagoCheque Then
        opeITFChequeEfect = "990107"
    'ARCV 08-09
    ElseIf pnTipoPago = gColocTipoPagoCargoCta Then
        opeITFChequeEfect = gITFCobroCargo '"990101"
    'RIRO20140620 ERS017
    ElseIf pnTipoPago = gColocTipoPagoVoucher Then
        opeITFChequeEfect = "990121"
    'END RIRO
    Else
        opeITFChequeEfect = gCredITF
    End If
    'Else
    '    opeITFChequeEfect = gCredITF
    'End If
    '---------------------------
    
    AmortizarCredito = ""
    AmortizarCredito = ValidaAmortizacionCredito(pnMonto)
    If AmortizarCredito <> "" Then
        Exit Function
    End If
    bTran = False
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaProducto(psCtaCod)
    Set oCred = Nothing
    nEstadoCred = R!nPrdEstado
    nEstadoCredTemp = R!nPrdEstado
    nTransacc = R!nTransacc
    R.Close

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    nPrestamo = R!nMontoCol
    sTpoCredCod = R!cTpoCredCod 'JUEZ 20140122
    dFecVig = R!dVigencia 'JUEZ 20140122
    bMIVIVIENDAAnt = EsCredMIVIVENDA(R!cTpoProdCod, R!cTpoCredCod) 'FRHU 20160525 INCIDENTE
    R.Close
    Set R = Nothing
    'EJVG20151119 Se comentó asiento reversión de avales
    ''JUEZ 20130429 ***************************
    'Set oCred = New COMDCredito.DCOMCredito
    'Set R = oCred.RecuperaGarantes(psCtaCod)
    'Set oCred = Nothing
    'bGarantAval = False
    'If Not R.EOF Then
    '    bGarantAval = True
    'End If
    'Set R = Nothing
    'END JUEZ ********************************
    'JUEZ 20131022 ***************************
    Set oCred = New COMDCredito.DCOMCredito
    bReprogRoyaAmarilla = False
    Set R = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogRoyaAmarilla)
    If R.RecordCount > 0 Then
        bReprogRoyaAmarilla = True
        nMovNroReversionReprog = R!nMovNro
    End If
    Set oCred = Nothing
    'END JUEZ ********************************
    'EJVG20140325 ***
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogDesastreNat)
    If R.RecordCount > 0 Then
        bReprogDesNat = True
        nMovNroReversionReprogDesNat = R!nMovNro
    End If
    Set oCred = Nothing
    'END EJVG *******
    'PASI 20170327****************************
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogZonaInundada)
    If R.RecordCount > 0 Then
        bReprogZonaInundada = True
        nMovNroReversionReprogZonaInundada = R!nMovNro
    End If
    Set oCred = Nothing
    'PASI END*********************************
    'APRI20200430 POR COVID-19
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, "100929")
    If R.RecordCount > 0 Then
        bReprogCovid19 = True
        nMovNroReversionCovid19 = R!nMovNro
    End If
    Set oCred = Nothing
    'END APRI
    'WIOR 20150421 ***
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.ObtenerInteresDiferidoCredito(psCtaCod)
    If R.RecordCount > 0 Then
        nIntDiferido = IIf(IsNull(R!nInteresDif), 0, R!nInteresDif)
        If nIntDiferido > 0 Then
            Set R = oCred.ObtenerInteresDiferidoPendCredito(psCtaCod)
            If R.RecordCount > 0 Then
                nIntDiferidoPend = IIf(IsNull(R!nIntDifPend), 0, R!nIntDifPend)
            End If
        End If
    End If
    Set oCred = Nothing
    'WIOR FIN ********
    'ALPA 20160326
    If pnTipoPago = gColocTipoPagoCajeroCorresponsal Then
    'gPagoCuotaCajeroCorresponsal Then
    Select Case nEstadoCred
            'Si es Credito refinanciado
            Case gColocEstRefMor
                nConsCred = gCredPagRefMorEfec_CC
                sOpeRevIntDif = gCredRevIntDifRef
            Case gColocEstRefNorm
                nConsCred = gCredPagRefNorEfec_CC
                sOpeRevIntDif = gCredRevIntDifRef
            Case gColocEstRefVenc
                nConsCred = gCredPagRefVenEfec_CC
                sOpeRevIntDif = gCredRevIntDifRef
            'si es Credito Normal
            Case gColocEstVigMor
                nConsCred = gCredPagNorMorEfec_CC
                sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
            Case gColocEstVigNorm
                nConsCred = gCredPagNorNorEfec_CC
                sOpeRevIntDif = gCredRevIntDifVig 'WIOR 20150421
            Case gColocEstVigVenc
                nConsCred = gCredPagNorVenEfec_CC
                sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
        End Select
        opeITFChequeEfect = "105103"
    Else
    'FIN FRHU 20160326
    'WIOR 20140620 ***********************
    If pnTipoPago = gColocTipoPagoCargoCtaAuto Then
        nConsCred = gCredPagoCuotasDebitoAuto
        'WIOR 20150421 ***
        Select Case nEstadoCred
                'Si es Credito refinanciado
                Case gColocEstRefMor
                    sOpeRevIntDif = gCredRevIntDifRef
                Case gColocEstRefNorm
                    sOpeRevIntDif = gCredRevIntDifRef
                Case gColocEstRefVenc
                    sOpeRevIntDif = gCredRevIntDifRef
                    
                'si es Credito Normal
                Case gColocEstVigMor
                    sOpeRevIntDif = gCredRevIntDifVenc
                Case gColocEstVigNorm
                    sOpeRevIntDif = gCredRevIntDifVig
                Case gColocEstVigVenc
                    sOpeRevIntDif = gCredRevIntDifVenc
        End Select
        'WIOR FIN ********
    Else
    'WIOR FIN ****************************
        If pnTipoPago <> gColocTipoPagoDacionPago Then
            If pnTipoPago <> gColocTipoPagoCargoCta Then
                If pnTipoPago <> gColocTipoPagoVoucher Then 'RIRO20140530 ERS017
                    'Definir Codigo de Operacion de Pago
                    Select Case nEstadoCred
                        'Si es Credito refinanciado
                        Case gColocEstRefMor
                            If Not pbEnOtraCmac Then
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEfec, gCredPagRefMorCh)
                            Else
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEOCEfec, gCredPagRefMorEOCCh)
                            End If
                            sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                        Case gColocEstRefNorm
                            If Not pbEnOtraCmac Then
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEfec, gCredPagRefNorCh)
                            Else
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEOCEfec, gCredPagRefNorEOCCh)
                            End If
                            sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                        Case gColocEstRefVenc
                            If Not pbEnOtraCmac Then
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEfec, gCredPagRefVenCh)
                            Else
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEOCEfec, gCredPagRefVenEOCCh)
                            End If
                            sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                        'si es Credito Normal
                        Case gColocEstVigMor
                            If Not pbEnOtraCmac Then
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEfec, gCredPagNorMorCh)
                            Else
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEOCEfec, gCredPagNorMorEOCCh)
                            End If
                            sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                        Case gColocEstVigNorm
                            If Not pbEnOtraCmac Then
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEfec, gCredPagNorNorCh)
                            Else
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEOCEfec, gCredPagNorNorEOCCh)
                            End If
                            sOpeRevIntDif = gCredRevIntDifVig 'WIOR 20150421
                        Case gColocEstVigVenc
                            If Not pbEnOtraCmac Then
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEfec, gCredPagNorVenCh)
                            Else
                                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEOCEfec, gCredPagNorVenEOCCh)
                            End If
                            sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                    End Select
                Else
                    'RIRO20140530 ERS017 ********
                    Select Case nEstadoCred
                        Case gColocEstRefMor
                            nConsCred = gCredPagRefMorVouch
                            sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                        Case gColocEstRefNorm
                            nConsCred = gCredPagRefNorVouch
                            sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                        Case gColocEstRefVenc
                            nConsCred = gCredPagRefVenVouch
                            sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                        Case gColocEstVigMor
                            nConsCred = gCredPagNorMorVouch
                            sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                        Case gColocEstVigNorm
                            nConsCred = gCredPagNorNorVouch
                            sOpeRevIntDif = gCredRevIntDifVig 'WIOR 20150421
                        Case gColocEstVigVenc
                            nConsCred = gCredPagNorVenVouch
                            sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                    End Select
                    'FIN RIRO *******************
                End If
            Else
                Select Case nEstadoCred
                'Si es Credito refinanciado
                Case gColocEstRefMor
                    nConsCred = gCredPagRefMorCC
                    sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                Case gColocEstRefNorm
                    nConsCred = gCredPagRefNorCC
                    sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                Case gColocEstRefVenc
                    nConsCred = gCredPagRefVenCC
                    sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                'si es Credito Normal
                Case gColocEstVigMor
                    nConsCred = gCredPagNorMorCC
                    sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                Case gColocEstVigNorm
                    nConsCred = gCredPagNorNorCC
                    sOpeRevIntDif = gCredRevIntDifVig 'WIOR 20150421
                Case gColocEstVigVenc
                    nConsCred = gCredPagNorVenCC
                    sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                End Select
            End If
        Else
            'Definir Codigo de Operacion de Pago
            Select Case nEstadoCred
                'Si es Credito refinanciado
                Case gColocEstRefMor
                    nConsCred = gCredPagRefMorDacion
                    sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                Case gColocEstRefNorm
                    nConsCred = gCredPagRefNorDacion
                    sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                Case gColocEstRefVenc
                    nConsCred = gCredPagRefVenDacion
                    sOpeRevIntDif = gCredRevIntDifRef 'WIOR 20150421
                'si es Credito Normal
                Case gColocEstVigMor
                    nConsCred = gCredPagNorMorDacion
                    sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
                Case gColocEstVigNorm
                    nConsCred = gCredPagNorNorDacion
                    sOpeRevIntDif = gCredRevIntDifVig 'WIOR 20150421
                Case gColocEstVigVenc
                    nConsCred = gCredPagNorVenDacion
                    sOpeRevIntDif = gCredRevIntDifVenc 'WIOR 20150421
            End Select
        End If
    End If 'WIOR 20140620
    End If
    If nConsCred = "" Then
        'MsgBox "No se ha definido la operación correctamente " & vbCrLf & _
               "Consulte con la Oficina de T.I", vbInformation, "AVISO"
        psMensajeValidacion = "No se ha definido la operación correctamente. Consulte con la Oficina de T.I"
        Exit Function
    End If

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set oCred = Nothing
    pnPlazo = IIf(IsNull(R!nPlazo), 0, R!nPlazo)
    R.Close
    Set R = Nothing

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    Set oCred = Nothing
    'Manejo de Operaciones VAC
    Dim bVAC As Boolean
    bVAC = IIf(IsNull(R!bVAC), False, R!bVAC)
    '**********************
    nNroCalen = R!nNroCalen
    nNroCalPar = R!nNroCalPar
    nMivivienda = IIf(IsNull(R!bMiVivienda), 0, R!bMiVivienda)
    nBuenPagador = IIf(IsNull(R!nCalPago), 0, R!nCalPago)
    nDiasAtrasoMov = IIf(IsNull(R!nDiasAtraso), 0, R!nDiasAtraso)
    nDatoVivienda = IIf(IsNull(R!nDatoVivienda), 0, R!nDatoVivienda) 'JUEZ 20140122
    lbRefVigente = IIf(IsNull(R!bRefVigente), 0, R!bRefVigente) 'ALPA 20150803*****
    R.Close
    Set R = Nothing
    'ALPA 20150801*********************************************
    Set oCred = New COMDCredito.DCOMCredito
    lnPorcentaje = oCred.RecuperaPorcentajeDiferidos(psCtaCod)
    Set oCred = Nothing
    '**********************************************************
    Set oBase = New COMDCredito.DCOMCredActBD

    If psMovnroTemp <> "" Then
        sMovNro = psMovnroTemp
    Else

        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    End If

    '*******************************************************************
    'Inserta o Actualiza Gastos Generados por la Operacion
    '*******************************************************************
    If pbInicioTrans = False Then
        Call oBase.dBeginTrans
    End If
    If IsArray(pMatGastosGen) Then
        Set oCred = New COMDCredito.DCOMCredito
        For i = 0 To pnNumGastosGen - 1
            If (MatrizEstadoCalendario(MatCalendDistrib) = gColocCalendEstadoPagado And pMatGastosGen(i, 4) = "CA") Or (pnPrepago = 1 And pMatGastosGen(i, 4) = "PP") Or pMatGastosGen(i, 4) = "PA" Then
                If oCred.ExisteGasto(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10)))) Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10))), CDbl(pMatGastosGen(i, 3)), , "", False, , True)
                Else
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10))), CDbl(pMatGastosGen(i, 3)), 0, "", False)
                End If
            End If
        Next i
        Set oCred = Nothing
    End If
    If pbInicioTrans = False Then
     Call oBase.dCommitTrans
     Set oBase = Nothing
    End If
    '**********************************************************************
    '****** En Caso de Que sea cancelacion Con un Desembolso
    '**********************************************************************
    bTran = True
    If pConnBase Is Nothing Then
        Set oBase = New COMDCredito.DCOMCredActBD
        If pbInicioTrans = False Then
            Call oBase.dBeginTrans
        End If
    Else
        Set oBase = pConnBase
        sOpeTpoMov = pConnBase.DevuelveOpeTpoMov(pnMovNroTem) 'PASI20170622, Mejoras en 100220 ****************
    End If
    dFechaTran = CDate(Format(Format(pdHoy, "dd/mm/yyyy") & " " & Format(oBase.dFechaHora, "hh:mm:ss"), "dd/mm/yyyy hh:mm:ss"))

    'Actualiza Producto
    If MatrizEstadoCalendario(MatCalendDistrib) = gColocCalendEstadoPagado Then
        nEstadoCred = gColocEstCancelado
    End If

    'If nMivivienda = 1 Then
    If bMIVIVIENDAAnt Then 'FRHU 20160525 INCIDENTE
        Call oBase.dUpdateProducto(psCtaCod, , MatrizSaldoCapitalMiVivienda(MatCalend, MatCalendDistrib, MatCalendDistribParalelo, MatCalendParalelo), nEstadoCred, pdHoy, nTransacc + 1, False)
    Else
        Call oBase.dUpdateProducto(psCtaCod, , MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCred, pdHoy, nTransacc + 1, False)
    End If

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    sLineaCred = R!cLineaCred
    R.Close
    Set R = Nothing
    '********* ACTIVAR PARA CONTRO DEL SALDOS DE LINEA
    'Set R = oBase.RecuperaLineasCreditoSaldo(sLineaCred, True)
    'nMontoColocado = R!nMontoColocado
    'R.Close
    'Set R = Nothing
    'nMontoColocado = nMontoColocado - pnMonto
    'Call oBase.dUpdateLineaCreditoSaldo(sLineaCred, , , nMontoColocado, , , False)

    'Actualiza ColocacCred
    dFecPend = MatrizFechaCuotaPendiente(MatCalend, MatCalendDistrib)
    If MatrizCuotaPendiente(MatCalend, MatCalendDistrib) = 0 Then
        nDiasAtraso = 0
    Else
        nDiasAtraso = pdHoy - dFecPend
        nDiasAtraso = oBase.CalcularDiasAtrasoDespuesPago(psCtaCod, nDiasAtraso, Format(pdHoy, "yyyymmdd")) 'CTI5 INICIO 20200803
    End If

    nIntPend = pnIntPend - pnIntPendPagado
    Call oBase.dUpdateColocacCred(psCtaCod, nDiasAtraso, , , , , , , MatrizCuotaPendiente(MatCalend, MatCalendDistrib), nIntPend, , , , , , , , , False, , , , , , , , , , , , , , , , , , , , pnPreParaAmpliacion)

    'Insert Movimientos
    If psMovnroTemp <> "" Then
        nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        If nMovNro = 0 Then
            Call oBase.dInsertMov(psMovnroTemp, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
            nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        End If
    Else
        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oBase.dGetnMovNro(sMovNro)
    End If
    pnMovNroTem = nMovNro
    'ARCV 20-06-2007 : OJO: NO HACER NADA SI NO GRABO EL MOV
    If nMovNro = 0 Then
        Call oBase.dRollbackTrans
        AmortizarCredito = "No se pudo grabar la operación"
        Exit Function
    End If
    '-----------
    
    '************************************************************************************
    'Si es una Pago en Otra Cmac
    '************************************************************************************
    If pbEnOtraCmac Then
        Call oBase.dInsertMovCMAC(nMovNro, psPersCmac, Format$(gTpoIFCmac, "00"), CInt(Mid(psCtaCod, 9, 1)), "", psNroDoc, nConsCred, pnMonto, False)
    End If
    '************************************************************************************
    'Si es Cancelado con un Desembolso Insertar su Referencia
    '************************************************************************************
    'If Not pConnBase Is Nothing Then
    '    Call oBase.dInsertMovRef(pnMovnro, nMovNro, False)
    'End If

    If pnTipoPago = gColocTipoPagoCheque Then
        Call oBase.dInsertaMovDoc(nMovNro, TpoDocCheque, psNroDoc, dFechaTran, False)
        'EJVG20140408 ***
        Call oBase.dInsertaCuentaDocumento(nMovNro, pnTpoDoc, psNroDoc, psPersCod, psIFTpo, psIFCta, psCtaCod, pnMonto + pnITF)
        Call oBase.dInsertaMovDocRec(nMovNro, pnTpoDoc, psNroDoc, psPersCod, psIFTpo, psIFCta, False)
        'END EJVG *******
    'RIRO20140530 ERS017 ***
    ElseIf pnTipoPago = gColocTipoPagoVoucher Then
        'CTI2 20181207 Comentado ***
        'Dim oVoucher As New COMDCaptaGenerales.DCOMCaptaMovimiento
        'oVoucher.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
        'If pnMovNroPend <> -1 Then oVoucher.ActualizaMovPendientesRend pnMovNroPend, pnMonto
        'CTI2 END
        oBase.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD 'CTI2 20181207
        If pnMovNroPend <> -1 Then oBase.ActualizaMovPendientesRend pnMovNroPend, pnMonto ' CTI2 20181207
    'END RIRO **************
    End If
    
    'Comentado by NAGL 20180609******************************************
    'VAPA20170923 FROM 60************************************************
    'If pnPreParaAmpliacion = 1 Then
                'nMontInDif = pnMontoIntDif
                'Set oCred = New COMDCredito.DCOMCredito
                'lbExistePreAmpliacion = oCred.ExistePreAmpliacion(psCtaCod, pdHoy)
                'Set oCred = Nothing
    
                'Set oCred = New COMDCredito.DCOMCredito
                'lbRegIntDif = oCred.ValidaRegIntDiferido(psCtaCod)
                'Set oCred = Nothing
      'End If
    'VAPA 20170923 from 60*************************************************
    'END NAGL 20180609*****************************************************
    
    If pnTipoPago <> gColocTipoPagoDacionPago Then
        'If nMivivienda = 1 Then
        If bMIVIVIENDAAnt Then 'FRHU 20160525 INCIDENTE
            nMontoPago = MatrizMontoPagado(MatCalendDistrib)
            'Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, IIf(pnMontoDesagio > 0, nMontoPago - pnMontoDesagio, nMontoPago), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, nMontoPago, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
        Else
            'Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, IIf(pnMontoDesagio > 0, pnMonto - pnMontoDesagio, pnMonto), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, pnMonto, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
             'VAPA 20171116 FROM 60************Comentado by NAGL 20180609********************
            'If pnPreParaAmpliacion = 1 Then
                    'If lbExistePreAmpliacion = False Then
                            'If lbRegIntDif = True Then
                                'Call oBase.dActualizaInteresDiferido(psCtaCod, nMontInDif, nMovNro)
                            'Else
                                'Call oBase.dInsertaInteresDiferido(psCtaCod, nMontInDif, nMovNro)
                            'End If
                        'Call oBase.dInsertMovCol(nMovNro, gCredIntDifeAmpliado, IIf(lbExistePreAmpliacion = False, psCtaCod, lsCtaCodNew), nNroCalen, nMontInDif, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
                    'Else
                      'If lbRegIntDif = True Then 'VAPA 20171211 FROM 60
                            'If CDbl(MatCalendDistrib(i, 4)) > 0 Or CDbl(MatCalendDistrib(i, 5)) > 0 Then 'VAPA 20171209 FROM 60
                            'Call oBase.dActualizaIntDifDesembolso(psCtaCod, CDbl(MatCalendDistrib(i, 4)) + CDbl(MatCalendDistrib(i, 5)), nMovNro)
                            'End If
                      'End If
                    'End If
            'End If
            'END VAPA from 60*********************END NAGL 20180609*****************************
            'ALPA 20150730******************
            If lnPorcentaje > 0# And lbRefVigente = 1 Then
                Call oBase.dInsertMovCol(nMovNro, "101109", psCtaCod, nNroCalen, Round(MatrizCapitalPagado(MatCalendDistrib) * lnPorcentaje, 2), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
                Call oBase.dInsertMovCol(nMovNro, "101110", psCtaCod, nNroCalen, Round(MatrizCapitalPagado(MatCalendDistrib), 2), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            End If
            '*******************************
        End If
    Else
        Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, pnMonto, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, pnNroDacion, pnPrepago)
    End If

    '*********  ITF  *****************
    If Not sOpeTpoMov = CStr(gCredPagoCuotasDebitoAuto) Then 'PASI20170622, Mejoras en 100220 ****************
        If Not pbEnOtraCmac Then
            Call oBase.dInsertMovCol(nMovNro, opeITFChequeEfect, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, opeITFChequeEfect, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
        Else
            'gITFCobroCargo
            If pnTipoPago = gColocTipoPagoCargoCta Then 'ARCV 08-09-2006
                Call oBase.dInsertMovCol(nMovNro, gITFCobroCargo, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
                Call oBase.dInsertMovColDet(nMovNro, gITFCobroCargo, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
            Else
                Call oBase.dInsertMovCol(nMovNro, gCredITFEOC, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
                Call oBase.dInsertMovColDet(nMovNro, gCredITFEOC, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
            End If
        End If
    End If
    'Carga Gastos en Memoria para Evitar Bloqueo
    MatGastosCred = DevuelveMatrizGastosCredito(NumregGastosCred, psCtaCod, nNroCalen)

    'Actualiza calendario (ColocCalendario y ColocCalendDet)
    For i = 0 To UBound(MatCalendDistrib) - 1
        If MatrizMontoPagado(MatCalendDistrib, CInt(MatCalendDistrib(i, 1))) > 0 Then
            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcAprobado, False, , dFechaTran)
        Else
            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcAprobado, False)
        End If
        'If nMivivienda = 1 Then  'Si es buen pagador se cancela sus otras cuotas
        If bMIVIVIENDAAnt Then  'FRHU 20160525 INCIDENTE
'            If pnCalPago = 1 Then
                If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPagado Then
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
                End If
'            End If
        End If
        'Amortizando Capital
        If CDbl(MatCalendDistrib(i, 3)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodCapital, , CDbl(MatCalendDistrib(i, 3)), , False, True)
            'Inserta Detalle Movimiento Capital
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapital, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 3)), False)
            'ALPA 20150730************************
            If lnPorcentaje > 0# And lbRefVigente = 1 Then
                Call oBase.dInsertMovColDet(nMovNro, "101109", psCtaCod, CLng(nNroCalen), gColocRFAInteresDiferido, CInt(MatCalendDistrib(i, 1)), Round(CDbl(MatCalendDistrib(i, 3)) * lnPorcentaje, 2), False)
                Call oBase.dInsertMovColDet(nMovNro, "101110", psCtaCod, CLng(nNroCalen), 1000, CInt(MatCalendDistrib(i, 1)), Round(CDbl(MatCalendDistrib(i, 3)), 2), False)
            End If
            '*************************************
        End If
        'Amortizando Interes Compensatorio
        If CDbl(MatCalendDistrib(i, 4)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresCompensatorio, , CDbl(MatCalendDistrib(i, 4)), , False, True)
            'Inserta Detalle Movimiento Interes Compensatorio
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompensatorio, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 4)), False)
        End If
        'Amortizando Interes Gracia
        If CDbl(MatCalendDistrib(i, 5)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresGracia, , CDbl(MatCalendDistrib(i, 5)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresGracia, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 5)), False)
        End If
        'Amortizando Interes Moratorio
        If CDbl(MatCalendDistrib(i, 6)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresMoratorio, , CDbl(MatCalendDistrib(i, 6)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresMoratorio, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 6)), False)
        End If
        'Amortizando Interes Reprog
        If CDbl(MatCalendDistrib(i, 7)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresReprogramado, , CDbl(MatCalendDistrib(i, 7)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresReprogramado, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 7)), False)
        End If
        'Amortizando Interes Suspenso
        If CDbl(MatCalendDistrib(i, 8)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresSuspenso, , CDbl(MatCalendDistrib(i, 8)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresSuspenso, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 8)), False) 'Juez 20120727
        End If

        'Amortizando Interes Compensatorio Vencido
        If CDbl(MatCalendDistrib(i, 11)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresCompVencido, , CDbl(MatCalendDistrib(i, 11)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompVencido, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 11)), False)
        End If


        'Amortizando Gastos
        If CDbl(MatCalendDistrib(i, 9)) > 0 Then
            nMontoGasto = CDbl(MatCalendDistrib(i, 9))
            'Set oCalend = New COMDCredito.DCOMCalendario
            'Set R = oCalend.RecuperaCalendarioGastos(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota)
            'Set oCalend = Nothing
            'Dim MatGastosCuota As Variant
            'Dim NumRegGastosCuota As Integer

            MatGastosCuota = DevuelveMatrizGastosCreditoCuota(NumRegGastosCuota, CInt(MatCalendDistrib(i, 1)), MatGastosCred, NumregGastosCred)

            For k = 0 To NumRegGastosCuota - 1
                If nMontoGasto >= CDbl(MatGastosCuota(k, 2)) Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), CLng(MatGastosCuota(k, 1)), , CDbl(MatGastosCuota(k, 2)), , False, True)
                    'Inserta Detalle Movimiento Gastos
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(MatGastosCuota(k, 1)), CInt(MatCalendDistrib(i, 1)), CDbl(MatGastosCuota(k, 2)), False)
                    nMontoGasto = nMontoGasto - CDbl(MatGastosCuota(k, 2))
                Else
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), CLng(MatGastosCuota(k, 1)), , nMontoGasto, , False, True)
                    'Inserta Detalle Movimiento Gastos
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(MatGastosCuota(k, 1)), CInt(MatCalendDistrib(i, 1)), CDbl(Format(nMontoGasto, "#0.00")), False)
                    nMontoGasto = 0
                End If

                nMontoGasto = CDbl(Format(nMontoGasto, "#0.00"))
                If nMontoGasto = 0 Then
                    Exit For
                End If
            Next k
            ' R.Close
             Set R = Nothing
        End If
    
        
        '************* Para el Manejo de Operaciones VAC
        If psProyectoActual = "H" And bVAC Then
            Set oCred = New COMDCredito.DCOMCredito
            'Insertamos el asiento por la diferencia de Capital
            If CDbl(MatCalendDistrib(i, 3)) > 0 Then
                Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalVAC, CInt(MatCalendDistrib(i, 1)), _
                                    Format(CDbl(MatCalendDistrib(i, 3)) / oCred.ObtenerIndiceVAC(pdHoy - 1), "#0.0000"), False)
                
                nCapitalVAC = nCapitalVAC + Format(CDbl(MatCalendDistrib(i, 3)) / oCred.ObtenerIndiceVAC(pdHoy - 1), "#0.0000")
            End If
            Set oCred = Nothing
        End If
        '*************************************************
        
        'WIOR 20150421 ***
        If nIntDiferido > 0 And nIntDiferidoPend > 0 Then
            If CDbl(MatCalendDistrib(i, 3)) > 0 Then
                nRevIntDif = CCur(Round((CDbl(MatCalendDistrib(i, 3)) / nPrestamo) * nIntDiferido, 2))
                nIntDiferidoPend = nIntDiferidoPend - nRevIntDif
                
                If nIntDiferidoPend < 0 Then
                    nRevIntDif = nRevIntDif + nIntDiferidoPend
                End If
                
                Call oBase.dInsertMovColDet(nMovNro, sOpeRevIntDif, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresDiferidoAmp, CInt(MatCalendDistrib(i, 1)), nRevIntDif, False)
                nRevIntDifAcum = nRevIntDifAcum + nRevIntDif
                nRevIntDif = 0
            End If
        End If
        'WIOR FIN ********
    Next i
    
    'WIOR 20150421 ***
    If nIntDiferido > 0 Then
        If MatrizCapitalPagado(MatCalendDistrib) > 0 Then
            If nRevIntDifAcum > 0 Then
                Call oBase.dInsertMovCol(nMovNro, sOpeRevIntDif, psCtaCod, CLng(nNroCalen), nRevIntDifAcum, 0, "", 0, 0#, nEstadoCredTemp, False)
            End If
        End If
        nRevIntDifAcum = 0
    End If
    'WIOR FIN ********
    
    'Amortizando Desagio si Hubiere
    If pnMontoDesagio > 0 Then
        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompDesagio, CInt(MatCalendDistrib(0, 1)), pnMontoDesagio, False)
    End If
    'JUEZ 20130925 Comision por PreCancelacion si hubiese **************
    If pnMontoComPreCanc > 0 Then
        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodGastoComisionPreCancelacion, 0, pnMontoComPreCanc, False)
    End If
    'END JUEZ **********************************************************

    '*****************************************************
    'Para Amortizar Segundo Tramo de MiVivienda
    '*****************************************************
    'If nMivivienda = 1 Then
    If bMIVIVIENDAAnt Then 'FRHU 20160525 INCIDENTE
        nMontoPago_2 = MatrizMontoPagado(MatCalendDistribParalelo)
        'If nMontoPago_2 > 0 Then

            'Call oBase.dInsertMovCol(nmovnro, nConsCred, psCtaCod, nNroCalPar, nMontoPago_2, 0, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalendParalelo, MatCalendDistribParalelo), nEstadoCredTemp, False, , pnPrepago)

            For i = 0 To UBound(MatCalendDistribParalelo) - 1
            If CInt(MatCalendDistrib(i, 2)) = "1" Then
                If MatrizMontoPagado(MatCalendDistribParalelo, CInt(MatCalendDistribParalelo(i, 1))) > 0 Then
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False, , dFechaTran)
                    'Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistribParalelo(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False, , dFechaTran)
                Else
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
                    'Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistribParalelo(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
                End If
                'Amortizando Capital
               ' If CDbl(MatCalendDistribParalelo(i, 3)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodCapital, , CDbl(MatCalendDistribParalelo(i, 3)), , False, True)
                    'Inserta Detalle Movimiento Capital
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodCapital, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 3)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodCapital, nMovNro, CDbl(MatCalendDistribParalelo(i, 3)), False)
                'End If
                'Amortizando Interes Compensatorio
                If CDbl(MatCalendDistribParalelo(i, 4)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompensatorio, , CDbl(MatCalendDistribParalelo(i, 4)), , False, True)
                    'Inserta Detalle Movimiento Interes Compensatorio
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresCompensatorio, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 4)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompensatorio, nMovNro, CDbl(MatCalendDistribParalelo(i, 4)), False)
                End If
                'Amortizando Interes Gracia
                If CDbl(MatCalendDistribParalelo(i, 5)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresGracia, , CDbl(MatCalendDistribParalelo(i, 5)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresGracia, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 5)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresGracia, nMovNro, CDbl(MatCalendDistribParalelo(i, 5)), False)
                End If
                'Amortizando Interes Moratorio
                If CDbl(MatCalendDistribParalelo(i, 6)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresMoratorio, , CDbl(MatCalendDistribParalelo(i, 6)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresMoratorio, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 6)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresMoratorio, nMovNro, CDbl(MatCalendDistribParalelo(i, 6)), False)
                End If
                'Amortizando Interes Reprog
                If CDbl(MatCalendDistribParalelo(i, 7)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresReprogramado, , CDbl(MatCalendDistribParalelo(i, 7)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresReprogramado, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 7)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresReprogramado, nMovNro, CDbl(MatCalendDistribParalelo(i, 7)), False)
                End If
                'Amortizando Interes Suspenso
                If CDbl(MatCalendDistribParalelo(i, 8)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresSuspenso, , CDbl(MatCalendDistribParalelo(i, 8)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresSuspenso, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 8)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresSuspenso, nMovNro, CDbl(MatCalendDistribParalelo(i, 8)), False)
                End If

                'Amortizando Interes Vencido
                If CDbl(MatCalendDistribParalelo(i, 11)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompVencido, , CDbl(MatCalendDistribParalelo(i, 11)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    'Call oBase.dInsertMovColDet(nmovnro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresCompVencido, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 11)), False)
                    Call oBase.dInsertaMovMiVivienda(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompVencido, nMovNro, CDbl(MatCalendDistribParalelo(i, 11)), False)
                End If
            End If
            Next i
        'End If

        'Actualiza Tabla de Calificacion Mivivienda
        If pnPrepago <> 1 Then
            For i = 0 To UBound(MatCalendDistrib) - 1
                If MatCalendDistrib(i, 2) = "1" Then
                    Call oBase.dUpdateColocCalifMiViv(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), dFechaTran, , CInt(MatCalendDistrib(i, 2)))
                End If
            Next i
        End If
    End If
    
    'JUEZ 20131227 ******************************************************************************
    If pnTipoPago = gColocTipoPagoCargoCta And psCtaCodCargo <> "" Then
        If Mid(psCtaCodCargo, 6, 3) = gCapAhorros Then
            'oBase.CapCargoCuentaAho pMatAho, psCtaCodCargo, pnMonto + pnITF, gAhoCargoCtaPagoCred, sMovNro, "Cargo a Cuenta Pago Crédito: " & psCtaCod, dFechaTran 'Comments PASI20170622, Mejoras en 100220 ****************
            'PASI20170622, Mejoras en 100220 ****************
            If Not sOpeTpoMov = CStr(gCredPagoCuotasDebitoAuto) Then
                oBase.CapCargoCuentaAho pMatAho, psCtaCodCargo, pnMonto + pnITF, gAhoCargoCtaPagoCred, sMovNro, "Cargo a Cuenta Pago Crédito: " & psCtaCod, dFechaTran
            Else
                oBase.CapCargoCuentaAho pMatAho, psCtaCodCargo, pnMonto, gAhoCargoCtaPagoCred, sMovNro, "Cargo a Cuenta Pago Crédito: " & psCtaCod, dFechaTran, , , , , , , , , , , , , , , pnITF, , gITFCobroCargo
            End If
            'PASI END****************************************
        Else
            oBase.CapCargoCuentaCTS pMatAho, psCtaCodCargo, pnMonto + pnITF, "220312", sMovNro, "Cargo a Cuenta Pago Crédito: " & psCtaCod, dFechaTran
        End If
        oBase.InsertaMovDoc nMovNro, TpoDocCtaCargoPagoCred, psCtaCod, Format(dFechaTran, "yyyymmdd")
    End If
    'END JUEZ ***********************************************************************************

    If pnTipoPago = gColocTipoPagoDacionPago Then
        Call oBase.dAnularColocGarantRec(pnNroDacion, gColocGarantRecEstadoCancelado, False)
    End If
    
    '***Agregado por ELRO el 20120404, según RFC023-2012
    If bPorAfectacion = True Then
        Call oBase.registrarColocacionPorAfectacion(nMovNro, False)
    End If
    '***Fin Agregado por ELRO***************************
    ''''''''''''''''''''
    ' Lavado de Dinero
''    If psPersLavDinero <> "" Then
''        Call oBase.dInsertaMovLavDinero(nmovnro, psTitLavDinero, psOrdLavDinero, psReaLavDinero, psBenLavDinero, psVisLavDinero, nTipoREU, nMontoAcu, sOrigen)
''    End If
    ''''''''''''''''''''
    CapitalPagado = 0
    CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistrib)
    'If nMivivienda = 1 Then
    If bMIVIVIENDAAnt Then 'ALPA20160723
        'CapitalPagado = CapitalPagado + MatrizCapitalPagadoMivivienda(MatCalendDistrib, psCtaCod, oBase)
         CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistribParalelo)
    End If
    'APRI20200709 POR COVID-19
    nInteresComPagado = 0
    nInteresComPagado = nInteresComPagado + MatrizIntCompPagado(MatCalendDistrib)
    'END APRI
    ''''''''''''''''''''
    ' Reversion de Garantia
    ''''''''''''''''''''
    'Call LiberaGarantiaPago(nMovNro, oBase, psCtaCod, psCodAge, psCodUser, pdHoy, nPrestamo, CapitalPagado, IIf(nEstadoCred = gColocEstCancelado, True, False))
    Call oBase.dLiberarGarantia(nMovNro, nConsCred, psCtaCod, CapitalPagado, nEstadoCred)  'EJVG20150819

    ''''''''''''''''''''
    'EJVG20151119 Se comentó asiento de avales
    ''JUEZ 20130429 *********************************
    'If nEstadoCred = gColocEstCancelado Then
    '    If bGarantAval Then
    '        Call oBase.dInsertMovCol(nMovNro, gReversionGarantAvales, psCtaCod, 0, nPrestamo, 0, "", 0, 0, 0, False)
    '        Call oBase.dInsertMovColDet(nMovNro, gReversionGarantAvales, psCtaCod, 0, 1000, 0, nPrestamo, False)
    '    End If
    'End If
    ''END JUEZ **************************************
    'JUEZ 20131022 *********************************
    If bReprogRoyaAmarilla Then
        Call oBase.dInsertMovCol(nMovNro, gReversionReprogRoyaAmarilla, psCtaCod, 0, CapitalPagado, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, gReversionReprogRoyaAmarilla, psCtaCod, 0, gColocConceptoCodCapitalReprogRoyaAmarilla, 0, CapitalPagado, False)
        If nEstadoCred = gColocEstCancelado Then
            Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionReprog, 1)
        End If
        oBase.dInsertMovRef nMovNro, nMovNroReversionReprog
    End If
    'END JUEZ **************************************
    'EJVG20140325 ***
    If bReprogDesNat Then
        Call oBase.dInsertMovCol(nMovNro, gReversionReprogDesNat, psCtaCod, 0, CapitalPagado, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, gReversionReprogDesNat, psCtaCod, 0, gColocConceptoCodCapitalReprogxDesNat, 0, CapitalPagado, False)
        If nEstadoCred = gColocEstCancelado Then
            Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogDesNat, 1)
        End If
        oBase.dInsertMovRef nMovNro, nMovNroReversionReprogDesNat
    End If
    'END EJVG *******
    'PASI 20170327 *********************************
    If bReprogZonaInundada Then
        Call oBase.dInsertMovCol(nMovNro, gReversionReprogZonaInundada, psCtaCod, 0, CapitalPagado, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, gReversionReprogZonaInundada, psCtaCod, 0, gColocConceptoCodCapitalReprogZonaInundada, 0, CapitalPagado, False)
        If nEstadoCred = gColocEstCancelado Then
            Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogZonaInundada, 1)
        End If
        oBase.dInsertMovRef nMovNro, nMovNroReversionReprogZonaInundada
    End If
    'PASI END***************************************
    'APRI20200415 POR COVID-19 *********************************
    If bReprogCovid19 Then
       'Call oBase.dInsertMovCol(nMovNro, "107337", psCtaCod, 0, CapitalPagado, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovCol(nMovNro, "107337", psCtaCod, 0, CapitalPagado + nInteresComPagado, 0, "", 0, 0, 0, False) 'APRI20200709 POR COVID-19
        Call oBase.dInsertMovColDet(nMovNro, "107337", psCtaCod, 0, 1080, 0, CapitalPagado, False)
        Call oBase.dInsertMovColDet(nMovNro, "107337", psCtaCod, 0, 1081, 0, nInteresComPagado, False) 'APRI20200709 POR COVID-19
        If nEstadoCred = gColocEstCancelado Then
            Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionCovid19, 1)
        End If
        oBase.dInsertMovRef nMovNro, nMovNroReversionCovid19
    End If
    'APRI END***************************************
    'JUEZ 20140122 ******************************************************************
    If Left(sTpoCredCod, 1) = "8" And DateDiff("D", dFecVig, "01/01/2013") <= 0 Then
        If nDatoVivienda = 1 Then
            Call oBase.dInsertMovCol(nMovNro, gReversionCapHipoPrimeraVivienda, psCtaCod, 0, CapitalPagado, 0, "", 0, 0, 0)
            Call oBase.dInsertMovColDet(nMovNro, gReversionCapHipoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, CapitalPagado, False)
        ElseIf nDatoVivienda = 2 Then
            Call oBase.dInsertMovCol(nMovNro, gReversionCapHipoNoPrimeraVivienda, psCtaCod, 0, CapitalPagado, 0, "", 0, 0, 0)
            Call oBase.dInsertMovColDet(nMovNro, gReversionCapHipoNoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, CapitalPagado, False)
        End If
    End If
    'END JUEZ ***********************************************************************
    
    'WIOR 20150914 ***
    If pnPreParaAmpliacion = 0 Then
        Call oBase.RegularPreparacionParaAmpliado(psCtaCod, pdHoy)
    End If
    'WIOR FIN ********
    
    If pConnBase Is Nothing Then
        If pbInicioTrans = False Then
            Call oBase.dCommitTrans
        End If
    End If

    If pConnBase Is Nothing Then
        'If nMivivienda = 1 Then
        If bMIVIVIENDAAnt Then 'FRHU 20160525 INCIDENTE
            'Temporal
            'Call EvaluacionBuenPagador(psCtaCod, pdHoy, psCodAge, psCodUser, nMovNro)

        End If
    End If
    
    '************* Para el Manejo de Operaciones VAC
    If psProyectoActual = "H" And bVAC Then
        Dim nSaldo As Double
        Dim nSaldoVAC As Double
        Dim nFactorVAC As Double
        Dim sSql As String
        Dim rs As ADODB.Recordset
                
        'If nMivivienda = 1 Then
        '    nSaldo = MatrizSaldoCapitalMiVivienda(MatCalend, MatCalendDistrib, MatCalendDistribParalelo)
        'Else
        '    nSaldo = MatrizSaldoCapital(MatCalend, MatCalendDistrib)
        'End If
        
        oBase.dBeginTrans
            
        sSql = "SELECT nSaldo,nSaldoVAC=ISNULL(nSaldoVAC,0),nIndiceVac " & _
               " FROM Producto P INNER JOIN ColocacCred C ON P.cCtaCod=C.cCtaCod,IndiceVAC I WHERE P.cCtaCod='" & psCtaCod & "' AND I.dIndiceVac='" & Format(pdHoy - 1, "mm-dd-yyyy") & "'"
        
        Set rs = oBase.CargaRecordSet(sSql)
        nSaldo = rs!nSaldo
        nSaldoVAC = rs!nSaldoVAC
        'nFactorVAC = Format(CapitalPagado / rs!nIndiceVac, "#0.0000")
        nFactorVAC = nCapitalVAC
        
        'Actualizamos el SaldoVAC
        sSql = "UPDATE ColocacCred SET nSaldoVAC=nSaldoVAC-" & nFactorVAC & " WHERE cCtaCod='" & psCtaCod & "'"
        oBase.coConex.Ejecutar sSql
        nSaldoVAC = nSaldoVAC - nFactorVAC
        If nSaldo = 0 And nSaldoVAC > 0 Then 'Se Cancelo totalmente el Credito
            sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
            Call oBase.dInsertMov(sMovNro, gCredAjusteDiferenciaVAC, "Movimiento por Ajuste VAC", gMovEstContabMovContable, gMovFlagVigente, False)
            nMovNro = oBase.dGetnMovNro(sMovNro)
            Call oBase.dInsertMovCol(nMovNro, gCredAjusteDiferenciaVAC, psCtaCod, nNroCalen, nSaldoVAC, 0, "", 0, 0, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, gCredAjusteDiferenciaVAC, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalVAC, 0, nSaldoVAC, False)
    
            'Actualizamos el SaldoVAC a 0
            sSql = "UPDATE ColocacCred SET nSaldoVAC=0 WHERE cCtaCod='" & psCtaCod & "'"
            oBase.coConex.Ejecutar sSql
        End If
        
        oBase.dCommitTrans
    
    End If
    '**********************************************
    
    If pConnBase Is Nothing Then
        Set oBase = Nothing
    End If

'    CapitalPagado = 0
'    CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistrib)
'    If nMivivienda = 1 Then
'        CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistribParalelo)
'    End If


    Exit Function

ErrorAmortizarPago:
    If bTran Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Sub ExtornarTransfARecuperaciones(ByVal psCtaCod As String, ByVal pnSaldoCap As Double, _
    ByVal pnDemanda As Boolean, ByVal pnDiasAtraso As Integer, ByVal pdHoy As Date, _
    ByVal psCodAge As String, ByVal psCodUser As String)


End Sub

Public Sub TransferirARecuperaciones(ByVal psCtaCod As String, ByVal pnSaldoCap As Double, _
    ByVal pnDemanda As Integer, ByVal pnDiasAtraso As Integer, ByVal pdHoy As Date, _
    ByVal psCodAge As String, ByVal psCodUser As String, ByVal pnNroCalen As Integer, _
    ByVal pnPrdEstado As Integer, Optional ByVal pnPorcGastoTransferencia As Double = 0, _
    Optional ByVal psMetLiquid As String = "GCIM", Optional ByVal psTipoProyecto As String = "", Optional ByVal psMensaje As String = "")
Dim MatCalend As Variant
Dim oBase As COMDCredito.DCOMCredActBD
Dim lnInteres As Double
Dim lnMora As Double
Dim lnGasto As Double
Dim dFechaEst As Date
Dim lsFechaHoraGrab As String
Dim sMovNro As String
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim pbTran As Boolean
Dim nMovNro As Long
Dim lsOpeConceptoCapital As Long
Dim oGen As COMFunciones.FCOMFechas
Dim nMontoTotal As Double
'JUEZ 20130429 **********************
Dim oCred As COMDCredito.DCOMCredito
Dim rs As ADODB.Recordset
Dim nPrestamo As Double
'Dim bGarantAval As Boolean
'END JUEZ ***************************
Dim bReprogRoyaAmarilla As Boolean 'JUEZ 20131022
Dim nMovNroReversionReprog As Long 'JUEZ 20131022
Dim bReprogDesNat As Boolean 'EJVG20140325
Dim nMovNroReversionReprogDesNat As Long 'EJVG20140325
Dim bReprogZonaInundada As Boolean 'PASI 20170328
Dim nMovNroReversionReprogZonaInundada As Long 'PASI 20170328
Dim sTpoCredCod As String, nDatoVivienda As Integer, dFecVig As Date 'JUEZ 20140122
'WIOR 20150421 ***
Dim nIntDiferido As Double
Dim sOpeTrasIntDif As String
nIntDiferido = 0
sOpeTrasIntDif = ""
'WIOR FIN ********

Select Case pnPrdEstado
    Case gColocEstVigNorm
        If pnDemanda = gColRecDemandaSi Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraNorm_JuCD   ' "1405"
        ElseIf pnDemanda = gColRecDemandaNo Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraNorm_JuSD  '  "1408"
        End If
    Case gColocEstVigMor
        If pnDemanda = gColRecDemandaSi Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraMoro_JuCD  '"1403"
        ElseIf pnDemanda = gColRecDemandaNo Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraMoro_JuSD  '"1406"
        End If
    Case gColocEstVigVenc
        If pnDemanda = gColRecDemandaSi Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraVenc_JuCD   ' "1404"
        ElseIf pnDemanda = gColRecDemandaNo Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraVenc_JuSD   ' "1407"
        End If
    Case gColocEstRefNorm
        If pnDemanda = gColRecDemandaSi Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraNorR_JuCD   ' "1411"
        ElseIf pnDemanda = gColRecDemandaNo Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraNorR_JuSD   '"1414"
        End If
    Case gColocEstRefMor
        If pnDemanda = gColRecDemandaSi Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraMorR_JuCD  ' "1409"
        ElseIf pnDemanda = gColRecDemandaNo Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraMorR_JuSD  '"1412"
        End If
    Case gColocEstRefVenc
        If pnDemanda = gColRecDemandaSi Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraVenR_JuSD  '"1410"
        ElseIf pnDemanda = gColRecDemandaNo Then
            lsOpeConceptoCapital = gColocConceptoCodCambCarteraVenR_JuSD  '"1413"
        End If
End Select

    On Error GoTo ErrorTransferirARecuperaciones
    pbTran = False
    
    '******************** Actualizar Tasas cuando pasa a Recuperaciones **************
    If psTipoProyecto = "C" Or psTipoProyecto = "M" Then
        'ActualizarProductoTasas (psCtaCod)
    Else
        If ActualizarProductoTasasH(psCtaCod, psMensaje) = False Then
            Exit Sub
        End If
    End If
    '*********************************************************************************
    
    MatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
    
    'ARCV 28-02-2007
    'lnInteres = MatrizInteresGastosAFecha(psCtaCod, MatCalend, pdHoy) - MatrizGastosFecha(psCtaCod, MatCalend) - MatrizInteresMorFecha(psCtaCod, MatCalend)
    'lnMora = MatrizInteresMorFecha(psCtaCod, MatCalend)
    'lnGasto = MatrizGastosFecha(psCtaCod, MatCalend)

    lnInteres = Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, MatCalend, pdHoy), "#0.00")
    lnMora = Format(ObtenerMoraVencida(pdHoy, MatCalend), "#0.00")
    Set oBase = New COMDCredito.DCOMCredActBD
    Dim RGas As ADODB.Recordset
    Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdHoy, "mm/dd/yyyy") & "')")
    lnGasto = RGas!nGasto
    Set RGas = Nothing
    Set oBase = Nothing
    '-------------
    
    Set oFunciones = New COMNContabilidad.NCOMContFunciones
    sMovNro = oFunciones.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    Set oFunciones = Nothing

    Set oGen = New COMFunciones.FCOMFechas
    lsFechaHoraGrab = oGen.fgFechaHoraGrab(sMovNro)
    Set oGen = Nothing

    'JUEZ 20130429 ******************************************
    Set oCred = New COMDCredito.DCOMCredito
    Set rs = oCred.RecuperaColocaciones(psCtaCod)
    nPrestamo = rs!nMontoCol
    sTpoCredCod = rs!cTpoCredCod 'JUEZ 20140122
    dFecVig = rs!dVigencia 'JUEZ 20140122
    Set oCred = Nothing
    Set rs = Nothing
    'EJVG20151119 Se comentó asiento reversión de avales
    'Set oCred = New COMDCredito.DCOMCredito
    'Set rs = oCred.RecuperaGarantes(psCtaCod)
    'Set oCred = Nothing
    'bGarantAval = False
    'If Not rs.EOF Then
    '    bGarantAval = True
    'End If
    'Set rs = Nothing
    'END JUEZ ***********************************************
    'JUEZ 20131022 ******************************************
    Set oCred = New COMDCredito.DCOMCredito
    bReprogRoyaAmarilla = False
    bReprogZonaInundada = False 'PASI20170405
    Set rs = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogRoyaAmarilla)
    If rs.RecordCount > 0 Then
        bReprogRoyaAmarilla = True
        nMovNroReversionReprog = rs!nMovNro
    End If
    Set oCred = Nothing
    'END JUEZ ***********************************************
    'EJVG20140325 ***
    Set oCred = New COMDCredito.DCOMCredito
    Set rs = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogDesastreNat)
    If rs.RecordCount > 0 Then
        bReprogDesNat = True
        nMovNroReversionReprogDesNat = rs!nMovNro
    End If
    Set oCred = Nothing
    'END EJVG *******
    'PASI 20170328 ******************************************
    Set oCred = New COMDCredito.DCOMCredito
    Set rs = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogZonaInundada)
    If rs.RecordCount > 0 Then
        bReprogZonaInundada = True
        nMovNroReversionReprogZonaInundada = rs!nMovNro
    End If
    Set oCred = Nothing
    'PASI END ***********************************************
    'JUEZ 20140122 **************************************
    Set oCred = New COMDCredito.DCOMCredito
    Set rs = oCred.RecuperaColocacCred(psCtaCod)
    nDatoVivienda = IIf(IsNull(rs!nDatoVivienda), 0, rs!nDatoVivienda)
    Set oCred = Nothing
    Set rs = Nothing
    'END JUEZ *******************************************

    'WIOR 20150428 ***
    nIntDiferido = 0
    sOpeTrasIntDif = ""
    
    Set oCred = New COMDCredito.DCOMCredito
    Set rs = oCred.ObtenerInteresDiferidoPendCredito(psCtaCod)
    If rs.RecordCount > 0 Then
        nIntDiferido = IIf(IsNull(rs!nIntDifPend), 0, rs!nIntDifPend)
    End If
    
    If pnPrdEstado = gColocEstVigNorm Or pnPrdEstado = gColocEstVigVenc Or pnPrdEstado = gColocEstVigMor Then
        If pnPrdEstado = gColocEstVigNorm Then
            sOpeTrasIntDif = gCredTransRecupIntDifVig
        End If
        
        If pnPrdEstado = gColocEstVigVenc Or pnPrdEstado = gColocEstVigMor Then
            sOpeTrasIntDif = gCredTransRecupIntDifVenc
        End If
    End If
    Set oCred = Nothing
    Set rs = Nothing
    'WIOR FIN ********
    
    Set oBase = New COMDCredito.DCOMCredActBD

    pbTran = True
    oBase.dBeginTrans
    Call oBase.dUpdateProducto(psCtaCod, , , gColocEstRecVigJud, lsFechaHoraGrab, , False)
    Call oBase.dUpdateColocaciones(psCtaCod, , , , , , , , , sMovNro)

    If Len(psMetLiquid) = 0 Then
        psMetLiquid = "GCIM"
    End If
    Call oBase.dInsertColocRecup(psCtaCod, lsFechaHoraGrab, 0, lnInteres, lnMora, lnGasto, _
                 0, psMetLiquid, 0, pnDemanda, pnNroCalen, False)
    Call oBase.dInsertColocacEstado(psCtaCod, lsFechaHoraGrab, gColocEstRecVigJud, 0, pnSaldoCap, "Transferencia a Recuperaciones", _
            0, 0, 0, 0, 0, 0, 0, 0)
    ' Insert ColocRecupExpediente

    Call oBase.dInsertColocRecupExpediente(psCtaCod, "", 0, Mid(psCtaCod, 9, 1), gColRecViaProcNoEspecificado, 0, False)
    ' Insert Mov
    Call oBase.dInsertMov(sMovNro, gColRecOpePasoARecup, "Transferencia a Recuperaciones", gMovEstContabMovContable, gMovFlagVigente, False)
    nMovNro = oBase.dGetnMovNro(sMovNro)
    
    ' ******** Nuevo Adecuacion AVMM -21-11-2006 ***********
    nMontoTotal = 0
    If lnInteres > 0 Then
        nMontoTotal = nMontoTotal + lnInteres
    End If
    If lnMora > 0 Then
        nMontoTotal = nMontoTotal + lnMora
    End If
    If lnGasto > 0 Then
        nMontoTotal = nMontoTotal + lnGasto
    End If
    nMontoTotal = nMontoTotal + pnSaldoCap
    ' ********************************************************
    
    ' Insert MovCol
    'Call oBase.dInsertMovCol(nmovnro, gCredPasoARecup, psCtaCod, 0, pnSaldoCap, pnDiasAtraso, "", 0, 0, False)
    Call oBase.dInsertMovCol(nMovNro, gCredPasoARecup, psCtaCod, 0, nMontoTotal, pnDiasAtraso, "", 0, 0, False)
    ' Insert MovColDet
    'Capital
    Call oBase.dInsertMovColDet(nMovNro, gCredPasoARecup, psCtaCod, 0, lsOpeConceptoCapital, 0, pnSaldoCap, False)
    'Int Compensatorio
    If lnInteres > 0 Then
        Call oBase.dInsertMovColDet(nMovNro, gCredPasoARecup, psCtaCod, 0, gColRecConceptoCodInteresCompensatorio, 0, lnInteres, False)
    End If
    'Int Moratorio
    If lnMora > 0 Then
        Call oBase.dInsertMovColDet(nMovNro, gCredPasoARecup, psCtaCod, 0, gColRecConceptoCodInteresMoratorio, 0, lnMora, False)
    End If
    'Gasto
    If lnGasto > 0 Then
        dFechaEst = pdHoy 'CROB20171125
        Call oBase.dInsertColocRecupGastos(psCtaCod, 1, gColRecConceptoCodGastoCobranza, dFechaEst, lnGasto, 0, gColRecGastoEstPendiente, "Gasto Transferido Recuperaciones")
        Call oBase.dInsertMovColDet(nMovNro, gCredPasoARecup, psCtaCod, 0, gColRecConceptoCodGastoCobranza, 0, lnGasto, False)
    End If
    'EJVG20151119 Se comentó asiento reversión de avales
    ''JUEZ 20130429 ***************************************
    'If bGarantAval Then
    '    Call oBase.dInsertMovCol(nMovNro, gReversionGarantAvales, psCtaCod, 0, nPrestamo, 0, "", 0, 0, 0, False)
    '    Call oBase.dInsertMovColDet(nMovNro, gReversionGarantAvales, psCtaCod, 0, 1000, 0, nPrestamo, False)
    'End If
    ''END JUEZ ********************************************
    'JUEZ 20131022 *********************************
    If bReprogRoyaAmarilla Then
        Call oBase.dInsertMovCol(nMovNro, gReversionReprogRoyaAmarilla, psCtaCod, 0, pnSaldoCap, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, gReversionReprogRoyaAmarilla, psCtaCod, 0, gColocConceptoCodCapitalReprogRoyaAmarilla, 0, pnSaldoCap, False)
        Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionReprog, 1)
        Call oBase.dInsertMovRef(nMovNro, nMovNroReversionReprog)
    End If
    'END JUEZ **************************************
    'EJVG20140325 ***
    If bReprogDesNat Then
        Call oBase.dInsertMovCol(nMovNro, gReversionReprogDesNat, psCtaCod, 0, pnSaldoCap, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, gReversionReprogDesNat, psCtaCod, 0, gColocConceptoCodCapitalReprogxDesNat, 0, pnSaldoCap, False)
        Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogDesNat, 1)
        Call oBase.dInsertMovRef(nMovNro, nMovNroReversionReprogDesNat)
    End If
    'END EJVG *******
    'PASI 20170328 *********************************
    If bReprogZonaInundada Then
        Call oBase.dInsertMovCol(nMovNro, gReversionReprogZonaInundada, psCtaCod, 0, pnSaldoCap, 0, "", 0, 0, 0, False)
        Call oBase.dInsertMovColDet(nMovNro, gReversionReprogZonaInundada, psCtaCod, 0, gColocConceptoCodCapitalReprogZonaInundada, 0, pnSaldoCap, False)
        Call oBase.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogZonaInundada, 1)
        Call oBase.dInsertMovRef(nMovNro, nMovNroReversionReprogZonaInundada)
    End If
    'END PASI***************************************
    'JUEZ 20140122 **********************************************
    If Left(sTpoCredCod, 1) = "8" And DateDiff("D", dFecVig, "01/01/2013") <= 0 Then
        If nDatoVivienda = 1 Then
            Call oBase.dInsertMovCol(nMovNro, gReversionCapHipoPrimeraVivienda, psCtaCod, 0, pnSaldoCap, 0, "", 0, 0, 0)
            Call oBase.dInsertMovColDet(nMovNro, gReversionCapHipoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnSaldoCap, False)
        ElseIf nDatoVivienda = 2 Then
            Call oBase.dInsertMovCol(nMovNro, gReversionCapHipoNoPrimeraVivienda, psCtaCod, 0, pnSaldoCap, 0, "", 0, 0, 0)
            Call oBase.dInsertMovColDet(nMovNro, gReversionCapHipoNoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnSaldoCap, False)
        End If
    End If
    'END JUEZ ***************************************************
    
    'WIOR 20150428 ***
    If nIntDiferido > 0 And Trim(sOpeTrasIntDif) <> "" Then
        Call oBase.dInsertMovCol(nMovNro, sOpeTrasIntDif, psCtaCod, 0, nIntDiferido, 0, "", 0, 0, 0)
        Call oBase.dInsertMovColDet(nMovNro, sOpeTrasIntDif, psCtaCod, 0, gColocConceptoCodInteresDiferidoAmp, 0, nIntDiferido, False)
    End If
    'WIOR FIN ********
    
    Call oBase.dCommitTrans
    Set oBase = Nothing
    Exit Sub

ErrorTransferirARecuperaciones:
    If pbTran Then
        Call oBase.dRollbackTrans
    End If
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Sub


Public Sub AsignarGastoLoteCredito(ByVal pnRanIni As Double, ByVal pnRanFin As Double, _
    ByVal pnAplicado As ColocCalendApl, ByVal psCtaCod As String, ByVal psCodGasto As String, _
    ByVal pnValorGasto As Double, ByVal pnTipoValor As Integer)

Dim oDCred As COMDCredito.DCOMCredito
Dim oBase As COMDCredito.DCOMCredActBD
Dim R As ADODB.Recordset
Dim nMonto As Double
Dim pbTran As Boolean
    'Tipo Valor 1:Valor
    '           2: Porcentaje
    On Error GoTo ErrorAsignarGastoLoteCredito
    pbTran = False
    Set oDCred = New COMDCredito.DCOMCredito
    Set R = oDCred.RecuperaCuotasParaAsignarGasto(pnRanIni, pnRanFin, pnAplicado, psCtaCod, psCodGasto)
    Set oDCred = Nothing
    Set oBase = New COMDCredito.DCOMCredActBD
    Call oBase.dBeginTrans
    pbTran = True
    Do While Not R.EOF
        If pnTipoValor = 1 Then
            nMonto = pnValorGasto
        Else
            nMonto = CDbl(Format((pnValorGasto / 100) * R!nMontoCuota))
        End If
        If nMonto > 0 Then
            Call oBase.dInsertColocCalendDet(psCtaCod, R!nNroCalen, pnAplicado, R!nCuota, CLng(psCodGasto), nMonto, 0, "", False)
        End If
        R.MoveNext
    Loop
    Call oBase.dCommitTrans
    R.Close
    Set R = Nothing
    Set oBase = Nothing
    Exit Sub

ErrorAsignarGastoLoteCredito:
    If pbTran Then
        Call oBase.dRollbackTrans
    End If
    Err.Raise Err.Number, "Error En Proceso AsignarGastoLoteCredito", Err.Description

End Sub

Public Function EvaluaNota(ByVal pnDiasAtrasoAcum As Integer) As Integer

    If pnDiasAtrasoAcum = 0 Then
        EvaluaNota = 1
    End If
    If pnDiasAtrasoAcum > 0 And pnDiasAtrasoAcum <= 3 Then
        EvaluaNota = 2
    End If
    If pnDiasAtrasoAcum > 3 And pnDiasAtrasoAcum <= 5 Then
        EvaluaNota = 3
    End If
    If pnDiasAtrasoAcum > 5 And pnDiasAtrasoAcum <= 7 Then
        EvaluaNota = 4
    End If
    If pnDiasAtrasoAcum > 7 Then
        EvaluaNota = 5
    End If
End Function

Public Sub ActualizarNotaCredito(ByVal psCtaCod As String, ByVal pnNota As Integer, ByVal pdHoy As Date, ByVal psComent As String)
Dim oBase As COMDCredito.DCOMCredActBD
Dim dFecha As Date
    On Error GoTo ErrorActualizarNotaCredito
    Set oBase = New COMDCredito.DCOMCredActBD
    dFecha = CDate(Format(Format(pdHoy, "dd/mm/yyyy") & " " & Format(oBase.dFechaHora, "hh:mm:ss"), "dd/mm/yyyy hh:mm:ss"))
    Call oBase.dInsertColocCalificacionAnalista(psCtaCod, dFecha, pnNota, psComent, "A", False)
    Set oBase = Nothing

    Exit Sub

ErrorActualizarNotaCredito:
        Err.Raise Err.Number, "Error En Proceso ActualizarNotaCredito", Err.Description

End Sub

Public Sub ActualizaMetasAnalista(ByVal psCodPers As String, ByVal pnTipoMeta As ColocTipoMetas, _
     ByVal pdInicial As Date, ByVal pdFinal As Date, ByVal pnTipoAct As Integer, _
     ByVal pnMoneda As Integer, Optional pMatMontos As Variant)

Dim i As Integer
Dim oBase As COMDCredito.DCOMCredActBD
Dim pbTran As Boolean
'Tipo de Actualizacion 1:Nuevo
'                      2: Modificacion
'                      3: Eliminar

    On Error GoTo ErrorActualizaMetasAnalista
    pbTran = False
    Set oBase = New COMDCredito.DCOMCredActBD
    Select Case pnTipoAct
        Case 1
            oBase.dBeginTrans
            pbTran = True
            For i = 0 To UBound(pMatMontos) - 1
                Call oBase.dInsertColocMetasAnalista(psCodPers, pnTipoMeta, CInt(pMatMontos(i, 1)), pdInicial, pdFinal, CDbl(pMatMontos(i, 0)), pnMoneda, False)
            Next i
            oBase.dCommitTrans
        Case 2
            oBase.dBeginTrans
            pbTran = True
            For i = 0 To UBound(pMatMontos) - 1
                Call oBase.dUpdateColocMetasAnalista(psCodPers, pnTipoMeta, CInt(pMatMontos(i, 1)), pdInicial, pdFinal, CDbl(pMatMontos(i, 0)), pnMoneda, False)
            Next i
            oBase.dCommitTrans
        Case 3
            Call oBase.dDeleteColocMetasAnalista(psCodPers, pnTipoMeta, pdInicial, pdFinal, pnMoneda, False)
    End Select
    Set oBase = Nothing

    Exit Sub

ErrorActualizaMetasAnalista:
    If pbTran Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso ActualizaMetasAnalista", Err.Description

End Sub

Public Function ValidaRechazoRetiroCredito(ByVal psCtaCod As String, ByVal pbRefinanc As Boolean, ByVal pnTipoAcc As Integer) As String
Dim oDCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset

    ValidaRechazoRetiroCredito = ""
    If pnTipoAcc = 2 Then
        'Que no se haya pagado cuotas de una refinanciacion
        If pbRefinanc Then
            Set oDCred = New COMDCredito.DCOMCredito
            Set R = oDCred.RecuperaProducto(psCtaCod)
            Set oDCred = Nothing
            If R!nTransacc >= 1 Then
                ValidaRechazoRetiroCredito = "No se puede retirar este credito porque ya se han realizados pagos"
            End If
        End If
    End If
End Function

Public Function RechazoRetiroCredito(ByVal psCtaCod As String, ByVal psComent As String, _
        ByVal pnMotivo As ColocMotivRechazo, ByVal pdHoy As Date, ByVal psCodAge As String, _
        ByVal psCodUser As String, ByVal pnMonto As Double, Optional ByVal pnTipoAcc As Integer = 1, _
        Optional pbRefinanc As Boolean = False) As String

Dim oBase As COMDCredito.DCOMCredActBD
'Dim R As ADODB.Recordset
Dim RRef As ADODB.Recordset
Dim oDCred As COMDCredito.DCOMCredito
Dim nMov As Long
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim sMovNro As String
Dim nMovNro As Long
Dim bTran As Boolean
Dim lnMovNroRefinanc As Long 'EJVG20140326
    '1:Rechazo
    '2:Retiro
    On Error GoTo ErrorRechazoRetiroCredito
    bTran = False
    RechazoRetiroCredito = ValidaRechazoRetiroCredito(psCtaCod, pbRefinanc, pnTipoAcc)

    If RechazoRetiroCredito <> "" Then
        Exit Function
    End If
    Set oDCred = New COMDCredito.DCOMCredito

    If pnTipoAcc = 2 Then
        If pbRefinanc Then
            nMov = oDCred.RecuperaMov(psCtaCod, gCredRefinanciacion)
        Else
            nMov = oDCred.RecuperaMov(psCtaCod, gCredAprobacion)
        End If
    End If
    If pnTipoAcc = 2 And pbRefinanc Then
        Set RRef = oDCred.RecuperaColocacRefinanc(psCtaCod)
    End If
    'Set R = oDCred.RecuperaCorresponCred(psCtaCod)
    Set oDCred = Nothing
    'If R.RecordCount > 0 Then
    '    Set oBase = New COMDCredito.DCOMCredactBD
    '    Call oBase.dUpdatecorresponsalia(psCtaCod)
    '    R.Close
    '    Set R = Nothing
    '    Set oBase = Nothing
    'Else
    '    R.Close
    '    Set R = Nothing
    'End If
    '-------
    Set oFunciones = New COMNContabilidad.NCOMContFunciones
    sMovNro = oFunciones.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    Set oFunciones = Nothing

    Set oDCred = New COMDCredito.DCOMCredito
    'Set R = oDCred.RecuperaColocGarantia(psCtaCod)
    Set oDCred = Nothing

    Set oBase = New COMDCredito.DCOMCredActBD
    'Actualiza ColocacEstado
    oBase.dBeginTrans
    bTran = True
    If pnTipoAcc = 1 Then
        Call oBase.dInsertColocacEstado(psCtaCod, oBase.dFechaHora(Format(pdHoy, "dd/mm/yyyy")), _
            gColocEstRech, 0, pnMonto, psComent, 0, 0, 0, 0, 0, 0, 0, 0, False, pnMotivo)
    Else
        Call oBase.dInsertColocacEstado(psCtaCod, oBase.dFechaHora(Format(pdHoy, "dd/mm/yyyy")), _
            gColocEstRetirado, 0, pnMonto, psComent, 0, 0, 0, 0, 0, 0, 0, 0, False, pnMotivo)
    End If

    'Actualiza Producto
    If pnTipoAcc = 1 Then
        Call oBase.dUpdateProducto(psCtaCod, , , gColocEstRech, oBase.dFechaHora(Format(pdHoy, "dd/mm/yyyy")), , False)
    Else
        Call oBase.dUpdateProducto(psCtaCod, , , gColocEstRetirado, oBase.dFechaHora(Format(pdHoy, "dd/mm/yyyy")), , False)
    End If
    'EJVG20150930 ***
    'Actualiza Garantias
    'Do While Not R.EOF
    '    'ARCV 20-04
    '    'Call oBase.dUpdateGarantias(R!cTpoDoc, R!cNroDoc, R!nGravado, 2, False)
    '    Call oBase.dUpdateGarantias(R!cTpoDoc, R!cNroDoc, R!nGravado, 3, False)
    '    Call oBase.dDeleteColocGarantia(R!cNumGarant, psCtaCod, False)
    '    R.MoveNext
    'Loop
    'R.Close
    'Set R = Nothing
    Call oBase.EliminarCoberturaGarantia(psCtaCod)
    'END EJVG *******

    'ActualizaMov
    If pnTipoAcc = 2 Then
        lnMovNroRefinanc = oBase.dRecuperaMovimientoAprobacionxReprog(psCtaCod) 'EJVG20140326
        Call oBase.dUpdateMov(IIf(lnMovNroRefinanc > 0, lnMovNroRefinanc, nMov), , , , gMovFlagExtornado, False)
        Call oBase.dInsertMov(sMovNro, gCredExtAprobacion, "Extorno de Aprobacion Con Refinanciacion", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oBase.GetnMovNro(sMovNro)
        Call oBase.dInsertMovCol(nMovNro, gCredExtAprobacion, psCtaCod, 0, pnMonto, 0, "", 0, 0, False)
        'Call oBase.dInsertMovRef(nMovNro, nMov, False)
        If lnMovNroRefinanc > 0 Then 'EJVG20140326
            oBase.dExtornaCredReprogNatEspeciales2 lnMovNroRefinanc
        End If
    End If
    If pnTipoAcc = 2 And pbRefinanc Then 'Si es Retiro de Refinanciacion
        Do While Not RRef.EOF

            Call oBase.dUpdateProducto(RRef!cCtaCodref, , , gColocEstVigVenc, , , False)
            RRef.MoveNext
        Loop
        RRef.Close
        Set RRef = Nothing
    End If
    'WIOR 20140129 **************************************
     Call oBase.ActualizaCredVinculados(psCtaCod, "", 1, 3)
    'WIOR FIN *******************************************
    oBase.dCommitTrans
    
'    Movimiento de Retiro de Credito COEMNTADO AVMM - 20-05-2006
'    sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
'    Call oBase.dInsertMov(sMovNro, gCredRetiroMov, "", gMovEstContabMovContable, gMovFlagVigente, False)
'    nmovnro = oBase.dGetnMovNro(sMovNro)
'    'pnMovNro = nmovnro
'
'    Call oBase.dInsertMovCol(nmovnro, gCredRetiroMov, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0)
'    Call oBase.dInsertMovColDet(nmovnro, gCredRetiroMov, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto)

    
    Set oBase = Nothing

    Exit Function

ErrorRechazoRetiroCredito:
    If bTran Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function AmortizarPagoLote(ByVal MatPagos As Variant, ByVal pnTipoPago As ColocTipoPago, ByVal pdHoy As Date, _
    ByVal psNomAge As String, ByVal psCodAge As String, ByVal psCodUsu As String, _
    ByVal sLpt As String, ByVal psNomInstitucion As String, Optional psNroDoc As String = "", Optional ByVal pbImpBoletas As Boolean = False, _
    Optional ByVal pbCobrarMora As Boolean = False, _
    Optional ByVal psNomCmac As String = "", _
    Optional ByRef psImpreBol As String = "", Optional ByVal psProyectoActual As String = "", _
    Optional ByRef psCtaError As String = "", _
    Optional ByVal psPersCod As String = "", Optional ByVal psIFTpo As String = "01", Optional ByVal psIFCta As String = "", Optional ByRef psnMovNro As String = "") As String
    'Optional ByRef psnMovNro As String = "" ERS073-2017 Agrego JIPR22062018
'EJVG20140408 Se agregó psPersCod, psIFTpo, psIFCta
Dim MatCalend() As Variant
Dim MatGastosCancelacion() As Variant
Dim MatCalendDistribuido() As Variant
Dim pMatGastosGen As Variant
Dim pMatCalend As Variant
Dim i, k As Integer
Dim oBase As COMDCredito.DCOMCredActBD
Dim oConstante As COMDConstantes.DCOMConstantes
Dim oDoc As NCOMCredDoc
Dim sMovNro As String
Dim nMovNro As Long
Dim oFunciones As New COMNContabilidad.NCOMContFunciones
Dim nConsCred As String
Dim sError As String
Dim sCadImp As String
Dim MatTemp As Variant
Dim dFechaTran As Date
Dim oGastos As NCOMGasto
Dim oCred As COMDCredito.DCOMCredito
Dim nNumGastosCancel As Integer
Dim nMontoGastoCargo As Double
Dim oFecha As COMDConstSistema.DCOMGeneral

Dim oMov As COMDMov.DCOMMov


'Add By gitu 19-06-2009
Dim lnMonPago As Double
Dim nMonIntGra As Double
Dim AcumMontoAPagar As Double
Dim AcumMontoValGra As Double
Dim J As Integer
Dim C As Integer
Dim x As Integer
Dim lbCobGra As Boolean
Dim nInterFechaGra As Double 'Add by GITU 07-05-2009

Dim nDeudaFecha As Double 'ARCV 08-09-2006

Dim lnPorcentaje As Currency 'ALPA 20150803***************************
    On Error GoTo ErrorAmortizarPagoLote

    'Comentado por JUEZ 20150410
    'Necesitamos la Fecha y la Hora Actual
    'Set oFecha = New COMDConstSistema.DCOMGeneral
    'pdHoy = oFecha.FechaHora(pdHoy)
    'Set oFecha = Nothing
    
    Set oConstante = New COMDConstantes.DCOMConstantes
    Set oDoc = New NCOMCredDoc
    Set oFunciones = New COMNContabilidad.NCOMContFunciones
    'sMovNro = oFunciones.GeneraMovNro(Format(pdHoy, "mm/dd/yyyy"), psCodAge, psCodUsu)
    sMovNro = oFunciones.GeneraMovNro(pdHoy, psCodAge, psCodUsu) 'JUEZ 20150410
    Set oFunciones = Nothing

    Set oBase = New COMDCredito.DCOMCredActBD

    ReDim MatCalend(UBound(MatPagos))
    ReDim MatCalendDistribuido(UBound(MatPagos))
    ReDim MatGastosCancelacion(UBound(MatPagos))
    Set oGastos = New NCOMGasto
    
    For i = 0 To UBound(MatPagos) - 1
        MatCalend(i) = RecuperaMatrizCalendarioPendiente(MatPagos(i, 0))
        '***********NAGL 20190719**************'
        'If Not pbCobrarMora Then
            'MatTemp = MatCalend(i)
            'For k = 0 To UBound(MatTemp) - 1
                'MatTemp(k, 6) = 0
                ''05-05-2005
                'MatTemp(k, 11) = 0
                '*******************
            'Next k
            'MatCalend(i) = MatTemp
        'End If
        '********Comentado by NAGL 20190719 Según ERS036-2018,
        '******para que se considere el Int.Moratorio en la condonación
        
        'Add By Gitu 19-06-2009 para corregir el pago en lote
        'lnMonPago = MatrizMontoAPagar(MatCalend(i), pdHoy, nMonIntGra)
        
        'RIRO 20210609 ADD *****
        If Not pbCobrarMora Then
            MatTemp = MatCalend(i)
            For k = 0 To UBound(MatTemp) - 1
                MatTemp(k, 11) = 0
            Next k
            MatCalend(i) = MatTemp
        End If
        'END RIRO **************
        
        If MatPagos(i, 1) = MatPagos(i, 6) Then
            MatPagos(i, 1) = MatPagos(i, 1) - nMonIntGra
        End If
        
'        For c = 0 To UBound(MatCalend) - 1
'            If pdHoy >= CDate(MatCalend(c)) Then
'                For J = 3 To 9
'                    AcumMontoAPagar = AcumMontoAPagar + CDbl(MatCalend(c))
'                Next J
'                'Add by gitu 18-06-2009 se agrego para que cargue el interes de gracia
'                AcumMontoAPagar = AcumMontoAPagar + CDbl(MatCalend(c))
'                If Round(AcumMontoAPagar, 2) <= Round(MatPagos(i), 2) Then
'                    nMonIntGra = nMonIntGra + CDbl(MatCalend(c))
'                End If
'            End If
'        Next c
        
        'ARCV 27-04-2007
        'pMatCalend = MatCalend(i)
        'MatGastosCancelacion(i) = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosCancel, pdHoy, MatPagos(i, 0), 1, "PA", , , CDbl(MatPagos(i, 6)), MatrizMontoCapitalAPagar(pMatCalend, pdHoy), pMatCalend(0, 1), , , , , CInt(MatPagos(i, 7)))
        'nMontoGastoCargo = MontoTotalGastosGenerado(MatGastosCancelacion(i), nNumGastosCancel, Array("CA", "PA", ""))

        'pMatCalend(0, 9) = Format(CDbl(pMatCalend(0, 9)) + nMontoGastoCargo, "#0.00")
        'MatCalend(i) = pMatCalend
        '-------------
        
        'ARCV 07-03-2007 (Verificar si va pagar la deuda total... Cancelacion de Credito)
        'MatCalendDistribuido(i) = MatrizDistribuirMonto(MatCalend(i), CDbl(Format(MatPagos(i, 1), "#0.00")), MatPagos(i, 4))
        'nDeudaFecha = ObtenerDeudaFechaTotal(MatPagos(i, 0), MatCalend(i), Format(pdHoy, "mm/dd/yyyy"))
        'If CDbl(Format(nDeudaFecha, "#0.00")) = CDbl(Format(MatPagos(i, 1), "#0.00")) Then
        '    MatCalendDistribuido(i) = MatrizDistribuirCancelacion(MatPagos(i, 0), MatCalend(i), CDbl(Format(MatPagos(i, 1), "#0.00")), MatPagos(i, 4), pdHoy)
        'Else
            MatCalendDistribuido(i) = MatrizDistribuirMonto(MatCalend(i), CDbl(Format(MatPagos(i, 1), "#0.00")), MatPagos(i, 4), , nMonIntGra, pbCobrarMora)
        'End If
        '------------
    Next i
    Set oGastos = Nothing

    'dFechaTran = CDate(Format(pdHoy, "dd/mm/yyyy hh:mm:ss"))
    dFechaTran = CDate(Format(Format(pdHoy, "dd/mm/yyyy") & " " & Format(oBase.dFechaHora, "hh:mm:ss"), "dd/mm/yyyy hh:mm:ss")) 'JUEZ 20150410
    
    '*******************************************************************
    'Inserta o Actualiza Gastos Generados por la Operacion
    '*******************************************************************
    For i = 0 To UBound(MatPagos) - 1
        Call oBase.dBeginTrans
        If IsArray(MatGastosCancelacion(i)) Then
            Set oCred = New COMDCredito.DCOMCredito
            pMatGastosGen = MatGastosCancelacion(i)
            For k = 0 To nNumGastosCancel - 1
                If (MatrizEstadoCalendario(MatCalendDistribuido(i)) = gColocCalendEstadoPagado And pMatGastosGen(k, 4) = "CA") Or pMatGastosGen(k, 4) = "PA" Then
                    If oCred.ExisteGasto(MatPagos(i, 0), CInt(MatPagos(i, 8)), CInt(Trim(Right(pMatGastosGen(k, 0), 2))), CInt(pMatGastosGen(k, 1)), CLng(Trim(Right(pMatGastosGen(k, 2), 10)))) Then
                        Call oBase.dUpdateColocCalendDet(MatPagos(i, 0), CInt(MatPagos(i, 8)), CInt(Trim(Right(pMatGastosGen(k, 0), 2))), CInt(pMatGastosGen(k, 1)), CLng(Trim(Right(pMatGastosGen(k, 2), 10))), CDbl(pMatGastosGen(k, 3)), , "", False, , True)
                    Else
                        Call oBase.dInsertColocCalendDet(MatPagos(i, 0), CInt(MatPagos(i, 8)), CInt(Trim(Right(pMatGastosGen(k, 0), 2))), CInt(pMatGastosGen(k, 1)), CLng(Trim(Right(pMatGastosGen(k, 2), 10))), CDbl(pMatGastosGen(k, 3)), 0, "", False)
                    End If
                End If
            Next k
            Set oCred = Nothing
        End If
        Call oBase.dCommitTrans
    Next i

    '**********************************************************************

    oBase.dBeginTrans
    'Insert Movimiento
    Call oBase.dInsertMov(sMovNro, gCredPagLote, "PAGO EN LOTE", gMovEstContabMovContable, gMovFlagVigente, False)
    nMovNro = oBase.dGetnMovNro(sMovNro)
    If pnTipoPago = gColocTipoPagoCheque Then
        Call oBase.dInsertaMovDoc(nMovNro, TpoDocCheque, psNroDoc, dFechaTran, False)
    End If
    
    psImpreBol = ""
    For i = 0 To UBound(MatPagos) - 1
        'ALPA 20150801*********************************************
        lnPorcentaje = oBase.dObtenerPorcentajeDiferidos(MatPagos(i, 0), False)
        '**********************************************************
        Select Case CInt(MatPagos(i, 5))
            'Si es Credito refinanciado
            Case gColocEstRefMor
                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEfec, gCredPagRefMorCh)
            Case gColocEstRefNorm
                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEfec, gCredPagRefNorCh)
            Case gColocEstRefVenc
                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEfec, gCredPagRefVenCh)
            'si es Credito Normal
            Case gColocEstVigMor
                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEfec, gCredPagNorNorCh)
            Case gColocEstVigNorm
                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEfec, gCredPagNorMorCh)
            Case gColocEstVigVenc
                nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEfec, gCredPagNorVenCh)
        End Select
        'ARCV 22-06-2007
        'sError = oBase.AmortizarCreditoLote(MatPagos(i, 0), MatCalend(i), MatCalendDistribuido(i), CDbl(Format(MatPagos(i, 1), "#0.00")), pdHoy, MatPagos(i, 4), pnTipoPago, psCodAge, psCodUsu, nmovnro, CInt(MatPagos(i, 5)), CLng(MatPagos(i, 2)), IIf(pnTipoPago = gColocTipoPagoCheque, psNroDoc, ""), CDbl(MatPagos(i, 9)), psProyectoActual)
        'sError = oBase.AmortizarCreditoLote(MatPagos(i, 0), MatCalend(i), MatCalendDistribuido(i), CDbl(Format(MatPagos(i, 1), "#0.00")), pdHoy, MatPagos(i, 4), pnTipoPago, psCodAge, psCodUsu, nmovnro, CInt(MatPagos(i, 5)), CLng(MatPagos(i, 2)), IIf(pnTipoPago = gColocTipoPagoCheque, psNroDoc, ""), CDbl(MatPagos(i, 9)), psProyectoActual, CInt(MatPagos(i, 8)), CInt(MatPagos(i, 10)))
        'sError = oBase.AmortizarCreditoLote(MatPagos(i, 0), MatCalend(i), MatCalendDistribuido(i), CDbl(Format(MatPagos(i, 1), "#0.00")), pdHoy, MatPagos(i, 4), pnTipoPago, psCodAge, psCodUsu, nMovNro, CInt(MatPagos(i, 5)), CLng(MatPagos(i, 2)), IIf(pnTipoPago = gColocTipoPagoCheque, psNroDoc, ""), CDbl(MatPagos(i, 9)), psProyectoActual, CInt(MatPagos(i, 8)), CInt(MatPagos(i, 10)), MatrizCapitalPagado(MatCalendDistribuido(i))) 'JUEZ 20131022
        sError = oBase.AmortizarCreditoLote(MatPagos(i, 0), MatCalend(i), MatCalendDistribuido(i), CDbl(Format(MatPagos(i, 1), "#0.00")), pdHoy, MatPagos(i, 4), pnTipoPago, psCodAge, psCodUsu, nMovNro, CInt(MatPagos(i, 5)), CLng(MatPagos(i, 2)), IIf(pnTipoPago = gColocTipoPagoCheque, psNroDoc, ""), CDbl(MatPagos(i, 9)), psProyectoActual, CInt(MatPagos(i, 8)), CInt(MatPagos(i, 10)), MatrizCapitalPagado(MatCalendDistribuido(i)), psPersCod, psIFTpo, psIFCta, lnPorcentaje, pbCobrarMora) 'EJVG20140408
        'NAGL 20190719 Según ERS036-2018 Agregó la variable pbCobrarMora
        '--------
        
        '*****BRGO 20110914 *****************************************************
        Set oMov = New COMDMov.DCOMMov
        Call oMov.InsertaMovRedondeoITF("", i + 1, MatPagos(i, 11), MatPagos(i, 9), nMovNro) 'BRGO 20110914
        Set oMov = Nothing
        '*** End BRGO *****************
        
        If pbImpBoletas Then
            psImpreBol = psImpreBol & oDoc.ImprimeBoleta(MatPagos(i, 0), MatPagos(i, 3), psNomAge, oConstante.DameDescripcionConstante(gMoneda, CInt(Mid(MatPagos(i, 0), 9, 1))), _
                MatrizCuotasPagadas(MatCalendDistribuido(i)), Format(dFechaTran, "dd/mm/yyyy"), Format(dFechaTran, "hh:mm:ss"), Trim(Str(CInt(MatPagos(i, 2)) + 1)), "Credito Consumo", _
                MatrizCapitalPagado(MatCalendDistribuido(i)), MatrizIntCompPagado(MatCalendDistribuido(i)), _
                MatrizIntCompVencPagado(MatCalendDistribuido(i)), _
                MatrizIntMorPagado(MatCalendDistribuido(i), pbCobrarMora), MatrizGastoPag(MatCalendDistribuido(i)), _
                MatrizIntGraciaPagado(MatCalendDistribuido(i)), _
                MatrizIntSuspensoPag(MatCalendDistribuido(i)) + MatrizIntReprogPag(MatCalendDistribuido(i)), _
                MatrizSaldoCapital(MatCalend(i), MatCalendDistribuido(i)), MatrizFechaCuotaPendiente(MatCalend(i), MatCalendDistribuido(i)), _
                psCodUsu, sLpt, , , , , CDbl(MatPagos(i, 9)))
                'NAGL 20190719 Agregó pbCobrarMora en el método MatrizIntMorPagado
        End If
    Next i
    'EJVG20140408 ***
    If pnTipoPago = gColocTipoPagoCheque Then
        Call oBase.dInsertaMovDocRec(nMovNro, TpoDocCheque, psNroDoc, psPersCod, psIFTpo, psIFCta)
    End If
    'END EJVG *******
    oBase.dCommitTrans
    Set oBase = Nothing
    Set oConstante = Nothing
    
    'AMDO 20130320 CrediPremiazo ***********************************
    Dim oVarSist As COMDConstSistema.DCOMGeneral
    Set oVarSist = New COMDConstSistema.DCOMGeneral
    Dim pCrediPremiazo As Integer
    pCrediPremiazo = oVarSist.LeeConstSistema(432)
    Set oVarSist = Nothing
    
    If pCrediPremiazo = 1 Then
        Call InsertaPuntosCrediPremiazoPagoNormal(nMovNro)
    End If
    'END AMDO ******************************************************
    
    sCadImp = oDoc.ImprimePagoLote(MatPagos, MatCalend, MatCalendDistribuido, psNomAge, dFechaTran, psCodUsu, psNomInstitucion, IIf(Mid(MatPagos(0, 0), 9, 1) = "1", "SOLES", "DOLARES"), psNomCmac, pbCobrarMora)
    Set oDoc = Nothing
    AmortizarPagoLote = sCadImp
    psnMovNro = nMovNro 'ERS073-2017 Agrego JIPR22062018
    Exit Function

ErrorAmortizarPagoLote:
    Err.Raise Err.Number, "Error En Proceso AmortizarPagoLote", Err.Description

End Function

Public Function ObtenerDeudaFechaTotal(ByVal psCtaCod As String, Optional ByVal pMatCalend As Variant = "", _
                                    Optional ByVal pdFecSis As Date = 0) As Double
Dim pnSaldoKFecha As Double
Dim pnIntCompFecha As Double
Dim pnIntMorFecha As Double
Dim pnGastoFecha As Double
Dim pnTotalFecha As Double
Dim R As ADODB.Recordset
Dim oCred As COMDCredito.DCOMCredito
Dim nDiasAtraso As Integer
Dim nPrdEstado As Long
Dim oGastos As COMNCredito.NCOMGasto
Dim MatGastosCancelacion As Variant
Dim nNumGastosCancel As Integer

    If Not IsArray(pMatCalend) Then
        pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
    End If
    
    pnSaldoKFecha = MatrizCapitalAFecha(psCtaCod, pMatCalend)
    
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    nDiasAtraso = IIf(IsNull(R!nDiasAtraso), 0, R!nDiasAtraso)
    Set R = oCred.RecuperaProducto(psCtaCod)
    nPrdEstado = R!nPrdEstado
    Set oCred = Nothing
    
    pnIntCompFecha = MatrizInteresTotalesAFechaSinMora(psCtaCod, pMatCalend, pdFecSis)
    pnIntMorFecha = ObtenerMoraVencida(pdFecSis, pMatCalend)
    
    'ARCV 06-03-2007
    'pnGastoFecha = MatrizIntGastosCalendario(pMatCalend)
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim RGas As ADODB.Recordset
    Set oBase = New COMDCredito.DCOMCredActBD
    Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")
    pnGastoFecha = RGas!nGasto
    Set oBase = Nothing
    Set RGas = Nothing
    '-------
    
    pnTotalFecha = pnSaldoKFecha + pnIntCompFecha + pnGastoFecha + pnIntMorFecha
    If nPrdEstado = 2020 Or nPrdEstado = 2021 Or nPrdEstado = 2022 Or nPrdEstado = 2030 Or nPrdEstado = 2031 Or nPrdEstado = 2032 Then
        Set oGastos = New COMNCredito.NCOMGasto
        MatGastosCancelacion = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosCancel, pdFecSis, psCtaCod, 1, "CA", , , CDbl(pnTotalFecha), MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalend), , , , , nDiasAtraso)
        pnGastoFecha = pnGastoFecha + MontoTotalGastosGenerado(MatGastosCancelacion, nNumGastosCancel, Array("CA", "PA", ""))
        pnTotalFecha = pnTotalFecha + MontoTotalGastosGenerado(MatGastosCancelacion, nNumGastosCancel, Array("CA", "PA", ""))
        Set oGastos = Nothing
    End If
       
    ObtenerDeudaFechaTotal = pnTotalFecha
End Function


Public Sub AnularRegistroDacionEnPago(ByVal pnNroDacion As Long, ByVal psCtaCod As String)
Dim oBase As COMDCredito.DCOMCredActBD
Dim nMovNro As Long

    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    Call oBase.dAnularColocGarantRec(pnNroDacion, gColocGarantRecEstadoAnulado, False)
    nMovNro = oBase.dRecuperaMovRegistroDacion(pnNroDacion, psCtaCod)
    Call oBase.dUpdateMov(nMovNro, , , , gMovFlagExtornado, False)
    oBase.dCommitTrans
    Set oBase = Nothing
End Sub
Public Sub ExtornarCredito(ByVal psCtaCod As String, ByVal pdFecSis As Date, ByVal psCodUser As String, _
    ByVal psCodAge As String, ByVal pnMov As Long, psCodOpe As String, ByVal pnMonto As Double, Optional ByVal pnNroDacion As Long = -1, _
    Optional ByVal pbExtornoEnLote As Boolean = False, Optional ByVal poBase As COMDCredito.DCOMCredActBD = Nothing, Optional ByVal pnMovNro As Long = -1, _
    Optional ByVal pnPrepago As Integer = -1, Optional ByRef psMensaje As String = "", Optional ByVal pbPagoHonra As Boolean = False, Optional ByVal pbVigeRefi As Boolean = False, _
    Optional ByVal psMotExtorno As String, Optional ByVal psDetMotExtorno As String, Optional ByVal DetExtorno As Variant)
    'WIOR 20131230 AGREGO pbPagoHonra
    'LUCV20160530 Agregó pbVigeRefi, Según ERS004-2016
    'CTI3 psMotExtorno Agrego ERS060-2017

Dim oDCred As COMDCredito.DCOMCredito
Dim oBase As COMDCredito.DCOMCredActBD
Dim oFun As COMNContabilidad.NCOMContFunciones
Dim nMovNro As Long
Dim sMovNro, sMovNroCap As String
Dim MatsMovNro() As String
Dim R, RCap, RCapMov, RCancel As ADODB.Recordset
Dim dCap As Date
Dim sSql As String
Dim nCuotaMin As Integer
Dim nNroCalen As Integer
Dim nNroCalenPar As Integer
Dim i As Integer
Dim nMontoCond As Double
Dim nMovNroCond As Long
Dim oConecta As COMConecta.DCOMConecta

Dim nMaxMovCap As Long
Dim nMovNroColRef As Long
Dim sCtaCodCap As String
Dim lsOpeCodExtAcIn As String 'ALPA20130827
Dim lsCuotaPagada As String 'ALPA20130923
Dim lsMovNroProBlo As String 'FRHU20140228 RQ14006
Dim oRsProducto As ADODB.Recordset 'EJVG20140327
Dim lnEstadoCredAct As ColocEstado 'EJVG20140327
Dim lnNroCalen As Integer
Dim lnNroCalPar As Integer
Dim nEstado As Integer 'LUCV20160614, Segun: ERS004-2016

'*********NAGL 20190719************
Dim lrsOperCond As ADODB.Recordset
Dim psOpeCodCond As String
'***********END NAGL***************
Dim lbEsFMV As Boolean
Dim lsCtaCodAhoGastosFMV As String

    nMovNroColRef = -1
    'sSql = "Select MR.nMovnro, MC.cCtaCod From MovRef MR Inner Join MovCap MC ON MC.nMovnro = MR.nMovnro Inner Join MovDiario MD ON MD.nMovnro = MC.nMovNro Where  MD.nMovFlag=0 AND MR.nMovNroRef = " & pnMov
    sSql = "stp_sel_nMovNroColRef " & pnMov & ",'" & psCtaCod & "'" 'FRHU INCIDENTE CORREO 20150414
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set R = oConecta.CargaRecordSet(sSql)
    If R.RecordCount > 0 Then
        nMovNroColRef = R!nMovNro
        sCtaCodCap = R!cCtaCod
    End If
    R.Close
    
    '***********NAGL Según ERS036-2018***********
    Set lrsOperCond = New ADODB.Recordset
    Set oDCred = New COMDCredito.DCOMCredito
    Set lrsOperCond = oDCred.GetOpeCondonacionxEstado(psCtaCod, "cOpeCond", pnMov)
    psOpeCodCond = lrsOperCond("cOpeCond")
    Set oDCred = Nothing
    Set lrsOperCond = Nothing
    '**************END NAGL 20190722*************

    sSql = "select * from ColocacCred where cCtaCod='" & psCtaCod & "'"
    Set R = oConecta.CargaRecordSet(sSql)
    If R.RecordCount > 0 Then
        lnNroCalen = R!nNroCalen
        lnNroCalPar = R!nNroCalPar
    End If
    R.Close
    If nMovNroColRef <> -1 Then
        'sSql = "Select MAX(MC.nMovnro) nMaxMovCap From MovCap MC Inner Join MovDiario MD ON MD.nMovNro = MC.nMovNro where MC.copecod <> '201002' AND MD.nMovFlag=0 and cCtaCod = '" & sCtaCodCap & "'"
        'sSql = "Select MAX(MC.nMovnro) nMaxMovCap From MovCap MC Inner Join MovDiario MD ON MD.nMovNro = MC.nMovNro where MC.copecod not in ('201002','201101') AND MD.nMovFlag=0 and cCtaCod = '" & sCtaCodCap & "'" 'FRHU 20140228 RQ14006
        sSql = "stp_sel_nMaxMovCap '" & sCtaCodCap & "'" 'FRHU INCIDENTE CORREO 20150414
        Set R = oConecta.CargaRecordSet(sSql)
        If R.RecordCount > 0 Then
            nMaxMovCap = R!nMaxMovCap
        End If
        R.Close
        Set R = Nothing
        If nMaxMovCap > nMovNroColRef Then
            psMensaje = "Se han Realizado Movimientos en la Cta de Ahorro despues esta Operacion, Extorne primero los movimientos posteriores."
            Set oDCred = Nothing
            oConecta.CierraConexion
            Set oConecta = Nothing
            Exit Sub
        End If
    End If
    oConecta.CierraConexion
    Set oConecta = Nothing
    
    Set oDCred = New COMDCredito.DCOMCredito
    Set R = oDCred.RecuperaDatosExtorno(pnMov, psCtaCod)
    'EJVG20140327 ***
    Set oRsProducto = oDCred.RecuperaProducto(psCtaCod)
    lnEstadoCredAct = oRsProducto!nPrdEstado
    oRsProducto.Close
    Set oRsProducto = Nothing
    'END EJVG *******
    
    'Validacion necesaria
    If R.EOF Then
        psMensaje = "No se puede obtener los Datos del Extorno"
        Set oDCred = Nothing
        Exit Sub
    End If
    '************
    
    lbEsFMV = (Mid(psCtaCod, 6, 3) = "802" Or Mid(psCtaCod, 6, 3) = "806")
    
    If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA _
        Or psCodOpe = gCredPagNorNorCC Or psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Then
        'If psCodOpe = gCredPagNorNorCC Or psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Then
        If psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Then
            Set RCapMov = oDCred.RecuperaMovimientosAhorros(pnMov, True)
        Else
'            'ARCV 04-09-2006
'            If psCodOpe = gCredDesembCtaExist Then
'                'Desembolso con Abono a Cuenta y Cancelacion de Credito
'                If R!nMovNroRef <> 0 Then
'                    Set RCapMov = oDCred.RecuperaMovimientosAhorros(pnMov, True)
'                Else    'Desemb con Abono a Cuenta sin Cancelacion de Credito
'                    Set RCapMov = oDCred.RecuperaMovimientosAhorros(pnMov)
'                End If
'            Else
            '---------------------------
                Set RCapMov = oDCred.RecuperaMovimientosAhorros(pnMov)
            'End If
        End If
    End If
    Set oDCred = Nothing

    If pbExtornoEnLote Then
        Set oBase = poBase
    Else
        Set oFun = New COMNContabilidad.NCOMContFunciones
        sMovNro = oFun.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
        Set oFun = Nothing
        Set oBase = New COMDCredito.DCOMCredActBD
        ReDim MatsMovNro(0)
        If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Then

            Set oFun = New COMNContabilidad.NCOMContFunciones
            Do While Not RCapMov.EOF
                'If RCapMov!cOpeCod = "200301" Then '********* Aca hice la modificacion CAFF
                'MADM 20120217 - gCredDesembCtaExistDOA
                If RCapMov!copecod = gCredDesembCtaExistDOA Or RCapMov!copecod = gCredDesembCtaRetiroGastos Or RCapMov!copecod = gCredDesembCtaRetiroGastosDOA Or RCapMov!copecod = gCredDesembCtaRetiroCancelacion Or RCapMov!copecod = gCredDesembCtaRetiroCancelacionDOA Or RCapMov!copecod = gAhoTransAbono Or RCapMov!copecod = gAhoTransCargo Or Mid(RCapMov!copecod, 1, 2) = "99" Or RCapMov!copecod = "100949" Then 'RIRO20200615
                    Sleep 1000
                    ReDim Preserve MatsMovNro(RCapMov.Bookmark)
                    MatsMovNro(RCapMov.Bookmark - 1) = oFun.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
                End If
                'FRHU 20140228 RQ14006
                If RCapMov!copecod = 200301 Then
                    Sleep 1000
                    ReDim Preserve MatsMovNro(RCapMov.Bookmark)
                    MatsMovNro(RCapMov.Bookmark - 1) = oFun.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
                End If
                'FIN FRHU 20140228
                RCapMov.MoveNext
            Loop
            If RCapMov.RecordCount > 0 Then
                RCapMov.MoveFirst
            End If
            Set oFun = Nothing
        End If
        
        
        Call oBase.dBeginTrans
    End If

    Sleep 1000
    Set oFun = New COMNContabilidad.NCOMContFunciones
    If pbExtornoEnLote Then
        sMovNroCap = poBase.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
    Else
        sMovNroCap = oFun.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
    End If
    Set oFun = Nothing
    'Extorna Movimientos
'    If Not pbExtornoEnLote Then 'LUCV2010606, Comentó
'        Call oBase.dUpdateMov(pnMov, , , , gMovFlagExtornado, False)
'        Call oBase.dInsertMov(sMovNro, gCredExtPago, "Extorno de Pago", gMovEstContabNoContable, gMovFlagDeExtorno, False)
'        nMovNro = oBase.dGetnMovNro(sMovNro)
'    Else
'        nMovNro = pnMovNro
'    End If 'Fin - LUCV2010606, Comentó
    
    If Not pbExtornoEnLote Then 'LUCV, Obser
        'LUCV20160530, Agregó Segun ERS004-2016 **********
        If pbVigeRefi Then
        Call oBase.dUpdateMov(pnMov, , , , gMovFlagExtornado, False) 'ABC
        Call oBase.dInsertMov(sMovNro, gCredExtVigenciaRefinanciado, "Extorno de Vigencia", gMovEstContabNoContable, gMovFlagDeExtorno, False) 'ABC
        nMovNro = oBase.dGetnMovNro(sMovNro) 'ABC
        'Fin LUCV20160530 **********
        '***CTI3 (ferimoro) 17102018
        Call oBase.dInsertDetExtMov(nMovNro, gCredExtVigenciaRefinanciado, 0, psCtaCod, False, psMotExtorno, psDetMotExtorno) 'ABC
        
         Else
            Call oBase.dUpdateMov(pnMov, , , , gMovFlagExtornado, False) 'ABC
            Call oBase.dInsertMov(sMovNro, gCredExtPago, "Extorno de Pago", gMovEstContabNoContable, gMovFlagDeExtorno, False) 'ABC
            nMovNro = oBase.dGetnMovNro(sMovNro) 'ABC
            '***CTI3 (ferimoro) 17102018
            Call oBase.dInsertDetExtMov(nMovNro, gCredExtPago, 0, psCtaCod, False, psMotExtorno, psDetMotExtorno) 'ABC
        End If
    Else
        nMovNro = pnMovNro
    End If


    'Extorna Movimiento de Colocaciones Insertando sus Filas Correspondientes
'    If Not pbExtornoEnLote Then '***** LUCV, Comentó
'        Call oBase.dInsertMovCol(nMovNro, gCredExtPago, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0, False)
'    Else
'        Call oBase.dInsertMovCol(nMovNro, gCredExtPagoLote, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0, False)
'    End If

    If Not pbExtornoEnLote Then 'LUCV
        'LUCV20160530, Agregó, Según ERS004-2016 **********
        If pbVigeRefi Then
        Call oBase.dInsertMovCol(nMovNro, gCredExtVigenciaRefinanciado, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0, False) 'ABC
        'Fin LUCV20160530 **********
        Else
        Call oBase.dInsertMovCol(nMovNro, gCredExtPago, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0, False) 'ABC
        End If
    Else
        Call oBase.dInsertMovCol(nMovNro, gCredExtPagoLote, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0, False)
    End If

        If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredPagNorNorCC Or psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Or psCodOpe = gCredDesembCheque Or psCodOpe = gCredPagLeasingCU Or psCodOpe = gCredDesembLeasing Or psCodOpe = gCredPagLeasingCI Then
        If psCodOpe = gCredPagNorNorCC Or psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Or psCodOpe = gCredPagLeasingCI Or psCodOpe = gCredPagLeasingCU Then
            Call oBase.dExtornaSaldosCalendario(pnMov, gColocCalendAplCuota, psCtaCod, False, psOpeCodCond) 'NAGL 20190723 Agregó psOpeCodCond
            'ALPA20130923
            If psCodOpe = gCredPagLeasingCU Then
                lsCuotaPagada = R!nMinCuota
                Call oBase.dExtornoLeasing(psCtaCod, lsCuotaPagada, pdFecSis)
            End If
        Else
            'Extorna Saldos Calendario
            Call oBase.dExtornaSaldosCalendario(pnMov, gColocCalendAplDesembolso, psCtaCod, False, psOpeCodCond) 'NAGL 20190723 Agregó psOpeCodCond
        End If
        If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Then
            Set RCap = oBase.RecuperaMovimientoCapataciones(pnMov)
            If Not lbEsFMV Then
            'Extorna Retiros por Gastos
            Do While Not RCapMov.EOF
                'If RCapMov!cOpeCod = "200301" Then '********* Aca hice la modificacion CAFF
                If RCapMov!copecod = gCredDesembCtaRetiroGastos Or RCapMov!copecod = gCredDesembCtaRetiroGastosDOA Or RCapMov!copecod = gCredDesembCtaRetiroCancelacion Or RCapMov!copecod = gAhoTransAbono Or RCapMov!copecod = gAhoTransCargo Or RCapMov!copecod = gCredDesembCtaRetiroCancelacionDOA Or RCapMov!copecod = 100949 Then 'RIRO 20200615 Corrección de reactiva
                    'Call oBase.dInsertMov(MatsMovNro(RCapMov.boomark - 1), gCredExtPago, "Extorno de Pago", gMovEstContabNoContable, gMovFlagDeExtorno, False)
                    Call oBase.CapExtornoCargoAho(nMovNro, RCapMov!nMovNro, gAhoExtRetEfec, RCap!cCtaCod, MatsMovNro(RCapMov.Bookmark - 1), "Extorno de Desembolso Abono Cuenta", RCapMov!nMonto)
                'MAVM 20111205 Correccion Asiento Contable ***
                Else
                    If RCapMov!copecod = gITFCobroCargo Then
                        Call oBase.CapExtornoCargoAho(nMovNro, RCapMov!nMovNro, gITFCobroCargoExt, RCap!cCtaCod, MatsMovNro(RCapMov.Bookmark - 2), "Extorno de Desembolso Abono Cuenta", RCapMov!nMonto)
                    End If
                    'If RCapMov!copecod = gCredDesembCtaExist Then
                    If RCapMov!copecod = gCredDesembCtaExist Or RCapMov!copecod = gCredDesembCtaExistDOA Then 'JUEZ 201510128
                        RCapMov.MoveLast
                    End If
                '***
                End If
                'FRHU 20140228 RQ14006 Extornar Bloqueo  ** BLOQUEO DE CTAS DE AHORROS  = 201101
                If RCapMov!copecod = gAhoRetEfec Then
                Call oBase.CapExtornoCargoAho(nMovNro, RCapMov!nMovNro, gAhoExtRetEfec, RCap!cCtaCod, MatsMovNro(RCapMov.Bookmark - 1), "Extorno de Desembolso Abono Cuenta", RCapMov!nMonto)
                Else
                     If RCapMov!copecod = gITFCobroEfectivo Then
                        Call oBase.CapExtornoCargoAho(nMovNro, RCapMov!nMovNro, gITFCobroCargoExt, RCap!cCtaCod, MatsMovNro(RCapMov.Bookmark - 2), "Extorno de Desembolso Abono Cuenta", RCapMov!nMonto)
                    End If
                End If
                If RCapMov!copecod = 201101 Then
                    Call oBase.dUpdateMov(RCapMov!nMovNro, , , , gMovFlagExtornado, False)
                    Call oBase.dUpdateProducto(RCap!cCtaCod, , , 1000, , , False, 1, False)
                    lsMovNroProBlo = oBase.dGetcMovNro(RCapMov!nMovNro)
                    Call oBase.dDeleteProductoBloqueo(lsMovNroProBlo)
                End If
                'FIN FRHU 20140228
                RCapMov.MoveNext
            Loop
            'Recupera DatosExtorno
            If RCap.RecordCount > 0 Then
                dCap = CDate(Mid(RCap!cMovNro, 7, 2) & "/" & Mid(RCap!cMovNro, 5, 2) & "/" & Mid(RCap!cMovNro, 1, 4) & " " & Mid(RCap!cMovNro, 9, 2) & ":" & Mid(RCap!cMovNro, 11, 2) & ":" & Mid(RCap!cMovNro, 13, 2))
            
            'Extorno de Apertura
            'If RCap!cOpeCod = "200101" Then

            If RCap!copecod = "100102" Then
                'Call oBase.CapExtornoApertura(sMovNroCap, nMovNro, pnMovNro, gAhoExtApeEfec, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)'COMENTO 'CTI3
                Call oBase.CapExtornoApertura(sMovNroCap, nMovNro, pnMovNro, gAhoExtApeEfec, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto, , , , , , , DetExtorno) 'CTI3 DetExtorno
            Else
                Set oFun = New COMNContabilidad.NCOMContFunciones
                Do While Not RCap.EOF
                    ' ***BRGO 20111125 ***********************
                    If Mid(psCtaCod, 6, 3) = "517" Then
                        Sleep 1000
                        'sMovNroCap = oFun.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
                        sMovNroCap = oBase.GeneraMovNro(pdFecSis, psCodAge, psCodUser) 'EJVG20130605
                    End If
                    '*** END BRGO *****************************
                    If Mid(RCap!copecod, 1, 2) <> "99" Then
                        'JUEZ 20150128 **************************************
                        'ALPA20130827*************************
                        'If Left(RCap!copecod, 4) = "2008" Then
                        '    lsOpeCodExtAcIn = gCTSExtDepActiInact
                        'Else
                        '    lsOpeCodExtAcIn = gAhoExtDepEfec
                        'End If
                        'Call oBase.CapExtornoAbonoAho(sMovNroCap, nmovnro, pnMovNro, gAhoExtDepEfec, RCap!cctacod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)
                        'Call oBase.CapExtornoAbonoAho(sMovNroCap, nMovNro, pnMovNro, lsOpeCodExtAcIn, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)
                        If Left(RCap!copecod, 4) <> "2008" Then
                            Call oBase.CapExtornoAbonoAho(sMovNroCap, nMovNro, pnMovNro, gAhoExtDepEfec, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)
                        End If
                        '*************************************
                        'END JUEZ *******************************************
                    Else
                        'Call oBase.CapExtornoCargoAho(nMovNro, 0, gAhoExtRetEfec, RCap!cCtaCod, sMovNroCap, "Extorno de Desembolso Abono Cuenta", RCap!nMonto) 'FRHU 20141201 OBSERVACION
                        Call oBase.CapExtornoCargoAho(nMovNro, 0, gITFCobroCargoExt, RCap!cCtaCod, sMovNroCap, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)
                    End If
                    RCap.MoveNext
                Loop
            End If
            End If
            Else
                Dim NroCuentaApeFMV() As String
                Dim sMovNroCapFMV As String
                ReDim NroCuentaApeFMV(0)
                
                Do While Not RCap.EOF
                    If RCap!copecod = gCredDesembCtaNueva Then
                        Sleep 1000
                        sMovNroCapFMV = oBase.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
                    
                        ReDim Preserve NroCuentaApeFMV(UBound(NroCuentaApeFMV) + 1)
                        NroCuentaApeFMV(UBound(NroCuentaApeFMV)) = RCap!cCtaCod
                        Call oBase.CapExtornoApertura(sMovNroCapFMV, nMovNro, pnMovNro, gAhoExtApeEfec, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto, , , , , , , DetExtorno)
                    ElseIf Mid(RCap!copecod, 1, 2) <> "99" And Not ExisteCuentaAperturaFMV(RCap!cCtaCod, NroCuentaApeFMV) Then
                        Sleep 1000
                        sMovNroCapFMV = oBase.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
                        
                        Call oBase.CapExtornoAbonoAho(sMovNroCapFMV, nMovNro, pnMovNro, gAhoExtDepEfec, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)
                    ElseIf Mid(RCap!copecod, 1, 2) = "99" And Not ExisteCuentaAperturaFMV(RCap!cCtaCod, NroCuentaApeFMV) Then
                        Call oBase.CapExtornoCargoAho(nMovNro, 0, gITFCobroCargoExt, RCap!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCap!nMonto)
                    End If
                    RCap.MoveNext
                Loop
            End If
        ElseIf psCodOpe = gCredPagNorNorCC Or psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Then
            Do While Not RCapMov.EOF
                'ARCV 05-09-2006...para poder extornar las Cancelaciones
                'If RCapMov!copecod = gCredDesembCtaRetiroGastos Or RCapMov!copecod = gCredDesembCtaRetiroGastosDOA Or RCapMov!copecod = gCredDesembCtaRetiroCancelacion Or RCapMov!copecod = gCredDesembCtaRetiroCancelacionDOA Then
                If RCapMov!copecod = gCredDesembCtaRetiroGastos Or RCapMov!copecod = gCredDesembCtaRetiroGastosDOA Or RCapMov!copecod = gCredDesembCtaRetiroCancelacion Or RCapMov!copecod = gCredDesembCtaRetiroCancelacionDOA Or RCapMov!copecod = gCredDesembCtaExist Or RCapMov!copecod = gCredDesembCtaNueva Then
                    'Call oBase.CapExtornoCargoAho(nMovNro, RCapMov!nMovNro, gCredDesembCtaRetiroCancelacion, RCapMov!cCtaCod, MatsMovNro(RCapMov.Bookmark - 1), "Extorno de Desembolso Abono Cuenta", RCapMov!nMonto)
                    Call oBase.CapExtornoCargoAho(nMovNro, RCapMov!nMovNro, gCredDesembCtaRetiroCancelacion, RCapMov!cCtaCod, sMovNro, "Extorno de Desembolso Abono Cuenta", RCapMov!nMonto)
                End If
                RCapMov.MoveNext
            Loop

        End If
    Else
        'Extorna Saldos Calendario
        Call oBase.dExtornaSaldosCalendario(pnMov, gColocCalendAplCuota, psCtaCod, False, psOpeCodCond) 'NAGL 20190723 Agregó psOpeCodCond
    End If
    
    Call oBase.dExtornoPerdonMora(pnMov)  'WIOR 20150404
    Call oBase.dCampRecupExtornoPagoConPerdonMora(pnMov) 'WIOR 20150602
    Call oBase.GestionSiniestrorLiquidacionEliminar(pnMov)  'WIOR 20160419
    
    'Extorna Saldos de Maestros
    'Colocaccred
    'Call oBase.dUpdateColocacCred(psCtaCod, R!nDiasMora, , , , , , , R!nMinCuota, , , , , , , R!nMinCuota, , , False, , , , , , , , , , , , , , , , , , , , 0) 'WIOR 20150416 AGREGO CERO (0) AL PARAMETRO pnPreParaAmpliacion
    If pbVigeRefi Then 'LUCV20160608, ERS004-2016 **********
    Call oBase.dUpdateColocacCred(psCtaCod, R!nDiasMora, , , , , , , R!nMinCuota + 1, , , , , , , R!nMinCuota + 1, , , False, , , , , , , , , , , , , , , , , , , , 0)
    Else '**********Fin LUCV20160608
    Call oBase.dUpdateColocacCred(psCtaCod, R!nDiasMora, , , , , , , R!nMinCuota, , , , , , , R!nMinCuota, , , False, , , , , , , , , , , , , , , , , , , , 0) 'WIOR 20150416 AGREGO CERO (0) AL PARAMETRO pnPreParaAmpliacion 'ABC
    End If
    
    'WIOR 20140203 ***************************
    If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembLeasing Then
        Call oBase.ActualizaCredVinculados(psCtaCod, "", 5, 2)
    End If
    'WIOR FIN ********************************
    
    'RIRO 20200915 ***************************
    If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembLeasing Then
        Call oBase.ExtornaLiquidacion(psCtaCod)
    End If
    'RIRO ************************************
    
    'Producto
    If psCodOpe = gCredDesembLeasing Or psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque Then
    'If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque Then
        Call oBase.dUpdateProducto(psCtaCod, , R!nCapital, R!nCredEstado, , , False, 1)
    Else
        Call oBase.dUpdateProducto(psCtaCod, , R!nCapital, R!nCredEstado, , , False, 1, True)
    End If

    '**************************************************************
    'En Caso que el pago halla sido con una Dacion en Pago
    '**************************************************************
    If psCodOpe = gCredPagNorNorDacion Or psCodOpe = gCredPagNorMorDacion Or psCodOpe = gCredPagNorVenDacion _
        Or psCodOpe = gCredPagRefNorDacion Or psCodOpe = gCredPagNorNorDacion Or psCodOpe = gCredPagRefMorDacion Or psCodOpe = gCredPagRefVenDacion Then
        Call oBase.dAnularColocGarantRec(R!nFlag, gColocGarantRecEstadoRegistrado, False)
    End If
    
    'JUEZ 20140102 Pago con Cargo a Cuenta ************************
    If psCodOpe = gCredPagNorNorCC Or psCodOpe = gCredPagNorMorCC Or psCodOpe = gCredPagNorVenCC Or _
       psCodOpe = gCredPagRefNorCC Or psCodOpe = gCredPagRefMorCC Or psCodOpe = gCredPagRefVenCC Then
        Set RCapMov = oBase.RecuperaMovimientoCapataciones(pnMov)
        Call oBase.CapExtornoCargoAho(pnMov, 0, gAhoExtCargoCtaPagoCred, RCapMov!cCtaCod, sMovNroCap, "Extorno Cargo a Cuenta por Pago de Credito", RCapMov!nMonto)
    End If
    'END JUEZ *****************************************************

    'RIRO20140610 ERS017 ******************************************
    If InStr(1, "100219,100308,100409,100508,100608,100708", CStr(Trim(psCodOpe)), vbTextCompare) > 0 Then
        oBase.ActualizaMovPendientesOpe pnMov, pnMonto
        oBase.actualizarRelacionExtornoVoucherCaptacion pnMov
    End If
    'END RIRO *****************************************************

    '**************************************************************
    'Si es Desembolso Con Cancelacion de Creditos
    '**************************************************************
    If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque Then
        Set oDCred = New COMDCredito.DCOMCredito
        Set RCancel = oDCred.CreditosCanceladoConDesembolso(psCtaCod, pnMov)
        Do While Not RCancel.EOF
            Set R = oDCred.RecuperaDatosExtorno(pnMov, RCancel!cCtaCod)
            Call oBase.dInsertMovCol(nMovNro, gCredExtPago, RCancel!cCtaCod, 0, RCancel!nMonto, 0, "", 0, 0, 0, False)
            Call oBase.dExtornaSaldosCalendario(pnMov, gColocCalendAplCuota, RCancel!cCtaCod, False, psOpeCodCond) 'NAGL 20190723 Agregó psOpeCodCond
            Call oBase.dUpdateColocacCred(RCancel!cCtaCod, R!nDiasMora, , , , , , , R!nMinCuota, , , , , , , R!nMinCuota, , , False)
            Call oBase.dUpdateProducto(RCancel!cCtaCod, , R!nCapital, R!nCredEstado, , , False, 0)
            RCancel.MoveNext
        Loop
    End If
    
    
    '***************************************************************
    'Si es Desembolso es un Hipotecario ---- CAFF
    '***************************************************************
    If psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque Then
        If Mid(psCtaCod, 6, 3) = "402" Then
            Call oBase.dDeleteColocCalifMiViv(psCtaCod)
        End If
    End If

    '***Agregado por ELRO el 20120329, según RFC023-2012
    Call oBase.actualizarColocacionPorAfectacion(pnMov, False)
    '***Fin agregado por ELRO***************************
    'If Not pbPagoHonra Then 'EJVG20140326
    '    If lnEstadoCredAct = gColocEstCancelado Then
    '        'Call oBase.dExtornaCredReprogNatEspeciales2(pnMov)
    '    End If
    'End If
    
    If Not pbExtornoEnLote Then
        Call oBase.dCommitTrans
    End If

    'If Not (psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque) Then
     
    Call oBase.ActualizaCalendario(psCtaCod, pnMov, pbVigeRefi, psCodOpe) 'RIRO 20200915 Pase a script para liquidación
     
    'RIRO 20200915 COMENTADO ****************************************
    ' If Not (psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque Or psCodOpe = gCredDesembLeasing) Then
    '    If Mid(psCtaCod, 6, 3) <> 423 Then
    '        If Mid(psCtaCod, 6, 3) <> 801 Then
    '            'LUCV, Comentó ->**********
    '            '                sSql = "DELETE From ColocCalendario where cctaCod = '" & psCtaCod & "' and nnrocalen > ( "
    '            '                sSql = sSql & " Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '            '                Call oBase.coConex.Ejecutar(sSql)
    '            '
    '            '                sSql = "DELETE From ColocCalendDet where cctaCod = '" & psCtaCod & "' and nnrocalen > ( "
    '            '                sSql = sSql & " Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '            '                Call oBase.coConex.Ejecutar(sSql) 'Fin, Comentó, LUCV
    '            '
    '
    '
    '            If pbVigeRefi Then 'LUCV20160608, Elimnacion de Calendario + agregar para Extorno de Vigentes **********
    '                sSql = "DELETE From ColocCalendario where cctaCod = '" & psCtaCod & "' and nnrocalen > 1 "
    '                Call oBase.coConex.Ejecutar(sSql)
    '            Else 'Fin LUCV20160608 **********
    '                sSql = "DELETE From ColocCalendario where cctaCod = '" & psCtaCod & "' and nnrocalen > ( "
    '                sSql = sSql & " Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '                Call oBase.coConex.Ejecutar(sSql)
    '            End If
    '
    '            If pbVigeRefi Then 'LUCV20160608, Elimnacion de Colocandet Refinanciado **********
    '                sSql = "DELETE From ColocCalendDet where cctaCod = '" & psCtaCod & "' and nnrocalen > 1"
    '                Call oBase.coConex.Ejecutar(sSql)
    '            Else 'Fin LUCV20160608 **********
    '                sSql = "DELETE From ColocCalendDet where cctaCod = '" & psCtaCod & "' and nnrocalen > ( "
    '                sSql = sSql & " Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '                Call oBase.coConex.Ejecutar(sSql)
    '            End If
    '
    '        Else
    '            'ALPA20130815**************************************
    '            sSql = "DELETE From ColocCalendario where cctaCod = '" & psCtaCod & "' and (nnrocalen) > ( "
    '            sSql = sSql & " Select min(nNrocalen)+1 From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '            Call oBase.coConex.Ejecutar(sSql)
    '
    '            sSql = "DELETE From ColocCalendDet where cctaCod = '" & psCtaCod & "' and (nnrocalen) > ( "
    '            sSql = sSql & " Select min(nNrocalen)+1 From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '            Call oBase.coConex.Ejecutar(sSql)
    '            '**************************************************
    '
    '        End If
    '            If Mid(psCtaCod, 6, 3) <> "801" Then
    ''                        sSql = " Update ColocacCred SET nNroCalen = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0), "
    ''                        sSql = sSql & " nNroCalPar = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0 ) + 1 "
    ''                        sSql = sSql & "  From ColocacCred "
    ''                        sSql = sSql & "  where cctaCod = '" & psCtaCod & "'"
    ''                        Call oBase.coConex.Ejecutar(sSql)'LUCV, Comentó- Según ERS004-2016
    '
    '                If pbVigeRefi Then 'LUCV20160608, Retornamos al nNroCalen Anterior (Proceso de Vigencia de refinanciado) **********
    '                sSql = " Update ColocacCred SET nNroCalen = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & ") + 1, "
    '                      sSql = sSql & " nNroCalPar = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " ) + 2 "
    '                      sSql = sSql & "  From ColocacCred "
    '                      sSql = sSql & "  where cctaCod = '" & psCtaCod & "'"
    '                      Call oBase.coConex.Ejecutar(sSql)
    '                Else 'Fin LUCV20160608 **********
    '                sSql = " Update ColocacCred SET nNroCalen = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0), "
    '                      sSql = sSql & " nNroCalPar = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0 ) + 1 "
    '                      sSql = sSql & "  From ColocacCred "
    '                      sSql = sSql & "  where cctaCod = '" & psCtaCod & "'"
    '                      Call oBase.coConex.Ejecutar(sSql)
    '                End If
    '            Else
    '                    sSql = " Update ColocacCred SET nNroCalen = " & lnNroCalen - 2
    '                    sSql = sSql & " ,nNroCalPar = " & lnNroCalPar - 2
    '                    sSql = sSql & "  From ColocacCred "
    '                    sSql = sSql & "  where cctaCod = '" & psCtaCod & "'"
    '                    Call oBase.coConex.Ejecutar(sSql)
    '            End If
    '    End If
    'Else
    '    sSql = "DELETE From ColocCalendario where cctaCod = '" & psCtaCod & "' and nnrocalen >= ( "
    '    sSql = sSql & " Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '    Call oBase.coConex.Ejecutar(sSql)
    '
    '    sSql = "DELETE From ColocCalendDet where cctaCod = '" & psCtaCod & "' and nnrocalen >= ( "
    '    sSql = sSql & " Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)"
    '    Call oBase.coConex.Ejecutar(sSql)
    '
    '    'ALPA20140613*************************************************************************
    '    If Mid(psCtaCod, 6, 3) <> "801" Then
    '    sSql = " Update ColocacCred SET nNroCalen = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0)-1, "
    '        sSql = sSql & " nNroCalPar = (Select min(nNrocalen) From MovCol where cctaCod = '" & psCtaCod & "' and nMovNro = " & pnMov & " and nNroCalen <> 0 )  "
    '        sSql = sSql & "  From ColocacCred "
    '        sSql = sSql & "  where cctaCod = '" & psCtaCod & "'"
    '        Call oBase.coConex.Ejecutar(sSql)
    '    Else
    '        sSql = " Update ColocacCred SET nNroCalen = " & lnNroCalen - 2
    '        sSql = sSql & ", nNroCalPar = " & lnNroCalPar - 2
    '        sSql = sSql & "  From ColocacCred "
    '        sSql = sSql & "  where cctaCod = '" & psCtaCod & "'"
    '        Call oBase.coConex.Ejecutar(sSql)
    '    End If
    '    '***********************************************************************************
    ''            sSql = " Update Producto Set nSaldo = ( "
    ''            sSql = sSql & " Select SUM(CD.nMonto - CD.nMontoPagado) "
    ''            sSql = sSql & " from ColocCalendario C "
    ''            sSql = sSql & " Inner Join ColocCalendDet CD ON C.cCtaCod = CD.cCtaCod AND C.nNroCalen = CD.nNroCalen AND C.nColocCalendApl = CD.nColocCalendApl AND C.nCuota = CD.nCuota AND CD.nPrdConceptoCod = 1000"
    ''            sSql = sSql & " where  C.nNroCalen = (select nNroCalen from ColocacCred where cCtaCod = C.cCtaCod)"
    ''            sSql = sSql & " and C.cCtaCod = '" & psCtaCod & "' and C.nColocCalendApl = 1 and C.nColocCalendEstado = 0"
    ''            sSql = sSql & "  )"
    ''            sSql = sSql & " Where cCtaCod = '" & psCtaCod & "'"
    ''            Call oBase.coConex.Ejecutar(sSql)
    '
    '        'sSQL = " Update Producto SET nPrdEstado = (Select nCredEstado from MovCol where cCtaCod = '" & psCtaCod & "' AND nMovNro = " & pnMov & " AND cOpeCod like '1001%') "
    '        sSql = " Update Producto SET nPrdEstado = (Select nCredEstado from MovCol where cCtaCod = '" & psCtaCod & "' AND nMovNro = " & pnMov & " AND cOpeCod like '1001%')  Where   cCtaCod='" & psCtaCod & "'"
    '        Call oBase.coConex.Ejecutar(sSql)
    '
    'End If
    'RIRO 20200915 COMENTADO ****************************************

    'ACTUALIZA CAPTACIONES
    sSql = "Update "

    R.Close
    Set R = Nothing


    '***************************************************************
    'Si es Prepago
    '***************************************************************
    Dim dCred As COMDCredito.DCOMCalendario

    'If Not (psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque) Then
    If Not (psCodOpe = gCredDesembCtaExist Or psCodOpe = gCredDesembCtaNueva Or psCodOpe = gCredDesembCtaExistDOA Or psCodOpe = gCredDesembCtaNuevaDOA Or psCodOpe = gCredDesembEfec Or psCodOpe = gCredDesembCheque Or psCodOpe = gCredDesembLeasing) Then
        If pnPrepago = 1 Then

            Call oBase.dBeginTrans

            sSql = "Select MIN(nNroCuota) as nCuotaMin from MovColDet where nMovNro = " & pnMov
            Set R = oBase.coConex.CargaRecordSet(sSql)
            If R.RecordCount > 0 Then
                nCuotaMin = R!nCuotaMin
            End If
            R.Close

            Set R = oBase.RecuperaColocacCred(psCtaCod)
            nNroCalen = R!nNroCalen
            R.Close

            sSql = "DELETE ColocCalifMiViv Where nCuota >= " & nCuotaMin & " AND nNroCalen = " & nNroCalen & " AND cCtaCod = '" & psCtaCod & "'"
            oBase.coConex.Ejecutar (sSql)

            Set R = oBase.RecuperaColocacCred(psCtaCod)
            nNroCalen = R!nNroCalen - 2

            sSql = "Select ISNULL(MAX(nCuotaOrig),0) as nCuotaMax from ColocCalifMiViv where cCtaCod = '" & psCtaCod & "'"
            Set R = oBase.coConex.CargaRecordSet(sSql)
            If R.RecordCount > 0 Then
                i = R!nCuotaMax + 1
            End If
            R.Close

            Set dCred = New COMDCredito.DCOMCalendario
            Set R = dCred.RecuperaColocCalendario(psCtaCod, nNroCalen, gColocCalendAplCuota)
            Set dCred = Nothing

            Do While Not R.EOF
                If R!nCuota >= nCuotaMin Then
                    Call oBase.dInsertColocCalifMiViv(psCtaCod, i, nNroCalen, R!nCuota, R!dVenc, R!ncoloccalendestado)
                End If
                i = i + 1
                R.MoveNext
            Loop

            Call oBase.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , nNroCalen, , , , False, , , nNroCalen + 1)

            sSql = "DELETE ColocCalendDet Where nNroCalen = " & nNroCalen + 2 & " AND cCtaCod =  '" & psCtaCod & "'"
            Call oBase.coConex.Ejecutar(sSql)
            sSql = "DELETE ColocCalendDet Where nNroCalen = " & nNroCalen + 3 & " AND cCtaCod =  '" & psCtaCod & "'"
            Call oBase.coConex.Ejecutar(sSql)

            sSql = "DELETE ColocCalendario Where nNroCalen = " & nNroCalen + 2 & " AND cCtaCod =  '" & psCtaCod & "'"
            Call oBase.coConex.Ejecutar(sSql)
            sSql = "DELETE ColocCalendario Where nNroCalen = " & nNroCalen + 3 & " AND cCtaCod =  '" & psCtaCod & "'"
            Call oBase.coConex.Ejecutar(sSql)

                nMovNroCond = 0
                sSql = "Select * From MovRef Where nMovNroRef = " & pnMov
                Set R = oBase.coConex.CargaRecordSet(sSql)
                If R.RecordCount > 0 Then
                    nMovNroCond = R!nMovNro
                End If
                R.Close

                If nMovNroCond <> 0 Then
                    sSql = "Select * From MovCol Where nMovNro = " & nMovNroCond
                    Set R = oBase.coConex.CargaRecordSet(sSql)
                    If R.RecordCount > 0 Then
                        nMontoCond = R!nMonto
                    End If
                    R.Close
                End If

                If nMontoCond <> 0 Then
                    sSql = "Update Producto Set nSaldo = nSaldo + " & Format(nMontoCond, "#0.00") & " Where cCtaCod = '" & psCtaCod & "'"
                    Call oBase.coConex.Ejecutar(sSql)

                    sSql = "Update Mov Set nMovFlag = 1 Where nMovNro = " & nMovNroCond
                    Call oBase.coConex.Ejecutar(sSql)

                End If
            oBase.ExtornaLiquidacion (psCtaCod) 'RIRO 20200915 EXTORNAR LIQUIDACIÓN
            Call oBase.dCommitTrans
        Else 'Si no es un prepago verificar si ha sido una cuota con evaluacion de Mivivienda
            If Mid(psCtaCod, 6, 3) = "402" Then
                sSql = "Select MIN(nNroCuota) as nCuotaMin from MovColDet where nMovNro = " & pnMov
                Set R = oBase.coConex.CargaRecordSet(sSql)
                If R.RecordCount > 0 Then
                    nCuotaMin = R!nCuotaMin
                End If
                R.Close

                nMovNroCond = 0
                sSql = "Select * From MovRef Where nMovNroRef = " & pnMov
                Set R = oBase.coConex.CargaRecordSet(sSql)
                If R.RecordCount > 0 Then
                    nMovNroCond = R!nMovNro
                End If
                R.Close

                If nMovNroCond <> 0 Then
                    sSql = "Select * From MovCol Where nMovNro = " & nMovNroCond
                    Set R = oBase.coConex.CargaRecordSet(sSql)
                    If R.RecordCount > 0 Then
                        nMontoCond = R!nMonto
                    End If
                    R.Close
                End If

                Set R = oBase.RecuperaColocacCred(psCtaCod)
                nNroCalen = R!nNroCalen
                nNroCalenPar = R!nNroCalPar
                R.Close

                If nCuotaMin = 5 Or (((nCuotaMin - 5) Mod 6) = 0) Then

                    sSql = " UPDATE ColocCalifMiViv Set cColocMiVivEval = NULL Where nCuota >= " & Trim(Str(nCuotaMin - 5)) & " AND nCuota <= " & nCuotaMin
                    sSql = sSql & " AND cCtaCod = '" & psCtaCod & "' AND nNroCalen = " & nNroCalen
                    Call oBase.coConex.Ejecutar(sSql)

                    sSql = " UPDATE ColocCalifMiViv Set nColocCalendEstado = 0 Where nCuota = " & nCuotaMin
                    sSql = sSql & " AND cCtaCod = '" & psCtaCod & "' AND nNroCalen = " & nNroCalen
                    Call oBase.coConex.Ejecutar(sSql)

                    sSql = " UPDATE ColocCalendario Set nColocCalendEstado = 0  Where nCuota >= " & nCuotaMin + 2 & " AND nCuota <= " & nCuotaMin + 7
                    sSql = sSql & " AND cCtaCod = '" & psCtaCod & "' AND nNroCalen = " & nNroCalenPar & " AND nColocCalendApl = 1 "
                    Call oBase.coConex.Ejecutar(sSql)

                    If nMontoCond <> 0 Then
                        sSql = "Update Producto Set nSaldo = nSaldo + " & Format(nMontoCond, "#0.00") & " Where cCtaCod = '" & psCtaCod & "'"
                        Call oBase.coConex.Ejecutar(sSql)

                        sSql = "Update Mov Set nMovFlag = 1 Where nMovNro = " & nMovNroCond
                        Call oBase.coConex.Ejecutar(sSql)

                    End If

                End If
            End If
        End If
    End If
    
    '******************************************************************************
    'BRGO Si es Crédito Ecotaxi - Se elimina la relación de Cuenta para abono de recaudo
    '******************************************************************************
    sSql = " DELETE FROM ProductoPersonaInfogas WHERE cCtaCod = '" & psCtaCod & "' "
    sSql = sSql & " AND nPrdPersRelac = " & gColRelPersTitularCred
    Call oBase.coConex.Ejecutar(sSql)
    '*** END BRGO *************************************************************
    
    'JUEZ 20120922 Si hay datos registrados en motivo de cancelacion lo borra *******
    sSql = " DELETE FROM CredPagoCancAnt WHERE cCtaCod = '" & psCtaCod & "' "
    Call oBase.coConex.Ejecutar(sSql)
    'END JUEZ ***********************************************************************
    
    'AMDO 20130320 CrediPremiazo *******************************
     Dim oVarSist As COMDConstSistema.DCOMGeneral
     Set oVarSist = New COMDConstSistema.DCOMGeneral
     Dim pCrediPremiazo As Integer
     pCrediPremiazo = oVarSist.LeeConstSistema(432)
     Set oVarSist = Nothing
    

     If pCrediPremiazo = 1 Then
     Call oBase.ExtornaPuntosCrediPremiazo(pnMov, psCtaCod)
     End If
    'END AMDO *************************************************
    
    'JUEZ 20131022 ********************************************
    'Set oDCred = New COMDCredito.DCOMCredito
    'Set R = oDCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogRoyaAmarilla, 1)
    'If R.RecordCount > 0 Then
    '    Call oBase.dUpdateCredReprogNatEspeciales(R!nmovnro, 0)
    'Set oDCred = Nothing
    'End If
    'If Not pbPagoHonra Then 'WIOR 20131230
    '    Call oBase.dExtornaCredReprogNatEspeciales(psCtaCod, gCredReprogRoyaAmarilla, 1) 'JUEZ 20131116
    'End If
    'END JUEZ *************************************************
    'WIOR 20131230 ****************************
    If pbPagoHonra Then
        Call OperacionCredHonrado(2, psCtaCod, 0, -1 * pnMonto)
    End If
    'WIOR FIN *********************************
    'LUCV20160608, ERS004-2016 (Refinanciados)*****
    If pbVigeRefi Then
    Set oDCred = New COMDCredito.DCOMCredito
    Set R = oDCred.RecuperaEstadoCreditoRefinanciado(psCtaCod)
        Do While Not R.EOF ' Actualiza el estado de los creditos refinanciados. de estado: 2060 a Estado Anterior
        Call oBase.dUpdateProducto_Estado(R!cCtaCod, R!nPrdEstado, pdFecSis, , False, False)
        R.MoveNext
        Loop
        R.Close
        Set oDCred = Nothing
        
    Set oDCred = New COMDCredito.DCOMCredito
    Set R = oDCred.RecuperaCreditoRefinanciado(psCtaCod)
        If Not R.EOF Or R.BOF Then
        nEstado = R!nEstado
        sSql = " Delete from ColocacRefinancDet where cCtaCod = '" & psCtaCod & "' and nEstado = " & nEstado & " "
         Call oBase.coConex.Ejecutar(sSql)
        sSql = " Delete from ColocacRefinanc where cCtaCod = '" & psCtaCod & "' and nEstado = " & nEstado & " "
         Call oBase.coConex.Ejecutar(sSql)
        R.Close
        Set R = Nothing
        Set oDCred = Nothing
        End If
    End If
    '***** Fin LUCV LUCV20160608
    '***** APRI20180202 ERS028-2017
    Set oDCred = New COMDCredito.DCOMCredito
    oDCred.ExtornaSegMultiriesgoDesgravamenTrama (psCtaCod)
    '***** END APRI
    
    
    Set oBase = Nothing

End Sub

Public Sub ExtornarPagoEnLote(ByVal pnMovNro As Long, ByVal pdFecSis As Date, ByVal psCodUser As String, ByVal psCodAge As String, Optional ByRef sImpreBoleta As String, _
Optional ByVal psMotExtorno As Variant) 'CTI3 (ferimoro)
Dim R As ADODB.Recordset
Dim oCreditos As COMDCredito.DCOMCreditos
Dim oBase As COMDCredito.DCOMCredActBD
Dim sMovNro As String
Dim nMovNro As Long
Dim oFun As COMNContabilidad.NCOMContFunciones
'JIPR 22/06/2018
Dim nSumaTotal As Double
Dim i As Integer
Dim oCredDoc As COMNCredito.NCOMCredDoc
Set oCredDoc = New COMNCredito.NCOMCredDoc
'JIPR 22/06/2018

    Set oFun = New COMNContabilidad.NCOMContFunciones
    sMovNro = oFun.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
    Set oFun = Nothing

    Set oCreditos = New COMDCredito.DCOMCreditos
    Set R = oCreditos.RecuperaCreditosdePagoEnLote(pnMovNro)
    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    Call oBase.dUpdateMov(pnMovNro, , , , gMovFlagExtornado, False)
    Call oBase.dInsertMov(sMovNro, gCredExtPagoLote, "Extorno de Pago", gMovEstContabNoContable, gMovFlagDeExtorno, False)
    nMovNro = oBase.dGetnMovNro(sMovNro)
    '***CTI3 (ferimoro) 17102018
    Call oBase.dInsertDetExtMov(nMovNro, gCredExtPagoLote, 0, "", False, psMotExtorno(0), psMotExtorno(1)) 'ABC
    '***********
    Do While Not R.EOF
        Call ExtornarCredito(R!cCtaCod, pdFecSis, psCodUser, psCodAge, pnMovNro, R!copecod, R!nMonto, , True, oBase, nMovNro)
               nSumaTotal = R!nMonto + nSumaTotal 'JIPR 22/06/2018
        R.MoveNext
    Loop
    
    sImpreBoleta = oCredDoc.ImprimeBoletaPagoLote(pnMovNro, "Extorno de Pago en Lote", pdFecSis, psCodUser, psCodAge, nSumaTotal)
    oBase.dCommitTrans
    Set oBase = Nothing
    R.Close
    Set R = Nothing
End Sub

Public Function ValidaNivelAprUsuario(ByVal psCodUser As String, ByVal pnMonto As Double, psMoneda As String, ByVal psProducto As String, ByVal pbRefinanc As Boolean) As Boolean
Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaNivelesAprUsuario(psCodUser, pnMonto, psMoneda, psProducto, pbRefinanc)
    If R.RecordCount > 0 Then
        ValidaNivelAprUsuario = True
    Else
        ValidaNivelAprUsuario = False
    End If
    R.Close
    Set R = Nothing
End Function

Public Sub EvaluacionBuenPagador(ByVal psCtaCod As String, ByVal pdHoy As Date, _
    ByVal psCodAge As String, ByVal psCodUser As String, ByVal pnMov As Long)

Dim sSql As String
Dim oConec As COMConecta.DCOMConecta
Dim R As ADODB.Recordset
Dim nUltimaEval As Integer
Dim nAplicaFinal As Integer
Dim nAplicaInicial As Integer
Dim nEstado As Integer
Dim nEvaluaIni As Integer
Dim nEvaluaFin As Integer
Dim nTotalPagosMalos As Integer
Dim nEvaluaBuenPagador  As Integer
Dim oCredDB As COMDCredito.DCOMCredActBD
Dim nNroCalen As Integer
Dim nNrocalenParalelo As Integer
Dim i As Integer
Dim nMontoCondonado As Double
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim sMovNro As String
Dim nMovNro As Long

    Set oConec = New COMConecta.DCOMConecta
    oConec.AbreConexion

    'sSql = "Select MAX(CC.nCuota) as nCuota from ColocCalendario CC Where CC.cColocMiVivEval = 'E' "
    'sSql = sSql & " AND CC.cCtaCod = '" & psCtaCod & "' AND CC.nNroCalen = (Select nNroCalen From ColocacCred Where cCtaCod = CC.cCtaCod) "
    'sSql = sSql & " AND nColocCalendApl = 1 "

    sSql = "Select MAX(CC.nCuotaOrig) as nCuota from ColocCalifMiViv CC Where CC.cColocMiVivEval = 'E' "
    sSql = sSql & " AND CC.cCtaCod = '" & psCtaCod & "' "

    Set R = oConec.CargaRecordSet(sSql)
    nUltimaEval = IIf(IsNull(R!nCuota), 0, R!nCuota)
    R.Close
    If nUltimaEval = 0 Then
        nAplicaFinal = 5
    Else
        nAplicaFinal = nUltimaEval + 6
    End If

    'Verfico si ya esta Cancelada

    'sSql = "Select nColocCalendEstado  from ColocCalendario CC "
    'sSql = sSql & " Where CC.cCtaCod = '" & psCtaCod & "' AND CC.nNroCalen = (Select nNroCalen From ColocacCred wHERE cCtaCod = CC.cCtaCod) "
    'sSql = sSql & " AND nColocCalendApl = 1 AND nCuota = " & nAplicaFinal

    sSql = "Select nColocCalendEstado  from ColocCalifMiViv CC "
    sSql = sSql & " Where CC.cCtaCod = '" & psCtaCod & "' "
    sSql = sSql & "     AND nCuotaOrig = " & nAplicaFinal

    Set R = oConec.CargaRecordSet(sSql)
    nEstado = R!ncoloccalendestado
    R.Close
    If nEstado = gColocCalendEstadoPagado Then
        If nAplicaFinal = 5 Then
            nAplicaInicial = nAplicaFinal + 2
            nAplicaFinal = nAplicaFinal + 7
            nEvaluaIni = 1
            nEvaluaFin = 5
        Else
            nAplicaInicial = nAplicaFinal + 2
            nAplicaFinal = nAplicaFinal + 7
            nEvaluaIni = nUltimaEval + 1
            nEvaluaFin = nUltimaEval + 6
        End If

        '*****************************************************************
        'Evaluamos si fue mal pagador es decir si se atraso en algun pago
        '*****************************************************************

        'sSql = "Select COUNT(CC.cCtaCod) as nTotal From ColocCalendario CC "
        'sSql = sSql & " Where CC.cCtaCod = '" & psCtaCod & "' AND CC.nNroCalen  = (Select nNroCalen From ColocacCred Where cCtaCod = CC.cCtaCod)"
        'sSql = sSql & " AND CC.nCuota >= " & nEvaluaIni & " AND CC.nCuota <= " & nEvaluaFin
        'sSql = sSql & " AND nColocCalendApl = 1 "
        'sSql = sSql & " AND (CC.dPago >= DATEADD(day,30,CC.dVenc) OR CC.dPago is null) "

        sSql = "Select COUNT(CC.cCtaCod) as nTotal From ColocCalifMiViv CC "
        sSql = sSql & " Where CC.cCtaCod = '" & psCtaCod & "' "
        sSql = sSql & " AND CC.nCuotaOrig >= " & nEvaluaIni & " AND CC.nCuotaOrig <= " & nEvaluaFin
        sSql = sSql & " AND (CC.dPago >= DATEADD(day,30,CC.dVenc) OR CC.dPago is null) "

        Set R = oConec.CargaRecordSet(sSql)
        nTotalPagosMalos = IIf(IsNull(R!nTotal), 0, R!nTotal)
        R.Close

        sSql = "Select nNrocalen,nNroCalPar from ColocacCred Where cCtaCod = '" & psCtaCod & "'"
        Set R = oConec.CargaRecordSet(sSql)
        nNroCalen = R!nNroCalen
        nNrocalenParalelo = R!nNroCalPar
        R.Close

        If nTotalPagosMalos = 0 Then
            nEvaluaBuenPagador = 1
        Else
            nEvaluaBuenPagador = 0
        End If

        If nEvaluaBuenPagador = 1 Then 'Reduzco el saldo de la deuda con el monto condonado
            'nAplicaInicial    nAplicaFinal
            sSql = "Select ISNULL(SUM(nMonto),0) as nMontoCondonado From ColocCalendDet CD  "
            sSql = sSql & " Where cCtaCod = '" & psCtaCod & "' "
            sSql = sSql & "  AND   CD.nColocCalendApl = " & gColocCalendAplCuota
            sSql = sSql & "  AND   CD.nCuota >= " & nAplicaInicial & " AND CD.nCuota <= " & nAplicaFinal
            sSql = sSql & "  AND CD.nPrdConceptoCod = 1000 "
            sSql = sSql & "  AND nNroCalen = " & nNrocalenParalelo

            Set R = oConec.CargaRecordSet(sSql)
            nMontoCondonado = R!nMontoCondonado
            R.Close

        End If

        'Actualizo Tablas
        Set oCredDB = New COMDCredito.DCOMCredActBD
        oCredDB.dBeginTrans

        Call oCredDB.dUpdateColocacCred(psCtaCod, , , , , , , , , , , , , , , , , , , , , , nEvaluaBuenPagador)
        For i = nEvaluaIni To nEvaluaFin
            Call oCredDB.dUpdateColocCalendario(psCtaCod, nNroCalen, i, gColocCalendAplCuota, , , , gColocCalendConceptoProcOtro, False, "E")
            Call oCredDB.dUpdateColocCalifMiViv(psCtaCod, nNroCalen, i, , "E")
        Next i

        If nEvaluaBuenPagador = 1 Then

            Set oFunciones = New COMNContabilidad.NCOMContFunciones
            sMovNro = oFunciones.GeneraMovNro(pdHoy, psCodAge, psCodUser)
            Set oFunciones = Nothing
            Call oCredDB.dInsertMov(sMovNro, gCredMiVivCondonacion, "CONDONACION DE DEUDA", gMovEstContabMovContable, gMovFlagVigente, False)
            nMovNro = oCredDB.dGetnMovNro(sMovNro)
            Call oCredDB.dInsertMovCol(nMovNro, gCredMiVivCondonacion, psCtaCod, _
                nNrocalenParalelo, nMontoCondonado, 0, "", 0, 0, 0, False)
            Call oCredDB.dInsertMovColDet(nMovNro, gCredMiVivCondonacion, psCtaCod, CLng(nNrocalenParalelo), _
                gColocConceptoCodCapital, 0, nMontoCondonado, False)
            Call oCredDB.dUpdateProducto(psCtaCod, , nMontoCondonado, , , , False, 1)
            Call oCredDB.dInsertMovRef(nMovNro, pnMov, False)

            'Cancelo las Cuotas de Segundo Tramo
            For i = nAplicaInicial To nAplicaFinal
                Call oCredDB.dUpdateColocCalendario(psCtaCod, nNrocalenParalelo, i, gColocCalendAplCuota, , gColocCalendEstadoPagado, , gColocCalendConceptoProcOtro, False, "E")
                Call oCredDB.dUpdateColocCalifMiViv(psCtaCod, nNroCalen, i, , , , CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Mid(sMovNro, 1, 4) & " " & Mid(sMovNro, 9, 2) & ":" & Mid(sMovNro, 11, 2) & ":" & Mid(sMovNro, 13, 2)))
            Next i

        End If

        oCredDB.dCommitTrans
        Set oCredDB = Nothing
    End If

    oConec.CierraConexion
    Set oConec = Nothing

End Sub
Function CFijaFechaFijaTrabajadores(ByVal pTasa As Double, ByVal pnNroCuotas As Integer, ByVal pnMonto As Double) As Double

    'obteniendo la cuota
Dim nTasaDiaria As Double
Dim nTasaQuincenal As Double
Dim nNumerador As Double
Dim nDenominador As Double

    nTasaDiaria = ((1 + (pTasa / 100)) ^ (1 / 30) - 1) * 100
    nTasaQuincenal = ((1 + (nTasaDiaria / 100)) ^ (15) - 1)

    nNumerador = ((1 + nTasaQuincenal) ^ pnNroCuotas) * nTasaQuincenal
    nDenominador = ((1 + nTasaQuincenal) ^ pnNroCuotas) - 1

    CFijaFechaFijaTrabajadores = Format((nNumerador / nDenominador) * pnMonto, "#0.00")
End Function

Public Property Get pMensaje() As String
    pMensaje = lsMensaje
End Property
Public Property Let pMensaje(ByVal vNewValue As String)
    lsMensaje = vNewValue
End Property

Function InsertaRemesaCheque(ByVal psCodAgen As String, ByVal psCodUser As String, ByVal pdHoy As Date, _
                                          ByVal nImporte As Double, ByVal psCodCheque As String, ByVal pnMoneda As Integer, _
                                          ByVal pnMovNroRef As Long, ByVal psGlosa As String, ByVal psReferencia As String) As Boolean
    Dim nMovNro As Long
    Dim sMovNro As String
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim sSql As String
    
    On Error GoTo ErrHandler
    Set oBase = New COMDCredito.DCOMCredActBD
    sMovNro = oBase.GeneraMovNro(pdHoy, psCodAgen, psCodUser)
    oBase.dBeginTrans
    
    Call oBase.dInsertMov(sMovNro, "300700", psGlosa, gMovEstContabMovContable)
    nMovNro = oBase.dGetnMovNro(sMovNro)
    'Insertando en MovOpeVarias
    sSql = "Insert Into MovOpeVarias Values("
    sSql = sSql & nMovNro & ","
    sSql = sSql & nImporte & ","
    sSql = sSql & " '" & psCodCheque & "',"
    sSql = sSql & "'" & psReferencia & "',"
    sSql = sSql & pnMoneda & ","
    sSql = sSql & "'300700')"
    
    oBase.coConex.Ejecutar sSql
    
    sSql = "Insert Into MovRef(nMovNro,nMovNroRef) Values("
    sSql = sSql & nMovNro & ","
    sSql = sSql & pnMovNroRef & ")"
    
    oBase.coConex.Ejecutar sSql
    
    oBase.dCommitTrans
    InsertaRemesaCheque = True
    Exit Function
ErrHandler:
    oBase.dRollbackTrans
    Set oBase = Nothing
    InsertaRemesaCheque = False
End Function



'***************** FUNCIONES DE CREDITOS(Modulo gCredFunciones)

Public Function MontoTotalGastosGenerado(ByVal MatGastos As Variant, ByVal pnNumGastosCancel As Integer, _
    Optional ByVal psTipoGastoProc As Variant = "") As Double
    Dim i As Integer
    MontoTotalGastosGenerado = 0
    For i = 0 To pnNumGastosCancel - 1
        If MatGastos(i, 4) = psTipoGastoProc(0) Or MatGastos(i, 4) = psTipoGastoProc(1) Or MatGastos(i, 4) = psTipoGastoProc(2) Then
            MontoTotalGastosGenerado = MontoTotalGastosGenerado + CDbl(MatGastos(i, 3))
        End If
    Next i

End Function

Public Function DiferencialMatricesMiVivienda(ByVal pMat1 As Variant, ByVal pMat2 As Variant) As Variant
Dim i As Integer
Dim MatResul As Variant
    ReDim MatResul(UBound(pMat1), 7)
    For i = 0 To UBound(pMat1) - 1
        MatResul(i, 0) = pMat1(i, 0) 'fecha
        MatResul(i, 1) = pMat1(i, 1) 'Cuota
        MatResul(i, 2) = pMat1(i, 2) 'Monto Cuota
        MatResul(i, 3) = Format(CDbl(pMat2(i, 3)) - CDbl(pMat1(i, 3)), "#0.00") 'Capital
        MatResul(i, 4) = Format(CDbl(pMat2(i, 4)) - CDbl(pMat1(i, 4)), "#0.00") 'Interes
        'MatResul(i, 5) = Format(CDbl(pMat2(i, 5)) - CDbl(pMat1(i, 5)), "#0.00") 'Gracia
        'MatResul(i, 6) = Format(CDbl(pMat2(i, 6)) - CDbl(pMat1(i, 6)), "#0.00") 'Gasto
    Next i
    DiferencialMatricesMiVivienda = MatResul
End Function

Public Function UnirMatricesMiViviendaAmortizacion(ByVal pMat1 As Variant, ByVal pMat2 As Variant) As Variant
Dim i, J, k As Integer
Dim MatResul As Variant
Dim nMonto As Double

    ReDim MatResul(UBound(pMat1), 13)
    For i = 0 To UBound(pMat1) - 1
        MatResul(i, 0) = pMat1(i, 0) 'fecha
        MatResul(i, 1) = pMat1(i, 1) 'Cuota
        MatResul(i, 2) = pMat1(i, 2) 'Monto Cuota
        For J = 3 To 12 'unimos concepto por concepto
            nMonto = 0
            For k = 0 To UBound(pMat2) - 1 'buscamos su cuota equivalente en calendatio paralelo
                If pMat1(i, 1) = pMat2(k, 1) Then 'si se encuentra la fila de la cuota
                    nMonto = CDbl(pMat2(k, J))
                    Exit For
                End If
            Next k
            MatResul(i, J) = Format(CDbl(pMat1(i, J)) + nMonto, "#0.00")
        Next J
        'MatResul(i, 3) = Format(CDbl(pMat1(i, 3)) + CDbl(pMat2(i, 3)), "#0.00") 'Capital
        'MatResul(i, 4) = Format(CDbl(pMat1(i, 4)) + CDbl(pMat2(i, 4)), "#0.00") 'Interes
        'MatResul(i, 5) = Format(CDbl(pMat1(i, 5)) + CDbl(pMat2(i, 5)), "#0.00") 'Interes Gracia
        'MatResul(i, 6) = Format(CDbl(pMat1(i, 6)) + CDbl(pMat2(i, 6)), "#0.00") 'Interes Mora
        'MatResul(i, 7) = Format(CDbl(pMat1(i, 7)) + CDbl(pMat2(i, 7)), "#0.00") 'Interes Reprog
        'MatResul(i, 8) = Format(CDbl(pMat1(i, 8)) + CDbl(pMat2(i, 8)), "#0.00") 'Interes Suspenso
        'MatResul(i, 9) = Format(CDbl(pMat1(i, 9)) + CDbl(pMat2(i, 9)), "#0.00") 'Interes Gasto
        'MatResul(i, 10) = Format(CDbl(pMat1(i, 10)) + CDbl(pMat2(i, 10)), "#0.00") 'Saldo
    Next i
    
    UnirMatricesMiViviendaAmortizacion = MatResul
    
End Function

Public Function UnirMatricesCalendarioIguales(ByVal pMat1 As Variant, ByVal pMat2 As Variant, ByVal pnMonto As Double)
Dim i As Integer
Dim nMontoSaldo As Double
Dim pMat2Temp As Variant
        pMat2Temp = pMat2
        For i = 0 To UBound(pMat1) - 1
            pMat2Temp(i, 3) = Format(CDbl(pMat1(i, 3)) + CDbl(pMat2(i, 3)), "#0.00") 'Capital
            pMat2Temp(i, 4) = Format(CDbl(pMat1(i, 4)) + CDbl(pMat2(i, 4)), "#0.00") 'Interes
            pMat2Temp(i, 5) = Format(CDbl(pMat1(i, 5)) + CDbl(pMat2(i, 5)), "#0.00") 'Gracia
            pMat2Temp(i, 6) = Format(CDbl(pMat1(i, 6)) + CDbl(pMat2(i, 6)), "#0.00") 'Gasto
            
            pMat2Temp(i, 2) = Format(CDbl(pMat2Temp(i, 3)) + CDbl(pMat2Temp(i, 4)) + CDbl(pMat2Temp(i, 5)) + CDbl(pMat2Temp(i, 6)), "#0.00") 'Monto Cuota
        Next i
        nMontoSaldo = pnMonto
        For i = 0 To UBound(pMat2) - 2
            nMontoSaldo = Format(nMontoSaldo - CDbl(pMat2Temp(i, 3)), "#0.00")
            pMat2Temp(i, 7) = Format(nMontoSaldo, "#0.00")
        Next i
        
        pMat2Temp(UBound(pMat2) - 1, 7) = "0.00"
        
        UnirMatricesCalendarioIguales = pMat2Temp
        
End Function


Public Function UnirMatricesMiVivienda(ByVal pMat1 As Variant, ByVal pMat2 As Variant, _
    ByVal pnMonto As Double) As Variant
Dim i As Integer
Dim MatResul() As String
Dim nNumProrat As Integer
Dim nMontoTemp As Double
Dim nCuotaTemp As Double
Dim nMontoTotal As Double
Dim nIndS As Integer
        nMontoTemp = pnMonto
        ReDim MatResul(UBound(pMat1), 8)
        nNumProrat = 0
        nIndS = -1
        For i = 0 To UBound(pMat1) - 1
            If i < 6 Then
                MatResul(i, 0) = pMat1(i, 0) 'fecha
                MatResul(i, 1) = pMat1(i, 1) 'Cuota
                MatResul(i, 2) = pMat1(i, 2) 'Monto Cuota
                MatResul(i, 3) = pMat1(i, 3) 'Capital
                MatResul(i, 4) = pMat1(i, 4) 'Interes
                MatResul(i, 5) = pMat1(i, 5) 'Gracia
                MatResul(i, 6) = pMat1(i, 6) 'Gasto
                'MatResul(i, 7) = pMat1(i, 7) 'Saldo
            Else
                MatResul(i, 0) = pMat1(i, 0) 'fecha
                MatResul(i, 1) = pMat1(i, 1) 'Cuota
                MatResul(i, 3) = Format(CDbl(pMat1(i, 3)) + CDbl(pMat2(nIndS, 3)) / nNumProrat, "#0.00") 'Capital
                MatResul(i, 4) = Format(CDbl(pMat1(i, 4)) + CDbl(pMat2(nIndS, 4)) / nNumProrat, "#0.00") 'Interes
                MatResul(i, 5) = Format(CDbl(pMat1(i, 5)) + CDbl(pMat2(nIndS, 5)) / nNumProrat, "#0.00") 'Gracia
                MatResul(i, 6) = Format(CDbl(pMat1(i, 6)) + CDbl(pMat2(nIndS, 6)) / nNumProrat, "#0.00") 'Gasto
                MatResul(i, 2) = Format(CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6)), "#0.00")
                'MatResul(i, 7) = pMat1(i, 7) 'Saldo
                
                nCuotaTemp = Format(CDbl(pMat1(i, 2)) + CDbl(pMat2(nIndS, 2)) / nNumProrat, "#0.00") 'Monto Cuota
                If nCuotaTemp <> (CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6))) Then
                    MatResul(i, 4) = Format(CDbl(MatResul(i, 4)) + (nCuotaTemp - (CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6)))), "#0.00")
                    MatResul(i, 2) = Format(CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6)), "#0.00")
                End If
                
            End If
                        
            
            If (i + 1) Mod 6 = 0 Then
                If i <> 0 Then
                    nIndS = nIndS + 1
                End If
                If (UBound(pMat1) - i) >= 6 Then
                    nNumProrat = 6
                Else
                    nNumProrat = UBound(pMat1) - i
                End If
            End If
        Next i
                
        'Agregando la ultima Cuota Semestral
        MatResul(UBound(MatResul) - 1, 3) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) + CDbl(pMat2(UBound(pMat2) - 1, 3)), "#0.00")  'Capital
        MatResul(UBound(MatResul) - 1, 4) = Format(CDbl(MatResul(UBound(MatResul) - 1, 4)) + CDbl(pMat2(UBound(pMat2) - 1, 4)), "#0.00")  'Interes
        MatResul(UBound(MatResul) - 1, 5) = Format(CDbl(MatResul(UBound(MatResul) - 1, 5)) + CDbl(pMat2(UBound(pMat2) - 1, 5)), "#0.00")  'Gracia
        MatResul(UBound(MatResul) - 1, 6) = Format(CDbl(MatResul(UBound(MatResul) - 1, 6)) + CDbl(pMat2(UBound(pMat2) - 1, 6)), "#0.00")  'Gasto
        MatResul(UBound(MatResul) - 1, 2) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) + CDbl(MatResul(UBound(MatResul) - 1, 4)) + CDbl(MatResul(UBound(MatResul) - 1, 5)) + CDbl(MatResul(UBound(MatResul) - 1, 6)), "#0.00")
                
        'Comprobando Capital Total sea Igual a Prestamo
        nMontoTotal = 0
        For i = 0 To UBound(MatResul) - 1
            nMontoTotal = nMontoTotal + CDbl(MatResul(i, 3))
        Next i
        
        If nMontoTotal <> pnMonto Then
            MatResul(UBound(MatResul) - 1, 3) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) - (nMontoTotal - pnMonto), "#0.00")
            MatResul(UBound(MatResul) - 1, 2) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) + CDbl(MatResul(UBound(MatResul) - 1, 4)) + CDbl(MatResul(UBound(MatResul) - 1, 5)) + CDbl(MatResul(UBound(MatResul) - 1, 6)), "#0.00")
        End If
        
        nMontoTemp = pnMonto
        For i = 0 To UBound(MatResul) - 1
            nMontoTemp = nMontoTemp - CDbl(MatResul(i, 3))
            nMontoTemp = Format(nMontoTemp, "#0.00")
            MatResul(i, 7) = Format(nMontoTemp, "#0.00")
        Next i
        
        
        UnirMatricesMiVivienda = MatResul
End Function

Public Function UnirMatricesMiViviendaReprogramado(ByVal pMat1 As Variant, ByVal pMat2 As Variant, _
    ByVal pnMonto As Double, ByVal nCalifBuenPagador As Integer, ByVal pnFinalCuota As Integer) As Variant
Dim i As Integer
Dim MatResul() As String
Dim nNumProrat As Integer
Dim nMontoTemp As Double
Dim nCuotaTemp As Double
Dim nMontoTotal As Double
Dim nIndS As Integer
Dim k As Integer

        nMontoTemp = pnMonto
        ReDim MatResul(UBound(pMat1), 8)
        nNumProrat = 0
        nIndS = 0
        k = -10
        For i = 0 To UBound(pMat1) - 1
            If i < pnFinalCuota And nCalifBuenPagador = 1 Then
                MatResul(i, 0) = pMat1(i, 0) 'fecha
                MatResul(i, 1) = pMat1(i, 1) 'Cuota
                MatResul(i, 2) = pMat1(i, 2) 'Monto Cuota
                MatResul(i, 3) = pMat1(i, 3) 'Capital
                MatResul(i, 4) = pMat1(i, 4) 'Interes
                MatResul(i, 5) = pMat1(i, 5) 'Gracia
                MatResul(i, 6) = pMat1(i, 6) 'Gasto
                'MatResul(i, 7) = pMat1(i, 7) 'Saldo
            Else
                If nNumProrat = 0 Then
                    nNumProrat = 6
                    k = 0
                End If
                MatResul(i, 0) = pMat1(i, 0) 'fecha
                MatResul(i, 1) = pMat1(i, 1) 'Cuota
                MatResul(i, 3) = Format(CDbl(pMat1(i, 3)) + CDbl(pMat2(nIndS, 3)) / nNumProrat, "#0.00") 'Capital
                MatResul(i, 4) = Format(CDbl(pMat1(i, 4)) + CDbl(pMat2(nIndS, 4)) / nNumProrat, "#0.00") 'Interes
                MatResul(i, 5) = Format(CDbl(pMat1(i, 5)) + CDbl(pMat2(nIndS, 5)) / nNumProrat, "#0.00") 'Gracia
                MatResul(i, 6) = Format(CDbl(pMat1(i, 6)) + CDbl(pMat2(nIndS, 6)) / nNumProrat, "#0.00") 'Gasto
                MatResul(i, 2) = Format(CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6)), "#0.00")
                'MatResul(i, 7) = pMat1(i, 7) 'Saldo
                
                nCuotaTemp = Format(CDbl(pMat1(i, 2)) + CDbl(pMat2(nIndS, 2)) / nNumProrat, "#0.00") 'Monto Cuota
                If nCuotaTemp <> (CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6))) Then
                    MatResul(i, 4) = Format(CDbl(MatResul(i, 4)) + (nCuotaTemp - (CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6)))), "#0.00")
                    MatResul(i, 2) = Format(CDbl(MatResul(i, 3)) + CDbl(MatResul(i, 4)) + CDbl(MatResul(i, 5)) + CDbl(MatResul(i, 6)), "#0.00")
                End If
                
            End If
            
            If (k + 1) Mod 6 = 0 Then
                If k <> 0 Then
                    nIndS = nIndS + 1
                End If
                If (UBound(pMat1) - k) >= 6 Then
                    nNumProrat = 6
                Else
                    nNumProrat = UBound(pMat1) - k
                End If
            End If
            If k <> -10 Then
                k = k + 1
            End If
        Next i
                
        'Agregando la ultima Cuota Semestral
        'MatResul(UBound(MatResul) - 1, 3) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) + CDbl(pMat2(UBound(pMat2) - 1, 3)), "#0.00")  'Capital
        'MatResul(UBound(MatResul) - 1, 4) = Format(CDbl(MatResul(UBound(MatResul) - 1, 4)) + CDbl(pMat2(UBound(pMat2) - 1, 4)), "#0.00")  'Interes
        'MatResul(UBound(MatResul) - 1, 5) = Format(CDbl(MatResul(UBound(MatResul) - 1, 5)) + CDbl(pMat2(UBound(pMat2) - 1, 5)), "#0.00")  'Gracia
        'MatResul(UBound(MatResul) - 1, 6) = Format(CDbl(MatResul(UBound(MatResul) - 1, 6)) + CDbl(pMat2(UBound(pMat2) - 1, 6)), "#0.00")  'Gasto
        'MatResul(UBound(MatResul) - 1, 2) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) + CDbl(MatResul(UBound(MatResul) - 1, 4)) + CDbl(MatResul(UBound(MatResul) - 1, 5)) + CDbl(MatResul(UBound(MatResul) - 1, 6)), "#0.00")
                
        'Comprobando Capital Total sea Igual a Prestamo
        nMontoTotal = 0
        For i = 0 To UBound(MatResul) - 1
            nMontoTotal = nMontoTotal + CDbl(MatResul(i, 3))
        Next i
        
        If nMontoTotal <> pnMonto Then
            MatResul(UBound(MatResul) - 1, 3) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) - (nMontoTotal - pnMonto), "#0.00")
            MatResul(UBound(MatResul) - 1, 2) = Format(CDbl(MatResul(UBound(MatResul) - 1, 3)) + CDbl(MatResul(UBound(MatResul) - 1, 4)) + CDbl(MatResul(UBound(MatResul) - 1, 5)) + CDbl(MatResul(UBound(MatResul) - 1, 6)), "#0.00")
        End If
        
        nMontoTemp = pnMonto
        For i = 0 To UBound(MatResul) - 1
            nMontoTemp = nMontoTemp - CDbl(MatResul(i, 3))
            nMontoTemp = Format(nMontoTemp, "#0.00")
            MatResul(i, 7) = Format(nMontoTemp, "#0.00")
        Next i
        
        UnirMatricesMiViviendaReprogramado = MatResul
End Function

'*********************************************************************
'*********************** Funciones de DCredGeneral *******************
'*********************************************************************

Public Function CargaAnalistas() As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta
Dim sAnalistas As String
Dim oGen As COMDConstSistema.DCOMGeneral
    On Error GoTo ERRORCargaAnalistas
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    sAnalistas = oGen.LeeConstSistema(gConstSistRHCargoCodAnalistas)
    Set oGen = Nothing
    
    sSql = "Select R.cPersCod, P.cPersNombre from RRHH R inner join Persona P ON R.cPersCod = P.cpersCod "
    sSql = sSql & " AND nRHEstado = 201 "
    sSql = sSql & " inner join RHCargos RC ON R.cPersCod = RC.cPersCod "
    sSql = sSql & " where  RC.cRHCargoCod in (" & sAnalistas & ") AND RC.dRHCargoFecha = (select MAX(dRHCargoFecha) from RHCargos RHC2 where RHC2.cPersCod = RC.cPersCod) "
    sSql = sSql & " order by P.cPersNombre "
        
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set CargaAnalistas = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    
    Exit Function
ERRORCargaAnalistas:
'    MsgBox Err.Description, vbCritical, "Aviso"
    Err.Raise Err.Number, "Error", Err.Description
End Function
Public Function RecuperaParametro(Optional ByVal pnCodParametro As Integer = -1) As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrorRecuperaParametro
    sSql = "Select * from ColocParametro "
    If pnCodParametro <> -1 Then
        sSql = sSql & " WHERE nParamVar = " & pnCodParametro
    End If
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set RecuperaParametro = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorRecuperaParametro:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function RecuperaAgencias() As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrorRecuperaAgencias
    sSql = "Select cAgeCod,cAgeDescripcion from Agencias"
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set RecuperaAgencias = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorRecuperaAgencias:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

'*****************************************************
'Carga de todos los Datos para la Solicitud de Credito
'*****************************************************

Public Function CargaObjetosControles(ByVal psCtaCod As String, _
                            ByVal pbRefinanciar As Boolean, _
                            ByVal pbSustituirDeudor As Boolean, _
                            ByRef prsDatos As ADODB.Recordset, _
                            ByRef prsMod As ADODB.Recordset, _
                            ByRef pMatCredRef As Variant, _
                            ByRef pMatCredSust As Variant, _
                            ByRef prsRelac As ADODB.Recordset, _
                            ByRef pvMatCompraDeuda As Variant, ByRef pvMatAguaSaneamiento As Variant, _
                            ByRef prsDatosAporte As ADODB.Recordset, ByRef pvMatCreditoVerde As Variant) 'EJVG20160203 ERS002-2016 'EAAS 20180807 ERS-054-2018 pvMatAguaSaneamiento 'EAAS20191401 SEGUN 018-GM-DI_CMACM
'JOEP20181201 CP prsDatosAporte
Dim oCredito As COMDCredito.DCOMCredito
Dim MatCalendTemp As Variant
Dim i As Integer
Dim sPersCod As String
Dim lrsCompraDeuda As ADODB.Recordset 'EJVG20160203 ERS002-2016
Dim lrsAguaSaneamiento As ADODB.Recordset 'EAAS20180807 ERS054-2018
Dim pvListaAguaSaneamiento() As TAguaSaneamiento 'EAAS20180807 ERS054-2018
Dim lrsCreditoVerde As ADODB.Recordset 'EAAS20191401 SEGUN 018-GM-DI_CMACM
Dim pvListaCreditoVerde() As TCreditoVerde 'EAAS20191401 SEGUN 018-GM-DI_CMACM
Dim pvListaCompraDeuda() As TCompraDeuda

    On Error GoTo ErrorCargaObjetosControles
    
    Set oCredito = New COMDCredito.DCOMCredito
    
    Set prsDatos = oCredito.RecuperaSolicitud(psCtaCod)
    
    Set prsDatosAporte = oCredito.CP_ObtieneAporte(psCtaCod) 'cp_JOEP20181201 prsDatosAporte
    
    If Not prsDatos.EOF Then
        'Titular del Credito
        sPersCod = prsDatos!cPersCod
    End If
    
    If pbRefinanciar Then
        'Carga Refinanciados
        MatCalendTemp = RecuperaMatrizRefinanciados(psCtaCod)
        
        ReDim pMatCredRef(UBound(MatCalendTemp), 9)
        For i = 0 To UBound(MatCalendTemp) - 1
            pMatCredRef(i, 0) = MatCalendTemp(i, 1)
            pMatCredRef(i, 1) = MatCalendTemp(i, 2)
            pMatCredRef(i, 2) = MatCalendTemp(i, 3) 'Capital
            pMatCredRef(i, 3) = MatCalendTemp(i, 5) 'Int Comp
            pMatCredRef(i, 4) = MatCalendTemp(i, 9) 'Int Moratorio
            pMatCredRef(i, 5) = MatCalendTemp(i, 7) 'Int Gracia
            pMatCredRef(i, 6) = MatCalendTemp(i, 13) 'Int Suspenso
            pMatCredRef(i, 7) = MatCalendTemp(i, 11) 'Int Reprog
            pMatCredRef(i, 8) = MatCalendTemp(i, 15) 'gastos
            pMatCredRef(i, 9) = MatCalendTemp(i, 2)
        Next i
    Else
        If pbSustituirDeudor Then
            'Carga Refinanciados
            MatCalendTemp = RecuperaMatrizRefinanciados(psCtaCod)
            
            ReDim pMatCredSust(UBound(MatCalendTemp), 9)
            For i = 0 To UBound(MatCalendTemp) - 1
                pMatCredSust(i, 0) = MatCalendTemp(i, 1)
                pMatCredSust(i, 1) = MatCalendTemp(i, 2)
                pMatCredSust(i, 2) = MatCalendTemp(i, 3) 'Capital
                pMatCredSust(i, 3) = MatCalendTemp(i, 5) 'Int Comp
                pMatCredSust(i, 4) = MatCalendTemp(i, 9) 'Int Moratorio
                pMatCredSust(i, 5) = MatCalendTemp(i, 7) 'Int Gracia
                pMatCredSust(i, 6) = MatCalendTemp(i, 13) 'Int Suspenso
                pMatCredSust(i, 7) = MatCalendTemp(i, 11) 'Int Reprog
                pMatCredSust(i, 8) = MatCalendTemp(i, 15) 'gastos
                pMatCredSust(i, 9) = MatCalendTemp(i, 2)
            Next i
        End If
    End If
        
    'Carga Codigos Modulares de Titular
    Set prsMod = oCredito.CodigosModulares(sPersCod)
    
    'Se Agrego para cargar las relaciones automaticamente
    Set prsRelac = oCredito.RecuperaRelacPers(psCtaCod)
    
    'EJVG20160203 ***
    ReDim pvListaCompraDeuda(0)
    
    Set lrsCompraDeuda = oCredito.RecuperaCompraDeuda(psCtaCod)
    Do While Not lrsCompraDeuda.EOF
        ReDim Preserve pvListaCompraDeuda(lrsCompraDeuda.Bookmark)
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nID = lrsCompraDeuda!nItem
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).sIFICod = lrsCompraDeuda!cPersCodIFI
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).sIFINombre = lrsCompraDeuda!cPersNombreIFi
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nDestino = lrsCompraDeuda!nDestino
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).bRecompra = lrsCompraDeuda!bRecompra
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).sNroCredito = lrsCompraDeuda!cNroCredito
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nMoneda = lrsCompraDeuda!nMoneda
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nMontoDesembolso = lrsCompraDeuda!nMontoDesemb
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nNroCuotasPactadas = lrsCompraDeuda!nNroCuoPacta
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nNroCuotasPagadas = lrsCompraDeuda!nNroCuoPaga
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nSaldoComprar = lrsCompraDeuda!nSaldoComprar
        pvListaCompraDeuda(lrsCompraDeuda.Bookmark).nMontoCuota = lrsCompraDeuda!nMontoCuoPaga
        lrsCompraDeuda.MoveNext
    Loop
    lrsCompraDeuda.Close
    Set lrsCompraDeuda = Nothing
    
    pvMatCompraDeuda = pvListaCompraDeuda
    'END EJVG *******
        'INICIO EAAS 20180807 SEGUN ERS-054-2018 ***
    ReDim pvListaAguaSaneamiento(0)
    
    Set lrsAguaSaneamiento = oCredito.RecuperaAguaSaneamiento(psCtaCod)
    Do While Not lrsAguaSaneamiento.EOF
        ReDim Preserve pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark)
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nID = lrsAguaSaneamiento!nItem
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nDestinoCod = lrsAguaSaneamiento!nDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).sDestinoDescripcion = lrsAguaSaneamiento!cConsDescripcionDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nSubDestinoCod = lrsAguaSaneamiento!nSubDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).sSubDestinoDescripcion = lrsAguaSaneamiento!cConsDescripcionSubDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).sNroCredito = lrsAguaSaneamiento!cCtaCod
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nMontoS = lrsAguaSaneamiento!nMonto
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nBeneficia = lrsAguaSaneamiento!nNroBeneciados
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nSumaAguaSaneamiento = lrsAguaSaneamiento!nMontoDesembSubDestino 'INICIO EAAS20191401 SEGUN 018-GM-DI_CMACM
        lrsAguaSaneamiento.MoveNext
    Loop
    lrsAguaSaneamiento.Close
    Set lrsAguaSaneamiento = Nothing
    
    pvMatAguaSaneamiento = pvListaAguaSaneamiento
    'END EAAS 20180807 SEGUN ERS-054-2018 *******
    'INICIO EAAS20191401 SEGUN 018-GM-DI_CMACM ***
    ReDim pvListaCreditoVerde(0)
    
    Set lrsCreditoVerde = oCredito.RecuperaCreditoVerde(psCtaCod)
    Do While Not lrsCreditoVerde.EOF
        ReDim Preserve pvListaCreditoVerde(lrsCreditoVerde.Bookmark)
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nID = lrsCreditoVerde!nItem
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nDestinoCod = lrsCreditoVerde!nDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).sDestinoDescripcion = lrsCreditoVerde!cConsDescripcionDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nSubDestinoCod = lrsCreditoVerde!nSubDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).sSubDestinoDescripcion = lrsCreditoVerde!cConsDescripcionSubDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).sNroCredito = lrsCreditoVerde!cCtaCod
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nMontoS = lrsCreditoVerde!nMonto
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nBeneficia = lrsCreditoVerde!nNroBeneciados
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nSumaCreditoVerde = lrsCreditoVerde!nMontoDesembSubDestino
        lrsCreditoVerde.MoveNext
    Loop
    lrsCreditoVerde.Close
    Set lrsCreditoVerde = Nothing
    
    pvMatCreditoVerde = pvListaCreditoVerde
    'END EAAS 20180807 SEGUN ERS-054-2018 *******
    Set oCredito = Nothing
    Exit Function
ErrorCargaObjetosControles:
        Err.Raise Err.Number, "Aviso", Err.Description
        Set oCredito = Nothing
End Function

Public Function CargarFtesIngreso(ByRef prsFteIng As ADODB.Recordset, _
                                  ByRef prsFIDep As ADODB.Recordset, _
                                  ByRef prsFIInd As ADODB.Recordset, _
                                  ByVal psPersCod As String, _
                                  Optional ByVal psCtaCod As String = "", _
                                  Optional ByVal pnNumFuente As Integer = -1)

Dim oConecta As COMConecta.DCOMConecta
Dim sSql As String
Dim cNumFte As String
Dim nIndice As Integer

    On Error GoTo ErrorCargarDatosObjetosFteIngreso
    
    Set oConecta = New COMConecta.DCOMConecta
    
    oConecta.AbreConexion
        
    If psCtaCod = "" Then
            'gConsPersona
            sSql = "Select PF.bCostoProd, PF.cNumFuente, PF.cPersCod, PF.cPersFIPersCod, PF.cPersFICargo, "
            sSql = sSql & " PF.dPersFIinicio, PF.cPersFIMoneda, PF.cPersFIComentario, "
            sSql = sSql & " PF.cRazSocUbiGeo, PF.cRazSocDirecc, PF.cRazSocTelef, PF.cRazSocDescrip, "
            sSql = sSql & " PF.nPersTipFte, PF.cUltimaActualizacion, "
        '------------------------------------------------------------------------------------------------------------
            sSql = sSql & "P.cPersDireccUbiGeo,P.cPersDireccDomicilio,P.cPersDireccCondicion, P.cPersTelefono, "
            sSql = sSql & "P.nPersPersoneria,P.cPersCIIU, P.cPersTelefono2, P.cPersCod as cPersFteCod,P.cPersNombre,P.dPersNacCreac, "
            sSql = sSql & "PJ.cPersJurTpo, PJ.cPersJurMagnitud,PJ.cPersJurSigla,PJ.nPersJurEmpleados, CI.cCIIUdescripcion, "
            sSql = sSql & "cNroRUC = (  Select ISNULL(cPersIDnro,'') From PersID WHERE PersID.cPersCod = P.cPersCod and PersID.cPersIDTpo = " & gPersIdRUC & " ), "
            sSql = sSql & "PJT.cPersJurTpoDesc, CN7.cConsDescripcion as cPersDireccCondicionDes, CN8.cConsDescripcion as cPersJurMagnitudDes, "
            sSql = sSql & " Dpto = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where Substring(u.cUbigeoCod,1,1) = '1' And Substring(u.cUbigeoCod,2,2) = Substring(P.cPersDireccUbiGeo,2,2) And Substring(u.cUbigeoCod,4,9) = '000000000' ), '' ) , "
            sSql = sSql & " Prov = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where Substring(u.cUbigeoCod,1,1) = '2' And Substring(u.cUbigeoCod,2,4) = Substring(P.cPersDireccUbiGeo,2,4) And Substring(u.cUbigeoCod,6,7) = '0000000' ), '' ) , "
            sSql = sSql & " Dist = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where Substring(u.cUbigeoCod,1,1) = '3' And Substring(u.cUbigeoCod,2,6) = Substring(P.cPersDireccUbiGeo,2,6) And Substring(u.cUbigeoCod,8,5) = '00000' ), '' ), "
            sSql = sSql & " Zona = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where u.cUbigeoCod = P.cPersDireccUbiGeo ),'') "
            sSql = sSql & " From  PersFteIngreso PF "
            sSql = sSql & " INNER JOIN Persona P ON PF.cPersFIPersCod = P.cPersCod "
            sSql = sSql & " left join PersonaNat PN ON P.cPersCod=PN.cPersCod "
            sSql = sSql & " LEFT JOIN PersonaJur PJ ON P.cPersCod = PJ.cPersCod "
            sSql = sSql & " LEFT JOIN CIIU CI ON P.cPersCIIU = CI.cCIIUcod "
            sSql = sSql & " LEFT JOIN PersJurTpo PJT ON PJ.cPersJurTpo = PJT.cPersJurTpoCod "
            sSql = sSql & " Left Join Constante CN7 ON CN7.nConsValor = P.cPersDireccCondicion AND CN7.nConsCod = 1029 "
            sSql = sSql & " Left Join Constante CN8 ON CN8.nConsValor = PJ.cPersJurMagnitud AND CN8.nConsCod = 1004 "
            sSql = sSql & " Where PF.cPersCod = '" & psPersCod & "'"
            sSql = sSql & " and (exists(Select cnumfuente from persfidependiente where cnumfuente=PF.cNumfuente) or Exists(Select cnumfuente from persfiindependiente where cnumfuente=PF.cnumfuente))"
            sSql = sSql & " Order By dPersFIinicio desc"
        '----------------------------------------------------------------------------------------------------------
        Else
            sSql = "Select PF.bCostoProd, PF.cNumFuente, PF.cPersCod, PF.cPersFIPersCod, PF.cPersFICargo, "
            sSql = sSql & " PF.dPersFIinicio, PF.cPersFIMoneda, PF.cPersFIComentario, "
            sSql = sSql & " PF.cRazSocUbiGeo, PF.cRazSocDirecc, PF.cRazSocTelef, PF.cRazSocDescrip, "
            sSql = sSql & " PF.nPersTipFte, PF.cUltimaActualizacion, "
        '------------------------------------------------------------------------------------------------------------
            sSql = sSql & "P.cPersDireccUbiGeo,P.cPersDireccDomicilio,P.cPersDireccCondicion, P.cPersTelefono, "
            sSql = sSql & "P.nPersPersoneria,P.cPersCIIU, P.cPersTelefono2, P.cPersCod as cPersFteCod,P.cPersNombre,P.dPersNacCreac, "
            sSql = sSql & "PJ.cPersJurTpo, PJ.cPersJurMagnitud,PJ.cPersJurSigla,PJ.nPersJurEmpleados, CI.cCIIUdescripcion, "
            sSql = sSql & "cNroRUC = (  Select ISNULL(cPersIDnro,'') From PersID WHERE PersID.cPersCod = P.cPersCod and PersID.cPersIDTpo = " & gPersIdRUC & " ), "
            sSql = sSql & "PJT.cPersJurTpoDesc, CN7.cConsDescripcion as cPersDireccCondicionDes, CN8.cConsDescripcion as cPersJurMagnitudDes, "
            sSql = sSql & " Dpto = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where Substring(u.cUbigeoCod,1,1) = '1' And Substring(u.cUbigeoCod,2,2) = Substring(P.cPersDireccUbiGeo,2,2) And Substring(u.cUbigeoCod,4,9) = '000000000' ), '' ) , "
            sSql = sSql & " Prov = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where Substring(u.cUbigeoCod,1,1) = '2' And Substring(u.cUbigeoCod,2,4) = Substring(P.cPersDireccUbiGeo,2,4) And Substring(u.cUbigeoCod,6,7) = '0000000' ), '' ) , "
            sSql = sSql & " Dist = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where Substring(u.cUbigeoCod,1,1) = '3' And Substring(u.cUbigeoCod,2,6) = Substring(P.cPersDireccUbiGeo,2,6) And Substring(u.cUbigeoCod,8,5) = '00000' ), '' ), "
            sSql = sSql & " Zona = IsNull((Select u.cUbiGeoDescripcion From UbicacionGeografica u where u.cUbigeoCod = P.cPersDireccUbiGeo ),'') "
            sSql = sSql & " From  PersFteIngreso PF "
            sSql = sSql & " INNER JOIN Persona P ON PF.cPersFIPersCod = P.cPersCod "
            sSql = sSql & " left join PersonaNat PN ON P.cPersCod=PN.cPersCod "
            sSql = sSql & " LEFT JOIN PersonaJur PJ ON P.cPersCod = PJ.cPersCod "
            sSql = sSql & " LEFT JOIN CIIU CI ON P.cPersCIIU = CI.cCIIUcod "
            sSql = sSql & " LEFT JOIN PersJurTpo PJT ON PJ.cPersJurTpo = PJT.cPersJurTpoCod "
            sSql = sSql & " Left Join Constante CN7 ON CN7.nConsValor = P.cPersDireccCondicion AND CN7.nConsCod = 1029 "
            sSql = sSql & " Left Join Constante CN8 ON CN8.nConsValor = PJ.cPersJurMagnitud AND CN8.nConsCod = 1004 "
            sSql = sSql & " Inner Join ColocFteIngreso CFI on CFI.cNumFuente=PF.cNumFuente"
            sSql = sSql & " Where PF.cPersCod = '" & psPersCod & "'"
            sSql = sSql & " and (exists(Select cnumfuente from persfidependiente where cnumfuente=PF.cNumfuente) or Exists(Select cnumfuente from persfiindependiente where cnumfuente=PF.cnumfuente))"
            sSql = sSql & " and CFI.cCtaCod='" & psCtaCod & "'"
            sSql = sSql & " Order By dPersFIinicio desc"
        '----------------------------------------------------------------------------------------------------------
        End If
        
    Set prsFteIng = oConecta.CargaRecordSet(sSql)
        
    If Not prsFteIng.EOF Then
    'Cambio para obtener las fuentes de ingreso
    If pnNumFuente <> -1 Then
        nIndice = 0
        While nIndice < pnNumFuente
            nIndice = nIndice + 1
            prsFteIng.MoveNext
        Wend
    End If
        cNumFte = prsFteIng("cNumFuente")
        sSql = " Select PF.cNumFuente, PF.dPersEval, PF.nPersIngCli, PF.nPersGastoFam, PF.nPersIngCon, PF.nPersOtrIng, PF.dPersFICaduca "
        sSql = sSql & " FROM PersFIDependiente PF Where PF.cNumFuente = '" & cNumFte & "'"
        sSql = sSql & " ORDER BY PF.dPersEval asc"
        Set prsFIDep = oConecta.CargaRecordSet(sSql)
    
        'peac 20070103 se agrego "isnull(pf.dfeceeff,'')dfeceeff"
        sSql = "SELECT  PF.cNumFuente, PF.dPersEval, PF.dPersFICaduca, PF.nPersFIActivoDisp, "
        sSql = sSql & " PF.nPersFICtasxCobrar, PF.nPersFIInventarios, PF.nPersFIActivosFijos, "
        sSql = sSql & " PF.nPersFIProveedores, PF.nPersFICredCMACT, PF.nPersFICredOtros, "
        sSql = sSql & " PF.nPersFIVentas, PF.nPersFIPatrimonio, PF.nPersFICostoVentas, "
        sSql = sSql & " PF.nPersFIRecupCtasXCobrar, PF.nPersFIEgresosOtros, PF.nPersIngFam, "
        sSql = sSql & " PF.nPersEgrFam, PF.cUltimaActualizacion ,isnull(pf.dfeceeff,'')dfeceeff "
        sSql = sSql & " FROM PersFIIndependiente PF Where PF.cNumFuente = '" & cNumFte & "'"
        sSql = sSql & " ORDER BY PF.dPersEval asc"
        Set prsFIInd = oConecta.CargaRecordSet(sSql)
        prsFteIng.MoveFirst
    End If

    oConecta.CierraConexion
    Set oConecta = Nothing
    
    Exit Function
    
ErrorCargarDatosObjetosFteIngreso:
    'Set oConstante = Nothing
    Set oConecta = Nothing
    Err.Raise Err.Number, "Cargar Datos Objetos Fuente Ingreso", Err.Description
End Function

Public Function ValidaDatosSugerencia(ByRef psValor As String, _
                                      ByRef psValorLinea As String, _
                                        ByVal pdFecSis As Date, _
                                        ByVal pnMonedaCod As Integer, _
                                        ByVal pnMontoCuota As Double, _
                                        ByVal pnMonedaFteCod As Integer, _
                                        ByVal pnMontoIngCliFte As Double, _
                                        ByVal psCtaCod As String, _
                                        ByVal pnMontoPrestamo As Double, _
                                        Optional ByVal pnTipoDesembolso As Integer = -1, _
                                        Optional ByRef pbPolizaCredito As Boolean = False) As Boolean
Dim sSql As String

Dim nValor As Double
Dim oCred As COMDCredito.DCOMPoliza
    
    On Error GoTo ErrorValidaDatosSugerencia

    ValidaDatosSugerencia = True
    
    'Obtiene el parametro del Monto Max de la Cuota para tipos de credito CONSUMO '
    nValor = PorcentajeCuotaCredConsumo("3053")
    
    'Valida Que la Cuota del Credito No sea Mayor al 30% del Sueldo Neto '
    'ARCV 30-12-2006
    'If pnTipoDesembolso = 1 Then
    '    psValor = ValidaCuotaParaTipoCredito(pnMonedaCod, pnMontoCuota, pnMonedaFteCod, pnMontoIngCliFte, nValor, pdFecSis)
    '    If psValor <> "" Then
    '        ValidaDatosSugerencia = False
    '        Exit Function
    '    End If
    'End If
    '------------------------------------------------------------------------------------------------------------------------

    psValorLinea = ValidaMontoPrestamo(psCtaCod, pnMontoPrestamo, pdFecSis)

    'ARCV 24-01-2007
    Set oCred = New COMDCredito.DCOMPoliza
    pbPolizaCredito = oCred.Poliza_para_Credito(psCtaCod, pnMontoPrestamo)
    Set oCred = Nothing
    '---------
    Exit Function

ErrorValidaDatosSugerencia:
    Err.Raise Err.Number, "Error en Validacion", Err.Description

End Function

Public Function CargaDatosSugerencia(ByVal psCtaCod As String, _
                                     ByVal pnOpcion As Integer, _
                                     ByVal psProducto As String, _
                                     ByVal psMoneda As String, _
                                     ByRef pbValidaSugerencia As Boolean, _
                                     ByRef prsSuger As ADODB.Recordset, _
                                     ByRef prsCalend As ADODB.Recordset, _
                                     ByRef prsCalend2 As ADODB.Recordset, _
                                     ByRef prsLineas As ADODB.Recordset, _
                                     ByRef pbRefinanciado As Boolean, _
                                     ByRef pvMatAguaSaneamiento As Variant, _
                                     ByRef pvMatCreditoVerde As Variant, _
                                     Optional ByRef pnSaldoDisponible As Double = 0, _
                                     Optional prsRepDesgrav As ADODB.Recordset, _
                                     Optional ByRef prsRelEmp As ADODB.Recordset = Nothing, _
                                     Optional ByRef prsRelOtros As ADODB.Recordset = Nothing, _
                                     Optional ByRef pnMicroseguro As Integer = 0, _
                                     Optional ByRef pnMultiriesgo As Integer = 0, _
                                     Optional ByRef prsDatCredEval As ADODB.Recordset = Nothing, _
                                     Optional ByRef pbEsAmpliado As Boolean = False, _
                                     Optional ByRef prsCtaBienFuturo As ADODB.Recordset) As Boolean
                                     'Comentado por ALPA 20100612 B2*********************
                                     ', Optional ByRef prsTipoCred As ADODB.Recordset
                                     ' BRGO 20111103 - Se agregó los parámetros "prsRelEmp" y "prsRelOtros"
                                     '***************************************************
                                     'WIOR 20120517 Se agrego los parametros pnMicroseguro,pnMultiriesgo
                                     'JUEZ 20120907 Se agregó prsDatCredEval
                                     'EJVG20160511 Se agregó pbEsAmpliado EAAS ByRef pvMatAguaSaneamiento As Variant,
                                     'pvMatCreditoVerde EAAS20191401 SEGUN 018-GM-DI_CMACM
Dim oCredito As COMDCredito.DCOMCredito
Dim oLineas As COMDCredito.DCOMLineaCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim oCal As COMDCredito.DCOMCalendario
Dim lrsAguaSaneamiento As ADODB.Recordset 'EAAS20180807 ERS054-2018
Dim lrsCreditoVerde As ADODB.Recordset  'EAAS20191401 SEGUN 018-GM-DI_CMACM
    
On Error GoTo ErrorCargaDatosSugerencia
Dim pvListaAguaSaneamiento() As TAguaSaneamiento 'EAAS20180807 ERS054-2018
Dim pvListaCreditoVerde() As TCreditoVerde 'EAAS20180807 SEGUN 018-GM-DI_CMACM
pbValidaSugerencia = True
CargaDatosSugerencia = True

    Set oCredito = New COMDCredito.DCOMCredito
        If oCredito.ValidaSugAprobacion(psCtaCod) = False Then      'verifica que el credito no se haya aprobado anteriormente
           ' MsgBox "El credito ya esta aprobado", vbInformation, "AVISO"
           pbValidaSugerencia = False
           CargaDatosSugerencia = False
           Set oCredito = Nothing
           Exit Function
        End If
    'Set oCredito = Nothing

    Set prsSuger = oCredito.RecuperaSugerencia(psCtaCod)
    If Not prsSuger.BOF And Not prsSuger.EOF Then
        
        If prsSuger!nTipoDesembolso <> gColocTiposDesembolsoTotal Then
            pnOpcion = 1
        End If
        
        Set oCal = New COMDCredito.DCOMCalendario
        Set prsCalend = oCal.RecuperaCalendarioPagos(psCtaCod)
        Set oCal = Nothing
                            
        'Comentado por DAOR 20070404
        'Set oLineas = New COMDCredito.DCOMLineaCredito
        'Set prsLineas = oLineas.RecuperaLineasProductoArbol(psProducto, psMoneda, , Mid(psCtaCod, 4, 2), prsSuger!nPlazoSol, prsSuger!nMontoSol, prsSuger!nCuotasSol)
        'Set oLineas = Nothing
     
        'Carga Calendario Desembolso
        If pnOpcion = 1 Then
            Set oCalend = New COMDCredito.DCOMCalendario
            Set prsCalend2 = oCalend.RecuperaCalendarioDesemb(psCtaCod)
            Set oCalend = Nothing
        End If
        
        'Carga Calendario Pagos
        If pnOpcion = 3 Then
            Set oCalend = New COMDCredito.DCOMCalendario
            Set prsCalend2 = oCalend.RecuperaCalendarioPagos(psCtaCod)
            Set oCalend = Nothing
        End If
        
        pbRefinanciado = EsRefinanciado(psCtaCod)
        pbEsAmpliado = EsAmpliado(psCtaCod) 'EJVG20160512
        
        '**DAOR 20070404, Obtener Tasas y Lineas De Creditos de Origen de Refinanciación
         Set oLineas = New COMDCredito.DCOMLineaCredito
         Set prsLineas = oLineas.RecuperaLineasProductoArbol(prsSuger!nSTipoCredCod, psMoneda, , Mid(psCtaCod, 4, 2), prsSuger!nPlazoSol, prsSuger!nMontoSol, IIf(prsSuger!nPeriodoGracia = 0, prsSuger!nCuotasSol, prsSuger!nCuotasSol + 1))
         Set oLineas = Nothing
            
'        If Not pbRefinanciado Then
'            Set oLineas = New COMDCredito.DCOMLineaCredito
'            Set prsLineas = oLineas.RecuperaLineasProductoArbol(prsSuger!nSTipoCredCod, psMoneda, , Mid(psCtaCod, 4, 2), prsSuger!nPlazoSol, prsSuger!nMontoSol, prsSuger!nCuotasSol)
'            Set oLineas = Nothing
'        Else
'            Set oLineas = New COMDCredito.DCOMLineaCredito
'            'MADM 20110413 - Muestre demas tasas para refinanciados
'            'Set prsLineas = oLineas.RecuperaLineasCredOrigenRefinanciadoArbol(psCtaCod)
'            'Set prsLineas = oLineas.RecuperaLineasCredOrigenRefinanciadoArbolNew(psCtaCod, prsSuger!nSTipoCredCod, psMoneda, , Mid(psCtaCod, 4, 2), prsSuger!nPlazoSol, prsSuger!nMontoSol, prsSuger!nCuotasSol)
'            'Set oLineas = Nothing
'        End If
        'ALPA 20100604 B2**************************************************************
'        Set oCredito = New COMDCredito.DCOMCredito
'        Set prsTipoCred = oCredito.RecuperaTipoCreditos
'        Set oCredito = Nothing
        '******************************************************************************
        
        '**DAOR 20071207, Obtener pers. relac. al crédito para Representante del Seg. Desg. (Sólo Pers Jurídica)
        'ALPA 20100610 B2*****************************************************
'        If prsSuger!nPersPersoneria > 1 Then
'            Set prsRepDesgrav = oCredito.RecuperaPersRelacCredDesgrav(psCtaCod)
'        End If
        If prsSuger!nPersPersoneria > 1 Then
            Set oCredito = New COMDCredito.DCOMCredito
            Set prsRepDesgrav = oCredito.RecuperaPersRelacCredDesgrav(psCtaCod)
             Set oCredito = Nothing
        End If
        '**********************************************************************
        '***BRGO 20111103 *************************************************************
        If psProducto = "517" Then
            Set oCredito = New COMDCredito.DCOMCredito
            Set prsRelEmp = oCredito.RecuperaRelacionesInfogas(psCtaCod, "13,16,17")
            Set prsRelOtros = oCredito.RecuperaRelacionesInfogas(psCtaCod, , "13,16,17")
            Set oCredito = Nothing
        End If
        '******************************************************************************
        'CTI6-20210503-ERS032-2019 -(Optimizar Sugerencia)
        'JUEZ 20120908 ****************************************************************
        'Set oCredito = New COMDCredito.DCOMCredito
        'Set prsDatCredEval = oCredito.RecuperaColocacCredEval(psCtaCod)
        'Set oCredito = Nothing
        'END JUEZ *********************************************************************
        'Fin CTI6-20210503
        
        'CTI5 ERS0012021***************************************************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set prsCtaBienFuturo = oCredito.RecuperaCtaAhorroGarantiasCreditoTP(psCtaCod)
        Set oCredito = Nothing
        '******************************************************************************
        
    Else
        CargaDatosSugerencia = False
    End If
    
    'ARCV 22-04 (Manejo de Codigos RCC)
    Dim oParam As COMDCredito.DCOMParametro
    Dim nValor As Double
    Dim rs As ADODB.Recordset
    
    Set oParam = New COMDCredito.DCOMParametro
    nValor = oParam.RecuperaValorParametro(9004) '102733)
    Set oParam = Nothing
    If nValor = 1 Then
        Set oCredito = New COMDCredito.DCOMCredito
        pnSaldoDisponible = oCredito.RecuperaSaldoDisponibleFteIngreso(psCtaCod)
        Set oCredito = Nothing
    End If
    '***********************************************************************
        'INICIO EAAS 20180807 SEGUN ERS-054-2018 ***
    ReDim pvListaAguaSaneamiento(0)
    Set oCredito = New COMDCredito.DCOMCredito
    Set lrsAguaSaneamiento = oCredito.RecuperaAguaSaneamiento(psCtaCod)
    Do While Not lrsAguaSaneamiento.EOF
        ReDim Preserve pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark)
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nID = lrsAguaSaneamiento!nItem
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nDestinoCod = lrsAguaSaneamiento!nDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).sDestinoDescripcion = lrsAguaSaneamiento!cConsDescripcionDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nSubDestinoCod = lrsAguaSaneamiento!nSubDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).sSubDestinoDescripcion = lrsAguaSaneamiento!cConsDescripcionSubDestino
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).sNroCredito = lrsAguaSaneamiento!cCtaCod
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nMontoS = lrsAguaSaneamiento!nMonto
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nBeneficia = lrsAguaSaneamiento!nNroBeneciados
        pvListaAguaSaneamiento(lrsAguaSaneamiento.Bookmark).nSumaAguaSaneamiento = lrsAguaSaneamiento!nMontoDesembSubDestino 'EAAS20191401 SEGUN 018-GM-DI_CMACM
        lrsAguaSaneamiento.MoveNext
    Loop
    lrsAguaSaneamiento.Close
    Set lrsAguaSaneamiento = Nothing
    
    pvMatAguaSaneamiento = pvListaAguaSaneamiento
    'END EAAS 20180807 SEGUN ERS-054-2018 *******
            'INICIO 'EAAS20191401 SEGUN 018-GM-DI_CMACM ***
    ReDim pvListaCreditoVerde(0)
    Set oCredito = New COMDCredito.DCOMCredito
    Set lrsCreditoVerde = oCredito.RecuperaCreditoVerde(psCtaCod)
    Do While Not lrsCreditoVerde.EOF
        ReDim Preserve pvListaCreditoVerde(lrsCreditoVerde.Bookmark)
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nID = lrsCreditoVerde!nItem
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nDestinoCod = lrsCreditoVerde!nDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).sDestinoDescripcion = lrsCreditoVerde!cConsDescripcionDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nSubDestinoCod = lrsCreditoVerde!nSubDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).sSubDestinoDescripcion = lrsCreditoVerde!cConsDescripcionSubDestino
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).sNroCredito = lrsCreditoVerde!cCtaCod
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nMontoS = lrsCreditoVerde!nMonto
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nBeneficia = lrsCreditoVerde!nNroBeneciados
        pvListaCreditoVerde(lrsCreditoVerde.Bookmark).nSumaCreditoVerde = lrsCreditoVerde!nMontoDesembSubDestino
        lrsCreditoVerde.MoveNext
    Loop
    lrsCreditoVerde.Close
    Set lrsCreditoVerde = Nothing
    
    pvMatCreditoVerde = pvListaCreditoVerde
    'END 'EAAS20191401 SEGUN 018-GM-DI_CMACM *******
    
    'WIOR 2012052***********************************************************
    Dim rsMicroseguro As ADODB.Recordset
    Dim rsMultiriesgo As ADODB.Recordset
    Set oCredito = New COMDCredito.DCOMCredito
    Set rsMicroseguro = oCredito.ObtenerMicroseguro(psCtaCod)
    If Not rsMicroseguro.BOF And Not rsMicroseguro.EOF Then
        pnMicroseguro = rsMicroseguro!nTipo
    Else
        pnMicroseguro = 0
    End If
    Set rsMultiriesgo = oCredito.ObtenerMultiriesgo(psCtaCod)
    If Not rsMultiriesgo.BOF And Not rsMultiriesgo.EOF Then
        pnMultiriesgo = 1
    Else
        pnMultiriesgo = 0
    End If
    Set rsMultiriesgo = Nothing
    Set rsMultiriesgo = Nothing
    
    Set oCredito = Nothing
    'WIOR - FIN *************************************************************
    Exit Function

ErrorCargaDatosSugerencia:
    Err.Raise Err.Number, "Carga Datos Sugerencia", Err.Description
End Function

Public Function GrabarSugerencia(ByVal psCtaCod As String, ByVal pnEstadoActual As ColocEstado, ByVal pnEstado As ColocEstado, ByVal pdEstado As Date, ByVal pnNroTransac As Long, ByVal psLineaCred As String, ByVal pnTasa As Double, ByVal pnMonto As Double, _
        ByVal pnNroCuotas As Integer, ByVal pnPlazo As Integer, ByVal pnTipoCuota As ColocTipoCalend, ByVal pnDiaFijo As Integer, _
        ByVal pnProxMes As Integer, ByVal pnTipoDesemb As ColocTiposDesembolso, ByVal pnCalendDinamico As Integer, _
        ByVal pnGraciaSug As Integer, ByVal pnTasaGracia As Double, ByVal pnTipoGracia As ColocTiposGracia, _
        ByVal nNroCalend As Integer, ByVal MatCalendDes As Variant, ByVal MatCalendPagos As Variant, _
        ByVal MatCalendPagos_2 As Variant, ByVal pnCuotaCom As Integer, ByVal pnMiViv As Integer, _
        ByVal pnNroCalenPar As Integer, ByVal psTipoGasto As String, ByVal pnTasaMora As Double, ByVal pMatCredVig As Variant, ByVal psDescripcion As String, _
        Optional ByVal bAmpliacion As Boolean, Optional ByVal bQuincenal As Boolean, _
        Optional ByRef prsDR As ADODB.Recordset = Nothing, Optional ByVal psVerificaTipoCredito As String = "", _
        Optional ByVal psCIIUCod As String = "", Optional ByVal pnDiaFija2 As Integer = 0, Optional ByVal pnIncremCapital As Integer = -1, _
        Optional ByVal pnVAC As Integer = -1, Optional ByVal pnCodRCC As Integer = -1, Optional ByVal pnNumConCer As Integer = -1, _
        Optional ByVal psPersCodRepDesgrav As String = "", _
        Optional ByVal pMatFuentes As Variant, Optional ByVal pExpAntMax As Double, Optional ByVal pnNumConMic As Integer = -1, Optional psTipoCredCod As String, Optional psTipoInstCod As String, Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", _
        Optional ByVal prsRelEmp As ADODB.Recordset = Nothing, Optional ByVal nMontoTasacion As Double = 0, Optional ByVal nMontoCEC As Double = 0, _
        Optional ByVal pbMicroseguro As Boolean = False, Optional ByVal pnTipoMicroseguro As Integer = 0, Optional ByVal pbMultiriesgo As Boolean = False, Optional ByVal pnDatoVivienda As Integer, Optional ByVal pnCuotaBalon As Integer = 0, Optional ByVal pnMontoMivivienda As Currency = 0#, Optional ByVal pnCuotaMivienda As Integer = -1, Optional pnTasaExononeracion As Double = 0, _
        Optional ByRef pArrDatos As Variant = Nothing) As String
        'DAOR 20061216: Se aumentó el parametro Numero de Consultas a Certicom, 20071207 se aumentó psPersCodRepDesgrav
        'se agrego el parametro "pMatFuentes","pExpAntMax" - PEAC 20080412
        'Se agrego los parametros "prsRelEmp","nMontoTasacion","nMontoCEC" - BRGO 20111103
        'Se agrego los parametros pbMicroseguro, pnTipoMicroseguro, pbMultiriesgo -WIOR 20120517
        'se agrego el parametro pnDatoVivienda 'JUEZ 20130913
        'WIOR 20131111 AGREGO pnCuotaBalon
        'ALPA 20141030 AGREGO pnTasaExononeracion
        'EJVG20150513 Se agregó array pArrDatos y se quito el parametro pbPreferencial x Limite máximo de argumentos
Dim oAmpliado  As COMDCredito.DCOMAmpliacion
Dim bAmpliado As Boolean
'CUSCO
Dim sSql As String, i As Integer
Dim oCon As COMConecta.DCOMConecta
'Dim rsCredEval As ADODB.Recordset
Dim numfuente As String
Dim iMat As Integer 'EJVG20150513
Dim pbPreferencial As Integer 'EJVG20150513
Dim lvGravamen() As tGarantiaGravamen 'EJVG20150513
Dim lbRequierePoliza As Boolean 'EJVG20150602
Dim rsSobreEndCodigos As ADODB.Recordset 'WIOR 20160613
Dim lnMontoExpEsteCred As Double 'EJVG20160713
    
    'EJVG20150513 *** Para nuevos parametros
    pbPreferencial = 0
    ReDim lvGravamen(0)
    If IsArray(pArrDatos) Then
        For iMat = 0 To UBound(pArrDatos)
            Select Case iMat
                Case 0: pbPreferencial = pArrDatos(iMat)
                Case 1: lvGravamen = pArrDatos(iMat)
                Case 2: lbRequierePoliza = pArrDatos(iMat)
                'Case 3: Set rsSobreEndCodigos = pArrDatos(iMat)'CTI3 ERS0032020
                Case 4: lnMontoExpEsteCred = pArrDatos(iMat)
            End Select
        Next
    End If
    'END EJVG *******
    On Error GoTo ErrorGrabarSugerencia
    Set oAmpliado = New COMDCredito.DCOMAmpliacion
    bAmpliado = oAmpliado.ValidaCreditoaAmpliar(psCtaCod)
    Set oAmpliado = Nothing
    
    If psVerificaTipoCredito = "AGRICOLA" Then
        Set prsDR = ImprimeConsolidadoCredAgricola(psCtaCod, "S", pdEstado)
    ElseIf psVerificaTipoCredito = "CONSUMO" Then
        Set prsDR = ImprimeConsolidadoConsumo(psCtaCod, "S", pdEstado)
    Else
        Set prsDR = ImprimeConsolidadoCred(psCtaCod, "S", pdEstado)
    End If
    
    '****** Actualizar el CIIU del Credito
    '******** y Codigo RCC 24-04
    'sSql = "UPDATE ColocacCred SET cCIIU='" & psCIIUCod & _
            "', nCodRCC=" & pnCodRCC & _
            " WHERE cCtaCod='" & psCtaCod & "'"
            
    '*** PEAC 20080412
    sSql = "UPDATE ColocacCred SET cCIIU='" & psCIIUCod & _
            "', nCodRCC=" & pnCodRCC & ", nExpoAntMax=" & pExpAntMax & _
            " WHERE cCtaCod='" & psCtaCod & "'"
            
    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    oCon.ConexionActiva.Execute sSql
    Call oCon.ConexionActiva.Execute("DELETE ColocCredCredVig Where cCtaCod = '" & psCtaCod & "'")
    'JUEZ 20120915 *******************************************
    'Dim oDCredEval As COMDCredito.DCOMCredito
    'Set oDCredEval = New COMDCredito.DCOMCredito
    'Set rsCredEval = oDCredEval.RecuperaColocacCredEval(psCtaCod)
    'Set oDCredEval = Nothing
    'END JUEZ ************************************************
    'If IIf(ObtieneAgenciaCredEval(psAgeCodAct) = 1 And Not rsCredEval.EOF, 1, 0) = 0 Then 'JUEZ 20120915
    'MADM 20100513 ------------------------------------------------------------------------------
'    If Mid(psCtaCod, 6, 3) <> "302" Then
        'If psTpoProdCod <> "703" Then
        '**** GITU 20080825*******
        'Call oCon.ConexionActiva.Execute("DELETE FROM ColocFteIngreso Where cCtaCod = '" & psCtaCod & "'")
        '**** PEAC 20080412*******
        'Registra en ColocFteIngreso
        'For i = 0 To UBound(pMatFuentes) - 1
        '    'Call oCon.ConexionActiva.Execute("DELETE FROM ColocFteIngreso Where cNumFuente = '" & pMatFuentes(i, 0) & "' and cCtaCod = '" & psCtaCod & "' and dPersEval = '" & Format(pMatFuentes(i, 2), "yyyymmdd") & "'")
        '    sSql = "INSERT INTO ColocFteIngreso(cNumFuente,dPersEval,cCtaCod)"
        '        sSql = sSql & " VALUES('" & pMatFuentes(i, 0) & "',"
        '        sSql = sSql & "'" & Format(pMatFuentes(i, 2), "yyyymmdd") & "', "
        '        sSql = sSql & "'" & psCtaCod & "')"
        '        oCon.ConexionActiva.Execute sSql
        'Next i
        ''****** FIN PEAC
        'End If
    '------------------------------------------------------------------------------------------
   'End If 'END JUEZ
    '**DAOR 20071207 *****************************
    sSql = "update ProductoPersona Set cSgrDsg=null where cCtaCod='" & psCtaCod & "'"
    oCon.ConexionActiva.Execute sSql
    If psPersCodRepDesgrav <> "" Then
        sSql = "update ProductoPersona Set cSgrDsg='S' where cCtaCod='" & psCtaCod & "' and cPersCod='" & psPersCodRepDesgrav & "'"
        oCon.ConexionActiva.Execute sSql
    End If
    '*********************************************
    
    oCon.CierraConexion
    Set oCon = Nothing
    '********************************
    
    '******** Se actualizo para el manejo de la Capitalizacion de la Gracia
    'If pnIncremCapital = 1 Then 'MAVM 20130209
    'If pnTipoGracia = 6 Then
    '    nMontoOri = pnMonto
    '    pnMonto = pnMonto + MontoIntPerDias(pnTasaGracia, pnGraciaSug, pnMonto)
    '    MatCalendDes(0, 1) = pnMonto
    'End If
    '************************************************
    
    GrabarSugerencia = SugerenciaCredito(psCtaCod, pnEstadoActual, pnEstado, pdEstado, pnNroTransac, _
                psLineaCred, pnTasa, pnMonto, pnNroCuotas, pnPlazo, pnTipoCuota, pnDiaFijo, pnProxMes, _
                pnTipoDesemb, pnCalendDinamico, pnGraciaSug, pnTasaGracia, _
                pnTipoGracia, nNroCalend, MatCalendDes, MatCalendPagos, MatCalendPagos_2, _
                pnCuotaCom, pnMiViv, pnNroCalenPar, psTipoGasto, pnTasaMora, pMatCredVig, _
                psDescripcion, bAmpliado, bQuincenal, pnDiaFija2, pnIncremCapital, pnVAC, pnNumConCer, pnNumConMic, psTipoCredCod, psTipoInstCod, psAgeCodAct, psTpoProdCod, prsRelEmp, nMontoTasacion, nMontoCEC, _
                pbMicroseguro, pnTipoMicroseguro, pbMultiriesgo, pnDatoVivienda, pnCuotaBalon, pnMontoMivivienda, pnCuotaMivienda, pnTasaExononeracion, pbPreferencial, lvGravamen, lbRequierePoliza, rsSobreEndCodigos, lnMontoExpEsteCred)
                'DAOR 20061216, Se aumentó pnNumConCer : Numero de Consultas a la Central de Riesgos
                'WIOR 20120514 - Se agrego los parametros pbMicroseguro, pnTipoMicroseguro, pbMultiriesgo
                'JUEZ 20130913 - Se agrego parametro pnDatoVivienda
                'WIOR 20131111 AGREGO pnCuotaBalon
                'ALPA 20141127 AGREGO pnCuotaMivienda
                'WIOR 20160616 AGREGO rsSobreEndCodigos
                
    'EJVG20150513 *** Para nuevos parametros
    If IsArray(pArrDatos) Then
        pArrDatos(2) = lbRequierePoliza
    End If
    'END EJVG *******
    Exit Function

ErrorGrabarSugerencia:
    Err.Raise Err.Number, "Error Grabar Sugerencia", Err.Description
End Function

Public Function CargarReporteSugerencia(ByVal psCtaCod As String, _
                                        ByVal pdFecSis As Date) As ADODB.Recordset

    'Set rs = oConec.CargaRecordSet(sSQL)
Dim oConecta As COMConecta.DCOMConecta
Dim sSql As String
    
    On Error GoTo ErrorCargarReporteSugerencia
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    
    sSql = "SP_COL_RPTERESUMENCOMITE  '" & psCtaCod & "', '" & Format(pdFecSis, "mm/dd/yyyy") & "'"
    Set CargarReporteSugerencia = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorCargarReporteSugerencia:
    Set oConecta = Nothing
    Err.Raise Err.Number, "Cargar Reporte Sugerencia", Err.Description
End Function

Public Function CargarDatosRechazo(ByVal psCtaCod As String, _
                                    ByVal MatEst As Variant, _
                                    ByRef prsComunes As ADODB.Recordset, _
                                    ByRef pbRefinanciado As Boolean)

Dim oDCred As COMDCredito.DCOMCredito

On Error GoTo ErrorCargarDatosRechazo

    Set oDCred = New COMDCredito.DCOMCredito
    Set prsComunes = oDCred.RecuperaDatosComunes(psCtaCod, , MatEst)
    Set oDCred = Nothing
    
    pbRefinanciado = EsRefinanciado(psCtaCod)
            
    Exit Function

ErrorCargarDatosRechazo:
    Err.Raise Err.Number, "Cargar Datos Rechazo", Err.Description
End Function

Public Function CargarCreditosVigentes(ByVal psCtaCod As String, _
                                    ByVal psPersCod As String, _
                                    ByVal pEstadosEspecificos As Variant, _
                                    ByVal psMoneda As String, _
                                    ByRef prsVigentes As ADODB.Recordset, _
                                    ByRef prsGrabados As ADODB.Recordset)

Dim oCredito As COMDCredito.DCOMCredito

On Error GoTo ErrorCargarCreditosVigentes

    Set oCredito = New COMDCredito.DCOMCredito
    
    Set prsVigentes = oCredito.RecuperaCreditosVigentes(Trim(psPersCod), , pEstadosEspecificos, Mid(Trim(psCtaCod), 9, 1))
    Set prsGrabados = oCredito.RecuperaCreditosVigentesGrabados(Trim(psCtaCod))
 
    Set oCredito = Nothing

            
    Exit Function

ErrorCargarCreditosVigentes:
    Err.Raise Err.Number, "Cargar Datos Rechazo", Err.Description
End Function

Public Function ValidaLineaCredAprob(ByVal psCtaCod As String, _
                                    ByVal psPersCod As String, _
                                    ByVal pEstadosEspecificos As Variant, _
                                    ByVal psMoneda As String, _
                                    ByRef prsVigentes As ADODB.Recordset, _
                                    ByRef prsGrabados As ADODB.Recordset)

Dim oCredito As COMDCredito.DCOMCredito

On Error GoTo ErrorValidaLineaCredAprob

    Set prsVigentes = oCredito.RecuperaCreditosVigentes(psPersCod, , pEstadosEspecificos, psMoneda)
    
    Set prsGrabados = oCredito.RecuperaCreditosVigentesGrabados(psCtaCod)
 
    Set oCredito = Nothing

            
    Exit Function

ErrorValidaLineaCredAprob:
    Err.Raise Err.Number, "Valida Linea Credito", Err.Description
End Function

Public Function CargarDatosAprobacion(ByVal psCtaCod As String, _
                                    ByVal pdFecSis As Date, _
                                    ByVal psProducto As String, _
                                    ByVal psMoneda As String, _
                                    ByRef prsDatosAprob As ADODB.Recordset, _
                                    ByRef prsCalend As ADODB.Recordset, _
                                    ByRef pbRefinanc As Boolean, _
                                    ByRef pbSustiDeudor As Boolean, _
                                    ByRef prsGarant As ADODB.Recordset, _
                                    ByRef pnMontoGravado As Double, _
                                    ByRef prsRelac As ADODB.Recordset, _
                                    ByRef prsDesem As ADODB.Recordset, _
                                    ByRef psLinea As String, _
                                    ByRef prsLinea As ADODB.Recordset, _
                                    ByRef prsFte As ADODB.Recordset, _
                                    ByRef psMontosARef As Variant, ByRef pbQuincenal As Boolean, _
                                    Optional ByRef pbCreditoAutorizado As Boolean = False, _
                                    Optional ByRef prsFuentes As ADODB.Recordset = Nothing, _
                                    Optional ByRef prsDesBcoNac As ADODB.Recordset = Nothing, Optional ByVal psAgeCodAct As String = "", Optional ByRef psTpoProdCod As String = "", _
                                    Optional ByRef prsRelEmp As ADODB.Recordset = Nothing, _
                                    Optional ByRef prsCredEval As ADODB.Recordset = Nothing, _
                                    Optional ByRef prsPolizaSolicitud As ADODB.Recordset, _
                                    Optional ByRef pbEsAmpliado As Boolean = False) ' DAOR 20070202, Datos de desembolso en banco de la nación
                                    'BRGO 20111107 Se agregó el parámetro rsRelEmp

Dim oCredito As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim oLinea As COMDCredito.DCOMLineaCredito
Dim oGarantia As COMDCredito.DCOMGarantia 'EJVG20150616

Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta
Dim rs As ADODB.Recordset
Dim cNumFte As String

On Error GoTo ErrorCargarDatosAprobacion

   Set oCredito = New COMDCredito.DCOMCredito
   'JUEZ 20120917 ******
   Set prsCredEval = oCredito.RecuperaColocacCredEval(psCtaCod)
   '********************
   
   Set prsDatosAprob = oCredito.RecuperaDatosAprobacion(psCtaCod, IIf(ObtieneAgenciaCredEval(Mid(psCtaCod, 4, 2)) = 1 And Not prsCredEval.EOF, 1, 0)) 'JUEZ 20120917 Se agregó segundo paramatro
    
        If prsDatosAprob.RecordCount = 0 Then
            Set oCredito = Nothing
            Exit Function
        End If
   
    'DAOR 20070202 *************
    Set prsDesBcoNac = oCredito.RecuperaDatosDesembolsoBcoNac(psCtaCod)
    '***************************
    Set prsGarant = oCredito.RecuperaGarantiasCredito(psCtaCod)
    
    pnMontoGravado = oCredito.RecuperaMontoGarantiaCredito(psCtaCod, pdFecSis)
    Set prsRelac = oCredito.RecuperaRelacPers(psCtaCod)
    
    '***BRGO 20111107 *************************************************************
    If psProducto = "517" Then
        Set prsRelEmp = oCredito.RecuperaRelacionesInfogas(psCtaCod)
    End If
    '******************************************************************************
    Set oCredito = Nothing
    
    Set oCalend = New COMDCredito.DCOMCalendario
    Set prsCalend = oCalend.RecuperaCalendarioPagos(psCtaCod)
    Set prsDesem = oCalend.RecuperaCalendarioDesemb(psCtaCod)
    pbQuincenal = oCalend.VerificaCalendQuincenal(psCtaCod)
    Set oCalend = Nothing
    
    pbRefinanc = EsRefinanciado(psCtaCod)
    pbSustiDeudor = EsSustiDeudor(psCtaCod)
    psMontosARef = MontosARefinanciar(psCtaCod, pdFecSis)
    pbEsAmpliado = EsAmpliado(psCtaCod) 'EJVG20160527
    
    'EJVG20150616 ***
    Set oGarantia = New COMDCredito.DCOMGarantia
    Set prsPolizaSolicitud = oGarantia.RecuperaSolicitudPoliza("%", psCtaCod)
    Set oGarantia = Nothing
    'END EJVG *******
          
    'Comentado por DAOR 20070409
    'Set oLinea = New COMDCredito.DCOMLineaCredito
    'psLinea = oLinea.ObtenerLinea(psCtaCod)
    ''Se modifico para filtrar por Monto y Plazo
    'Set prsLinea = oLinea.RecuperaLineasProductoArbol(psProducto, psMoneda, , Mid(psCtaCod, 4, 2), prsDatosAprob!nPlazo, prsDatosAprob!nMonto, prsDatosAprob!nCuotas)
    'Set oLinea = Nothing
          
    '**DAOR 20070409***************************************************************
        Set oLinea = New COMDCredito.DCOMLineaCredito
        psLinea = oLinea.ObtenerLinea(psCtaCod)
        'ALPA 20150129**************************************************
        'Set prsLinea = oLinea.RecuperaLineasProductoArbol(prsDatosAprob!cTpoCredCod, psMoneda, , prsDatosAprob!cAgeCodAct, prsDatosAprob!nPlazo, prsDatosAprob!nMonto, IIf(prsDatosAprob!nPeriodoGracia = 0, prsDatosAprob!nCuotas, prsDatosAprob!nCuotas + 1))
        Set prsLinea = oLinea.RecuperaLineasProductoArbol(prsDatosAprob!cTpoCredCod, psMoneda, , prsDatosAprob!cAgeCodAct, prsDatosAprob!nPlazo, prsDatosAprob!nMonto, IIf(prsDatosAprob!nPeriodoGracia = 0, prsDatosAprob!nCuotas, prsDatosAprob!nCuotas + 1), IIf(prsDatosAprob!nTasaExononeracion = 0, prsDatosAprob!nTasaIntComp, prsDatosAprob!nTasaExononeracion), IIf(IsNull(prsDatosAprob!nPeriodoGracia), 0, prsDatosAprob!nPeriodoGracia), pdFecSis, prsDatosAprob!cPersCod)
        '***************************************************************
        Set oLinea = Nothing
        
''    If Not pbRefinanc Then
''        Set oLinea = New COMDCredito.DCOMLineaCredito
''        psLinea = oLinea.ObtenerLinea(psCtaCod)
''        Set prsLinea = oLinea.RecuperaLineasProductoArbol(prsDatosAprob!cTpoCredCod, psMoneda, , prsDatosAprob!cAgeCodAct, prsDatosAprob!nPlazo, prsDatosAprob!nMonto, prsDatosAprob!nCuotas)
''        Set oLinea = Nothing
''    Else
''        Set oLinea = New COMDCredito.DCOMLineaCredito
''        psLinea = oLinea.ObtenerLinea(psCtaCod)
''        'MADM 20110413 - Muestre demas tasas para refinanciados
''        'Set prsLinea = oLinea.RecuperaLineasCredOrigenRefinanciadoArbol(psCtaCod)
''        Set prsLinea = oLinea.RecuperaLineasCredOrigenRefinanciadoArbolNew(psCtaCod, prsDatosAprob!cTpoCredCod, psMoneda, , prsDatosAprob!cAgeCodAct, prsDatosAprob!nPlazo, prsDatosAprob!nMonto, prsDatosAprob!nCuotas)
''        Set oLinea = Nothing
''    End If
    '******************************************************************************
    'ALPA 20100621 ***************************
    psTpoProdCod = prsDatosAprob!cTpoProdCod
    '*****************************************
    Set oConecta = New COMConecta.DCOMConecta
    
    'ARCV 12-08-2006
    'sSql = "SELECT TOP 1 cNumFuente FROM PersFteIngreso " & _
    '      " WHERE cPersCod='" & CStr(prsDatosAprob!cPersCod) & "'AND nPersTipFte=" & prsDatosAprob!nPersTipFte & " ORDER BY dPersFIinicio DESC"

    'oConecta.AbreConexion
    'Set rs = oConecta.CargaRecordSet(sSql)
    'cNumFte = rs!cNumFuente
    
    oConecta.AbreConexion
    'MADM 20100513 ----------------------------------------------------------------------------------------------------
    'If Mid(psCtaCod, 6, 3) <> "302" Then
    
    'LUCV20160824, Comentó-> Según ERS004-2016 *****
   ' If psTpoProdCod <> "703" Then
    
    'ARCV 30-12-2006
        
        'sSql = "SELECT CF.cNumFuente,nPersTipFte,P2.cPersNombre,CF.dPersEval FROM ColocFteIngreso CF INNER JOIN PersFteIngreso PF ON CF.cNumFuente=PF.cNumFuente INNER JOIN Persona P2 ON P2.cPersCod = PF.cPersFIPersCod" & _
        '        " WHERE cCtaCod='" & psCtaCod & "'"
        'Set prsFuentes = oConecta.CargaRecordSet(sSql)
    '---------------
        'cNumFte = prsDatosAprob!cNumFuente
        
        
'        If prsDatosAprob!nPersTipFte = gPersFteIngresoTipoIndependiente Then
'            sSql = "SELECT  PF.cNumFuente, PF.dPersEval, PF.dPersFICaduca, PF.nPersFIActivoDisp, "
'            sSql = sSql & " PF.nPersFICtasxCobrar, PF.nPersFIInventarios, PF.nPersFIActivosFijos, "
'            sSql = sSql & " PF.nPersFIProveedores, PF.nPersFICredCMACT, PF.nPersFICredOtros, "
'            sSql = sSql & " PF.nPersFIVentas, PF.nPersFIPatrimonio, PF.nPersFICostoVentas, "
'            sSql = sSql & " PF.nPersFIRecupCtasXCobrar, PF.nPersFIEgresosOtros, PF.nPersIngFam, "
'            sSql = sSql & " PF.nPersEgrFam, PF.cUltimaActualizacion,FI.cPersfimoneda "
'            sSql = sSql & " FROM PersFIIndependiente PF INNER JOIN PersFteIngreso FI ON FI.cNumFuente = PF.cNumFuente"
'            sSql = sSql & " Where PF.cNumFuente = '" & cNumFte & "'"
'            sSql = sSql & " AND PF.dPersEval='" & Format(prsDatosAprob!dPersEval, "yyyymmdd") & "'"
'        Else
'            sSql = " Select PF.cNumFuente, PF.dPersEval, PF.nPersIngCli, PF.nPersGastoFam, PF.nPersIngCon, PF.nPersOtrIng, PF.dPersFICaduca "
'            sSql = sSql & " ,FI.cPersFIMoneda,FI.cPersFIComentario,FI.cPersFICargo,FI.dPersFIInicio" 'ARCV 12-11-2006
'            sSql = sSql & " FROM PersFIDependiente PF "
'            sSql = sSql & " INNER JOIN PersFteIngreso FI ON PF.cNumFuente= FI.cNumFuente " 'ARCV 12-11-2006
'            sSql = sSql & " Where PF.cNumFuente = '" & cNumFte & "'"
'            sSql = sSql & " AND PF.dPersEval='" & Format(prsDatosAprob!dPersEval, "yyyymmdd") & "'"
'        End If
'    Set prsFte = oConecta.CargaRecordSet(sSql)
    '--------------------------------
'   End If
    'Fin 'LUCV20160824 *****
    
    'END MADM -----------------------------------------------------------------------------------------------------
    '08-05-2006
    sSql = "SELECT cCodUsu FROM CredAprobacion WHERE cCtaCod='" & psCtaCod & "' AND ISNULL(cCodUsu,'')<>''"
    Set rs = oConecta.CargaRecordSet(sSql)
    If Not rs.EOF Then 'Ya existen autorizaciones
        pbCreditoAutorizado = True
    Else
        pbCreditoAutorizado = False
    End If
    '**********************
   
    oConecta.CierraConexion
    Set oConecta = Nothing
    
Exit Function

ErrorCargarDatosAprobacion:
    Err.Raise Err.Number, "Cargar Datos Aprobacion", Err.Description
End Function

'**Modificado por DAOR 20070409, se aumentó parametro psCtaCodOrigen
'**Que viene a ser la cuenta de origen para un crédito refinanciado
Public Function CargarDatosLinea(ByVal pcLineaCred As String, _
                                ByVal psCodigo As String, _
                                ByRef prsLineaCred As ADODB.Recordset, _
                                ByRef pbExisteLineaCred As Boolean, _
                                Optional psCtaCodOrigen As String)

Dim oLineas As COMDCredito.DCOMLineaCredito
Dim RLinea As ADODB.Recordset
    
On Error GoTo ErrorCargarDatosLinea


    'Carga Datos de la Linea de Credito seleccionada
    Set oLineas = New COMDCredito.DCOMLineaCredito
    'Comentado por DAOR 20070409
    'Set RLinea = oLineas.RecuperaLineadeCredito(psCodigo)
    
    '**DAOR 20070409**********************************************************
    If psCtaCodOrigen = "" Then
        Set RLinea = oLineas.RecuperaLineadeCredito(psCodigo)
    Else
        Set RLinea = oLineas.RecuperaLineadeCredOrigenRefinanciado(psCtaCodOrigen, psCodigo)
    End If
    '*************************************************************************
    Set oLineas = Nothing
    If RLinea.RecordCount > 0 Then
        pbExisteLineaCred = True
        Set oLineas = New COMDCredito.DCOMLineaCredito
        Set prsLineaCred = oLineas.ObtenerTasaLinea(pcLineaCred)
        Set oLineas = Nothing
    Else
        pbExisteLineaCred = False
    End If
    
    Exit Function

ErrorCargarDatosLinea:
    Err.Raise Err.Number, "Cargar Datos Linea", Err.Description
End Function

Public Sub CargaControlesAprobacion(ByVal psCodPersUser As String, _
                                    ByRef prsDes As ADODB.Recordset, _
                                    ByRef prsCon As ADODB.Recordset, _
                                    ByRef prsCon2 As ADODB.Recordset, _
                                    ByRef prsApoder As ADODB.Recordset, _
                                    ByRef pnIndtempo As Integer, _
                                    ByRef pbMuestraSoloAnalistaActual As Integer, Optional ByRef prsCondCred2 As ADODB.Recordset, Optional ByVal pcCodAge As String = "")

Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta
Dim sApoderados As String
Dim oGen As COMDConstSistema.DCOMGeneral
'Dim bMuestraSoloAnalistaActual As Integer

Dim oCons As COMDConstantes.DCOMConstantes

    On Error GoTo ERRORCargaControlesAprobacion
    
    Set oCons = New COMDConstantes.DCOMConstantes
    
    Set prsDes = oCons.RecuperaConstantes(gColocDestino)
    Set prsCon = oCons.RecuperaConstantes(gColocCredCondicion)
    Set prsCon2 = oCons.RecuperaConstantes(gColocCredCondicionOtra)
    Set oCons = Nothing
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    sApoderados = oGen.LeeConstSistema(gConstSistRHCargoCodApoderados)
    pbMuestraSoloAnalistaActual = oGen.LeeConstSistema(58)
    Set oGen = Nothing
    
    sSql = "Select R.cPersCod, P.cPersNombre from RRHH R inner join Persona P ON R.cPersCod = P.cpersCod "
    sSql = sSql & " AND nRHEstado = 201 "
    sSql = sSql & " inner join RHCargos RC ON R.cPersCod = RC.cPersCod "
    sSql = sSql & " where  RC.cRHCargoCod in (" & sApoderados & ") AND RC.dRHCargoFecha = (select MAX(dRHCargoFecha) from RHCargos RHC2 where RHC2.cPersCod = RC.cPersCod)"
    sSql = sSql & " order by P.cPersNombre "
    
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set prsApoder = oConecta.CargaRecordSet(sSql)
    
    
    Do While Not prsApoder.EOF
        If pbMuestraSoloAnalistaActual = 1 Then
            If prsApoder!cPersCod = psCodPersUser Then
                pnIndtempo = prsApoder.AbsolutePosition - 1
            End If
        End If
        prsApoder.MoveNext
    Loop
    
    '*** PEAC 20091119
    'sSql = "Select nConsValor = IdCampana, cConsDescripcion = cDescripcion From Campanas Where bEstado = 1 and (cProd <> 'A' or cProd is null) "
    If pcCodAge = "" Then
        sSql = " exec stp_sel_ObtieneCampanas "
    Else
        sSql = " exec stp_sel_ObtieneCampanas '" & pcCodAge & "'"
    End If
    '*** FIN PEAC
    
    oConecta.AbreConexion
    Set prsCondCred2 = oConecta.CargaRecordSet(sSql, adLockReadOnly)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Sub
    
ERRORCargaControlesAprobacion:
    
    Err.Raise Err.Number, "Carga Controles Aprobacion", Err.Description
End Sub

Public Function ValidaDatosAprobacion(ByVal pbValidaLinea As Boolean, _
                                      ByVal psCodUser As String, _
                                      ByVal pnMontoAprobado As Double, _
                                      ByVal psMoneda As String, _
                                      ByVal psProducto As String, _
                                      ByVal pbRefinanc As Boolean, _
                                      ByVal pnMonedaCod As Integer, _
                                      ByVal pnMontoCuota As Double, _
                                      ByVal pnMonedaFteCod As Integer, _
                                      ByVal pnMontInCliFte As Double, _
                                      ByVal pdFecSis As Date, _
                                      ByVal psLinea As String, _
                                      ByVal pbDesembolsos As Boolean, _
                                      ByVal pMatDesemb As Variant, _
                                      ByVal pMatCalend As Variant, _
                                      ByVal psCtaCod As String, _
                                      ByRef psValor As String) As Boolean


Dim sCad As String
Dim nValor As Double
Dim RLinea As ADODB.Recordset
Dim oLinea As COMDCredito.DCOMLineaCredito
Dim nPlazoTmp As Integer

On Error GoTo ERRORValidaDatosAprobacion

    ValidaDatosAprobacion = True
    
    'Verificacion de Niveles de Aprobacion
    'If Not ValidaNivelAprUsuario(psCodUser, pnMontoAprobado, psMoneda, psProducto, pbRefinanc) Then
    '    ValidaDatosAprobacion = False
    '    Exit Function
    'End If
    
    
    ' CMACICA_CSTS - 26/11/2003 - -------------------------------------------------------------------------------------
    'Valida que para los tipos de Credito CONSUMO, el Monto MAX. de la Cuota sea el 30%
    'de su ingreso familiar (sueldo neto) de la fuente de ingreso dependiente
    If psProducto = gColConsuDctoPlan Then
       If pnMontoCuota > 0 Then
          'Obtiene el parametro del Monto Max de la Cuota para tipos de credito CONSUMO
          nValor = PorcentajeCuotaCredConsumo("3053")
          
          'Valida Que la Cuota del Credito No sea Mayor al 30% del Sueldo Neto '
          psValor = ValidaCuotaParaTipoCredito(pnMonedaCod, pnMontoCuota, pnMonedaFteCod, pnMontInCliFte, nValor, pdFecSis)
          If psValor <> "" Then
             ValidaDatosAprobacion = False
             Exit Function
          End If

        End If
    End If

    If pbValidaLinea = False Then Exit Function
'Validación de Linea de Credito

    Set oLinea = New COMDCredito.DCOMLineaCredito
    Set RLinea = oLinea.RecuperaLineasProducto(psProducto, psMoneda)
    RLinea.Find "cLineaCred = '" & psLinea & "'"
    Set oLinea = Nothing
    
    If RLinea.EOF Then
        psValor = "No se Encontro Linea de Credito"
        ValidaDatosAprobacion = False
        Exit Function
    End If
    
    'Valida Plazo    nPlazoTmp = 0
    If pbDesembolsos Then
        If UBound(pMatDesemb) > 0 Then
            nPlazoTmp = CDate(pMatCalend(UBound(pMatCalend) - 1, 0)) - CDate(pMatDesemb(UBound(pMatDesemb) - 1, 0))
        End If
    Else
        nPlazoTmp = CDate(pMatCalend(UBound(pMatCalend) - 1, 0)) - CDate(Format(pdFecSis, "dd/mm/yyyy"))
    End If
    
    If nPlazoTmp < RLinea!nplazomin Or nPlazoTmp > RLinea!nPlazoMax Then
        psValor = "El Plazo del Credito, No es Permitido por la Linea de Credito"
        ValidaDatosAprobacion = False
        Exit Function
    End If

    'Valida Monto Aprobado
    If pnMontoAprobado < RLinea!nMontoMin Or CDbl(pnMontoAprobado) > RLinea!nMontoMax Then
        psValor = "El Monto del Credito, No es Permitido por la Linea de Credito"
        ValidaDatosAprobacion = False
        Exit Function
    End If
    
    'Verifica el Monto del Prestamo (solo es un aviso de Informacion, mas no de restriccion para ser grabado el credito)
    psValor = ValidaMontoPrestamo(psCtaCod, pnMontoAprobado, pdFecSis)
    
    Exit Function
    
ERRORValidaDatosAprobacion:
        Err.Raise Err.Number, "Validar Datos Aprobacion", Err.Description

End Function

Public Function GrabarDatosAprobacion(ByVal psCtaCod As String, ByVal pdFecSis As Date, ByVal pnEstado As Integer, ByVal psLineaCred As String, _
                                    ByVal pnTasa As Double, ByVal pnMonto As Double, ByVal pnNroCuotas As Integer, ByVal pnPlazo As Integer, _
                                    ByVal pnTipoCuota As ColocTipoCalend, ByVal pnDiaFijo As Integer, ByVal pnProxMes As Integer, _
                                    ByVal pnTipoDesemb As ColocTiposDesembolso, ByVal pnCalendDinamico As Integer, ByVal pnGracia As Integer, _
                                    ByVal pnTasaGracia As Double, ByVal pnTipoGracia As ColocTiposGracia, ByVal nNroCalend As Integer, _
                                    ByVal MatCalendDes As Variant, ByVal MatCalendPagos As Variant, ByVal psApoderado As String, _
                                    ByVal pnCuotaCom As Integer, ByVal pnMiViv As Integer, ByVal pnNroCalenPar As Integer, _
                                    ByVal MatCalendPagos_2 As Variant, ByVal pbRefinanc As Boolean, ByVal pbCapitalInter As Boolean, _
                                    ByVal psCodAge As String, ByVal psCodUsu As String, ByVal psTipoGasto As String, _
                                    ByVal MatCredVig As Variant, ByRef psMontosARefin As Variant, ByVal pbBloqueo As Integer, _
                                    ByRef prsReport As ADODB.Recordset, ByRef psError As String, _
                                    Optional ByVal psProyectoActual As String = "", Optional ByVal pnDiaFijo2 As Integer = 0, Optional ByVal pnIncremCapital As Integer = -1, _
                                    Optional ByVal pbGraciaEnCuotas As Integer = -1, Optional ByVal pnAproReglamento As Integer = 0, Optional ByVal pnExoSeguroDes As Integer = 0, _
                                    Optional ByVal pbDesBcoNac As Boolean = False, Optional ByVal psClaveCli As String = "", Optional ByVal psCodAgeBcoNac As String = "", _
                                    Optional ByVal pnTasCosEfeAnu As Double = 0, Optional ByVal psCtaCodAho As String = "", Optional ByRef pnMovNro As Long, Optional ByRef pnIdCampana As Integer, _
                                    Optional ByVal psDestCred As String, Optional ByVal psCondCred As String, Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", _
                                    Optional ByVal psTpoCredCod As String = "", Optional ByVal psPersCod As String = "", Optional ByVal pnDiasVoucher As Integer = -1, _
                                    Optional ByVal pnExoSegMYPE As Integer = 0, Optional ByVal pbTrabajadoVinc As Boolean = False, Optional ByVal pnTipoVinculado As Integer = 0, Optional ByVal pnMontoMivivienda As Currency = 0#, _
                                    Optional ByRef pArrDatos As Variant = Nothing)
                                    'DAOR 20070202, DAOR 20070419 pnTasCosEfeAnu:Tasa Costo Efectivo Anual
                                    'Optional ByVal pbDesBcoNac As Boolean = False, Optional ByVal psClaveCli As String = "", Optional ByVal psCodAgeBcoNac As String = "", Optional ByVal pnTasCosEfeAnu As Double = 0, Optional ByVal psCtaCodAho As String = "", Optional ByRef pnMovNro As Long, Optional ByRef pnIdCampana As Integer, Optional ByVal psDestCred As String, Optional ByVal psCondCred As String, Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", Optional ByVal psTpoCredCod As String = "") ' DAOR 20070202, DAOR 20070419 pnTasCosEfeAnu:Tasa Costo Efectivo Anual
                                    'By Capi 10042008 se agrego parametro psCtaCodAho para desembolso a terceros
                                    'MAVM 20090702 psDestCred
                                    'AMDO 20130712 pnDiasVoucher TI-ERS077-2013
                                    'WIOR 20131111 AGREGO pnCuotaBalon
                                    'WIOR 20140128 AGREGO pbTrabajadoVinc, pnTipoVinculado
                                    'WIOR 20140825 AGREGO pMatCalendSegDes
                                    'APRI20180821 ERS061-2018 REEMPLAZO pnCuotaBalon POR pnExoSegMYPE
'ByVal MatGastos As Variant, ByVal pnNumGastos As Integer, (No son necesarios)
'EJVG20150518 Se agregó array pArrDatos por llegar al límite de Parametros -> pMatCalendSegDes como primer item del array pArrDatos

Dim oAmpliado As COMDCredito.DCOMAmpliacion
Dim oCalendX As COMDCredito.DCOMCalendario
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String
Dim bAmpliado As Boolean
Dim bQuincenal As Boolean
Dim pnMovNro1 As Long
Dim nMontoOri As Double 'MAVM 20130209
Dim pMatCalendSegDes As Variant 'EJVG20150518
Dim lvGravamen() As tGarantiaGravamen 'EJVG20150518
Dim iMat As Integer 'EJVG20150518
Dim lsTpoProdCod As String 'EJVG20150518
Dim lvArray() As Variant 'EJVG20150518

On Error GoTo ERRORGrabarDatosAprobacion
    'EJVG20150518 *** Para nuevos parametros
    ReDim lvGravamen(0)
    If IsArray(pArrDatos) Then
        For iMat = 0 To UBound(pArrDatos)
            Select Case iMat
                Case 0: pMatCalendSegDes = pArrDatos(iMat)
                Case 1: lvGravamen = pArrDatos(iMat)
                Case 2: lsTpoProdCod = pArrDatos(iMat)
            End Select
        Next
    End If
    
    ReDim lvArray(1)
    lvArray(0) = lvGravamen
    lvArray(1) = lsTpoProdCod
    'END EJVG *******
    
    CofideReactivaLimpiarDatos 'ANGC/RIRO 20200520 Cofide Reactiva
    
psMontosARefin = MontosARefinanciar(psCtaCod, pdFecSis)

Set oAmpliado = New COMDCredito.DCOMAmpliacion
bAmpliado = oAmpliado.ValidaCreditoaAmpliar(psCtaCod)
Set oAmpliado = Nothing

Set oCalendX = New COMDCredito.DCOMCalendario
bQuincenal = oCalendX.VerificaCalendQuincenal(psCtaCod)
Set oCalendX = Nothing

'Validar el descalce
If psProyectoActual = "H" Or psProyectoActual = "M" Then
    If BuscarDelcalceAdeudado(psCtaCod, pnMonto, pdFecSis) = True Then
        psError = "La Aprobación del Crédito produce un delcalce en el Adeudado"
        Exit Function
    End If
End If

'******** Se actualizo para el manejo de la Capitalizacion de la Gracia
'If pnIncremCapital = 1 Then
'    pnMonto = pnMonto + MontoIntPerDias(pnTasaGracia, pnGracia, pnMonto)
'End If
'*********************************

'MAVM 20130209 ***
If pnTipoGracia = 6 Then
'    nMontoOri = pnMonto
'    pnMonto = pnMonto + MontoIntPerDias(pnTasaGracia, pnGracia, pnMonto)
'    MatCalendDes(0, 1) = pnMonto
End If
'***

'Se Agrego para calcular la Matriz de Gastos en el COM
Dim oGasto As NCOMGasto
Dim nNumGastos As Integer
Dim MatGastos As Variant

'ALPA 20141201**********************
Dim oCredito As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim pnCuotaMivivienda As Integer
Set oCredito = New COMDCredito.DCOMCredito
Set R = oCredito.RecuperaColocaciones(psCtaCod)
pnCuotaMivivienda = IIf(IsNull(R!nCuotaPolizaMivivienda), 0, R!nCuotaPolizaMivivienda) 'ALPA20140612
R.Close
Set R = Nothing
'************************************

'ALPA 20120413***************************************
Set oGasto = New NCOMGasto
If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
    MatGastos = oGasto.GeneraCalendarioGastos(MatCalendPagos, MatCalendDes, nNumGastos, pdFecSis, _
                    psCtaCod, 1, "DE", psTipoGasto, _
                    CDbl(MatCalendPagos(0, 2)), pnMonto, , , , , , , , , IIf(pnDiaFijo = 0, 1, 2), pnPlazo, pnExoSeguroDes, psAgeCodAct, psTpoProdCod, psTpoCredCod, , , , , , , , , , pnExoSegMYPE)
                    'MAVM 03112009 Se Agrego el parametro: pnExoSeguroDes
                    'APRI20180821 ERS061-2018 ADD pnExoSegMYPE
                    'CDbl(MatCalendPagos(0, 2)), pnMonto, , , , , , , , , IIf(pnDiaFijo = 0, 1, 2), pnPlazo)
End If
Set oGasto = Nothing
'****************************************************
psError = AprobacionCredito(psCtaCod, pnEstado, pdFecSis, 0, psLineaCred, _
                 pnTasa, pnMonto, pnNroCuotas, pnPlazo, pnTipoCuota, pnDiaFijo, _
                pnProxMes, pnTipoDesemb, pnCalendDinamico, _
                pnGracia, pnTasaGracia, pnTipoGracia, nNroCalend, MatCalendDes, _
                MatCalendPagos, MatGastos, nNumGastos, psApoderado, pnCuotaCom, _
                pnMiViv, pnNroCalenPar, MatCalendPagos_2, pbRefinanc, pbCapitalInter, psCodAge, psCodUsu, _
                psTipoGasto, MatCredVig, bAmpliado, bQuincenal, pbBloqueo, pnDiaFijo2, pnIncremCapital, pbGraciaEnCuotas, pnAproReglamento, pnExoSeguroDes, _
                pbDesBcoNac, psClaveCli, psCodAgeBcoNac, pnTasCosEfeAnu, psCtaCodAho, pnMovNro1, pnIdCampana, psDestCred, psCondCred, psPersCod, nMontoOri, pnDiasVoucher, pnExoSegMYPE, pbTrabajadoVinc, pnTipoVinculado, pnMontoMivivienda, pMatCalendSegDes, lvArray)
                'DAOR 20070205 : parametros de desembolso en banco de la nación, DAOR 20070419 pnTasCosEfeAnu:Tasa Costo Efectivo Anual
                'pbDesBcoNac, psClaveCli, psCodAgeBcoNac, pnTasCosEfeAnu, psCtaCodAho, pnMovNro1, pnIdCampana, psDestCred, psCondCred)  'DAOR 20070205 : parametros de desembolso en banco de la nación, DAOR 20070419 pnTasCosEfeAnu:Tasa Costo Efectivo Anual
                'MAVM 20090702 psDestCred
                'By Capi 10042008 se agrego parametro psCtaCodAho para desembolso
                'AMDO 20130712 pnDiasVoucher
                'WIOR 20131111 AGREGO pnCuotaBalon
                'WIOR 20140128 pbTrabajadoVinc,pnTipoVinculado
                'WIOR 20140825 AGREGO pMatCalendSegDes
                'APRI20180821 ERS061-2018 REEMPLAZO pnCuotaBalon POR pnExoSegMYPE
'*** PEAC 20080813
pnMovNro = pnMovNro1

'Para el Reporte
Set oCon = New COMConecta.DCOMConecta
oCon.AbreConexion
sSql = "Select GETDATE() "
Set prsReport = oCon.CargaRecordSet(sSql)
oCon.CierraConexion
Set oCon = Nothing

Exit Function

ERRORGrabarDatosAprobacion:
        Err.Raise Err.Number, "Grabar Datos Aprobacion", Err.Description

End Function

Public Function CargarDatosDesembolso(ByVal psCtaCod As String, _
                                    ByVal pdFecSis As Date, _
                                    ByRef pnNroProxDesemb As Integer, _
                                    ByRef prsDesemb As ADODB.Recordset, _
                                    ByRef prsCredVig As ADODB.Recordset, _
                                    ByRef pvTotalesVig As Variant, _
                                    ByRef prsVigGra As ADODB.Recordset, _
                                    ByRef prsCuentas As ADODB.Recordset, _
                                    ByRef pvAgencias As Variant, _
                                    ByRef pnContPersCtaAho As Integer, _
                                    ByRef pRsPersCtaAho As Variant, _
                                    ByRef prsGastos As ADODB.Recordset, _
                                    ByRef pnMontoITF As Double, _
                                    ByRef prsDesemPar As ADODB.Recordset, _
                                    ByRef pbAmpliacion As Boolean, _
                                    ByVal psOperacion As String, ByRef pbOperacionEfectivo As Boolean, ByRef pnMontoLavDinero As Double, ByRef pnTC As Double, ByRef pbExoneradaLavado As Boolean, _
                                    ByRef psPersCodRep As String, ByRef psPersNombreRep As String, ByRef prBancos As ADODB.Recordset, Optional ByRef prsRelEmp As ADODB.Recordset = Nothing, Optional ByRef prsProveedores As ADODB.Recordset, Optional ByRef prsComisionLeasing As ADODB.Recordset) 'CUSCO
                                    'ByRef psPersCodRep As String, ByRef psPersNombreRep As String, ByRef prBancos As ADODB.Recordset, Optional ByRef prsRelEmp As ADODB.Recordset = Nothing) 'CUSCO
                                    '*** BRGO 20111111 Se agregó el parámetro "rsRelEmp"
                                    
Dim oLineas As COMDCredito.DCOMLineaCredito
Dim oCredito As COMDCredito.DCOMCredito
Dim oCaptacion As COMNCaptaGenerales.NCOMCaptaGenerales
Dim oCalend As COMDCredito.DCOMCalendario
Dim oAmpliacion As COMDCredito.DCOMAmpliacion
Dim oITF As COMDConstSistema.FCOMITF
Dim oLeasing As COMDCredito.DCOMleasing 'ALPA 20111209

Dim clsLav As COMNCaptaGenerales.NCOMCaptaDefinicion
Dim clsExo As COMNCaptaServicios.NCOMCaptaServicios
    
Dim RTemp As ADODB.Recordset
Dim nNroCalen As Integer
        
Dim i As Integer
Dim nMontoA As Double
Dim nInteresA As Double
Dim nTotal As Double
        
Dim nNumCtasAhorro As Integer
Dim vCtaAhorro As Variant
Dim nMontoPrestamo As Double
Dim sPersCod As String
Dim bFMV As Boolean

Dim sTpoProdCod As Integer 'BRGO 20111125
        
'CUSCO
Dim oRel As COMDCredito.UCOMCredRela
        
On Error GoTo ErrorCargarDatosDesembolso

    Set oCredito = New COMDCredito.DCOMCredito
    Set prsDesemb = oCredito.RecuperaDatosDesembolso(psCtaCod)
    
    If Not prsDesemb.BOF And Not prsDesemb.EOF Then
        sTpoProdCod = prsDesemb!cTpoProdCod
        bFMV = IIf(sTpoProdCod = "802" Or sTpoProdCod = "806", True, False)
        nNroCalen = prsDesemb!nNroCalen
        pnNroProxDesemb = prsDesemb!nNroProxDesemb
        nMontoPrestamo = IIf(IsNull(prsDesemb!nMontoADesemb), 0, prsDesemb!nMontoADesemb)
        sPersCod = prsDesemb!cPersCod
        'Creditos Vigentes
        
        'FRHU 20140424 TI-ERS015-2014
        'Set prsCredVig = oCredito.RecuperaCreditosVigentes(sPersCod, , Array(gColocEstVigMor, gColocEstVigNorm, gColocEstVigVenc), Mid(psCtaCod, 9, 1))
        Set prsCredVig = CargarCreditosVigentesNew(sPersCod, psCtaCod, Mid(psCtaCod, 9, 1))
        'FRHU 20140424
        
        Set oITF = New COMDConstSistema.FCOMITF
        oITF.fgITFParametros
        'oITF.fgITFParamAsume (psCodAge)
        ReDim pvTotalesVig(prsCredVig.RecordCount)
        Do While Not prsCredVig.EOF
            nMontoA = prsCredVig!nSaldo
            nInteresA = InteresGastosAFecha(prsCredVig!cCtaCod, pdFecSis)
            'nTotal = oITF.fgITFCalculaImpuestoNOIncluido(nMontoA + nInteresA, True)
            nTotal = nMontoA + nInteresA
            pvTotalesVig(prsCredVig.Bookmark) = Format(nTotal, "#0.00")
            prsCredVig.MoveNext
        Loop
        pnMontoITF = oITF.fgITFDesembolso(nMontoPrestamo)
        Set oITF = Nothing
        
        Set prsVigGra = oCredito.RecuperaCreditosVigentesGrabados(psCtaCod)
        
        'Carga Cuentas de Ahorro de Clientes
        Set oCaptacion = New COMNCaptaGenerales.NCOMCaptaGenerales
        'By Capí 10042008 para considerar solo una cuenta elegida en la aprobacion
        If Mid(prsDesemb!cCtaAhoDesembTercero, 1, 3) = "109" Then
            Set prsCuentas = oCaptacion.GetCuentasPersona(prsDesemb!cPersCodTitTercero, gCapAhorros, True, Not bFMV, CInt(Mid(prsDesemb!cCtaAhoDesembTercero, 9, 1)), , prsDesemb!cCtaAhoDesembTercero, , , , bFMV)
        Else
            If sTpoProdCod <> "517" Then
                'Set prsCuentas = oCaptacion.GetCuentasPersona(sPersCod, gCapAhorros, True, True, CInt(Mid(psCtaCod, 9, 1)), , , , True) '** Juez 20120723
                Set prsCuentas = oCaptacion.GetCuentasPersona(sPersCod, gCapAhorros, True, True, CInt(Mid(psCtaCod, 9, 1)), , , "0,5", True) '** FRHU 20140227 RQ14006
            Else 'BRGO 20111108
                Set prsCuentas = oCaptacion.GetCuentasPersona(sPersCod, gCapAhorros, True, False, CInt(Mid(psCtaCod, 9, 1)), , , 7, True) '** Juez 20120723
            End If
        End If
        Set oCaptacion = Nothing
        
       '***BRGO 20111107 *************************************************************
        If sTpoProdCod = "517" Then
            Set prsRelEmp = oCredito.RecuperaRelacionesInfogas(psCtaCod)
        End If
        '******************************************************************************

        ReDim pvAgencias(prsCuentas.RecordCount)
        nNumCtasAhorro = prsCuentas.RecordCount
        ReDim vCtaAhorro(prsCuentas.RecordCount)
        Do While Not prsCuentas.EOF
            vCtaAhorro(prsCuentas.Bookmark) = prsCuentas!cCtaCod
            Set RTemp = oCredito.RecuperaAgencia(Mid(prsCuentas!cCtaCod, 4, 2))
            pvAgencias(prsCuentas.Bookmark) = Trim(RTemp!cAgeDescripcion)
            RTemp.Close
            prsCuentas.MoveNext
        Loop
        
        'Carga Clientes Relacionados con las Ctas de Ahorros
        pnContPersCtaAho = 0
        For i = 1 To nNumCtasAhorro
            pnContPersCtaAho = pnContPersCtaAho + 1
            ReDim Preserve pRsPersCtaAho(pnContPersCtaAho)
            Set oCaptacion = New COMNCaptaGenerales.NCOMCaptaGenerales
            Set pRsPersCtaAho(pnContPersCtaAho - 1) = oCaptacion.GetPersonaCuenta(vCtaAhorro(i))
            Set oCaptacion = Nothing
        Next i
            
        Set oCredito = Nothing
            
        'Halla el Gasto del Desembolso
        Set oCalend = New COMDCredito.DCOMCalendario
        Set prsGastos = oCalend.RecuperaGastosCuotaDesemb(psCtaCod, nNroCalen, gColocCalendAplDesembolso, pnNroProxDesemb)
        Set oCalend = Nothing
        
        'Carga todos los desembolsos Pp
        Set oCalend = New COMDCredito.DCOMCalendario
        Set prsDesemPar = oCalend.RecuperaListaDesembolsosParciales(psCtaCod)
        Set oCalend = Nothing
        
        ' Mensaje que indica que el credito es una ampliacion
        Set oAmpliacion = New COMDCredito.DCOMAmpliacion
        pbAmpliacion = oAmpliacion.ValidaCreditoaAmpliar(psCtaCod)
        Set oAmpliacion = Nothing
    Else
        Set oCredito = Nothing
        Exit Function
    End If

''''' SE AGREGO PARA EL LAVADO DE DINERO '''''''''''''''''
    Set clsLav = New COMNCaptaGenerales.NCOMCaptaDefinicion
    Set clsExo = New COMNCaptaServicios.NCOMCaptaServicios

    pbExoneradaLavado = clsExo.EsPersonaExoneradaLavadoDinero(sPersCod)

    pbOperacionEfectivo = clsLav.EsOperacionEfectivo(Trim(psOperacion))
    pnMontoLavDinero = clsLav.GetCapParametro(gMonOpeLavDineroME)
    
    If Mid(psCtaCod, 9, 1) = gMonedaNacional Then
        Dim clsTC As COMDConstSistema.NCOMTipoCambio
        Set clsTC = New COMDConstSistema.NCOMTipoCambio
        pnTC = clsTC.EmiteTipoCambio(pdFecSis, TCFijoDia)
        Set clsTC = Nothing
    Else
        pnTC = 1
    End If
    
    Set clsLav = Nothing
    Set clsExo = Nothing
'''''''''''''''''''''''''''''''''''''''''''''''''''''''
'CUSCO
psPersCodRep = ""
psPersNombreRep = ""

If prsDesemb!nPersPersoneria <> gPersonaNat Then
    Set oRel = New COMDCredito.UCOMCredRela

    Call oRel.CargaRelacPersCred(psCtaCod)

    oRel.IniciarMatriz
    While Not oRel.EOF
        If oRel.ObtenerValorRelac = gColRelPersRepresentante Then
            psPersCodRep = oRel.ObtenerCodigo
            psPersNombreRep = oRel.ObtenerNombre
        End If
        oRel.siguiente
    Wend
    Set oRel = Nothing
End If
'''''''''''''''''''''''''''''''''''''''''''''''''''''''

'Carga Bancos

    Set oCredito = New COMDCredito.DCOMCredito
    Set prBancos = oCredito.RecuperaBancos
    Set oCredito = Nothing
  'ALPA 20111209
  'Cargar proveedores
    Set oLeasing = New COMDCredito.DCOMleasing
    Set prsProveedores = oLeasing.ObtenerAprobacionLeasing(psCtaCod)
    Set oLeasing = Nothing
  'Cargar Datos iniciales
    Set oLeasing = New COMDCredito.DCOMleasing
    Set prsComisionLeasing = oLeasing.ObtenerComisionLeasingDesembolso(psCtaCod)
    Set oLeasing = Nothing
  '****************************

    Exit Function

ErrorCargarDatosDesembolso:
    Err.Raise Err.Number, "Cargar Datos Desembolso", Err.Description
End Function

Public Function CargarDesembolsoCredito(ByVal psCtaCod As String, _
                                        ByVal psOperacion As String, ByVal pdFecSis As Date, ByVal psPersCod As String, _
                                        ByVal pbDesembCC As Boolean, ByVal pbCuentaNueva As Boolean, _
                                        ByVal psctaAho As String, ByVal pnMontoGastos As Double, ByVal pnMontoITF As Double, _
                                        ByVal pnMontoCancel As Double, ByVal pnMontoDesemb As Double, _
                                        ByVal pnMontoPrestamo As Double, _
                                        ByVal psCodAge As String, ByVal psCodUser As String, ByVal psNomAge As String, _
                                        ByVal psNomCmac As String, ByVal psInstCmac As String, ByVal psCodCMAC As String, _
                                        ByVal pMatCargoAutom As Variant, ByVal pMatCredCanc As Variant, _
                                        ByVal pnContMatCredCanc As Integer, ByVal pRSRela As ADODB.Recordset, _
                                        ByVal pnTasa As Double, ByVal pnPersoneria As Integer, ByVal pnTipoCuenta As Integer, _
                                        ByVal pnTipoTasa As Integer, pbDocumento As Boolean, _
                                        ByVal psNroDoc As String, ByVal psCodIF As String, _
                                        ByRef psMensaje As String, ByRef psPersLavDinero As String, ByRef pnMontoLavDinero As Double, _
                                        ByRef pMatGastos As Variant, ByRef psError As String, _
                                        ByRef psImpreDocs As String, ByRef psImpreBoletaAbono As String, ByRef psImpreBoletaGasto As String, ByRef psImpreBoletaCancel As String, _
                                        ByRef psImpreLavado As String, ByVal psLpt As String, ByVal pMatLavDinero As Variant, _
                                        Optional ByVal lnDescripCuota As Variant = "", _
                                        Optional ByVal psProyectoActual As String = "", Optional ByVal pvbDesembCheque As Boolean = False, Optional ByVal psBanco As String = "", Optional ByVal psNumCheque As String = "", Optional ByVal psCtaBco As String = "", _
                                        Optional ByRef psImpreDocsBoleta As String = "", Optional ByRef psCtaAhoR As String, Optional ByVal pnMontoPoliza As Double = 0, _
                                        Optional ByVal pMatDatosAho As Variant = "", Optional psVisLavDinero As String = "", _
                                        Optional ByVal pbDesembInfoGas As Boolean = False, Optional ByVal prsRelEmp As ADODB.Recordset = Nothing, _
                                        Optional ByVal pnMontoRetirar As Double = 0#, Optional ByVal psGlosaBloqueo As String = "", Optional ByVal bAmpliado As Integer, _
                                        Optional ByRef pMatCuentaGastoCierre As Variant = "") 'DAOR 20070511, 'FRHU 20140228 RQ14006 - Se agrego pnMontoRetirar y psGlosaBloqueo
'CTI3: ferimoro ERS082-2018, Optional ByVal bAmpliado As Integer
'ARCV 13-02-2007 (pMatDatosAho)1
'pnProgAhorros, pnMontoAbonar, pnPlazoAbonar, psPromotorAho
'MADM 20110531 -  lnDescripCuota = psBenDireccion
'*** BRGO 20111111 **************************
    '- Se agregó los parámetros "pbDesembInfoGas", "prsRelEmp"
    '- Datos del REU se ingresan en una matriz "pMatLavDinero" y luego se actualizan las variables
    'ByVal psTitNombre As String, ByVal psTitDocld As String, ByVal psTitDireccion As String,
    'ByVal psReaNombre As String, ByVal psReaDocld As String, ByVal psReaDireccion As String,
    'ByVal psBenNombre As String, ByVal psBenDocld As String,

Dim lsTitNombre As String
Dim lsTitDocld As String
Dim lsTitDireccion As String
Dim lsReaNombre As String
Dim lsReaDocld As String
Dim lsReaDireccion As String
Dim lsBenNombre As String
Dim lsBenDocld As String
'*** END BRGO ***********************************

Dim oNCredDoc As COMNCredito.NCOMCredDoc
Dim oCal As COMDCredito.DCOMCalendario
Dim nDCred As COMDCredito.DCOMCredito
Dim oNCredito As COMNCredito.NCOMCredito
Dim oITF As COMDConstSistema.FCOMITF

Dim loMov As COMDMov.DCOMMov

Dim Docs As Variant
Dim sError As String
Dim MatGastos As Variant
Dim nMovNro As Long
Dim i As Integer
'Dim nFicSal As Integer
'Dim MatDatosAho(14) As String
Dim MatDatosAho(18) As String 'FRHU20140228 RQ14006
Dim R As ADODB.Recordset

Dim nNumDias As Integer
Dim dUltimaFecdes As Date
Dim dProxFecDes As Date

Dim lnValorItfAbono As Double
Dim lnValorItfGasto As Double
Dim lnValorItfCancelacion As Double

'08-06-2006
Dim sSql As String
Dim oCon As COMConecta.DCOMConecta
'------------
'ALPA 20100607 B2*********************
Dim lsTpoProdCod As String
Dim lsTpoCredCod As String
'*************************************
Dim nRedondeoITF As Double 'BRGO 20111012
Dim MatDatosAhoEmp(84) As String 'BRGO 20111125
Dim bAperturaGastoCierre As Boolean

On Error GoTo ErrorCargarDesembolsoCredito

    'Obtener rango
    Dim oGen As COMDConstSistema.DCOMGeneral
    Set oGen = New COMDConstSistema.DCOMGeneral
    nNumDias = oGen.LeeConstSistema(79)
    Set oGen = Nothing

    Set oCal = New COMDCredito.DCOMCalendario
    Set R = oCal.RecuperaCalendarioDesemb(psCtaCod)
    Set oCal = Nothing

'   ************************************************************
    '*** BRGO Se actualizan los valores de las variables con datos del REU
    lsTitNombre = pMatLavDinero(0)
    lsTitDocld = pMatLavDinero(1)
    lsTitDireccion = pMatLavDinero(2)
    lsReaNombre = pMatLavDinero(3)
    lsReaDocld = pMatLavDinero(4)
    lsReaDireccion = pMatLavDinero(5)
    lsBenNombre = pMatLavDinero(6)
    lsBenDocld = pMatLavDinero(7)
    '*** END BRGO ******************************

    dUltimaFecdes = CDate("01/01/1900")
    
    If R.BOF Then
        psMensaje = "No existe calendario de desembolsos grabado"
        Exit Function
    Else
        R.MoveFirst
        If R.RecordCount > 1 Then 'Parciales
            'Sacar el menor pendiente
            Do While Not R.EOF
                If R!ncoloccalendestado = 0 Then
                    dProxFecDes = R!dVenc
                    Exit Do
                ElseIf R!ncoloccalendestado = 1 Then
                    dUltimaFecdes = R!dPago
                End If
                R.MoveNext
            Loop
        Else
            dUltimaFecdes = R!dVenc
        End If
        
        R.MoveFirst
    End If
    
    Do While Not R.EOF
        
        If R!ncoloccalendestado = 0 Then 'Si es pendiente
            If dUltimaFecdes = R!dPago Then
                psMensaje = "No Se puede Realizar dos Desembolsos el Mismo Dia al mismo Credito "
                'R.Close
                Exit Function
            End If
        Else
            dUltimaFecdes = CDate(Format(R!dPago, "dd/mm/yyyy"))
        End If
        
        R.MoveNext
    Loop
    'R.Close
'***********************************************************
'ALPA 20100607 B2*******************************************
Set nDCred = New COMDCredito.DCOMCredito
    Set R = nDCred.RecuperaColocaciones(psCtaCod)
        If Not R.EOF Or Not R.EOF Then
            lsTpoProdCod = IIf(IsNull(R!cTpoProdCod), 0, R!cTpoProdCod)
            lsTpoCredCod = IIf(IsNull(R!cTpoCredCod), 0, R!cTpoCredCod)
        End If
Set nDCred = Nothing
'***********************************************************

bAperturaGastoCierre = (lsTpoProdCod = "802" Or lsTpoProdCod = "806") And IsArray(pMatCuentaGastoCierre)

'08-06-2006 'Validar que se ha Autorizado el credito
sSql = "SELECT cCtaCod FROM CredAprobacion WHERE cCtaCod='" & psCtaCod & "' AND ISNULL(cCodUsu,'')=''"
Set oCon = New COMConecta.DCOMConecta
oCon.AbreConexion
Set R = oCon.CargaRecordSet(sSql)
    If Not R.EOF Then
        psMensaje = "El Credito no esta Autorizado"
        oCon.CierraConexion
        Set oCon = Nothing
        Exit Function
    End If
oCon.CierraConexion
Set oCon = Nothing
'------------------------

    lnValorItfAbono = 0
    lnValorItfGasto = 0
    lnValorItfCancelacion = 0

    'Desembolso Abono a Cuenta
    Set oITF = New COMDConstSistema.FCOMITF
    oITF.fgITFParametros
    oITF.fgITFParamAsume Mid(psCtaCod, 4, 2)
'lnValorItfAbono , lnValorItfGasto,lnValorItfCancelacion
    If pbDesembCC Then
        lnValorItfAbono = pnMontoITF
        lnValorItfGasto = oITF.fgITFDesembolso(pnMontoGastos)
        'lnValorItfCancelacion = oITF.fgITFDesembolso(pnMontoCancel) 'JUEZ 20130930 Cobrar ITF en la Cancelacion sólo cuando es desembolso efectivo
        
        '*** BRGO 20111012 ************************************************
        nRedondeoITF = fgDiferenciaRedondeoITF(pnMontoITF)
        If nRedondeoITF > 0 Then
            pnMontoITF = pnMontoITF - nRedondeoITF
            lnValorItfAbono = pnMontoITF
        End If
        '*** END BRGO
        
        'FRHU 20140228 RQ14006
        
'        If pbCuentaNueva Then
'            psError = DesembolsarCredito(nmovnro, MatDatosAho, psCtaCod, pnMontoPrestamo, _
'                pnMontoDesemb, pMatGastos, pMatCargoAutom, pdFecSis, psCodAge, psCodUser, True, True, pMatCredCanc, pnContMatCredCanc, psctaAho, _
'                pRSRela, pnTasa, pnPersoneria, pnTipoCuenta, pnTipoTasa, pbDocumento, psNroDoc, psCodIF, pnMontoGastos, pnMontoCancel, _
'                psPersLavDinero, pnMontoCancel, oITF.gbITFAplica, lnValorItfAbono, lnValorItfGasto, lnValorItfCancelacion, False, gITFCobroCargo, psProyectoActual, , , , , psCtaAhoR, pMatDatosAho, pnMontoPoliza, psVisLavDinero, Mid(psCtaCod, 4, 2), lsTpoProdCod, lsTpoCredCod, lnDescripCuota) 'DAOR 20070511, psVisLavDinero
'        Else
'            psError = DesembolsarCredito(nmovnro, MatDatosAho, psCtaCod, pnMontoPrestamo, _
'                pnMontoDesemb, pMatGastos, pMatCargoAutom, pdFecSis, psCodAge, psCodUser, True, False, pMatCredCanc, pnContMatCredCanc, psctaAho, , , , , , , , , _
'                pnMontoGastos, pnMontoCancel, psPersLavDinero, pnMontoITF, _
'                oITF.gbITFAplica, lnValorItfAbono, lnValorItfGasto, lnValorItfCancelacion, False, gITFCobroCargo, psProyectoActual, , , , , , , pnMontoPoliza, psVisLavDinero, Mid(psCtaCod, 4, 2), lsTpoProdCod, lsTpoCredCod, lnDescripCuota, pbDesembInfoGas, prsRelEmp, MatDatosAhoEmp) 'DAOR 20070511, psVisLavDinero /BRGO 20111111 pbDesembInfoGas, prsRelEmp
'        End If
        If pbCuentaNueva Then
            psError = DesembolsarCredito(nMovNro, MatDatosAho, psCtaCod, pnMontoPrestamo, _
                pnMontoDesemb, pMatGastos, pMatCargoAutom, pdFecSis, psCodAge, psCodUser, True, True, pMatCredCanc, pnContMatCredCanc, psctaAho, _
                pRSRela, pnTasa, pnPersoneria, pnTipoCuenta, pnTipoTasa, pbDocumento, psNroDoc, psCodIF, pnMontoGastos, pnMontoCancel, _
                psPersLavDinero, pnMontoCancel, oITF.gbITFAplica, lnValorItfAbono, lnValorItfGasto, lnValorItfCancelacion, False, gITFCobroCargo, psProyectoActual, , , , , psCtaAhoR, pMatDatosAho, pnMontoPoliza, psVisLavDinero, Mid(psCtaCod, 4, 2), lsTpoProdCod, lsTpoCredCod, lnDescripCuota, , , , , , , pnMontoRetirar, psGlosaBloqueo, pMatCuentaGastoCierre)
        Else
            psError = DesembolsarCredito(nMovNro, MatDatosAho, psCtaCod, pnMontoPrestamo, _
                pnMontoDesemb, pMatGastos, pMatCargoAutom, pdFecSis, psCodAge, psCodUser, True, False, pMatCredCanc, pnContMatCredCanc, psctaAho, , , , , , , , , _
                pnMontoGastos, pnMontoCancel, psPersLavDinero, pnMontoITF, _
                oITF.gbITFAplica, lnValorItfAbono, lnValorItfGasto, lnValorItfCancelacion, False, gITFCobroCargo, psProyectoActual, , , , , , , pnMontoPoliza, psVisLavDinero, Mid(psCtaCod, 4, 2), lsTpoProdCod, lsTpoCredCod, lnDescripCuota, pbDesembInfoGas, prsRelEmp, MatDatosAhoEmp, , , , pnMontoRetirar, psGlosaBloqueo, pMatCuentaGastoCierre)
        End If
        'FIN FRHU 20140228 RQ14006
        
        pnMontoITF = IIf(bAperturaGastoCierre, lnValorItfAbono, pnMontoITF)
    Else
        nRedondeoITF = fgDiferenciaRedondeoITF(pnMontoITF) 'JUEZ 20130911
        pnMontoITF = IIf(nRedondeoITF > 0, pnMontoITF - nRedondeoITF, pnMontoITF) 'JUEZ 20130911
        psError = DesembolsarCredito(nMovNro, MatDatosAho, psCtaCod, pnMontoPrestamo, _
            pnMontoDesemb, pMatGastos, pMatCargoAutom, pdFecSis, psCodAge, _
            psCodUser, False, , pMatCredCanc, pnContMatCredCanc, , , , , , , , , , pnMontoGastos, pnMontoCancel, psPersLavDinero, pnMontoITF, oITF.gbITFAplica, , , _
            lnValorItfCancelacion, False, , psProyectoActual, pvbDesembCheque, psBanco, psNumCheque, psCtaBco, , , pnMontoPoliza, psVisLavDinero, Mid(psCtaCod, 4, 2), lsTpoProdCod, lsTpoCredCod, lnDescripCuota) 'DAOR 20070511
    End If

    
    Set oITF = Nothing

    If psError <> "" Then
        Exit Function
    End If
    
    'AMDO 20130312 Insertar Puntos CrediPremiazo para los desembolsos *******
    If Not psError <> "" Then
    
    Dim oVarSist As COMDConstSistema.DCOMGeneral
    Set oVarSist = New COMDConstSistema.DCOMGeneral
    Dim pCrediPremiazo As Integer
    pCrediPremiazo = oVarSist.LeeConstSistema(432)
    Set oVarSist = Nothing
       
    
        If pCrediPremiazo = 1 Then
            Call InsertaPuntosCrediPremiazoDesemboloso(nMovNro, pnMontoPrestamo, psCtaCod, psPersCod, pdFecSis)
        End If
    End If
    'END AMDO **************************************************************
    'EJVG20151119 Se comentó asiento de avales->Se incluye en el procedimiento [DCOMCredActBD.dAsientoGarantiaDesembolso]
    ''JUEZ 20130429 *********************************************************
    'Set nDCred = New COMDCredito.DCOMCredito
    'Set R = nDCred.RecuperaGarantes(psCtaCod)
    'Set nDCred = Nothing
    'If Not R.EOF Then
    '    Dim oBase As COMDCredito.DCOMCredActBD
    '    Set oBase = New COMDCredito.DCOMCredActBD
    '    Call oBase.dInsertMovCol(nMovNro, gAsientoGarantAvales, psCtaCod, 0, pnMontoPrestamo, 0, "", 0, 0, 0, False)
    '    Call oBase.dInsertMovColDet(nMovNro, gAsientoGarantAvales, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMontoPrestamo, False)
    '    Set oBase = Nothing
    'End If
    'Set R = Nothing
    ''END JUEZ **************************************************************

    Set oNCredDoc = New COMNCredito.NCOMCredDoc
    
    'RIRO 20200706 **************************
    Dim bEsReactiva As Boolean 'RIRO 20200611
    bEsReactiva = False
    Set nDCred = New COMDCredito.DCOMCredito
    bEsReactiva = False
    bEsReactiva = nDCred.EsReactiva(psCtaCod)
    If bEsReactiva Then
        oNCredDoc.bAplicaComision = True 'RIRO20200706
    End If
    'END RIRO *******************************
    
    If pbDesembCC Then
        If pbCuentaNueva Then
            Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                psCodUser, pdFecSis, 1, MatDatosAho(0), CDbl(MatDatosAho(1)), CDbl(MatDatosAho(2)), _
                 CDbl(MatDatosAho(3)), CDbl(MatDatosAho(4)), CDbl(MatDatosAho(5)), CDbl(MatDatosAho(6)), _
                CDbl(MatDatosAho(7)), CDbl(MatDatosAho(8)), CDbl(MatDatosAho(9)), CDbl(MatDatosAho(10)), _
                CDbl(MatDatosAho(11)), CDbl(MatDatosAho(12)), CDbl(MatDatosAho(13)), psNomCmac, psInstCmac, psCodCMAC, pnMontoITF, , , , _
                CDbl(MatDatosAho(14)), CDbl(MatDatosAho(15)), CDbl(MatDatosAho(16)), CDbl(MatDatosAho(17)), , bAmpliado, pMatCuentaGastoCierre) 'FRHU20140228 RQ14006 Se agrego: CDbl(MatDatosAho(14)),CDbl(MatDatosAho(15)), CDbl(MatDatosAho(16)) y CDbl(MatDatosAho(17))
                'LUCV20180601 Quitó parametro pnMontoPoliza. Según ERS022-2018
        Else
            Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                psCodUser, pdFecSis, 2, MatDatosAho(0), CDbl(MatDatosAho(1)), CDbl(MatDatosAho(2)), _
                 CDbl(MatDatosAho(3)), CDbl(MatDatosAho(4)), CDbl(MatDatosAho(5)), CDbl(MatDatosAho(6)), _
                CDbl(MatDatosAho(7)), CDbl(MatDatosAho(8)), CDbl(MatDatosAho(9)), CDbl(MatDatosAho(10)), _
                CDbl(MatDatosAho(11)), CDbl(MatDatosAho(12)), CDbl(MatDatosAho(13)), psNomCmac, psInstCmac, psCodCMAC, pnMontoITF, , MatDatosAhoEmp, , _
                CDbl(MatDatosAho(14)), CDbl(MatDatosAho(15)), CDbl(MatDatosAho(16)), CDbl(MatDatosAho(17)), , bAmpliado, pMatCuentaGastoCierre) 'FRHU20140228 RQ14006 Se agrego: CDbl(MatDatosAho(14)),CDbl(MatDatosAho(15)), CDbl(MatDatosAho(16)) y CDbl(MatDatosAho(17))
                'LUCV20180601 Quitó parametro pnMontoPoliza. Según ERS022-2018
        End If
    'ALPA 20111209
    ElseIf (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
    'CTI3: ERS082-2018
                Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                psCodUser, pdFecSis, , , , , , , , , , , , , , , , psNomCmac, psInstCmac, psCodCMAC, pnMontoITF, , , , , , , , , bAmpliado)
                'Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                psCodUser, pdFecSis, , , , , , , , , , , , , , , , psNomCmac, psInstCmac, psCodCMAC, pnMontoITF, pnMontoPoliza)
                'LUCV20180601 Quitó parametro pnMontoPoliza. Según ERS022-2018
    '**************
    Else
        'cti3 : ERS082-2018
        Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                psCodUser, pdFecSis, , , , , , , , , , , , , , , , psNomCmac, psInstCmac, psCodCMAC, pnMontoITF, , , , , , , , , bAmpliado)
        'Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                psCodUser, pdFecSis, , , , , , , , , , , , , , , , psNomCmac, psInstCmac, psCodCMAC, pnMontoITF, pnMontoPoliza)
                'LUCV20180601 Quitó parametro pnMontoPoliza. Según ERS022-2018
    End If
    Set oNCredDoc = Nothing

    'If MsgBox("Desea Previsualizar los Documentos de Desembolsos ???", vbQuestion + vbYesNo, "Aviso") = vbYes Then
     Dim lsDoc As String

     lsDoc = ""
     For i = 0 To UBound(Docs) '- 1
        If Docs(i, 0) = "2" Then 'Para Papel Tamaño CARTA
            'ARCV 03-11-2006
                'ARCV 14-02-2007
                'lsDoc = lsDoc & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
                lsDoc = lsDoc & Chr$(27) & Chr$(67) & Chr$(66)   'Longitud de página a 22 líneas'
                'lsDoc = lsDoc & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
                'lsDoc = lsDoc & Chr$(27) + Chr$(107) + Chr$(0)      'Tipo de Letra Sans Serif
                'lsDoc = lsDoc & Chr$(27) + Chr$(18)  ' cancela condensada
                'lsDoc = lsDoc & Chr$(27) + Chr$(72)  ' desactiva negrita
            '----------------
            lsDoc = lsDoc & Docs(i, 1)
        End If
     Next i

     psImpreDocs = lsDoc
     'EnviaPrevio lsDoc, "Documentos de Desembolsos", gnLinPage, False
     'End If

     'nFicSal = FreeFile

'ARCV 07-06-2006 psImpreDocs x psImpreDocsBoleta
      psImpreDocsBoleta = ""
      For i = 0 To UBound(Docs) - 1
'CTI3: FERIMORO : ERS082-2018
       If Docs(i, 0) = "1" And bAmpliado <> 1 Then 'Para Boleta
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(67) & Chr$(22)   'Longitud de página a 22 líneas'
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(107) + Chr$(0)      'Tipo de Letra Sans Serif
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(18)  ' cancela condensada
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(72)  ' desactiva negrita
            psImpreDocsBoleta = psImpreDocsBoleta & Docs(i, 1)
        End If
        If (Docs(i, 0) = "3" Or Docs(i, 0) = "1") And bAmpliado = 1 Then 'Para Boleta
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(67) & Chr$(22)   'Longitud de página a 22 líneas'
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(107) + Chr$(0)      'Tipo de Letra Sans Serif
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(18)  ' cancela condensada
            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(72)  ' desactiva negrita
            psImpreDocsBoleta = psImpreDocsBoleta & Docs(i, 1)
        End If
'        If Docs(i, 0) = "1" Then 'Para Boleta
'            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
'            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(67) & Chr$(22)   'Longitud de página a 22 líneas'
'            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
'            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(107) + Chr$(0)      'Tipo de Letra Sans Serif
'            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(18)  ' cancela condensada
'            psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(72)  ' desactiva negrita
'            psImpreDocsBoleta = psImpreDocsBoleta & Docs(i, 1)
'      End If
      Next i
'      Close #nFicSal
'-------------------------------------------------
    Dim oCap As COMNCaptaGenerales.NCOMCaptaMovimiento
    Set oCap = New COMNCaptaGenerales.NCOMCaptaMovimiento
    
    psImpreBoletaAbono = ""
    psImpreBoletaCancel = ""
    psImpreBoletaGasto = ""
    
    If psctaAho = "" Then psctaAho = MatDatosAho(0)

'cOMENTADO TEMPOTALMENTE
'    If lnValorItfAbono > 0 Then
'        psImpreBoletaAbono = oCap.fgITFImprimeBoleta(psTitNombre, lnValorItfAbono, "ITF ABONO A CUENTA DESEMBOLSO CREDITO", pdFecSis, psLpt, 0, _
'                                        , Mid(psctaAho, 9, 1), Mid(psctaAho, 9, 1), psctaAho, "", False, psNomAge, psCodUser, False, CDbl(MatDatosAho(9)), CDbl(MatDatosAho(9)))
'    End If
'    If lnValorItfGasto > 0 Then
'        psImpreBoletaGasto = oCap.fgITFImprimeBoleta(psTitNombre, lnValorItfGasto, "ITF CARGO CTA GASTOS DE DESEMB. CREDITO", pdFecSis, psLpt, 0, _
'                    , Mid(psctaAho, 9, 1), Mid(psctaAho, 9, 1), psctaAho, "", False, psNomAge, psCodUser, False, CDbl(MatDatosAho(10)), CDbl(MatDatosAho(10)))
'    End If
'    If lnValorItfCancelacion > 0 Then
'        psImpreBoletaCancel = oCap.fgITFImprimeBoleta(psTitNombre, lnValorItfCancelacion, "ITF CARGO CANCELACION CREDITO", pdFecSis, psLpt, 0, _
'                    , Mid(psctaAho, 9, 1), Mid(psctaAho, 9, 1), psctaAho, "", False, psNomAge, psCodUser, False, CDbl(MatDatosAho(12)), CDbl(MatDatosAho(12)))
'    End If

    Set oCap = Nothing

    'Loop While MsgBox("Desea Reimprimir Todos los Documentos del Desembolso", vbInformation + vbYesNo, "Aviso") = vbYes

    'Impresion de Lavado de Dinero

    Dim clsImp As COMNCaptaGenerales.NCOMCaptaImpresion
    Dim sBoletaLavDinero As String

    If psPersLavDinero <> "" Then

    '    Do
            Set clsImp = New COMNCaptaGenerales.NCOMCaptaImpresion

'            If sBoletaLavDinero <> "" Then sBoletaLavDinero = sBoletaLavDinero & Chr$(12)
'
'                sBoletaLavDinero = sBoletaLavDinero & clsImp.ImprimeBoletaLavadoDinero(psNomCmac, psNomAge, pdFecSis, psCtaCod, psTitNombre, psTitDocld, psTitDireccion, _
'                                psReaNombre, psReaDocld, psReaDireccion, psBenNombre, psBenDocld, psBenDireccion, psOperacion, pnMontoDesemb, psLpt, , True, "COLOCACIONES")    'Ahora bCadena=True y no False
'
'                psImpreLavado = sBoletaLavDinero
'
            Set clsImp = Nothing
    '    Loop While MsgBox("Desea Reimprimir Boleta de lavado de dinero?", vbInformation + vbYesNo, "Aviso") = vbYes
    End If

    Exit Function
ErrorCargarDesembolsoCredito:
    Err.Raise Err.Number, "Cargar Desembolso Credito", Err.Description

End Function

Public Function CargaDatosPagoCuotas(ByVal psCtaCod As String, _
                                    ByVal pdFecSis As Date, _
                                    ByVal pbPrepago As Boolean, ByVal psCodAge As String, _
                                    ByRef prsCredVig As ADODB.Recordset, _
                                    ByRef psAgencia As String, _
                                    ByRef pnCalendDinamico As Integer, ByRef pbCalenDinamic As Boolean, _
                                    ByRef pbCalenCuotaLibre As Boolean, ByRef pnMivivienda As Integer, _
                                    ByRef pnCalPago As Integer, _
                                    ByRef pnGastos As Double, ByRef pnMonPago As Double, ByRef pnMora As Double, _
                                    ByRef pnCuotasMora As Integer, _
                                    ByRef pnTotalDeuda As Currency, _
                                    ByRef pnInteresDesagio As Double, _
                                    ByRef pnMonCalDin As Double, _
                                    ByRef psMensaje As String, ByRef psPersCod As String, ByVal psOperacion As String, _
                                    ByRef pbExoneradaLavado As Boolean, ByRef pBrfa As Boolean, ByRef prsPers As ADODB.Recordset, _
                                    ByRef pbOperacionEfectivo As Boolean, ByRef pnMontoLavDinero As Double, ByRef pnTC As Double, _
                                    ByRef pnMontoPago As Double, ByRef pnITF As Double, _
                                    ByRef pvnIntPendientePagado As Double, _
                                    ByRef pnNewSalCap As Double, ByRef pnNewCPend As Integer, _
                                    ByRef pdProxfec As Date, ByRef psEstado As String, _
                                    ByRef pnCuotaPendiente As Integer, ByRef pnMoraCalculada As Double, ByRef pdFechaVencimiento As Date, _
                                    Optional ByRef pnMontoPag2CuotxVenc As Double = 0, Optional ByRef pbCuotasVencidas As Boolean = 0, Optional ByRef pnMontoPendienteIntGracia As Double = 0, Optional ByRef pnMontIntComp As Double = 0, Optional ByRef pnMontGasto As Double = 0, _
                                    Optional ByRef pnHayPerdonCamp As Double = 0, Optional ByRef pnMontoMinPerdon As Double = 0, Optional ByRef pnMontoMaxPerdon As Double = 0, _
                                    Optional ByRef pRsPerdonCampRecup As ADODB.Recordset = Nothing, Optional ByRef pnMontoPagoAlDia As Double = 0, _
                                    Optional ByVal pbExcluyeGastos As Boolean = False)  '04-07-2006: Desde pnTC
                                    '** Juez 20120528 Se agregó pnMontoPag2CuotxVenc y pnCuotasVencidas
'WIOR 20150404 AGREGO pnHayPerdonCamp, pnMontoMinPerdon, pnMontoMaxPerdon
'ByRef pMatGastosCancelacion As Variant,ByRef pnNumGastosCancel As Integer
'ALPA 20150317 Se agregó el campo Byref pnMontoPendienteIntGracia
'Los Gastos se manejaran en el COM (23-03-06)
'WIOR 20150602 AGREGO Optional ByRef pRsPerdonCampRecup As ADODB.Recordset = Nothing
'JUEZ 20150415 Se agregó pnMontoPagoAlDia
'CTI2 20181229 pbExcluyeGastos ADD

Dim oCredito As COMDCredito.DCOMCredito
'Dim R As ADODB.Recordset
'Dim oNegCredito As COMNCredito.NCOMCredito
Dim oGastos As COMNCredito.NCOMGasto
Dim dParam As COMDCredito.DCOMParametro
Dim nAnios As Integer
Dim oAge As COMDConstantes.DCOMAgencias

Dim clsExo As COMNCaptaServicios.NCOMCaptaServicios
Dim objRFA As COMDCredito.DCOMRFA
Dim nMonIntGra As Double 'add by gitu 12-05-2009
Dim oPersona As COMDCaptaGenerales.DCOMCaptaGenerales

Dim clsLav As COMNCaptaGenerales.NCOMCaptaDefinicion

'ARCV 28-02-2007
Dim oBase As COMDCredito.DCOMCredActBD
Dim RGas As ADODB.Recordset
Set oBase = New COMDCredito.DCOMCredActBD
'---------
'WIOR 20150602 ***
Dim i, J As Integer
Dim RsPerdonCampRecupDet As ADODB.Recordset
'WIOR FIN ********
Dim pnMontoInteresGraCuota As Double 'ALPA 20150318************
Dim bMIVIVIENDAAnt As Boolean 'WIOR 20160107

    On Error GoTo ErrorCargaDatosPagoCuotas
    
    Set oCredito = New COMDCredito.DCOMCredito
    Set prsCredVig = oCredito.RecuperaDatosCreditoVigente(psCtaCod, pdFecSis)
    Set oCredito = Nothing
    Set dParam = New COMDCredito.DCOMParametro
    nAnios = dParam.RecuperaValorParametro(3056) '3053 '07-06
    Set dParam = Nothing
    
    If Not prsCredVig.BOF And Not prsCredVig.EOF Then
        'ALPA 20100607 B2**************************************************
        'If Mid(psCtaCod, 4, 2) <> psCodAge Then
        If prsCredVig!cAgeCodAct <> psCodAge Then
            Set oAge = New COMDConstantes.DCOMAgencias
            'psAgencia = oAge.NombreAgencia(Mid(psCtaCod, 4, 2))
            psAgencia = oAge.NombreAgencia(prsCredVig!cAgeCodAct)
            Set oAge = Nothing
        Else
            psAgencia = ""
        End If
        '******************************************************************
        'WIOR 20150404 *******************
        Set oCredito = New COMDCredito.DCOMCredito
        Call oCredito.ObtenerPerdonMoraCampRecupXCta(psCtaCod, pdFecSis, pnHayPerdonCamp, pnMontoMinPerdon, pnMontoMaxPerdon)
        'WIOR FIN ************************
        'Set oNegCredito = New COMNCredito.NCOMCredito
        
        ' CMACICA_CSTS - 08/11/2003 -------------------------------------------------------------------
        pnCalendDinamico = prsCredVig!nCalendDinamico
        ' ---------------------------------------------------------------------------------------------
        
        If IsNull(prsCredVig!nCalendDinamico) Then
            pbCalenDinamic = False
        Else
            If prsCredVig!nCalendDinamico = 1 Then
                pbCalenDinamic = True
            Else
                pbCalenDinamic = False
            End If
        End If
        If prsCredVig!nColocCalendCod = gColocCalendCodCL Then
            pbCalenCuotaLibre = True
        Else
            pbCalenCuotaLibre = False
        End If
        pnMivivienda = prsCredVig!bMiVivienda
        bMIVIVIENDAAnt = EsCredMIVIVENDA(prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod) 'WIOR 20160107
        
        'pnCalPago = IIf(IsNull(prsCredVig!nCalPago), 0, prsCredVig!nCalPago)
        pnCalPago = 1
'       Comentado por ALPA20130727
'        If pbPrepago = 1 Then
'            If prsCredVig!nPlazoTranscurrido > nAnios Then 'si es mayor a 10 años
'               pnCalPago = 1 'buen pagador
'            Else
'                pnCalPago = 0 'Mal pagador
'            End If
'        End If
        
        'If pnMivivienda Then 'WIOR 20160107 - COMENTO
        If bMIVIVIENDAAnt Then 'WIOR 20160107
            pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
            pMatCalend_2 = pMatCalend
            pMatCalendNormalT1 = pMatCalend
            pMatCalendParalelo = RecuperaMatrizCalendarioPendiente(psCtaCod, True)
            '*******************************************************************************
            'Verificar si es MalPagador o Buen Pagador y Unir o mantener un solo Calendario
            '*******************************************************************************
            'pMatCalendMiVivResult = UnirMatricesMiViviendaAmortizacion(pMatCalend, pMatCalendParalelo)
            'ALPA20130727
            '07-06-2006
            'If pnCalPago = 0 Then
                pMatCalendMiVivResult = UnirMatricesMiViviendaAmortizacion(pMatCalend, pMatCalendParalelo)
                 'ALPA20130730
                'pMatCalend = pMatCalendMiVivResult
                pMatCalendMiViviSinMostrar = pMatCalendMiVivResult
            'End If
            '*************
            
'            pMatCalend = pMatCalendMiVivResult
            pMatCalendTmp = pMatCalend
            pMatCalendDistribuido = CrearMatrizparaAmortizacion(pMatCalend)
            pMatCalendDistribuidoMiVivi = CrearMatrizparaAmortizacion(pMatCalendMiViviSinMostrar)
            'pMatCalendNormalT1 = pMatCalendMiViviSinMostrar 'ALPA20130731
        Else
            pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod, , , pbExcluyeGastos)
            pMatCalendTmp = pMatCalend
            pMatCalendDistribuido = CrearMatrizparaAmortizacion(pMatCalend)
        End If
        
        'WIOR 20150602 ***
        Set pRsPerdonCampRecup = oCredito.RecuperarCampanaRecupXCredEstadoFecha(psCtaCod, 1, pdFecSis)
        If Not (pRsPerdonCampRecup.EOF And pRsPerdonCampRecup.BOF) Then
            If CInt(pRsPerdonCampRecup!nEstado) = 1 Then
                Set RsPerdonCampRecupDet = oCredito.RecuperarCampanaRecupDetXID(CLng(pRsPerdonCampRecup!nID))
                For i = 0 To RsPerdonCampRecupDet.RecordCount - 1
                    For J = 0 To UBound(pMatCalend) - 1
                        If CInt(RsPerdonCampRecupDet!nCuota) = CInt(pMatCalend(J, 1)) Then
                            pMatCalend(J, 3) = CDbl(pMatCalend(J, 3)) - CDbl(RsPerdonCampRecupDet!nCapPerd) 'Capital
                            pMatCalend(J, 4) = CDbl(pMatCalend(J, 4)) - CDbl(RsPerdonCampRecupDet!nIntPerd) 'Int. Compensatorio
                            pMatCalend(J, 6) = CDbl(pMatCalend(J, 6)) - CDbl(RsPerdonCampRecupDet!nMoraPerd) 'Mora
                            pMatCalend(J, 9) = CDbl(pMatCalend(J, 9)) - CDbl(RsPerdonCampRecupDet!nGastoPerd) 'Gastos
                            
                            pMatCalend(J, 11) = CDbl(pMatCalend(J, 11)) - CDbl(RsPerdonCampRecupDet!nIcvPerd) 'Icv campaña recuperaciones JOEP20210730
                            Exit For
                        End If
                    Next J
                    RsPerdonCampRecupDet.MoveNext
                Next i
                pMatCalendTmp = pMatCalend
                Set RsPerdonCampRecupDet = Nothing
            End If
        End If
        'WIOR FIN ********
        
        psPersCod = prsCredVig!cPersCod
        'ARCV 28-02-2007
        'pnGastos = Format(MatrizGastosVencidos(pMatCalend, pdFecSis), "#0.00")
        'Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")
        'Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')") 'JUEZ 20140404 / CTI2 20190306 Comentado
        Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha2('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & IIf(pbExcluyeGastos, "',1)", "',0)")) 'CTI2 20190306 Filtro de gasto casillero
        pnGastos = RGas!nGasto
        
        'If pnMivivienda Then 'WIOR 20160107 - COMENTO
        If bMIVIVIENDAAnt Then 'WIOR 20160107
            pnMonPago = MatrizMontoAPagar(pMatCalend, pdFecSis, nMonIntGra, pbCuotasVencidas) '** Juez 20120528 Se agregó pnCuotasVencidas
            'pnMonPago = MatrizMontoAPagarCuotaPendiente(pMatCalend, pdFecSis)
            'ALPA20130731*Se*llama nuevamente a la funcion matrizMontoAPagar2CuotasxVencer******************************
            pnMontoPag2CuotxVenc = MatrizMontoAPagar2CuotasxVenc(pMatCalend, pdFecSis, nMonIntGra) '** Juez 20120528
            '***********************************************************************************************************
        Else
            pnMonPago = MatrizMontoAPagar(pMatCalend, pdFecSis, nMonIntGra, pbCuotasVencidas, pnMontIntComp, pnMontGasto) '** Juez 20120528 Se agregó pnCuotasVencidas
            pnMontoInteresGraCuota = nMonIntGra
            pnMontoPag2CuotxVenc = MatrizMontoAPagar2CuotasxVenc(pMatCalend, pdFecSis, nMonIntGra) '** Juez 20120528
        End If

        pnMora = Format(MatrizMoraTotal(pMatCalend, pdFecSis), "#0.00")
        
        pnCuotasMora = MatrizCuotasEnMora(pMatCalend, pdFecSis)
        
        'Deuda a la Fecha
        Dim nInteresFecha As Currency
        Dim nInterFechaGra As Currency
        Dim nMontoFecha As Currency
        nInteresFecha = MatrizInteresGastosAFecha(psCtaCod, pMatCalend, pdFecSis, True, pbCalenDinamic)
        nInterFechaGra = MatrizInteresGraAFecha(psCtaCod, pMatCalend, pdFecSis, True, pbCalenDinamic)
        'ALPA 20150317***********************************************************************
        pnMontoPendienteIntGracia = (nInterFechaGra) '- pnMontoInteresGraCuota
        pnMontGasto = CDbl(MatrizGastosFecha(psCtaCod, pMatCalend))
        pnMontIntComp = IIf(nInteresFecha - pnMontGasto > 0, nInteresFecha - pnMontGasto, 0)
        pnMontGasto = pnGastos
        If pnMontoPendienteIntGracia < 0 Then
            pnMontoPendienteIntGracia = 0
        End If
        '***********************************************************************************
        nMontoFecha = MatrizCapitalAFecha(psCtaCod, pMatCalend)
        
        'mody by gitu 20-06-2009
        pnTotalDeuda = Format(nInteresFecha + nInterFechaGra + nMontoFecha, "#0.00")
        
        'ARCV 28-02-2007    (quitar los Gastos)
        pnTotalDeuda = pnTotalDeuda - CDbl(MatrizGastosFecha(psCtaCod, pMatCalend))
        '--------
        
        pnInteresDesagio = 0
        If nInteresFecha < 0 Then
            'pnInteresDesagio = Abs(nInteresFecha)
            pnInteresDesagio = 0
            nInteresFecha = 0
        End If
        
        'ARCV 28-02-2007
        pnTotalDeuda = Format(pnTotalDeuda + RGas!nGasto, "#0.00")
        '--------
        'pnPagoRefinanc = Format(((nInteresFecha + nInterFechaGra) - CDbl(MatrizGastosFecha(psCtaCod, pMatCalend))) + RGas!nGasto, "#0.00") 'JUEZ 20140617
        
        'Se modifico (23-03-06) para manejar los Gastos en el COM
        'ARCV 13-02-2007
        'Dim MatGastosCancelacion As Variant 'Se cambio por variables a nivel de COM
        'Dim nNumGastosCancel As Integer
        '--------
        
        Set oGastos = New COMNCredito.NCOMGasto
        'ALPA 20100607*********************************************************
        'pMatGastosCancelacion = oGastos.GeneraCalendarioGastos(Array(0), Array(0), pnNumGastosCancel, pdFecSis, psCtaCod, 1, "CA", , , pnTotalDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , prsCredVig!nDiasAtraso)
        pMatGastosCancelacion = oGastos.GeneraCalendarioGastos(Array(0), Array(0), pnNumGastosCancel, pdFecSis, psCtaCod, 1, "CA", , , pnTotalDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , prsCredVig!nDiasAtraso, , , , , prsCredVig!cAgeCodAct, prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod)
        '**********************************************************************
        pnTotalDeuda = Format(pnTotalDeuda + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("CA", "PA", "")), "#0.00")
        'ARCV 28-02-2007
        'pnGastos = Format(MatrizGastosVencidos(pMatCalend, pdFecSis) + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", IIf(pbPrepago = 1, "PP", ""), "")), "#0.00")
        pnGastos = Format(RGas!nGasto + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", IIf(pbPrepago = 1, "PP", ""), "")), "#0.00")
        pnMonPago = Format(pnMonPago + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", IIf(pbPrepago = 1, "PP", ""), "")), "#0.00")
        Set oGastos = Nothing
        '**************************************
        'Para Generar el calendario Dinamico
        'Si es mivivienda
        'pnMonCalDin = Format(MatrizMontoCalendDinamico(psCtaCod, pMatCalend, pdFecSis, pnMivivienda) + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", "PP", "")), "#0.00") 'WIOR 20160107 - COMENTO
        pnMonCalDin = Format(MatrizMontoCalendDinamico(psCtaCod, pMatCalend, pdFecSis, IIf(bMIVIVIENDAAnt = True, 1, 0)) + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", "PP", "")), "#0.00") 'WIOR 20160107
        
        
        Set oCredito = New COMDCredito.DCOMCredito
        If oCredito.NumerosCredEnJudicial(psPersCod) > 0 Then
            psMensaje = "Cliente tiene Creditos en Judicial"
        End If
        Set oCredito = Nothing
        
    '**** Exonerada de Lavado de Dinero
    Set clsExo = New COMNCaptaServicios.NCOMCaptaServicios
    
    pbExoneradaLavado = clsExo.EsPersonaExoneradaLavadoDinero(psPersCod)

    Set clsExo = Nothing

    Set objRFA = New COMDCredito.DCOMRFA
    pBrfa = objRFA.VerificaCreditoRFA(psCtaCod)
    Set objRFA = Nothing
    
    Set oPersona = New COMDCaptaGenerales.DCOMCaptaGenerales

    Set prsPers = oPersona.GetDatosPersona(psPersCod)
    
    Set oPersona = Nothing

    
''''' SE AGREGO PARA EL LAVADO DE DINERO '''''''''''''''''
    Set clsLav = New COMNCaptaGenerales.NCOMCaptaDefinicion

    pbOperacionEfectivo = clsLav.EsOperacionEfectivo(Trim(psOperacion))
    pnMontoLavDinero = clsLav.GetCapParametro(gMonOpeLavDineroME)
    
    If Mid(psCtaCod, 9, 1) = gMonedaNacional Then
        Dim clsTC As COMDConstSistema.NCOMTipoCambio
        Set clsTC = New COMDConstSistema.NCOMTipoCambio
        pnTC = clsTC.EmiteTipoCambio(pdFecSis, TCFijoDia)
        Set clsTC = Nothing
    Else
        pnTC = 1
    End If
    
    Set clsLav = Nothing
    
    'ARCV 04-07-2006
    pnCuotaPendiente = pMatCalend(0, 1)
    pnMoraCalculada = Format(CDbl(pMatCalend(0, 6)), "#0.00")
    pdFechaVencimiento = Format(CDate(pMatCalend(0, 0)), "dd/mm/yyyy")
    '----------------

    'RIRO 20210515 ***************
    nICVCuota = CDbl(pMatCalend(0, 11))
    nICVTotal = MatrizIntCompVencVencido(pMatCalend, pdFecSis)
    'RIRO 20210515 ***************
    
    'ARCV 26-06-2006
    'Call ActualizaMontoPago(pnMonPago, pnTotalDeuda, psCtaCod, pdFecSis, Trim(prsCredVig!cMetLiquidacion), IIf(IsNull(prsCredVig!nIntPend), 0, prsCredVig!nIntPend), pvnIntPendientePagado, pbCalenCuotaLibre, pbCalenDinamic, pbPrepago, pnMontoPago, _
                pnMonCalDin, psMensaje, pnITF, pnInteresDesagio, pnNewSalCap, pnNewCPend, pdProxfec, psEstado, nMonIntGra, prsCredVig!cAgeCodAct, prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod, pnMivivienda) 'WIOR 20160107- COMENTO
    '-----------------------
    
    Call ActualizaMontoPago(pnMonPago, pnTotalDeuda, psCtaCod, pdFecSis, Trim(prsCredVig!cMetLiquidacion), IIf(IsNull(prsCredVig!nIntPend), 0, prsCredVig!nIntPend), pvnIntPendientePagado, pbCalenCuotaLibre, pbCalenDinamic, pbPrepago, pnMontoPago, _
                pnMonCalDin, psMensaje, pnITF, pnInteresDesagio, pnNewSalCap, pnNewCPend, pdProxfec, psEstado, nMonIntGra, prsCredVig!cAgeCodAct, prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod, IIf(bMIVIVIENDAAnt = True, 1, 0), , , , , , , , pbExcluyeGastos) 'WIOR 20160107
                

    pnMontoPagoAlDia = MatrizMontoAPagarAlDia(pMatCalend, pdProxfec) 'JUEZ 20150415

    Set oBase = Nothing
    Set RGas = Nothing
    
End If
    
    Exit Function

ErrorCargaDatosPagoCuotas:
    Err.Raise Err.Number, "Error", Err.Description

End Function

'ARCV
'ByRef pMatCalend As Variant, _
'ByRef pMatCalendDistribuido As Variant, _
                                    ByRef pMatCalendTmp As Variant,

Public Function ActualizaMontoPago(ByVal pnMontoAPagar As Double, ByVal pnTotalDeuda As Double, _
                                    ByVal psCtaCod As String, ByVal pdFecSis As Date, _
                                    ByVal psMetLiquidacion As String, _
                                    ByVal pvnIntPendiente As Double, ByVal pvnIntPendientePagado As Double, _
                                    ByVal pbCalenCuotaLibre As Boolean, ByVal pbCalenDinamic As Boolean, ByVal pbPrepago As Integer, _
                                    ByRef pnMontoPago As Double, ByVal pnMonCalDin As Double, _
                                    ByRef psMensaje As String, ByRef pnITF As Double, _
                                    ByRef pnInteresDesagio As Double, _
                                    ByRef pnNewSalCap As Double, ByRef pnNewCPend As Integer, _
                                    ByRef pdProxfec As Date, ByRef psEstado As String, Optional ByVal pnMonIntGra As Double, _
                                    Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", Optional ByVal psTpoCredCod As String = "", Optional ByVal pnMivivienda As Integer, Optional pnCuota As Integer = 0, Optional pnMontoPendienteIntGracia As Double = 0#, Optional pnPreParaAmpliacion As Integer = 0, Optional ByRef pnMontIntComp As Double = 0, Optional ByRef pnMontGasto As Double = 0, _
                                    Optional ByVal pbLiquidaCred As Boolean = False, Optional ByRef psAmpl As Integer = -1, _
                                    Optional ByVal pbExcluyeGastos As Boolean = False, Optional ByVal pbLiqSegDesg As Boolean = False) As Boolean 'EAAS20180910 psAmpl 'GEMO20200801 pbLiqSegDesg
'pbExcluyeGastos CTI2 20190306
'Los Gastos se manejan en el COM
'ByRef pnNumGastosFinal As Integer,ByRef pMatGastosFinal As Variant (23-03-06)
'ByVal pMatGastosCancelacion As Variant, ByVal pnNumGastosCancel As Integer
'WIOR 20160415 AGREGO pbLiquidaCred As Boolean = False

Dim oGastos As COMNCredito.NCOMGasto
Dim nMontoGastoGen As Double
Dim oDCredito As COMDCredito.DCOMCredito
Dim nInteresFecha As Double
Dim AcumMontoAPagar As Double
Dim i As Integer
Dim nInterFechaGra As Double 'Add by GITU 07-05-2009
Dim nMonIntGra As Double
Dim oITF As COMDConstSistema.FCOMITF
Dim nMontoPagoCuotaMV As Currency '20130801
Dim bCancAnticipada As Boolean 'JUEZ 20140404
Dim oDCred As COMDCredito.DCOMCredActBD 'JUEZ 20140404
Dim bAmpliado As Boolean 'EAAS20180910
Dim rsAmpliado As ADODB.Recordset  'EAAS20180910
Dim nAplicaValidacionCanSegDesg As Integer 'GEMO20200801

bAmpliado = EsCredParaAmpliado(psCtaCod)
On Error GoTo ErrorActualizaMontoPago
 
ActualizaMontoPago = True
    'EAAS20180910
    If (pnMontoAPagar = 0 And bAmpliado = True) Then
            If MsgBox("Monto de gastos del credito igual a cero,Se va a Efectuar la preparacion de ampliacion del Credito, Desea Continuar ?", vbInformation + vbYesNo, "Aviso") = vbNo Then Exit Function
            Dim oDCreditoAm As COMDCredito.DCOMCredito
            Set oDCreditoAm = New COMDCredito.DCOMCredito
            Set rsAmpliado = oDCreditoAm.PreparaAmpliacionGastosCero(psCtaCod)
            psAmpl = 1
    Else
            If pnMontoAPagar = 0 Then
            psMensaje = "Monto de Pago Debe ser mayor que Cero"
            ActualizaMontoPago = False
            Exit Function
            End If
    End If
    'EAAS20180910
    
     'GEMO20200801
    Dim oGen As COMDConstSistema.DCOMGeneral
    Set oGen = New COMDConstSistema.DCOMGeneral
    nAplicaValidacionCanSegDesg = oGen.LeeConstSistema(740)
    Set oGen = Nothing

 If pbLiqSegDesg = False Or (pbLiqSegDesg = True And nAplicaValidacionCanSegDesg = 1) Then   'GEMO20200801
    If pnMontoAPagar > pnTotalDeuda Then
        Set oDCredito = New COMDCredito.DCOMCredito
        If oDCredito.ObtieneMonto_Validate(psCtaCod, pnMontoAPagar) = True Then
            psMensaje = "Monto de Pago es mayor que la deuda?"
            ActualizaMontoPago = False
            Exit Function
        Else
            psMensaje = "Monto de pago sobrepasa el total"
            ActualizaMontoPago = False
            Exit Function
        End If
        Set oDCredito = Nothing
    End If
 End If
 
    Set oITF = New COMDConstSistema.FCOMITF
    oITF.fgITFParametros
    'ALPA 20100621
    'If Mid(psCtaCod, 6, 3) = "423" Then
    If psTpoProdCod = "801" Then
    
        pnITF = 0
    Else
        Dim lnValor As Double
        If pnPreParaAmpliacion = 1 Then
            
            lnValor = (pnMontoAPagar + pnMontoPendienteIntGracia + pnMontIntComp + pnMontGasto) * oITF.gnITFPorcent
        Else
            lnValor = pnMontoAPagar * oITF.gnITFPorcent
        End If
        lnValor = oITF.CortaDosITF(lnValor)
        pnITF = lnValor 'CalculoSinRedondeo(pnMontoAPagar)
    End If
    If pnPreParaAmpliacion = 1 Then
        pnMontoPago = oITF.fgITFCalculaImpuestoNOIncluido(pnMontoAPagar + pnMontoPendienteIntGracia + pnMontIntComp + pnMontGasto) - IIf(pnPreParaAmpliacion = 1, pnMontoPendienteIntGracia + pnMontIntComp + pnMontGasto, 0)
    Else
        pnMontoPago = oITF.fgITFCalculaImpuestoNOIncluido(pnMontoAPagar)
    End If
    Set oITF = Nothing
    If pnPreParaAmpliacion = 1 Then
        pnMontoPago = pnMontoAPagar '- IIf(pnPreParaAmpliacion = 1, pnMontoPendienteIntGracia, 0)
    Else
        pnMontoPago = pnMontoAPagar
    End If
    If pnMivivienda Then
        nMontoPagoCuotaMV = ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(0, 1)))
    End If
        
    nInteresFecha = MatrizInteresGastosAFecha(psCtaCod, pMatCalend, pdFecSis, True)
    'Se agrego una variable para separar el interes de gracia del interes compensatorio
    nInterFechaGra = MatrizInteresGraAFecha(psCtaCod, pMatCalend, pdFecSis, True)
    pnInteresDesagio = 0
    If nInteresFecha + nInterFechaGra < 0 Then
        pnInteresDesagio = Abs(nInteresFecha + nInterFechaGra)
    End If
        
    If pbCalenCuotaLibre Then
        pnInteresDesagio = 0
        pMatCalendDistribuido = MatrizDistribuirCalendCuotaLibre(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, pvnIntPendiente, pvnIntPendientePagado)
    End If
        
    'Se modifico 23-03 (Gastos en COM)
    Dim nNumGastosFinal As Integer
    Dim MatGastosFinal As Variant
    
    If (pbCalenDinamic Or pbPrepago = 1) And (pnMontoPago < pnTotalDeuda) And pnPreParaAmpliacion = 0 Then
        pnInteresDesagio = 0
        If pnMontoPago > pnMonCalDin Then
            'Genera Gastos por PrePago
            Set oGastos = New COMNCredito.NCOMGasto
            'ALPA 20100607 B2***********************************************************************
            'MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "PP", , , pnMontoPago, pnMontoPago - pnMonCalDin, MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido))
            MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "PP", , , pnMontoPago, pnMontoPago - pnMonCalDin, MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , , , , , , psAgeCodAct, psTpoProdCod, psTpoCredCod)
            '***************************************************************************************
            'obtener el total del gastos MatGastosPrepago
            nMontoGastoGen = MontoTotalGastosGenerado(MatGastosFinal, nNumGastosFinal, Array("PP", "PA", ""))
            pMatCalend = pMatCalendTmp
            If Not pbLiquidaCred Then 'WIOR 20160415
                pMatCalend(0, 9) = Format(CDbl(pMatCalend(0, 9)) + nMontoGastoGen, "#0.00")
            End If 'WIOR 20160415
            Set oGastos = Nothing
            '**************************************
            'Distribuye Monto
            pMatCalendDistribuido = MatrizDistribuirCalendDinamico(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis)
            'ALPA20130731
            If pnMivivienda Then
                nMontoPagoCuotaMV = 0
                For i = 0 To UBound(pMatCalendDistribuido) - 1
                    If CInt(pMatCalendDistribuido(i, 2)) = 1 Then
                        nMontoPagoCuotaMV = nMontoPagoCuotaMV + ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(i, 1)))
                    End If
                Next i
                pMatCalendDistribuidoMiVivi = MatrizDistribuirCalendDinamico(psCtaCod, pMatCalendParalelo, nMontoPagoCuotaMV, psMetLiquidacion, pdFecSis)
            End If
        Else
            Set oGastos = New COMNCredito.NCOMGasto
            'ALPA 20100607 B2************************************************************************
            'MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "PA", , , pnMontoPago, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido))
            MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "PA", , , pnMontoPago, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , , , , , , psAgeCodAct, psTpoProdCod, psTpoCredCod)
            '****************************************************************************************
            'obtener el total del gastos MatGastosPrepago
            nMontoGastoGen = MontoTotalGastosGenerado(MatGastosFinal, nNumGastosFinal, Array("PA", "", ""))
            pMatCalend = pMatCalendTmp
            
            If Not pbLiquidaCred Then 'WIOR 20160415
                pMatCalend(0, 9) = Format(CDbl(pMatCalend(0, 9)) + nMontoGastoGen, "#0.00")
            End If 'WIOR 20160415
            
            Set oGastos = Nothing
                
            'Distribuye Monto
            pMatCalendDistribuido = MatrizDistribuirMonto(pMatCalend, pnMontoPago, psMetLiquidacion, , nInterFechaGra)
            'ALPA20130731
            If pnMivivienda Then
                nMontoPagoCuotaMV = 0
                For i = 0 To UBound(pMatCalendDistribuido) - 1
                    If CInt(pMatCalendDistribuido(i, 2)) = 1 Then
                        nMontoPagoCuotaMV = nMontoPagoCuotaMV + ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(i, 1)))
                    End If
                Next i
                pMatCalendDistribuidoMiVivi = MatrizDistribuirMonto(pMatCalendParalelo, nMontoPagoCuotaMV, psMetLiquidacion, , nInterFechaGra)
            End If
        End If
    Else
        'Si es Pago Normal
        If pnMontoPago <> pnTotalDeuda And pnPreParaAmpliacion = 0 Then
            pnInteresDesagio = 0
            Set oGastos = New COMNCredito.NCOMGasto
            'ALPA 20100607 B2************************************************************************
            'MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "PA", , , pnMontoPago, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido))
            MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "PA", , , pnMontoPago, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , , , , , , psAgeCodAct, psTpoProdCod, psTpoCredCod)
            '****************************************************************************************
            'obtener el total del gastos
            nMontoGastoGen = MontoTotalGastosGenerado(MatGastosFinal, nNumGastosFinal, Array("PA", "", ""))
            pMatCalend = pMatCalendTmp
            
            If Not pbLiquidaCred Then 'WIOR 20160415
                pMatCalend(0, 9) = Format(CDbl(pMatCalend(0, 9)) + nMontoGastoGen, "#0.00")
            End If 'WIOR 20160415
            Set oGastos = Nothing

            'Distribuye Monto
                
            If Mid(psMetLiquidacion, 3, 1) = "i" Or Mid(psMetLiquidacion, 3, 1) = "Y" Then
                'JUEZ 20140617 **************************************************
                For i = 0 To UBound(pMatCalend) - 1
                    If pMatCalend(i, 0) >= pdFecSis Then
                        Set oDCred = New COMDCredito.DCOMCredActBD
                        If Not pbLiquidaCred Then 'WIOR 20160415
                            pMatCalend(i, 9) = oDCred.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCuotaPendAlDiaCredVencido('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")!nGasto
                        End If 'WIOR 20160415
                        Set oDCred = Nothing
                        Exit For
                    End If
                Next i
                'END JUEZ *******************************************************
                If pnMontoAPagar >= pnTotalDeuda Then
                    'pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, True)
                    pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, True, , , , True) 'JUEZ 20140617
                    'ALPA20130731
                    If pnMivivienda Then
                        nMontoPagoCuotaMV = 0
                        For i = 0 To UBound(pMatCalendDistribuido) - 1
                            If CInt(pMatCalendDistribuido(i, 2)) = 1 Then
                                nMontoPagoCuotaMV = nMontoPagoCuotaMV + ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(i, 1)))
                            End If
                        Next i
                        pMatCalendDistribuidoMiVivi = MatrizDistribuirCancelacion(psCtaCod, pMatCalendParalelo, nMontoPagoCuotaMV, psMetLiquidacion, pdFecSis, True)
                    End If
                Else
                    'pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, False, , False)
                    pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, False, , False, , True) 'JUEZ 20140617
                    'ALPA20130731**********************************************
                    If pnMivivienda Then
                        nMontoPagoCuotaMV = 0
                        For i = 0 To UBound(pMatCalendDistribuido) - 1
                            If CInt(pMatCalendDistribuido(i, 2)) = 1 Then
                                nMontoPagoCuotaMV = nMontoPagoCuotaMV + ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(i, 1)))
                            End If
                        Next i
                        pMatCalendDistribuidoMiVivi = MatrizDistribuirCancelacion(psCtaCod, pMatCalendParalelo, nMontoPagoCuotaMV, psMetLiquidacion, pdFecSis, False, , False)
                    End If
                    '**********************************************************
                End If
            Else
'                If pnMontoPago < pnMonIntGra Then
'                    pnMontoPago = pnMontoPago
'                Else
'                    pnMontoPago = pnMontoPago - pnMonIntGra
'                End If
                'Modify by Gitu 1-05-2009 se agrego el parametro de interes de gracia.
                pMatCalendDistribuido = MatrizDistribuirMonto(pMatCalend, pnMontoPago, psMetLiquidacion, , pnMonIntGra) ', pnMontoPendienteIntGracia, pnPreParaAmpliacion, pnMontIntComp, pnMontGasto
                'ALPA20130731**********************************************
                If pnMivivienda Then
                    nMontoPagoCuotaMV = 0
                    For i = 0 To UBound(pMatCalendDistribuido) - 1
                        If CInt(pMatCalendDistribuido(i, 2)) = 1 Then
                            nMontoPagoCuotaMV = nMontoPagoCuotaMV + ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(i, 1)))
                        End If
                    Next i
                    pMatCalendDistribuidoMiVivi = MatrizDistribuirMonto(pMatCalendParalelo, nMontoPagoCuotaMV, psMetLiquidacion, , pnMonIntGra)
                End If
            End If
        Else 'Si es una Cancelacion del Credito
            'Obtener los Gastos Generados y Agregarlos al Credito
            
            'YA NO LO DEVOLVEMOS
            'MatGastosFinal = pMatGastosCancelacion
            'nNumGastosFinal = pnNumGastosCancel
            
            'ARCV 13-02-2007
            'nMontoGastoGen = MontoTotalGastosGenerado(MatGastosFinal, nNumGastosFinal, Array("PA", "CA", ""))
            nMontoGastoGen = MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", "CA", ""))
            '-------
            
            pMatCalend = pMatCalendTmp
            'ARCV 14-04-2007 : Cobrar los Gastos vencidos mas el de la Proxima cuota
            'ARCV 01-03-2007 : Cobrar solo los Gastos vencidos, inclusive en la Cuota Actual
            'If CDate(pMatCalend(0, 0)) > pdFecSis Then
            '    pMatCalend(0, 9) = 0
            'End If
            '----------
            If Not pbLiquidaCred Then 'WIOR 20160415
                pMatCalend(0, 9) = Format(CDbl(pMatCalend(0, 9)) + nMontoGastoGen, "#0.00")
            End If 'WIOR 20160415
            Set oGastos = Nothing
            
            'JUEZ 20140404 Verificar si es cancelación anticipada ************
            Set oDCredito = New COMDCredito.DCOMCredito
            bCancAnticipada = oDCredito.VerificaSiEsCancelacionAnticipada(psCtaCod, pdFecSis)
            Set oDCredito = Nothing
            
            If bCancAnticipada Then
                If pMatCalend(0, 0) >= pdFecSis Then
                    'JUEZ 20140730 *****************************************
                    Dim rsGastos As ADODB.Recordset, nGastosPend As Double
                    Set oDCred = New COMDCredito.DCOMCredActBD
                    Set rsGastos = oDCred.CargaRecordSet("exec stp_sel_RecuperaCalendarioGastosPendiente '" & psCtaCod & IIf(pbExcluyeGastos, "',1", "',0"))
                    'pMatCalend(0, 9) = oDCred.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")!nGasto CTI2 Comentado
                    nGastosPend = oDCred.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha2('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & IIf(pbExcluyeGastos, "',1)", "',0)"))!nGasto
                    
                    Set oDCred = Nothing
                    Do While Not rsGastos.EOF
                        If rsGastos!cAplicaProceso = "MA" Then
                            For i = 0 To UBound(pMatCalend) - 1
                                If pMatCalend(i, 1) = CStr(rsGastos!nCuota) Then
                                    If Not pbLiquidaCred Then 'WIOR 20160415
                                        pMatCalend(i, 9) = rsGastos!nMonto
                                    End If  'WIOR 20160415
                                    nGastosPend = nGastosPend - rsGastos!nMonto
                                    Exit For
                                End If
                            Next i
                        End If
                        rsGastos.MoveNext
                    Loop
                    
                    If Not pbLiquidaCred Then 'WIOR 20160415
                        pMatCalend(0, 9) = pMatCalend(0, 9) + nGastosPend
                    End If 'WIOR 20160415
                    'END JUEZ **********************************************
                Else
                    For i = 0 To UBound(pMatCalend) - 1
                        If pMatCalend(i, 0) >= pdFecSis Then
                            Set oDCred = New COMDCredito.DCOMCredActBD
                            If Not pbLiquidaCred Then 'WIOR 20160415
                                pMatCalend(i, 9) = oDCred.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCuotaPendAlDiaCredVencido('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")!nGasto
                            End If 'WIOR 20160415
                            Set oDCred = Nothing
                            Exit For
                        End If
                    Next i
                End If
            End If
            'END JUEZ ********************************************************
            
            'Distribuye Monto
            'pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, True, pbCalenDinamic)
            pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, psMetLiquidacion, pdFecSis, True, pbCalenDinamic, , , bCancAnticipada, pbExcluyeGastos) 'JUEZ 20140404
            'ALPA20130731**********************************************
            If pnMivivienda Then
                nMontoPagoCuotaMV = 0
                For i = 0 To UBound(pMatCalendDistribuido) - 1
                    If CInt(pMatCalendDistribuido(i, 2)) = 1 Then
                        nMontoPagoCuotaMV = nMontoPagoCuotaMV + ObtenerSumaCuotaCalendarioMiVivienda(psCtaCod, CInt(pMatCalend(i, 1)))
                    End If
                Next i
                'pMatCalendDistribuidoMiVivi = MatrizDistribuirCancelacion(psCtaCod, pMatCalendMiViviSinMostrar, pnMontoPago, psMetLiquidacion, pdFecSis, True, pbCalenDinamic)
                pMatCalendDistribuidoMiVivi = MatrizDistribuirCancelacion(psCtaCod, pMatCalendMiViviSinMostrar, pnMontoPago, psMetLiquidacion, pdFecSis, True, pbCalenDinamic, , , bCancAnticipada) 'JUEZ 20140404
            End If
        End If
    End If
        
    pnNewSalCap = MatrizSaldoCapital(pMatCalend, pMatCalendDistribuido)
    pnNewCPend = MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido)
    pdProxfec = Format(MatrizFechaCuotaPendiente(pMatCalend, pMatCalendDistribuido), "dd/mm/yyyy")
    psEstado = IIf(MatrizEstadoCalendario(pMatCalendDistribuido) = gColocCalendEstadoPagado, "CANCELADO", "VIGENTE")
    If psEstado = "CANCELADO" Then
        pdProxfec = 0   ' Se pone 0 en label=""
    End If
    
    Exit Function
ErrorActualizaMontoPago:
    Err.Raise Err.Number, "Error", Err.Description

End Function

'ARCV
'ByVal pMatCalendDistribuidoTempo As Variant, _
                                ByVal pMatCalendDistribuido As Variant, _
                                ByVal pMatCalend_2 As Variant, ByVal pMatCalend As Variant, _
                                ByVal pMatCalendDistribuido_2 As Variant, ByVal pMatCalendParalelo As Variant, _
                                ByVal pMatCalendDistribuidoParalelo As Variant, ByVal pMatCalendNormalT1 As Variant, _

Public Function GrabarPagoCuotas(ByVal psCtaCod As String, ByVal pnMivivienda As Integer, ByVal pnCalPago As Integer, ByVal pnMontoPago As Double, _
                    ByVal pdFecSis As Date, ByVal psMetLiquid As String, ByVal pnTipoPago As Integer, ByVal psCodAge As String, ByVal psCodUser As String, _
                    ByVal psCodCMAC As String, ByVal psNroDoc As String, ByVal pbRecepcionCmact As Boolean, ByVal psPersCmac As String, _
                    ByVal pvnIntPendiente As Double, ByVal pvnIntPendientePagado As Double, ByVal pbPrepago As Integer, ByVal psPersLavDinero As String, _
                    ByVal pnITF As Double, ByVal pnInteresDesagio As Double, ByVal pnTotDeuda As Double, ByVal pbCalenDinamic As Boolean, _
                    ByVal pnMonCalDin As Double, ByVal nCalendDinamTipo As Integer, ByVal psNomAge As String, ByVal pnCtaProd As Long, _
                    ByVal psPersNombre As String, ByVal psMoneda As String, ByVal pnNroTransac As String, ByVal psProxFecPago As String, _
                    ByVal psLpt As String, ByVal psInstCmac As String, ByVal pbPagoCheque As Boolean, ByVal psNumCheque As String, _
                    ByRef psError As String, ByRef psImprePlanPago As String, ByRef psImpreBoleta As String, ByVal pnDiasAtraso As Integer, _
                    Optional ByVal psProyectoActual As String = "", Optional pbImpTMU As Boolean = False, _
                    Optional psTitLavDinero As String = "", Optional psOrdLavDinero As String = "", _
                    Optional psReaLavDinero As String = "", Optional psBenLavDinero As String = "", _
                    Optional psVisLavDinero As String = "", Optional pnMovNro As Long = 0, _
                    Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", _
                    Optional ByVal psTpoCredCod As String = "", Optional ByVal bPorAfectacion As Boolean = False, _
                    Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing, _
                    Optional ByVal pnMotivoCancela As Variant = Nothing, _
                    Optional ByVal pnTipoAdelantoCuota As Integer = 0, _
                    Optional ByVal pnMontoComPreCanc As Double = 0, _
                    Optional ByVal psCtaCodCargo As String = "", _
                    Optional pnTpoDoc As Integer = 47, _
                    Optional psPersCod As String = "", _
                    Optional ByVal psIFTpo As String = "01", _
                    Optional ByVal psIFCta As String = "", _
                    Optional ByVal pnMovNroRVD As Variant = Nothing)
                        'DAOR 20070511, psVisLavDinero
                    'By Capi 28012007 se agrego parametros sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero
                    'Parametro bPorAfectacion agregado por ELRO el 20120329, según RFC023-2012
                    'Parametro pConnBase agregado por EJVG20120523
                    'Parametro pnMotivoCanc,pnDiasAtras agregado por AMDO20130315
                    'JUEZ 20130925 Se agregó parametro pnMontoComPreCanc
                    'JUEZ 20131227 Se agregó parametro psCtaCodCargo
                    'EJVG20140408 Se agregó pnTpoDoc,psPersCod,psIFTpo,psIFCta
                    'RIRO20140530 ERS017 Se agrego pnMovNroRVD
'Los Gastos se calcularan en el Componente
'ByVal pMatGastosFinal As Variant, ByVal pnNumGastosFinal As Integer
'*********************************************
'Dim oNegCred As COMNCredito.NCOMCredito
Dim oCred As COMDCredito.DCOMCredito 'JUEZ 20141212
Dim rs As ADODB.Recordset 'JUEZ 20141212
Dim oDoc As COMNCredito.NCOMCredDoc
Dim oConstante As COMDConstantes.DCOMConstantes
Dim sError As String
Dim sTipoCred As String
Dim MatCalDinam As Variant
Dim MatCalDinam_2 As Variant
Dim sCad As String
Dim sCad2 As String
Dim sMovNro As String 'EJVG20120523
'JUEZ 20121226 ***
Dim bMantPrepago As Boolean
Dim nModalMantPrePago As Integer
Dim sDocPers As String
'END JUEZ ********
Dim MatDatosAho(14) As String 'JUEZ 20131227
Dim psBoletaCargo As String 'JUEZ 20131227
'JUEZ 20141212 *************************
Dim nMontoAPagar As Double
Dim bCuotasVencidas As Boolean
Dim nMontoPagoDosCuotasxVenc As Double
Dim nMonIntGra As Double
Dim nTipoPagoCred As CredTiposPagosNormales
Dim nMontoCuotaSig As Double
Dim nSaldoCapPend As Double
'Dim nSaldoCapPorVenc As Double 'comment by marg20190606 -->decimal con expresion E
Dim nSaldoCapPorVenc As Currency 'add by marg20190606
Dim prsCredVig As ADODB.Recordset 'PTI1 20210802
'END JUEZ ******************************
Dim pMatCalendProx As Variant
    On Error GoTo ErrorGrabarPagoCuotas
    
        'ADD PTI1 20210802
    Dim bMIVIVIENDAAnt As Boolean
    Set oCred = New COMDCredito.DCOMCredito
    Set prsCredVig = oCred.RecuperaDatosCreditoVigente(psCtaCod, pdFecSis)
    bMIVIVIENDAAnt = EsCredMIVIVENDA(prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod)
    'END PTI1 20210802
        
        'Comentado por ALPA20130727
        If bMIVIVIENDAAnt = True Then
    'If pnMivivienda = 1 Then 'COMENT BY PTI1 20210802
        'Salvo porque lo voy a utilizar luego para imprimir las boletas
        pMatCalendDistribuidoTempo = pMatCalendDistribuido
        pMatCalend_2 = pMatCalend
        pMatCalendDistribuido_2 = CrearMatrizparaAmortizacion(pMatCalend_2)
        pMatCalendDistribuidoParalelo = CrearMatrizparaAmortizacion(pMatCalendParalelo)
        'ALPA20130731*************************************
        'Call DistribuirMatrizMiVivEnDosCalendarios(pMatCalendDistribuidoParalelo, pMatCalendDistribuido_2, pMatCalendDistribuido, pMatCalendParalelo, pMatCalendNormalT1, pnCalPago)
        Call DistribuirMatrizMiVivEnDosCalendarios(pMatCalendDistribuidoParalelo, pMatCalendDistribuido_2, pMatCalendDistribuidoMiVivi, pMatCalendParalelo, pMatCalendNormalT1, pnCalPago)
        '*************************************************
        'pMatCalendDistribuido = pMatCalendDistribuido_2
    End If
    
        Set oCred = Nothing 'PTI1 20210802
        
    'Se Agrego para manejar los Gastos en el Componente
    Dim MatGastosFinal As Variant
    Dim nNumGastosFinal As Integer
    Dim oGastos As NCOMGasto
    Set oGastos = New NCOMGasto
    'ALPA 20100607 B2**********************************************************************************
    'MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "CA", , , pnTotDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , pnDiasAtraso)
    MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "CA", , , pnTotDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , pnDiasAtraso, , , , , psAgeCodAct, psTpoProdCod, psTpoCredCod)
    '**************************************************************************************************
    Set oGastos = Nothing
    '*******************************
    'EJVG20120523 *****
    sMovNro = ""
    If Not pConnBase Is Nothing Then
        sMovNro = pConnBase.GetcMovNro(pnMovNro)
    End If
    'END EJVG *********
    
    'RIRO20140710 ERS017 **************
    If TypeName(pnMovNroRVD) = "Nothing" Then
        ReDim pnMovNroRVD(5)
        pnMovNroRVD(0) = 0
        pnMovNroRVD(1) = 0
        pnMovNroRVD(2) = 0
        pnMovNroRVD(3) = 0
        pnMovNroRVD(4) = 0
        pnMovNroRVD(5) = 0
    End If
    'END RIRO *************************
    'ALPA 20150324*********************
    If pnMovNroRVD(3) = 1 Then
        nMontoAPagar = pnMovNroRVD(2) + pnMovNroRVD(4) + pnMovNroRVD(5)
    Else
        nMontoAPagar = MatrizMontoAPagar(pMatCalend, pdFecSis, nMonIntGra, bCuotasVencidas) 'JUEZ 20141212
    End If
    '**********************************
    'nMontoPagoDosCuotasxVenc = MatrizMontoAPagar2CuotasxVenc(pMatCalend, pdFecSis, nMonIntGra) 'JUEZ 20141212
    nMontoPagoDosCuotasxVenc = MatrizMontoAPagar2CuotasxVenc(pMatCalend, pdFecSis, nMonIntGra) 'JUEZ 20150401
    
    'VAPA 20171205 AGREGO pnMovNroRVD(2) + pnMovNroRVD(4) FROM 60 - Comentado by NAGL 20180609
    psError = AmortizarCredito(psCtaCod, pMatCalend, pMatCalendDistribuido, _
                pnMontoPago, pdFecSis, psMetLiquid, pnTipoPago, psCodAge, psCodUser, _
                psNroDoc, pConnBase, , , pbRecepcionCmact, psPersCmac, _
                pvnIntPendiente, pvnIntPendientePagado, sMovNro, MatGastosFinal, _
                nNumGastosFinal, pMatCalendDistribuidoParalelo, pnCalPago, pMatCalendParalelo, _
                pbPrepago, psPersLavDinero, pnITF, pnInteresDesagio, , , psProyectoActual, _
                psTitLavDinero, psOrdLavDinero, psReaLavDinero, psBenLavDinero, psVisLavDinero, _
                pnMovNro, bPorAfectacion, , pnMontoComPreCanc, psCtaCodCargo, MatDatosAho, _
                pnTpoDoc, psPersCod, psIFTpo, psIFCta, pnMovNroRVD(0), pnMovNroRVD(1), _
                CInt(pnMovNroRVD(3))) '(pnMovNroRVD(2) + pnMovNroRVD(4))
    'By Capi 28012007 se agrego parametros sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero
    'Parametro bPorAfectacion agregado por ELRO el 20120329, según RFC023-2012
    'Parametros pConnBase y sMovNro en AmortizarCredito agregados por EJVG 20120523
    'JUEZ 20130925 Se agregó parametro pnMontoComPreCanc
    'JUEZ 20131227 Se agregó parametro psCtaCodCargo y MatDatosAho
    'ARCV 27-06-2007
    
    If psError <> "" Then
        psImpreBoleta = "ERROR EN LA REGISTRO DE LA OPERACION"
        Exit Function
    End If
    '----------
    'JUEZ 20121226 ******
    bMantPrepago = False
    sDocPers = ""
    'END JUEZ ***********
    'JUEZ 20141212 ******************
    Set oCred = New COMDCredito.DCOMCredito
    'EJVG20141230 ***
    If Not pConnBase Is Nothing Then
        Set rs = pConnBase.RecuperaRelacPers(psCtaCod)
    Else
        Set rs = oCred.RecuperaRelacPers(psCtaCod)
    End If
    'END EJVG *******
    sDocPers = Trim(IIf(IsNull(rs!DNI), rs!RUC, rs!DNI))
    Set oCred = Nothing
    'END JUEZ ***********************
                    
        If psError <> "" Then
        '    MsgBox sError, vbInformation, "Aviso"
        Else
            'Verifica si fue un pago para Calendario Dinamico
            'bPrepago nCalendDinamTipo
            If (pbCalenDinamic Or pbPrepago = 1) And (pnMontoPago < pnTotDeuda) Then
            'JOEP20211020 mejora en pago anticipado
                'If pnMontoPago > pnMonCalDin Then
                If pnMontoPago > IIf(pnMonCalDin > nMontoPagoDosCuotasxVenc, nMontoPagoDosCuotasxVenc, pnMonCalDin) Or bPagoEspecial Then
                    Dim nMontoGracia As Double
                    Set oCalend = New COMDCredito.DCOMCalendario
                    nMontoGracia = 0
                    Set rsLiqui = oCalend.ObtieneLiquidacionCab(psCtaCod, Format(pdFecSis, "yyyyMMdd"))
                    Set oCalend = Nothing
                    If Not rsLiqui Is Nothing Then
                        If rsLiqui.State = 1 Then
                            If Not rsLiqui.EOF And Not rsLiqui.BOF Then
                                nMontoGracia = rsLiqui!nIntCompTotalFecha + rsLiqui!nIntGracTotalFecha
                            End If
                        End If
                    End If
            'JOEP20211020 mejora en pago anticipado
                    
                    'JUEZ 20121226 **********************************************
                    bMantPrepago = True
                    'Dim oCred As COMDCredito.DCOMCredito
                    Dim RMantPP As ADODB.Recordset ', rs As ADODB.Recordset
                    Set oCred = New COMDCredito.DCOMCredito
                    Set RMantPP = oCred.RecuperaCredMantPrepago(psCtaCod, pdFecSis)
                    nModalMantPrePago = RMantPP!nMantNroCuota
                    Set RMantPP = Nothing
                    Set rs = oCred.RecuperaRelacPers(psCtaCod)
                    sDocPers = Trim(IIf(IsNull(rs!DNI), rs!RUC, rs!DNI))
                    Set oCred = Nothing
                    'END JUEZ ***************************************************
                    If pnMivivienda = 1 Then
                        MatCalDinam = ReprogramarCreditoenMemoriaTotalMiVivienda(psCtaCod, pdFecSis, MatCalDinam_2, IIf(nCalendDinamTipo = 1, True, False))
                        'Reporgramacion 2 de otorgar un nuevo calendario en basae al saldo de capital pendiente
                        'Como si fueera un nuevo credito bajo las cuotas pendientes
                        ReprogramarCredito psCtaCod, MatCalDinam, 2, True, MatCalDinam_2, pdFecSis, , psCodUser, psCodAge
                        Call ActualizarCalificacionMIVivienda(psCtaCod)
                        Set oDoc = New COMNCredito.NCOMCredDoc
                        sCad = oDoc.ImprimePlandePagos(psCtaCod, psNomAge, pdFecSis, psCodUser, MatrizCapitalCalendario(MatCalDinam) + MatrizCapitalCalendario(MatCalDinam_2), True)
                        sCad2 = oDoc.ImprimePlandePagos(psCtaCod, psNomAge, pdFecSis, psCodUser, MatrizCapitalCalendario(MatCalDinam) + MatrizCapitalCalendario(MatCalDinam_2), True, True)
                        
                        Set oDoc = Nothing
                        
                        psImprePlanPago = sCad & sCad2
                    Else
                        'MAVM 20100826 ***
                        'MatCalDinam = ReprogramarCreditoenMemoriaTotal(psCtaCod, pdFecSis)
                        
                        MatCalDinam = ReprogramarCreditoenMemoriaTotal(psCtaCod, pdFecSis, , pnMontoPago)
                        '***
                        'Reporgramacion 2 de otorgar un nuevo calendario en basae al saldo de capital pendiente
                        'Como si fueera un nuevo credito bajo las cuotas pendientes
                        'PASI 20150205 **************************************************
                        'ReprogramarCredito psCtaCod, MatCalDinam, 2, , , pdFecSis, , psCodUser, psCodAge
                        ReprogramarCredito psCtaCod, MatCalDinam, 2, , , pdFecSis, , psCodUser, psCodAge, , , , , , , , , , , True, , , , , , 2  'RIRO20200902 ADD Param
                        'END PASI
                        'PASI20140916 Mejora en la reprogramacion de Cred. Afectos por Roya y Des. Nat.*****************
'                        Set oCred = New COMDCredito.DCOMCredito
'                        Dim oDCredAct As New COMDCredito.DCOMCredActBD
'                        Set RMantPP = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogRoyaAmarilla, 1)
'                        If RMantPP.RecordCount > 0 Then
'                            Call oDCredAct.dUpdateCredReprogNatEspeciales(RMantPP!nMovNro, 0)
'                        End If
'                        Set RMantPP = Nothing
'
'                        Set RMantPP = oCred.ExisteReprogramacionxDesastreNat(psCtaCod, gCredReprogDesastreNat, 1)
'                        If RMantPP.RecordCount > 0 Then
'                            Call oDCredAct.dUpdateCredReprogNatEspeciales(RMantPP!nMovNro, 0)
'                        End If
'                        Set oCred = Nothing
                        'PASI*******************
                        Set oDoc = New COMNCredito.NCOMCredDoc
                        sCad = oDoc.ImprimePlandePagos(psCtaCod, psNomAge, pdFecSis, psCodUser, MatrizCapitalCalendario(MatCalDinam), False)
                        Set oDoc = Nothing
                        
                        psImpreBoleta = sCad
                        
                        psProxFecPago = MatCalDinam(0, 0) '** Juez 20120721
                    End If
                                    
                End If
            End If
            
            'AMDO 20130315 CrediPremiazo **********************************************************
            Dim oVarSist As COMDConstSistema.DCOMGeneral
            Set oVarSist = New COMDConstSistema.DCOMGeneral
            Dim pCrediPremiazo As Integer
            pCrediPremiazo = oVarSist.LeeConstSistema(432)
            Set oVarSist = Nothing
            
            If pCrediPremiazo = 1 Then
                If Mid(psCtaCod, 6, 3) = "517" And Not pConnBase Is Nothing Then
                    'Call pConnBase.InsertaPuntosCrediPremiazoPagoNormal(pnMovNro, pnDiasAtras)
                    Call pConnBase.InsertaPuntosCrediPremiazoPagoNormal(pnMovNro, 0)
                Else
                    If IIf(IsArray(pnMotivoCancela), pnMotivoCancela(3), 0) = 0 Then ''Si el pago no es una cancelacion anticipada.
                        'Call InsertaPuntosCrediPremiazoPagoNormal(pnMovNro, pnDiasAtras)
                        Call InsertaPuntosCrediPremiazoPagoNormal(pnMovNro, 0)
                    Else
                        If IIf(IsArray(pnMotivoCancela), pnMotivoCancela(3), 0) = 1 Then ''Si es Compra de deuda elimina puntos credito
                            Call CancelacionPuntosCreditoCancelado(psCtaCod)
                        End If
                    End If
                End If
            End If
            
            'END AMDO ****************************************************************************
            
            'JUEZ 20141212 ********************************************************
            pnMontoPago = Round(pnMontoPago, 2)
            nMontoAPagar = Round(nMontoAPagar, 2)
            nMontoPagoDosCuotasxVenc = Round(nMontoPagoDosCuotasxVenc, 2)
            If pConnBase Is Nothing Then
                pMatCalendProx = RecuperaMatrizCalendarioPendiente(psCtaCod)
            Else
                pMatCalendProx = pMatCalend
            End If
            'If Not pbCalenDinamic And pbPrepago = 0 Then
            If Not pbCalenDinamic And pbPrepago = 0 And psProxFecPago <> "" Then 'JUEZ 20141231
                If CDate(pdFecSis) <= CDate(pMatCalend(0, 0)) And pnMontoPago > nMontoAPagar And pnMontoPago <= nMontoPagoDosCuotasxVenc Then
                    nTipoPagoCred = gPagoNorMaxDosCuotasPorVenc
                    nSaldoCapPorVenc = nMontoPagoDosCuotasxVenc - pnMontoPago
                ElseIf CDate(pdFecSis) > CDate(pMatCalend(0, 0)) And pnMontoPago < nMontoAPagar Then
                    nTipoPagoCred = gPagoVencSaldoPend
                    nSaldoCapPend = nMontoAPagar - pnMontoPago
                ElseIf CDate(pdFecSis) > CDate(pMatCalend(0, 0)) And pnMontoPago > nMontoAPagar Then
                    nTipoPagoCred = gPagoVencSaldoPorVenc
                    'pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
                    'nSaldoCapPorVenc = MatrizMontoAPagar(pMatCalend, pdFecSis, nMonIntGra, bCuotasVencidas) - (pnMontoPago - nMontoAPagar)
                    '3,4,11,5,6,7,8,9
                    'nMontoCuotaSig = CDbl(pMatCalend(1, 3)) + CDbl(pMatCalend(1, 4)) + CDbl(pMatCalend(1, 11)) + CDbl(pMatCalend(1, 5)) + CDbl(pMatCalend(1, 6)) + CDbl(pMatCalend(1, 7)) + CDbl(pMatCalend(1, 8)) + CDbl(pMatCalend(1, 9))
                    'nSaldoCapPorVenc = nMontoCuotaSig - (pnMontoPago - nMontoAPagar)
                    'nSaldoCapPorVenc = IIf(nSaldoCapPorVenc < 0, 0, nSaldoCapPorVenc)
                    nSaldoCapPorVenc = MatrizMontoAPagar(pMatCalendProx, pdFecSis, nMonIntGra, bCuotasVencidas) 'JUEZ 20150401
                ElseIf CDate(pdFecSis) = CDate(pMatCalend(0, 0)) And pnMontoPago < nMontoAPagar Then
                    nTipoPagoCred = gPagoNorEnFechaCuotaSaldoPend
                    nSaldoCapPend = nMontoAPagar - pnMontoPago
                ElseIf CDate(pdFecSis) < CDate(pMatCalend(0, 0)) And pnMontoPago < nMontoAPagar Then
                    nTipoPagoCred = gPagoNorAntesFechaCuotaSaldoPorVenc
                    nSaldoCapPorVenc = nMontoAPagar - pnMontoPago
                End If
                
                nSaldoCapPorVenc = Round(nSaldoCapPorVenc, 2) '20210115LARI PROBLEMAS DE HAXADECIMAL
                
            End If
            'END JUEZ *************************************************************
            
            Set oConstante = New COMDConstantes.DCOMConstantes
            sTipoCred = oConstante.DameDescripcionConstante(gProducto, pnCtaProd)
            Set oConstante = Nothing
            
            Set oDoc = New COMNCredito.NCOMCredDoc
'            If pnMivivienda = 1 Then
'                'Recupero para imprimir las boletas
'                pMatCalendDistribuido = pMatCalendDistribuidoTempo
'            End If
            
            Dim oFecha As COMDConstSistema.DCOMGeneral
            Set oFecha = New COMDConstSistema.DCOMGeneral

            psImpreBoleta = oDoc.ImprimeBoleta(psCtaCod, psPersNombre, psNomAge, psMoneda, _
                MatrizCuotasPagadas(pMatCalendDistribuido), pdFecSis, Format(oFecha.FechaHora(pdFecSis), "hh:mm:ss"), pnNroTransac + 1, Mid(sTipoCred, 1, 18), _
                MatrizCapitalPagado(pMatCalendDistribuido), MatrizIntCompPagado(pMatCalendDistribuido), _
                MatrizIntCompVencPagado(pMatCalendDistribuido), _
                MatrizIntMorPagado(pMatCalendDistribuido), MatrizGastoPag(pMatCalendDistribuido), _
                MatrizIntGraciaPagado(pMatCalendDistribuido), _
                MatrizIntSuspensoPag(pMatCalendDistribuido) + MatrizIntReprogPag(pMatCalendDistribuido), _
                MatrizSaldoCapital(pMatCalend, pMatCalendDistribuido), psProxFecPago, _
                psCodUser, psLpt, psInstCmac, pbPagoCheque, psNumCheque, psCodCMAC, pnITF, pnInteresDesagio, pbRecepcionCmact, , , pbImpTMU, _
                bMantPrepago, nModalMantPrePago, sDocPers, pnMovNro, pConnBase, , pnMontoComPreCanc, nTipoPagoCred, nSaldoCapPend, nSaldoCapPorVenc, _
                pnTipoAdelantoCuota, pnMotivoCancela) 'JUEZ 20121226 Se agregó bMantPrepago, nModalMantPrePago y sDocPers
                'AMDO 20130320 Se agrego pnMovNro CrediPremiazo
                'AMDO 20130326 Se agrego pConnBase CrediPremiazo
                'AMDO 20130326 Se agrego pnMotivoCanc CrediPremiazo
                'JUEZ 20130925 Se agregó pnMontoComPreCanc
                'JUEZ 20141212 Se agregó nTipoPagoCred, nSaldoCapPend, nSaldoCapPorVenc
                'JUEZ 20150415 Se agregó pnTipoAdelantoCuota
                
            'JUEZ 20131227 ************************************************
            If pnTipoPago = gColocTipoPagoCargoCta And psCtaCodCargo <> "" Then
                psBoletaCargo = oDoc.ImprimeBoletaAhorro("RETIRO AHORROS", "CARGO A CUENTA POR PAGO DE CREDITO", "", CStr(pnMontoPago), psPersNombre, psCtaCodCargo, "", CDbl(MatDatosAho(10)), CDbl(MatDatosAho(3)), "", 1, CDbl(MatDatosAho(11)), , , , , , , , , , pdFecSis, psNomAge, psCodUser, psLpt, psCodCMAC, 0)
                psImpreBoleta = psImpreBoleta & psBoletaCargo
            End If
            'END JUEZ *****************************************************
            
            Set oFecha = Nothing
            
            Set oDoc = Nothing
                    
        End If
    
    Exit Function

ErrorGrabarPagoCuotas:
    Err.Raise Err.Number, "Error", Err.Description

End Function

Public Function AplicarPagoLote(ByVal psCodInst As String, _
                                ByVal pnMoneda As Moneda, _
                                ByVal pdFecSis As Date, _
                                ByRef prsCred As ADODB.Recordset, _
                                ByRef pMatPago As Variant, _
                                ByRef pMatDeuda As Variant, _
                                Optional ByVal pbIncluyeMora As Boolean = False)

Dim oCred As COMDCredito.DCOMCreditos
Dim oGastos As COMNCredito.NCOMGasto
Dim MatCalend As Variant
Dim MatGastosCancelacion As Variant
Dim nMontoGastoCargo As Double
Dim nNumGastosCancel As Integer

On Error GoTo ErrorAplicarPagoLote

    Set oCred = New COMDCredito.DCOMCreditos
    Set prsCred = oCred.RecuperaCreditosPagoLote(psCodInst, pnMoneda, pbIncluyeMora)
    
    If prsCred.EOF Then Exit Function
    Set oCred = Nothing
    
    '**************************************************
    'Carga Gastos
    '**************************************************
    
    'ARCV 24-04-2007 (Los Gastos de Cancelacion son manuales)
    'Set oGastos = New COMNCredito.NCOMGasto
    'ReDim pMatPago(prsCred.RecordCount)
    'ReDim pMatDeuda(prsCred.RecordCount)
    'While Not prsCred.EOF
    '    MatCalend = RecuperaMatrizCalendarioPendiente(prsCred!cCtaCod)
    '    MatGastosCancelacion = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosCancel, pdFecSis, prsCred!cCtaCod, 1, "CA", , , prsCred!nDeudaTotal, MatrizMontoCapitalAPagar(MatCalend, pdFecSis), MatCalend(0, 2), , , , , prsCred!nDiasAtraso)
    '    nMontoGastoCargo = MontoTotalGastosGenerado(MatGastosCancelacion, nNumGastosCancel, Array("CA", "PA", ""))
    '    pMatPago(prsCred.Bookmark) = Format(prsCred!nPago + nMontoGastoCargo, "#0.00")
    '    pMatDeuda(prsCred.Bookmark) = Format(prsCred!nDeudaTotal + nMontoGastoCargo, "#0.00")
    '    'pMatDeuda(prsCred.Bookmark) = ObtenerDeudaFechaTotal(prsCred!cCtaCod, MatCalend, pdFecSis)
    '    prsCred.MoveNext
    'Wend
    'prsCred.MoveFirst
    'Set oGastos = Nothing
    '------------
    
    Exit Function
    
ErrorAplicarPagoLote:
    Err.Raise Err.Number, "Error", Err.Description

End Function

Function ObtenerMoraVencida(ByVal pdHoy As Date, ByVal pMatCalend As Variant) As Double
Dim i As Integer
    ObtenerMoraVencida = 0
    For i = 0 To UBound(pMatCalend) - 1
        If pdHoy >= CDate(pMatCalend(i, 0)) Then
            ObtenerMoraVencida = ObtenerMoraVencida + CDbl(pMatCalend(i, 6))
        End If
    Next i
End Function
Function ObtenerGastoVencido(ByVal pdHoy As Date, ByVal pMatCalend As Variant) As Double
Dim i As Integer
    ObtenerGastoVencido = 0
    For i = 0 To UBound(pMatCalend) - 1
        If pdHoy >= CDate(pMatCalend(i, 0)) Then
            ObtenerGastoVencido = ObtenerGastoVencido + CDbl(pMatCalend(i, 9))
        End If
    Next i
End Function

Public Function CargaDatosHistorialCredito(ByVal psCtaCod As String, _
                                            ByVal pdFecSis As Date, _
                                            ByRef pMatRelac As Variant, _
                                            ByRef prsDatos As ADODB.Recordset, ByRef prsCalen As ADODB.Recordset, _
                                            ByRef prsPag As ADODB.Recordset, _
                                            ByRef pMatCalend As Variant, ByRef pMatImpuesto As Variant, _
                                            ByRef psCapitalCuoPend As String, ByRef psInteresCuoPend As String, _
                                            ByRef psMoraCuoPend As String, ByRef psGastoCuoPend As String, _
                                            ByRef psTotalCuoPend As String, ByRef psSaldoKCalend As String, _
                                            ByRef psIntCompCalend As String, ByRef psGastoCalend As String, _
                                            ByRef psIntMorCalend As String, ByRef psTotalCalend As String, _
                                            ByRef psSaldoKFecha As String, ByRef psIntCompFecha As String, _
                                            ByRef psIntMorFecha As String, ByRef psGastoFecha As String, _
                                            ByRef psPenalidadFecha As String, ByRef psTotalFecha, _
                                            ByRef prsGar As ADODB.Recordset, ByRef prsRef As ADODB.Recordset, _
                                            ByRef psCtaCodAnt As String, ByRef psFecha As String, _
                                            Optional ByRef pnIntCompVenc As Double = 0) As Boolean
' RIRO 20210430 ADD pnIntCompVenc

Dim oCredPersRela As COMDCredito.UCOMCredRela
Dim oCred As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim oGarantia As COMDCredito.DCOMGarantia
Dim oGastos As COMNCredito.NCOMGasto
Dim oDCredDoc As COMDCredito.DCOMCredDoc
Dim oITF As COMDConstSistema.FCOMITF

Dim MatCalendPar As Variant
Dim i As Integer
Dim MatGastosCancelacion As Variant
Dim nNumGastosCancel As Integer
Dim MatCalendDistribuido As Variant
Dim nDiasAtraso As Integer
Dim nPrdEstadoTmp As Long
'ALPA 20100107********************************
Dim nFechaHoyTemp As Date
'*********************************************
Dim R As ADODB.Recordset

    On Error GoTo ErrorCargaDatosHistorialCredito
    
    CargaDatosHistorialCredito = True
    
    'Carga Relaciones de Credito
    Set oCredPersRela = New COMDCredito.UCOMCredRela
    Call oCredPersRela.CargaRelacPersCred(psCtaCod)
    oCredPersRela.IniciarMatriz
    i = 1
    ReDim pMatRelac(oCredPersRela.NroRelaciones, 3)
    
    Do While Not oCredPersRela.EOF
        pMatRelac(i, 1) = oCredPersRela.ObtenerNombre
        pMatRelac(i, 2) = oCredPersRela.ObtenerRelac
        pMatRelac(i, 3) = oCredPersRela.ObtenerCodigo
        oCredPersRela.siguiente
        i = i + 1
    Loop
    Set oCredPersRela = Nothing
    
    'Carga Datos del Credito
    Set oCred = New COMDCredito.DCOMCredito
    Set prsDatos = oCred.RecuperaConsultaCred(psCtaCod)
    Set oCred = Nothing
    If prsDatos.BOF And prsDatos.EOF Then
        CargaDatosHistorialCredito = False
        Exit Function
    End If
    
    nPrdEstadoTmp = prsDatos!nPrdEstado
    nFechaHoyTemp = IIf(IsNull(prsDatos!dPrdEstado), pdFecSis, prsDatos!dPrdEstado)
    'ALPA 2010
    nDiasAtraso = IIf(IsNull(prsDatos!nDiasAtraso), 0, prsDatos!nDiasAtraso)
    
    'Ficha Desembolsos Realizados
    Set oCalend = New COMDCredito.DCOMCalendario
    Set prsCalen = oCalend.RecuperaCalendarioDesemb(psCtaCod)
    Set oCalend = Nothing
    
    'Ficha Pagos Realizados
    Set oCred = New COMDCredito.DCOMCredito
    'ARCV 26-06-2007
    Set prsPag = oCred.RecuperaDetallePagoHistorial(psCtaCod)
    'Set prsPag = oCred.RecuperaDetallePago(psCtaCod)
    '----------------
    Set oCred = Nothing
    
    'Ficha Pagos Pendientes
    'pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
    'MAVM Corregir Historial del Credito (Gastos)
    pMatCalend = RecuperaMatrizCalendarioPendienteHistorial(psCtaCod)
    'MatCalendPar = RecuperaMatrizCalendarioPendiente(psCtaCod, True)
    MatCalendPar = RecuperaMatrizCalendarioPendienteHistorial(psCtaCod, True) 'EJVG20140925
    'pMatCalend = UnirMatricesMiViviendaAmortizacion(pMatCalend, MatCalendPar)
    pMatCalend = UnirMatricesMiViviendaAmortizacionHistorial(pMatCalend, MatCalendPar) 'EJVG20140925
    
    Set oITF = New COMDConstSistema.FCOMITF
    oITF.fgITFParametros
    
    Dim nRedondeoITF As Double 'MAVM 20120202
    
    If UBound(pMatCalend) > 0 Then
    
        ReDim pMatImpuesto(UBound(pMatCalend) - 1)
        For i = 0 To UBound(pMatCalend) - 1
            'MAVM 20120202 ***
            'pMatImpuesto(i) = oITF.fgITFCalculaImpuesto(CDbl(Format(CDbl(pMatCalend(i, 3)) + CDbl(pMatCalend(i, 4)) + CDbl(pMatCalend(i, 5)) + CDbl(pMatCalend(i, 6)) + CDbl(pMatCalend(i, 7)) + CDbl(pMatCalend(i, 11)) + CDbl(pMatCalend(i, 8)) + CDbl(pMatCalend(i, 9)), "#0.00")))
            nRedondeoITF = fgDiferenciaRedondeoITF(CCur(oITF.fgITFCalculaImpuesto(CDbl(Format(CDbl(pMatCalend(i, 3)) + CDbl(pMatCalend(i, 4)) + CDbl(pMatCalend(i, 5)) + CDbl(pMatCalend(i, 6)) + CDbl(pMatCalend(i, 7)) + CDbl(pMatCalend(i, 11)) + CDbl(pMatCalend(i, 8)) + CDbl(pMatCalend(i, 9)), "#0.00")))))
            If nRedondeoITF > 0 Then
                pMatImpuesto(i) = Format(CCur(oITF.fgITFCalculaImpuesto(CDbl(Format(CDbl(pMatCalend(i, 3)) + CDbl(pMatCalend(i, 4)) + CDbl(pMatCalend(i, 5)) + CDbl(pMatCalend(i, 6)) + CDbl(pMatCalend(i, 7)) + CDbl(pMatCalend(i, 11)) + CDbl(pMatCalend(i, 8)) + CDbl(pMatCalend(i, 9)), "#0.00")))) - nRedondeoITF, "#,##0.00")
            Else
                pMatImpuesto(i) = oITF.fgITFCalculaImpuesto(CDbl(Format(CDbl(pMatCalend(i, 3)) + CDbl(pMatCalend(i, 4)) + CDbl(pMatCalend(i, 5)) + CDbl(pMatCalend(i, 6)) + CDbl(pMatCalend(i, 7)) + CDbl(pMatCalend(i, 11)) + CDbl(pMatCalend(i, 8)) + CDbl(pMatCalend(i, 9)), "#0.00")))
            End If
            '***
        Next i
    End If
    
    Set oITF = Nothing
    
    psCapitalCuoPend = Format(MatrizCapitalVencido(pMatCalend, pdFecSis), "#0.00")
    'RIRO 20210523 COMENTADO
    'psInteresCuoPend = Format(MatrizIntCompVencido(pMatCalend, pdFecSis) + _
                                MatrizIntCompVencVencido(pMatCalend, pdFecSis) + _
                                MatrizIntGraciaVencido(pMatCalend, pdFecSis) + _
                                MatrizIntReprogVencido(pMatCalend, pdFecSis) + _
                                MatrizIntSuspensoVencido(pMatCalend, pdFecSis), "#0.00")
                                
    'RIRO 20210523 ADD ICV
    psInteresCuoPend = Format(MatrizIntCompVencido(pMatCalend, pdFecSis) + _
                                MatrizIntGraciaVencido(pMatCalend, pdFecSis) + _
                                MatrizIntReprogVencido(pMatCalend, pdFecSis) + _
                                MatrizIntSuspensoVencido(pMatCalend, pdFecSis), "#0.00")
    
    psMoraCuoPend = Format(ObtenerMoraVencida(pdFecSis, pMatCalend), "#0.00")
        pnIntCompVenc = MatrizIntCompVencVencido(pMatCalend, pdFecSis) 'RIRO 20210503
    psGastoCuoPend = Format(ObtenerGastoVencido(pdFecSis, pMatCalend), "#0.00")
    psTotalCuoPend = Format(CDbl(psCapitalCuoPend) + CDbl(psInteresCuoPend) + CDbl(psMoraCuoPend) + CDbl(psGastoCuoPend) + CDbl(pnIntCompVenc), "#0.00")
    
    psSaldoKCalend = MatrizCapitalCalendario(pMatCalend)
    psIntCompCalend = Format(MatrizIntCompCalendario(pMatCalend) + _
                            MatrizIntComVencCalendario(pMatCalend) + _
                            MatrizIntGraciaCalendario(pMatCalend) + _
                            MatrizIntReprogCalendario(pMatCalend) + _
                            MatrizIntSuspensoCalendario(pMatCalend), "#0.00")
    psGastoCalend = Format(MatrizIntGastosCalendario(pMatCalend), "#0.00")
    psIntMorCalend = Format(MatrizIntMoratorioCalendario(pMatCalend), "#0.00")
    psTotalCalend = Format(CDbl(psSaldoKCalend) + CDbl(psIntCompCalend) + CDbl(psGastoCalend) + CDbl(psIntMorCalend), "#0.00")
    
    psSaldoKFecha = Format(MatrizCapitalAFecha(psCtaCod, pMatCalend), "#0.00")
    
    If UBound(pMatCalend) > 0 Then
        Set oCred = New COMDCredito.DCOMCredito
        Set R = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        Set oCred = Nothing
                
        If Not R.EOF Then
            'MAVM 11 Set 2009 se agrego el Monto del Interes de Gracia
            'ALPA 20100107**** se parametrizo para diferenciar el estado cancelado
            If nPrdEstadoTmp = 2060 Then
                'psIntCompFecha = Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, pMatCalend, nFechaHoyTemp) + MatrizInteresGraAFecha(psCtaCod, pMatCalend, nFechaHoyTemp), "#0.00") 'RIRO 20210523 COMENTADO
                psIntCompFecha = Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, pMatCalend, nFechaHoyTemp) + MatrizInteresGraAFecha(psCtaCod, pMatCalend, nFechaHoyTemp), "#0.00") - pnIntCompVenc 'RIRO 20210523 ADD
                psIntMorFecha = Format(ObtenerMoraVencida(nFechaHoyTemp, pMatCalend), "#0.00")
            Else
                'psIntCompFecha = Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, pMatCalend, pdFecSis) + MatrizInteresGraAFecha(psCtaCod, pMatCalend, pdFecSis), "#0.00") 'RIRO 20210523 COMENTADO
                psIntCompFecha = Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, pMatCalend, pdFecSis) + MatrizInteresGraAFecha(psCtaCod, pMatCalend, pdFecSis), "#0.00") - pnIntCompVenc 'RIRO 20210523 ADD
                psIntMorFecha = Format(ObtenerMoraVencida(pdFecSis, pMatCalend), "#0.00")
            End If
            '***********************
            'ARCV 28-02-2007
            'psGastoFecha = Format(ObtenerGastoVencido(pdFecSis, pMatCalend), "#0.00")
            Dim oBase As COMDCredito.DCOMCredActBD
            Dim RGas As ADODB.Recordset
            Set oBase = New COMDCredito.DCOMCredActBD
            'ALPA 20100113************************
            'Set RGas = oBase.CargaRecordSet(" SELECT nGa0sto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")
            If nPrdEstadoTmp = 2060 Then
                'Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(nFechaHoyTemp, "mm/dd/yyyy") & "')")
                'Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha('" & psCtaCod & "','" & Format(nFechaHoyTemp, "mm/dd/yyyy") & "')") 'JUEZ 20140404 'LUCV20180601, Comentó.
                'Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(nFechaHoyTemp, "mm/dd/yyyy") & "', -1)") 'JUEZ 20140404 'LUCV20180601, Agregó
                Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(nFechaHoyTemp, "mm/dd/yyyy") & "', -1,-1,-1)") 'JUEZ 20140404 'LUCV20180601, Agregó

            Else
                'Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")
                'Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')") 'JUEZ 20140404 'LUCV20180601, Comentó.
                'Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "', -1)") 'JUEZ 20140404 'LUCV20180601, Agregó
                Set RGas = oBase.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "', -1 , -1 ,-1 )  ") 'JUEZ 20140404 'LUCV20180601, Agregó
            End If
            
            psGastoFecha = RGas!nGasto
            Set oBase = Nothing
            Set RGas = Nothing
            '-------
            
            psPenalidadFecha = "0.00"
            psTotalFecha = Format(CDbl(psSaldoKFecha) + CDbl(psIntCompFecha) + CDbl(psGastoFecha) + CDbl(psIntMorFecha) + CDbl(psPenalidadFecha) + pnIntCompVenc, "#0.00") 'RIRO 20210503 ADD pnIntCompVenc
            If nPrdEstadoTmp = 2020 Or nPrdEstadoTmp = 2021 Or nPrdEstadoTmp = 2022 Or nPrdEstadoTmp = 2030 Or nPrdEstadoTmp = 2031 Or nPrdEstadoTmp = 2032 Then
                Set oGastos = New COMNCredito.NCOMGasto
                MatGastosCancelacion = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosCancel, pdFecSis, psCtaCod, 1, "CA", , , CDbl(psTotalFecha), MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalend), , , , , nDiasAtraso)
                psGastoFecha = Format(CDbl(psGastoFecha) + Format(MontoTotalGastosGenerado(MatGastosCancelacion, nNumGastosCancel, Array("CA", "PA", "")), "#0.00"), "#0.00")
                psTotalFecha = Format(CDbl(psTotalFecha) + CDbl(Format(MontoTotalGastosGenerado(MatGastosCancelacion, nNumGastosCancel, Array("CA", "PA", "")), "#0.00")), "#0.00")
                Set oGastos = Nothing
            End If
        End If
    End If
    If UBound(pMatCalend) > 0 Then
        If CDate(pMatCalend(0, 0)) < pdFecSis Then
            psTotalCuoPend = Format(CDbl(psCapitalCuoPend) + CDbl(psInteresCuoPend) + CDbl(psMoraCuoPend) + CDbl(psGastoCuoPend) + pnIntCompVenc, "#0.00")
        End If
    End If
    
    'Ficha de Garantias
    Set oGarantia = New COMDCredito.DCOMGarantia
    Set prsGar = oGarantia.RecuperaGarantiaCredito(psCtaCod)
    Set oGarantia = Nothing
    
    Set oCred = New COMDCredito.DCOMCredito
    'ALPA 20010113************************************************************
    'Set prsRef = oCred.RecuperaCreditosRefinanciados(psCtaCod)
    Set prsRef = oCred.RecuperaCreditosRefinanciados(psCtaCod, True)
    '*************************************************************************
    Set oCred = Nothing
           
    Set oDCredDoc = New COMDCredito.DCOMCredDoc
    psCtaCodAnt = oDCredDoc.Recup_CreditoAntiguo(psCtaCod)
    psFecha = oDCredDoc.Recup_FechaCancelacion(psCtaCod)
    Set oDCredDoc = Nothing
    
    Exit Function

ErrorCargaDatosHistorialCredito:
        Err.Raise Err.Number, "Carga Datos Historial Credito", Err.Description

End Function

Public Function PagarCargoAutomatico(ByVal psNomAge As String, ByVal pdFecSis As Date, _
                                    ByVal psNomCmac As String, ByVal pbMonSoles As Boolean, _
                                    ByVal psCodAge As String, ByVal psCodUser As String, _
                                    ByVal psLpt As String, ByVal psInstCmac As String, _
                                    ByVal psCodCMAC As String, _
                                    ByVal pnTipCambioV As Double, ByVal pnTipCambioC As Double, _
                                    ByVal pnNumCuentas As Integer, ByVal pMatCuentas As Variant, _
                                    ByRef pMatRepBoleta As Variant, ByRef pMatRepBoletaAho As Variant, _
                                    ByRef psReporte As String, ByRef pMatNumCargosAho As Variant)

Dim oBase As COMDCredito.DCOMCredActBD
Dim oCred As COMDCredito.DCOMCredito
Dim oAho As COMDCredito.DCOMCredActBD
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim oGastos As COMNCredito.NCOMGasto
Dim CredDoc As COMNCredito.NCOMCredDoc
Dim oCad As COMFunciones.FCOMCadenas
Dim oGen As COMDConstSistema.DCOMGeneral

Dim i As Integer
Dim nMontoPago As Double
Dim nMontoAmort As Double
Dim R As ADODB.Recordset
Dim RAho As ADODB.Recordset
Dim MatRepo() As String
Dim sMovNro As String
Dim sMovNroTemp As String
Dim nMontoAmortAcum As Double
Dim sEstado As String
Dim sConsCred As String
Dim MatCalendTemp As Variant
Dim MatCalendDistrTemp As Variant
Dim nMovNro As Long
Dim bTran As Boolean
Dim MatAhorros() As String
Dim bAmort As Boolean
Dim nMiViv As Integer
Dim MatCalend_2 As Variant
Dim MatCalendNormalT1 As Variant
Dim MatCalendParalelo As Variant
Dim MatCalendMiVivResult As Variant
Dim MatCalendTmp As Variant
Dim MatCalendDistribuido As Variant
Dim MatGastosFinal As Variant
Dim MatCalendDistribuido_2 As Variant
Dim MatCalendDistribuidoParalelo As Variant
Dim nNumGastosFinal As Integer
Dim nCalPago As Integer
Dim MatMovAho() As String
Dim NumMatMovAho As Integer
Dim k As Integer
Dim nNumRepo As Integer

Dim nMontoGastoGen As Double
Dim MatSaldosAho(100, 2) As String
Dim NumMatSaldosAho As Integer
Dim MatCargosAho() As String
'Dim NumMatCargosAho As Integer

    
On Error GoTo ErrorPagarCargoAutomatico
    
    'ReDim MatRepo(pnNumCuentas - 1, 5)
    ReDim MatRepo(pnNumCuentas, 5)
    nNumRepo = 0
    bAmort = False

    For i = 1 To pnNumCuentas 'pnNumCuentas - 1
        'If pMatCuentas(i, 1) = "." Then
             bAmort = True
             bTran = False
             nMontoPago = CDbl(pMatCuentas(i, 4))
             sEstado = pMatCuentas(i, 5)
             '*****************************************
             'Recupero las Cuentas
             '*****************************************
             Set oCred = New COMDCredito.DCOMCredito
             Set R = oCred.RecuperaDatosCreditoVigente(pMatCuentas(i, 2))
             nMiViv = IIf(IsNull(R!bMiVivienda), 0, R!bMiVivienda)
             nCalPago = IIf(IsNull(R!nCalPago), 0, R!nCalPago)
             Set R = oCred.RecuperaCuentasAho(pMatCuentas(i, 2))
             Set oCred = Nothing
             nMontoAmortAcum = 0
             
             '*****************************************************************
             'CARGA MATRIZ DE PAGOS DE LOS CREDITOS
             '*****************************************************************
             If nMiViv = 1 Then
                MatCalendTemp = RecuperaMatrizCalendarioPendiente(pMatCuentas(i, 2))
                MatCalend_2 = MatCalendTemp
                MatCalendNormalT1 = MatCalendTemp
                MatCalendParalelo = RecuperaMatrizCalendarioPendiente(pMatCuentas(i, 2), True)
                MatCalendMiVivResult = UnirMatricesMiViviendaAmortizacion(MatCalendTemp, MatCalendParalelo)
                MatCalendTemp = MatCalendMiVivResult
                MatCalendTmp = MatCalendTemp
             Else
                MatCalendTemp = RecuperaMatrizCalendarioPendiente(pMatCuentas(i, 2))
            End If
            
            MatCalendDistrTemp = CrearMatrizparaAmortizacion(MatCalendTemp)
                        
            '**************************************************
             '**************    AHORROS
             '**************************************************
             Set oBase = New COMDCredito.DCOMCredActBD
             bTran = True
             ReDim MatMovAho(0)
             NumMatMovAho = 0
             NumMatSaldosAho = 0
             nMontoPago = CDbl(pMatCuentas(i, 4))
             nMontoAmortAcum = 0
             
             Do While Not R.EOF
                MatSaldosAho(NumMatSaldosAho, 0) = R!cCodCtaAho
                Set RAho = oBase.GetSaldoFecha(R!cCodCtaAho, pdFecSis)
                MatSaldosAho(NumMatSaldosAho, 1) = Format(RAho!nSaldoDisponible, "#0.00")
                NumMatSaldosAho = NumMatSaldosAho + 1
                R.MoveNext
             Loop
             R.Close
                                     
            '**************************************************
            'Halla el Calculo de Cuanto se va  a pagar segun saldos de cuentas de ahorros
            '**************************************************
            Dim nMontoPagoTC As Double
            
            For k = 0 To NumMatSaldosAho - 1
                 If nMontoPago > 0 Then
                     '*****************************************
                     'Recupero los Saldos de las Cuentas
                     '*****************************************
                     If Mid(pMatCuentas(i, 2), 9, 1) = Mid(MatSaldosAho(k, 0), 9, 1) Then
                        nMontoAmort = 0
                        If CDbl(MatSaldosAho(k, 1)) > 0 Then
                            If CDbl(MatSaldosAho(k, 1)) >= nMontoPago Then
                                nMontoAmort = nMontoPago
                            Else
                                nMontoAmort = CDbl(MatSaldosAho(k, 1))
                            End If
                            nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                            nMontoPago = nMontoPago - nMontoAmort
                        End If
                    Else
                        'si la cuenta de creditos es dolares y el cuenta en soles debe hacer una venta de dolares
                        If Mid(pMatCuentas(i, 2), 9, 1) = gMonedaExtranjera And Mid(MatSaldosAho(k, 0), 9, 1) = gMonedaNacional Then
                            nMontoAmort = 0
                            If CDbl(MatSaldosAho(k, 1)) > 0 Then
                                nMontoPagoTC = Round(nMontoPago * pnTipCambioV, 2)
                                If CDbl(MatSaldosAho(k, 1)) >= nMontoPagoTC Then
                                    nMontoAmort = nMontoPago
                                Else
                                    ' amortiza el saldo de ahorros en moneda nacional debe cambiarse al
                                    'tipo de cambio venta para  calcular el monto del pago a amortizar en dolares
                                    nMontoAmort = Round(CDbl(MatSaldosAho(k, 1)) / pnTipCambioV, 2)
                                End If
                                nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                                nMontoPago = nMontoPago - nMontoAmort
                            End If
                        Else
                            ' si la cuenta de creditos es en soles y la cuenta de ahorros en dolares
                            'debe hacerse una compra dolares
                            nMontoAmort = 0
                            If CDbl(MatSaldosAho(k, 1)) > 0 Then
                                nMontoPagoTC = Round(nMontoPago / pnTipCambioC, 2)
                                If CDbl(MatSaldosAho(k, 1)) >= nMontoPagoTC Then
                                    nMontoAmort = nMontoPago
                                Else
                                    'amortiza el saldo de ahorros en moneda extrajera debe cambiarse al
                                    'tipo de cambio compra para  calcular el monto del pago a amortizar en soles
                                    nMontoAmort = Round(CDbl(MatSaldosAho(k, 1)) * pnTipCambioC, 2)
                                End If
                                nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                                nMontoPago = nMontoPago - nMontoAmort
                            End If
                        End If
                    End If
                End If
            Next k
            
            '*********************************************************
            ' CREDITOS CARGA GASTOS
            '*********************************************************
            Set oGastos = New COMNCredito.NCOMGasto
            MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, pMatCuentas(i, 2), 1, "PA", , , nMontoAmortAcum, MatrizMontoCapitalAPagar(MatCalendTemp, pdFecSis), MatrizCuotaPendiente(MatCalendTemp, MatCalendDistrTemp))
            'obtener el total del gastos
            nMontoGastoGen = MontoTotalGastosGenerado(MatGastosFinal, nNumGastosFinal, Array("PA", "", ""))
            'MatCalend = MatCalendTmp
            MatCalendTemp(0, 9) = Format(CDbl(MatCalendTemp(0, 9)) + nMontoGastoGen, "#0.00")
            Set oGastos = Nothing
             
            nMontoPago = nMontoAmortAcum + nMontoGastoGen
            nMontoAmortAcum = 0
            
            '**************************************************
            'Halla el ReCalculo de Cuanto se va  a pagar ya que se puede haber agregado gastos
            '***************************************************
            For k = 0 To NumMatSaldosAho - 1
                If nMontoPago > 0 Then
                    If Mid(pMatCuentas(i, 2), 9, 1) = Mid(MatSaldosAho(k, 0), 9, 1) Then
                        nMontoAmort = 0
                        If CDbl(MatSaldosAho(k, 1)) > 0 Then
                            If CDbl(MatSaldosAho(k, 1)) >= nMontoPago Then
                                nMontoAmort = nMontoPago
                            Else
                                nMontoAmort = CDbl(MatSaldosAho(k, 1))
                            End If
                            nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                            nMontoPago = nMontoPago - nMontoAmort
                        End If
                    Else
                        'si la cuenta de creditos es dolares y el cuenta en soles debe hacer una venta de dolares
                        If Mid(pMatCuentas(i, 2), 9, 1) = gMonedaExtranjera And Mid(MatSaldosAho(k, 0), 9, 1) = gMonedaNacional Then
                            nMontoAmort = 0
                            If CDbl(MatSaldosAho(k, 1)) > 0 Then
                                nMontoPagoTC = Round(nMontoPago * pnTipCambioV, 2)
                                If CDbl(MatSaldosAho(k, 1)) >= nMontoPagoTC Then
                                    nMontoAmort = nMontoPago
                                Else
                                    ' Amortiza el saldo de ahorros en moneda nacional debe cambiarse al
                                    ' tipo de cambio venta para  calcular el monto del pago a amortizar en dolares
                                    nMontoAmort = Round(CDbl(MatSaldosAho(k, 1)) / pnTipCambioV, 2)
                                End If
                                nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                                nMontoPago = nMontoPago - nMontoAmort
                            End If
                        Else
                            ' si la cuenta de creditos es en soles y la cuenta de ahorros en dolares
                            'debe hacerse una compra dolares
                            nMontoAmort = 0
                            If CDbl(MatSaldosAho(k, 1)) > 0 Then
                                nMontoPagoTC = Round(nMontoPago / pnTipCambioC, 2)
                                If CDbl(MatSaldosAho(k, 1)) >= nMontoPagoTC Then
                                    nMontoAmort = nMontoPago
                                Else
                                    'amortiza el saldo de ahorros en moneda extrajera debe cambiarse al
                                    'tipo de cambio compra para  calcular el monto del pago a amortizar en soles
                                    nMontoAmort = Round(CDbl(MatSaldosAho(k, 1)) * pnTipCambioC, 2)
                                End If
                                nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                                nMontoPago = nMontoPago - nMontoAmort
                            End If
                        End If
                    End If
                End If
            Next k
             
            oBase.dBeginTrans
            
            Set oFunciones = New COMNContabilidad.NCOMContFunciones
            sMovNroTemp = oFunciones.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
            Set oFunciones = Nothing
             
            'Distribuye Monto
            If Mid(Trim(pMatCuentas(i, 6)), 3, 1) = "i" Or Mid(Trim(pMatCuentas(i, 6)), 3, 1) = "Y" Then
                MatCalendDistrTemp = MatrizDistribuirCancelacion(Trim(pMatCuentas(i, 2)), MatCalendTemp, nMontoAmortAcum, pMatCuentas(i, 6), pdFecSis, True)
            Else
                MatCalendDistrTemp = MatrizDistribuirMonto(MatCalendTemp, nMontoAmortAcum, Trim(pMatCuentas(i, 6)))
            End If
            
            '*****************************************************************
            'Amortiza Credito
            '*****************************************************************
            If nMiViv = 1 Then
                MatCalendDistribuido_2 = CrearMatrizparaAmortizacion(MatCalendTemp)
                MatCalendDistribuidoParalelo = CrearMatrizparaAmortizacion(MatCalendParalelo)
                Call DistribuirMatrizMiVivEnDosCalendarios(MatCalendDistribuidoParalelo, MatCalendDistribuido_2, MatCalendDistrTemp, MatCalendParalelo, MatCalendNormalT1, 0)
                MatCalendDistrTemp = MatCalendDistribuido_2
                Call AmortizarCredito(pMatCuentas(i, 2), MatCalendTemp, MatCalendDistrTemp, nMontoAmortAcum, pdFecSis, pMatCuentas(i, 6), gColocTipoPagoCargoCta, psCodAge, psCodUser, , oBase, , , , , , , sMovNroTemp, MatGastosFinal, nNumGastosFinal, MatCalendDistribuidoParalelo, , MatCalendParalelo, 0)
            Else
                Call AmortizarCredito(pMatCuentas(i, 2), MatCalendTemp, MatCalendDistrTemp, nMontoAmortAcum, pdFecSis, pMatCuentas(i, 6), gColocTipoPagoCargoCta, psCodAge, psCodUser, , oBase, , , , , , , sMovNroTemp, MatGastosFinal, nNumGastosFinal)
            End If
                     
            nMovNro = oBase.dGetnMovNro(sMovNroTemp)
             '**************************************************
             '**************    AHORROS
             '**************************************************
             nMontoPago = CDbl(pMatCuentas(i, 4)) + nMontoGastoGen
             nMontoAmortAcum = 0
             pMatNumCargosAho(i) = 0
             ReDim MatCargosAho(100, 2)
             Dim lnMontoCargo As Double
             For k = 0 To NumMatSaldosAho - 1
                 If nMontoPago > 0 Then
                    If Mid(pMatCuentas(i, 2), 9, 1) = Mid(MatSaldosAho(k, 0), 9, 1) Then
                        nMontoAmort = 0
                        If CDbl(MatSaldosAho(k, 1)) > 0 Then
                            If CDbl(MatSaldosAho(k, 1)) >= nMontoPago Then
                                nMontoAmort = nMontoPago
                            Else
                                nMontoAmort = CDbl(MatSaldosAho(k, 1))
                            End If
                            nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                            nMontoPago = nMontoPago - nMontoAmort
                        End If
                        lnMontoCargo = nMontoAmort
                    Else
                        'si la cuenta de creditos es dolares y el cuenta en soles debe hacer una venta de dolares
                        If Mid(pMatCuentas(i, 2), 9, 1) = gMonedaExtranjera And Mid(MatSaldosAho(k, 0), 9, 1) = gMonedaNacional Then
                            nMontoAmort = 0
                            If CDbl(MatSaldosAho(k, 1)) > 0 Then
                                nMontoPagoTC = Round(nMontoPago * pnTipCambioV, 2)
                                If CDbl(MatSaldosAho(k, 1)) >= nMontoPagoTC Then
                                    nMontoAmort = nMontoPago
                                Else
                                    ' amortiza el saldo de ahorros en moneda nacional debe cambiarse al
                                    'tipo de cambio venta para  calcular el monto del pago a amortizar en dolares
                                    nMontoAmort = Round(CDbl(MatSaldosAho(k, 1)) / pnTipCambioV, 2)
                                End If
                                nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                                nMontoPago = nMontoPago - nMontoAmort
                            End If
                            lnMontoCargo = Round(nMontoAmort * pnTipCambioV, 2)
                        Else
                            ' si la cuenta de creditos es en soles y la cuenta de ahorros en dolares
                            'debe hacerse una compra dolares
                            nMontoAmort = 0
                            If CDbl(MatSaldosAho(k, 1)) > 0 Then
                                nMontoPagoTC = Round(nMontoPago / pnTipCambioC, 2)
                                If CDbl(MatSaldosAho(k, 1)) >= nMontoPagoTC Then
                                    nMontoAmort = nMontoPago
                                Else
                                    'amortiza el saldo de ahorros en moneda extrajera debe cambiarse al
                                    'tipo de cambio compra para  calcular el monto del pago a amortizar en soles
                                    nMontoAmort = Round(CDbl(MatSaldosAho(k, 1)) * pnTipCambioC, 2)
                                End If
                                nMontoAmortAcum = nMontoAmortAcum + nMontoAmort
                                nMontoPago = nMontoPago - nMontoAmort
                            End If
                            lnMontoCargo = Round(nMontoAmort / pnTipCambioC, 2)
                        End If
                    End If
                     
                     '****************************************************************
                     'Cargar a la Cuenta Cuenta
                     '****************************************************************
                     Select Case CInt(pMatCuentas(i, 5))
                         Case gColocEstRefMor
                             sConsCred = gCredPagRefMorCC
                             
                         Case gColocEstRefNorm
                             sConsCred = gCredPagRefNorCC
                             
                         Case gColocEstRefVenc
                             sConsCred = gCredPagRefVenCC
                             
                         'Si es Credito Normal
                         Case gColocEstVigMor
                             sConsCred = gCredPagNorNorCC
                             
                         Case gColocEstVigNorm
                             sConsCred = gCredPagNorMorCC
                             
                         Case gColocEstVigVenc
                             sConsCred = gCredPagNorVenCC
                     End Select
                                                                         
                     ReDim MatAhorros(14)
                     MatAhorros(0) = MatSaldosAho(k, 0)
                     MatAhorros(1) = MatSaldosAho(k, 0)
                     
                     oBase.CapCargoCuentaAho MatAhorros, CStr(MatSaldosAho(k, 0)), CDbl(Format(nMontoAmort, "#0.00")), gCredDesembCtaRetiroCancelacion, sMovNroTemp, "PAGO CREDITO CARGO AUTOMATICO", pdFecSis, TpoDocBolDep, "", "", False, True, , , , , , , , Mid(pMatCuentas(i, 2), 9, 1)
                     
                     NumMatMovAho = NumMatMovAho + 1
                     ReDim Preserve MatMovAho(NumMatMovAho)
                     MatMovAho(NumMatMovAho - 1) = Trim(Str(nMovNro))
                     
                     MatCargosAho(pMatNumCargosAho(i), 0) = MatSaldosAho(k, 0)
                     MatCargosAho(pMatNumCargosAho(i), 1) = lnMontoCargo
                     pMatNumCargosAho(i) = pMatNumCargosAho(i) + 1
                     
                 End If
            Next k
                                                                 
            oBase.dCommitTrans
             
             '******************************************************************
             'Imprimo las Boletas
             '******************************************************************
             'Credito
             Set CredDoc = New COMNCredito.NCOMCredDoc
              
             Set oGen = New COMDConstSistema.DCOMGeneral
             
             pMatRepBoleta(i) = CredDoc.ImprimeBoleta(pMatCuentas(i, 2), pMatCuentas(i, 3), psNomAge, IIf(Mid(pMatCuentas(i, 2), 9, 1) = "1", "SOLES", "DOLARES"), "", _
                                            pdFecSis, Right(Format(oGen.FechaHora(pdFecSis), "dd/mm/yyyy hh:mm:ss"), 8), "", "", MatrizCapitalPagado(MatCalendDistrTemp), _
                                            MatrizIntCompPagado(MatCalendDistrTemp), MatrizIntCompVencPagado(MatCalendDistrTemp), _
                                            MatrizIntMorPagado(MatCalendDistrTemp), MatrizGastoPag(MatCalendDistrTemp), _
                                            MatrizIntGraciaPagado(MatCalendDistrTemp), MatrizIntReprogPag(MatCalendDistrTemp), _
                                            MatrizSaldoCapital(MatCalendTemp, MatCalendDistrTemp), MatrizFechaCuotaPendiente(MatCalendTemp, MatCalendDistrTemp), _
                                            psCodUser, psLpt, psInstCmac, , , psCodCMAC, , , , True)
                          
             Set oGen = Nothing
             
             'AHORROS
             For k = 0 To pMatNumCargosAho(i) - 1
                pMatRepBoletaAho(i, k) = CredDoc.ImprimeBoletaAhorro("CARGO.PAGO.CRED.", "CARGO.PAGO.CRED.", "", MatCargosAho(k, 1), pMatCuentas(i, 3), MatCargosAho(k, 0), "", 0#, "", "", 0#, 0#, , , , , , , , , , pdFecSis, psNomAge, psCodUser, psLpt)
             Next k
             
             Set CredDoc = Nothing
             
             '*******************************************************************
             'Guarda Datos para Reporte
             '*******************************************************************
             MatRepo(nNumRepo, 0) = pMatCuentas(i, 2)  'Cuenta
             Set oCad = New COMFunciones.FCOMCadenas
             MatRepo(nNumRepo, 1) = oCad.PstaNombre(CStr(pMatCuentas(i, 3)))  'Titular
             Set oCad = Nothing
             MatRepo(nNumRepo, 2) = pMatCuentas(i, 4)  'Monto de Pago
             MatRepo(nNumRepo, 3) = Format(nMontoAmortAcum, "#0.00") 'Pago
             MatRepo(nNumRepo, 4) = Format(nMontoPago, "#0.00") 'Saldo
             nNumRepo = nNumRepo + 1
        
        'End If     'Para Optimizar
    '    DoEvents
    Next i
    'Set oNCredito = Nothing
    
    '*******************************************************************
    'Genera Reporte
    '*******************************************************************
    If bAmort Then
        Set CredDoc = New COMNCredito.NCOMCredDoc
        psReporte = CredDoc.GeneraReporteCargoAutomatico(MatRepo, psNomAge, pdFecSis, psNomCmac, pbMonSoles, pnTipCambioV, pnTipCambioC, nNumRepo)
        Set CredDoc = Nothing
    End If
    
    Set oBase = Nothing
    
    Exit Function
    
ErrorPagarCargoAutomatico:
    If bTran Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Pagar Cargo Automatico", Err.Description

End Function

Public Function ReprogramarCreditoLote(ByVal psPersCod As String, _
                                        ByVal pnTipoReprog As Integer, _
                                        ByVal pdFecSis As Date, _
                                        ByVal psCodUser As String, _
                                        ByVal psCodAge As String, _
                                        ByVal psFechaReprog As String)

Dim oCredito As COMDCredito.DCOMCreditos
Dim dFecha As Date
Dim MatCalend As Variant
Dim rsCred As ADODB.Recordset
'JUEZ 20130417 **************
Dim oDCredito As COMDCredito.DCOMCredito
Dim rsCom As ADODB.Recordset
Dim lnTipoComision As Integer
Dim lnPersoneria As Integer
'END JUEZ *******************

    On Error GoTo ErrorReprogramarCreditoLote
    
    Set oCredito = New COMDCredito.DCOMCreditos
    
    Set rsCred = oCredito.RecuperaCreditosVigxInstitucion(psPersCod)
    Do While Not rsCred.EOF
        'JUEZ 20130417 ******************************************************************
        Set oDCredito = New COMDCredito.DCOMCredito
        If oDCredito.ExisteComisionVigente(rsCred!cCtaCod, gComisionReprogCredito) Then
            lnTipoComision = 1 'Pagado
            Set oDCredito = Nothing
        Else
            Set oDCredito = New COMDCredito.DCOMCredito
            Set rsCom = oDCredito.RecuperaDatosComision(rsCred!cCtaCod, 1)
            Set oDCredito = Nothing
            lnTipoComision = 2 'Prox cuota
            lnPersoneria = rsCom!nPersoneria
            Set rsCom = Nothing
        End If
        'END JUEZ ***********************************************************************
        If pnTipoReprog = 1 Then
            dFecha = CDate(psFechaReprog)
            If dFecha > rsCred!dFecVencPend Then
                MatCalend = ReprogramarCreditoenMemoria(rsCred!cCtaCod, rsCred!nTasaInteres, rsCred!dFecVencPend, dFecha, rsCred!nCuotaPend - 1, 1)
                'Call ReprogramarCredito(rsCred!cctacod, MatCalend, 1, , , pdFecSis, , psCodUser, psCodAge)
                Call ReprogramarCredito(rsCred!cCtaCod, MatCalend, 1, , , pdFecSis, , psCodUser, psCodAge, , , True, , , , True, lnTipoComision, lnPersoneria) 'JUEZ 20130417
            End If
        Else    'Estaba con la Opcion 1 en el Tipo de Reprogramacion
            MatCalend = ReprogramarCreditoenMemoriaTotal(rsCred!cCtaCod, pdFecSis)
            'Call ReprogramarCredito(rsCred!cctacod, MatCalend, 2, , , pdFecSis, , psCodUser, psCodAge)
            Call ReprogramarCredito(rsCred!cCtaCod, MatCalend, 2, , , pdFecSis, , psCodUser, psCodAge, , , True, , , , True, lnTipoComision, lnPersoneria) 'JUEZ 20130417
        End If
        rsCred.MoveNext
    Loop
    
    Set rsCred = Nothing
    Set oCredito = Nothing
    Exit Function

ErrorReprogramarCreditoLote:
    Err.Raise Err.Number, "Reprogramar Credito Lote", Err.Description
End Function

Public Function CargarDatosCComodin(ByVal psCtaCod As String, _
                                    ByRef psTitular As String, _
                                    ByRef pnTipoCuota As Integer, _
                                    ByRef pnPlazo As Integer, _
                                    ByRef pMatCal As Variant, _
                                    ByRef psMensaje As String)
                                    
Dim oDCred As COMDCredito.DCOMCredito
Dim rsCred As ADODB.Recordset

On Error GoTo ErrorCargarDatosCComodin

    Set oDCred = New COMDCredito.DCOMCredito
    Set rsCred = oDCred.RecuperaDatosCreditoVigente(psCtaCod)
    Set oDCred = Nothing
    
    If rsCred.RecordCount > 0 Then
        If rsCred!bCuotaCom = 1 Then
            psTitular = rsCred!cPersNombre
            rsCred.Close
            Set oDCred = New COMDCredito.DCOMCredito
            Set rsCred = oDCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
            Set oDCred = Nothing
            pnTipoCuota = IIf(IsNull(rsCred!nPeriodoFechaFija), 0, rsCred!nPeriodoFechaFija)
            pnPlazo = IIf(IsNull(rsCred!nPlazo), 0, rsCred!nPlazo)
            rsCred.Close
            pMatCal = RecuperaMatrizCalendarioPendiente(psCtaCod)
        Else
            If rsCred!bCuotaCom = 2 Then
                psMensaje = "Cuota Comodin Ya fue Asignada para este Credito"
            Else
                psMensaje = "Credito No es de Tipo Cuota Comodin"
            End If
            rsCred.Close
        End If
    Else
        psMensaje = "No se encuentra el Credito, Verifique que este Vigente"
    End If
    Exit Function
    
ErrorCargarDatosCComodin:
    Err.Raise Err.Number, "Cargar Datos Cuota Comodin", Err.Description
End Function

Public Function GrabarDacionPago(ByVal psCtaCod As String, _
                                ByVal pMatCalend As Variant, ByVal pMatCalendDistribuido As Variant, _
                                ByVal pnMontoPago As Double, _
                                ByVal pdFecSis As Date, ByVal psMetLiquid As String, _
                                ByVal psCodAge As String, ByVal psCodUser As String, _
                                ByVal pnNroDacion As Integer, ByVal pnITF As Double, _
                                ByVal pbCalenDinamic As Boolean, ByVal pnMontoDeuda As Double, _
                                ByVal pnCalDin As Double, _
                                ByVal psPersNombre As String, ByVal psNomAge As String, ByVal psMoneda As String, _
                                ByVal pnNroTransac As Integer, ByVal psLpt As String, ByVal psCodCMAC As String, _
                                ByRef psError As String, ByRef psReporte As String)

Dim oDoc As COMNCredito.NCOMCredDoc
Dim oConstante As COMDConstantes.DCOMConstantes
Dim sTipoCred As String
Dim MatCalDinam As Variant
    
On Error GoTo ErrorGrabarDacionPago

    psError = AmortizarCredito(psCtaCod, pMatCalend, pMatCalendDistribuido, pnMontoPago, pdFecSis, psMetLiquid, gColocTipoPagoDacionPago, psCodAge, psCodUser, , , , pnNroDacion, , , , , , , , , , , , , pnITF)
    'Verifica si fue un pago para Calendario Dinamico
    If pbCalenDinamic And (pnMontoPago < pnMontoDeuda) Then
        If pnMontoPago > pnCalDin Then
            MatCalDinam = ReprogramarCreditoenMemoriaTotal(psCtaCod, pdFecSis)
            ReprogramarCredito psCtaCod, MatCalDinam, 2
        End If
    End If
            
    Set oConstante = New COMDConstantes.DCOMConstantes
    sTipoCred = oConstante.DameDescripcionConstante(gProducto, CInt(Mid(psCtaCod, 6, 3)))
    Set oConstante = Nothing
    
    Set oDoc = New COMNCredito.NCOMCredDoc
    
    psReporte = oDoc.ImprimeBoleta(psCtaCod, psPersNombre, psNomAge, psMoneda, _
                        MatrizCuotasPagadas(pMatCalendDistribuido), pdFecSis, Format(Date, "hh:mm:ss"), pnNroTransac + 1, "", _
                        MatrizCapitalPagado(pMatCalendDistribuido), MatrizIntCompPagado(pMatCalendDistribuido), _
                        MatrizIntCompVencPagado(pMatCalendDistribuido), _
                        MatrizIntMorPagado(pMatCalendDistribuido), MatrizGastoPag(pMatCalendDistribuido), _
                        MatrizIntGraciaPagado(pMatCalendDistribuido), _
                        MatrizIntSuspensoPag(pMatCalendDistribuido) + MatrizIntReprogPag(pMatCalendDistribuido), _
                        MatrizSaldoCapital(pMatCalend, pMatCalendDistribuido), MatrizFechaCuotaPendiente(pMatCalend, pMatCalendDistribuido), _
                        psCodUser, psLpt, psNomAge, , , psCodCMAC, pnITF, , , , True)
            
    Set oDoc = Nothing
            
    Exit Function
    
ErrorGrabarDacionPago:
    Err.Raise Err.Number, "Error Grabar Dacion Pago", Err.Description
End Function

Public Function CargarDatosDacionPago(ByVal pnDacion As Long, _
                                    ByVal pdFecSis As Date, ByRef pnNroCuota As Integer, _
                                    ByRef psMetLiq As String, ByRef pnMontoAPagar As Double, _
                                    ByRef psCtaCod As String, ByRef prsCred As ADODB.Recordset, _
                                    ByRef pbCalenDinamic As Boolean, _
                                    ByRef pMatCalend As Variant, ByRef pMatCalendDistribuido As Variant, _
                                    ByRef pnMontoPago As Double, ByRef pnITF As Double, _
                                    ByRef psCuotaPend As String, ByRef psDeuda As String, ByRef psCuota As String, _
                                    ByRef psMora As String, ByRef psCalDin As String)

Dim oDCred As COMDCredito.DCOMCredito
Dim oITF As COMDConstSistema.FCOMITF

On Error GoTo ErrorCargarDatosDacionPago

    Set oDCred = New COMDCredito.DCOMCredito
    Set prsCred = oDCred.RecuperaDatosDacionPagoCredito(pnDacion)
    Set oDCred = Nothing
    
    If Not prsCred.BOF And Not prsCred.EOF Then
        psCtaCod = prsCred!cCtaCod
        pnNroCuota = prsCred!nCuotas
        psMetLiq = prsCred!cMetLiquidacion
        pnMontoAPagar = Format(prsCred!nValorTotal, "#0.00")
        psCtaCod = prsCred!cCtaCod
        If IsNull(prsCred!nCalendDinamico) Then
            pbCalenDinamic = False
        Else
            If prsCred!nCalendDinamico = 1 Then
                pbCalenDinamic = True
            Else
                pbCalenDinamic = False
            End If
        End If
    End If
    
    pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
    psCuotaPend = MatrizCuotaPendiente(pMatCalend, pMatCalend)
    psDeuda = Format(MatrizDeudaAlaFecha(psCtaCod, pMatCalend, pdFecSis), "#0.00")
    psCuota = Format(MatrizMontoCuota(pMatCalend, pnNroCuota), "#0.00")
    psMora = Format(MatrizInteresMorFecha(psCtaCod, pMatCalend), "#0.00")
    psCalDin = Format(MatrizMontoCalendDinamico(psCtaCod, pMatCalend, pdFecSis), "#0.00")
    
    pMatCalendDistribuido = CrearMatrizparaAmortizacion(pMatCalend)
    
    '** No se considera el ITF **
    'Set oITF = New COMDConstSistema.FCOMITF
    'oITF.fgITFParametros
    pnMontoPago = pnMontoAPagar 'oITF.fgITFCalculaImpuestoIncluido(pnMontoAPagar)
    'Set oITF = Nothing
    '***********************
    
    'pnITF = Format(pnMontoAPagar - pnMontoPago, "0.00")
    
    If pnMontoPago > CDbl(psDeuda) Then
        Exit Function
    End If
    
    If pbCalenDinamic And (pnMontoPago < CDbl(psDeuda)) Then
        If pnMontoPago > CDbl(psCalDin) Then
            pMatCalendDistribuido = MatrizDistribuirCalendDinamico(psCtaCod, pMatCalend, pnMontoPago, Trim(psMetLiq), pdFecSis)
        Else
            pMatCalendDistribuido = MatrizDistribuirMonto(pMatCalend, pnMontoPago, Trim(psMetLiq))
        End If
    Else
        If pnMontoPago <> CDbl(psDeuda) Then
            pMatCalendDistribuido = MatrizDistribuirMonto(pMatCalend, pnMontoPago, Trim(psMetLiq))
        Else
            pMatCalendDistribuido = MatrizDistribuirCancelacion(psCtaCod, pMatCalend, pnMontoPago, Trim(psMetLiq), pdFecSis)
        End If
    End If
    Exit Function
    
ErrorCargarDatosDacionPago:
    Err.Raise Err.Number, "Cargar Datos Dacion Pago", Err.Description
End Function

'Para evitar tener que conectarme una vez por cada Credito
Public Sub AsignarGastoLoteCreditoTotal(ByVal pnRanIni As Double, ByVal pnRanFin As Double, _
                                        ByVal pMatCuentas As Variant, _
                                        ByVal psCodGasto As String, ByVal pnValorGasto As Double, _
                                        ByVal pnTipoValor As Integer)

Dim i As Integer
On Error GoTo ErrorAsignarGastoLoteCreditoTotal
   
    For i = 0 To UBound(pMatCuentas) - 1
        Call AsignarGastoLoteCredito(pnRanIni, pnRanFin, gColocCalendAplCuota, _
                                 pMatCuentas(i), psCodGasto, pnValorGasto, pnTipoValor)
    Next i
    
    Exit Sub

ErrorAsignarGastoLoteCreditoTotal:
    Err.Raise Err.Number, "Error En Proceso AsignarGastoLoteCreditoTotal", Err.Description
End Sub

Public Function CargarDatosCalendarioDesembolso(ByVal psCtaCod As String, _
                                                ByRef prsCred As ADODB.Recordset, _
                                                ByRef prsCal As ADODB.Recordset, _
                                                ByRef pbRefinanc As Boolean)

Dim oCredito As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario

On Error GoTo ErrorCargarDatosCalendarioDesembolso
    
    Set oCredito = New COMDCredito.DCOMCredito
    Set prsCred = oCredito.RecuperaDatosAprobados(psCtaCod)
    Set oCredito = Nothing
    
    If Not prsCred.BOF And Not prsCred.EOF Then
        pbRefinanc = EsRefinanciado(psCtaCod)
        
        'Tipo de Desembolso
        If prsCred!nTipoDesembolso <> gColocTiposDesembolsoTotal Then
            Set oCalend = New COMDCredito.DCOMCalendario
            Set prsCal = oCalend.RecuperaCalendarioDesemb(psCtaCod)
            Set oCalend = Nothing
        End If
    
    End If
    
    Exit Function

ErrorCargarDatosCalendarioDesembolso:
    Err.Raise Err.Number, "Cargar Datos Calendario Desembolso", Err.Description
End Function

Public Function ExtornarOperacionCredito(ByVal pMatDatos As Variant, _
                                        ByVal pdFecSis As Date, _
                                        ByVal psCodUser As String, ByVal psCodAge As String, _
                                        ByVal psNomAge As String, ByVal psLpt As String, _
                                        ByVal psInstCmac As String, ByVal psCodCMAC As String, _
                                        ByVal psUser As String, _
                                        ByRef psMensaje As String, _
                                        ByRef psImpreBoleta_1 As String, _
                                        ByRef psImpreBoleta_2 As Variant, _
                                        ByRef psImpreBoletaAho_1 As Variant, _
                                        ByRef psImpreBoletaAho_2 As Variant, _
                                        Optional ByVal pbImpTMU As Boolean = False, _
                                        Optional ByVal pbPagoHonra As Boolean = False, _
                                        Optional ByVal pbVigeRefi As Boolean = False, _
                                        Optional ByVal psMotExtorno As Variant)
'WIOR 20131228 AGREGO pbPagoHonra
'LUCV20160530, Agregó pbVigeRefi, Segun ERS004- 2016
'CTI3, agrego psMotExtorno ER060-2017

Dim oCredDoc As COMNCredito.NCOMCredDoc
Dim psDescrip As String
Dim oDCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim RCap As ADODB.Recordset
Dim oBase As COMDCredito.DCOMCredActBD
Dim nSaldoCtaAho As Double
Dim lnMovNro As Long
Dim sUser As String
Dim oDCredDoc As COMDCredito.DCOMCredDoc
Dim oGen As COMDConstSistema.DCOMGeneral

'JIPR 20180816 INICIO
Dim oCredCodFactElect As COMDCredito.DCOMCredito
'JIPR 20180816 FIN


On Error GoTo ErrorExtornarOperacionCredito

    'VAPA 20171211 FROM 60****Comentado by NAGL 20180609*****
    'Set oDCred = New COMDCredito.DCOMCredito
    'If oDCred.EsCreditoAmpDesembolsado(pMatDatos(0)) Then
        'oDCred.ExtornaInteresDiferidoCont (pMatDatos(0))
    'End If
    'Set oDCred = Nothing
    'VAPA 20171211 FROM 60***END NAGL 20180609*************
    
    Set oDCred = New COMDCredito.DCOMCredito
    If oDCred.PerteneceADesembolsoConCancelacion(CLng(pMatDatos(3)), pMatDatos(0)) Then
        Set oDCred = Nothing
        psMensaje = "La Operacion es Una Cancelacion que se ha Hecho Con un Desembolso, Esta Operacion se Extornara cuando Extorne el Desembolso"
        Exit Function
    End If
    Set oDCred = Nothing
    
    'Valida Que CtaAhorros Tenga Saldo
'    If pMatDatos(6) = gCredDesembCtaExist Or pMatDatos(6) = gCredDesembCtaNueva Or pMatDatos(6) = gCredDesembCtaExistDOA Or pMatDatos(6) = gCredDesembCtaNuevaDOA Then
'        Set oBase = New COMDCredito.DCOMCredActBD
'        Set R = New ADODB.Recordset
'        Set RCap = New ADODB.Recordset
'        Set R = oBase.RecuperaMovimientoCapataciones(CLng(pMatDatos(3)))
'        Set RCap = oBase.GetDatosCuentaAho(R!cCtaCod)
'        nSaldoCtaAho = RCap!nSaldoDisp
'        Set oBase = Nothing
'        R.Close
'        RCap.Close
'
'        If CDbl(pMatDatos(4)) > nSaldoCtaAho Then
'            psMensaje = "No Existe Saldo Suficiente en la Cuenta de Ahorros para Extornar el Desembolso"
'            Exit Function
'        End If
'    End If
    
    lnMovNro = CLng(pMatDatos(3))
    Set oDCredDoc = New COMDCredito.DCOMCredDoc
    sUser = oDCredDoc.GetUsuario(lnMovNro)
     Set oDCredDoc = Nothing
    'CTI3
    'Call ExtornarCredito(pMatDatos(0), pdFecSis, psCodUser, psCodAge, CLng(pMatDatos(3)), _
                    CStr(pMatDatos(6)), CDbl(pMatDatos(4)), , , , , CInt(pMatDatos(7)), psMensaje, pbPagoHonra, pbVigeRefi) 'WIOR 20131230 / LUCV20160530 Agregó: pbVigeRefi
 
    Call ExtornarCredito(pMatDatos(0), pdFecSis, psCodUser, psCodAge, CLng(pMatDatos(3)), _
                    CStr(pMatDatos(6)), CDbl(pMatDatos(4)), , , , , CInt(pMatDatos(7)), psMensaje, pbPagoHonra, pbVigeRefi, psMotExtorno(0), psMotExtorno(1), psMotExtorno)  'WIOR 20131230 / LUCV20160530 Agregó: pbVigeRefi
    
       'INICIO JIPR 20180816
      Set oCredCodFactElect = New COMDCredito.DCOMCredito
      Call oCredCodFactElect.UpdateEstadoCorrelativo(CLng(pMatDatos(3)))
     Set oCredCodFactElect = Nothing
     'FIN JIPR 20180816
    
    
    If psMensaje <> "" Then Exit Function
    
    Set oCredDoc = New COMNCredito.NCOMCredDoc
    'If pMatDatos(6) = gCredDesembCtaExist Or pMatDatos(6) = gCredDesembCtaNueva Or pMatDatos(6) = gCredDesembCtaExistDOA Or pMatDatos(6) = gCredDesembCtaNuevaDOA Or pMatDatos(6) = gCredDesembEfec Then
    If pMatDatos(6) = gCredDesembCtaExist Or pMatDatos(6) = gCredDesembCtaNueva Or pMatDatos(6) = gCredDesembCtaExistDOA Or pMatDatos(6) = gCredDesembCtaNuevaDOA Or pMatDatos(6) = gCredDesembEfec Or pMatDatos(6) = gCredDesembLeasing Then
        psDescrip = "Extorno de Desembolso de Credito"
    Else
        If Not pbPagoHonra Then 'WIOR 20131230
            If pbVigeRefi Then '***** LUCV20160607, ERS004- 2016
            psDescrip = "Extorno de Vigencia de Credito"
            Else 'Fin LUCV20160607 *****
            psDescrip = "Extorno de Pago de Credito"
            End If
        'WIOR 20131230 ********************************
        Else
            psDescrip = "Extorno Pago Cred. Honrado"
        End If
        'WIOR FIN *************************************
    End If
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    psImpreBoleta_1 = oCredDoc.ImprimeBoletaExtorno(psDescrip, pMatDatos(0), "", psNomAge, _
        IIf(Mid(pMatDatos(0), 9, 1) = "1", "SOLES", "DOLARES"), "", Format(pdFecSis, "dd/mm/yyyy"), _
        Mid(oGen.FechaHora(pdFecSis), 12, 8), "", pMatDatos(4), "0.00", psCodUser, psLpt, psInstCmac, psCodCMAC, psUser, pbImpTMU, pbPagoHonra)
    
    psDescrip = "Extorno de Cancelacion"
    Set oDCred = New COMDCredito.DCOMCredito
    Set R = oDCred.CreditosCanceladoConDesembolso(pMatDatos(0), CLng(pMatDatos(3)))
    lnMovNro = CLng(pMatDatos(3))
    Set oDCredDoc = New COMDCredito.DCOMCredDoc
    sUser = oDCredDoc.GetUsuario(lnMovNro)
    Set oDCredDoc = Nothing
     
    Set oDCredDoc = New COMDCredito.DCOMCredDoc
    
    ReDim psImpreBoleta_2(R.RecordCount)
    Do While Not R.EOF
        psImpreBoleta_2(R.Bookmark - 1) = oCredDoc.ImprimeBoletaExtorno(psDescrip, R!cCtaCod, "", psNomAge, _
                                        IIf(Mid(R!cCtaCod, 9, 1) = "1", "SOLES", "DOLARES"), "", Format(pdFecSis, "dd/mm/yyyy"), _
                                        Mid(oGen.FechaHora(pdFecSis), 12, 8), "", Format(R!nMonto, "#0.00"), "0.00", psCodUser, psLpt, , psCodCMAC, psUser, pbImpTMU)
        R.MoveNext
    Loop
    If CLng(pMatDatos(6)) = gCredPagNorNorCC Or CLng(pMatDatos(6)) = gCredPagNorMorCC Or CLng(pMatDatos(6)) = gCredPagNorVenCC Or _
       CLng(pMatDatos(6)) = gCredPagRefNorCC Or CLng(pMatDatos(6)) = gCredPagRefMorCC Or CLng(pMatDatos(6)) = gCredPagRefVenCC Then 'JUEZ 20140102
       Set R = oDCred.RecuperaMovimientosAhorros(CLng(pMatDatos(3)), False)
        ReDim psImpreBoletaAho_1(R.RecordCount)
        Do While Not R.EOF
            psImpreBoletaAho_1(R.Bookmark - 1) = oCredDoc.ImprimeBoletaExtornoAhorros("Extorno Cargo Cta por Pago Cred.", R!cCtaCod, "", psNomAge, "", "", Format(pdFecSis, "dd/mm/yyyy"), Right(oGen.FechaHora(pdFecSis), 10), "", R!nMonto, 0, psCodUser, psLpt, psInstCmac, psCodCMAC, pbImpTMU)
            R.MoveNext
        Loop
        ReDim psImpreBoletaAho_2(0)
    Else
        Set R = oDCred.RecuperaMovimientosAhorros(CLng(pMatDatos(3)), True)
        ReDim psImpreBoletaAho_1(R.RecordCount)
        Do While Not R.EOF
            psImpreBoletaAho_1(R.Bookmark - 1) = oCredDoc.ImprimeBoletaExtornoAhorros("Extorno de Abono", R!cCtaCod, "", psNomAge, "", "", Format(pdFecSis, "dd/mm/yyyy"), Right(oGen.FechaHora(pdFecSis), 10), "", R!nMonto, 0, psCodUser, psLpt, psInstCmac, psCodCMAC, pbImpTMU)
            R.MoveNext
        Loop
        
        Set R = oDCred.RecuperaMovimientosAhorros(CLng(pMatDatos(3)), False)
        ReDim psImpreBoletaAho_2(R.RecordCount)
        Do While Not R.EOF
            psImpreBoletaAho_2(R.Bookmark - 1) = oCredDoc.ImprimeBoletaExtornoAhorros("Extorno de Retiros Por Desembolso", R!cCtaCod, "", psNomAge, "", "", Format(pdFecSis, "dd/mm/yyyy"), Right(oGen.FechaHora(pdFecSis), 10), "", R!nMonto, 0, psCodUser, psLpt, psInstCmac, psCodCMAC, pbImpTMU)
            R.MoveNext
        Loop
    End If
    R.Close
    Set oDCred = Nothing
    Set oCredDoc = Nothing
    Set oGen = Nothing
    Exit Function
    
ErrorExtornarOperacionCredito:
    Err.Raise Err.Number, "Extornar Operacion Credito", Err.Description
End Function

Public Function CargarParametrosTransferencia(ByRef pnPorcGastoTransf As Double, _
                                            ByRef psMetLiquid As String)
Dim lsSQL As String
Dim lrParam As ADODB.Recordset
Dim loConec As COMConecta.DCOMConecta

lsSQL = " Select nValor  from ProductoConcepto  where nprdconceptocod like '3211' "

Set loConec = New COMConecta.DCOMConecta
    loConec.AbreConexion
    'Set lrParam = New ADODB.Recordset
    Set lrParam = loConec.CargaRecordSet(lsSQL)
Set loConec = Nothing
If lrParam.BOF And lrParam.EOF Then
    pnPorcGastoTransf = 0
Else
    pnPorcGastoTransf = lrParam!nValor
End If
Set lrParam = Nothing

Dim loParam As COMDConstSistema.NCOMConstSistema
Set loParam = New COMDConstSistema.NCOMConstSistema
psMetLiquid = loParam.LeeConstSistema(153)
Set loParam = Nothing

End Function

Public Sub TransferirARecuperacionesLote(ByVal prs As ADODB.Recordset, _
                                        ByVal pdHoy As Date, _
                                        ByVal psCodAge As String, _
                                        ByVal psCodUser As String, _
                                        ByVal psMetLiquid As String, Optional ByVal psTipoProyecto As String, Optional ByRef psMensaje As String)

On Error GoTo ErrorTransferirARecuperacionesLote
    
    prs.MoveFirst
    While Not prs.EOF
        Call TransferirARecuperaciones(prs("cCtaCod"), prs("nSaldoCap"), _
                  prs("nDemanda"), prs("nDiasAtraso"), pdHoy, psCodAge, psCodUser, _
                  prs("nNroCalen"), prs("nPrdEstado"), , psMetLiquid, psTipoProyecto, psMensaje)
  
        prs.MoveNext
    Wend
    
    Exit Sub

ErrorTransferirARecuperacionesLote:
    Err.Raise Err.Number, "Transferir a Recuperaciones en Lote", Err.Description
End Sub

Public Sub CargarDatosSimuladorPagos(ByVal psCtaCod As String, _
                                    ByRef prs As ADODB.Recordset, _
                                    ByRef pMatCalend As Variant, _
                                    ByRef pMatCalendParalelo As Variant)

Dim oCredito As COMDCredito.DCOMCredito
On Error GoTo ErrorCargarDatosSimuladorPagos

    Set oCredito = New COMDCredito.DCOMCredito
    Set prs = oCredito.RecuperaDatosComunes(psCtaCod, False)
    Set oCredito = Nothing
    
    If prs.RecordCount > 0 Then
        'ALPA 20100616*************************************************
        'If CInt(Mid(psCtaCod, 6, 3)) = gColHipoMiVivienda Then
        If CInt(prs!cTpoProdCod) = 801 Then 'Hipotecario mi vivienda
        '**************************************************************
            pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
            pMatCalendParalelo = RecuperaMatrizCalendarioPendiente(psCtaCod, True)
            pMatCalend = UnirMatricesMiViviendaAmortizacion(pMatCalend, pMatCalendParalelo)
        Else
            pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
        End If
    End If
    
    Exit Sub
    
ErrorCargarDatosSimuladorPagos:
    Err.Raise Err.Number, "Cargar Datos Simulador Pagos", Err.Description

End Sub

Public Sub AplicarSimuladorPagos(ByVal psCtaCod As String, _
                                ByVal pdFecSis As Date, _
                                ByVal pdFechaPago As Date, _
                                ByVal pnMontoPrestamo As Double, _
                                ByVal pvnTasa As Double, _
                                ByVal psMetLiquidacion As String, _
                                ByVal pnTasaMorat As Double, _
                                ByRef pMatCalend As Variant, _
                                ByRef pMatGastosCargados As Variant, _
                                ByRef pnNumGasCarg As Integer, _
                                ByRef pnMontoGasto As Double, _
                                ByRef pnMontoIntCompVencCierre As Double, _
                                ByRef pnMontoPago As Double, _
                                ByRef pnInteres As Double, ByRef pnGastos As Double, _
                                ByRef pnMora As Double, ByRef pnITF As Double, _
                                ByRef pnMontoDeuda As Double, Optional ByVal psTipoProducto As String)

Dim nDias As Integer
Dim nDiasAtraso As Integer
Dim dFechaIni As Date
Dim dFechaFin As Date

Dim i As Integer
Dim J As Integer
Dim oGasto As COMNCredito.NCOMGasto
Dim nNumGastos As Integer
Dim MatGastos As Variant
Dim oDataGastos As COMDCredito.DCOMGasto
Dim R, RFiltro, RFiltroGar As ADODB.Recordset
Dim MatCalendTempo As Variant
Dim dCal As COMDCredito.DCOMCalendario
Dim cInstitucion As String
'CUSCO
Dim oITF As COMDConstSistema.FCOMITF

On Error GoTo ErrorAplicarSimuladorPagos

    pnMontoGasto = 0
    dFechaIni = pdFecSis
    dFechaFin = pdFechaPago
    nDias = DateDiff("d", dFechaIni, dFechaFin)
    pnNumGasCarg = 0
    
    Set dCal = New COMDCredito.DCOMCalendario
    Set R = dCal.RecuperaCalendarioGastosPendientesAFecha(psCtaCod, gColocCalendAplCuota, pdFechaPago)
    Do While Not R.EOF
        pMatGastosCargados(pnNumGasCarg, 0) = Trim(R!CDescripcion)
        pMatGastosCargados(pnNumGasCarg, 1) = Format(R!nMonto, "#0.00")
        pnNumGasCarg = pnNumGasCarg + 1
        R.MoveNext
    Loop
    R.Close
    
    Set oDataGastos = New COMDCredito.DCOMGasto
    Set R = oDataGastos.RecuperaGastosAplicablesCuotas(CInt(Mid(psCtaCod, 9, 1)), "CD", , True)
    'If Mid(psCtaCod, 6, 3) <> "301" Then
    If psTipoProducto <> "704" Then
            Set RFiltro = oDataGastos.RecuperaFiltroAplicadoCuenta("P", True)
            Set RFiltroGar = oDataGastos.RecuperaFiltroAplicadoCuenta("G", True)
    Else
            'verifico la institucion
        cInstitucion = oDataGastos.ObtenerCodInstitucionByCredito(psCtaCod)
        Set RFiltro = oDataGastos.RecuperaFiltroAplicadoCuenta("P", True, cInstitucion)
        Set RFiltroGar = oDataGastos.RecuperaFiltroAplicadoCuenta("G", True, cInstitucion)
    End If
    Set oDataGastos = Nothing
    
    pnMontoIntCompVencCierre = 0
    
    Set oGasto = New COMNCredito.NCOMGasto
      
    MatCalendTempo = pMatCalend
    MatGastos = oGasto.GeneraCalendarioGastos(MatCalendTempo, Array(0, 0), nNumGastos, dFechaIni, psCtaCod, 1, "PA", , , pnMontoPrestamo, , , True, R, RFiltro, RFiltroGar, nDiasAtraso)
    For J = 0 To nNumGastos - 1
            pMatGastosCargados(pnNumGasCarg, 0) = MatGastos(J, 2)
            pMatGastosCargados(pnNumGasCarg, 1) = MatGastos(J, 3)
            pnNumGasCarg = pnNumGasCarg + 1
    Next J
    pnMontoGasto = pnMontoGasto + MontoTotalGastosGenerado(MatGastos, nNumGastos, Array("PA", "", ""))
    MatCalendTempo = pMatCalend
    For i = 1 To nDias
        nDiasAtraso = (dFechaIni - CDate(pMatCalend(0, 0)))
        nDiasAtraso = IIf(nDiasAtraso < 0, 0, nDiasAtraso) + 1
        MatGastos = oGasto.GeneraCalendarioGastos(MatCalendTempo, Array(0, 0), nNumGastos, dFechaIni, psCtaCod, 1, "CD", , , pnMontoPrestamo, , , True, R, RFiltro, RFiltroGar, nDiasAtraso + 1)
        
        For J = 0 To nNumGastos - 1
            pMatGastosCargados(pnNumGasCarg, 0) = MatGastos(J, 2)
            pMatGastosCargados(pnNumGasCarg, 1) = MatGastos(J, 3)
            pnNumGasCarg = pnNumGasCarg + 1
        Next J
        
        pnMontoGasto = pnMontoGasto + MontoTotalGastosGenerado(MatGastos, nNumGastos, Array("CD", "", ""))
        '************************************
        'GASTOS POR DIAS DE ATRASO
        '************************************
        If Mid(psCtaCod, 9, 1) Then
            If nDiasAtraso = 4 Then
                pnMontoGasto = pnMontoGasto + 1
            ElseIf nDiasAtraso = 8 Then
                pnMontoGasto = pnMontoGasto + 2
            ElseIf nDiasAtraso = 16 Then
                pnMontoGasto = pnMontoGasto + 5
            End If
        Else
            If nDiasAtraso = 4 Then
                pnMontoGasto = pnMontoGasto + 0.5
            ElseIf nDiasAtraso = 8 Then
                pnMontoGasto = pnMontoGasto + 1
            ElseIf nDiasAtraso = 16 Then
                pnMontoGasto = pnMontoGasto + 1.5
            End If
        End If
                
        pnMontoIntCompVencCierre = MatrizIntCompVencidoCierre(MatCalendTempo, dFechaIni, pvnTasa, pnMontoIntCompVencCierre)
        dFechaIni = dFechaIni + 1
    Next i
    Set oGasto = Nothing
    
    If psMetLiquidacion = "GMiC" Or psMetLiquidacion = "GMYC" Then
        pnMontoPago = Format(MatrizCapitalVencido(pMatCalend, pdFechaPago) + MatrizInteresTotalesAFecha(psCtaCod, pMatCalend, pdFechaPago) + pnMontoGasto + MatrizGastosVencidos(pMatCalend, pdFechaPago), "#0.00")
    Else
        'pnMontoPago = Format(MatrizMontoAPagar(pMatCalend, dFechaFin) + pnMontoIntCompVencCierre + pnMontoGasto + MatrizGastosVencidos(pMatCalend, CDate(Me.TxtFechaPago.Text)), "#0.00")
        pnMontoPago = Format(MatrizMontoAPagar(pMatCalend, dFechaFin) + pnMontoIntCompVencCierre + pnMontoGasto, "#0.00")
    End If
    
    If psMetLiquidacion = "GMiC" Or psMetLiquidacion = "GMYC" Then
        pnInteres = Format(MatrizInteresTotalesAFecha(psCtaCod, pMatCalend, pdFechaPago), "#0.00")
    Else
        If dFechaFin >= CDate(pMatCalend(0, 0)) Then
            pnInteres = Format(MatrizIntCompVencido(pMatCalend, dFechaFin) + MatrizIntCompVencidoCalendCierre(pMatCalend, dFechaFin), "#0.00")
        Else
            pnInteres = Format(CDbl(pMatCalend(0, 4)) + CDbl(pMatCalend(0, 5)), "#0.00")
        End If
    End If
    pnInteres = Format(CDbl(pnInteres) + pnMontoIntCompVencCierre, "#0.00")
    
    pnGastos = Format(pnMontoGasto + MatrizGastosVencidos(pMatCalend, pdFechaPago), "#0.00")
    pnMora = Format(MatrizInteresMorFecha(psCtaCod, pMatCalend) + MatrizCalculoMoraSimuladorPagos(pMatCalend, pdFecSis, dFechaFin, pnTasaMorat), "#0.00")
    pnMontoPago = Format(CDbl(pnMontoPago) + MatrizCalculoMoraSimuladorPagos(pMatCalend, pdFecSis, dFechaFin, pnTasaMorat), "#0.00")
    pnMontoPago = Format(CDbl(pnMontoPago), "#0.00")
    'CUSCO
    Set oITF = New COMDConstSistema.FCOMITF
    oITF.fgITFParametros
    pnITF = Format(oITF.fgITFDesembolso(pnMontoPago), "#0.00")
    Set oITF = Nothing
    '*********
    
    
    
    '*********
    'Deuda  a la Fecha
    '*********
    pnMontoDeuda = MatrizInteresCompAFecha(psCtaCod, pMatCalend, pdFechaPago)
    
    
    Exit Sub
    
ErrorAplicarSimuladorPagos:
    Err.Raise Err.Number, "Aplicar Simulador Pagos", Err.Description
End Sub

'******************************************************
'Se Agrego para controlar el Delcalce en el Adeudado
Private Function BuscarDelcalceAdeudado(ByVal psCtaCod As String, _
                                       ByVal pnMonto As Double, _
                                       ByVal pdFecSis As Date) As Boolean

Dim sSql As String
Dim rs As ADODB.Recordset
Dim nSaldoPaqSol As Double
Dim nSaldoPaqDol As Double
Dim nSalColSol As Double
Dim nSalColDol As Double
Dim cMoneda As String
Dim nTipoCambio As Double

Dim oTC As COMDConstSistema.NCOMTipoCambio
Dim oCon As COMConecta.DCOMConecta

BuscarDelcalceAdeudado = False

Set oTC = New COMDConstSistema.NCOMTipoCambio
nTipoCambio = oTC.EmiteTipoCambio(pdFecSis, TCFijoMes)
Set oTC = Nothing

'sSql = "SELECT A.nSaldoPaq, A.nSalColSol, A.nSalColDol,Moneda= SUBSTRING(A.cCodPaq,8,1)" & _
       " FROM Colocaciones C INNER JOIN CredSaldosAdeudoLinea AL ON C.cLineaCred=AL.cLineaCred " & _
       " INNER JOIN CredSaldosAdeudo A ON AL.cCodPaq=A.cCodPaq WHERE C.cCtaCod='" & psCtaCod & "'"

sSql = "SELECT C.cLineaCred,A.nSaldoPaqSol,A.nSaldoPaqDol, A.nSalColSol, A.nSalColDol,Moneda= SUBSTRING(AD.cCtaIFCod,3,1)" & _
       " FROM Colocaciones C INNER JOIN CredSaldosAdeudoLinea AL ON LEFT(C.cLineaCred,4) = LEFT(AL.cLineaCred,4) " & _
       " AND SUBSTRING(C.cLineaCred,10,2) =RIGHT(AL.cLineaCred,2) AND SUBSTRING(AL.cLineaCred,5,1)=SUBSTRING(C.cLineaCred,5,1) " & _
       " INNER JOIN CredSaldosAdeudo A ON AL.cCodPaq=A.cCodPaq " & _
       " INNER JOIN CredSaldosAdeudoDetalle AD ON A.cCodPaq=AD.cCodPaq AND AD.cCtaIFCod=" & _
       " (SELECT TOP 1 cCtaIFCod FROM CredSaldosAdeudoDetalle WHERE cCodPaq=A.cCodPaq)" & _
       " WHERE C.cCtaCod='" & psCtaCod & "'"

Set oCon = New COMConecta.DCOMConecta
oCon.AbreConexion
Set rs = oCon.CargaRecordSet(sSql)

If Not rs.EOF Then
    nSaldoPaqSol = rs!nSaldoPaqSol
    nSaldoPaqDol = rs!nSaldoPaqDol
    nSalColSol = rs!nSalColSol
    nSalColDol = rs!nSalColDol
    cMoneda = rs!Moneda
    
'    'Preparar para futuros Cambios
'    If cMoneda = "1" Then   'Adeudado en Soles
'        If Mid(psCtaCod, 9, 1) = "1" Then 'Credito en Soles
'            If nSaldoPaq < (nSalColSol + (nSalColDol * nTipoCambio)) + pnMonto Then
'                BuscarDelcalceAdeudado = True
'            End If
'        Else    'Credito en Dolares
'            If nSaldoPaq < (nSalColSol + (nSalColDol * nTipoCambio)) + (pnMonto * nTipoCambio) Then
'                BuscarDelcalceAdeudado = True
'            End If
'        End If
'    Else    'Adeudado en Dolares
'        If Mid(psCtaCod, 9, 1) = "1" Then 'Credito en Soles
'            If nSaldoPaq < ((nSalColSol / nTipoCambio) + nSalColDol) + (pnMonto / nTipoCambio) Then
'                BuscarDelcalceAdeudado = True
'            End If
'        Else    'Credito en Dolares
'            If nSaldoPaq < ((nSalColSol / nTipoCambio) + nSalColDol) + pnMonto Then
'                BuscarDelcalceAdeudado = True
'            End If
'        End If
'    End If
    If Mid(psCtaCod, 9, 1) = "1" Then 'Credito en Soles
        If nSaldoPaqSol + (nSaldoPaqDol * nTipoCambio) < (nSalColSol + (nSalColDol * nTipoCambio)) + pnMonto Then
            BuscarDelcalceAdeudado = True
        End If
    Else    'Credito en Dolares
        If nSaldoPaqSol + (nSaldoPaqDol * nTipoCambio) < (nSalColSol + (nSalColDol * nTipoCambio)) + (pnMonto * nTipoCambio) Then
            BuscarDelcalceAdeudado = True
        End If
    End If
    
End If

oCon.CierraConexion
Set oCon = Nothing

End Function
'******************************************************

'************* Se agrego para manejar el Calendario COFIDE
Public Sub CargarDatosCalendCOFIDE(ByVal psCtaCod As String, _
                                    ByRef pnNroCuotas As Integer, _
                                    ByRef pnMonto As Double, _
                                    ByRef pnNroCalen As Integer, _
                                    ByRef pnTasaInteres As Double, _
                                    ByRef pdDesembolso As Date, _
                                    ByRef pMatCalend As Variant, _
                                    ByRef psMensaje As String)
Dim rs As ADODB.Recordset
Dim oCred As COMDCredito.DCOMCredito

Set oCred = New COMDCredito.DCOMCredito
Set rs = oCred.RecuperaColocacEstado(psCtaCod, gColocEstSug)  'gColocEstDesemb)
Set oCred = Nothing

If rs.EOF Then
    psMensaje = "La Cuenta no existe"
    Exit Sub
End If
pnNroCuotas = rs!nCuotas
pnMonto = rs!nMonto
pdDesembolso = rs!dPrdEstado

Set oCred = New COMDCredito.DCOMCredito
Set rs = oCred.RecuperaColocacCred(psCtaCod)
pnNroCalen = rs!nNroCalen
Set rs = oCred.RecuperaProductoTasaInteres(psCtaCod, gColocLineaCredTasasIntCompNormal)
pnTasaInteres = rs!nTasaInteres
Set oCred = Nothing
pMatCalend = RecuperaMatrizCalendarioInicial(psCtaCod)

End Sub

Public Sub ActualizaCalendarioCofide(ByVal pMatFechas As Variant, _
                                    ByVal pMatCapital As Variant, _
                                    ByVal pMatInteres As Variant, _
                                    ByVal pnNroCalen As Integer, _
                                    ByVal psCtaCod As String)
Dim sSql As String
Dim oBase As COMDCredito.DCOMCredActBD
Dim nMovNroCof As Long
Dim sOpeCod As String
Dim i As Integer
Dim oCred As COMDCredito.DCOMCredito

Set oBase = New COMDCredito.DCOMCredActBD

For i = 0 To UBound(pMatFechas) - 1
    Call oBase.dUpdateColocCalendario(psCtaCod, pnNroCalen, i + 1, gColocCalendAplCuota, CDate(pMatFechas(i)))
    Call oBase.dUpdateColocCalendDet(psCtaCod, pnNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(pMatCapital(i)))
    Call oBase.dUpdateColocCalendDet(psCtaCod, pnNroCalen, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(pMatInteres(i)))
Next i

Set oCred = New COMDCredito.DCOMCredito
Call oCred.RecuperaDatosMovDesembolso(psCtaCod, nMovNroCof, sOpeCod)
Set oCred = Nothing
'Insertar gastos
Call oBase.dInsertColocCalendDet(psCtaCod, pnNroCalen, gColocCalendAplCuota, 1, gColocConceptoCodAjusteCalendCOFIDE, CDbl(pMatInteres(0)), 0, "", False)
Call oBase.dInsertMovColDet(nMovNroCof, sOpeCod, psCtaCod, CLng(pnNroCalen), gColocConceptoCodAjusteCalendCOFIDE, 1, CDbl(pMatInteres(0)), False)

Set oBase = Nothing
End Sub
'*******************************************************

Public Sub ActualizarProductoTasas(ByVal psCtaCod As String)
    Dim Sql As String
    Dim rs As New ADODB.Recordset
    Dim nMoneda As Integer
    Dim nTasa As Double
    Dim oConecta As COMConecta.DCOMConecta
    nMoneda = Mid(psCtaCod, 9, 1)
    
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion

    'Sql = " SELECT nTasaIni FROM  ColocLineaCreditoTasa" & _
        " WHERE cLineaCred like '0600%' and substring(cLineaCred,5,1)='" & nMoneda & "'"
    'ARCV 09-06-2006
    Sql = " SELECT nTasaIni FROM  ColocLineaCreditoTasa" & _
        " WHERE cLineaCred like '600%' and substring(cLineaCred,5,1)='" & nMoneda & "'"
    '---------------------------
    Set rs = oConecta.CargaRecordSet(Sql)
    If Not (rs.EOF And rs.BOF) Then
        nTasa = rs!nTasaIni
    Else
        nTasa = 0
    End If
    
    oConecta.BeginTrans
    
    Sql = " UPDATE Producto SET nTasaInteres= " & nTasa & "" & _
          " WHERE cCtaCod='" & psCtaCod & "'"
    oConecta.Ejecutar Sql

    Sql = " INSERT  ProductoTasaInteres(cCtaCod,nPrdTasaInteres,nTasaInteres)" & _
          " VALUES ('" & psCtaCod & "',7," & nTasa & ")"
    oConecta.Ejecutar Sql

    
    oConecta.CommitTrans
    
    oConecta.CierraConexion
End Sub

Public Function ActualizarProductoTasasH(ByVal psCtaCod As String, ByRef psMensaje As String) As Boolean
    Dim Sql As String
    Dim rs As New ADODB.Recordset
    Dim nMoneda As Integer
    Dim nTasa As Double
    Dim sLinea As String
    Dim oConecta As COMConecta.DCOMConecta
    nMoneda = Mid(psCtaCod, 9, 1)
    
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    
    ActualizarProductoTasasH = True
    
    Sql = "SELECT  cLineaCred FROM Colocaciones  WHERE cCtaCod=' " & psCtaCod & " ' "
    Set rs = oConecta.CargaRecordSet(Sql)
    If Not (rs.EOF And rs.BOF) Then
        sLinea = rs!cLineaCred
    Else
        sLinea = 0
    End If

    Sql = "select nTasaFin,*  from  ColocLineaCreditoTasa" & _
         " where nColocLinCredTasaTpo=7 and cLineaCred='" & sLinea & "' "
    Set rs = oConecta.CargaRecordSet(Sql)
    If Not (rs.EOF And rs.BOF) Then
        nTasa = rs!nTasaIni
    Else
        ActualizarProductoTasasH = False
        psMensaje = "No existe Tasa de Recuperaciones para esta Linea de Crédito " & sLinea
    End If

    oConecta.BeginTrans
    
    Sql = " UPDATE Producto SET nTasaInteres= " & nTasa & "" & _
          " WHERE cCtaCod='" & psCtaCod & "'"
    oConecta.Ejecutar Sql

    Sql = " INSERT  ProductoTasaInteres(cCtaCod,nPrdTasaInteres,nTasaInteres)" & _
          " VALUES ('" & psCtaCod & "',7," & nTasa & ")"
    oConecta.Ejecutar Sql
    
    oConecta.CommitTrans
    
    oConecta.CierraConexion
End Function

Public Function CondonarDeuda(ByVal psCtaCod, ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant, _
            ByVal pnMonto As Double, ByVal pdHoy As Date, ByVal psMetLiquid As String, _
            ByVal psFlag As String, _
            ByVal pnTipoPago As ColocTipoPago, ByVal psCodAge As String, ByVal psCodUser As String, _
            Optional ByRef pbConforme As Boolean = False, _
            Optional psNroDoc As String = "", Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing, _
            Optional ByVal pnMovNro As Long = -1, Optional ByVal pnNroDacion As Integer = -1, Optional pbEnOtraCmac As Boolean = False, _
            Optional psPersCmac As String = "", Optional ByVal pnIntPend As Double = 0, Optional ByVal pnIntPendPagado As Double = 0, _
            Optional psMovnroTemp As String = "", Optional ByVal pMatGastosGen As Variant = "", Optional ByVal pnNumGastosGen As Integer = -1, _
            Optional ByVal MatCalendDistribParalelo As Variant = "", Optional ByVal pnCalPago As Integer = 1, Optional ByVal MatCalendParalelo As Variant = "", _
            Optional ByVal pnPrepago As Integer = 0, Optional psPersLavDinero As String = "", Optional pnITF As Double = 0#, Optional ByVal pnMontoDesagio As Double = 0, _
            Optional ByVal pbInicioTrans As Boolean = False, Optional ByRef psMensajeValidacion As String = "") As String
'****************************************************************
Dim oBase As COMDCredito.DCOMCredActBD
Dim nEstadoCred As Integer
Dim nEstadoCredTemp As Integer
Dim R As ADODB.Recordset
Dim oCred As COMDCredito.DCOMCredito
'Dim oCalend As COMDCredito.DCOMCalendario
Dim oCredN As COMNCredito.NCOMCredito
Dim nTransacc As Long
Dim sLineaCred As String
Dim nMontoColocado As Double
Dim dFecPend As Date
Dim nDiasAtraso As Integer
Dim i, k As Integer
Dim nNroCalen As Integer
Dim nMontoGasto As Double
Dim sMovNro As String
Dim nMovNro As Long
Dim nConsCred As String
Dim pnPlazo As Integer
Dim bTran As Boolean
'Dim oFunciones As New COMNContabilidad.NCOMContFunciones
Dim dFechaTran As Date
Dim nIntPend As Double
Dim nMontoPago As Double
Dim nMontoPago_2 As Double
Dim nNroCalPar As Integer
Dim nMivivienda As Integer
Dim MatGastosCred As Variant
Dim NumregGastosCred As Integer
Dim MatGastosCuota As Variant
Dim NumRegGastosCuota As Integer
Dim nBuenPagador As Integer
Dim nPrestamo As Double
Dim CapitalPagado As Double
Dim nDiasAtrasoMov As Integer
Dim opeITFChequeEfect As String

    On Error GoTo ErrorAmortizarPago

    If pnTipoPago = gColocTipoPagoCheque Then
        opeITFChequeEfect = "990107"
    Else
        opeITFChequeEfect = gCredITF
    End If

    CondonarDeuda = ""
    CondonarDeuda = ValidaAmortizacionCredito(pnMonto)
    If CondonarDeuda <> "" Then
        Exit Function
    End If
    bTran = False
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaProducto(psCtaCod)
    Set oCred = Nothing
    nEstadoCred = R!nPrdEstado
    nEstadoCredTemp = R!nPrdEstado
    nTransacc = R!nTransacc
    R.Close

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    nPrestamo = R!nMontoCol
    R.Close
    Set R = Nothing
    
    'Definir Codigo de Operacion de Condonación de Deuda
    Select Case nEstadoCred
        'Si es Credito refinanciado
        Case gColocEstRefMor
            nConsCred = gCredCondonacionRefNor
        Case gColocEstRefNorm
            nConsCred = gCredCondonacionRefNor
        Case gColocEstRefVenc
            nConsCred = gCredCondonacionRefVen
        'si es Credito Normal
        Case gColocEstVigMor
            nConsCred = gCredCondonacionVigNor
        Case gColocEstVigNorm
            nConsCred = gCredCondonacionVigNor
        Case gColocEstVigVenc
            nConsCred = gCredCondonacionVigVen
        'si es credito Judicial
        Case gColocEstRecVigJud
            nConsCred = gCredCondonacionRecJud
        Case gColocEstRecVigCast
            nConsCred = gCredCondonacionRecCas
    End Select

''    If pnTipoPago <> gColocTipoPagoDacionPago Then
''        If pnTipoPago <> gColocTipoPagoCargoCta Then
''            'Definir Codigo de Operacion de Pago
''            Select Case nEstadoCred
''                'Si es Credito refinanciado
''                Case gColocEstRefMor
''                    If Not pbEnOtraCmac Then
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEfec, gCredPagRefMorCh)
''                    Else
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEOCEfec, gCredPagRefMorEOCCh)
''                    End If
''                Case gColocEstRefNorm
''                    If Not pbEnOtraCmac Then
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEfec, gCredPagRefNorCh)
''                    Else
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEOCEfec, gCredPagRefNorEOCCh)
''                    End If
''                Case gColocEstRefVenc
''                    If Not pbEnOtraCmac Then
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEfec, gCredPagRefVenCh)
''                    Else
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEOCEfec, gCredPagRefVenEOCCh)
''                    End If
''                'si es Credito Normal
''                Case gColocEstVigMor
''                    If Not pbEnOtraCmac Then
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEfec, gCredPagNorMorCh)
''                    Else
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEOCEfec, gCredPagNorMorEOCCh)
''                    End If
''                Case gColocEstVigNorm
''                    If Not pbEnOtraCmac Then
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEfec, gCredPagNorNorCh)
''                    Else
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEOCEfec, gCredPagNorNorEOCCh)
''                    End If
''                Case gColocEstVigVenc
''                    If Not pbEnOtraCmac Then
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEfec, gCredPagNorVenCh)
''                    Else
''                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEOCEfec, gCredPagNorVenEOCCh)
''                    End If
''            End Select
''        Else
''            Select Case nEstadoCred
''            'Si es Credito refinanciado
''            Case gColocEstRefMor
''                nConsCred = gCredPagRefMorCC
''
''            Case gColocEstRefNorm
''                nConsCred = gCredPagRefNorCC
''
''            Case gColocEstRefVenc
''                nConsCred = gCredPagRefVenCC
''
''            'si es Credito Normal
''            Case gColocEstVigMor
''                nConsCred = gCredPagNorMorCC
''
''            Case gColocEstVigNorm
''                nConsCred = gCredPagNorNorCC
''
''            Case gColocEstVigVenc
''                nConsCred = gCredPagNorVenCC
''            End Select
''        End If
''    Else
''        'Definir Codigo de Operacion de Pago
''        Select Case nEstadoCred
''            'Si es Credito refinanciado
''            Case gColocEstRefMor
''                nConsCred = gCredPagRefMorDacion
''            Case gColocEstRefNorm
''                nConsCred = gCredPagRefNorDacion
''            Case gColocEstRefVenc
''                nConsCred = gCredPagRefVenDacion
''            'si es Credito Normal
''            Case gColocEstVigMor
''                nConsCred = gCredPagNorMorDacion
''            Case gColocEstVigNorm
''                nConsCred = gCredPagNorNorDacion
''            Case gColocEstVigVenc
''                nConsCred = gCredPagNorVenDacion
''        End Select
''    End If
    If nConsCred = "" Then
        'MsgBox "No se ha definido la operación correctamente " & vbCrLf & _
               "Consulte con la Oficina de T.I", vbInformation, "AVISO"
        psMensajeValidacion = "No se ha definido la operación correctamente. Consulte con la Oficina de T.I"
        Exit Function
    End If
    
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set oCred = Nothing
    pnPlazo = IIf(IsNull(R!nPlazo), 0, R!nPlazo)

    R.Close
    Set R = Nothing

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    Set oCred = Nothing
    nNroCalen = R!nNroCalen
    nNroCalPar = R!nNroCalPar
    nMivivienda = IIf(IsNull(R!bMiVivienda), 0, R!bMiVivienda)
    nBuenPagador = IIf(IsNull(R!nCalPago), 0, R!nCalPago)
    nDiasAtrasoMov = IIf(IsNull(R!nDiasAtraso), 0, R!nDiasAtraso)
    R.Close
    Set R = Nothing

    Set oBase = New COMDCredito.DCOMCredActBD

    If psMovnroTemp <> "" Then
        sMovNro = psMovnroTemp
    Else

        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    End If
    
    
'    Set oCredN = New COMNCredito.NCOMCredito
'    MatCalend = oCredN.RecuperaMatrizCalendarioPendiente(psCtaCod)
'    MatCalendDistrib = oCredN.CrearMatrizparaAmortizacion(MatCalend)
'
    '*******************************************************************
    'Inserta o Actualiza Gastos Generados por la Operacion
    '*******************************************************************
    If pbInicioTrans = False Then
        Call oBase.dBeginTrans
    End If
    If IsArray(pMatGastosGen) Then
        Set oCred = New COMDCredito.DCOMCredito
        For i = 0 To pnNumGastosGen - 1
            If (MatrizEstadoCalendario(MatCalendDistrib) = gColocCalendEstadoPagado And pMatGastosGen(i, 4) = "CA") Or (pnPrepago = 1 And pMatGastosGen(i, 4) = "PP") Or pMatGastosGen(i, 4) = "PA" Then
                If oCred.ExisteGasto(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10)))) Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10))), CDbl(pMatGastosGen(i, 3)), , "", False, , True)
                Else
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10))), CDbl(pMatGastosGen(i, 3)), 0, "", False)
                End If
            End If
        Next i
        Set oCred = Nothing
    End If
    If pbInicioTrans = False Then
     Call oBase.dCommitTrans
     Set oBase = Nothing
    End If
    '**********************************************************************
    '****** En Caso de Que sea cancelacion Con un Desembolso
    '**********************************************************************
    
    'TOBE CONTINUE
    
    bTran = True
    If pConnBase Is Nothing Then
        Set oBase = New COMDCredito.DCOMCredActBD
        If pbInicioTrans = False Then
            Call oBase.dBeginTrans
        End If
    Else
        Set oBase = pConnBase
    End If
    dFechaTran = CDate(Format(Format(pdHoy, "dd/mm/yyyy") & " " & Format(oBase.dFechaHora, "hh:mm:ss"), "dd/mm/yyyy hh:mm:ss"))
    
    'Actualiza Producto
    If MatrizEstadoCalendario(MatCalendDistrib) = gColocCalendEstadoPagado Then
        nEstadoCred = gColocEstCancelado
    End If
    
    If nMivivienda = 1 Then
        Call oBase.dUpdateProducto(psCtaCod, , MatrizSaldoCapitalMiVivienda(MatCalend, MatCalendDistrib, MatCalendDistribParalelo, MatCalendParalelo), nEstadoCred, pdHoy, nTransacc + 1, False)
    Else
        Call oBase.dUpdateProducto(psCtaCod, , MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCred, pdHoy, nTransacc + 1, False)
    End If

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    sLineaCred = R!cLineaCred
    R.Close
    Set R = Nothing
    
    '********* ACTIVAR PARA CONTRO DEL SALDOS DE LINEA
    'Set R = oBase.RecuperaLineasCreditoSaldo(sLineaCred, True)
    'nMontoColocado = R!nMontoColocado
    'R.Close
    'Set R = Nothing
    'nMontoColocado = nMontoColocado - pnMonto
    'Call oBase.dUpdateLineaCreditoSaldo(sLineaCred, , , nMontoColocado, , , False)
    
    'Actualiza ColocacCred
    dFecPend = MatrizFechaCuotaPendiente(MatCalend, MatCalendDistrib)
    If MatrizCuotaPendiente(MatCalend, MatCalendDistrib) = 0 Then
        nDiasAtraso = 0
    Else
        nDiasAtraso = pdHoy - dFecPend
    End If
    
    nIntPend = pnIntPend - pnIntPendPagado
    Call oBase.dUpdateColocacCred(psCtaCod, nDiasAtraso, , , , , , , MatrizCuotaPendiente(MatCalend, MatCalendDistrib), nIntPend, , , , , , , , , False)

    'Insert Movimientos
    If psMovnroTemp <> "" Then
        nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        If nMovNro = 0 Then
            'cjnm
            If Mid(psFlag, 3, 1) = "1" Then
                Call oBase.dInsertMov(psMovnroTemp, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
            Else
                Call oBase.dInsertMov(psMovnroTemp, nConsCred, "", gMovEstContabNoContable, gMovFlagVigente, False)
            End If
            nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        End If
    Else
        'cjnm
        If Mid(psFlag, 3, 1) = "1" Then
            Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
        Else
            Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabNoContable, gMovFlagVigente, False)
        End If
        nMovNro = oBase.dGetnMovNro(sMovNro)
    End If
    '************************************************************************************
    'Si es una Pago en Otra Cmac
    '************************************************************************************
    If pbEnOtraCmac Then
        Call oBase.dInsertMovCMAC(nMovNro, psPersCmac, Format$(gTpoIFCmac, "00"), CInt(Mid(psCtaCod, 9, 1)), "", psNroDoc, nConsCred, pnMonto, False)
    End If
    '************************************************************************************
    'Si es Cancelado con un Desembolso Insertar su Referencia
    '************************************************************************************
    'If Not pConnBase Is Nothing Then
    '    Call oBase.dInsertMovRef(pnMovnro, nMovNro, False)
    'End If
    
    If pnTipoPago = gColocTipoPagoCheque Then
        Call oBase.dInsertaMovDoc(nMovNro, TpoDocCheque, psNroDoc, dFechaTran, False)
    End If

    If pnTipoPago <> gColocTipoPagoDacionPago Then
        If nMivivienda = 1 Then
            nMontoPago = MatrizMontoPagado(MatCalendDistrib)
            'Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, IIf(pnMontoDesagio > 0, nMontoPago - pnMontoDesagio, nMontoPago), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, nMontoPago, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
        Else
            'Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, IIf(pnMontoDesagio > 0, pnMonto - pnMontoDesagio, pnMonto), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, pnMonto, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
        End If
    Else
        Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, pnMonto, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, pnNroDacion, pnPrepago)
    End If
    
'    '*********  ITF  *****************
'    If Not pbEnOtraCmac Then
'        Call oBase.dInsertMovCol(nmovnro, opeITFChequeEfect, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
'        Call oBase.dInsertMovColDet(nmovnro, opeITFChequeEfect, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
'    Else
'        Call oBase.dInsertMovCol(nmovnro, gCredITFEOC, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
'        Call oBase.dInsertMovColDet(nmovnro, gCredITFEOC, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
'    End If
    'Carga Gastos en Memoria para Evitar Bloqueo
    MatGastosCred = DevuelveMatrizGastosCredito(NumregGastosCred, psCtaCod, nNroCalen)
    
'aqui es la nota

    'Actualiza calendario (ColocCalendario y ColocCalendDet)
    For i = 0 To UBound(MatCalendDistrib) - 1
        If MatrizMontoPagado(MatCalendDistrib, CInt(MatCalendDistrib(i, 1))) > 0 Then
            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcAprobado, False, , dFechaTran)
        Else
            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcAprobado, False)
        End If
        'If nMivivienda = 1 Then  'Si es buen pagador se cancela sus otras cuotas
        '    If pnCalPago = 1 Then
        '        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPagado Then
        '            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
        '        End If
        '    End If
        'End If
        'Amortizando Capital
        If CDbl(MatCalendDistrib(i, 3)) > 0 And Mid(psFlag, 2, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodCapital, , CDbl(MatCalendDistrib(i, 3)), , False, True)
            'Inserta Detalle Movimiento Capital
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapital, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 3)), False)
        End If
        'Amortizando Interes Compensatorio
        If CDbl(MatCalendDistrib(i, 4)) > 0 And Mid(psFlag, 3, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresCompensatorio, , CDbl(MatCalendDistrib(i, 4)), , False, True)
            'Inserta Detalle Movimiento Interes Compensatorio
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompensatorio, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 4)), False)
        End If
        'Amortizando Interes Gracia
        If CDbl(MatCalendDistrib(i, 5)) > 0 And Mid(psFlag, 3, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresGracia, , CDbl(MatCalendDistrib(i, 5)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresGracia, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 5)), False)
        End If
        'Amortizando Interes Moratorio
        If CDbl(MatCalendDistrib(i, 6)) > 0 And Mid(psFlag, 4, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresMoratorio, , CDbl(MatCalendDistrib(i, 6)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresMoratorio, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 6)), False)
        End If
        'Amortizando Interes Reprog
        If CDbl(MatCalendDistrib(i, 7)) > 0 And Mid(psFlag, 3, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresReprogramado, , CDbl(MatCalendDistrib(i, 7)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresReprogramado, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 7)), False)
        End If
        'Amortizando Interes Suspenso
        If CDbl(MatCalendDistrib(i, 8)) > 0 And Mid(psFlag, 3, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresSuspenso, , CDbl(MatCalendDistrib(i, 8)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresSuspenso, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 7)), False)
        End If

        'Amortizando Interes Compensatorio Vencido
        If CDbl(MatCalendDistrib(i, 11)) > 0 And Mid(psFlag, 5, 1) = "1" Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresCompVencido, , CDbl(MatCalendDistrib(i, 11)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompVencido, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 11)), False)
        End If


        'Amortizando Gastos
        If CDbl(MatCalendDistrib(i, 9)) > 0 Then
            nMontoGasto = CDbl(MatCalendDistrib(i, 9))
            'Set oCalend = New COMDCredito.DCOMCalendario
            'Set R = oCalend.RecuperaCalendarioGastos(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota)
            'Set oCalend = Nothing
            'Dim MatGastosCuota As Variant
            'Dim NumRegGastosCuota As Integer

            MatGastosCuota = DevuelveMatrizGastosCreditoCuota(NumRegGastosCuota, CInt(MatCalendDistrib(i, 1)), MatGastosCred, NumregGastosCred)

            For k = 0 To NumRegGastosCuota - 1
                If nMontoGasto >= CDbl(MatGastosCuota(k, 2)) Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), CLng(MatGastosCuota(k, 1)), , CDbl(MatGastosCuota(k, 2)), , False, True)
                    'Inserta Detalle Movimiento Gastos
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(MatGastosCuota(k, 1)), CInt(MatCalendDistrib(i, 1)), CDbl(MatGastosCuota(k, 2)), False)
                    nMontoGasto = nMontoGasto - CDbl(MatGastosCuota(k, 2))
                Else
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), CLng(MatGastosCuota(k, 1)), , nMontoGasto, , False, True)
                    'Inserta Detalle Movimiento Gastos
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(MatGastosCuota(k, 1)), CInt(MatCalendDistrib(i, 1)), CDbl(Format(nMontoGasto, "#0.00")), False)
                    nMontoGasto = 0
                End If

                nMontoGasto = CDbl(Format(nMontoGasto, "#0.00"))
                If nMontoGasto = 0 Then
                    Exit For
                End If
            Next k
            ' R.Close
             Set R = Nothing
        End If
    Next i

    'Amortizando Desagio si Hubiere
    If pnMontoDesagio > 0 Then
        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompDesagio, CInt(MatCalendDistrib(0, 1)), pnMontoDesagio, False)
    End If

    '*****************************************************
    'Para Amortizar Segundo Tramo de MiVivienda
    '*****************************************************
    If nMivivienda = 1 Then
        nMontoPago_2 = MatrizMontoPagado(MatCalendDistribParalelo)
        If nMontoPago_2 > 0 Then

            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalPar, nMontoPago_2, 0, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalendParalelo, MatCalendDistribParalelo), nEstadoCredTemp, False, , pnPrepago)

            For i = 0 To UBound(MatCalendDistribParalelo) - 1
                If MatrizMontoPagado(MatCalendDistribParalelo, CInt(MatCalendDistribParalelo(i, 1))) > 0 Then
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistribParalelo(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False, , dFechaTran)
                Else
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistribParalelo(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
                End If
                'Amortizando Capital
                If CDbl(MatCalendDistribParalelo(i, 3)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodCapital, , CDbl(MatCalendDistribParalelo(i, 3)), , False, True)
                    'Inserta Detalle Movimiento Capital
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodCapital, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 3)), False)
                End If
                'Amortizando Interes Compensatorio
                If CDbl(MatCalendDistribParalelo(i, 4)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompensatorio, , CDbl(MatCalendDistribParalelo(i, 4)), , False, True)
                    'Inserta Detalle Movimiento Interes Compensatorio
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresCompensatorio, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 4)), False)
                End If
                'Amortizando Interes Gracia
                If CDbl(MatCalendDistribParalelo(i, 5)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresGracia, , CDbl(MatCalendDistribParalelo(i, 5)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresGracia, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 5)), False)
                End If
                'Amortizando Interes Moratorio
                If CDbl(MatCalendDistribParalelo(i, 6)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresMoratorio, , CDbl(MatCalendDistribParalelo(i, 6)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresMoratorio, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 6)), False)
                End If
                'Amortizando Interes Reprog
                If CDbl(MatCalendDistribParalelo(i, 7)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresReprogramado, , CDbl(MatCalendDistribParalelo(i, 7)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresReprogramado, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 7)), False)
                End If
                'Amortizando Interes Suspenso
                If CDbl(MatCalendDistribParalelo(i, 8)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresSuspenso, , CDbl(MatCalendDistribParalelo(i, 8)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresSuspenso, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 8)), False)
                End If

                'Amortizando Interes Vencido
                If CDbl(MatCalendDistribParalelo(i, 11)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompVencido, , CDbl(MatCalendDistribParalelo(i, 11)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresCompVencido, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 11)), False)
                End If

            Next i
        End If

        'Actualiza Tabla de Calificacion Mivivienda
        If pnPrepago <> 1 Then
            For i = 0 To UBound(MatCalendDistrib) - 1
                If MatCalendDistrib(i, 2) = "1" Then
                    Call oBase.dUpdateColocCalifMiViv(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), dFechaTran, , CInt(MatCalendDistrib(i, 2)))
                End If
            Next i
        End If
    End If


    If pnTipoPago = gColocTipoPagoDacionPago Then
        Call oBase.dAnularColocGarantRec(pnNroDacion, gColocGarantRecEstadoCancelado, False)
    End If

    ''''''''''''''''''''
    ' Lavado de Dinero
    If psPersLavDinero <> "" Then
        Call oBase.dInsertaMovLavDinero(nMovNro, psPersLavDinero)
    End If
    ''''''''''''''''''''
    CapitalPagado = 0
    CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistrib)
    If nMivivienda = 1 Then
        CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistribParalelo)
    End If
    ''''''''''''''''''''
    ' Reversion de Garantia
    ''''''''''''''''''''
    Call LiberaGarantiaPago(nMovNro, oBase, psCtaCod, psCodAge, psCodUser, pdHoy, nPrestamo, CapitalPagado, IIf(nEstadoCred = gColocEstCancelado, True, False))

    ''''''''''''''''''''

    If pConnBase Is Nothing Then
        If pbInicioTrans = False Then
            Call oBase.dCommitTrans
        End If
    End If

    If pConnBase Is Nothing Then
        If nMivivienda = 1 Then

            Call EvaluacionBuenPagador(psCtaCod, pdHoy, psCodAge, psCodUser, nMovNro)

        End If
    End If
    If pConnBase Is Nothing Then
        Set oBase = Nothing
    End If

'    CapitalPagado = 0
'    CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistrib)
'    If nMivivienda = 1 Then
'        CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistribParalelo)
'    End If

    pbConforme = True
    Exit Function

ErrorAmortizarPago:
    If bTran Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    pbConforme = False
    Err.Raise Err.Number, "Error En Proceso", Err.Description


'*******************************************************************
End Function

Public Function MatrizDistribuirMontoACondonar(ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
                    ByVal psMetLiquidacion As String, ByVal psFlag As String, ByVal pdFecHoy As Date) As Variant
Dim i As Integer
Dim J As Integer
Dim MatCalendDistrib As Variant
Dim nMonto As Double
Dim nMontoTemp As Double

        nMonto = pnMontoPago
        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
        Do While nMonto > 0
            For J = 1 To 4
                Select Case Mid(psMetLiquidacion, J, 1)
                    Case "G"
                        If Mid(psFlag, 6, 1) = "1" Then
                            Call MatrizDistribuirGastosACondonar(MatCalend, MatCalendDistrib, nMonto, pdFecHoy, True)
                        End If
                    Case "M"
                        If Mid(psFlag, 4, 1) = "1" Then
                            Call MatrizDistribuirMoraACondonar(MatCalend, MatCalendDistrib, nMonto, pdFecHoy, True)
                        End If
                    Case "I"
                        If Mid(psFlag, 5, 1) = "1" Or Mid(psFlag, 3, 1) = "1" Then
                            Call MatrizDistribuirInteresIACondonar(MatCalend, MatCalendDistrib, nMonto, psFlag, pdFecHoy, True)
                        End If
                    Case "C"
                        If Mid(psFlag, 2, 1) = "1" Then
                            Call MatrizDistribuirCapitalACondonar(MatCalend, MatCalendDistrib, nMonto, pdFecHoy, True)
                        End If
                End Select
                Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
            Next J
        Loop
        MatrizDistribuirMontoACondonar = MatCalendDistrib
End Function

Private Function MatrizDistribuirGastosACondonar(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, ByRef pnMonto As Double, _
        ByVal pdFecHoy As Date, Optional ByVal DistVert As Boolean = False)
Dim i As Integer

    For i = 0 To UBound(MatCalend) - 1
        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If
        
        If Not (pdFecHoy >= CDate(MatCalend(i, 0))) Then Exit For
        
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And (CDbl(MatCalend(i, 9)) - CDbl(MatCalendDistrib(i, 9))) > 0 Then
            If pnMonto > (CDbl(MatCalend(i, 9)) - CDbl(MatCalendDistrib(i, 9))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 9)) - CDbl(MatCalendDistrib(i, 9)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 9) = MatCalend(i, 9)
            Else
                MatCalendDistrib(i, 9) = Format(CDbl(MatCalendDistrib(i, 9)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i

End Function

Private Function MatrizDistribuirInteresIACondonar(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
    ByRef pnMonto As Double, ByVal psFlag As String, ByVal pdFecHoy As Date, Optional ByVal DistVert As Boolean = False)
Dim i As Integer
Dim bSiCubrio As Boolean
    bSiCubrio = False
    For i = 0 To UBound(MatCalend) - 1
        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If
        
        If Not (pdFecHoy >= CDate(MatCalend(i, 0))) Then Exit For
        
        'Cubre Interes en Suspenso
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8))) > 0 And Mid(psFlag, 3, 1) = "1" Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 8)) - CDbl(MatCalendDistrib(i, 8)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 8) = MatCalend(i, 8)
            Else
                MatCalendDistrib(i, 8) = Format(CDbl(MatCalendDistrib(i, 8)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Cubre Intereses Reprogramados
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7))) > 0 And Mid(psFlag, 3, 1) = "1" Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 7)) - CDbl(MatCalendDistrib(i, 7)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 7) = MatCalend(i, 7)
            Else
                MatCalendDistrib(i, 7) = Format(CDbl(MatCalendDistrib(i, 7)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Intereses de Gracia
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) > 0 And Mid(psFlag, 3, 1) = "1" Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 5)) - CDbl(MatCalendDistrib(i, 5)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 5) = MatCalend(i, 5)
            Else
                MatCalendDistrib(i, 5) = Format(CDbl(MatCalendDistrib(i, 5)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Intereses Compensatorio Vencido
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) > 0 And Mid(psFlag, 5, 1) = "1" Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 11)) - CDbl(MatCalendDistrib(i, 11)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 11) = MatCalend(i, 11)
            Else
                MatCalendDistrib(i, 11) = Format(CDbl(MatCalendDistrib(i, 11)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        'Intereses Compensatorios
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) > 0 And Mid(psFlag, 3, 1) = "1" Then
            bSiCubrio = True
            If pnMonto > (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 4)) - CDbl(MatCalendDistrib(i, 4)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 4) = MatCalend(i, 4)
            Else
                MatCalendDistrib(i, 4) = Format(CDbl(MatCalendDistrib(i, 4)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
        If bSiCubrio Then
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i
End Function

'*********************************************************
'** Cubrir Verticalmente Todas las Moras de las Cuotas
'*********************************************************
Private Function MatrizDistribuirMoraACondonar(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
ByRef pnMonto As Double, ByVal pdFecHoy As Date, Optional ByVal DistVert As Boolean = False)
Dim i As Integer

    For i = 0 To UBound(MatCalend) - 1

        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If
        
        If Not (pdFecHoy >= CDate(MatCalend(i, 0))) Then Exit For
        
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 6)) - CDbl(MatCalendDistrib(i, 6))) > 0 Then
            If pnMonto > (CDbl(MatCalend(i, 6)) - CDbl(MatCalendDistrib(i, 6))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 6)) - CDbl(MatCalendDistrib(i, 6)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 6) = MatCalend(i, 6)
            Else
                MatCalendDistrib(i, 6) = Format(CDbl(MatCalendDistrib(i, 6)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
        End If
    Next i
End Function

Private Function MatrizDistribuirCapitalACondonar(ByVal MatCalend As Variant, ByRef MatCalendDistrib As Variant, _
    ByRef pnMonto As Double, ByVal pdFecHoy As Date, Optional ByVal DistVert As Boolean = False)
Dim i As Integer

    For i = 0 To UBound(MatCalend) - 1

        If i > 0 And Not DistVert Then
            'Si Aun queda pendiente capital, interes, gastos, mora de la cuota anterior
            If (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 3)) - CDbl(MatCalendDistrib(i - 1, 3))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 8)) - CDbl(MatCalendDistrib(i - 1, 8))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 7)) - CDbl(MatCalendDistrib(i - 1, 7))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 5)) - CDbl(MatCalendDistrib(i - 1, 5))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 4)) - CDbl(MatCalendDistrib(i - 1, 4))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
                And (CDbl(MatCalend(i - 1, 6)) - CDbl(MatCalendDistrib(i - 1, 6))) > 0) Or _
                (CInt(MatCalend(i - 1, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 And _
                (CDbl(MatCalend(i - 1, 9)) - CDbl(MatCalendDistrib(i - 1, 9))) > 0) Then

                Exit Function
            End If
        End If
        
        If Not (pdFecHoy >= CDate(MatCalend(i, 0))) Then Exit For
        
        If CInt(MatCalend(i, 2)) = gColocCalendEstadoPendiente And pnMonto > 0 _
            And (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3))) > 0 Then
            If pnMonto > (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3))) Then
                pnMonto = pnMonto - (CDbl(MatCalend(i, 3)) - CDbl(MatCalendDistrib(i, 3)))
                pnMonto = CDbl(Format(pnMonto, "#0.00"))
                MatCalendDistrib(i, 3) = MatCalend(i, 3)
            Else
                MatCalendDistrib(i, 3) = Format(CDbl(MatCalendDistrib(i, 3)) + pnMonto, "#0.00")
                pnMonto = 0
            End If
            If Not DistVert Then
                Exit For
            End If
        End If
    Next i
End Function

Public Function ValidaExonSeguroDesgravamen(ByVal pscPerscod As String, ByVal dHoy As Date) As Boolean
    Dim oConecta As COMConecta.DCOMConecta
    Set oConecta = New COMConecta.DCOMConecta
    Dim rs As New ADODB.Recordset
    Dim rs1 As New ADODB.Recordset
    Dim Rs2 As New ADODB.Recordset
    Dim Sql As String
    oConecta.AbreConexion
    
        'CTI6-20210503-ERS032-2019 -(Optimizar Sugerencia)
'        Sql = "   select cPersCod From ProductoPersona PR" _
'              & " Join Producto  P On  PR.cctacod=P.cctacod " _
'              & " Where nprdpersrelac=20 and cPersCod ='" & pscPerscod & "' "
              
        Sql = "Execute spt_sel_ValidaExonSeguroDesgravamenPersonaTitular '" & pscPerscod & "'"
        'Fin CTI6-20210503
        Set rs1 = oConecta.CargaRecordSet(Sql)
        
        If Not (rs1.EOF And rs1.BOF) Then
          'CTI6-20210503-ERS032-2019 -(Optimizar Sugerencia)
          'Sql = " SELECT *  FROM  Persona" & _
          '       " WHERE datediff(year,dPersNacCreac,'" & Format(dHoy, "mm/dd/yyyy") & "')> 80 and cPersCod='" & pscPerscod & "'"
          
          Sql = "Execute spt_sel_ValidaExonSeguroDesgravamenPersona '" & pscPerscod & "', " & 75 & ""
          'Fin CTI6-20210503
          
          Set Rs2 = oConecta.CargaRecordSet(Sql)
          If Not (Rs2.EOF And Rs2.BOF) Then
            ValidaExonSeguroDesgravamen = True
          Else
            ValidaExonSeguroDesgravamen = False
          End If
        Else
        'CTI6-20210503-ERS032-2019 -(Optimizar Sugerencia)
          'Sql = " SELECT *  FROM  Persona" & _
          '       " WHERE datediff(year,dPersNacCreac,'" & Format(dHoy, "mm/dd/yyyy") & "')> 75 and cPersCod='" & pscPerscod & "'"
          Sql = "Execute spt_sel_ValidaExonSeguroDesgravamenPersona '" & pscPerscod & "', " & 75 & ""
        'Fin CTI6-20210503
          Set rs = oConecta.CargaRecordSet(Sql)
          If Not (rs.EOF And rs.BOF) Then
            ValidaExonSeguroDesgravamen = True
          Else
            ValidaExonSeguroDesgravamen = False
          End If
       End If
    
End Function

'**DAOR 20070209
'**Genera el contenido del archivo de desembolsos por corresponsalia
'**que será enviado al Banco de la Nación
Public Function GenerarArchivoDesembolsoPorCorresponsalia(ByVal pdFechaProceso As Date, Optional ByRef psMensaje As String, Optional ByRef psCodCliCMACMaynas As String) As String
Dim loConstSis As COMDConstSistema.NCOMConstSistema
Dim loCreditos As COMDCredito.DCOMCreditos
Dim lrDesBcoNac As ADODB.Recordset
Dim loFun As COMFunciones.FCOMImpresion
Dim lsCadFile As String
Dim lsCadCabFile As String
Dim sCodCliCMACMaynas As String
Dim sCtaMN  As String
Dim sCodigoBanco As String
Dim sCodigoPrestamo As String
Dim sTipoRegistro As String
Dim sTipoDato As String
Dim nCont As Integer
Dim sNumTotalRegistros As String
Dim nTotalSoles As Double
Dim nTotalDolares As Double
Dim sNombreBen As String
Dim sTipDocBen As String
Dim sNumDocBen As String
Dim sNombreRep As String
Dim sTipDocRep As String
Dim sNumDocRep As String
Dim sTEA As String
Dim sPlazo As String

'DAOR 20070703
Dim nImporte As Double
Dim sTemp As String
Dim oITF As COMDConstSistema.FCOMITF
Dim nPorItf As Double
Dim nITF As Double

Set loCreditos = New COMDCredito.DCOMCreditos
Set lrDesBcoNac = loCreditos.RecuperaCreditosParaDesemEnBcoNac(pdFechaProceso)
Set loCreditos = Nothing

    If lrDesBcoNac Is Nothing Or (lrDesBcoNac.BOF And lrDesBcoNac.EOF) Then
        psMensaje = " No existen créditos para generar el archivo "
        Exit Function
    Else
        Set oITF = New COMDConstSistema.FCOMITF
            oITF.fgITFParametros
            nPorItf = oITF.gnITFPorcent
        
        psMensaje = ""
        '**Cargar parametros*************************************
        Set loConstSis = New COMDConstSistema.NCOMConstSistema
            sCodCliCMACMaynas = loConstSis.LeeConstSistema(gDesBcoNacCodCliCMACMaynas)
            psCodCliCMACMaynas = sCodCliCMACMaynas
            sCtaMN = loConstSis.LeeConstSistema(gDesBcoNacCtaMN)
            sCodigoBanco = loConstSis.LeeConstSistema(gDesBcoNacCodigoBanco)
            sCodigoPrestamo = loConstSis.LeeConstSistema(gDesBcoNacCodigoPrestamo)
            sTipoRegistro = loConstSis.LeeConstSistema(gDesBcoNacTipRegIngresoDesembolsos)
            sTipoDato = loConstSis.LeeConstSistema(gDesBcoNacTipDatIngreDesemEfectivo)
        Set loConstSis = Nothing
        '********************************************************
        nCont = 1
        sNumTotalRegistros = Right$("0000000" & CStr(lrDesBcoNac.RecordCount), 7)
        With lrDesBcoNac
            While Not lrDesBcoNac.EOF
                sTEA = Right$("0000" & CStr((((1 + !nTasaInteres / 100) ^ 12 - 1) * 100) * 100), 4)
                If !nColocCalendCod >= 10 And !nColocCalendCod <= 31 Then 'Periodo Fijo
                    sPlazo = Right$("00" & CStr(Round((!nCuotas * !nPlazo) / 30, 0)), 2)
                ElseIf !nColocCalendCod >= 40 And !nColocCalendCod <= 61 Then 'Fecha Fijo
                    sPlazo = Right$("00" & CStr(!nCuotas), 2)
                End If
                sTipDocBen = FormatoTipoDocDesBcoNac(Left(!DocTitular, 2))
                sNumDocBen = Right$("000000000000000" & Trim(Right(!DocTitular, Len(!DocTitular) - 2)), 15)
                If !TipoPersona = 1 Then 'Si es persona natural
                    sNombreBen = FormatoNombreDesBcoNac(!NombreTitular)
                    sNombreRep = Space(60)
                    sTipDocRep = Space(2)
                    sNumDocRep = Space(15)
                Else
                    sNombreBen = Left$(!NombreTitular & Space(60), 60)
                    sNombreRep = IIf(!NombreRepresentante = "", Space(60), FormatoNombreDesBcoNac(!NombreRepresentante))
                    sTipDocRep = FormatoTipoDocDesBcoNac(Left(!DocRepresentante, 2))
                    If Len(!DocRepresentante) > 0 Then
                        sNumDocRep = Right$("000000000000000" & Trim(Right(!DocRepresentante, Len(!DocRepresentante) - 2)), 15)
                    Else
                        sNumDocRep = "000000000000000"
                    End If
                End If
                                            
                sNombreBen = CHRTRAN(sNombreBen, "áéíóúñûÁÉÍÓÚÑÛ-_'", "aeiounuAEIOUNU   ")
                sNombreRep = CHRTRAN(sNombreRep, "áéíóúñûÁÉÍÓÚÑÛ-_'", "aeiounuAEIOUNU   ")
                                                           
                'lsCadFile = lsCadFile & Mid$(!cCtaCod, 6, 1) & Right$(!cCtaCod, 11) 'Numero de Credito o Documento
                lsCadFile = lsCadFile & Mid$(!cCtaCod, 4, 3) & Mid$(!cCtaCod, 8, 2) & Mid$(!cCtaCod, 11, 7) 'Numero de Credito o Documento
                lsCadFile = lsCadFile & Right$("000" & CStr(nCont), 3)
                lsCadFile = lsCadFile & "01" 'Situacion: Pendiente de Desembolso
                lsCadFile = lsCadFile & !cClave
                lsCadFile = lsCadFile & CStr(!Moneda)
                lsCadFile = lsCadFile & CStr(!TipoPersona)
                lsCadFile = lsCadFile & sNombreBen
                lsCadFile = lsCadFile & sTipDocBen
                lsCadFile = lsCadFile & sNumDocBen
                lsCadFile = lsCadFile & sNombreRep
                lsCadFile = lsCadFile & sTipDocRep
                lsCadFile = lsCadFile & sNumDocRep
                
                'DAOR 20070703******************************************
                nITF = !nMonto * nPorItf
                nITF = oITF.CortaDosITF(nITF)
                nImporte = !nMonto - nITF
                '********************************************************
                lsCadFile = lsCadFile & Right$("000000000000000" & CStr(nImporte * 100), 15)
                lsCadFile = lsCadFile & Format(DateAdd("d", 7, !dPrdEstado), "yyyymmdd") 'Fecha de Caducidad
                lsCadFile = lsCadFile & !cCodAgeBcoNac
                lsCadFile = lsCadFile & sTipoDato
                lsCadFile = lsCadFile & sTEA
                lsCadFile = lsCadFile & Space(16)
                lsCadFile = lsCadFile & Right$("00000000000" & sCtaMN, 11)
                lsCadFile = lsCadFile & "000000000001"
                lsCadFile = lsCadFile & Format(DateAdd("d", 1, !dPrdEstado), "yyyymmdd") 'Fecha de Caducidad
                lsCadFile = lsCadFile & Right$("00000000000000" & sCodigoPrestamo, 14)
                lsCadFile = lsCadFile & Right$("0000" & !SectorEconomico, 4)
                lsCadFile = lsCadFile & sPlazo
                lsCadFile = lsCadFile & Space(3)
                lsCadFile = lsCadFile & Chr(13) & Chr(10)
                
                If !Moneda = 1 Then
                    nTotalSoles = nTotalSoles + nImporte
                Else
                    nTotalDolares = nTotalDolares + nImporte
                End If
                nCont = nCont + 1
                lrDesBcoNac.MoveNext
            Wend
        End With
        lsCadCabFile = Right$("000" & sCodigoBanco, 3)
        lsCadCabFile = lsCadCabFile & Right$("0000" & sCodCliCMACMaynas, 4)
        lsCadCabFile = lsCadCabFile & sNumTotalRegistros
        lsCadCabFile = lsCadCabFile & Right$("000000000000000" & CStr(nTotalSoles * 100), 15)
        lsCadCabFile = lsCadCabFile & Right$("000000000000000" & CStr(nTotalDolares * 100), 15)
        lsCadCabFile = lsCadCabFile & Format(pdFechaProceso, "yyyymmdd")
        lsCadCabFile = lsCadCabFile & Right$("00" & sTipoRegistro, 2)
        lsCadCabFile = lsCadCabFile & Space(226) & Chr(13) & Chr(10)
    End If
    GenerarArchivoDesembolsoPorCorresponsalia = lsCadCabFile & lsCadFile
    lrDesBcoNac.Close
Set oITF = Nothing
Set lrDesBcoNac = Nothing
End Function

'**DAOR 20070209
'**Formatea nombre de persona para archivo de desembolsos por corresponsalia
Private Function FormatoNombreDesBcoNac(psNombre As String) As String
Dim nPosiB As Integer, nPosiBI As Integer, nPosiC As Integer
Dim sNombre As String
    nPosiB = InStr(psNombre, "/")
    nPosiBI = InStr(psNombre, "\")
    nPosiC = InStr(psNombre, ",")
    If nPosiB > 0 Or nPosiBI > 0 Or nPosiC > 0 Then
        sNombre = Left(Left(psNombre, nPosiB - 1) & Space(20), 20) 'Apellido Paterno
        If nPosiBI = 0 Then 'Si no es casada
            sNombre = sNombre & Left$(Mid$(psNombre, nPosiB + 1, nPosiC - nPosiB - 1) & Space(20), 20)
        Else
            If Mid$(psNombre, nPosiBI - 1, 1) = "-" Then ' Si no tiene apellido, tomar apellido del conyugue
                sNombre = sNombre & Left$(Mid$(psNombre, nPosiBI + 1, nPosiC - nPosiBI - 1) & Space(20), 20)
            Else
                sNombre = sNombre & Left$(Mid$(psNombre, nPosiB + 1, nPosiBI - nPosiB - 1) & Space(20), 20)
            End If
        End If
        FormatoNombreDesBcoNac = sNombre & Left$(Right$(psNombre, Len(psNombre) - nPosiC) & Space(20), 20) 'Nombres
    Else
        FormatoNombreDesBcoNac = psNombre
    End If
End Function

'**DAOR 20070209
'**Equivalencia de Tipos de Documentos SICMAT y Banco de la Nación
'**para archivo de desembolsos por corresponsalia
Private Function FormatoTipoDocDesBcoNac(psTipoDoc As String) As String
    Select Case psTipoDoc
        Case "1 ": FormatoTipoDocDesBcoNac = "01"
        Case "2 ": FormatoTipoDocDesBcoNac = "06"
        Case "3 ": FormatoTipoDocDesBcoNac = "03"
        Case "4 ": FormatoTipoDocDesBcoNac = "02"
        Case "13": FormatoTipoDocDesBcoNac = "04"
        Case Else
            FormatoTipoDocDesBcoNac = "00"
    End Select
End Function

'**DAOR 20070209
'**Función que permite transponer(Reemplazar caracteres)
Public Function CHRTRAN(psCadena As String, psChrBuscar As String, psChrReemplazo As String) As String
Dim i As Integer
Dim nLenB As Integer, nLenR As Integer, nLenC As Integer
Dim nPosiR As Integer
    nLenB = Len(psChrBuscar)
    nLenR = Len(psChrReemplazo)
    nLenC = Len(psCadena)
    If nLenC > 0 And nLenB > 0 Then
        For i = 1 To nLenB
            If i > nLenR Then
                psCadena = Replace(psCadena, Mid$(psChrBuscar, i, 1), "")
            Else
                psCadena = Replace(psCadena, Mid$(psChrBuscar, i, 1), Mid$(psChrReemplazo, i, 1))
            End If
        Next
    End If
    CHRTRAN = psCadena
End Function

'**DAOR 20070402
'**Función que Genera la Tasa de Costo Efectivo Anual (De acuerdo al SIAFC)
'Public Function GeneraTasaCostoEfectivoAnual(pdFecDesemb As Date, pnMonto As Double, pMatCalendPagos As Variant, ByVal pnTasaInter As Double) As Double 'MAVM 26112009 Se agrego el parametro pnTasaInter
Public Function GeneraTasaCostoEfectivoAnual(pdFecDesemb As Date, pnMonto As Double, pMatCalendPagos As Variant, ByVal pnTasaInter As Double, Optional psCtaCod As String = "", _
                                             Optional ByVal pnTipoPeriodo As TCalendTipoPeriodo) As Double
Dim Flujo() As Double
Dim nCuotas As Integer
Dim nDifDiasI As Integer
Dim nDifDiasF As Integer
Dim nPeriodo As Double 'Integer MAVM 20091012
Dim nTIR As Double
Dim TasaIni As Double
Dim nDifDias As Integer 'MAVM 20091012
Dim i As Integer
    
    'JUEZ 20140814 *******************************************
    If pnTipoPeriodo = FechaFija Then
        GeneraTasaCostoEfectivoAnual = GeneraTirNoPer(pdFecDesemb, pnMonto, pMatCalendPagos)
    Else
        nCuotas = UBound(pMatCalendPagos)
        If nCuotas > 1 Then
        If Len(Trim(psCtaCod)) = "18" Then
            nDifDiasI = DateDiff("d", pdFecDesemb, pMatCalendPagos(0, 0)) 'Entre Fecha de Desembolso y Primera cuota
            nDifDiasF = DateDiff("d", pMatCalendPagos(nCuotas - 2, 0), pMatCalendPagos(nCuotas - 1, 0)) 'Entre penultima y ultima cuota
            If nDifDiasF = 0 Then
                nDifDiasF = DateDiff("d", pMatCalendPagos(nCuotas - 3, 0), pMatCalendPagos(nCuotas - 2, 0)) 'Entre penultima y ante penultima cuota
            End If
        Else
            nDifDiasI = DateDiff("d", pdFecDesemb, pMatCalendPagos(0, 0)) 'Entre Fecha de Desembolso y Primera cuota
            nDifDiasF = DateDiff("d", pMatCalendPagos(nCuotas - 2, 0), pMatCalendPagos(nCuotas - 1, 0)) 'Entre penultima y ultima cuota
        End If
        Else
            'Aca falta corregir, reemplazar Now() con la fecha de desembolso
            nDifDiasI = DateDiff("d", pdFecDesemb, pMatCalendPagos(0, 0)) 'Entre Fecha de Desembolso y Primera cuota
            nDifDiasF = DateDiff("d", pdFecDesemb, pMatCalendPagos(0, 0)) 'Entre penultima y ultima cuota
        End If
        
        If nDifDiasI < 30 Then
        Dim dSobrante As Double
            dSobrante = MontoIntPerDias(pnTasaInter, 30 - nDifDiasI, pnMonto)
        End If
        
        'ALPA 20111025
        ReDim Flujo(nCuotas + 1)
        Flujo(0) = pnMonto * -1
        If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
            For i = 0 To nCuotas - 1
                If nDifDiasI < 30 And i = 0 Then
                    Flujo(i + 1) = CDbl(pMatCalendPagos(i, 3)) + CDbl(pMatCalendPagos(i, 4)) + dSobrante
                Else
                    Flujo(i + 1) = CDbl(pMatCalendPagos(i, 3)) + CDbl(pMatCalendPagos(i, 4))
                End If
            Next
        Else
            For i = 0 To nCuotas - 1
                If nDifDiasI < 30 And i = 0 Then
                    Flujo(i + 1) = pMatCalendPagos(i, 2) + dSobrante
                Else
                    Flujo(i + 1) = pMatCalendPagos(i, 2)
                End If
            Next
        End If
    
        'nTIR = Round(IRR(Flujo), 4)
        For TasaIni = 0.01 To 1 Step 0.01
            nTIR = GeneraTasaInternaRetorno(Flujo, TasaIni)
            If nTIR > 0 Then
                Exit For
            End If
        Next
        nDifDiasF = IIf(nDifDiasF = 0, 1, nDifDiasF) '**DAOR 20071121
        
        'MAVM 20091012
        nDifDias = nDifDiasF
        If nDifDias = 27 Or nDifDias = 28 Or nDifDias = 29 Or nDifDias = 30 Or nDifDias = 31 Then
            nDifDiasF = 30
        End If
        
        nPeriodo = 12 / (nDifDiasF / 30) 'MAVM 20091012
        'nPeriodo = Round(12 / (nDifDiasF / 30), 0)
        
        
        'Comentado por MAVM 20091012
        'If nCuotas <= 6 And nDifDiasF > 31 Then
            GeneraTasaCostoEfectivoAnual = Round(((1 + nTIR) ^ nPeriodo - 1) * 100, 2)
        'Else
            'GeneraTasaCostoEfectivoAnual = Round(((1 + nTIR) ^ 12 - 1) * 100, 2)
        'End If
    End If
    'END JUEZ ************************************************
    
End Function
'**DAOR
Function GeneraTasaInternaRetorno(Flujo() As Double, TasaEsp As Double) As Double
On Error GoTo ErrorGeneraTasaInternaRetorno
    GeneraTasaInternaRetorno = IRR(Flujo, TasaEsp)
     Exit Function
ErrorGeneraTasaInternaRetorno:
    GeneraTasaInternaRetorno = 0
End Function

'**DAOR 20070430, Procedimiento que actualiza el estado de creditos que ya fueron
'**enviados en el archivo de corresponsalia
Public Sub ActualizaEstadoDeCredDesBcoNacEnviadosEnCorres(ByVal pdFechaProceso As Date, Optional ByRef psMensaje As String, Optional ByRef psCodCliCMACMaynas As String)
Dim sSql As String
Dim loConecta As COMConecta.DCOMConecta
    sSql = "update ColocConvBcoNac set nEstado=1 Where  nEstado=0"
    Set loConecta = New COMConecta.DCOMConecta
        loConecta.AbreConexion
        loConecta.Ejecutar sSql
        loConecta.CierraConexion
    Set loConecta = Nothing
End Sub

'**DAOR 20070505
'**Genera el contenido del archivo de pagos por corresponsalia
'**que será enviado al Banco de la Nación
Public Function GenerarArchivoPagosPorCorresponsalia(ByVal pdFechaProceso As Date, Optional ByRef psMensaje As String, Optional ByRef psCodCliCMACMaynas As String) As String
Dim loConstSis As COMDConstSistema.NCOMConstSistema
Dim loCreditos As COMDCredito.DCOMCreditos
Dim lrPagBcoNac As ADODB.Recordset
Dim loFun As COMFunciones.FCOMImpresion
Dim lsCadFile As String
Dim lsCadCabFile As String
Dim sCtaMN  As String
Dim sCodigoBanco As String
Dim nCont As Long
Dim sNumTotalRegistros As String
Dim nTotalSoles As Double
Dim nTotalDolares As Double

Dim oParametros As COMDCredito.DCOMParametro
Dim nPorComiCorrespMN As Double
Dim nPorComiCorrespME As Double
Dim nMonMinComiCorrespMN As Double
Dim nMonMaxComiCorrespMN As Double
Dim nMonMinComiCorrespME As Double
Dim nFactorCorresp As Double
Dim nMonMinComi As Double
Dim nMonMaxComi As Double
Dim nComiCorresp As Double

Dim nImporte As Double
Dim sTemp As String
Dim oITF As COMDConstSistema.FCOMITF
Dim nPorItf As Double
Dim nITF As Double

Set loCreditos = New COMDCredito.DCOMCreditos
Set lrPagBcoNac = loCreditos.RecuperaCreditosParaPagosEnBcoNac(pdFechaProceso)
Set loCreditos = Nothing

    If lrPagBcoNac Is Nothing Or (lrPagBcoNac.BOF And lrPagBcoNac.EOF) Then
        psMensaje = " No existen créditos para generar el archivo "
        Exit Function
    Else
        psMensaje = ""
        sCodigoBanco = "0085"
        
        nFactorCorresp = 1
        nMonMinComi = 0
        nMonMaxComi = 0
        
        Set oITF = New COMDConstSistema.FCOMITF
            oITF.fgITFParametros
            nPorItf = oITF.gnITFPorcent
                    
        Set oParametros = New COMDCredito.DCOMParametro
        nPorComiCorrespMN = oParametros.RecuperaValorParametro(gColPParamPorComiCorresponsaliaMN)
        nPorComiCorrespME = oParametros.RecuperaValorParametro(gColPParamPorComiCorresponsaliaME)
        nMonMinComiCorrespMN = oParametros.RecuperaValorParametro(gColPParamMonMinCobroCorresponsaliaMN)
        nMonMaxComiCorrespMN = oParametros.RecuperaValorParametro(gColPParamMonMaxCobroCorresponsaliaMN)
        nMonMinComiCorrespME = oParametros.RecuperaValorParametro(gColPParamMonMinCobroCorresponsaliaME)
        Set oParametros = Nothing

        nCont = 0
        sNumTotalRegistros = Right$("0000000" & CStr(lrPagBcoNac.RecordCount), 7)
        With lrPagBcoNac
            While Not lrPagBcoNac.EOF
                nImporte = Round(!nCapital + !nInteres + IIf(!nMora < 0, 0, !nMora) + !nGastos, 2)
                If nImporte > 0 Then
                    'If !cCodAgeBcoNac <> "" Then
                        If Mid$(!cCtaCod, 9, 1) = "1" Then 'MN
                            nFactorCorresp = nPorComiCorrespMN / 100
                            nMonMinComi = nMonMinComiCorrespMN
                            nMonMaxComi = nMonMaxComiCorrespMN
                        Else
                            nFactorCorresp = nPorComiCorrespME / 100
                            nMonMinComi = nMonMinComiCorrespME
                            nMonMaxComi = 9999999999#
                        End If
                        nComiCorresp = Round(nImporte * nFactorCorresp, 2)
                        nComiCorresp = IIf(nComiCorresp < nMonMinComi, nMonMinComi, IIf(nComiCorresp > nMonMaxComi, nMonMaxComi, nComiCorresp))
                    'Else
                    '    nComiCorresp = 0
                    'End If
                    nImporte = nImporte + nComiCorresp
                    nITF = nImporte * nPorItf
                    nITF = oITF.CortaDosITF(nITF)
                    nImporte = nImporte + nITF
                    
                
                    lsCadFile = lsCadFile & sCodigoBanco 'Codigo de Banco
                    'lsCadFile = lsCadFile & Mid$(!cCtaCod, 6, 1) & Right$(!cCtaCod, 11) 'Numero de Credito o Documento
                    lsCadFile = lsCadFile & Mid$(!cCtaCod, 4, 3) & Mid$(!cCtaCod, 8, 2) & Mid$(!cCtaCod, 11, 7) 'Numero de Credito o Documento
                    lsCadFile = lsCadFile & Right$("0000" & CStr(!nCuota), 4) ' Numero de Cuota
                    lsCadFile = lsCadFile & Format(!dVenc, "yyyymmdd") 'Fecha de Vencimiento
                    lsCadFile = lsCadFile & IIf(Mid$(!cCtaCod, 9, 1) = "1", "SOL", "USD") 'Moneda
                    lsCadFile = lsCadFile & Right$("000000000000000" & CStr(nImporte * 100), 15) 'Importe
                    lsCadFile = lsCadFile & Left$(!cPersNombre & Space(30), 30) 'Cliente
                    lsCadFile = lsCadFile & "0" ' Cobro de gastos (gTasa)
                    lsCadFile = lsCadFile & Right$("000000000000000", 15) '& CStr(!nMora * 100), 15) 'mora
                    lsCadFile = lsCadFile & Right$("000000000000000", 15) ' & CStr(!nInteres * 100), 15) 'interes
                    lsCadFile = lsCadFile & Right$("000000000000000", 15) ' & CStr(!nGastos * 100), 15) 'gastos
                    lsCadFile = lsCadFile & "0" & Mid$(!cCtaCod, 4, 2) 'Oficina
                    lsCadFile = lsCadFile & "   " & Chr(13) & Chr(10)
                    
                    If Mid$(!cCtaCod, 9, 1) = "1" Then
                        nTotalSoles = nTotalSoles + nImporte
                    Else
                        nTotalDolares = nTotalDolares + nImporte
                    End If
                    nCont = nCont + 1
                    If nCont Mod 500 = 0 Then
                        sTemp = sTemp & lsCadFile
                        lsCadFile = ""
                    End If
                End If
                lrPagBcoNac.MoveNext
            Wend
            sTemp = sTemp & lsCadFile
        End With
        nTotalSoles = Round(nTotalSoles, 2)
        nTotalDolares = Round(nTotalDolares, 2)
        '**Cabecera********************************************************
        lsCadCabFile = "9999" 'Cpdogp de Banco
        'lsCadCabFile = lsCadCabFile & Right$("000000000000" & sNumTotalRegistros, 12)
        lsCadCabFile = lsCadCabFile & Right$("000000000000" & CStr(nCont), 12)
        lsCadCabFile = lsCadCabFile & Format(pdFechaProceso, "yyyymmdd")
        lsCadCabFile = lsCadCabFile & Right$("000000000000000" & CStr(nTotalSoles * 100), 15) & "     "
        lsCadCabFile = lsCadCabFile & Right$("000000000000000" & CStr(nTotalDolares * 100), 15)
        '*****************************************************************
        
        Set oITF = Nothing
    End If
    GenerarArchivoPagosPorCorresponsalia = sTemp & lsCadCabFile

    lrPagBcoNac.Close
Set lrPagBcoNac = Nothing
End Function

'**DAOR 20070505
'**Genera el contenido del archivo de recuperaciones de créditos por corresponsalia
'**que será enviado al Banco de la Nación
Public Function GenerarArchivoRecuperacionesPorCorresponsalia(ByVal pdFechaProceso As Date, Optional ByRef psMensaje As String, Optional ByRef psCodCliCMACMaynas As String) As String
Dim loConstSis As COMDConstSistema.NCOMConstSistema
Dim loCreditos As COMDCredito.DCOMCreditos
Dim lrRecBcoNac As ADODB.Recordset
Dim loFun As COMFunciones.FCOMImpresion
Dim lsCadFile As String
Dim lsCadCabFile As String
Dim sCodCliCMACMaynas As String
Dim sCtaMN  As String
Dim sCodigoBanco As String
Dim sCodigoPrestamo As String
Dim sTipoRegistro As String
Dim sTipoSituacion As String
Dim nCont As Integer
Dim sNumTotalRegistros As String
Dim nTotalSoles As Double
Dim nTotalDolares As Double
Dim sNombreBen As String
Dim sTipoTasa As String

Dim nImporte As Double
Dim nMora As Double
Dim sTemp As String
Dim oITF As COMDConstSistema.FCOMITF
Dim nPorItf As Double
Dim nITF As Double

Set loCreditos = New COMDCredito.DCOMCreditos
Set lrRecBcoNac = loCreditos.RecuperaCreditosParaPagosEnBcoNac_SoloConvBcoNac(pdFechaProceso)
Set loCreditos = Nothing

    If lrRecBcoNac Is Nothing Or (lrRecBcoNac.BOF And lrRecBcoNac.EOF) Then
        psMensaje = " No existen créditos para generar el archivo de recuperaciones "
        Exit Function
    Else
        psMensaje = ""
        '**Cargar parametros*************************************
        Set loConstSis = New COMDConstSistema.NCOMConstSistema
            sCodCliCMACMaynas = loConstSis.LeeConstSistema(gDesBcoNacCodCliCMACMaynas)
            psCodCliCMACMaynas = sCodCliCMACMaynas
            sCtaMN = loConstSis.LeeConstSistema(gRecBcoNacCtaMN)
            sCodigoBanco = loConstSis.LeeConstSistema(gDesBcoNacCodigoBanco)
            sTipoRegistro = loConstSis.LeeConstSistema(gRecBcoNacTipRegRecupIngresoRecup)
            sTipoSituacion = loConstSis.LeeConstSistema(gRecBcoNacTipSitContPendienteRecup)
            sTipoTasa = "0"
        Set loConstSis = Nothing
        '********************************************************
        Set oITF = New COMDConstSistema.FCOMITF
            oITF.fgITFParametros
            nPorItf = oITF.gnITFPorcent
            
        nCont = 1
        sNumTotalRegistros = Right$("0000000" & CStr(lrRecBcoNac.RecordCount), 7)
        With lrRecBcoNac
            While Not lrRecBcoNac.EOF
                nMora = IIf(!nMora < 0, 0, !nMora)
                nImporte = Round(!nCapital + !nInteres + nMora + !nGastos, 2)
                nITF = nImporte * nPorItf
                nITF = oITF.CortaDosITF(nITF)
                
                nImporte = nImporte + nITF 'DAOR
                
                sNombreBen = FormatoNombreDesBcoNac(!cPersNombre)
                sNombreBen = CHRTRAN(sNombreBen, "áéíóúñûÁÉÍÓÚÑÛ-_'", "aeiounuAEIOUNU   ")
                                                           
                'lsCadFile = lsCadFile & Mid$(!cCtaCod, 6, 1) & Right$(!cCtaCod, 11) 'Numero de Credito o Documento
                lsCadFile = lsCadFile & Mid$(!cCtaCod, 4, 3) & Mid$(!cCtaCod, 8, 2) & Mid$(!cCtaCod, 11, 7) 'Numero de Credito o Documento
                lsCadFile = lsCadFile & Right$("0000" & CStr(!nCuota), 4) ' Numero de Cuota
                lsCadFile = lsCadFile & sTipoSituacion 'Situacion del Contrato (01)Pendiente de Recuperación
                lsCadFile = lsCadFile & Mid$(!cCtaCod, 9, 1) 'Moneda
                lsCadFile = lsCadFile & sNombreBen 'Nombre de beneficiario
                lsCadFile = lsCadFile & Right$("000000000000000" & CStr(nImporte * 100), 15) 'Importe
                lsCadFile = lsCadFile & Format(!dVenc, "yyyymmdd") 'Fecha de Vencimiento
                lsCadFile = lsCadFile & sTipoTasa
                lsCadFile = lsCadFile & Right$("000000000000000", 15) 'Factor Mora
                lsCadFile = lsCadFile & Right$("000000000000000", 15) 'Factor Int Compensatorio
                lsCadFile = lsCadFile & Replace(Format(!nGastos, "0000000000000.00"), ".", "") 'Importe de gastos
                lsCadFile = lsCadFile & Right$("00000000000" & sCtaMN, 11) 'Cta. cte. Donde se abonan las recuperaciones
                lsCadFile = lsCadFile & Right$("000000000000" & CStr(!nCuota), 12) 'Orden de cobro
                lsCadFile = lsCadFile & Replace(Format(!nSaldo, "0000000000000.00"), ".", "") 'Importe del saldo
                lsCadFile = lsCadFile & Replace(Format(!nInteres, "0000000000000.00"), ".", "") 'Importe del int. compensatorio
                lsCadFile = lsCadFile & Replace(Format(!nMora, "0000000000000.00"), ".", "") 'Importe del int. moratorio
                lsCadFile = lsCadFile & Replace(Format(nITF, "0000000000000.00"), ".", "") 'Importe del ITF
                lsCadFile = lsCadFile & Space(49) & Space(47)
                lsCadFile = lsCadFile & Space(2) & Chr(13) & Chr(10) ' Sub código mi banco
                
                               
                If Mid$(!cCtaCod, 9, 1) = "1" Then
                    nTotalSoles = nTotalSoles + nImporte
                Else
                    nTotalDolares = nTotalDolares + nImporte
                End If
                nCont = nCont + 1
                
                lrRecBcoNac.MoveNext
            Wend
        End With
        lsCadCabFile = Right$("000" & sCodigoBanco, 3)
        lsCadCabFile = lsCadCabFile & Right$("0000" & sCodCliCMACMaynas, 4)
        lsCadCabFile = lsCadCabFile & sNumTotalRegistros
        lsCadCabFile = lsCadCabFile & Replace(Format(nTotalSoles, "0000000000000.00"), ".", "") 'Importe total soles
        lsCadCabFile = lsCadCabFile & Replace(Format(nTotalDolares, "0000000000000.00"), ".", "") 'Importe total dolares
        lsCadCabFile = lsCadCabFile & Format(pdFechaProceso, "yyyymmdd")
        lsCadCabFile = lsCadCabFile & Right$("00" & sTipoRegistro, 2)
        lsCadCabFile = lsCadCabFile & Space(226) & Chr(13) & Chr(10)
        
        Set oITF = Nothing
    End If
    GenerarArchivoRecuperacionesPorCorresponsalia = lsCadCabFile & lsCadFile
    lrRecBcoNac.Close
Set lrRecBcoNac = Nothing
End Function


'**DAOR 20070926, Asignación de gasto en lote a la cuota pendiente de pago
'Se consideran los parametros Rango inicial y final para posteriores mejoras
Public Sub AsignarGastoLoteCreditoACuotaPendienteTotal(ByVal pnRanIni As Double, ByVal pnRanFin As Double, _
                                        ByVal pMatCuentas As Variant, _
                                        ByVal psCodGasto As String, ByVal pnValorGasto As Double, _
                                        ByVal pnTipoValor As Integer, _
                                        ByVal pbAplTipCamb As Boolean, ByVal pnValorGastoATipCamb As Double)

Dim i As Integer
On Error GoTo ErrorAsignarGastoLoteCreditoACuotaPendienteTotal
   
    For i = 0 To UBound(pMatCuentas, 1) - 1
        Call AsignarGastoLoteCreditoACuotaPendiente(pnRanIni, pnRanFin, gColocCalendAplCuota, _
                                 pMatCuentas(i, 0), psCodGasto, pnValorGasto, pnTipoValor, pbAplTipCamb, pnValorGastoATipCamb, CInt(pMatCuentas(i, 1)), CInt(pMatCuentas(i, 2)))
    Next i
    
    Exit Sub

ErrorAsignarGastoLoteCreditoACuotaPendienteTotal:
    Err.Raise Err.Number, "Error En Proceso AsignarGastoLoteCreditoACuotaPendienteTotal", Err.Description
End Sub

'**DAOR 20070926,Registro de asignación de gasto a cuota pendiente
Public Sub AsignarGastoLoteCreditoACuotaPendiente(ByVal pnRanIni As Double, ByVal pnRanFin As Double, _
    ByVal pnAplicado As ColocCalendApl, ByVal psCtaCod As String, ByVal psCodGasto As String, _
    ByVal pnValorGasto As Double, ByVal pnTipoValor As Integer, _
    ByVal pbAplTipCamb As Boolean, ByVal pnValorGastoATipCamb As Double, _
    Optional pnNroCalen As Integer = 0, Optional pnNroCuota As Integer = 0)

Dim oDCred As COMDCredito.DCOMCredito
Dim oBase As COMDCredito.DCOMCredActBD
Dim R As ADODB.Recordset
Dim nMonto As Double
Dim pbTran As Boolean
Dim lnNroCalen As Integer, lnNroCuota As Integer

    On Error GoTo ErrorAsignarGastoLoteCreditoACuotaPendiente
    pbTran = False
    If pnNroCalen = 0 And pnNroCuota = 0 Then
        Set oDCred = New COMDCredito.DCOMCredito
        Set R = oDCred.RecuperaCuotaPendienteParaAsignarGasto(pnRanIni, pnRanFin, pnAplicado, psCtaCod, psCodGasto)
        Set oDCred = Nothing
        If Not R.EOF Or Not R.BOF Then
            lnNroCalen = R!nNroCalen
            lnNroCuota = R!nCuota
        End If
        R.Close
        Set R = Nothing
    Else
        lnNroCalen = pnNroCalen
        lnNroCuota = pnNroCuota
    End If
    
    Set oBase = New COMDCredito.DCOMCredActBD
    Call oBase.dBeginTrans
    pbTran = True
    'If lnNroCalen > 0 Then
        If pnTipoValor = 1 Then 'Tipo de gasto valor
            If Mid$(psCtaCod, 9, 1) = "2" And pbAplTipCamb = True Then
                nMonto = pnValorGastoATipCamb
            Else
                nMonto = pnValorGasto
            End If
        End If
        'If nMonto > 0 Then
            Call oBase.dInsertColocCalendDet(psCtaCod, lnNroCalen, pnAplicado, lnNroCuota, CInt(psCodGasto), nMonto, 0, "", False)
        'End If
    'End If
    Call oBase.dCommitTrans
    Set oBase = Nothing
    Exit Sub

ErrorAsignarGastoLoteCreditoACuotaPendiente:
    If pbTran Then
        Call oBase.dRollbackTrans
    End If
    Err.Raise Err.Number, "Error En Proceso: AsignarGastoLoteCreditoACuotaPendiente", Err.Description

End Sub
Public Function IngresaDatosMatrix(ByVal nPost As Integer, ByRef MatrixHojaETemp As Variant, ByVal val1 As String, ByVal val2 As String, ByVal val3 As String, ByVal val4 As String, ByVal val5 As String, ByVal val6 As String, ByVal val7 As String, Optional nRedin As Integer = 1) As Variant
If nRedin = 1 Then
    ReDim Preserve MatrixHojaETemp(1 To 7, 0 To nPost + 1)
End If
If val1 <> "" Then
    MatrixHojaETemp(1, nPost) = val1
End If
If val2 <> "" Then
    MatrixHojaETemp(2, nPost) = val2
End If
MatrixHojaETemp(3, nPost) = val3
MatrixHojaETemp(4, nPost) = val4
MatrixHojaETemp(5, nPost) = val5
MatrixHojaETemp(6, nPost) = val6
MatrixHojaETemp(7, nPost) = val7
IngresaDatosMatrix = MatrixHojaETemp
End Function
'**ALPA************************23/04/2008*************************************************
Public Function GeneraMatrixEvaluacion(ByRef rs As ADODB.Recordset, ByRef cNomCliente As String, ByRef cCodCliente As String, ByRef cRucC As String, ByRef cDNIC As String, ByRef sEmpresa As String, ByRef sOficina As String, ByRef dFecha As Date, ByVal gsCodUser As String, Optional nCuota As Double = 1, Optional nPropuesta As Double = 1, Optional ntim As Double = 1, Optional nPlazo As Integer = 1, Optional nTipoEval As Integer = 2, Optional nPrevio As Integer = 1, Optional sAnalista As String = "", Optional psCtaCod As String = "", Optional psNumfuente As String = "") As String
    
    Dim MatrixHojaETemp() As String
    ReDim Preserve MatrixHojaETemp(1 To 7, 0 To 0)
    Dim PosicionX As Integer
    Dim PosicionY As Integer
    Dim PosicionX2 As Integer
    Dim Contador As Integer
    Dim contador2 As Integer
    Dim contador3 As Integer
    Dim contador4  As Integer
    Dim fSumaIte As Double
    
    Dim fSumaSubnP As Double
    Dim fSumaSubnN As Double
    Dim fSumaSubnU As Double
    Dim fSumaSubnT As Double
    
    Dim fSumaSubnP2 As Double
    Dim fSumaSubnN2 As Double
    Dim fSumaSubnU2 As Double
    Dim fSumaSubnT2 As Double
    '******* Sumatoria de PosYs
    Dim fSumaSubnPG1 As Double
    Dim fSumaSubnNG1 As Double
    Dim fSumaSubnUG1 As Double
    Dim fSumaSubnTG1 As Double
    '**************************
    '******* Sumatoria de PosYs2
    Dim fSumaSubnPG2 As Double
    Dim fSumaSubnNG2 As Double
    Dim fSumaSubnUG2 As Double
    Dim fSumaSubnTG2 As Double
    '**************************
    Dim fCostVe As Double
    Dim PosY As Double
    Dim PosY2 As Double
    Dim PosYs As Double 'Guarda Posicion de Codigo de 4 caracteres
    Dim PosYs2 As Double ' Guarda Posicion de 1001
    Dim PosicionXs As Integer
    Dim PosicionX2s As Integer
    Dim nTipoIm As Integer
    Dim nSATNe As Double
    Dim nSATEm As Double
    Dim nSATTo As Double
    Dim nMargenB As Double
    Dim nIngreT As Double
    Dim nEgresT As Double
    Dim nInNeto As Double
    Dim nvalorTemp As Double
    Dim d100408 As Double
    Dim d100508 As Double
    Dim dPasTotal As Double
    Dim dPatrimonio As Double
    Dim dPatrimoniot As Double
    Dim dEndeudam As Double
    Dim nEndeudCr As Double
    Dim dActCte As Double
    Dim dPasCte As Double
    Dim dLiquidez As Double
    Dim dRentabilib As Double
    Dim dCapacidad As Double
    Dim nExcedente As Double
    Dim nPosEnde As Integer
    Dim cCodEnde As String
    Dim cDesEnde As String
    'Dim nPosEnde As String
    cCodEnde = ""
    cDesEnde = ""
    nPosEnde = 0
    dCapacidad = 0
    dPatrimoniot = 0
    nExcedente = 1
    d100408 = 0
    d100508 = 0
    dActCte = 0
    dPasCte = 0
    nTipoIm = 3
    Contador = 6
    contador2 = 6
    nEndeudCr = 0
    nPost = 0
    
    'RECO20140619*********************************
    Dim oCrDoc As New COMDCredito.DCOMCredDoc
    Dim lrDatosRatiosFI As ADODB.Recordset
        
    Set lrDatosRatiosFI = New ADODB.Recordset
    Set lrDatosRatiosFI = oCrDoc.ObtieneRatiosFI(psNumfuente, psCtaCod)
    
    Dim lnliquidez As Double
    Dim lnEndeudamiento As Double
    Dim lnRentabPatrimonial As Double
    Dim lnCapacidadPago As Double
    Dim lnPatrimonio As Double
    Dim lnInventario As Double
    Dim lnExcedente As Double
    Dim lnCuota As Double
    Dim lnRemNeta As Double
    Dim lnEgresos As Double
    
    If Not (lrDatosRatiosFI.EOF And lrDatosRatiosFI.BOF) Then
        Dim nIndexRatios As Integer
        For nIndexRatios = 0 To lrDatosRatiosFI.RecordCount - 1
            If lrDatosRatiosFI!nValor = 1 Then
                lnInventario = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 2 Then
                lnExcedente = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 3 Then
                lnCuota = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 4 Then
                lnPatrimonio = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 5 Then
                lnEndeudamiento = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 6 Then
                lnliquidez = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 9 Then
                lnRemNeta = lrDatosRatiosFI!nMonto
            ElseIf lrDatosRatiosFI!nValor = 10 Then
                lnEgresos = lrDatosRatiosFI!nMonto
            End If
            lrDatosRatiosFI.MoveNext
        Next
        If Val(Mid(psCtaCod, 6, 3)) = 704 Then
            lnExcedente = lnRemNeta - lnEgresos
        End If
        lnCapacidadPago = lnCuota / IIf(lnExcedente = 0, 1, lnExcedente)
        lnRentabPatrimonial = IIf(lnExcedente = 0, 1, lnExcedente) / IIf(lnPatrimonio = 0, 1, lnPatrimonio)
        lnEndeudamiento = lnEndeudamiento / IIf(lnPatrimonio = 0, 1, lnPatrimonio)
    End If
    'RECO FIN*************************************
    
     Do While Not rs.EOF
        If Left(Trim(rs!cCodHojEval), 2) = "10" Then
            Contador = Contador + 1
            If Contador = 7 Then
                If Trim(rs!cCodHojEval) = "10" Then
                    nPos1 = nPost + 1
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, rs!cCodHojEval, rs!CDescripcion, "", "", "", 1, 1)
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "0", "", "", "", "", 1, 1)
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "0", "", "PERSONAL", "EMPRESARIAL", "TOTAL", 1, 1)
                End If
            Else
                fSumaIte = rs!nPersonal + rs!nNegocio
                fSumaSubnP = fSumaSubnP + rs!nPersonal
                fSumaSubnN = fSumaSubnN + rs!nNegocio
                fSumaSubnT = fSumaSubnT + fSumaIte
                fSumaSubnPG1 = fSumaSubnPG1 + rs!nPersonal
                fSumaSubnNG1 = fSumaSubnNG1 + rs!nNegocio
                fSumaSubnTG1 = fSumaSubnTG1 + fSumaIte
                
                If Len(Trim(rs!cCodHojEval)) = 6 And (Left(Trim(rs!cCodHojEval), 4) = "1001" Or Left(Trim(rs!cCodHojEval), 4) = "1002") Then
                    fSumaSubnP2 = fSumaSubnP2 + rs!nPersonal
                    fSumaSubnN2 = fSumaSubnN2 + rs!nNegocio
                    fSumaSubnT2 = fSumaSubnT2 + rs!nNegocio
                End If
                
                If Trim(rs!cCodHojEval) = "1004" Then
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "ACTIVO TOTAL", fSumaSubnPG1, fSumaSubnNG1, fSumaSubnTG1, 1, 1)
                    nSATNe = fSumaSubnPG1
                    nSATEm = fSumaSubnNG1
                    nSATTo = fSumaSubnTG1
                    fSumaSubnPG1 = 0
                    fSumaSubnNG1 = 0
                    fSumaSubnTG1 = 0
                    Contador = Contador + 1
                End If
                If (rs!nNegocio <> 0 Or rs!nPersonal <> 0 Or rs!nNegocio <> 0) Or Len(Trim(rs!cCodHojEval)) = 4 Then
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, CStr(rs!nPersonal), CStr(rs!nNegocio), CStr(fSumaIte), 1, 1)
                    If Trim(rs!cCodHojEval) = "100408" Then
                        d100408 = fSumaIte
                    ElseIf Trim(rs!cCodHojEval) = "100408" Then
                        d100508 = fSumaIte
                    End If
                End If
                If Len(Trim(rs!cCodHojEval)) = 4 Then
                If PosY <> 0 Then
                    If Trim(rs!cCodHojEval) <> "1002" Then
                        MatrixHojaETemp = IngresaDatosMatrix(PosYs, MatrixHojaETemp, "", "", CStr(fSumaSubnP), CStr(fSumaSubnN), CStr(fSumaSubnT), 1, 1, 0)
                        If Trim(rs!cCodHojEval) = "1005" Then
                        dPasCte = fSumaSubnT
                        End If
                        If Trim(rs!cCodHojEval) = "1003" Then
                            dActCte = fSumaSubnN2 + fSumaSubnP2
                            MatrixHojaETemp = IngresaDatosMatrix(PosYs2, MatrixHojaETemp, "", "", CStr(fSumaSubnP2), CStr(fSumaSubnN2), CStr(fSumaSubnN2 + fSumaSubnP2), 1, 1, 0)
                        End If
                    End If
                End If
                    If Trim(rs!cCodHojEval) = "1001" Then
                        PosY2 = PosY
                        PosYs2 = nPost
                    End If
                    PosY = 0
                    If Trim(rs!cCodHojEval) < "1004" Then
'                        fSumaSubnP2 = fSumaSubnP2 + fSumaSubnP
'                        fSumaSubnN2 = fSumaSubnN2 + fSumaSubnN
'                        fSumaSubnT2 = fSumaSubnT2 + fSumaSubnT
                    End If
                    fSumaSubnP = 0
                    fSumaSubnN = 0
                    fSumaSubnT = 0
                PosY = Contador
                PosYs = nPost
                End If
            End If
        End If
         If Left(Trim(rs!cCodHojEval), 2) = "20" Then
          contador2 = contador2 + 1
         If contador2 = 7 Then
                If Trim(rs!cCodHojEval) = "20" Then
                    MatrixHojaETemp = IngresaDatosMatrix(PosYs, MatrixHojaETemp, "", "", CStr(fSumaSubnP), CStr(fSumaSubnN), CStr(fSumaSubnT), 1, 1, 0)
                    PosY = 0
                    PosYs = 0
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "PASIVO TOTAL", CStr(fSumaSubnPG1), CStr(fSumaSubnNG1), CStr(fSumaSubnTG1), 1, 1)
                    dPasTotal = fSumaSubnTG1
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "PATRIMONIO", CStr(nSATNe - fSumaSubnPG1), CStr(nSATEm - fSumaSubnNG1), CStr(nSATTo - fSumaSubnTG1), 1, 1)
                    dPatrimoniot = nSATTo - fSumaSubnTG1
                    dPatrimonio = nSATEm - fSumaSubnNG1
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "TOTAL PASIVO Y PATRIMONIO", CStr((nSATNe - fSumaSubnPG1) + fSumaSubnPG1), CStr((nSATEm - fSumaSubnNG1) + fSumaSubnNG1), CStr((nSATTo - fSumaSubnTG1) + fSumaSubnTG1), 1, 1)
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "", "", "", "", 2, 2)
                    nPost = nPost + 1
                    nPos2 = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, rs!cCodHojEval, rs!CDescripcion, "", "", "", 2, 2)
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "0", "", "", "", "", 2, 2)
                End If
            Else
            If Trim(rs!cCodHojEval) = "2003" Then
                nPost = nPost + 1
                MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "MARGEN BRUTO", CStr(fSumaSubnU - fCostVe), "", "", 2, 2)
                nMargenB = fSumaSubnU - fCostVe
                contador2 = contador2 + 1
'                nPost = nPost + 1
'                MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "0", "", "", "", "", 2, 2)
            End If
                If (rs!nUnico <> 0) Or Len(Trim(rs!cCodHojEval)) = 4 And Trim(rs!cCodHojEval) <> "2002" Then
                nPost = nPost + 1
                MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, CStr(rs!nUnico), "", "", 2, 2)
                End If
             If Trim(rs!cCodHojEval) <> "200104" And Trim(rs!cCodHojEval) <> "200201" Then
                fSumaSubnU = fSumaSubnU + rs!nUnico
             End If
             fSumaSubnUG1 = fSumaSubnUG1 + rs!nUnico
             If Len(Trim(rs!cCodHojEval)) = 4 And Trim(rs!cCodHojEval) <> "2002" Then
                If PosYs <> 0 Then
                    MatrixHojaETemp = IngresaDatosMatrix(PosYs, MatrixHojaETemp, "", "", CStr(fSumaSubnU), "", "", 2, 2, 0)
                    fSumaSubnU = 0
                End If
                 PosY = contador2
                 PosYs = nPost
             End If
              If Trim(rs!cCodHojEval) = "200201" Then
                    fCostVe = rs!nUnico
                End If
            End If
         End If
         '**Inicio 30
         If Left(Trim(rs!cCodHojEval), 2) = "30" Then
                contador4 = contador4 + 1
                If contador4 = 1 Then
                    PosicionX = 7
                   contador3 = Contador + 6
                Else
                   contador3 = contador3 + 1
                End If
            
               If contador4 = 1 Then
                   If Trim(rs!cCodHojEval) = "30" Then
                        MatrixHojaETemp = IngresaDatosMatrix(PosYs, MatrixHojaETemp, "", "", CStr(fSumaSubnU), "", "", 2, 2, 0)
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "INGRESO NETO", CStr(nMargenB - fSumaSubnU), "", "", 2, 2) '
                        nInNeto = nMargenB - fSumaSubnU
                        fSumaSubnU = 0
                        fSumaSubnUG1 = 0
                        PosY = 0
                        PosYs = 0
                        nPos3 = nPost + 1
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, "", "", "", 3, 3)
                   End If
                Else
                
                    If Trim(rs!cCodHojEval) = "3002" Then
                    nPost = nPost + 1
                    PosicionX2 = PosicionX
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "INGRESO TOTALES", CStr(nInNeto + fSumaSubnU), "", "", 3, 3)
                    nIngreT = fSumaSubnU
'                    nPost = nPost + 1
'                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "", "", "", "", 3, 3)
                    PosicionXs = nPost
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "", "", "", "", 3, 3)
                    nTipoIm = 4
                     contador3 = Contador + 7
                     PosicionX = 2
                     fSumaSubnU = 0
                End If
                If (rs!nUnico <> 0) Or Len(Trim(rs!cCodHojEval)) = 4 Or Trim(rs!cCodHojEval) = "300101" Then
                    nPost = nPost + 1
                    'nvalorTemp
                    nvalorTemp = rs!nUnico
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, CStr(nvalorTemp), "", "", 3, nTipoIm)
                    If Trim(rs!cCodHojEval) = "3001" Then
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "300101", "INGRESO NETO-EMPRESA", CStr(nInNeto), "", "", 3, nTipoIm)
                    End If
                End If
                    fSumaSubnU = fSumaSubnU + rs!nUnico
                    fSumaSubnUG1 = fSumaSubnUG1 + rs!nUnico
         End If
         'End 30
         End If
         'Inicio 40
         If nPrevio = 0 Then
             If Left(Trim(rs!cCodHojEval), 2) = "40" Then
                If Trim(rs!cCodHojEval) = "40" Then
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "EGRESO TOTALES", CStr(fSumaSubnU), "", "", 3, 4)
                    nEgresT = fSumaSubnU
                    nPost = nPost + 1
                    MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "EXCEDENTE MENSUAL", CStr((nIngreT + nInNeto) - nEgresT), "", "", 3, 3)
                    nExcedente = (nIngreT + nInNeto) - nEgresT
                     nPost = nPost + 1
                     nPos4 = PosicionXs + 1
                     MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "", "", "", "", 3, 3)
                     nPost = nPost + 1
                     MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, "", "", "", 4, 5)
                     nPost = nPost + 1
                     MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "", "", "", "", 3, 3)
                ElseIf Len(Trim(rs!cCodHojEval)) = 6 Then
                    If nPlazo = 0 Then
                    nPlazo = 30
                    End If
                    If Trim(rs!cCodHojEval) = "400205" Then
                        nEndeudCr = rs!nUnico
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, nEndeudCr, "", "", 4, 5)
                        '***
                         If dPatrimoniot > 0 Then
                            'dEndeudam = (dPasTotal - d100408 - d100508 + nEndeudCr) / dPatrimoniot
                            'RECO20140620*********************
                            dEndeudam = lnEndeudamiento
                            'RECO FIN*************************
                        End If
                        '***
                    End If
                    If Trim(rs!cCodHojEval) = "400101" Then
'                        If dPatrimoniot > 0 Then
'                            dEndeudam = (dPasTotal - d100408 - d100508 + nEndeudCr) / dPatrimoniot
'                        End If
                        'dEndeudam = 0
                        'RECO20140620*********************
                        dEndeudam = lnEndeudamiento
                        'RECO FIN*************************
                        nPost = nPost + 1
                        nPosEnde = nPost
                        cCodEnde = Trim(rs!cCodHojEval)
                        cDesEnde = rs!CDescripcion
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, dEndeudam * 100, "", "", 4, 5)
                        
                    End If
                    If Trim(rs!cCodHojEval) = "400104" Then
                             If dPasCte > 0 Then
                                'RECO20140620*********************
                                'dLiquidez = (dActCte) / dPasCte
                                dLiquidez = lnliquidez
                                'RECO FIN*************************
                            End If
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, dLiquidez, "", "", 4, 5)
                    End If
                    If Trim(rs!cCodHojEval) = "400103" Then
                        If dPatrimonio > 0 Then
                            'RECO20140620*********************
                            'dRentabilib = (nInNeto) / dPatrimonio
                            dRentabilib = lnRentabPatrimonial
                            'RECO FIN*************************
                        End If
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, dRentabilib * 100, "", "", 4, 5)
                    End If
                    If Trim(rs!cCodHojEval) = "400102" Then
                        'RECO20140620*********************
                        'If nExcedente > 0 Then
                        '    dCapacidad = (nCuota) / nExcedente
                        'Else
                        '    dCapacidad = 0
                        'End If
                        dCapacidad = lnCapacidadPago
                        'RECO FIN*************************
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, dCapacidad * 100, "", "", 4, 5)
                    End If
                    If Trim(rs!cCodHojEval) = "400201" Then
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, nPropuesta, "", "", 4, 5)
                    End If
                    If Trim(rs!cCodHojEval) = "400202" Then
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, ntim, "", "", 4, 5)
                    End If
                    If Trim(rs!cCodHojEval) = "400203" Then
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, nPlazo, "", "", 4, 5)
                    End If
                    If Trim(rs!cCodHojEval) = "400204" Then
                        nPost = nPost + 1
                        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, Trim(rs!cCodHojEval), rs!CDescripcion, nCuota, "", "", 4, 5)
                    End If
                End If
             End If
         End If
         'End 40
        rs.MoveNext
    Loop
    If nPrevio = 1 Then
        nPost = nPost + 1
        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "EGRESO TOTALES", CStr(fSumaSubnU), "", "", 3, 4)
        nEgresT = fSumaSubnU
        nPost = nPost + 1
        MatrixHojaETemp = IngresaDatosMatrix(nPost, MatrixHojaETemp, "", "EXCEDENTE MENSUAL", CStr((nIngreT + nInNeto) - nEgresT), "", "", 3, 3)
    End If
    rs.Close
    GeneraMatrixEvaluacion = imprime_HojaEvalucacion(cNomCliente, cCodCliente, cRucC, cDNIC, "CAJA MUNICIPAL DE MAYNAS", "OFICINA PRINCIPAL", dFecha, MatrixHojaETemp, gsCodUser, nTipoEval, nPrevio, sAnalista)
End Function
Private Function imprime_HojaEvalucacion(cPersona As String, cPersCod As String, cPerRUC As String, cPerDNI As String, sEmpresa As String, sOfic As String, gdFecSis As Date, MatrixHojaETemp As Variant, gsCodUser As String, Optional nTipoEval As Integer, Optional nPrevio As Integer = 1, Optional sAnalista As String = "") As String
    Dim sCadImp As String
    Dim lsSaltoLin As String
    Dim lsNegritaOn As String
    Dim lsNegritaOff As String
    Dim oImpre As COMFunciones.FCOMImpresion
    Set oImpre = New COMFunciones.FCOMImpresion
    lsSaltoLin = Chr$(10)
    sCadImp = ""
    sCadImp = sCadImp & "" & oImpre.ImpreFormat(sEmpresa, 70) & oImpre.ImpreFormat("FECHA:", 8) & gdFecSis & lsSaltoLin
    sCadImp = sCadImp & "" & oImpre.ImpreFormat(sOfic, 70) & oImpre.ImpreFormat("USUARIO:", 8) & gsCodUser & lsSaltoLin
    '*** PEAC 20080618
    If Len(sAnalista) > 0 Then
        sCadImp = sCadImp & Space(70) & oImpre.ImpreFormat("ANALISTA: ", 10) & sAnalista & lsSaltoLin
    End If
    
    sCadImp = sCadImp & Space(30) & "HOJA DE EVALUACION" & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("CODIDO CLIENTE: ", 30) & oImpre.ImpreFormat(cPersCod, 40) & oImpre.ImpreFormat("DNI: ", 5) & oImpre.ImpreFormat(cPerDNI, 100) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("CLIENTE: ", 30) & oImpre.ImpreFormat(cPersona, 40) & oImpre.ImpreFormat("RUC: ", 5) & oImpre.ImpreFormat(cPerRUC, 100) & lsSaltoLin
    Dim i As Integer
    For i = 1 To nPost
        If Len(Trim(MatrixHojaETemp(1, i))) = 2 Or Len(Trim(MatrixHojaETemp(1, i))) = 1 Then
            sCadImp = sCadImp & lsNegritaOn
            If Len(Trim(MatrixHojaETemp(1, i))) = 2 Then
                sCadImp = sCadImp & String(130, "-") & lsSaltoLin
        End If
        If (MatrixHojaETemp(7, i) = "5" Or MatrixHojaETemp(7, i) = "2" Or MatrixHojaETemp(7, i) = "3" Or MatrixHojaETemp(7, i) = "4") And MatrixHojaETemp(2, i) <> "" Then
            sCadImp = sCadImp & oImpre.ImpreFormat(MatrixHojaETemp(2, i), 50) & oImpre.ImpreFormat(MatrixHojaETemp(4, i), 8) & oImpre.ImpreFormat(MatrixHojaETemp(3, i), 8) & oImpre.ImpreFormat(MatrixHojaETemp(5, i), 8)
        Else
            If nTipoEval = 2 Then
                sCadImp = sCadImp & oImpre.ImpreFormat(MatrixHojaETemp(2, i), 50) & oImpre.ImpreFormat(MatrixHojaETemp(4, i), 8) & oImpre.ImpreFormat(MatrixHojaETemp(3, i), 8) & oImpre.ImpreFormat(MatrixHojaETemp(5, i), 8)
            Else
                sCadImp = sCadImp & oImpre.ImpreFormat(MatrixHojaETemp(2, i), 50) & oImpre.ImpreFormat(MatrixHojaETemp(3, i), 8)
            End If
        End If
        sCadImp = sCadImp & lsSaltoLin
    If Len(Trim(MatrixHojaETemp(1, i))) = 2 Then
        sCadImp = sCadImp & String(130, "-") & lsSaltoLin
    End If
    Else
        sCadImp = sCadImp & lsNegritaOff
        sCadImp = sCadImp & oImpre.ImpreFormat(MatrixHojaETemp(2, i), 50)
        If MatrixHojaETemp(7, i) = "1" Then
            If MatrixHojaETemp(5, i) <> "" Then
                If nTipoEval = 2 Then
                    sCadImp = sCadImp & oImpre.ImpreFormat(Round(MatrixHojaETemp(4, i), 2), 8) & oImpre.ImpreFormat(Round(MatrixHojaETemp(3, i), 2), 8) & oImpre.ImpreFormat(Round(MatrixHojaETemp(5, i), 2), 8)
            Else
                sCadImp = sCadImp & oImpre.ImpreFormat(Round(MatrixHojaETemp(3, i), 2), 8)
            End If
        End If
    ElseIf (MatrixHojaETemp(7, i) = "5" Or MatrixHojaETemp(7, i) = "2" Or MatrixHojaETemp(7, i) = "3" Or MatrixHojaETemp(7, i) = "4") And MatrixHojaETemp(2, i) <> "" Then
        sCadImp = sCadImp & oImpre.ImpreFormat(Round(MatrixHojaETemp(3, i), 2), 8)
        If MatrixHojaETemp(1, i) = "400101" Then
        sCadImp = sCadImp & oImpre.ImpreFormat("%", 10) & oImpre.ImpreFormat("EN RELACION A SU PATRIMONIO TOTAL", 50)
    End If
    If MatrixHojaETemp(1, i) = "400102" Then
        sCadImp = sCadImp & oImpre.ImpreFormat("%", 10) & oImpre.ImpreFormat("EN RELACION A SU EXCEDENTE", 50)
    End If
    If MatrixHojaETemp(1, i) = "400103" Then
        sCadImp = sCadImp & oImpre.ImpreFormat("%", 10) & oImpre.ImpreFormat("EN RELACION A SU PATRIMONIO EMPRESARIAL", 50)
    End If
    If MatrixHojaETemp(1, i) = "400104" Then
        sCadImp = sCadImp & oImpre.ImpreFormat(" ", 10) & oImpre.ImpreFormat("MAYOR A LA UNIDAD", 50)
    End If
    End If
    sCadImp = sCadImp & lsSaltoLin
    End If
    Next i
    imprime_HojaEvalucacion = sCadImp
End Function
'**End************************************************************************************
'**ALPA 16/05/200/************************************************************************************
Public Function ReportesTransferenciaCartera(ByRef cmatrix As Variant, ByVal lsCtasCod As Variant) As Variant

Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim nPost As Integer
Dim nContador As Integer
nContador = 0
     Set R = New ADODB.Recordset
     Set oCred = New COMDCredito.DCOMCredito
     Set R = oCred.ReportesTransferenciaCartera(lsCtasCod)
        Do While Not R.EOF
            nContador = nContador + 1
            ReDim Preserve cmatrix(0 To 11, 1 To nContador)
            cmatrix(1, nContador) = R!cCtaCodNew
            cmatrix(2, nContador) = R!cCtaCodAnt
            cmatrix(3, nContador) = R!cPersNombre
            cmatrix(4, nContador) = R!cProducto
            cmatrix(5, nContador) = R!cEstado
            cmatrix(6, nContador) = R!cMoneda
            cmatrix(7, nContador) = R!CDescripcion
            cmatrix(8, nContador) = R!cPlazo
            cmatrix(9, nContador) = R!SaldoC
            cmatrix(10, nContador) = R!MontoColoc
            cmatrix(11, nContador) = R!nImporte
            R.MoveNext
        Loop
    R.Close
    cmatrix(0, 1) = nContador
    ReportesTransferenciaCartera = cmatrix
End Function
'**End*******Alpa**********************/**************************************************
'**ALPA******20080620********************************************************************
Public Function imprimeReporteRentabilidadCarteraXAnalista(ByVal dFechaIni As Date, ByVal dFechaFin As Date, ByVal nCanDiaMora As Integer, ByVal sAnslis As Variant, ByVal sAgencias As Variant, Optional sProductos As Variant = "") As String
'ALPA 20090324***********************************
'Se agrego el parametro sProductos a la cabecea de la funcion

    Dim sCadImp As String
    Dim sCadImC As String
    Dim lsSaltoLin As String
    Dim lsNegritaOn As String
    Dim lsNegritaOff As String
    Dim oImpre As COMFunciones.FCOMImpresion
    Set oImpre = New COMFunciones.FCOMImpresion
    Dim oComDre As COMDCredito.DCOMCredito
    Dim RsComDre As ADODB.Recordset
    Dim cMoneda As String
    Dim cPlazo As String
    Dim cProd As String
    Dim cFina As String
    Dim nCont As Integer
    Dim nContRaya As Integer
    'Caso Financiamiento
    Dim nFCasos As Integer
    Dim nFTDese As Double
    Dim nFTSalK As Double
    Dim nFTCuot As Double
    Dim nFTCapi As Double
    Dim nFTInte As Double
    Dim nFTMora As Double
    Dim nFTGast As Double
    Dim nFAp As Integer
    nFAp = 0
    'Caso Producto
    Dim nPCasos As Integer
    Dim nPTDese As Double
    Dim nPTSalK As Double
    Dim nPTCuot As Double
    Dim nPTCapi As Double
    Dim nPTInte As Double
    Dim nPTMora As Double
    Dim nPTGast As Double
    Dim nPAp As Integer
    nPAp = 0
    'Caso Plazo
    Dim nPlCasos As Integer
    Dim nPlTDese As Double
    Dim nPlTSalK As Double
    Dim nPlTCuot As Double
    Dim nPlTCapi As Double
    Dim nPlTInte As Double
    Dim nPlTMora As Double
    Dim nPlTGast As Double
    Dim nPlAp As Integer
    nPlAp = 0
    'Caso Moneda
    Dim nMCasos As Integer
    Dim nMTDese As Double
    Dim nMTSalK As Double
    Dim nMTCuot As Double
    Dim nMTCapi As Double
    Dim nMTInte As Double
    Dim nMTMora As Double
    Dim nMTGast As Double
    Dim nMAp As Integer
    nMAp = 0
    
    Set oComDre = New COMDCredito.DCOMCredito
    Set RsComDre = New ADODB.Recordset
    'ALPA 20090324*********
    'Set RsComDre = oComDre.ReporteRentabilidadCarteraXAnalista(dFechaIni, dFechaFin, nCanDiaMora, sAnslis, sAgencias)
    Set RsComDre = oComDre.ReporteRentabilidadCarteraXAnalista(dFechaIni, dFechaFin, nCanDiaMora, sAnslis, sAgencias, sProductos)
    '**********************
    nContRaya = 164
    lsSaltoLin = Chr$(10)
        
    sCadImp = "REPORTE DE RENTABILIDAD DE CARTERA" & lsSaltoLin & lsSaltoLin
    
    sCadImC = sCadImC & String(nContRaya, "-") & lsSaltoLin
    sCadImC = sCadImC & oImpre.ImpreFormat("ITEM ", 4) & oImpre.ImpreFormat("CREDITO ", 20) & oImpre.ImpreFormat("CLIENTE ", 22) & oImpre.ImpreFormat("DESEMB ", 8) & oImpre.ImpreFormat("SALD K ", 8) & oImpre.ImpreFormat("CUOTA ", 8) & oImpre.ImpreFormat("CAPITAL ", 8) & oImpre.ImpreFormat("INTERES ", 8) & oImpre.ImpreFormat("MORA ", 8) & oImpre.ImpreFormat("GASTOS", 8) & oImpre.ImpreFormat("CUO.APRO.", 8) & oImpre.ImpreFormat("CUO.PAGAD. ", 8) & oImpre.ImpreFormat("FEC.VEN. ", 10) & oImpre.ImpreFormat("FEC.CANC. ", 10) & oImpre.ImpreFormat("ANALIS.: ", 6) & lsSaltoLin
    sCadImC = sCadImC & String(nContRaya, "-") & lsSaltoLin
    Do While Not RsComDre.EOF
        nCont = nCont + 1
        If cMoneda <> RsComDre!cMoneda Then ' Moneda
            If nMAp > 0 Then
            'Fuente de Financiamiento
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL FUENTE DE FINANCIAMIENTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nFCasos, 5) & oImpre.ImpreFormat(nFTDese, 20) & oImpre.ImpreFormat(nFTSalK, 20) & oImpre.ImpreFormat(nFTCuot, 10) & oImpre.ImpreFormat(nFTCapi, 10) & oImpre.ImpreFormat(nFTInte, 20) & oImpre.ImpreFormat(nFTMora, 20) & oImpre.ImpreFormat(nFTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            nFTDese = 0
            nFTSalK = 0
            nFTCuot = 0
            nFTCapi = 0
            nFTInte = 0
            nFTMora = 0
            nFTGast = 0
            'Producto
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PRODUCTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nPCasos, 5) & oImpre.ImpreFormat(nPTDese, 20) & oImpre.ImpreFormat(nPTSalK, 20) & oImpre.ImpreFormat(nPTCuot, 10) & oImpre.ImpreFormat(nPTCapi, 10) & oImpre.ImpreFormat(nPTInte, 20) & oImpre.ImpreFormat(nPTMora, 20) & oImpre.ImpreFormat(nPTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            nPTDese = 0
            nPTSalK = 0
            nPTCuot = 0
            nPTCapi = 0
            nPTInte = 0
            nPTMora = 0
            nPTGast = 0
            'Plazo
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PLAZO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nPlCasos, 5) & oImpre.ImpreFormat(nPlTDese, 20) & oImpre.ImpreFormat(nPlTSalK, 20) & oImpre.ImpreFormat(nPlTCuot, 10) & oImpre.ImpreFormat(nPlTCapi, 10) & oImpre.ImpreFormat(nPlTInte, 20) & oImpre.ImpreFormat(nPlTMora, 20) & oImpre.ImpreFormat(nPlTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            
            nPlTDese = 0
            nPlTSalK = 0
            nPlTCuot = 0
            nPlTCapi = 0
            nPlTInte = 0
            nPlTMora = 0
            nPlTGast = 0
            
            'Moneda
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL MONEDA", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nMCasos, 5) & oImpre.ImpreFormat(nMTDese, 20) & oImpre.ImpreFormat(nMTSalK, 20) & oImpre.ImpreFormat(nMTCuot, 10) & oImpre.ImpreFormat(nMTCapi, 10) & oImpre.ImpreFormat(nMTInte, 20) & oImpre.ImpreFormat(nMTMora, 20) & oImpre.ImpreFormat(nMTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            
            nMTDese = 0
            nMTSalK = 0
            nMTCuot = 0
            nMTCapi = 0
            nMTInte = 0
            nMTMora = 0
            nMTGast = 0
            
            
            nMCasos = 0
            nPlCasos = 0
            nPCasos = 0
            nFCasos = 0
            End If
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA:. ", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO: ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO: ", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO: ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nMAp = nMAp + 1
        ElseIf cPlazo <> RsComDre!cPlazo Then 'Plazo
           ' If nPlAp > 0 Then
            'Fuente de Financiamiento
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL FUENTE DE FINANCIAMIENTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nFCasos, 5) & oImpre.ImpreFormat(nFTDese, 20) & oImpre.ImpreFormat(nFTSalK, 20) & oImpre.ImpreFormat(nFTCuot, 10) & oImpre.ImpreFormat(nFTCapi, 10) & oImpre.ImpreFormat(nFTInte, 20) & oImpre.ImpreFormat(nFTMora, 20) & oImpre.ImpreFormat(nFTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            'If nPlAp > 0 Then
            nFTDese = 0
            nFTSalK = 0
            nFTCuot = 0
            nFTCapi = 0
            nFTInte = 0
            nFTMora = 0
            nFTGast = 0
            'End If
            'Producto
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PRODUCTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nPCasos, 5) & oImpre.ImpreFormat(nPTDese, 20) & oImpre.ImpreFormat(nPTSalK, 20) & oImpre.ImpreFormat(nPTCuot, 10) & oImpre.ImpreFormat(nPTCapi, 10) & oImpre.ImpreFormat(nPTInte, 20) & oImpre.ImpreFormat(nPTMora, 20) & oImpre.ImpreFormat(nPTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            nPTDese = 0
            nPTSalK = 0
            nPTCuot = 0
            nPTCapi = 0
            nPTInte = 0
            nPTMora = 0
            nPTGast = 0
            'Plazo
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PLAZO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nPlCasos, 5) & oImpre.ImpreFormat(nPlTDese, 20) & oImpre.ImpreFormat(nPlTSalK, 20) & oImpre.ImpreFormat(nPlTCuot, 10) & oImpre.ImpreFormat(nPlTCapi, 10) & oImpre.ImpreFormat(nPlTInte, 20) & oImpre.ImpreFormat(nPlTMora, 20) & oImpre.ImpreFormat(nPlTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            nPlTDese = 0
            nPlTSalK = 0
            nPlTCuot = 0
            nPlTCapi = 0
            nPlTInte = 0
            nPlTMora = 0
            nPlTGast = 0
            'E
            nPlCasos = 0
            nPCasos = 0
            nFCasos = 0
            'End If
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA:", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO:. ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO: ", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO: ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nPlAp = nPlAp + 1
        ElseIf cProd <> RsComDre!cConsDescripcion Then 'Producto
           ' If nPAp > 0 Then
            'Fuente de Financiamiento
           
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL FUENTE DE FINANCIAMIENTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nFCasos, 5) & oImpre.ImpreFormat(nFTDese, 20) & oImpre.ImpreFormat(nFTSalK, 20) & oImpre.ImpreFormat(nFTCuot, 10) & oImpre.ImpreFormat(nFTCapi, 10) & oImpre.ImpreFormat(nFTInte, 20) & oImpre.ImpreFormat(nFTMora, 20) & oImpre.ImpreFormat(nFTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            'If nPAp > 0 Then
            nFTDese = 0
            nFTSalK = 0
            nFTCuot = 0
            nFTCapi = 0
            nFTInte = 0
            nFTMora = 0
            nFTGast = 0
            'End If
            'Producto
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PRODUCTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nPCasos, 5) & oImpre.ImpreFormat(nPTDese, 20) & oImpre.ImpreFormat(nPTSalK, 20) & oImpre.ImpreFormat(nPTCuot, 10) & oImpre.ImpreFormat(nPTCapi, 10) & oImpre.ImpreFormat(nPTInte, 20) & oImpre.ImpreFormat(nPTMora, 20) & oImpre.ImpreFormat(nPTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            nPTDese = 0
            nPTSalK = 0
            nPTCuot = 0
            nPTCapi = 0
            nPTInte = 0
            nPTMora = 0
            nPTGast = 0
            
            nPCasos = 0
            nFCasos = 0
          '  End If
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA: ", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO: ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO:.", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO: ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nPAp = nPAp + 1
        ElseIf cFina <> RsComDre!CDescripcion Then 'Financiamiento
            'If nFAp > 0 Then
            'Fuente de Financiamiento
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL FUENTE DE FINANCIAMIENTO", 50) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
            sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat(nFCasos, 5) & oImpre.ImpreFormat(nFTDese, 20) & oImpre.ImpreFormat(nFTSalK, 20) & oImpre.ImpreFormat(nFTCuot, 10) & oImpre.ImpreFormat(nFTCapi, 10) & oImpre.ImpreFormat(nFTInte, 20) & oImpre.ImpreFormat(nFTMora, 20) & oImpre.ImpreFormat(nFTGast, 20) & lsSaltoLin
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
           'If nFAp > 0 Then
            nFTDese = 0
            nFTSalK = 0
            nFTCuot = 0
            nFTCapi = 0
            nFTInte = 0
            nFTMora = 0
            nFTGast = 0
            nFCasos = 0
            'End If
            'End If
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA: ", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO: ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO: ", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO:. ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nFAp = nFAp + 1
        End If
        'Financiamiento
        nFTDese = nFTDese + RsComDre!nMontoCol
        nFTSalK = nFTSalK + RsComDre!nSaldo
        nFTCuot = nFTCuot + RsComDre!nMontoCuota
        nFTCapi = nFTCapi + RsComDre!Capital
        nFTInte = nFTInte + RsComDre!Interes
        nFTMora = nFTMora + RsComDre!Mora
        nFTGast = nFTGast + RsComDre!Gastos
        
        'Producto
        nPTDese = nPTDese + RsComDre!nMontoCol
        nPTSalK = nPTSalK + RsComDre!nSaldo
        nPTCuot = nPTCuot + RsComDre!nMontoCuota
        nPTCapi = nPTCapi + RsComDre!Capital
        nPTInte = nPTInte + RsComDre!Interes
        nPTMora = nPTMora + RsComDre!Mora
        nPTGast = nPTGast + RsComDre!Gastos
        'Plazo
        nPlTDese = nPlTDese + RsComDre!nMontoCol
        nPlTSalK = nPlTSalK + RsComDre!nSaldo
        nPlTCuot = nPlTCuot + RsComDre!nMontoCuota
        nPlTCapi = nPlTCapi + RsComDre!Capital
        nPlTInte = nPlTInte + RsComDre!Interes
        nPlTMora = nPlTMora + RsComDre!Mora
        nPlTGast = nPlTGast + RsComDre!Gastos
        'Moneda
        
        nMTDese = nMTDese + RsComDre!nMontoCol
        nMTSalK = nMTSalK + RsComDre!nSaldo
        nMTCuot = nMTCuot + RsComDre!nMontoCuota
        nMTCapi = nMTCapi + RsComDre!Capital
        nMTInte = nMTInte + RsComDre!Interes
        nMTMora = nMTMora + RsComDre!Mora
        nMTGast = nMTGast + RsComDre!Gastos
        sCadImp = sCadImp & oImpre.ImpreFormat(nCont, 5, 0) & oImpre.ImpreFormat(RsComDre!cCtaCod, 19) & oImpre.ImpreFormat(Mid(RsComDre!cPersNombre, 1, 21), 22) & oImpre.ImpreFormat(RsComDre!nMontoCol, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!nSaldo, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!nMontoCuota, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!Capital, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!Interes, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!Mora, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!Gastos, 6) & Space(1) & oImpre.ImpreFormat(RsComDre!NroCuotaApr, 9, 0) & oImpre.ImpreFormat(RsComDre!nCuota, 12, 0) & oImpre.ImpreFormat(Format(RsComDre!dVenc, "YYYY/MM/DD"), 10) & oImpre.ImpreFormat(Format(RsComDre!dPago, "YYYY/MM/DD"), 10) & oImpre.ImpreFormat(RsComDre!cUser, 6) & lsSaltoLin
        cMoneda = RsComDre!cMoneda
        cPlazo = RsComDre!cPlazo
        cProd = RsComDre!cConsDescripcion
        cFina = RsComDre!CDescripcion
        nMCasos = nMCasos + 1
        nPlCasos = nPlCasos + 1
        nPCasos = nPCasos + 1
        nFCasos = nFCasos + 1
    RsComDre.MoveNext
    Loop
    Set RsComDre = Nothing
    'Final
    'Fuente de Financiamiento
    sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL FUENTE DE FINANCIAMIENTO", 50) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
    sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat(nFCasos, 5) & oImpre.ImpreFormat(nFTDese, 20) & oImpre.ImpreFormat(nFTSalK, 20) & oImpre.ImpreFormat(nFTCuot, 10) & oImpre.ImpreFormat(nFTCapi, 10) & oImpre.ImpreFormat(nFTInte, 20) & oImpre.ImpreFormat(nFTMora, 20) & oImpre.ImpreFormat(nFTGast, 20) & lsSaltoLin
    sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
    'Producto
    sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PRODUCTO", 50) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
    sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat(nPCasos, 5) & oImpre.ImpreFormat(nPTDese, 20) & oImpre.ImpreFormat(nPTSalK, 20) & oImpre.ImpreFormat(nPTCuot, 10) & oImpre.ImpreFormat(nPTCapi, 10) & oImpre.ImpreFormat(nPTInte, 20) & oImpre.ImpreFormat(nPTMora, 20) & oImpre.ImpreFormat(nPTGast, 20) & lsSaltoLin
    sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
    'Plazo
    sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL PLAZO", 50) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
    sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat(nPlCasos, 5) & oImpre.ImpreFormat(nPlTDese, 20) & oImpre.ImpreFormat(nPlTSalK, 20) & oImpre.ImpreFormat(nPlTCuot, 10) & oImpre.ImpreFormat(nPlTCapi, 10) & oImpre.ImpreFormat(nPlTInte, 20) & oImpre.ImpreFormat(nPlTMora, 20) & oImpre.ImpreFormat(nPlTGast, 20) & lsSaltoLin
    sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
    'Moneda
    sCadImp = sCadImp & oImpre.ImpreFormat("** SUB TOTAL MONEDA", 50) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat("CASOS", 20) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("SALDO", 20) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 10) & oImpre.ImpreFormat("TOTAL", 20) & oImpre.ImpreFormat("TOTAL", 20) & lsSaltoLin
    sCadImp = sCadImp & Space(20) & oImpre.ImpreFormat("DESEMB", 20) & oImpre.ImpreFormat("CAPITAL", 20) & oImpre.ImpreFormat("CUOTA", 10) & oImpre.ImpreFormat("CAPITAL", 10) & oImpre.ImpreFormat("INTERES", 20) & oImpre.ImpreFormat("MORA", 20) & oImpre.ImpreFormat("GASTOS", 20) & lsSaltoLin
    sCadImp = sCadImp & oImpre.ImpreFormat(nMCasos, 5) & oImpre.ImpreFormat(nMTDese, 20) & oImpre.ImpreFormat(nMTSalK, 20) & oImpre.ImpreFormat(nMTCuot, 10) & oImpre.ImpreFormat(nMTCapi, 10) & oImpre.ImpreFormat(nMTInte, 20) & oImpre.ImpreFormat(nMTMora, 20) & oImpre.ImpreFormat(nMTGast, 20) & lsSaltoLin
    sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin

    imprimeReporteRentabilidadCarteraXAnalista = sCadImp
End Function
Public Function imprimeReporteClientesConDeudaCanceladaNoVueltosAtender(ByVal dFechaIni As Date, ByVal dFechaFin As Date, ByVal nCanDiaMora As Integer, ByVal sAnslis As Variant, ByVal sAgencias As Variant) As String
    Dim sCadImp As String
    Dim sCadImC As String
    Dim lsSaltoLin As String
    Dim lsNegritaOn As String
    Dim lsNegritaOff As String
    Dim oImpre As COMFunciones.FCOMImpresion
    Set oImpre = New COMFunciones.FCOMImpresion
    Dim oComDre As COMDCredito.DCOMCredito
    Dim RsComDre As ADODB.Recordset
    Dim cMoneda As String
    Dim cPlazo As String
    Dim cProd As String
    Dim cFina As String
    Dim nCont As Integer
    Dim nContRaya As Integer
    'Caso Financiamiento
    Dim nFCasos As Integer
    Dim nFTDese As Double
    Dim nFTSalK As Double
    Dim nFTCuot As Double
    Dim nFTCapi As Double
    Dim nFTInte As Double
    Dim nFTGast As Double
    Dim nFAp As Integer
    nFAp = 0
    'Caso Producto
    Dim nPCasos As Integer
    Dim nPTDese As Double
    Dim nPTSalK As Double
    Dim nPTCuot As Double
    Dim nPTCapi As Double
    Dim nPTInte As Double
    Dim nPTGast As Double
    Dim nPAp As Integer
    nPAp = 0
    'Caso Plazo
    Dim nPlCasos As Integer
    Dim nPlTDese As Double
    Dim nPlTSalK As Double
    Dim nPlTCuot As Double
    Dim nPlTCapi As Double
    Dim nPlTInte As Double
    Dim nPlTGast As Double
    Dim nPlAp As Integer
    nPlAp = 0
    'Caso Moneda
    Dim nMCasos As Integer
    Dim nMTDese As Double
    Dim nMTSalK As Double
    Dim nMTCuot As Double
    Dim nMTCapi As Double
    Dim nMTInte As Double
    Dim nMTGast As Double
    Dim nMAp As Integer
    nMAp = 0
    
    Set oComDre = New COMDCredito.DCOMCredito
    Set RsComDre = New ADODB.Recordset
    Set RsComDre = oComDre.ReporteClientesConDeudaCanceladaNoVueltosAtender(dFechaIni, dFechaFin, nCanDiaMora, sAnslis, sAgencias)
    nContRaya = 164
    lsSaltoLin = Chr$(10)
    
    sCadImp = "REPORTE DE CLIENTES CON DEUDA CANCALADOS NO VUELTOS A ATENDER" & lsSaltoLin & lsSaltoLin
    
    sCadImC = sCadImC & String(nContRaya, "-") & lsSaltoLin
    'sCadImC = sCadImC & oImpre.ImpreFormat("ITEM ", 4) & oImpre.ImpreFormat("CREDITO ", 20) & oImpre.ImpreFormat("CLIENTE ", 22) & oImpre.ImpreFormat("DESEMB ", 8) & oImpre.ImpreFormat("SALD K ", 8) & oImpre.ImpreFormat("CUOTA ", 8) & oImpre.ImpreFormat("CAPITAL ", 8) & oImpre.ImpreFormat("INTERES ", 8) & oImpre.ImpreFormat("GASTOS", 8) & oImpre.ImpreFormat("CUO.APRO.", 8) & oImpre.ImpreFormat("CUO.PAGAD. ", 8) & oImpre.ImpreFormat("FEC.VEN. ", 10) & oImpre.ImpreFormat("FEC.CANC. ", 10) & oImpre.ImpreFormat("ANALIS.: ", 6) & lsSaltoLin
    sCadImC = sCadImC & oImpre.ImpreFormat("ITEM ", 4) & oImpre.ImpreFormat("CLIENTE ", 22) & oImpre.ImpreFormat("DESEMB ", 8) & oImpre.ImpreFormat("CALIFICACION ", 15) & oImpre.ImpreFormat("CREDITO ", 20) & oImpre.ImpreFormat("PLAZO", 16) & oImpre.ImpreFormat("DIRECCION. ", 20) & oImpre.ImpreFormat("TELEFONO ", 10) & oImpre.ImpreFormat("FEC.CANC. ", 10) & oImpre.ImpreFormat("ANALIS ", 6) & lsSaltoLin
    sCadImC = sCadImC & String(nContRaya, "-") & lsSaltoLin
    Do While Not RsComDre.EOF
        nCont = nCont + 1
        If cMoneda <> RsComDre!cMoneda Then ' Moneda

            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA:. ", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO: ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO: ", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO: ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nMAp = nMAp + 1
        ElseIf cPlazo <> RsComDre!cPlazo Then 'Plazo

            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA:", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO:. ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO: ", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO: ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nPlAp = nPlAp + 1
        ElseIf cProd <> RsComDre!cConsDescripcion Then 'Producto
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA: ", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO: ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO:.", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO: ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nPAp = nPAp + 1
        ElseIf cFina <> RsComDre!CDescripcion Then 'Financiamiento
            sCadImp = sCadImp & String(nContRaya, "-") & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("MONEDA: ", 20) & RsComDre!cMoneda & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PLAZO: ", 20) & RsComDre!cPlazo & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("PRODUCTO: ", 20) & RsComDre!cConsDescripcion & lsSaltoLin
            sCadImp = sCadImp & oImpre.ImpreFormat("FINANCIAMIENTO:. ", 20) & RsComDre!CDescripcion & lsSaltoLin
            sCadImp = sCadImp & sCadImC
            
            nFAp = nFAp + 1
        End If
        sCadImp = sCadImp & oImpre.ImpreFormat(nCont, 4, 0) & oImpre.ImpreFormat(Mid(RsComDre!cPersNombre, 1, 21), 22) & oImpre.ImpreFormat(RsComDre!nMontoCol, 8) & oImpre.ImpreFormat(RsComDre!cCalifActual, 15) & oImpre.ImpreFormat(RsComDre!cCtaCod, 20) & oImpre.ImpreFormat(RsComDre!cPlazo2, 16) & oImpre.ImpreFormat(RsComDre!cPersDireccDomicilio, 20) & oImpre.ImpreFormat(RsComDre!cPersTelefono, 10) & oImpre.ImpreFormat(Format(RsComDre!dPrdEstado, "YYYY/MM/DD"), 10) & oImpre.ImpreFormat(RsComDre!cUser, 6) & lsSaltoLin
        
        cMoneda = RsComDre!cMoneda
        cPlazo = RsComDre!cPlazo
        cProd = RsComDre!cConsDescripcion
        cFina = RsComDre!CDescripcion
        nMCasos = nMCasos + 1
        nPlCasos = nPlCasos + 1
        nPCasos = nPCasos + 1
        nFCasos = nFCasos + 1
    RsComDre.MoveNext
    Loop
    Set RsComDre = Nothing

    imprimeReporteClientesConDeudaCanceladaNoVueltosAtender = sCadImp
End Function
'ALPA 20080926*****************************************************************
Public Function ObtenerMontoTotalCalendarioXConcepto(ByVal psCtaCod As String, ByVal psConceptos As String) As Double

Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim nPost As Integer
Dim nValor As Double
nValor = 0
     Set R = New ADODB.Recordset
     Set oCred = New COMDCredito.DCOMCredito
     Set R = oCred.ObtenerMontoTotalCalendarioXConcepto(psCtaCod, psConceptos)
        Do While Not R.EOF
            nValor = R!nIntComp
            R.MoveNext
        Loop
    R.Close
    ObtenerMontoTotalCalendarioXConcepto = nValor
End Function
'*******************************************************************************

'*** PEAC 20081003 OPERACION 108150
Public Function imprimeReporteConsolRentabilidadCarteraXAnalista(ByVal dFechaIni As Date, ByVal dFechaFin As Date, ByVal nCanDiaMora As Integer, ByVal sAnslis As Variant, ByVal sAgencias As Variant, _
                ByVal psCodAge As String, ByVal psCodUser As String, ByVal pdFecSis As Date, ByVal psNomAge As String, Optional ByVal psNomCmac As String = "", Optional sProductos As Variant = "") As String
'ALPA 20090324****************
'Se agrego la variable ByVal sProductos a la cabecera de la funcion

Dim oDCred As COMDCredito.DCOMCredDoc
Dim R As ADODB.Recordset
Dim sCadImp As String

Dim i As Integer, J As Integer
Dim sAgencia As String
Dim vage As String, vUser As String, vMoney As String
Dim lsSaltoLin As String
Dim vNomAge As String
Dim oImpresora As COMFunciones.FCOMVarImpresion
Set oImpresora = New COMFunciones.FCOMVarImpresion

Dim oImpre As COMFunciones.FCOMImpresion
Set oImpre = New COMFunciones.FCOMImpresion

Dim totSolCasos As Double, totSolMontoCol As Double, totSolSaldo As Double, totSolMOntocuota As Double, totSolcapital As Double, totSolinteres As Double, totSolGastos As Double, totSolsaldomora As Double
Dim totDolCasos As Double, totDolMontoCol As Double, totDolSaldo As Double, totDolMOntocuota As Double, totDolcapital As Double, totDolinteres As Double, totDolGastos As Double, totDolsaldomora As Double

    Screen.MousePointer = 11
    
    Set oDCred = New COMDCredito.DCOMCredDoc
    'ALPA 20090324********************************************************************************************************************
    'Set R = oDCred.RecuperaDatosConsolRentabilidadCarteraXAnalista(dFechaIni, dFechaFin, nCanDiaMora, sAnslis, sAgencias)
    Set R = oDCred.RecuperaDatosConsolRentabilidadCarteraXAnalista(dFechaIni, dFechaFin, nCanDiaMora, sAnslis, sAgencias, sProductos)
    '*********************************************************************************************************************************
    Set oDCred = Nothing
    
    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If
    
    lsSaltoLin = Chr$(10)
    
    sCadImp = ""
        Call ImprimeCabeceraDocumento(sCadImp, psNomAge, pdFecSis, psCodUser, "RENTABILIDAD DE CARTERA (CONSOLIDADO)", psNomCmac, , True, , "DEL " & Format(dFechaIni, "dd/mm/yyyy") & " AL " & Format(dFechaFin, "dd/mm/yyyy"))
                
        sCadImp = sCadImp & String(147, "-") & lsSaltoLin & lsSaltoLin
        '                    0123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
        '                              1         2         3         4         5         6         7         8         9         10        11        12        13        14        15        16        17
'        sCadImp = sCadImp & "                     TOTAL                SALDO            TOTAL        TOTAL          TOTAL          TOTAL          TOTAL" & lsSaltoLin
'        sCadImp = sCadImp & "              CASOS  DESEMBOLSADO         CAPITAL          CUOTA        CAPITAL        INTERES        MORA           GASTO" & lsSaltoLin
'        sCadImp = sCadImp & String(147, "-") & lsSaltoLin & lsSaltoLin

    i = 8
    J = 0
    Do While Not R.EOF
        i = i + 1
        sCadImp = sCadImp & "AGENCIA : " & R!Agencia & lsSaltoLin
        vage = R!codagencia
        vNomAge = R!Agencia
        
        'J = 0
    
        totSolCasos = 0: totSolMontoCol = 0: totSolSaldo = 0: totSolMOntocuota = 0: totSolcapital = 0: totSolinteres = 0: totSolGastos = 0: totSolsaldomora = 0
        totDolCasos = 0: totDolMontoCol = 0: totDolSaldo = 0: totDolMOntocuota = 0: totDolcapital = 0: totDolinteres = 0: totDolGastos = 0: totDolsaldomora = 0
                        
    
        Do While R!codagencia = vage
            i = i + 1
            sCadImp = sCadImp & String(147, "-") & lsSaltoLin
            i = i + 1
            sCadImp = sCadImp & "    ANALISTA : " & R!cUser & " - " & R!cNomUser & lsSaltoLin
            vUser = R!cUser
            
            
            Do While R!cUser = vUser And R!codagencia = vage
            i = i + 1
            sCadImp = sCadImp & "        MONEDA : " & R!cMoneda & lsSaltoLin
            vMoney = R!cMoney
            
            i = i + 2
            sCadImp = sCadImp & "                     TOTAL                SALDO            TOTAL        TOTAL          TOTAL          TOTAL          TOTAL" & lsSaltoLin
            sCadImp = sCadImp & "              CASOS  DESEMBOLSADO         CAPITAL          CUOTA        CAPITAL        INTERES        MORA           GASTO" & lsSaltoLin
            
                Do While R!cMoney = vMoney And R!cUser = vUser And R!codagencia = vage
            
                    i = i + 1
                    
                    sCadImp = sCadImp & Space(12) & oImpre.ImpreFormat(R!casos, 6, 0)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!nMontoCol, 12, 2, True)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!nSaldo, 12, 2, True)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!nMontoCuota, 12, 2, True)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!Capital, 12, 2, True)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!Interes, 12, 2, True)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!Mora, 12, 2, True)
                    sCadImp = sCadImp & oImpre.ImpreFormat(R!Gastos, 10, 2, True)
                    sCadImp = sCadImp & lsSaltoLin
                    
                    If vMoney = "1" Then
                        totSolCasos = totSolCasos + R!casos
                        totSolMontoCol = totSolMontoCol + R!nMontoCol
                        totSolSaldo = totSolSaldo + R!nSaldo
                        totSolMOntocuota = totSolMOntocuota + R!nMontoCuota
                        totSolcapital = totSolcapital + R!Capital
                        totSolinteres = totSolinteres + R!Interes
                        totSolsaldomora = totSolsaldomora + R!Mora
                        totSolGastos = totSolGastos + R!Gastos
                        
                        
                    Else
                        totDolCasos = totDolCasos + R!casos
                        totDolMontoCol = totDolMontoCol + R!nMontoCol
                        totDolSaldo = totDolSaldo + R!nSaldo
                        totDolMOntocuota = totDolMOntocuota + R!nMontoCuota
                        totDolcapital = totDolcapital + R!Capital
                        totDolinteres = totDolinteres + R!Interes
                        totDolsaldomora = totDolsaldomora + R!Mora
                        totDolGastos = totDolGastos + R!Gastos

                    End If
                    R.MoveNext
                    If R.EOF Then
                        Exit Do
                    End If
        
                    If i >= 56 Then
                        'sCadImp = sCadImp & lnSaltoPagina
                        sCadImp = sCadImp & lsSaltoLin & lsSaltoLin & lsSaltoLin & lsSaltoLin & lsSaltoLin & lsSaltoLin
                        Call ImprimeCabeceraDocumento(sCadImp, psNomAge, pdFecSis, psCodUser, "RENTABILIDAD DE CARTERA (CONSOLIDADO)", psNomCmac, , True, , "DEL " & Format(dFechaIni, "dd/mm/yyyy") & " AL " & Format(dFechaFin, "dd/mm/yyyy"))
                        sCadImp = sCadImp & String(147, "-") & lsSaltoLin & lsSaltoLin
'                        sCadImp = sCadImp & "                     TOTAL                SALDO            TOTAL        TOTAL          TOTAL          TOTAL          TOTAL" & lsSaltoLin
'                        sCadImp = sCadImp & "              CASOS  DESEMBOLSADO         CAPITAL          CUOTA        CAPITAL        INTERES        MORA           GASTO" & lsSaltoLin
'                        sCadImp = sCadImp & String(147, "-") & lsSaltoLin & lsSaltoLin
                        i = 8
                    End If
                Loop
                
'                i = i + 1
'                sCadImp = sCadImp & String(147, "-") & lsSaltoLin & lsSaltoLin
'
                If R.EOF Then
                    Exit Do
                End If
            Loop
            If R.EOF Then
                Exit Do
            End If
        Loop
        i = i + 4
        sCadImp = sCadImp & String(147, "-") & lsSaltoLin
        sCadImp = sCadImp & "TOTAL " & vNomAge & lsSaltoLin
        sCadImp = sCadImp & "    TOTAL MONEDA SOLES: " & lsSaltoLin
            sCadImp = sCadImp & Space(12) & oImpre.ImpreFormat(totSolCasos, 6, 0)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolMontoCol, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolSaldo, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolMOntocuota, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolcapital, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolinteres, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolsaldomora, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totSolGastos, 10, 2, True)
            sCadImp = sCadImp & lsSaltoLin
        i = i + 2
        sCadImp = sCadImp & "    TOTAL MONEDA DOLARES: " & lsSaltoLin
        
            sCadImp = sCadImp & Space(12) & oImpre.ImpreFormat(totDolCasos, 6, 0)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolMontoCol, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolSaldo, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolMOntocuota, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolcapital, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolinteres, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolsaldomora, 12, 2, True)
            sCadImp = sCadImp & oImpre.ImpreFormat(totDolGastos, 10, 2, True)
            sCadImp = sCadImp & lsSaltoLin
        i = i + 1
        sCadImp = sCadImp & String(147, "-") & lsSaltoLin & lsSaltoLin
        
        If R.EOF Then
            Exit Do
        End If
    Loop

    R.Close
    Set R = Nothing
    imprimeReporteConsolRentabilidadCarteraXAnalista = sCadImp
    Screen.MousePointer = 0
End Function

'*** PEAC 20081003
Private Function lnSaltoPagina() As String
    lnSaltoPagina = oImpresora.gPrnSaltoPagina
End Function

'*** PEAC 20081002
Private Sub ImprimeCabeceraDocumento(ByRef psCadImp As String, ByVal psNomAge As String, _
                                    ByVal psFechaHora As String, ByVal psCodUsu, ByVal psTitulo As String, ByVal psNomCmac As String, _
                                    Optional psTab As String = "", Optional pbCondensado As Boolean = True, Optional psCodRepo As String = "", _
                                    Optional psSubTitulo As String = "") 'DAOR 20070816, Se aumentó subtitulo
    'nPuntPag = 0
    psCadImp = psCadImp & Chr$(10)
    If Len(psCodRepo) > 0 Then
        psTitulo = psCodRepo & " - " & psTitulo
    End If
    If pbCondensado Then
        
        psCadImp = psCadImp & psTab & psNomCmac & Space(70) & "FECHA :" & psFechaHora & Chr$(10)
        
        psCadImp = psCadImp & psTab & Space(71 + 22) & "USUARIO : " & psCodUsu & Chr$(10)
        psCadImp = psCadImp & psTab & Space((137 - Len(psTitulo)) / 2 - 18) & psTitulo & Chr$(10)
        psCadImp = psCadImp & psTab & Space((137 - Len(psSubTitulo)) / 2 - 18) & psSubTitulo & Chr$(10)
    
    Else
        psCadImp = psCadImp & psTab & psNomCmac & Space(55) & "FECHA   :" & psFechaHora & Chr$(10)
        psCadImp = psCadImp & psTab & Space(79 + 22) & "USUARIO : " & psCodUsu & Chr$(10)
        
        psCadImp = psCadImp & psTab & Space((120 - Len(psTitulo)) / 2 - 18) & psTitulo & Chr$(10)
        psCadImp = psCadImp & psTab & Space((120 - Len(psSubTitulo)) / 2 - 18) & psSubTitulo & Chr$(10)
        
    End If
End Sub

Public Function MatrizInteresGraAFecha(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByVal pbDesagio As Boolean = False, Optional ByVal pbCalenDin As Boolean = False) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    Set oCredito = Nothing

    '*** PEAC 20071204
    'dFecIni = R!dVigencia
    'nSaldoCal = R!nMontoCol
    
    dFecIni = R!dMontoColUltCal
    nSaldoCal = R!nMontoColUltCal
        
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaProducto(psCtaCod)
    Set oCredito = Nothing
    pnTasa = R!nTasaInteres
    R.Close
    Set R = Nothing
    
    MatrizInteresGraAFecha = MatrizInteresGraciaFecha(psCtaCod, MatCalend, pdHoy, nSaldoCal)
                
  
End Function

'MAVM 20100412 ***
Public Sub InsertarSolicitudConstNoAdeudo(ByVal sPersCod As String, ByVal sFSolicitud As String, ByVal sMotivo As String)
    Dim objCOMDCredito As COMDCredito.DCOMCredito
    Set objCOMDCredito = New COMDCredito.DCOMCredito
    objCOMDCredito.RegistrarSolicitudConstNoAdeudo sPersCod, sFSolicitud, sMotivo
    Set objCOMDCredito = Nothing
End Sub

Public Function ValidarConstNoAdeudoXPersona(ByVal sPersCod As String) As ADODB.Recordset
    Dim objCOMDCredito As COMDCredito.DCOMCredito
    Set objCOMDCredito = New COMDCredito.DCOMCredito
    Set ValidarConstNoAdeudoXPersona = objCOMDCredito.ValidarConstNoAdeudoXPersona(sPersCod)
    Set objCOMDCredito = Nothing
End Function

Public Function ObtenerListaConstNoAdeudo(ByVal sPersCod As String, ByVal sFI As String, ByVal sFF As String, ByRef psMensaje As String) As ADODB.Recordset
    Dim objCOMDCredito As COMDCredito.DCOMCredito
    Set objCOMDCredito = New COMDCredito.DCOMCredito
    Set ObtenerListaConstNoAdeudo = objCOMDCredito.ListarConstNoAdeudo(sPersCod, sFI, sFF, psMensaje)
    Set objCOMDCredito = Nothing
End Function

Public Sub ActualizarEstadoConstNoAdeudo(ByVal iConstNoAdeudoId As Integer, ByVal cPersCod As String, ByVal sFEntrega As String)
    Dim objCOMDCredito As COMDCredito.DCOMCredito
    Set objCOMDCredito = New COMDCredito.DCOMCredito
    objCOMDCredito.ModificarEstadoConstNoAdeudo iConstNoAdeudoId, cPersCod, sFEntrega
    Set objCOMDCredito = Nothing
End Sub

Public Function ValidarEntrega(ByVal iConstNoAdeudoId As Integer) As ADODB.Recordset
    Dim objCOMDCredito As COMDCredito.DCOMCredito
    Set objCOMDCredito = New COMDCredito.DCOMCredito
    Set ValidarEntrega = objCOMDCredito.ValidarEntrega(iConstNoAdeudoId)
    Set objCOMDCredito = Nothing
End Function

'***
'madm 20100316 - update 20100412 --------------------------------------------
Public Function ImprimeClientesRecuperacionesBN(ByVal psCodUser As String, _
ByVal psFecSis As Date, ByVal pdFecha As Date, Optional ByVal psNomCmac As String = "") As String

Dim oDCred As COMDCredito.DCOMCreditos
Dim oImpre As COMFunciones.FCOMImpresion
Dim R As ADODB.Recordset
Dim sCadImp As String
Dim vMoney As String
Dim vage As String
Dim vcondC As String
Dim pos As Integer
Dim lnTotMontoDif As Double
Dim lnTotMontoDif1 As Double
Dim lnAcuTotMontoDif As Double
Dim lnTotMonto As Double
Dim lnTotMonto1 As Double
Dim lnAcuTotMonto As Double
Dim lnAcuTotMonto1 As Double
Dim lcTitulo As String
Set oImpre = New COMFunciones.FCOMImpresion

    Screen.MousePointer = 11
    Set oDCred = New COMDCredito.DCOMCreditos
    Set R = oDCred.ReportesListaRecuperacionesBN(pdFecha)
    
    Set oDCred = Nothing
    
    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If
    
    
        sCadImp = ""
        'sCadImp = sCadImp & "CAJA MAYNAS" & Chr(10)  ''lnSaltoLinDoc
        sCadImp = sCadImp & psNomCmac & Space(50) & "FECHA :" & Format$(psFecSis, "dd/mm/yyyy") & " - " & Format(Now(), "hh:mm:ss") & Chr$(10)
        sCadImp = sCadImp & "RUC : 20103845328" & Space(60) & "USUARIO : " & psCodUser & Chr$(10) 'lnSaltoLinDoc & lnSaltoLinDoc
        sCadImp = sCadImp & Chr(10)
        
        lcTitulo = "LISTADO DE RECUPERACIONES COBRADAS (BANCO DE LA NACION)" & " DE FECHA " & Format$(pdFecha, "dd/mm/yyyy") & Chr$(10)
        sCadImp = sCadImp & oImpre.Centra(lcTitulo, 100) & Chr(10)
        sCadImp = sCadImp & Chr(10)
        
    sCadImp = sCadImp & "ITEM     COD.CTA.          NOMBRE CLIENTE                       CUOTA    IMP COBRADO    IMP PAGADO     IMP DIF" & Chr$(10)
    sCadImp = sCadImp & String(120, "-") & Chr(10) ' lnSaltoLinDoc
    vMoney = ""
    vcondC = ""
    vage = ""
    
    Dim nChangeSituacion As Integer
    Dim nChangeMoneda As Integer
    Dim nChangeAgencia As Integer
    
    nChangeAgencia = 0
    nChangeSituacion = 0
    lnTotMonto = 0
    lnTotMonto1 = 0
    nChangeMoneda = 0
    pos = 0
    
    Do While Not R.EOF
        If vMoney <> R!Moneda Then
            nChangeMoneda = 1
        End If
        
        If R!Agencia <> vage Then
            nChangeAgencia = 1
        End If
                            
        If R!Valor <> vcondC Or nChangeAgencia = 1 Then
                            
             If vcondC <> "" Then
                    sCadImp = sCadImp & String(120, "-") & Chr(10)
                    sCadImp = sCadImp & Space(73)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 10, 2)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif1, 10, 2)
                    sCadImp = sCadImp & Chr(10)
            End If
                
            If nChangeMoneda = 1 Then
                sCadImp = sCadImp & "MONEDA  : " & R!Moneda & Chr(10)
            End If
            
            If nChangeAgencia = 1 Then
                sCadImp = sCadImp & "  AGENCIA  : " & R!Agencia & Chr(10)
            End If
         
            sCadImp = sCadImp & "    SITUACIÓN : " & R!Valor & Chr(10)
            sCadImp = sCadImp & String(120, "-") & Chr(10)
            lnTotMonto = 0
            lnTotMonto1 = 0
            lnTotMontoDif1 = 0
         End If
         
         nChangeMoneda = 0
         nChangeAgencia = 0
         
        pos = pos + 1
        sCadImp = sCadImp & oImpre.ImpreFormat(pos, 5, 0)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cCodCtafull, 18)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNombreCliente, 40)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nNroCuota, 5, 0)
        sCadImp = sCadImp & Space(3)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCuota, 8)
        sCadImp = sCadImp & Space(2)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCobrado, 8)
        sCadImp = sCadImp & Space(2)
        lnTotMontoDif = CDbl(R!nImporteCuota - R!nImporteCobrado)
        sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif, 8)
        sCadImp = sCadImp & Chr(10)

        lnTotMonto = lnTotMonto + R!nImporteCuota
        lnTotMonto1 = lnTotMonto1 + R!nImporteCobrado
        lnAcuTotMonto = lnAcuTotMonto + R!nImporteCuota
        lnAcuTotMonto1 = lnAcuTotMonto1 + R!nImporteCobrado
        lnTotMontoDif1 = lnTotMontoDif1 + lnTotMontoDif
        lnAcuTotMontoDif = lnAcuTotMontoDif + lnAcuTotMontoDif
        
        vcondC = R!Valor
        vMoney = R!Moneda
        vage = R!Agencia
        
        R.MoveNext
        If R.EOF Then
               Exit Do
        End If
    Loop
    
        If (lnTotMonto + lnTotMonto1) > 0 Then
            sCadImp = sCadImp & String(120, "-") & Chr(10)
            sCadImp = sCadImp & Space(73)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif1, 10, 2) & Chr(10)
            sCadImp = sCadImp & String(120, "-") & Chr(10)
            sCadImp = sCadImp & Space(73)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto1, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMontoDif, 10, 2)
        End If
        
    R.Close
    Set R = Nothing
    ImprimeClientesRecuperacionesBN = sCadImp
    Screen.MousePointer = 0
End Function

'madm 20100709 - corresponsalia
Public Function ImprimeClientesCorresponsaliaBN(ByVal psCodUser As String, _
ByVal psFecSis As Date, ByVal pdFecha As Date, Optional ByVal psNomCmac As String = "") As String

Dim oDCred As COMDCredito.DCOMCreditos
Dim oImpre As COMFunciones.FCOMImpresion
Dim R As ADODB.Recordset
Dim sCadImp As String
Dim vMoney As String
Dim vage As String
Dim vcondC As String
Dim pos As Integer
Dim lnTotMontoDif As Double
Dim lnTotMontoDif1 As Double
Dim lnAcuTotMontoDif As Double
Dim lnTotMonto As Double
Dim lnTotMonto1 As Double
Dim lnAcuTotMonto As Double
Dim lnAcuTotMonto1 As Double
Dim lcTitulo As String
Set oImpre = New COMFunciones.FCOMImpresion

    Screen.MousePointer = 11
    Set oDCred = New COMDCredito.DCOMCreditos
    Set R = oDCred.ReportesListaCorresponsaliaBN(pdFecha)
    
    Set oDCred = Nothing
    
    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If
    
    
        sCadImp = ""
        'sCadImp = sCadImp & "CAJA MAYNAS" & Chr(10)  ''lnSaltoLinDoc
        sCadImp = sCadImp & psNomCmac & Space(50) & "FECHA :" & Format$(psFecSis, "dd/mm/yyyy") & " - " & Format(Now(), "hh:mm:ss") & Chr$(10)
        sCadImp = sCadImp & "RUC : 20103845328" & Space(60) & "USUARIO : " & psCodUser & Chr$(10) 'lnSaltoLinDoc & lnSaltoLinDoc
        sCadImp = sCadImp & Chr(10)
        
        lcTitulo = "LISTADO DE REGISTROS PROCESADAS POR CORRESPONSALIA (BANCO DE LA NACION)" & " DE FECHA " & Format$(pdFecha, "dd/mm/yyyy") & Chr$(10)
        sCadImp = sCadImp & oImpre.Centra(lcTitulo, 100) & Chr(10)
        sCadImp = sCadImp & Chr(10)
        
    sCadImp = sCadImp & "ITEM     COD.CTA.          NOMBRE CLIENTE                       CUOTA    IMP PAGADO    IMP CUOTA     IMP DIF" & Chr$(10)
    sCadImp = sCadImp & String(120, "-") & Chr(10) ' lnSaltoLinDoc
    vMoney = ""
    vcondC = ""
    vage = ""
    
    Dim nChangeSituacion As Integer
    Dim nChangeMoneda As Integer
    Dim nChangeAgencia As Integer
    
    nChangeAgencia = 0
    nChangeSituacion = 0
    lnTotMonto = 0
    lnTotMonto1 = 0
    nChangeMoneda = 0
    pos = 0
    
    Do While Not R.EOF
        If vMoney <> R!Moneda Then
            nChangeMoneda = 1
        End If
        
        If R!Agencia <> vage Then
            nChangeAgencia = 1
        End If
                            
        If R!Valor <> vcondC Or nChangeAgencia = 1 Then
                            
             If vcondC <> "" Then
                    sCadImp = sCadImp & String(120, "-") & Chr(10)
                    sCadImp = sCadImp & Space(73)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 10, 2)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif1, 10, 2)
                    sCadImp = sCadImp & Chr(10)
            End If
                
            If nChangeMoneda = 1 Then
                sCadImp = sCadImp & "MONEDA  : " & R!Moneda & Chr(10)
            End If
            
            If nChangeAgencia = 1 Then
                sCadImp = sCadImp & "  AGENCIA  : " & R!Agencia & Chr(10)
            End If
         
            sCadImp = sCadImp & "    SITUACIÓN : " & R!Valor & Chr(10)
            sCadImp = sCadImp & String(120, "-") & Chr(10)
            lnTotMonto = 0
            lnTotMonto1 = 0
            lnTotMontoDif1 = 0
         End If
         
         nChangeMoneda = 0
         nChangeAgencia = 0
         
        pos = pos + 1
        sCadImp = sCadImp & oImpre.ImpreFormat(pos, 5, 0)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cCodCtafull, 18)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNombreCliente, 40)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nNroCuota, 5, 0)
        sCadImp = sCadImp & Space(3)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCuota, 8)
        sCadImp = sCadImp & Space(2)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCobrado, 8)
        sCadImp = sCadImp & Space(2)
        lnTotMontoDif = CDbl(R!nImporteCuota - R!nImporteCobrado)
        sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif, 8)
        sCadImp = sCadImp & Chr(10)

        lnTotMonto = lnTotMonto + R!nImporteCuota
        lnTotMonto1 = lnTotMonto1 + R!nImporteCobrado
        lnAcuTotMonto = lnAcuTotMonto + R!nImporteCuota
        lnAcuTotMonto1 = lnAcuTotMonto1 + R!nImporteCobrado
        lnTotMontoDif1 = lnTotMontoDif1 + lnTotMontoDif
        lnAcuTotMontoDif = lnAcuTotMontoDif + lnAcuTotMontoDif
        
        vcondC = R!Valor
        vMoney = R!Moneda
        vage = R!Agencia
        
        R.MoveNext
        If R.EOF Then
               Exit Do
        End If
    Loop
    
        If (lnTotMonto + lnTotMonto1) > 0 Then
            sCadImp = sCadImp & String(120, "-") & Chr(10)
            sCadImp = sCadImp & Space(73)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif1, 10, 2) & Chr(10)
            sCadImp = sCadImp & String(120, "-") & Chr(10)
            sCadImp = sCadImp & Space(73)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto1, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMontoDif, 10, 2)
        End If
        
    R.Close
    Set R = Nothing
    ImprimeClientesCorresponsaliaBN = sCadImp
    Screen.MousePointer = 0
End Function

'MADM 20110307 - 20101109 Imprime genera - Lee(cab deu)
Public Function ImprimeReporteClientesPagoVarios(ByVal psCodUser As String, ByVal psFecSis As Date, _
ByVal pdFecha As Date, ByVal ptr As Integer, Optional ByVal psNomCmac As String = "", Optional ByVal pcInst As String = "", Optional ByVal pcDeuCab As Integer = 0) As String

Dim oDCred As COMDCredito.DCOMCredito
Dim oImpre As COMFunciones.FCOMImpresion
Dim R As ADODB.Recordset
Dim sCadImp As String
Dim vMoney As String
Dim vage As String
Dim vcondC As String
Dim pos As Integer
Dim lnAcuTotMontoDif As Double
Dim lnTotMonto As Double
Dim lcTitulo As String
Set oImpre = New COMFunciones.FCOMImpresion

    Screen.MousePointer = 11
    Set oDCred = New COMDCredito.DCOMCredito

    If pcDeuCab > 0 Then
        Set R = oDCred.ReportesListaPagoVarios(ptr, pcInst, pdFecha, pcDeuCab)
    Else
        Set R = oDCred.ReportesListaPagoVarios(ptr, pcInst, pdFecha)
    End If

    Set oDCred = Nothing

    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If


        sCadImp = ""
        sCadImp = sCadImp & psNomCmac & Space(60) & "FECHA :" & Format$(psFecSis, "dd/mm/yyyy") & " - " & Format(Now(), "hh:mm:ss") & Chr$(10)
        sCadImp = sCadImp & "RUC : 20103845328" & Space(80) & "USUARIO : " & psCodUser & Chr$(10) 'lnSaltoLinDoc & lnSaltoLinDoc
        sCadImp = sCadImp & Chr(10)

        lcTitulo = "LISTADO DE CLIENTES REGISTRAD0S PARA PAGO DE SERVICIOS " & " DE FECHA " & Format$(pdFecha, "dd/mm/yyyy") & Chr$(10)
        sCadImp = sCadImp & oImpre.Centra(lcTitulo, 125) & Chr(10)
        sCadImp = sCadImp & Chr(10)

'    sCadImp = sCadImp & "ITEM   TDOC    NUMDOC     NOMBRE CLIENTE                 CONCEPTO            COD_SERVICIO                IMP_COBRAR  PERIODO" & Chr$(10)
     sCadImp = sCadImp & "ITEM   TDOC    NUMDOC        NOMBRE CLIENTE                 CONCEPTO                    COD_SERVICIO              IMP_COBRAR" & Chr$(10)
    sCadImp = sCadImp & String(125, "-") & Chr(10) ' lnSaltoLinDoc
    vMoney = ""
    vcondC = ""
    vage = ""

    Dim nChangeMoneda As Integer
    Dim nChangeAgencia As Integer

    nChangeAgencia = 0
    lnTotMonto = 0
    nChangeMoneda = 0
    pos = 0

    Do While Not R.EOF
        If vMoney <> R!Moneda Then
            nChangeMoneda = 1
        End If

             If vcondC <> "" Then
                    sCadImp = sCadImp & String(125, "-") & Chr(10)
                    sCadImp = sCadImp & Space(100)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
                    sCadImp = sCadImp & Chr(10)
            End If

            If nChangeAgencia = 0 Then
                sCadImp = sCadImp & "INSTITUCION  : " & Left(R!cPersCodCli, 60) & Chr(10)
            End If

            If nChangeMoneda = 1 Then
                sCadImp = sCadImp & "MONEDA  : " & R!Moneda & Chr(10)
                sCadImp = sCadImp & String(125, "-") & Chr(10)
            End If

         nChangeMoneda = 0
         nChangeAgencia = 1

        pos = pos + 1
        sCadImp = sCadImp & oImpre.ImpreFormat(pos, 5, 0)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nTipoDoc, 4)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNumDoc, 12)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNombre, 30)
        sCadImp = sCadImp & Space(1)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cConcepto, 25)
        sCadImp = sCadImp & Space(1)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cCodServicio, 25)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCuota, 8)
'        sCadImp = sCadImp & oImpre.ImpreFormat(R!cPeriodo, 8)
        sCadImp = sCadImp & Chr(10)

        lnTotMonto = lnTotMonto + R!nImporteCuota

        vMoney = R!Moneda

        R.MoveNext
        If R.EOF Then
               Exit Do
        End If
    Loop

        If (lnTotMonto) > 0 Then
            sCadImp = sCadImp & String(125, "-") & Chr(10)
            sCadImp = sCadImp & Space(111)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
            sCadImp = sCadImp & Chr(10)
        End If

    R.Close
    Set R = Nothing
    ImprimeReporteClientesPagoVarios = sCadImp
    Screen.MousePointer = 0
End Function
'MADM 20110311 - Comision
Public Function ImprimeReporteConvenioPagoVarios(ByVal psCodUser As String, ByVal psFecSis As Date, _
ByVal pCodAge As String, ByVal psNomCmac As String, ByVal pfiltro As Integer, ByVal ptodos As Integer) As String

Dim oDCred As COMDCredito.DCOMCredito
Dim oImpre As COMFunciones.FCOMImpresion
Dim R As ADODB.Recordset
Dim sCadImp As String
Dim vage As String
Dim vcondC As String
Dim pos As Integer
Dim lnAcuTotMonto As Double
Dim lnAcuTotMonto1 As Double
Dim lnTotMonto As Double
Dim lnTotMonto1 As Double
Dim lcTitulo As String
Set oImpre = New COMFunciones.FCOMImpresion

    Screen.MousePointer = 11
    Set oDCred = New COMDCredito.DCOMCredito
    Set R = oDCred.GetDevuelveReporteConvenioAgencia(CInt(pCodAge), pfiltro, ptodos)

    Set oDCred = Nothing

    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If

        sCadImp = ""
        sCadImp = sCadImp & psNomCmac & Space(50) & "FECHA :" & Format$(psFecSis, "dd/mm/yyyy") & " - " & Format(Now(), "hh:mm:ss") & Chr$(10)
        sCadImp = sCadImp & "RUC : 20103845328" & Space(60) & "USUARIO : " & psCodUser & Chr$(10) 'lnSaltoLinDoc & lnSaltoLinDoc
        sCadImp = sCadImp & Chr(10)

        lcTitulo = "LISTADO DE CLIENTES DE SERVICIOS REGISTRADOS" & Chr$(10)
        sCadImp = sCadImp & oImpre.Centra(lcTitulo, 120) & Chr(10)
        sCadImp = sCadImp & Chr(10)

        sCadImp = sCadImp & "ITEM  TIPO  CODIGO           INSTITUCION               REGISTRO  VENCIMIENTO      CUENTA             TIPO     MONTO " & Chr$(10)
    
    sCadImp = sCadImp & String(125, "-") & Chr(10) ' lnSaltoLinDoc
    vcondC = ""
    vage = ""

    Dim nChangeAgencia As Integer

    nChangeAgencia = 0
    lnTotMonto = 0
    lnTotMonto1 = 0
    pos = 0

    Do While Not R.EOF
            If vage <> R!cAgeDescripcion Then
                nChangeAgencia = 1
            End If
            
            If R!Cond <> vcondC Or nChangeAgencia = 1 Then
                 If vcondC <> "" Then
                    sCadImp = sCadImp & String(125, "-") & Chr(10)
                    sCadImp = sCadImp & Space(105)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 8, 2)
                    sCadImp = sCadImp & Chr(10)
                    sCadImp = sCadImp & Chr(10)
                 End If
                    lnTotMonto = 0
                    lnTotMonto1 = 0
                   
                   If nChangeAgencia = 1 Then
                        sCadImp = sCadImp & "AGENCIA  : " & Left(R!cAgeDescripcion, 30) & Chr(10)
                        sCadImp = sCadImp & String(125, "-") & Chr(10)
                   End If
            End If
                
        nChangeAgencia = 0
        pos = pos + 1
        sCadImp = sCadImp & oImpre.ImpreFormat(pos, 4, 0)
        sCadImp = sCadImp & oImpre.ImpreFormat(IIf(R!nTipoConv = 1, "TOT", "AGE"), 4)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cPersCod, 14)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cPersNombre, 25)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!fRegistro, 9)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!fVigencia, 9)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cCuenta, 20)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!Cond, 5)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteComision, 8)
        sCadImp = sCadImp & Chr(10)

        lnTotMonto = lnTotMonto + R!nImporteComision
        lnAcuTotMonto = lnAcuTotMonto + R!nImporteComision
        
        vage = R!cAgeDescripcion
        vcondC = R!Cond
        
        R.MoveNext
        If R.EOF Then
               Exit Do
        End If
    Loop

        If (lnTotMonto) > 0 Then
            sCadImp = sCadImp & String(125, "-") & Chr(10)
            sCadImp = sCadImp & Space(105)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 8, 2)
            sCadImp = sCadImp & Chr(10)
            sCadImp = sCadImp & Chr(10)
            sCadImp = sCadImp & String(125, "-") & Chr(10)
            sCadImp = sCadImp & Space(105)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto, 8, 2)
        End If

    R.Close
    Set R = Nothing
    ImprimeReporteConvenioPagoVarios = sCadImp
    Screen.MousePointer = 0
End Function
'MADM 20111217 - PAGO
Public Function ImprimeReportePagoserviciosVarios(ByVal psCodUser As String, ByVal psFecSis As Date, _
ByVal pdFecha As Date, ByVal ptr As Integer, Optional ByVal psNomCmac As String = "", Optional ByVal pcInst As String = "", Optional ByVal pcDeuCab As Integer = 0) As String

Dim oDCred As COMDCredito.DCOMCredito
Dim oImpre As COMFunciones.FCOMImpresion
Dim R As ADODB.Recordset
Dim sCadImp As String
Dim vMoney As String
Dim vage As String
Dim vcondC As String
Dim pos As Integer
Dim lnAcuTotMontoDif As Double
Dim lnTotMonto As Double
'Dim lnTotMonto1 As Double
Dim lcTitulo As String
Set oImpre = New COMFunciones.FCOMImpresion

    Screen.MousePointer = 11
    Set oDCred = New COMDCredito.DCOMCredito

    Set R = oDCred.ReportesListaPagoVariosPago(pcInst, pdFecha, ptr)

    Set oDCred = Nothing

    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If


        sCadImp = ""
        sCadImp = sCadImp & psNomCmac & Space(50) & "FECHA :" & Format$(psFecSis, "dd/mm/yyyy") & " - " & Format(Now(), "hh:mm:ss") & Chr$(10)
        sCadImp = sCadImp & "RUC : 20103845328" & Space(90) & "USUARIO : " & psCodUser & Chr$(10) 'lnSaltoLinDoc & lnSaltoLinDoc
        sCadImp = sCadImp & Chr(10)

        lcTitulo = "LISTADO DE PAGOS DE SERVICIOS " & " DE FECHA " & Format$(pdFecha, "dd/mm/yyyy") & Chr$(10)
        sCadImp = sCadImp & oImpre.Centra(lcTitulo, 140) & Chr(10)
        sCadImp = sCadImp & Chr(10)

        sCadImp = sCadImp & "ITEM   TDOC    NUMDOC     NOMBRE CLIENTE                      CONCEPTO                      RECIBO                     IMP PAGADO      FECHA" & Chr$(10)
    sCadImp = sCadImp & String(140, "-") & Chr(10) ' lnSaltoLinDoc
    vMoney = ""
    vcondC = ""
    vage = ""

    Dim nChangeMoneda As Integer
    Dim nChangeAgencia As Integer

    nChangeAgencia = 0
    lnTotMonto = 0
'    lnTotMonto1 = 0
    nChangeMoneda = 0
    pos = 0

    Do While Not R.EOF
        If vMoney <> R!Moneda Then
            nChangeMoneda = 1
        End If

'        If vage <> R!cPersCodCli Then
'            nChangeAgencia = 1
'        End If

             If vcondC <> "" Then
                    sCadImp = sCadImp & String(140, "-") & Chr(10)
                    sCadImp = sCadImp & Space(115)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
'                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 8, 2)
                    sCadImp = sCadImp & Chr(10)
            End If

            If nChangeAgencia = 0 Then
                sCadImp = sCadImp & "INSTITUCION  : " & Left(R!cPersCodCli, 30) & Chr(10)
            End If

            If nChangeMoneda = 1 Then
                sCadImp = sCadImp & "MONEDA  : " & R!Moneda & Chr(10)
                sCadImp = sCadImp & String(140, "-") & Chr(10)
            End If

         nChangeMoneda = 0
         nChangeAgencia = 1

        pos = pos + 1
        sCadImp = sCadImp & oImpre.ImpreFormat(pos, 5, 0)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nTipoDoc, 4)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNumDoc, 12)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNombre, 30)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cConcepto, 30)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cCodServicio, 25)
        sCadImp = sCadImp & Space(1)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCuota, 8)
'        sCadImp = sCadImp & Space(2)
'        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteComision, 6)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!dFechaPag, 12)
        sCadImp = sCadImp & Chr(10)

        lnTotMonto = lnTotMonto + R!nImporteCuota
'        lnTotMonto1 = lnTotMonto1 + R!nImporteComision

        vMoney = R!Moneda

        R.MoveNext
        If R.EOF Then
               Exit Do
        End If
    Loop

        If (lnTotMonto) > 0 Then
            sCadImp = sCadImp & String(140, "-") & Chr(10)
            sCadImp = sCadImp & Space(115)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
'            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 8, 2)
            sCadImp = sCadImp & Chr(10)
        End If

    R.Close
    Set R = Nothing
    ImprimeReportePagoserviciosVarios = sCadImp
    Screen.MousePointer = 0
End Function
''end madm ------------------------------

'MADM 20110530 - MAVM 20110301 ***
'Public Function DevolverPrimeraFechaPago(ByVal psCtaCod As String, ByVal pnPrestamo As Double, ByVal pdHoy As Date, ByVal pdFecApro As Date) As String
Public Function DevolverPrimeraFechaPago(ByVal psCtaCod As String, ByVal pnPrestamo As Double, ByVal pdHoy As Date, ByVal pdFecApro As Date, _
                                        Optional ByVal psIncluyeIntCap As String = "S", Optional ByVal pbCalenEstimaBN As Boolean = False) As Variant
                                        'MAVM 20130209
                                        'pbCalenEstimaBN agregado por PASI 20140107 TI-ERS136-2013
    Dim R As ADODB.Recordset
     '***ADD BY MARG20171205********
    Dim S As ADODB.Recordset
    Dim oCalendAprob As COMDCredito.DCOMCalendario
    Dim nNroCalen As Integer
    Dim nCuota As Integer
    Dim dFecDesembApriori As Date
    '***END MARG*********************
    Dim oCredito As COMDCredito.DCOMCredito
    Dim oCalend As NCOMCalendario
    Dim MatCalendPagos As Variant
    Dim MatGracia As Variant
    Dim nPeriodoGracia As Integer
    Dim nTasaInteres As Double
    Dim nNewDiasGracia As Integer
    Dim pnNewDiasGraciaNeg As Integer
    Dim pbTieneGracia As Boolean
    Dim lnIndicadorNumeroCuota() As String
    Dim ix As Integer
        
        pbTieneGracia = False
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaProducto(psCtaCod)
        nTasaInteres = Format(R!nTasaInteres, "#0.0000")
        R.Close
        Set R = Nothing
            
        Set oCredito = New COMDCredito.DCOMCredito
        Set oCalend = New NCOMCalendario
        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
                
        'nPeriodoGracia = IIf(IsNull(R!nPeriodoGracia), 0, R!nPeriodoGracia) 'COMMENT BY MARG20171205
        '***ADD BY MARG20171205***************************************************
        nPeriodoGracia = oCredito.GetPeriodoGraciaCalculado(psCtaCod)
        Set S = oCredito.RecuperaColocacCred(psCtaCod)
        nCuota = IIf(IsNull(S!nNroProxDesemb), 0, S!nNroProxDesemb)
        nNroCalen = IIf(IsNull(S!nNroCalen), 0, S!nNroCalen)
         S.Close
         Set S = Nothing
         Set oCalendAprob = New COMDCredito.DCOMCalendario
         Set S = oCalendAprob.RecuperaColocCalendario(psCtaCod, nNroCalen, gColocCalendAplDesembolso, nCuota)
         dFecDesembApriori = CDate(Format(S!dVenc, "dd/mm/yyyy"))
         S.Close
         Set S = Nothing
        '***END MARG***************************************************
        ' MADM 20110531 - 20110420
        nNewDiasGracia = 0
        pnNewDiasGraciaNeg = 0
        ReDim lnIndicadorNumeroCuota(2)
        If nPeriodoGracia > 0 Then
            pbTieneGracia = True
            'If pdFecApro <> pdHoy Then 'COMMENT BY MARG20171205
               'If nPeriodoGracia > CInt(DateDiff("d", pdFecApro, pdHoy)) Then 'COMMENT BY MARG20171205
               If nPeriodoGracia > CInt(DateDiff("d", dFecDesembApriori, pdHoy)) Then 'ADD BY MARG20171205
                    'nNewDiasGracia = Abs(nPeriodoGracia - CInt(DateDiff("d", pdFecApro, pdHoy))) 'COMMENT BY MARG20171205
                    nNewDiasGracia = Abs(nPeriodoGracia - CInt(DateDiff("d", dFecDesembApriori, pdHoy))) 'ADD BY MARG20171205
               Else
                    nNewDiasGracia = 0
                    'pnNewDiasGraciaNeg = nPeriodoGracia - (CInt(DateDiff("d", pdFecApro, pdHoy))) 'COMMENT BY MARG20171205
                    pnNewDiasGraciaNeg = nPeriodoGracia - (CInt(DateDiff("d", dFecDesembApriori, pdHoy))) 'ADD BY MARG20171205
               End If
               nPeriodoGracia = nNewDiasGracia
               If Not pbCalenEstimaBN Then 'PASI 20140107 TI-ERS136-2013
                    oCredito.ActualizarColocacEstadoDiasAtraso psCtaCod, gColocEstAprob, nPeriodoGracia
               End If 'PASI 20140107 TI-ERS136-2013
            'End If
        End If
        'END MADM 20110420 , , , , , , , , , , , , , , pdFecApro
        
         For ix = 0 To 2
            If ix = 0 Then
                If pbTieneGracia Then
                    lnIndicadorNumeroCuota(ix) = "1"
                Else
                    lnIndicadorNumeroCuota(ix) = "0"
                End If
            ElseIf ix = 1 Then
                If pnNewDiasGraciaNeg <> 0 Then
                    lnIndicadorNumeroCuota(ix) = pnNewDiasGraciaNeg
                Else
                    lnIndicadorNumeroCuota(ix) = "0"
                End If
            Else
                lnIndicadorNumeroCuota(ix) = "0"
            End If
         Next ix
        
        
        If nPeriodoGracia > 0 Then
            MatGracia = oCalend.GeneraGracia(R!nTipoGracia, CDbl(Format(TasaIntPerDias(nTasaInteres, nPeriodoGracia) * pnPrestamo, "#0.00")), R!nCuotas)
        End If
        MatCalendPagos = oCalend.GeneraCalendario(pnPrestamo, nTasaInteres, R!nCuotas, R!nPlazo, _
            pdHoy, DameTipoCuota(R!nColocCalendCod), DameTipoPeriodo(R!nColocCalendCod), _
            IIf(IsNull(R!nTipoGracia), 0, R!nTipoGracia), nPeriodoGracia, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), _
            IIf(R!nProxMes = 0, False, True), MatGracia, , , , , , , , , , , , , , pdFecApro, lnIndicadorNumeroCuota, , psIncluyeIntCap)
        
        'MADM 20110531
        lnIndicadorNumeroCuota(2) = MatCalendPagos(0, 0)
        DevolverPrimeraFechaPago = lnIndicadorNumeroCuota
        
        R.Close
        Set R = Nothing
        Set oCredito = Nothing
        Set oCalend = Nothing
End Function

Public Function DevolverFechaAprobacion(ByVal psCtaCod As String) As String
    Dim R As ADODB.Recordset
    Dim oCon As COMConecta.DCOMConecta
    Dim sSql As String
    
    'sSql = "SELECT dPrdEstado FROM ColocacEstado WHERE cCtaCod='" & psCtaCod & "'" & " And nPrdEstado = " & gColocEstAprob 'COMMENT BY MARG20171205
    sSql = " EXEC stp_sel_DevolverFechaAprobacion '" & psCtaCod & "'" 'ADD BY MARG20171205
    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    Set R = oCon.CargaRecordSet(sSql)
        If Not R.EOF Then
            DevolverFechaAprobacion = Mid(R!dPrdEstado, 1, 10)
        End If
    oCon.CierraConexion
    Set oCon = Nothing
End Function

'***BRGO 20111012 ***********************************************************
Public Function fgDiferenciaRedondeoITF(ByVal lnITF As Double) As Double
    Dim lnPos As Integer
    Dim DifITF As Double

    lnPos = InStr(1, Trim(Str(lnITF)), ".")
    If lnPos > 0 Then
        DifITF = Round((lnITF * 100 Mod 10) / 100, 2)
        DifITF = IIf(DifITF = 0.05, 0, IIf(DifITF > 0.05, DifITF - 0.05, DifITF))
    Else
        DifITF = 0
    End If
    fgDiferenciaRedondeoITF = Round(DifITF, 2)
End Function

'ALPA 20111209
Public Function GrabarPagoCuotasLeasing(ByVal psCtaCod As String, _
                                ByVal pnMivivienda As Integer, _
                                ByVal pnCalPago As Integer, _
                                ByVal pnMontoPago As Double, ByVal pdFecSis As Date, _
                                ByVal psMetLiquid As String, ByVal pnTipoPago As Integer, _
                                ByVal psCodAge As String, ByVal psCodUser As String, ByVal psCodCMAC As String, ByVal psNroDoc As String, _
                                ByVal pbRecepcionCmact As Boolean, ByVal psPersCmac As String, _
                                ByVal pvnIntPendiente As Double, ByVal pvnIntPendientePagado As Double, _
                                ByVal pbPrepago As Integer, ByVal psPersLavDinero As String, ByVal pnITF As Double, _
                                ByVal pnInteresDesagio As Double, ByVal pnTotDeuda As Double, ByVal pbCalenDinamic As Boolean, _
                                ByVal pnMonCalDin As Double, ByVal nCalendDinamTipo As Integer, _
                                ByVal psNomAge As String, ByVal pnCtaProd As Long, _
                                ByVal psPersNombre As String, ByVal psMoneda As String, ByVal pnNroTransac As String, _
                                ByVal psProxFecPago As String, ByVal psLpt As String, ByVal psInstCmac As String, _
                                ByVal pbPagoCheque As Boolean, ByVal psNumCheque As String, _
                                ByRef psError As String, ByRef psImprePlanPago As String, ByRef psImpreBoleta As String, _
                                ByVal pnDiasAtraso As Integer, _
                                Optional ByVal psProyectoActual As String = "", Optional pbImpTMU As Boolean = False, _
                                Optional psTitLavDinero As String = "", _
                                Optional psOrdLavDinero As String = "", _
                                Optional psReaLavDinero As String = "", _
                                Optional psBenLavDinero As String = "", _
                                Optional psVisLavDinero As String = "", _
                                Optional pnMovNro As Long = 0, Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", Optional ByVal psTpoCredCod As String = "")
                                'DAOR 20070511, psVisLavDinero

                    'By Capi 28012007 se agrego parametros sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero

'Los Gastos se calcularan en el Componente
'ByVal pMatGastosFinal As Variant, ByVal pnNumGastosFinal As Integer
'*********************************************
'Dim oNegCred As COMNCredito.NCOMCredito
Dim oDoc As COMNCredito.NCOMCredDoc
Dim oConstante As COMDConstantes.DCOMConstantes
Dim sError As String
Dim sTipoCred As String
Dim MatCalDinam As Variant
Dim MatCalDinam_2 As Variant
Dim sCad As String
Dim sCad2 As String
    
    On Error GoTo ErrorGrabarPagoCuotasLeasing
    
          
    If pnMivivienda = 1 Then
        'Salvo porque lo voy a utilizar luego para imprimir las boletas
        pMatCalendDistribuidoTempo = pMatCalendDistribuido
        pMatCalend_2 = pMatCalend
        pMatCalendDistribuido_2 = CrearMatrizparaAmortizacion(pMatCalend_2)
        pMatCalendDistribuidoParalelo = CrearMatrizparaAmortizacion(pMatCalendParalelo)
        Call DistribuirMatrizMiVivEnDosCalendarios(pMatCalendDistribuidoParalelo, pMatCalendDistribuido_2, pMatCalendDistribuido, pMatCalendParalelo, pMatCalendNormalT1, pnCalPago)
        pMatCalendDistribuido = pMatCalendDistribuido_2
    End If
                
    'Se Agrego para manejar los Gastos en el Componente
    Dim MatGastosFinal As Variant
    Dim nNumGastosFinal As Integer
    Dim oGastos As NCOMGasto
    Set oGastos = New NCOMGasto
    'ALPA 20100607 B2**********************************************************************************
    'MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "CA", , , pnTotDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , pnDiasAtraso)
    MatGastosFinal = oGastos.GeneraCalendarioGastos(Array(0), Array(0), nNumGastosFinal, pdFecSis, psCtaCod, 1, "CA", , , pnTotDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , pnDiasAtraso, , , , , psAgeCodAct, psTpoProdCod, psTpoCredCod)
    '**************************************************************************************************
    Set oGastos = Nothing
    '*******************************
    
    psError = AmortizarCreditoLeasing(psCtaCod, pMatCalend, pMatCalendDistribuido, _
                pnMontoPago, pdFecSis, psMetLiquid, pnTipoPago, _
                psCodAge, psCodUser, psNroDoc, , , , pbRecepcionCmact, psPersCmac, _
                pvnIntPendiente, pvnIntPendientePagado, , MatGastosFinal, nNumGastosFinal, pMatCalendDistribuidoParalelo, _
                pnCalPago, pMatCalendParalelo, pbPrepago, psPersLavDinero, pnITF, pnInteresDesagio, , , psProyectoActual, psTitLavDinero, psOrdLavDinero, psReaLavDinero, psBenLavDinero, psVisLavDinero, pnMovNro)
        
    'By Capi 28012007 se agrego parametros sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero
    
    'ARCV 27-06-2007
    If psError <> "" Then
        psImpreBoleta = "ERROR EN LA REGISTRO DE LA OPERACION"
        Exit Function
    End If
    '----------
        
        If psError <> "" Then
        '    MsgBox sError, vbInformation, "Aviso"
        Else
            'Verifica si fue un pago para Calendario Dinamico
            'bPrepago nCalendDinamTipo
            If (pbCalenDinamic Or pbPrepago = 1) And (pnMontoPago < pnTotDeuda) Then
                If pnMontoPago > pnMonCalDin Then
                    If pnMivivienda = 1 Then
                        MatCalDinam = ReprogramarCreditoenMemoriaTotalMiVivienda(psCtaCod, pdFecSis, MatCalDinam_2, IIf(nCalendDinamTipo = 1, True, False))
                        'Reporgramacion 2 de otorgar un nuevo calendario en basae al saldo de capital pendiente
                        'Como si fueera un nuevo credito bajo las cuotas pendientes
                        ReprogramarCredito psCtaCod, MatCalDinam, 2, True, MatCalDinam_2, pdFecSis, , psCodUser, psCodAge
                        Call ActualizarCalificacionMIVivienda(psCtaCod)
                        Set oDoc = New COMNCredito.NCOMCredDoc
                        sCad = oDoc.ImprimePlandePagos(psCtaCod, psNomAge, pdFecSis, psCodUser, MatrizCapitalCalendario(MatCalDinam) + MatrizCapitalCalendario(MatCalDinam_2), True)
                        sCad2 = oDoc.ImprimePlandePagos(psCtaCod, psNomAge, pdFecSis, psCodUser, MatrizCapitalCalendario(MatCalDinam) + MatrizCapitalCalendario(MatCalDinam_2), True, True)
                        
                        Set oDoc = Nothing
                        
                        psImprePlanPago = sCad & sCad2
                    Else
                        'MAVM 20100826 ***
                        'MatCalDinam = ReprogramarCreditoenMemoriaTotal(psCtaCod, pdFecSis)
                        MatCalDinam = ReprogramarCreditoenMemoriaTotal(psCtaCod, pdFecSis, , pnMontoPago)
                        '***
                        'Reporgramacion 2 de otorgar un nuevo calendario en basae al saldo de capital pendiente
                        'Como si fueera un nuevo credito bajo las cuotas pendientes
                        ReprogramarCredito psCtaCod, MatCalDinam, 2, , , pdFecSis, , psCodUser, psCodAge
                        Set oDoc = New COMNCredito.NCOMCredDoc
                        sCad = oDoc.ImprimePlandePagos(psCtaCod, psNomAge, pdFecSis, psCodUser, MatrizCapitalCalendario(MatCalDinam), False)
                        Set oDoc = Nothing
                        
                        psImpreBoleta = sCad
                        
                    End If
                                    
                End If
            End If
            
            
            Set oConstante = New COMDConstantes.DCOMConstantes
            sTipoCred = oConstante.DameDescripcionConstante(gProducto, pnCtaProd)
            Set oConstante = Nothing
            
            Set oDoc = New COMNCredito.NCOMCredDoc
            If pnMivivienda = 1 Then
                'Recupero para imprimir las boletas
                pMatCalendDistribuido = pMatCalendDistribuidoTempo
            End If
            
            Dim oFecha As COMDConstSistema.DCOMGeneral
            Set oFecha = New COMDConstSistema.DCOMGeneral
            
            psImpreBoleta = oDoc.ImprimeBoleta(psCtaCod, psPersNombre, psNomAge, psMoneda, _
                MatrizCuotasPagadas(pMatCalendDistribuido), pdFecSis, Format(oFecha.FechaHora(pdFecSis), "hh:mm:ss"), pnNroTransac + 1, Mid(sTipoCred, 1, 18), _
                MatrizCapitalPagado(pMatCalendDistribuido), MatrizIntCompPagado(pMatCalendDistribuido), _
                MatrizIntCompVencPagado(pMatCalendDistribuido), _
                MatrizIntMorPagado(pMatCalendDistribuido), MatrizGastoPag(pMatCalendDistribuido), _
                MatrizIntGraciaPagado(pMatCalendDistribuido), _
                MatrizIntSuspensoPag(pMatCalendDistribuido) + MatrizIntReprogPag(pMatCalendDistribuido), _
                MatrizSaldoCapital(pMatCalend, pMatCalendDistribuido), psProxFecPago, _
                psCodUser, psLpt, psInstCmac, pbPagoCheque, psNumCheque, psCodCMAC, pnITF, pnInteresDesagio, pbRecepcionCmact, , , pbImpTMU)
            
            Set oFecha = Nothing
            
            Set oDoc = Nothing
                    
        End If
    
    Exit Function

ErrorGrabarPagoCuotasLeasing:
    Err.Raise Err.Number, "Error", Err.Description

End Function
Public Function AmortizarCreditoLeasing(ByVal psCtaCod, ByVal MatCalend As Variant, ByVal MatCalendDistrib As Variant, _
            ByVal pnMonto As Double, ByVal pdHoy As Date, ByVal psMetLiquid As String, _
            ByVal pnTipoPago As ColocTipoPago, ByVal psCodAge As String, ByVal psCodUser As String, _
            Optional psNroDoc As String = "", Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing, _
            Optional ByVal pnMovNro As Long = -1, Optional ByVal pnNroDacion As Integer = -1, Optional pbEnOtraCmac As Boolean = False, _
            Optional psPersCmac As String = "", Optional ByVal pnIntPend As Double = 0, Optional ByVal pnIntPendPagado As Double = 0, _
            Optional psMovnroTemp As String = "", Optional ByVal pMatGastosGen As Variant = "", Optional ByVal pnNumGastosGen As Integer = -1, _
            Optional ByVal MatCalendDistribParalelo As Variant = "", Optional ByVal pnCalPago As Integer = 1, Optional ByVal MatCalendParalelo As Variant = "", _
            Optional ByVal pnPrepago As Integer = 0, Optional psPersLavDinero As String = "", Optional pnITF As Double = 0#, Optional ByVal pnMontoDesagio As Double = 0, _
            Optional ByVal pbInicioTrans As Boolean = False, Optional ByRef psMensajeValidacion As String = "", _
            Optional ByVal psProyectoActual As String = "", _
            Optional ByVal psTitLavDinero As String = "", _
            Optional ByVal psOrdLavDinero As String = "", _
            Optional ByVal psReaLavDinero As String = "", _
            Optional ByVal psBenLavDinero As String = "", _
            Optional ByVal psVisLavDinero As String = "", _
            Optional pnMovNroTem As Long = 0) As String  'DAOR 20070511,psVisLavDinero



'By Capi 20012008 se agrego los ultimos 5 parametros

Dim oBase As COMDCredito.DCOMCredActBD
Dim nEstadoCred As Integer
Dim nEstadoCredTemp As Integer
Dim R As ADODB.Recordset
Dim oCred As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim nTransacc As Long
Dim sLineaCred As String
Dim nMontoColocado As Double
Dim dFecPend As Date
Dim nDiasAtraso As Integer
Dim i, k As Integer
Dim nNroCalen As Integer
Dim nMontoGasto As Double
Dim sMovNro As String
Dim nMovNro As Long
Dim nConsCred As String
Dim pnPlazo As Integer
Dim bTran As Boolean

Dim dFechaTran As Date
Dim nIntPend As Double
Dim nMontoPago As Double
Dim nMontoPago_2 As Double
Dim nNroCalPar As Integer
Dim nMivivienda As Integer
Dim MatGastosCred As Variant
Dim NumregGastosCred As Integer
Dim MatGastosCuota As Variant
Dim NumRegGastosCuota As Integer
Dim nBuenPagador As Integer
Dim nPrestamo As Double
Dim CapitalPagado As Double
Dim nDiasAtrasoMov As Integer
Dim opeITFChequeEfect As String

Dim nCapitalVAC As Double
nCapitalVAC = 0
'Dim bGarantAval As Boolean 'JUEZ 20130429
'************************

    On Error GoTo ErrorAmortizarPago

    If pnTipoPago = gColocTipoPagoCheque Then
        opeITFChequeEfect = "990107"
    'ARCV 08-09
    ElseIf pnTipoPago = gColocTipoPagoCargoCta Then
        opeITFChequeEfect = gITFCobroCargo '"990101"
    Else
        opeITFChequeEfect = gCredITF
    End If

    AmortizarCreditoLeasing = ""
    AmortizarCreditoLeasing = ValidaAmortizacionCredito(pnMonto)
    If AmortizarCreditoLeasing <> "" Then
        Exit Function
    End If
    bTran = False
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaProducto(psCtaCod)
    Set oCred = Nothing
    nEstadoCred = R!nPrdEstado
    nEstadoCredTemp = R!nPrdEstado
    nTransacc = R!nTransacc
    R.Close

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    nPrestamo = R!nMontoCol
    R.Close
    Set R = Nothing
    'EJVG20151119 Se comentó asiento reversión de avales
    ''JUEZ 20130429 ***************************
    'Set oCred = New COMDCredito.DCOMCredito
    'Set R = oCred.RecuperaGarantes(psCtaCod)
    'Set oCred = Nothing
    'bGarantAval = False
    'If Not R.EOF Then
    '    bGarantAval = True
    'End If
    'Set R = Nothing
    ''END JUEZ ********************************

    If pnTipoPago <> gColocTipoPagoDacionPago Then
        If pnTipoPago <> gColocTipoPagoCargoCta Then
            'Definir Codigo de Operacion de Pago
            Select Case nEstadoCred
                'Si es Credito refinanciado
                Case gColocEstRefMor
                    If Not pbEnOtraCmac Then
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEfec, gCredPagRefMorCh)
                    Else
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefMorEOCEfec, gCredPagRefMorEOCCh)
                    End If
                Case gColocEstRefNorm
                    If Not pbEnOtraCmac Then
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEfec, gCredPagRefNorCh)
                    Else
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefNorEOCEfec, gCredPagRefNorEOCCh)
                    End If
                Case gColocEstRefVenc
                    If Not pbEnOtraCmac Then
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEfec, gCredPagRefVenCh)
                    Else
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagRefVenEOCEfec, gCredPagRefVenEOCCh)
                    End If
                'si es Credito Normal
                Case gColocEstVigMor
                    If Not pbEnOtraCmac Then
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEfec, gCredPagNorMorCh)
                    Else
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorMorEOCEfec, gCredPagNorMorEOCCh)
                    End If
                Case gColocEstVigNorm
                    If Not pbEnOtraCmac Then
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEfec, gCredPagNorNorCh)
                    Else
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorNorEOCEfec, gCredPagNorNorEOCCh)
                    End If
                Case gColocEstVigVenc
                    If Not pbEnOtraCmac Then
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEfec, gCredPagNorVenCh)
                    Else
                        nConsCred = IIf(pnTipoPago = gColocTipoPagoEfectivo, gCredPagNorVenEOCEfec, gCredPagNorVenEOCCh)
                    End If
            End Select
        Else
            Select Case nEstadoCred
            'Si es Credito refinanciado
            Case gColocEstRefMor
                nConsCred = gCredPagRefMorCC

            Case gColocEstRefNorm
                nConsCred = gCredPagRefNorCC

            Case gColocEstRefVenc
                nConsCred = gCredPagRefVenCC

            'si es Credito Normal
            Case gColocEstVigMor
                nConsCred = gCredPagNorMorCC

            Case gColocEstVigNorm
                nConsCred = gCredPagNorNorCC

            Case gColocEstVigVenc
                nConsCred = gCredPagNorVenCC
            End Select
        End If
    Else
        'Definir Codigo de Operacion de Pago
        Select Case nEstadoCred
            'Si es Credito refinanciado
            Case gColocEstRefMor
                nConsCred = gCredPagRefMorDacion
            Case gColocEstRefNorm
                nConsCred = gCredPagRefNorDacion
            Case gColocEstRefVenc
                nConsCred = gCredPagRefVenDacion
            'si es Credito Normal
            Case gColocEstVigMor
                nConsCred = gCredPagNorMorDacion
            Case gColocEstVigNorm
                nConsCred = gCredPagNorNorDacion
            Case gColocEstVigVenc
                nConsCred = gCredPagNorVenDacion
        End Select
    End If
    If nConsCred = "" Then
        'MsgBox "No se ha definido la operación correctamente " & vbCrLf & _
               "Consulte con la Oficina de T.I", vbInformation, "AVISO"
        psMensajeValidacion = "No se ha definido la operación correctamente. Consulte con la Oficina de T.I"
        Exit Function
    End If

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set oCred = Nothing
    pnPlazo = IIf(IsNull(R!nPlazo), 0, R!nPlazo)

    R.Close
    Set R = Nothing

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    Set oCred = Nothing
    'Manejo de Operaciones VAC
    Dim bVAC As Boolean
    bVAC = IIf(IsNull(R!bVAC), False, R!bVAC)
    '**********************
    nNroCalen = R!nNroCalen
    nNroCalPar = R!nNroCalPar
    nMivivienda = IIf(IsNull(R!bMiVivienda), 0, R!bMiVivienda)
    nBuenPagador = IIf(IsNull(R!nCalPago), 0, R!nCalPago)
    nDiasAtrasoMov = IIf(IsNull(R!nDiasAtraso), 0, R!nDiasAtraso)
    R.Close
    Set R = Nothing

    Set oBase = New COMDCredito.DCOMCredActBD

    If psMovnroTemp <> "" Then
        sMovNro = psMovnroTemp
    Else
        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    End If

    '*******************************************************************
    'Inserta o Actualiza Gastos Generados por la Operacion
    '*******************************************************************
    If pbInicioTrans = False Then
        Call oBase.dBeginTrans
    End If
    If IsArray(pMatGastosGen) Then
        Set oCred = New COMDCredito.DCOMCredito
        For i = 0 To pnNumGastosGen - 1
            If (MatrizEstadoCalendario(MatCalendDistrib) = gColocCalendEstadoPagado And pMatGastosGen(i, 4) = "CA") Or (pnPrepago = 1 And pMatGastosGen(i, 4) = "PP") Or pMatGastosGen(i, 4) = "PA" Then
                If oCred.ExisteGasto(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10)))) Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10))), CDbl(pMatGastosGen(i, 3)), , "", False, , True)
                Else
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen, CInt(Trim(Right(pMatGastosGen(i, 0), 2))), CInt(pMatGastosGen(i, 1)), CLng(Trim(Right(pMatGastosGen(i, 2), 10))), CDbl(pMatGastosGen(i, 3)), 0, "", False)
                End If
            End If
        Next i
        Set oCred = Nothing
    End If
    If pbInicioTrans = False Then
     Call oBase.dCommitTrans
     Set oBase = Nothing
    End If
    '**********************************************************************
    '****** En Caso de Que sea cancelacion Con un Desembolso
    '**********************************************************************
    bTran = True
    If pConnBase Is Nothing Then
        Set oBase = New COMDCredito.DCOMCredActBD
        If pbInicioTrans = False Then
            Call oBase.dBeginTrans
        End If
    Else
        Set oBase = pConnBase
    End If
    dFechaTran = CDate(Format(Format(pdHoy, "dd/mm/yyyy") & " " & Format(oBase.dFechaHora, "hh:mm:ss"), "dd/mm/yyyy hh:mm:ss"))

    'Actualiza Producto
    If MatrizEstadoCalendario(MatCalendDistrib) = gColocCalendEstadoPagado Then
        nEstadoCred = gColocEstCancelado
    End If

    If nMivivienda = 1 Then
        Call oBase.dUpdateProducto(psCtaCod, , MatrizSaldoCapitalMiVivienda(MatCalend, MatCalendDistrib, MatCalendDistribParalelo, MatCalendParalelo), nEstadoCred, pdHoy, nTransacc + 1, False)
    Else
        Call oBase.dUpdateProducto(psCtaCod, , MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCred, pdHoy, nTransacc + 1, False)
    End If

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    sLineaCred = R!cLineaCred
    R.Close
    Set R = Nothing
    '********* ACTIVAR PARA CONTRO DEL SALDOS DE LINEA
    'Set R = oBase.RecuperaLineasCreditoSaldo(sLineaCred, True)
    'nMontoColocado = R!nMontoColocado
    'R.Close
    'Set R = Nothing
    'nMontoColocado = nMontoColocado - pnMonto
    'Call oBase.dUpdateLineaCreditoSaldo(sLineaCred, , , nMontoColocado, , , False)

    'Actualiza ColocacCred
    dFecPend = MatrizFechaCuotaPendiente(MatCalend, MatCalendDistrib)
    If MatrizCuotaPendiente(MatCalend, MatCalendDistrib) = 0 Then
        nDiasAtraso = 0
    Else
        nDiasAtraso = pdHoy - dFecPend
    End If

    nIntPend = pnIntPend - pnIntPendPagado
    Call oBase.dUpdateColocacCred(psCtaCod, nDiasAtraso, , , , , , , MatrizCuotaPendiente(MatCalend, MatCalendDistrib), nIntPend, , , , , , , , , False)

    'Insert Movimientos
    If psMovnroTemp <> "" Then
        nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        If nMovNro = 0 Then
            Call oBase.dInsertMov(psMovnroTemp, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
            nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        End If
    Else
        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oBase.dGetnMovNro(sMovNro)
    End If
    pnMovNroTem = nMovNro

    'ARCV 20-06-2007 : OJO: NO HACER NADA SI NO GRABO EL MOV
    If nMovNro = 0 Then
        Call oBase.dRollbackTrans
        AmortizarCreditoLeasing = "No se pudo grabar la operación"
        Exit Function
    End If
    '-----------

    '************************************************************************************
    'Si es una Pago en Otra Cmac
    '************************************************************************************
    If pbEnOtraCmac Then
        Call oBase.dInsertMovCMAC(nMovNro, psPersCmac, Format$(gTpoIFCmac, "00"), CInt(Mid(psCtaCod, 9, 1)), "", psNroDoc, nConsCred, pnMonto, False)
    End If
    '************************************************************************************
    'Si es Cancelado con un Desembolso Insertar su Referencia
    '************************************************************************************
    'If Not pConnBase Is Nothing Then
    '    Call oBase.dInsertMovRef(pnMovnro, nMovNro, False)
    'End If

    If pnTipoPago = gColocTipoPagoCheque Then
        Call oBase.dInsertaMovDoc(nMovNro, TpoDocCheque, psNroDoc, dFechaTran, False)
    End If

    If pnTipoPago <> gColocTipoPagoDacionPago Then
        If nMivivienda = 1 Then
            nMontoPago = MatrizMontoPagado(MatCalendDistrib)
            'Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, IIf(pnMontoDesagio > 0, nMontoPago - pnMontoDesagio, nMontoPago), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, nMontoPago, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
        Else
            'Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, IIf(pnMontoDesagio > 0, pnMonto - pnMontoDesagio, pnMonto), nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, pnMonto, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, , pnPrepago)
        End If
    Else
        Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, pnMonto, nDiasAtrasoMov, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalend, MatCalendDistrib), nEstadoCredTemp, False, pnNroDacion, pnPrepago)
    End If

    '*********  ITF  *****************
    If Not pbEnOtraCmac Then
        Call oBase.dInsertMovCol(nMovNro, opeITFChequeEfect, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
        Call oBase.dInsertMovColDet(nMovNro, opeITFChequeEfect, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
    Else
        'gITFCobroCargo
        If pnTipoPago = gColocTipoPagoCargoCta Then 'ARCV 08-09-2006
            Call oBase.dInsertMovCol(nMovNro, gITFCobroCargo, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, gITFCobroCargo, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
        Else
            Call oBase.dInsertMovCol(nMovNro, gCredITFEOC, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, gCredITFEOC, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
        End If
    End If
    'Carga Gastos en Memoria para Evitar Bloqueo
    MatGastosCred = DevuelveMatrizGastosCredito(NumregGastosCred, psCtaCod, nNroCalen)

    'Actualiza calendario (ColocCalendario y ColocCalendDet)
    For i = 0 To UBound(MatCalendDistrib) - 1
        If MatrizMontoPagado(MatCalendDistrib, CInt(MatCalendDistrib(i, 1))) > 0 Then
            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcAprobado, False, , dFechaTran)
        Else
            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcAprobado, False)
        End If
        'If nMivivienda = 1 Then  'Si es buen pagador se cancela sus otras cuotas
        '    If pnCalPago = 1 Then
        '        If CInt(MatCalendDistrib(i, 2)) = gColocCalendEstadoPagado Then
        '            Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistrib(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
        '        End If
        '    End If
        'End If
        'Amortizando Capital
        If CDbl(MatCalendDistrib(i, 3)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodCapital, , CDbl(MatCalendDistrib(i, 3)), , False, True)
            'Inserta Detalle Movimiento Capital
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapital, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 3)), False)
        End If
        'Amortizando Interes Compensatorio
        If CDbl(MatCalendDistrib(i, 4)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresCompensatorio, , CDbl(MatCalendDistrib(i, 4)), , False, True)
            'Inserta Detalle Movimiento Interes Compensatorio
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompensatorio, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 4)), False)
        End If
        'Amortizando Interes Gracia
        If CDbl(MatCalendDistrib(i, 5)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresGracia, , CDbl(MatCalendDistrib(i, 5)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresGracia, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 5)), False)
        End If
        'Amortizando Interes Moratorio
        If CDbl(MatCalendDistrib(i, 6)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresMoratorio, , CDbl(MatCalendDistrib(i, 6)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresMoratorio, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 6)), False)
        End If
        'Amortizando Interes Reprog
        If CDbl(MatCalendDistrib(i, 7)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresReprogramado, , CDbl(MatCalendDistrib(i, 7)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresReprogramado, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 7)), False)
        End If
        'Amortizando Interes Suspenso
        If CDbl(MatCalendDistrib(i, 8)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresSuspenso, , CDbl(MatCalendDistrib(i, 8)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresSuspenso, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 7)), False)
        End If

        'Amortizando Interes Compensatorio Vencido
        If CDbl(MatCalendDistrib(i, 11)) > 0 Then
            Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), gColocConceptoCodInteresCompVencido, , CDbl(MatCalendDistrib(i, 11)), , False, True)
            'Inserta Detalle Movimiento Interes Gracia
            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompVencido, CInt(MatCalendDistrib(i, 1)), CDbl(MatCalendDistrib(i, 11)), False)
        End If


        'Amortizando Gastos
        If CDbl(MatCalendDistrib(i, 9)) > 0 Then
            nMontoGasto = CDbl(MatCalendDistrib(i, 9))
            'Set oCalend = New COMDCredito.DCOMCalendario
            'Set R = oCalend.RecuperaCalendarioGastos(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), gColocCalendAplCuota)
            'Set oCalend = Nothing
            'Dim MatGastosCuota As Variant
            'Dim NumRegGastosCuota As Integer

            MatGastosCuota = DevuelveMatrizGastosCreditoCuota(NumRegGastosCuota, CInt(MatCalendDistrib(i, 1)), MatGastosCred, NumregGastosCred)

            For k = 0 To NumRegGastosCuota - 1
                If nMontoGasto >= CDbl(MatGastosCuota(k, 2)) Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), CLng(MatGastosCuota(k, 1)), , CDbl(MatGastosCuota(k, 2)), , False, True)
                    'Inserta Detalle Movimiento Gastos
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(MatGastosCuota(k, 1)), CInt(MatCalendDistrib(i, 1)), CDbl(MatGastosCuota(k, 2)), False)
                    nMontoGasto = nMontoGasto - CDbl(MatGastosCuota(k, 2))
                Else
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota, CInt(MatCalendDistrib(i, 1)), CLng(MatGastosCuota(k, 1)), , nMontoGasto, , False, True)
                    'Inserta Detalle Movimiento Gastos
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(MatGastosCuota(k, 1)), CInt(MatCalendDistrib(i, 1)), CDbl(Format(nMontoGasto, "#0.00")), False)
                    nMontoGasto = 0
                End If

                nMontoGasto = CDbl(Format(nMontoGasto, "#0.00"))
                If nMontoGasto = 0 Then
                    Exit For
                End If
            Next k
            ' R.Close
             Set R = Nothing
        End If


        '************* Para el Manejo de Operaciones VAC
        If psProyectoActual = "H" And bVAC Then
            Set oCred = New COMDCredito.DCOMCredito
            'Insertamos el asiento por la diferencia de Capital
            If CDbl(MatCalendDistrib(i, 3)) > 0 Then
                Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalVAC, CInt(MatCalendDistrib(i, 1)), _
                                    Format(CDbl(MatCalendDistrib(i, 3)) / oCred.ObtenerIndiceVAC(pdHoy - 1), "#0.0000"), False)

                nCapitalVAC = nCapitalVAC + Format(CDbl(MatCalendDistrib(i, 3)) / oCred.ObtenerIndiceVAC(pdHoy - 1), "#0.0000")
            End If
            Set oCred = Nothing
        End If
        '*************************************************

    Next i

    'Amortizando Desagio si Hubiere
    If pnMontoDesagio > 0 Then
        Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), gColocConceptoCodInteresCompDesagio, CInt(MatCalendDistrib(0, 1)), pnMontoDesagio, False)
    End If

    '*****************************************************
    'Para Amortizar Segundo Tramo de MiVivienda
    '*****************************************************
    If nMivivienda = 1 Then
        nMontoPago_2 = MatrizMontoPagado(MatCalendDistribParalelo)
        If nMontoPago_2 > 0 Then

            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalPar, nMontoPago_2, 0, psMetLiquid, pnPlazo, MatrizSaldoCapital(MatCalendParalelo, MatCalendDistribParalelo), nEstadoCredTemp, False, , pnPrepago)

            For i = 0 To UBound(MatCalendDistribParalelo) - 1
                If MatrizMontoPagado(MatCalendDistribParalelo, CInt(MatCalendDistribParalelo(i, 1))) > 0 Then
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistribParalelo(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False, , dFechaTran)
                Else
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalPar, CInt(MatCalendDistribParalelo(i, 1)), gColocCalendAplCuota, , CInt(MatCalendDistribParalelo(i, 2)), "Pago de Cuota", gColocCalendConceptoProcOtro, False)
                End If
                'Amortizando Capital
                If CDbl(MatCalendDistribParalelo(i, 3)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodCapital, , CDbl(MatCalendDistribParalelo(i, 3)), , False, True)
                    'Inserta Detalle Movimiento Capital
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodCapital, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 3)), False)
                End If
                'Amortizando Interes Compensatorio
                If CDbl(MatCalendDistribParalelo(i, 4)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompensatorio, , CDbl(MatCalendDistribParalelo(i, 4)), , False, True)
                    'Inserta Detalle Movimiento Interes Compensatorio
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresCompensatorio, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 4)), False)
                End If
                'Amortizando Interes Gracia
                If CDbl(MatCalendDistribParalelo(i, 5)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresGracia, , CDbl(MatCalendDistribParalelo(i, 5)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresGracia, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 5)), False)
                End If
                'Amortizando Interes Moratorio
                If CDbl(MatCalendDistribParalelo(i, 6)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresMoratorio, , CDbl(MatCalendDistribParalelo(i, 6)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresMoratorio, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 6)), False)
                End If
                'Amortizando Interes Reprog
                If CDbl(MatCalendDistribParalelo(i, 7)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresReprogramado, , CDbl(MatCalendDistribParalelo(i, 7)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresReprogramado, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 7)), False)
                End If
                'Amortizando Interes Suspenso
                If CDbl(MatCalendDistribParalelo(i, 8)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresSuspenso, , CDbl(MatCalendDistribParalelo(i, 8)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresSuspenso, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 8)), False)
                End If

                'Amortizando Interes Vencido
                If CDbl(MatCalendDistribParalelo(i, 11)) > 0 Then
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalPar, gColocCalendAplCuota, CInt(MatCalendDistribParalelo(i, 1)), gColocConceptoCodInteresCompVencido, , CDbl(MatCalendDistribParalelo(i, 11)), , False, True)
                    'Inserta Detalle Movimiento Interes Gracia
                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalPar), gColocConceptoCodInteresCompVencido, CInt(MatCalendDistribParalelo(i, 1)), CDbl(MatCalendDistribParalelo(i, 11)), False)
                End If

            Next i
        End If

        'Actualiza Tabla de Calificacion Mivivienda
        If pnPrepago <> 1 Then
            For i = 0 To UBound(MatCalendDistrib) - 1
                If MatCalendDistrib(i, 2) = "1" Then
                    Call oBase.dUpdateColocCalifMiViv(psCtaCod, nNroCalen, CInt(MatCalendDistrib(i, 1)), dFechaTran, , CInt(MatCalendDistrib(i, 2)))
                End If
            Next i
        End If
    End If


    If pnTipoPago = gColocTipoPagoDacionPago Then
        Call oBase.dAnularColocGarantRec(pnNroDacion, gColocGarantRecEstadoCancelado, False)
    End If

    ''''''''''''''''''''
    ' Lavado de Dinero
''    If psPersLavDinero <> "" Then
''        Call oBase.dInsertaMovLavDinero(nmovnro, psTitLavDinero, psOrdLavDinero, psReaLavDinero, psBenLavDinero, psVisLavDinero, nTipoREU, nMontoAcu, sOrigen)
''    End If
    ''''''''''''''''''''
    CapitalPagado = 0
    CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistrib)
    If nMivivienda = 1 Then
        CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistribParalelo)
    End If
    ''''''''''''''''''''
    ' Reversion de Garantia
    ''''''''''''''''''''
    'Se Comento por TI-ERS100-2013
    'Call LiberaGarantiaPago(nmovnro, oBase, psCtaCod, psCodAge, psCodUser, pdHoy, nPrestamo, CapitalPagado, IIf(nEstadoCred = gColocEstCancelado, True, False))
    Call oBase.dLiberarGarantia(nMovNro, nConsCred, psCtaCod, CapitalPagado, nEstadoCred)  'EJVG20150820
    ''''''''''''''''''''
    'EJVG20151119 Se comentó asiento reversión de avales
    'JUEZ 20130429 *********************************
    'If nEstadoCred = gColocEstCancelado Then
    '    If bGarantAval Then
    '        Call oBase.dInsertMovCol(nMovNro, gReversionGarantAvales, psCtaCod, 0, nPrestamo, 0, "", 0, 0, 0, False)
    '        Call oBase.dInsertMovColDet(nMovNro, gReversionGarantAvales, psCtaCod, 0, 1000, 0, nPrestamo, False)
    '    End If
    'End If
    ''END JUEZ **************************************

    If pConnBase Is Nothing Then
        If pbInicioTrans = False Then
            Call oBase.dCommitTrans
        End If
    End If

    If pConnBase Is Nothing Then
        If nMivivienda = 1 Then

            Call EvaluacionBuenPagador(psCtaCod, pdHoy, psCodAge, psCodUser, nMovNro)

        End If
    End If

    '************* Para el Manejo de Operaciones VAC
    If psProyectoActual = "H" And bVAC Then
        Dim nSaldo As Double
        Dim nSaldoVAC As Double
        Dim nFactorVAC As Double
        Dim sSql As String
        Dim rs As ADODB.Recordset

        'If nMivivienda = 1 Then
        '    nSaldo = MatrizSaldoCapitalMiVivienda(MatCalend, MatCalendDistrib, MatCalendDistribParalelo)
        'Else
        '    nSaldo = MatrizSaldoCapital(MatCalend, MatCalendDistrib)
        'End If

        oBase.dBeginTrans

        sSql = "SELECT nSaldo,nSaldoVAC=ISNULL(nSaldoVAC,0),nIndiceVac " & _
               " FROM Producto P INNER JOIN ColocacCred C ON P.cCtaCod=C.cCtaCod,IndiceVAC I WHERE P.cCtaCod='" & psCtaCod & "' AND I.dIndiceVac='" & Format(pdHoy - 1, "mm-dd-yyyy") & "'"

        Set rs = oBase.CargaRecordSet(sSql)
        nSaldo = rs!nSaldo
        nSaldoVAC = rs!nSaldoVAC
        'nFactorVAC = Format(CapitalPagado / rs!nIndiceVac, "#0.0000")
        nFactorVAC = nCapitalVAC

        'Actualizamos el SaldoVAC
        sSql = "UPDATE ColocacCred SET nSaldoVAC=nSaldoVAC-" & nFactorVAC & " WHERE cCtaCod='" & psCtaCod & "'"
        oBase.coConex.Ejecutar sSql
        nSaldoVAC = nSaldoVAC - nFactorVAC
        If nSaldo = 0 And nSaldoVAC > 0 Then 'Se Cancelo totalmente el Credito
            sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
            Call oBase.dInsertMov(sMovNro, gCredAjusteDiferenciaVAC, "Movimiento por Ajuste VAC", gMovEstContabMovContable, gMovFlagVigente, False)
            nMovNro = oBase.dGetnMovNro(sMovNro)
            Call oBase.dInsertMovCol(nMovNro, gCredAjusteDiferenciaVAC, psCtaCod, nNroCalen, nSaldoVAC, 0, "", 0, 0, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, gCredAjusteDiferenciaVAC, psCtaCod, CLng(nNroCalen), gColocConceptoCodCapitalVAC, 0, nSaldoVAC, False)

            'Actualizamos el SaldoVAC a 0
            sSql = "UPDATE ColocacCred SET nSaldoVAC=0 WHERE cCtaCod='" & psCtaCod & "'"
            oBase.coConex.Ejecutar sSql
        End If

        oBase.dCommitTrans

    End If
    '**********************************************

    If pConnBase Is Nothing Then
        Set oBase = Nothing
    End If

'    CapitalPagado = 0
'    CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistrib)
'    If nMivivienda = 1 Then
'        CapitalPagado = CapitalPagado + MatrizCapitalPagado(MatCalendDistribParalelo)
'    End If


    Exit Function

ErrorAmortizarPago:
    If bTran Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function

Public Function CargaDatosPagoCuotasLeasing(ByVal psCtaCod As String, _
                                            ByVal pdFecSis As Date, _
                                            ByVal pbPrepago As Boolean, ByVal psCodAge As String, _
                                            ByRef prsCredVig As ADODB.Recordset, _
                                            ByRef psAgencia As String, _
                                            ByRef pnCalendDinamico As Integer, ByRef pbCalenDinamic As Boolean, _
                                            ByRef pbCalenCuotaLibre As Boolean, ByRef pnMivivienda As Integer, _
                                            ByRef pnCalPago As Integer, _
                                            ByRef pnGastos As Double, ByRef pnMonPago As Double, ByRef pnMora As Double, _
                                            ByRef pnCuotasMora As Integer, _
                                            ByRef pnTotalDeuda As Currency, _
                                            ByRef pnInteresDesagio As Double, _
                                            ByRef pnMonCalDin As Double, _
                                            ByRef psMensaje As String, ByRef psPersCod As String, ByVal psOperacion As String, _
                                            ByRef pbExoneradaLavado As Boolean, ByRef pBrfa As Boolean, ByRef prsPers As ADODB.Recordset, _
                                            ByRef pbOperacionEfectivo As Boolean, ByRef pnMontoLavDinero As Double, ByRef pnTC As Double, _
                                            ByRef pnMontoPago As Double, ByRef pnITF As Double, _
                                            ByRef pvnIntPendientePagado As Double, _
                                            ByRef pnNewSalCap As Double, ByRef pnNewCPend As Integer, _
                                            ByRef pdProxfec As Date, ByRef psEstado As String, _
                                            ByRef pnCuotaPendiente As Integer, ByRef pnMoraCalculada As Double, ByRef pdFechaVencimiento As Date, ByRef pRsDatosCuotaLeasing As ADODB.Recordset, Optional pnOpcion As Integer = 1)

Dim oCredito As COMDCredito.DCOMCredito
Dim oGastos As COMNCredito.NCOMGasto
Dim dParam As COMDCredito.DCOMParametro
Dim nAnios As Integer
Dim oAge As COMDConstantes.DCOMAgencias

Dim clsExo As COMNCaptaServicios.NCOMCaptaServicios
Dim objRFA As COMDCredito.DCOMRFA
Dim nMonIntGra As Double
Dim oPersona As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsLav As COMNCaptaGenerales.NCOMCaptaDefinicion

Dim oBase As COMDCredito.DCOMCredActBD
Dim RGas As ADODB.Recordset
Set oBase = New COMDCredito.DCOMCredActBD

    On Error GoTo ErrorCargaDatosPagoCuotas
    
    Set oCredito = New COMDCredito.DCOMCredito
    Set prsCredVig = oCredito.RecuperaDatosCreditoVigente(psCtaCod, pdFecSis)
    Set oCredito = Nothing
    Set dParam = New COMDCredito.DCOMParametro
    nAnios = dParam.RecuperaValorParametro(3056)
    Set dParam = Nothing
    
    If Not prsCredVig.BOF And Not prsCredVig.EOF Then
        If prsCredVig!cAgeCodAct <> psCodAge Then
            Set oAge = New COMDConstantes.DCOMAgencias
            psAgencia = oAge.NombreAgencia(prsCredVig!cAgeCodAct)
            Set oAge = Nothing
        Else
            psAgencia = ""
        End If
        
        pnCalendDinamico = prsCredVig!nCalendDinamico
                
        If IsNull(prsCredVig!nCalendDinamico) Then
            pbCalenDinamic = False
        Else
            If prsCredVig!nCalendDinamico = 1 Then
                pbCalenDinamic = True
            Else
                pbCalenDinamic = False
            End If
        End If
        If prsCredVig!nColocCalendCod = gColocCalendCodCL Then
            pbCalenCuotaLibre = True
        Else
            pbCalenCuotaLibre = False
        End If
        pnMivivienda = prsCredVig!bMiVivienda
        
        pnCalPago = IIf(IsNull(prsCredVig!nCalPago), 0, prsCredVig!nCalPago)
        If pbPrepago = 1 Then
            If prsCredVig!nPlazoTranscurrido > nAnios Then 'si es mayor a 10 años
               pnCalPago = 1 'buen pagador
            Else
                pnCalPago = 0 'Mal pagador
            End If
        End If
        
        If pnMivivienda Then
            pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
            pMatCalend_2 = pMatCalend
            pMatCalendNormalT1 = pMatCalend
            pMatCalendParalelo = RecuperaMatrizCalendarioPendiente(psCtaCod, True)
            If pnCalPago = 0 Then
                pMatCalendMiVivResult = UnirMatricesMiViviendaAmortizacion(pMatCalend, pMatCalendParalelo)
                pMatCalend = pMatCalendMiVivResult
            End If
            pMatCalendTmp = pMatCalend
            pMatCalendDistribuido = CrearMatrizparaAmortizacion(pMatCalend)
        Else
            pMatCalend = RecuperaMatrizCalendarioPendiente(psCtaCod)
            pMatCalendTmp = pMatCalend
            pMatCalendDistribuido = CrearMatrizparaAmortizacion(pMatCalend)
        End If
                
        psPersCod = prsCredVig!cPersCod
                
        Set RGas = oBase.CargaRecordSet("SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCredito('" & psCtaCod & "','" & Format(pdFecSis, "mm/dd/yyyy") & "')")
        pnGastos = RGas!nGasto
        
        If pnMivivienda Then
            pnMonPago = MatrizMontoAPagarCuotaPendiente(pMatCalend, pdFecSis)
        Else
            pnMonPago = MatrizMontoAPagar(pMatCalend, pdFecSis, nMonIntGra)
        End If
        pnMora = Format(MatrizMoraTotal(pMatCalend, pdFecSis), "#0.00")
        
        pnCuotasMora = MatrizCuotasEnMora(pMatCalend, pdFecSis)
        
        Dim nInteresFecha As Currency
        Dim nInterFechaGra As Currency
        Dim nMontoFecha As Currency
        nInteresFecha = MatrizInteresGastosAFechaLeasing(psCtaCod, pMatCalend, pdFecSis, True, pbCalenDinamic)
        nInterFechaGra = MatrizInteresGraAFecha(psCtaCod, pMatCalend, pdFecSis, True, pbCalenDinamic)
        nMontoFecha = MatrizCapitalAFecha(psCtaCod, pMatCalend)
        
        pnTotalDeuda = Format(nInteresFecha + nInterFechaGra + nMontoFecha, "#0.00")
        
        pnTotalDeuda = pnTotalDeuda - CDbl(MatrizGastosFecha(psCtaCod, pMatCalend))
        
        pnInteresDesagio = 0
        If nInteresFecha < 0 Then
            pnInteresDesagio = 0
            nInteresFecha = 0
        End If
        
        pnTotalDeuda = Format(pnTotalDeuda + RGas!nGasto, "#0.00")
        Set oGastos = New COMNCredito.NCOMGasto
        pMatGastosCancelacion = oGastos.GeneraCalendarioGastos(Array(0), Array(0), pnNumGastosCancel, pdFecSis, psCtaCod, 1, "CA", , , pnTotalDeuda, MatrizMontoCapitalAPagar(pMatCalend, pdFecSis), MatrizCuotaPendiente(pMatCalend, pMatCalendDistribuido), , , , , prsCredVig!nDiasAtraso, , , , , prsCredVig!cAgeCodAct, prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod)
        pnTotalDeuda = Format(pnTotalDeuda + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("CA", "PA", "")), "#0.00")
        pnGastos = Format(RGas!nGasto + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", IIf(pbPrepago = 1, "PP", ""), "")), "#0.00")
        pnMonPago = Format(pnMonPago + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", IIf(pbPrepago = 1, "PP", ""), "")), "#0.00")
        Set oGastos = Nothing
        pnMonCalDin = Format(MatrizMontoCalendDinamico(psCtaCod, pMatCalend, pdFecSis, pnMivivienda) + MontoTotalGastosGenerado(pMatGastosCancelacion, pnNumGastosCancel, Array("PA", "PP", "")), "#0.00")
        Set oCredito = New COMDCredito.DCOMCredito
        If oCredito.NumerosCredEnJudicial(psPersCod) > 0 Then
            psMensaje = "Cliente tiene Creditos en Judicial"
        End If
        Set oCredito = Nothing
    Set clsExo = New COMNCaptaServicios.NCOMCaptaServicios
    
    pbExoneradaLavado = clsExo.EsPersonaExoneradaLavadoDinero(psPersCod)

    Set clsExo = Nothing

    Set objRFA = New COMDCredito.DCOMRFA
    pBrfa = objRFA.VerificaCreditoRFA(psCtaCod)
    Set objRFA = Nothing
    
    Set oPersona = New COMDCaptaGenerales.DCOMCaptaGenerales

    Set prsPers = oPersona.GetDatosPersona(psPersCod)
    
    Set oPersona = Nothing
    Set clsLav = New COMNCaptaGenerales.NCOMCaptaDefinicion

    pbOperacionEfectivo = clsLav.EsOperacionEfectivo(Trim(psOperacion))
    pnMontoLavDinero = clsLav.GetCapParametro(gMonOpeLavDineroME)
    
    If Mid(psCtaCod, 9, 1) = gMonedaNacional Then
        Dim clsTC As COMDConstSistema.NCOMTipoCambio
        Set clsTC = New COMDConstSistema.NCOMTipoCambio
        pnTC = clsTC.EmiteTipoCambio(pdFecSis, TCFijoDia)
        Set clsTC = Nothing
    Else
        pnTC = 1
    End If
    
    Set clsLav = Nothing
    Set oCredito = New COMDCredito.DCOMCredito
    Set pRsDatosCuotaLeasing = oCredito.RecuperaDatosPagoCuotaLeasing(psCtaCod, pdFecSis, pnOpcion)
    Set oCredito = Nothing
    
    pnCuotaPendiente = pMatCalend(0, 1)
    pnMoraCalculada = Format(CDbl(pMatCalend(0, 6)), "#0.00")
    pdFechaVencimiento = Format(CDate(pMatCalend(0, 0)), "dd/mm/yyyy")
    Call ActualizaMontoPago(pnMonPago, pnTotalDeuda, psCtaCod, pdFecSis, Trim(prsCredVig!cMetLiquidacion), IIf(IsNull(prsCredVig!nIntPend), 0, prsCredVig!nIntPend), pvnIntPendientePagado, pbCalenCuotaLibre, pbCalenDinamic, pbPrepago, pnMontoPago, _
                pnMonCalDin, psMensaje, pnITF, pnInteresDesagio, pnNewSalCap, pnNewCPend, pdProxfec, psEstado, nMonIntGra, prsCredVig!cAgeCodAct, prsCredVig!cTpoProdCod, prsCredVig!cTpoCredCod)

    Set oBase = Nothing
    Set RGas = Nothing
    
End If
    
    Exit Function

ErrorCargaDatosPagoCuotas:
    Err.Raise Err.Number, "Error", Err.Description

End Function

Public Function GrabarPagoOtrasCuotasLeasing(ByVal psCtaCod As String, ByVal pMatCalend As Variant, _
                                ByVal pnCalPago As Integer, _
                                ByVal pnMontoPago As Double, ByVal pdFecSis As Date, _
                                ByVal psMetLiquid As String, ByVal pnTipoPago As Integer, _
                                ByVal psCodAge As String, ByVal psCodUser As String, ByVal psCodCMAC As String, ByVal psNroDoc As String, _
                                ByVal pbRecepcionCmact As Boolean, ByVal psPersCmac As String, _
                                ByVal pvnIntPendiente As Double, ByVal pvnIntPendientePagado As Double, _
                                ByVal pbPrepago As Integer, ByVal psPersLavDinero As String, ByVal pnITF As Double, _
                                ByVal pnInteresDesagio As Double, ByVal pnTotDeuda As Double, ByVal pbCalenDinamic As Boolean, _
                                ByVal pnMonCalDin As Double, ByVal nCalendDinamTipo As Integer, _
                                ByVal psNomAge As String, ByVal pnCtaProd As Long, _
                                ByVal psPersNombre As String, ByVal psMoneda As String, ByVal pnNroTransac As String, _
                                ByRef psProxFecPago As String, ByVal psLpt As String, ByVal psInstCmac As String, _
                                ByVal pbPagoCheque As Boolean, ByVal psNumCheque As String, _
                                ByRef psError As String, ByRef psImprePlanPago As String, ByRef psImpreBoleta As String, _
                                ByVal pnDiasAtraso As Integer, _
                                Optional ByVal psProyectoActual As String = "", Optional pbImpTMU As Boolean = False, _
                                Optional psTitLavDinero As String = "", _
                                Optional psOrdLavDinero As String = "", _
                                Optional psReaLavDinero As String = "", _
                                Optional psBenLavDinero As String = "", _
                                Optional psVisLavDinero As String = "", _
                                Optional pnMovNro As Long = 0, Optional ByVal psAgeCodAct As String = "", Optional ByVal psTpoProdCod As String = "", Optional ByVal psTpoCredCod As String = "", Optional pdFechaVenc As Date = "1900/01/01", Optional nOpcionCompra As Integer = 0, Optional pnContador As Integer = 0, _
                                Optional pnCuotaPagada As Integer = 0, _
                                Optional psCuota As String = "", Optional psCodOpeCodLeasing As String = "", Optional pnOpcion As Integer = 1)
Dim oDoc As COMNCredito.NCOMCredDoc
Dim oConstante As COMDConstantes.DCOMConstantes
Dim sError As String
Dim sTipoCred As String
Dim MatCalDinam As Variant
Dim MatCalDinam_2 As Variant
Dim sCad As String
Dim sCad2 As String
    
    On Error GoTo ErrorGrabarPagoOtrasCuotasLeasing
    
    Dim MatGastosFinal As Variant
    Dim nNumGastosFinal As Integer
    
    psError = AmortizarCreditoOtrasLeasing(psCtaCod, pMatCalend, _
                pnMontoPago, pdFecSis, psMetLiquid, pnTipoPago, _
                psCodAge, psCodUser, psNroDoc, , , , pbRecepcionCmact, psPersCmac, _
                pvnIntPendiente, pvnIntPendientePagado, , pnCalPago, pbPrepago, psPersLavDinero, pnITF, pnInteresDesagio, , , psProyectoActual, psTitLavDinero, psOrdLavDinero, psReaLavDinero, psBenLavDinero, psVisLavDinero, pnMovNro, pdFechaVenc, nOpcionCompra, pnTotDeuda, pnContador, pnCuotaPagada, psProxFecPago, , psCodOpeCodLeasing, pnOpcion)
        
    If psError <> "" Then
        psImpreBoleta = "ERROR EN LA REGISTRO DE LA OPERACION"
        Exit Function
    End If
        If psError <> "" Then
        Else
        Set oConstante = New COMDConstantes.DCOMConstantes
            sTipoCred = oConstante.DameDescripcionConstante(gProducto, pnCtaProd)
            Set oConstante = Nothing
            
            Set oDoc = New COMNCredito.NCOMCredDoc
'            If pnMivivienda = 1 Then
'                'Recupero para imprimir las boletas
'                pMatCalendDistribuido = pMatCalendDistribuidoTempo
'            End If
            
            Dim oFecha As COMDConstSistema.DCOMGeneral
            Set oFecha = New COMDConstSistema.DCOMGeneral
            
            '***
        Dim nSaldoCapitalL As Currency
        Dim nSaldoInteresL As Currency
        Dim nSaldoMoraL As Currency
        Dim nSaldoGastoL As Currency
        Dim i As Integer
        Dim oCred As COMDCredito.DCOMCredito
        nSaldoCapitalL = 0
        If IsArray(pMatCalend) Then
            Set oCred = New COMDCredito.DCOMCredito
            'For i = 0 To pnNumGastosGen - 1
              For i = 1 To pnContador - 1
                 If Trim(pMatCalend(1, i)) = "1000" Then
                        nSaldoCapitalL = nSaldoCapitalL + CDbl(pMatCalend(3, i))
                 ElseIf Mid(Trim(pMatCalend(1, i)), 1, 2) = "12" Then
                        nSaldoGastoL = nSaldoGastoL + CDbl(pMatCalend(3, i))
                 ElseIf Trim(pMatCalend(1, i)) = "1108" And Trim(pMatCalend(1, i)) = "1101" Then
                        nSaldoMoraL = nSaldoMoraL + CDbl(pMatCalend(3, i))
                 Else
                        nSaldoInteresL = nSaldoInteresL + CDbl(pMatCalend(3, i))
                 End If
              Next i
            Set oCred = Nothing
        End If
            '***
            
            psImpreBoleta = oDoc.ImprimeBoleta(psCtaCod, psPersNombre, psNomAge, psMoneda, _
                psCuota, pdFecSis, Format(oFecha.FechaHora(pdFecSis), "hh:mm:ss"), pnNroTransac + 1, Mid(sTipoCred, 1, 18), _
                nSaldoCapitalL, nSaldoInteresL, _
                0, _
                nSaldoMoraL, nSaldoGastoL, _
                0, _
                0, _
                pnTotDeuda - nSaldoCapitalL, psProxFecPago, _
                psCodUser, psLpt, psInstCmac, pbPagoCheque, psNumCheque, psCodCMAC, pnITF, pnInteresDesagio, pbRecepcionCmact, , , pbImpTMU)
            
            Set oFecha = Nothing
            
            Set oDoc = Nothing
                    
        End If
    
    Exit Function

ErrorGrabarPagoOtrasCuotasLeasing:
    Err.Raise Err.Number, "Error", Err.Description

End Function

Public Function AmortizarCreditoOtrasLeasing(ByVal psCtaCod, ByVal MatCalend As Variant, _
            ByVal pnMonto As Double, ByVal pdHoy As Date, ByVal psMetLiquid As String, _
            ByVal pnTipoPago As ColocTipoPago, ByVal psCodAge As String, ByVal psCodUser As String, _
            Optional psNroDoc As String = "", Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing, _
            Optional ByVal pnMovNro As Long = -1, Optional ByVal pnNroDacion As Integer = -1, Optional pbEnOtraCmac As Boolean = False, _
            Optional psPersCmac As String = "", Optional ByVal pnIntPend As Double = 0, Optional ByVal pnIntPendPagado As Double = 0, _
            Optional psMovnroTemp As String = "", Optional ByVal pnCalPago As Integer = 1, _
            Optional ByVal pnPrepago As Integer = 0, Optional psPersLavDinero As String = "", Optional pnITF As Double = 0#, Optional ByVal pnMontoDesagio As Double = 0, _
            Optional ByVal pbInicioTrans As Boolean = False, Optional ByRef psMensajeValidacion As String = "", _
            Optional ByVal psProyectoActual As String = "", _
            Optional ByVal psTitLavDinero As String = "", _
            Optional ByVal psOrdLavDinero As String = "", _
            Optional ByVal psReaLavDinero As String = "", _
            Optional ByVal psBenLavDinero As String = "", _
            Optional ByVal psVisLavDinero As String = "", _
            Optional pnMovNroTem As Long = 0, Optional pdFechaVenc As Date = "1900/01/01", Optional nOpcionCompra As Integer = 0, Optional ByVal pnTotDeuda As Double = 0, Optional pnContador As Integer = 0, _
            Optional pnCuotaPagada As Integer = 0, Optional ByRef psProxFecPago As String = "", Optional psCuota As String = "", Optional psCodOpeCodLeasing As String = "", Optional pnOpcion As Integer = 1) As String

Dim oBase As COMDCredito.DCOMCredActBD
Dim nEstadoCred As Integer
Dim nEstadoCredTemp As Integer
Dim R As ADODB.Recordset
Dim oCred As COMDCredito.DCOMCredito
Dim oCalend As COMDCredito.DCOMCalendario
Dim nTransacc As Long
Dim sLineaCred As String
Dim nMontoColocado As Double
Dim dFecPend As Date
Dim nDiasAtraso As Integer
Dim i, k, J As Integer
Dim nNroCalen As Integer
Dim nMontoGasto As Double
Dim sMovNro As String
Dim nMovNro As Long
Dim nConsCred As String
Dim pnPlazo As Integer
Dim bTran As Boolean
Dim dFechaTran As Date
Dim nIntPend As Double
Dim nMontoPago As Double
Dim nMontoPago_2 As Double
Dim nNroCalPar As Integer
Dim nMivivienda As Integer
Dim MatGastosCred As Variant
Dim NumregGastosCred As Integer
Dim MatGastosCuota As Variant
Dim NumRegGastosCuota As Integer
Dim nBuenPagador As Integer
Dim nPrestamo As Double
Dim CapitalPagado As Double
Dim nDiasAtrasoMov As Integer
Dim opeITFChequeEfect As String
Dim nCapitalVAC As Double
Dim CreditoPaga() As Variant

Dim nSaldoCapitalL As Currency
Dim nSaldoInteresL As Currency
Dim nSaldoMoraL As Currency
Dim nSaldoGastoL As Currency

'ALPA20140110
Dim nSaldoCapitalLR As Currency
Dim nSaldoInteresLR As Currency
Dim nSaldoMoraLR As Currency
Dim nSaldoGastoLR As Currency
Dim RsPreCan As ADODB.Recordset 'ALPA20140110
Dim nContador As Integer 'ALPA20140110
Dim nSalir As Integer 'ALPA20140110
Dim nNumeroCuota As Integer 'ALPA20140110

nSaldoCapitalL = 0
nSaldoInteresL = 0
nSaldoMoraL = 0
nSaldoGastoL = 0

nSaldoCapitalLR = 0
nSaldoInteresLR = 0
nSaldoMoraLR = 0
nSaldoGastoLR = 0
'*************************
nCapitalVAC = 0
'Dim bGarantAval As Boolean 'JUEZ 20150105

    On Error GoTo ErrorAmortizarCreditoOtrasLeasing

    If pnTipoPago = gColocTipoPagoCheque Then
        opeITFChequeEfect = "990107"

    ElseIf pnTipoPago = gColocTipoPagoCargoCta Then
        opeITFChequeEfect = gITFCobroCargo
    Else
        opeITFChequeEfect = gCredITF
    End If
    
    AmortizarCreditoOtrasLeasing = ""
    AmortizarCreditoOtrasLeasing = ValidaAmortizacionCredito(pnMonto)
    If AmortizarCreditoOtrasLeasing <> "" Then
        Exit Function
    End If
    bTran = False
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaProducto(psCtaCod)
    Set oCred = Nothing
    nEstadoCred = R!nPrdEstado
    nEstadoCredTemp = R!nPrdEstado
    nTransacc = R!nTransacc
    R.Close

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    nPrestamo = R!nMontoCol
    R.Close
    Set R = Nothing
    'EJVG20151119 Se comentó asiento reversión de avales
    ''JUEZ 20150105 ***************************
    'Set oCred = New COMDCredito.DCOMCredito
    'Set R = oCred.RecuperaGarantes(psCtaCod)
    'Set oCred = Nothing
    'bGarantAval = False
    'If Not R.EOF Then
    '    bGarantAval = True
    'End If
    'Set R = Nothing
    ''END JUEZ ********************************
    
    nConsCred = psCodOpeCodLeasing
    
    If nConsCred = "" Then
        psMensajeValidacion = "No se ha definido la operación correctamente. Consulte con la Oficina de T.I"
        Exit Function
    End If

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
    Set oCred = Nothing
    pnPlazo = IIf(IsNull(R!nPlazo), 0, R!nPlazo)

    R.Close
    Set R = Nothing

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    Set oCred = Nothing
    Dim bVAC As Boolean
    bVAC = IIf(IsNull(R!bVAC), False, R!bVAC)
    nNroCalen = R!nNroCalen
    nNroCalPar = R!nNroCalPar
    nBuenPagador = IIf(IsNull(R!nCalPago), 0, R!nCalPago)
    nDiasAtrasoMov = IIf(IsNull(R!nDiasAtraso), 0, R!nDiasAtraso)
    R.Close
    Set R = Nothing
    'ALPA20140110******************************************************************************
    If pnOpcion = 2 Then
        nSalir = 0
        Set oCred = Nothing
        For i = 1 To pnContador - 1
           If Trim(MatCalend(1, i)) = "1000" Then
                  nSaldoCapitalL = nSaldoCapitalL + CDbl(MatCalend(3, i))
           ElseIf Mid(Trim(MatCalend(1, i)), 1, 2) = "12" Then
                  nSaldoGastoL = nSaldoGastoL + CDbl(MatCalend(3, i))
           ElseIf Trim(MatCalend(1, i)) = "1108" And Trim(MatCalend(1, i)) = "1101" Then
                  nSaldoMoraL = nSaldoMoraL + CDbl(MatCalend(3, i))
           Else
                  nSaldoInteresL = nSaldoInteresL + CDbl(MatCalend(3, i))
           End If
        Next i
        
        nSaldoCapitalLR = nSaldoCapitalL
        nSaldoInteresLR = nSaldoInteresL
        nSaldoMoraLR = nSaldoMoraL
        nSaldoGastoLR = nSaldoGastoL
        nContador = 0
        Set oCred = New COMDCredito.DCOMCredito
        Set RsPreCan = New ADODB.Recordset
        Set RsPreCan = oCred.RecuperaDatosCreditosLeasingPreCancelados(psCtaCod, nNroCalen)
        If Not (RsPreCan.BOF Or RsPreCan.EOF) Then
            If RsPreCan.RecordCount > 0 Then
                Do While Not RsPreCan.EOF
                    nContador = nContador + 1
                    ReDim Preserve CreditoPaga(0 To 4, 0 To nContador)
                    CreditoPaga(0, RsPreCan.Bookmark - 1) = RsPreCan!nCuota
                    CreditoPaga(1, RsPreCan.Bookmark - 1) = RsPreCan!nPrdConceptoCod
                    If RsPreCan!nPrdConceptoCod = "1000" Then
                        If (nSaldoCapitalLR - RsPreCan!nMontoSaldoCuota) > 0 Then
                            CreditoPaga(2, RsPreCan.Bookmark - 1) = Format(RsPreCan!nMontoSaldoCuota, "#0.00")
                            CreditoPaga(3, RsPreCan.Bookmark - 1) = 1
                            nSaldoCapitalLR = nSaldoCapitalLR - RsPreCan!nMontoSaldoCuota
                        Else
                            CreditoPaga(2, RsPreCan.Bookmark - 1) = nSaldoCapitalLR
                            CreditoPaga(3, RsPreCan.Bookmark - 1) = 0
                            nSaldoCapitalLR = 0
                            nSalir = nSalir + 1
                        End If
                    End If
                    If Mid(Trim(RsPreCan!nPrdConceptoCod), 1, 2) = "12" Then
                        If (nSaldoGastoLR - RsPreCan!nMontoSaldoCuota) > 0 Then
                            CreditoPaga(2, RsPreCan.Bookmark - 1) = Format(RsPreCan!nMontoSaldoCuota, "#0.00")
                            CreditoPaga(3, RsPreCan.Bookmark - 1) = 1
                            nSaldoGastoLR = nSaldoGastoLR - RsPreCan!nMontoSaldoCuota
                        Else
                            CreditoPaga(2, RsPreCan.Bookmark - 1) = nSaldoGastoLR
                            CreditoPaga(3, RsPreCan.Bookmark - 1) = 0
                            nSaldoGastoLR = 0
                            nSalir = nSalir + 1
                        End If
                    End If
                    If nSalir = 2 Then
                        Exit Do
                    End If
                    RsPreCan.MoveNext
                Loop
            End If
        End If
    Set oCred = Nothing
    End If
    '********************************************************************************************

    Set oBase = New COMDCredito.DCOMCredActBD

    If psMovnroTemp <> "" Then
        sMovNro = psMovnroTemp
    Else

        sMovNro = oBase.GeneraMovNro(pdHoy, psCodAge, psCodUser)
    End If

    '*******************************************************************
    'Inserta o Actualiza Gastos Generados por la Operacion
    '*******************************************************************
    If pbInicioTrans = False Then
        Call oBase.dBeginTrans
    End If

    
    If pnOpcion = 1 Then
        nContador = 0
        If IsArray(MatCalend) Then
              For i = 1 To pnContador - 1
                nContador = nContador + 1
                Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, 1, CInt(MatCalend(5, i)), Trim(MatCalend(1, i)), , CDbl(MatCalend(3, i)), "", False, True, False)
                 If Trim(MatCalend(1, i)) = "1000" Then
                        nSaldoCapitalL = nSaldoCapitalL + CDbl(MatCalend(3, i))
                 ElseIf Mid(Trim(MatCalend(1, i)), 1, 2) = "12" Then
                        nSaldoGastoL = nSaldoGastoL + CDbl(MatCalend(3, i))
                 ElseIf Trim(MatCalend(1, i)) = "1108" And Trim(MatCalend(1, i)) = "1101" Then
                        nSaldoMoraL = nSaldoMoraL + CDbl(MatCalend(3, i))
                 Else
                        nSaldoInteresL = nSaldoInteresL + CDbl(MatCalend(3, i))
                 End If
                 ReDim Preserve CreditoPaga(0 To 4, 0 To nContador)
                 CreditoPaga(0, nContador - 1) = CInt(MatCalend(5, i))
                 CreditoPaga(1, nContador - 1) = Trim(MatCalend(1, i))
                 CreditoPaga(2, nContador - 1) = CDbl(MatCalend(3, i))
                 CreditoPaga(3, nContador - 1) = 1
                 nNumeroCuota = CInt(MatCalend(5, 1))
              Next i
                Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalend(5, 1)), 1, pdFechaVenc, 1, "Pago de Cuota Leasing", gColocCalendConceptoProcAprobado, False, , pdHoy)
        End If
    Else
            If IsArray(CreditoPaga) Then
                  Set oCred = New COMDCredito.DCOMCredito
                  For i = 0 To UBound(CreditoPaga, 2) - 1
                    Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, 1, CInt(CreditoPaga(0, i)), Trim(CreditoPaga(1, i)), , CDbl(CreditoPaga(2, i)), "", False, True, False)
                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(CreditoPaga(0, i)), 1, pdFechaVenc, CInt(CreditoPaga(3, i)), "Pago de Cuota Leasing", gColocCalendConceptoProcAprobado, False, , pdHoy)
                    nNumeroCuota = CInt(CreditoPaga(0, i))
                  Next i
            End If
    End If
    If pbInicioTrans = False Then
     Call oBase.dCommitTrans
     Set oBase = Nothing
    End If
    '**********************************************************************
    '****** En Caso de Que sea cancelacion Con un Desembolso nSaldoCapitalL+nSaldoGastoL+nSaldoMoraL+nSaldoInteresL
    '**********************************************************************
    bTran = True
    If pConnBase Is Nothing Then
        Set oBase = New COMDCredito.DCOMCredActBD
        If pbInicioTrans = False Then
            Call oBase.dBeginTrans
        End If
    Else
        Set oBase = pConnBase
    End If
    dFechaTran = CDate(Format(Format(pdHoy, "dd/mm/yyyy") & " " & Format(oBase.dFechaHora, "hh:mm:ss"), "dd/mm/yyyy hh:mm:ss"))

    'Actualiza Producto
    If nOpcionCompra = gColocCalendEstadoPagado Then
        nEstadoCred = gColocEstCancelado
    End If

    Call oBase.dUpdateProducto(psCtaCod, , pnTotDeuda - nSaldoCapitalL, nEstadoCred, pdHoy, nTransacc + 1, False)
    

    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocaciones(psCtaCod)
    Set oCred = Nothing
    sLineaCred = R!cLineaCred
    R.Close
    Set R = Nothing
    
    'Actualiza ColocacCred
    dFecPend = pdFechaVenc
    If pdFechaVenc = "1900/01/01" Then
        nDiasAtraso = 0
    Else
        nDiasAtraso = pdHoy - dFecPend
    End If

    nIntPend = pnIntPend - pnIntPendPagado
    Dim lnProxCuota As Integer
    Dim RsCredProCuota As ADODB.Recordset
    Set RsCredProCuota = New ADODB.Recordset
    
    Dim oCreditoUC As COMDCredito.DCOMCredito
    Set oCreditoUC = New COMDCredito.DCOMCredito
    
    Set RsCredProCuota = oCreditoUC.ObtenerProximaCuotaPago(CInt(nNroCalen), psCtaCod)
    
    If Not (RsCredProCuota.BOF Or RsCredProCuota.EOF) Then
        lnProxCuota = RsCredProCuota!nCuotaNew
        psProxFecPago = RsCredProCuota!dVenc
    End If
    
    Call oBase.dUpdateColocacCred(psCtaCod, nDiasAtraso, , , , , , , IIf(pnCuotaPagada = 0, CInt(MatCalend(5, 1)), lnProxCuota), nIntPend, , , , , , , , , False)

    'Insert Movimientos
    If psMovnroTemp <> "" Then
        nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        If nMovNro = 0 Then
            Call oBase.dInsertMov(psMovnroTemp, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
            nMovNro = oBase.dGetnMovNro(psMovnroTemp)
        End If
    Else
        Call oBase.dInsertMov(sMovNro, nConsCred, "", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oBase.dGetnMovNro(sMovNro)
    End If
    pnMovNroTem = nMovNro

    If nMovNro = 0 Then
        Call oBase.dRollbackTrans
        AmortizarCreditoOtrasLeasing = "No se pudo grabar la operación"
        Exit Function
    End If
  
    If pnTipoPago = gColocTipoPagoCheque Then
        Call oBase.dInsertaMovDoc(nMovNro, TpoDocCheque, psNroDoc, dFechaTran, False)
    End If
    
    Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen, nSaldoCapitalL + nSaldoGastoL + nSaldoMoraL + nSaldoInteresL, nDiasAtrasoMov, psMetLiquid, pnPlazo, nSaldoCapitalL, nEstadoCredTemp, False, , pnPrepago)
    '
    '*********  ITF  *****************
    If Not pbEnOtraCmac Then
        Call oBase.dInsertMovCol(nMovNro, IIf(nConsCred = gCredPagLeasingCI, gITFCobroCargoArFi, gITFCobroCargoArFiC), psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
        Call oBase.dInsertMovColDet(nMovNro, IIf(nConsCred = gCredPagLeasingCI, gITFCobroCargoArFi, gITFCobroCargoArFiC), psCtaCod, CLng(nNroCalen), gConcITFCliente, CInt(MatCalend(5, 1)), pnITF, False)
    Else
        'gITFCobroCargo
        If pnTipoPago = gColocTipoPagoCargoCta Then 'ARCV 08-09-2006
            Call oBase.dInsertMovCol(nMovNro, IIf(nConsCred = gCredPagLeasingCI, gITFCobroCargoArFi, gITFCobroCargoArFiC), psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, IIf(nConsCred = gCredPagLeasingCI, gITFCobroCargoArFi, gITFCobroCargoArFiC), psCtaCod, CLng(nNroCalen), gConcITFCliente, CInt(MatCalend(5, 1)), pnITF, False)
        Else
            Call oBase.dInsertMovCol(nMovNro, IIf(nConsCred = gCredPagLeasingCI, gITFCobroCargoArFi, gITFCobroCargoArFiC), psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, nEstadoCredTemp, False)
            Call oBase.dInsertMovColDet(nMovNro, IIf(nConsCred = gCredPagLeasingCI, gITFCobroCargoArFi, gITFCobroCargoArFiC), psCtaCod, CLng(nNroCalen), gConcITFCliente, CInt(MatCalend(5, 1)), pnITF, False)
        End If
    End If
 
    
    If IsArray(MatCalend) Then
           'Set oCred = New COMDCredito.DCOMCredito
               'Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen, CInt(MatCalend(5, 1)), gColocCalendAplCuota, pdFechaVenc, pnCuotaPagada, "Pago de Cuota", gColocCalendConceptoProcAprobado, False)
                 
             For i = 0 To UBound(CreditoPaga, 2) - 1
               If Trim(CreditoPaga(1, i)) = "1000" Then
                       'nNumeroCuota = CInt(MatCalend(5, i))
                       'Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, 1, nNumeroCuota, Trim(CreditoPaga(1, i)), , CDbl(MatCalend(3, i)), "", False, , False)
                       Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(CreditoPaga(1, i)), CInt(CreditoPaga(0, i)), CDbl(CreditoPaga(2, i)), False)
                       CapitalPagado = CapitalPagado + CDbl(CreditoPaga(2, i)) 'EJVG20150822
                ElseIf Mid(Trim(CreditoPaga(1, i)), 1, 2) = "12" Then
                       'nSaldoGastoL = nSaldoGastoL + CDbl(MatCalend(3, i))
                       'Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, 1, nNumeroCuota, Trim(MatCalend(1, i)), , CDbl(MatCalend(3, i)), "", False, , False)
                       Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(CreditoPaga(1, i)), CInt(CreditoPaga(0, i)), CDbl(CreditoPaga(2, i)), False)
                ElseIf Trim(CreditoPaga(1, i)) = "1108" And Trim(MatCalend(1, i + 1)) = "1101" Then
                       'nSaldoMoraL = nSaldoMoraL + CDbl(MatCalend(3, i))
                       'Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, 1, nNumeroCuota, Trim(MatCalend(1, i)), , CDbl(MatCalend(3, i)), "", False, , False)
                       Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(CreditoPaga(1, i)), CInt(CreditoPaga(0, i)), CDbl(CreditoPaga(2, i)), False)
                Else
                       'nSaldoInteresL = nSaldoInteresL + CDbl(MatCalend(3, i))
                       'Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen, 1, nNumeroCuota, Trim(MatCalend(1, i)), , CDbl(MatCalend(3, i)), "", False, , False)
                       Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, CLng(nNroCalen), CLng(CreditoPaga(1, i)), CInt(CreditoPaga(0, i)), CDbl(CreditoPaga(2, i)), False)
                End If
             Next i
    End If

    ' Reversion de Garantia
'    If nSaldoCapitalL > 0 Then
'        Call LiberaGarantiaPago(nmovnro, oBase, psCtaCod, psCodAge, psCodUser, pdHoy, nPrestamo, nSaldoCapitalL, IIf(nEstadoCred = gColocEstCancelado, True, False))
'    End If
    '**********************
    'ALPA 20120421
    'EJVG20151119 Se comentó asiento reversión de avales
    ''JUEZ 20150105 *********************************
    'If nEstadoCred = gColocEstCancelado Then
    '    If bGarantAval Then
    '        Call oBase.dInsertMovCol(nMovNro, gReversionGarantAvales, psCtaCod, 0, nPrestamo, 0, "", 0, 0, 0, False)
    '        Call oBase.dInsertMovColDet(nMovNro, gReversionGarantAvales, psCtaCod, 0, 1000, 0, nPrestamo, False)
    '    End If
    'End If
    ''END JUEZ **************************************
    
    If pnOpcion = 1 Then
        Call oBase.dActualizarPagoLeasig(False)
    Else
        Call oBase.dActualizarPagoLeasigPreCancelados(False, psCtaCod, pdHoy)
    End If
    
    Call oBase.dLiberarGarantia(nMovNro, nConsCred, psCtaCod, CapitalPagado, nEstadoCred)  'EJVG20150822
    If pConnBase Is Nothing Then
        If pbInicioTrans = False Then
            Call oBase.dCommitTrans
        End If
    End If
    
    If pConnBase Is Nothing Then
        Set oBase = Nothing
    End If

    Exit Function

ErrorAmortizarCreditoOtrasLeasing:
    If bTran Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function
'ALPA 20111029
Public Function MatrizInteresGastosAFechaLeasing(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByVal pbDesagio As Boolean = False, Optional ByVal pbCalenDin As Boolean = False) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim pnTasa As Double
    
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaColocaciones(psCtaCod)
    Set oCredito = Nothing

    
    dFecIni = R!dMontoColUltCal
    nSaldoCal = R!nMontoColUltCal
    
    
    R.Close
    Set R = Nothing

    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaProducto(psCtaCod)
    Set oCredito = Nothing
    pnTasa = R!nTasaInteres
    R.Close
    Set R = Nothing

    
    MatrizInteresGastosAFechaLeasing = CDbl(Format(MatrizGastosFecha(psCtaCod, MatCalend) + _
                MatrizInteresReprogramadoFecha(psCtaCod, MatCalend) + _
                MatrizInteresSuspensoFecha(psCtaCod, MatCalend) + _
                MatrizInteresMorFecha(psCtaCod, MatCalend) + _
                MatrizInteresCompeFechaLeasing(psCtaCod, MatCalend)))
       
End Function

'ALPA 20111028

Public Function MatrizInteresCompeFechaLeasing(ByVal psCtaCod As String, ByVal MatCalend As Variant) As Double
Dim R As ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Dim nMontoGanado As Double
Dim dFecIni As Date
Dim nSaldoCal As Double
Dim nSaldoCap As Double
Dim i As Integer
Dim pnTasa As Double

    'Calculo de Montos Ya Ganados
    nMontoGanado = 0
    nSaldoCap = 0
    For i = 0 To UBound(MatCalend) - 1
        nMontoGanado = nMontoGanado + CDbl(MatCalend(i, 4)) 'Interes Compensatorio
    Next i

    'Total Calculado es
    MatrizInteresCompeFechaLeasing = CDbl(Format(nMontoGanado, "#0.00"))

End Function

Public Function VerificaFechaLeasing(ByVal psCtaCod As String, ByVal pdFecha As Date) As Integer
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String
Dim R As ADODB.Recordset
Dim sMsgBox As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_sel_verificaFechaPago '" & psCtaCod & "', '" & Format(pdFecha, "YYYY/MM/DD") & "'"
    Set R = oCon.CargaRecordSet(sSql)
    VerificaFechaLeasing = 0
    If Not (R.BOF Or R.EOF) Then
        VerificaFechaLeasing = R!verficar
    End If
    oCon.CierraConexion
    Set oCon = Nothing
    
    Exit Function
End Function

'MADM 20111115
Public Function ExtornarPagoAutomaticoBN(ByVal pdFecSis As Date, ByVal psCodUser As String, ByVal psCodAge As String, ByVal pnMonto As Currency, ByVal pnMovNror As Long, ByVal pnMovNroC As Long, ByVal pcMovNroC As String, ByVal OpeDesc As String, Optional ByVal psMotExtorno As Variant) As Integer
Dim lsMovNro As String
Dim lnMovNronew As Long
Dim lsMovNroAnt As String
Dim lsMovNroExtC As String
Dim clsCapMov As COMNCaptaGenerales.NCOMCaptaMovimiento
Dim oBase As COMDCredito.DCOMCredActBD
Dim lbTrans As Boolean
Set oBase = New COMDCredito.DCOMCredActBD
Set clsCapMov = New COMNCaptaGenerales.NCOMCaptaMovimiento

    ExtornarPagoAutomaticoBN = 0
    On Error GoTo ErrorGrabaExtornoMov
    lbTrans = True
    Call oBase.dBeginTrans
        lsMovNro = oBase.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
        clsCapMov.OtrasOperacionesExtorno lsMovNro, pnMovNror, "390000", "Extorno Pago Automatico", psMotExtorno
        Call oBase.dUpdateMov(pnMovNroC, , , , gMovFlagExtornado, False)
        
        lsMovNroAnt = oBase.GetcMovNro(pnMovNroC)
        lsMovNroExtC = oBase.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
        Call oBase.dInsertMovModifica(lsMovNroAnt, lsMovNroExtC)
        ActualizaSaldoMovimiento lsMovNroExtC, "-"
        
        If OpeDesc = "PAGO CORRESPONSALIA BN" Then
            Call oBase.Actualizar_EstxMov_MovCorresponsalia(pnMovNror)
        Else
            Call oBase.Actualizar_EstxMov_MovConvenio(pnMovNror)
        End If
        
    Call oBase.dCommitTrans
    Set oBase = Nothing
    ExtornarPagoAutomaticoBN = ExtornarPagoAutomaticoBN + 1
Exit Function
ErrorGrabaExtornoMov:
If lbTrans Then oBase.dRollbackTrans
Err.Raise Err.Number, "GrabaExtornoMov", Err.Description
End Function

'MADM 20111114
Public Sub ExtornarCredPagoCorrespBN(ByVal id As Integer, ByVal tipo As Integer)
Dim oCreditos As COMDCredito.DCOMCreditos

    Set oCreditos = New COMDCredito.DCOMCreditos
    oCreditos.Eliminar_Pago_Cab_Det id, tipo
    Set oCreditos = Nothing
End Sub

'MADM 20111116
Public Sub ActualizaSaldoMovimiento(ByVal sMovNro As String, sSimbolo As String)
 Dim Sql As String
 On Error GoTo ErrActualizaMovSaldo
 Dim ldFecha As Date
 Dim oConect As COMConecta.DCOMConecta
 Set oConect = New COMConecta.DCOMConecta
 oConect.AbreConexion
 
 If Left(sMovNro, 1) = "'" Then
    Dim lsMov As String
    Do While sMovNro <> ""
        If InStr(sMovNro, ",") > 0 Then
            lsMov = Left(sMovNro, InStr(sMovNro, ",") - 1)
            sMovNro = Mid(sMovNro, InStr(sMovNro, ",") + 1)
        Else
            lsMov = sMovNro
            sMovNro = ""
        End If
        Sql = "INSERT tmpMovActualiza (cMovNro) VALUES (" & lsMov & ")"
        oConect.Ejecutar Sql
    Loop
    ldFecha = GetFechaMov(Mid(lsMov, 2, 8), True)
    Sql = "Exec spActualizaMovSaldo " & lsMov & ", '" & Format(ldFecha, "mm/dd/yyyy") & "', '" & sSimbolo & "' "
    oConect.Ejecutar Sql
    
    Sql = "DELETE tmpMovActualiza"
    oConect.Ejecutar Sql

 Else
    Sql = "INSERT tmpMovActualiza (cMovNro) VALUES ('" & sMovNro & "')"
    oConect.Ejecutar Sql
    
    ldFecha = GetFechaMov(Left(sMovNro, 8), True)
    Sql = "spActualizaMovSaldo '" & sMovNro & "', '" & Format(ldFecha, "mm/dd/yyyy") & "', '" & sSimbolo & "' "
    'oConect.CommandTimeOut 3500
    oConect.Ejecutar Sql
    
    Sql = "DELETE tmpMovActualiza"
    oConect.Ejecutar Sql
 End If
oConect.CierraConexion
Set oConect = Nothing
Exit Sub
ErrActualizaMovSaldo:
    Err.Raise Err.Number, Err.Source, Err.Description
End Sub

Public Function GetFechaMov(cMovNro, lDia As Boolean) As String
Dim lFec As Date
lFec = Mid(cMovNro, 7, 2) & "/" & Mid(cMovNro, 5, 2) & "/" & Mid(cMovNro, 1, 4)
If lDia Then
   GetFechaMov = Format(lFec, "dd/mm/yyyy")
Else
   GetFechaMov = Format(lFec, "mm/dd/yyyy")
End If
End Function
'END MADM
'JACA 20111219*******************************************************************
Public Function obtenerMetasAgenciasDet(psAgeCod As String, psAnio As String, psMes As String) As Recordset
    Dim oMetasAgeD As New COMDCredito.DCOMCredito
    Set obtenerMetasAgenciasDet = oMetasAgeD.getMetasAgenciasDet(psAgeCod, psAnio, psMes)
    
End Function
Public Function obtenerSaldoCarteraAgencia(sAgeCod As String, dFecha As Date, nTpoCamb As Double) As Currency
    Dim oMetasAgeD As New COMDCredito.DCOMCredito
     obtenerSaldoCarteraAgencia = oMetasAgeD.getSaldoCarteraAgencia(sAgeCod, dFecha, nTpoCamb)
End Function
Public Function guardarMetasAgencias(ByVal prsMetas As ADODB.Recordset, psAgeCod As String, psAnio As String, psMes As String, pnSaldoAnt As Currency, pnSaldoMetas As Currency, psMovNro As String, pbModificar As Boolean) As Boolean
    Dim oCOMDCred As New COMDCredito.DCOMCredito
    Dim sMsgErr As String
    Dim bTrans As Boolean
    Dim i As Integer
On Error GoTo MsgError
     
    oCOMDCred.BeginTrans
    bTrans = True
    
    'Si es modificar
    If pbModificar Then
        oCOMDCred.updEstadoMetasAgencias psAgeCod, psAnio, psMes
    End If
    
    ' Se registra los datos generales de la agencia
    oCOMDCred.insertarMetasAgencias psAgeCod, psAnio, psMes, pnSaldoAnt, pnSaldoMetas, psMovNro
    
    'Se registra el detalle de las metas x tipo de credito
    For i = 0 To prsMetas.RecordCount - 1
        oCOMDCred.insertarMetasAgenciasDet psMovNro, prsMetas.Fields(0), prsMetas.Fields(2)
        prsMetas.MoveNext
    Next i
        
    oCOMDCred.CommitTrans
    bTrans = False
    Set oCOMDCred = Nothing
    guardarMetasAgencias = True
    Exit Function
MsgError:
    guardarMetasAgencias = False
    sMsgErr = Err.Description
    If bTrans Then
        oCOMDCred.RollbackTrans
        bTrans = False
    End If
    Err.Raise vbObjectError + 100, "NCOMCredito:guardarMetasAgencias", "NCOMCredito:guardarMetasAgencias. " & sMsgErr '& " Error al Grabar la Metas de la Agencias"
End Function

'JACA END************************************************************************

'EJVG20111227 *********************************
Public Function RegistrarHabilitacionesInfoGas(ByRef MatHabilitaciones() As HabilitaVehiculo) As Boolean
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim rs As ADODB.Recordset
    Dim cActivo As Integer
    Dim oHabilita As HabilitaVehiculo
    Dim i As Integer
    Dim bTransac As Boolean


On Error GoTo ErrHabilitar
    Set oBase = New COMDCredito.DCOMCredActBD
    bTransac = False
    Call oBase.dBeginTrans
    bTransac = True
    
    'Set oCredito = New COMDCredito.DCOMCredito
    
    For i = 0 To UBound(MatHabilitaciones)
        oHabilita = MatHabilitaciones(i)
        Call oBase.ActivaCreditoINFOGAS(oHabilita.CtaCod, oHabilita.Placa, oHabilita.FechaHora)
        If oBase.ObtieneEstadoVehiculoInfoGas(oHabilita.CtaCod) Then
            Call oBase.NuevaAprobacionCreditoINFOGAS(oHabilita.CtaCod, oHabilita.Placa, oHabilita.PersCod, oHabilita.FechaHora, oHabilita.IFICod, oHabilita.TallerCod)
        End If
    Next
    Call oBase.dCommitTrans
    RegistrarHabilitacionesInfoGas = bTransac

    Exit Function
ErrHabilitar:
    If bTransac Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    RegistrarHabilitacionesInfoGas = False
    Err.Raise Err.Number, "Error En Proceso", Err.Description
    
    'Set oCredito = Nothing
End Function
Public Function ImprimeVehiculosActivados(ByRef MatHabilitaciones() As HabilitaVehiculo) As String
    Dim oHabilita As HabilitaVehiculo
    Dim lsCad As String
    Dim i As Integer
    
    lsCad = lsCad & "CMAC MAYNAS" & Chr(10) & Chr(10)
    lsCad = lsCad & "VEHICULOS HABILITADOS - CREDITO ECOTAXI" & Chr(10)
    lsCad = lsCad & "==========================================================================================================" & Chr(10)
    lsCad = lsCad & " CUENTA" & Space(14) & "COD.CLIENTE" & Space(11) & "NOMBRE CLIENTE" & Space(18) & "PLACA" & Space(5) & "FECHA HABILITACION" & Chr(10)
    lsCad = lsCad & "==========================================================================================================" & Chr(10)

    For i = 0 To UBound(MatHabilitaciones)
        oHabilita = MatHabilitaciones(i)
        lsCad = lsCad & oHabilita.CtaCod & Space(2) & oHabilita.PersCod & Space(2) & oHabilita.PersNombre & Space(40 - Len(oHabilita.PersNombre)) & oHabilita.Placa & Space(3) & oHabilita.FechaHora & Chr(10)
    Next
    lsCad = lsCad & "==========================================================================================================" & Chr(10)
    ImprimeVehiculosActivados = lsCad
End Function
'Public Sub NuevoRecaudo(ByVal psPlaca As String, ByVal pdFecha As Date, ByVal psEESSNombre As String, _
'                        ByVal psEESSNroTicket As String, ByVal pnEESSRecaudoBruto As Currency, _
'                        ByVal pnITFEntrada As Currency, ByVal pnITFSalida As Currency, ByVal pnRecaudoReal As Currency, _
'                        ByVal pnCOFIDEPorcentajeComision As Currency, ByVal pnIFIRecaudoNeto As Currency, _
'                        ByVal psCtaCod As String, ByVal psPersCod As String, ByVal psIFICod As String, _
'                        ByVal psEESSId As String, ByVal pdFecSis As Date, ByVal psCodAge As String, ByVal psCodUser As String)
'
'    Dim oCredito As COMDCredito.DCOMCredito
'    Dim oBase As COMDCredito.DCOMCredActBD
'    Dim oCap As COMNCaptaGenerales.NCOMCaptaGenerales
'    Dim loMov As COMDMov.DCOMMov
'    Dim oITF As COMDConstSistema.FCOMITF
'    Dim rsCap As ADODB.Recordset
'    Dim sCuentaAho As String
'    Dim sMovNro As String
'    Dim bTransac As Boolean
'    Dim pMatDatosAho As Variant
'    Dim nITFAbono As Double
'    Dim nRedondeoITF As Double
'    Dim pMatDatosAhoAbo As Variant
'On Error GoTo NuevoRecaudoInfogas
'    Set oCredito = New COMDCredito.DCOMCredito
'
'
'
'
'
'
'    Set oBase = New COMDCredito.DCOMCredActBD
'    sMovNro = oBase.GeneraMovNro(pdFecSis, Right(psCodAge, 2), psCodUser)
'    bTransac = False
'
'    Call oBase.dBeginTrans
'        bTransac = True
'        Set oCap = New COMNCaptaGenerales.NCOMCaptaGenerales
'        Set rsCap = oCap.GetCuentasPersona(psPersCod, gCapAhorros, True, False, CInt(Mid(psCtaCod, 9, 1)), , , 7)
'        sCuentaAho = rsCap!cCtaCod
'        ReDim pMatDatosAhoAbo(14)
'        'Inicializa Datos de Ahorros
'        pMatDatosAhoAbo(0) = "" 'Cuenta de Ahorros
'        pMatDatosAhoAbo(1) = "0.00" 'Monto de Apertura
'        pMatDatosAhoAbo(2) = "0.00" 'Interes Ganado de Abono
'        pMatDatosAhoAbo(3) = "0.00" 'Interes Ganado de Retiro Gastos
'        pMatDatosAhoAbo(4) = "0.00" 'Interes Ganado de Retiro Cancelaciones
'        pMatDatosAhoAbo(5) = "0.00" 'Monto de Abono
'        pMatDatosAhoAbo(6) = "0.00" 'Monto de Retiro de Gastos
'        pMatDatosAhoAbo(7) = "0.00" 'Monto de Retiro de Cancelaciones
'        pMatDatosAhoAbo(8) = "0.00" 'Saldo Disponible Abono
'        pMatDatosAhoAbo(9) = "0.00" 'Saldo Contable Abono
'        pMatDatosAhoAbo(10) = "0.00" 'Saldo Disponible Retiro de Gastos
'        pMatDatosAhoAbo(11) = "0.00" 'Saldo Contable Retiro de Gastos
'        pMatDatosAhoAbo(12) = "0.00" 'Saldo Disponible Retiro de Cancelaciones
'        pMatDatosAhoAbo(13) = "0.00" 'Saldo Contable Retiro de Cancelaciones
'
'        Set oITF = New COMDConstSistema.FCOMITF
'        oITF.fgITFParametros
'        nITFAbono = oITF.fgTruncar(oITF.fgITFCalculaImpuesto(pnRecaudoReal), 2)
'        nRedondeoITF = fgDiferenciaRedondeoITF(nITFAbono)
'        nITFAbono = IIf(nRedondeoITF > 0, nITFAbono - nRedondeoITF, nITFAbono)
'
'        oBase.CapAbonoCuentaAho pMatDatosAhoAbo, sCuentaAho, Format(pnRecaudoReal, "#,##0.00"), "200260", sMovNro, "Abono recaudo de la Cta.Ecotaxi N°: " & psCtaCod, , , , , , , pdFecSis, "", True, nITFAbono, False, gITFCobroCargo
'
'        If nITFAbono + nRedondeoITF > 0 Then
'            Set loMov = New COMDMov.DCOMMov
'            Call loMov.InsertaMovRedondeoITF(sMovNro, 1, nITFAbono + nRedondeoITF, nITFAbono)
'            Set loMov = Nothing
'        End If
'
'        Call oCredito.NuevoRecaudo(psPlaca, pdFecha, psEESSNombre, psEESSNroTicket, pnEESSRecaudoBruto, _
'                                 pnITFEntrada, pnITFSalida, pnRecaudoReal, pnCOFIDEPorcentajeComision, pnIFIRecaudoNeto, _
'                                 psCtaCod, psPersCod, psIFICod, psEESSId)
'
'    Call oBase.dCommitTrans
'    Set oCredito = Nothing
'NuevoRecaudoInfogas:
'    If bTransac Then
'        Call oBase.dRollbackTrans
'        Set oBase = Nothing
'
'    End If
'    Err.Raise Err.Number, "Error En Proceso", Err.Description
'
'End Sub

'BRGO 20120106 ****************************************************
Public Sub ActivaCreditoINFOGAS(ByVal psCtaCod As String, ByVal psPlaca As String, ByVal psPersCod As String)
    Dim oCredito As COMDCredito.DCOMCredito
    Set oCredito = New COMDCredito.DCOMCredito
    'Call oCredito.NuevaAprobacionCreditoINFOGAS(psCtaCod, psPlaca, psPersCod, pdFechaGeneracion, psIFICod, psTallerId)
    Set oCredito = Nothing
End Sub
'*********************************************************************
Public Function ImprimeClientesRecuperacionesCred(ByVal psCodUser As String, _
ByVal psFecSis As Date, ByVal pdFecha As Date, Optional ByVal psNomCmac As String = "", Optional ByVal psNumCab As Double = 0) As String

Dim oDCred As COMDCredito.DCOMCredito
Dim oImpre As COMFunciones.FCOMImpresion
Dim R As ADODB.Recordset
Dim sCadImp As String
Dim vMoney As String
Dim vage As String
Dim vcondC As String
Dim pos As Integer
Dim lnTotMontoDif As Double
Dim lnTotMontoDif1 As Double
Dim lnAcuTotMontoDif As Double
Dim lnTotMonto As Double
Dim lnTotMonto1 As Double
Dim lnAcuTotMonto As Double
Dim lnAcuTotMonto1 As Double
Dim lcTitulo As String
Set oImpre = New COMFunciones.FCOMImpresion

    Screen.MousePointer = 11
    Set oDCred = New COMDCredito.DCOMCredito
    If psNumCab > 0 Then
        Set R = oDCred.ReportesListaRecuperacionesBCP(pdFecha, psNumCab)
    Else
        Set R = oDCred.ReportesListaRecuperacionesBCP(pdFecha)
    End If
    
    Set oDCred = Nothing
    
    If R.BOF And R.EOF Then
        MsgBox "No existen Datos para este Reporte.", vbInformation, "Atención"
        Screen.MousePointer = 0
        Exit Function
    End If
    
    
        sCadImp = ""
        'sCadImp = sCadImp & "CAJA MAYNAS" & Chr(10)  ''lnSaltoLinDoc
        sCadImp = sCadImp & psNomCmac & Space(50) & "FECHA :" & Format$(psFecSis, "dd/mm/yyyy") & " - " & Format(Now(), "hh:mm:ss") & Chr$(10)
        sCadImp = sCadImp & "RUC : 20103845328" & Space(60) & "USUARIO : " & psCodUser & Chr$(10) 'lnSaltoLinDoc & lnSaltoLinDoc
        sCadImp = sCadImp & Chr(10)
        
        lcTitulo = "LISTADO DE ARCHIVO DE COBRANZAS (BANCO DE CREDITO - BCP)" & " DE FECHA " & Format$(pdFecha, "dd/mm/yyyy") & Chr$(10)
        sCadImp = sCadImp & oImpre.Centra(lcTitulo, 100) & Chr(10)
        sCadImp = sCadImp & Chr(10)
        
    sCadImp = sCadImp & "ITEM     COD.CTA.          NOMBRE CLIENTE                            CUOTA    IMP COBRADO    " & Chr$(10)
    sCadImp = sCadImp & String(100, "-") & Chr(10) ' lnSaltoLinDoc
    vMoney = ""
    vcondC = ""
    vage = ""
    
    Dim nChangeSituacion As Integer
    Dim nChangeMoneda As Integer
    Dim nChangeAgencia As Integer
    
    nChangeAgencia = 0
    nChangeSituacion = 0
    lnTotMonto = 0
    lnTotMonto1 = 0
    nChangeMoneda = 0
    pos = 0
    
    Do While Not R.EOF
        If vMoney <> R!Moneda Then
            nChangeMoneda = 1
        End If
        
        If R!Agencia <> vage Then
            nChangeAgencia = 1
        End If
                            
        If R!Valor <> vcondC Or nChangeAgencia = 1 Then
                            
             If vcondC <> "" Then
                    sCadImp = sCadImp & String(100, "-") & Chr(10)
                    sCadImp = sCadImp & Space(73)
'                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 10, 2)
                    sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif1, 10, 2)
                    sCadImp = sCadImp & Chr(10)
            End If
                
            If nChangeMoneda = 1 Then
                sCadImp = sCadImp & "MONEDA  : " & R!Moneda & Chr(10)
            End If
            
            If nChangeAgencia = 1 Then
                sCadImp = sCadImp & "  AGENCIA  : " & R!Agencia & Chr(10)
            End If
         
            sCadImp = sCadImp & "    SITUACIÓN : " & R!Valor & Chr(10)
            sCadImp = sCadImp & String(100, "-") & Chr(10)
            lnTotMonto = 0
            lnTotMonto1 = 0
            lnTotMontoDif1 = 0
         End If
         
         nChangeMoneda = 0
         nChangeAgencia = 0
         
        pos = pos + 1
        sCadImp = sCadImp & oImpre.ImpreFormat(pos, 5, 0)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cCodCtafull, 18)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!cNombreCliente, 40)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nNroCuota, 5, 0)
'        sCadImp = sCadImp & Space(3)
'        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCuota, 8)
        sCadImp = sCadImp & Space(2)
        sCadImp = sCadImp & oImpre.ImpreFormat(R!nImporteCobrado, 8)
'        sCadImp = sCadImp & Space(2)
'        lnTotMontoDif = CDbl(R!nImporteCuota - R!nImporteCobrado)
'        sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif, 8)
        sCadImp = sCadImp & Chr(10)

'        lnTotMonto = lnTotMonto + R!nImporteCuota
        lnTotMonto1 = lnTotMonto1 + R!nImporteCobrado
'        lnAcuTotMonto = lnAcuTotMonto + R!nImporteCuota
        lnAcuTotMonto1 = lnAcuTotMonto1 + R!nImporteCobrado
'        lnTotMontoDif1 = lnTotMontoDif1 + lnTotMontoDif
'        lnAcuTotMontoDif = lnAcuTotMontoDif + lnAcuTotMontoDif
        
        vcondC = R!Valor
        vMoney = R!Moneda
        vage = R!Agencia
        
        R.MoveNext
        If R.EOF Then
               Exit Do
        End If
    Loop
    
        If (lnTotMonto + lnTotMonto1) > 0 Then
            sCadImp = sCadImp & String(100, "-") & Chr(10)
            sCadImp = sCadImp & Space(73)
'            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMonto1, 10, 2) & Chr(10)
'            sCadImp = sCadImp & oImpre.ImpreFormat(lnTotMontoDif1, 10, 2) & Chr(10)
            sCadImp = sCadImp & String(100, "-") & Chr(10)
            sCadImp = sCadImp & Space(73)
'            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto, 10, 2)
            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMonto1, 10, 2)
'            sCadImp = sCadImp & oImpre.ImpreFormat(lnAcuTotMontoDif, 10, 2)
        End If
        
    R.Close
    Set R = Nothing
    ImprimeClientesRecuperacionesCred = sCadImp
    Screen.MousePointer = 0
End Function

'MADM 20120221 ----------------------------
Public Function RecuperaValidacionCredMantPrepago(ByVal psCtaCod As String, ByVal psFecha As String, Optional ByVal nCuotas As Integer = -1) As ADODB.Recordset
'RIRO 20210222 ADD nCuotas
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrorRecuperaValidacionCredMantPrepago
    sSql = "exec stp_sel_ValidaCreditosPrepago '" & psCtaCod & "','" & Format(psFecha, "yyyymmdd") & "', " & nCuotas
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set RecuperaValidacionCredMantPrepago = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorRecuperaValidacionCredMantPrepago:
    Err.Raise Err.Number, "Error En Proceso", Err.Description

End Function
'----------------------------

'JACA 20120112*******************************************************************
Public Function obtenerFechaCompromisoPago(psCtaCod As String, pnNroCuota As Integer) As Recordset
    Dim oDCredito As New COMDCredito.DCOMCredito
    Set obtenerFechaCompromisoPago = oDCredito.getFechaCompromisoPago(psCtaCod, pnNroCuota)
    
End Function

Public Function guardarFechaCompromisoPago(psCtaCod As String, pnNroCuota As Integer, pdFecPago As Date, psMovNro As String) As Boolean
    Dim oCOMDCred As New COMDCredito.DCOMCredito
    Dim sMsgErr As String
    Dim bTrans As Boolean
   
On Error GoTo MsgError
     
    oCOMDCred.BeginTrans
    bTrans = True
    
    'Modificar el estado a inactivo
        oCOMDCred.updEstadoFecCompromisoPago psCtaCod, pnNroCuota
    
    
    ' Se registra la fecha de compromiso de pago
    oCOMDCred.insertarFecCompromisoPago psCtaCod, pnNroCuota, pdFecPago, psMovNro
    
    oCOMDCred.CommitTrans
    bTrans = False
    Set oCOMDCred = Nothing
    guardarFechaCompromisoPago = True
    Exit Function
MsgError:
    guardarFechaCompromisoPago = False
    sMsgErr = Err.Description
    If bTrans Then
        oCOMDCred.RollbackTrans
        bTrans = False
    End If
    Err.Raise vbObjectError + 100, "NCOMCredito:guardarFechaCompromisoPago", "NCOMCredito:guardarFechaCompromisoPago. " & sMsgErr '& " Error al Grabar la Fecha de Compromiso de Pago"
    
End Function

Public Function verificarPermisoFechaCompPago(psCargoCod As String, psPersCod As String) As Boolean
    Dim oDCredito As New COMDCredito.DCOMCredito
    verificarPermisoFechaCompPago = oDCredito.getPermisoFechaCompPago(psCargoCod, psPersCod)
End Function
'JACA END************************************************************************

'** Juez 20120323 **********************************************
Public Sub insertaPersonaRealizaPagoCuotas(ByVal nNroMov As Long, ByVal sPersCod As String, ByVal nPersDNI As String, ByVal sPerNombre As String)

Dim oDCredito As COMDCredito.DCOMCredActBD
Set oDCredito = New COMDCredito.DCOMCredActBD
    
oDCredito.dInsertaPersonaRealizaPagoCuotas nNroMov, sPersCod, nPersDNI, sPerNombre
Set oDCredito = Nothing
End Sub
'** End Juez ***************************************************

'MADM 20120329
Public Function obtenerConstanteAdm(psCod As String) As Recordset
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_sel_constanteAdmCred '" & psCod & "'"
    Set obtenerConstanteAdm = oCon.CargaRecordSet(sSql)
      
    oCon.CierraConexion
    Set oCon = Nothing
End Function

Public Sub InsertaConstanteAdm(psCod As String, psNomCod As String)
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_ins_constanteAdmCred '" & psCod & "','" & psNomCod & "'"
    oCon.ConexionActiva.Execute sSql
    oCon.CierraConexion
    Set oCon = Nothing
End Sub

Public Sub ActualizaConstanteAdm(psCod As String, psValCod As Integer, bestado As Boolean)
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_act_constanteAdmCred " & psCod & "," & psValCod & ", " & IIf(bestado, 1, 0) & ""
    oCon.ConexionActiva.Execute sSql
    oCon.CierraConexion
    Set oCon = Nothing
End Sub

Public Function ValidaConstanteAdm(psCod As String, psNomConst As String) As Boolean
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String
Dim rs As ADODB.Recordset

    ValidaConstanteAdm = False
    sSql = "exec stp_val_constanteAdmCred '" & psCod & "','" & psNomConst & "'"
    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    Set rs = oCon.CargaRecordSet(sSql)
    If Not rs.EOF Then
        ValidaConstanteAdm = True
    End If
    oCon.CierraConexion
    Set oCon = Nothing
    Exit Function
End Function

Public Function obtenerAgenciaUserOpe(psCodAge As Integer) As Recordset
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_sel_ObtieneRFPorAreaAgencia " & psCodAge & ""
    Set obtenerAgenciaUserOpe = oCon.CargaRecordSet(sSql)
      
    oCon.CierraConexion
    Set oCon = Nothing
End Function

Public Function obtenerGarantxCredito(psCtaCod As String) As Recordset
Dim oCreditoG As New COMDCredito.DCOMCredito

    Set obtenerGarantxCredito = oCreditoG.RecuperaGarantiasCredito(psCtaCod)
    Set oCreditoG = Nothing
End Function
'END MADM

'** Juez 20120514 ********************************************************
Public Function obtieneListaCredPagoCuotasAgeParam() As ADODB.Recordset
    Dim oDCredito As COMDCredito.DCOMCredActBD
    Set oDCredito = New COMDCredito.DCOMCredActBD
    
    Set obtieneListaCredPagoCuotasAgeParam = oDCredito.obtieneListaCredPagoCuotasAgeParam
    
    Set oDCredito = Nothing
End Function
Public Function obtieneCredPagoCuotasAgeParam(ByVal sCodAgencia As String) As ADODB.Recordset
    Dim oDCredito As COMDCredito.DCOMCredActBD
    Set oDCredito = New COMDCredito.DCOMCredActBD
    
    Set obtieneCredPagoCuotasAgeParam = oDCredito.obtieneCredPagoCuotasAgeParam(sCodAgencia)
    
    Set oDCredito = Nothing
End Function
Public Sub actualizaCredPagoCuotasAgeParam()
    Dim oDCredito As COMDCredito.DCOMCredActBD
    Set oDCredito = New COMDCredito.DCOMCredActBD
    
    oDCredito.actualizaCredPagoCuotasAgeParam
    
    Set oDCredito = Nothing
End Sub
Public Sub insertarCredPagoCuotasAgeParam(ByVal sAgeCod As String, ByVal nMontoMin As Double, ByVal nMontoMax As Double, ByVal sUltimaActualizacion As String)
    Dim oDCredito As COMDCredito.DCOMCredActBD
    Set oDCredito = New COMDCredito.DCOMCredActBD
    
    oDCredito.insertarCredPagoCuotasAgeParam sAgeCod, nMontoMin, nMontoMax, sUltimaActualizacion
    
    Set oDCredito = Nothing
End Sub
'** End Juez *************************************************************
'** Juez 20120528 ********************************************************
Public Function MatrizMontoAPagar2CuotasxVenc(ByVal MatCalend As Variant, ByVal pdHoy As Date, Optional ByRef pnMonIntGra As Double) As Double
Dim i, J, Cant As Integer
Cant = 0
    MatrizMontoAPagar2CuotasxVenc = 0
    For i = 0 To UBound(MatCalend) - 1
        If pdHoy <= CDate(MatCalend(i, 0)) Then
            For J = 3 To 9
                MatrizMontoAPagar2CuotasxVenc = MatrizMontoAPagar2CuotasxVenc + CDbl(MatCalend(i, J))
            Next J
            MatrizMontoAPagar2CuotasxVenc = MatrizMontoAPagar2CuotasxVenc + CDbl(MatCalend(i, 11))
            pnMonIntGra = pnMonIntGra + CDbl(MatCalend(i, 5))
            Cant = Cant + 1
            If Cant = 2 Then Exit For
        End If
    Next i
End Function
'** End Juez *************************************************************
'**Juez 20120601 *********************************************************
Public Function obtieneNroCuotasPorVencUltimaCuotaPagada(ByVal psCtaCod As String, ByVal pdFecSis As String) As ADODB.Recordset
    Dim oDCredito As COMDCredito.DCOMCredActBD
    Set oDCredito = New COMDCredito.DCOMCredActBD
    
    Set obtieneNroCuotasPorVencUltimaCuotaPagada = oDCredito.obtieneNroCuotasPorVencUltimaCuotaPagada(psCtaCod, pdFecSis)
    Set oDCredito = Nothing
End Function
'** End Juez *************************************************************
'EJVG20120703 ***********
Public Function ListaPenalidadEcoTaxiAExtornar(ByVal pnTpoBusqueda As Integer, ByVal psBusqueda As String, ByVal pdFecha As Date) As ADODB.Recordset
    Dim oDCred As COMDCredito.DCOMCredActBD
    Set oDCred = New COMDCredito.DCOMCredActBD
    
    Set ListaPenalidadEcoTaxiAExtornar = New ADODB.Recordset
    
    If pnTpoBusqueda = 1 Then
        Set ListaPenalidadEcoTaxiAExtornar = oDCred.ListaPenalidadEcoTaxiAExtornarxUsuario(psBusqueda, pdFecha)
    Else
        Set ListaPenalidadEcoTaxiAExtornar = oDCred.ListaPenalidadEcoTaxiAExtornarxCtaCod(psBusqueda, pdFecha)
    End If
    Set oDCred = Nothing
End Function
'END EJVG ***************

'**JUEZ 20120907 **********************************************************
Public Function ObtieneAgenciaCredEval(ByVal psCodAge As String) As Integer
    
On Error GoTo ErrorObtieneAgenciaCredEval
    Dim oGen As COMDConstSistema.DCOMGeneral
    Dim sAgencias As String
    Dim sCod() As String
    Dim i As Integer
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    sAgencias = oGen.LeeConstSistema(gConstSistRHCargoCodAgenciasCredEval)
    
    sCod = Split(sAgencias, ",")
    ObtieneAgenciaCredEval = 0
    
    For i = 0 To UBound(sCod)
        If psCodAge = sCod(i) Then
            ObtieneAgenciaCredEval = 1
            Exit Function
        End If
    Next i
    Exit Function
ErrorObtieneAgenciaCredEval:
    MsgBox Err.Description, vbCritical, "Error"
End Function

Public Function ObtieneTipoPermisoCredEval(ByVal pCargo As String) As Integer
    
On Error GoTo ErrorObtieneTipoPermisoCredEval
    Dim oGen As COMDConstSistema.DCOMGeneral
    Dim sCargosAnalistas As String, sCargosCoord As String, sCargosJef As String
    Dim sCodA() As String, sCodC() As String, sCodJ() As String
    Dim i As Integer
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    sCargosAnalistas = oGen.LeeConstSistema(gConstSistRHCargoCodAnalistasCredEval)
    sCargosCoord = oGen.LeeConstSistema(gConstSistRHCargoCodCoordCredEval)
    sCargosJef = oGen.LeeConstSistema(gConstSistRHCargoCodJefCredEval)
    
    sCodA = Split(sCargosAnalistas, ",")
    sCodC = Split(sCargosCoord, ",")
    sCodJ = Split(sCargosJef, ",")
    ObtieneTipoPermisoCredEval = 0
    
    For i = 0 To UBound(sCodA)
        If pCargo = sCodA(i) Then
            ObtieneTipoPermisoCredEval = 3
            Exit Function
        End If
    Next i
    For i = 0 To UBound(sCodC)
        If pCargo = sCodC(i) Then
            ObtieneTipoPermisoCredEval = 2
            Exit Function
        End If
    Next i
    For i = 0 To UBound(sCodJ)
        If pCargo = sCodJ(i) Then
            ObtieneTipoPermisoCredEval = 1
            Exit Function
        End If
    Next i
    
    Exit Function
ErrorObtieneTipoPermisoCredEval:
    MsgBox Err.Description, vbCritical, "Error"
End Function

Public Function CargaDatosCredEvaluacion(ByVal psCtaCod As String, ByVal pnFormato As Integer, _
                                        ByRef prsDatCredEval As ADODB.Recordset, ByRef prsInd As ADODB.Recordset, _
                                        Optional ByRef prsDatGastoNeg As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatGastoFam As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatOtrosIng As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatRef As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatVentaSem As ADODB.Recordset = Nothing) As Boolean

On Error GoTo ErrorCargaDatosCreEval
    Dim oCred As COMDCredito.DCOMCredito
    Dim prsColocacCred As ADODB.Recordset
    Set oCred = New COMDCredito.DCOMCredito
    
    CargaDatosCredEvaluacion = False
        
    Set prsDatCredEval = oCred.RecuperaColocacCredEval(psCtaCod)
    Set prsColocacCred = oCred.RecuperaColocacCred(psCtaCod)
    Set prsInd = oCred.RecuperaDatosIndicadCredEval(IIf(prsColocacCred!nColocCondicion = 1, 1, 2), pnFormato, 2)
    
    Set prsDatGastoNeg = oCred.RecuperaDatosGrillaCredEval(psCtaCod, 1)
    
    Set prsDatGastoFam = oCred.RecuperaDatosGrillaCredEval(psCtaCod, 2)
    
    Set prsDatOtrosIng = oCred.RecuperaDatosGrillaCredEval(psCtaCod, 3)
    
    Set prsDatRef = oCred.RecuperaDatosRef(psCtaCod)
    
    Set prsDatVentaSem = oCred.RecuperaDatosVentaSem(psCtaCod)
    
    CargaDatosCredEvaluacion = True
    
Exit Function
ErrorCargaDatosCreEval:
    MsgBox Err.Description, vbCritical, "Error"
End Function

Public Function GrabarCredEvaluacionFormatoIyII(ByVal psCtaCod As String, ByVal pnInsertActualiza As Integer, ByVal psGiroNeg As String, ByVal pnExpEmpAnio As Integer, _
                                            ByVal pnExpEmpMes As Integer, ByVal pnTiempoLocalAnio As Integer, ByVal pnTiempoLocalMes As Integer, ByVal pnCondLocal As Integer, _
                                            ByVal psCondLocalOtros As String, ByVal pnCuotaPagar As Double, ByVal pnCuotas As Integer, ByVal pnUltEndeuda As Double, _
                                            ByVal psFecUltEndeuda As Date, ByVal pnMoneda As Integer, ByVal pnMontoSol As Double, ByVal pnVentaProm As Double, _
                                            ByVal pnCostoVenta As Double, ByVal rsGastoNeg As ADODB.Recordset, ByVal rsGastoFam As ADODB.Recordset, _
                                            ByVal rsOtrosIng As ADODB.Recordset, ByVal pnUtilNeta As Double, ByVal pnExcedenteFam As Double, ByVal pnCalcMonto As Double, _
                                            ByVal pnCalcTEM As Double, ByVal pnCalcCuotas As Integer, ByVal pnMontoMax As Double, ByVal pnCuotaEstima As Double, _
                                            ByVal pnCuotaUNM As Double, ByVal pnCuotaExcedeFam As Double, ByVal psComent As String, ByVal rsRef As ADODB.Recordset, _
                                            Optional ByVal rsVentaSem As ADODB.Recordset, _
                                            Optional ByVal pnFormato As Integer) As Boolean
'VALIDO PARA FORMATO I y II
Dim oCredito As COMDCredito.DCOMCredActBD
Dim i As Integer

On Error GoTo ErrorGrabarCredEvaluacionFormatoIyII

    Set oCredito = New COMDCredito.DCOMCredActBD
    oCredito.dBeginTrans
        
    Call oCredito.GrabarCredEvaluacionFormatoIyII(psCtaCod, pnInsertActualiza, psGiroNeg, pnExpEmpAnio, pnExpEmpMes, pnTiempoLocalAnio, pnTiempoLocalMes, pnCondLocal, _
                                        psCondLocalOtros, pnCuotaPagar, pnCuotas, pnUltEndeuda, Format(psFecUltEndeuda, "yyyymmdd"), pnMoneda, pnMontoSol, pnVentaProm, _
                                        pnCostoVenta, pnUtilNeta, pnExcedenteFam, pnCalcMonto, pnCalcTEM, pnCalcCuotas, pnMontoMax, pnCuotaEstima, _
                                        pnCuotaUNM, pnCuotaExcedeFam, psComent, pnFormato)
    
    If Not rsGastoNeg Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosGrillas(psCtaCod, 1)
        For i = 0 To rsGastoNeg.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosGrillas(psCtaCod, rsGastoNeg!concepto, rsGastoNeg!Monto, 1)
            rsGastoNeg.MoveNext
        Next i
    End If
    If Not rsGastoFam Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosGrillas(psCtaCod, 2)
        For i = 0 To rsGastoFam.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosGrillas(psCtaCod, rsGastoFam!concepto, rsGastoFam!Monto, 2)
            rsGastoFam.MoveNext
        Next i
    End If
    If Not rsOtrosIng Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosGrillas(psCtaCod, 3)
        For i = 0 To rsOtrosIng.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosGrillas(psCtaCod, rsOtrosIng!concepto, rsOtrosIng!Monto, 3)
            rsOtrosIng.MoveNext
        Next i
    End If
    If Not rsVentaSem Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosVentasSemana(psCtaCod)
        rsVentaSem.MoveFirst
        For i = 0 To rsVentaSem.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosVentasSemana(psCtaCod, rsVentaSem!cProducto, rsVentaSem!nVentaAlta, _
                                                            rsVentaSem!nDiasAlta, rsVentaSem!nVentaBaja, rsVentaSem!nDiasBaja, _
                                                            rsVentaSem!nTotalMes, rsVentaSem!nCosto, rsVentaSem!nParticip, rsVentaSem!nReal)
            rsVentaSem.MoveNext
        Next i
    End If
    If Not rsRef Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosReferencia(psCtaCod)
        For i = 0 To rsRef.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosReferencia(psCtaCod, rsRef!Nombre, rsRef!DNI, rsRef!Telefono, rsRef!Referido, rsRef!DNl)
            rsRef.MoveNext
        Next i
    End If
    
    oCredito.dCommitTrans
    Set oCredito = Nothing
    
    GrabarCredEvaluacionFormatoIyII = True
    Exit Function
ErrorGrabarCredEvaluacionFormatoIyII:
    oCredito.dRollbackTrans
    GrabarCredEvaluacionFormatoIyII = False
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function GrabarCredEvaluacionVerif(ByVal psCtaCod As String, ByVal psVerif As String, ByVal psMovNro As String)

Dim oCredito As COMDCredito.DCOMCredActBD
    
On Error GoTo ErrorGrabarCredEvaluacionVerif
    Set oCredito = New COMDCredito.DCOMCredActBD
    oCredito.dBeginTrans

    Call oCredito.GrabarCredEvaluacionVerif(psCtaCod, psVerif, psMovNro)
    
    oCredito.dCommitTrans
    Set oCredito = Nothing
    GrabarCredEvaluacionVerif = True
    Exit Function
ErrorGrabarCredEvaluacionVerif:
    oCredito.dRollbackTrans
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'** END JUEZ **************************************************************
'WIOR 20120918 *************************************************************
Public Function GrabarRSFormato3y4(ByVal psCtaCod As String, ByVal pnInsertActualiza As Integer, ByVal psGiroNeg As String, _
                                ByVal pnCuotaPagar As Double, ByVal pnCuotas As Integer, ByVal pnMoneda As Integer, ByVal pnMontoSol As Double, _
                                ByVal pnCalcMonto As Double, ByVal pnCalcTEM As Double, ByVal pnCalcCuotas As Double, ByVal pnMontoMax As Double, _
                                ByVal pnCuotaEstima As Double, ByVal pnEndeudTotal As Double, ByVal pnCapPagoEmp As Double, ByVal pnCapPagoTotal As Double, _
                                ByVal pnFormato As Integer, ByVal psComent As String, ByVal rsGastoNeg As ADODB.Recordset, ByVal rsGastoFam As ADODB.Recordset, _
                                ByVal rsOtrosIng As ADODB.Recordset, ByVal rsRef As ADODB.Recordset, _
                                ByVal rsActivos As ADODB.Recordset, ByVal rsPasivos As ADODB.Recordset, ByVal rsPasivosNo As ADODB.Recordset, _
                                ByVal rsPDT As ADODB.Recordset, ByVal rsEstadoGP As ADODB.Recordset, ByVal rsRatios As ADODB.Recordset, ByVal rsIngNeg As ADODB.Recordset, _
                                ByVal pnMes1 As Integer, ByVal pnMes2 As Integer, ByVal pnMes3 As Integer, _
                                ByVal pnAnio1 As Integer, ByVal pnAnio2 As Integer, ByVal pnAnio3 As Integer, _
                                ByVal pnTasaIngNeg As Double, ByVal pnTasaGastoNeg As Double, _
                                ByVal pnTasaGastoFam As Double, ByVal pnTasaOtrosIng As Double, _
                                ByVal pnPatrimonioPE As Double, ByVal pnPatrimonioPP As Double, _
                                ByVal pnPatrimonioTOTAL As Double, ByVal pnPasPatPE As Double, _
                                ByVal pnPasPatPP As Double, ByVal pnPasPatTOTAL As Double) As Boolean
'VALIDO PARA FORMATO 3 y 4
Dim oCredito As COMDCredito.DCOMCredActBD
Dim i As Integer

On Error GoTo ErrorGrabarRSFormato3y4

    Set oCredito = New COMDCredito.DCOMCredActBD
    oCredito.dBeginTrans
        
        
    Call oCredito.GrabarCredEvaluacionFormato3y4(psCtaCod, pnInsertActualiza, psGiroNeg, pnCuotaPagar, pnCuotas, pnMoneda, pnMontoSol, _
                                        pnCalcMonto, pnCalcTEM, pnCalcCuotas, pnMontoMax, pnCuotaEstima, pnEndeudTotal, pnCapPagoEmp, _
                                        pnCapPagoTotal, pnFormato, psComent)
    
    'TASAS
    Call oCredito.dEliminaCredEvalTasas(psCtaCod)
    Call oCredito.dInsertaCredEvaltasas(psCtaCod, 1, pnTasaGastoNeg)
    Call oCredito.dInsertaCredEvaltasas(psCtaCod, 2, pnTasaGastoFam)
    Call oCredito.dInsertaCredEvaltasas(psCtaCod, 3, pnTasaOtrosIng)
    Call oCredito.dInsertaCredEvaltasas(psCtaCod, 4, pnTasaIngNeg)
    
    Call oCredito.dEliminaCredEvalActivosPasivos(psCtaCod, 4)
    Call oCredito.dInsertaCredEvalActivosPasivos(psCtaCod, 4, "100", pnPatrimonioPE, pnPatrimonioPP, pnPatrimonioTOTAL)
    
    Call oCredito.dEliminaCredEvalActivosPasivos(psCtaCod, 5)
    Call oCredito.dInsertaCredEvalActivosPasivos(psCtaCod, 5, "200", pnPasPatPE, pnPasPatPP, pnPasPatTOTAL)

    
    
    If Not rsGastoNeg Is Nothing Then
        Call oCredito.dEliminaCredEvalGastoNegocio(psCtaCod)
        For i = 0 To rsGastoNeg.RecordCount - 1
            Call oCredito.dInsertaCredEvalGastoNegocio(psCtaCod, UCase(rsGastoNeg![Concepto Gasto]), CInt(Trim(Right(rsGastoNeg!tipo, 4))), CDbl(IIf(Trim(rsGastoNeg!Monto) = "", 0, rsGastoNeg!Monto)))
            rsGastoNeg.MoveNext
        Next i
    End If
    If Not rsGastoFam Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosGrillas(psCtaCod, 2)
        For i = 0 To rsGastoFam.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosGrillas(psCtaCod, UCase(rsGastoFam![Concepto Gasto]), CDbl(IIf(Trim(rsGastoFam!Monto) = "", 0, rsGastoFam!Monto)), 2)
            rsGastoFam.MoveNext
        Next i
    End If
    If Not rsOtrosIng Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosGrillas(psCtaCod, 3)
        For i = 0 To rsOtrosIng.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosGrillas(psCtaCod, UCase(rsOtrosIng![Concepto Ingreso]), CDbl(IIf(Trim(rsOtrosIng!Monto) = "", 0, rsOtrosIng!Monto)), 3)
            rsOtrosIng.MoveNext
        Next i
    End If
    If Not rsRef Is Nothing Then
        Call oCredito.dEliminaCredEvalDatosReferencia(psCtaCod)
        For i = 0 To rsRef.RecordCount - 1
            Call oCredito.dInsertaCredEvalDatosReferencia(psCtaCod, UCase(rsRef!Nombre), rsRef!DNI, rsRef!Teléfono, UCase(rsRef!Referido), rsRef![DNI REF.])
            rsRef.MoveNext
        Next i
    End If
    
    If Not rsActivos Is Nothing Then
        Call oCredito.dEliminaCredEvalActivosPasivos(psCtaCod, 1)
        For i = 0 To rsActivos.RecordCount - 1
            Call oCredito.dInsertaCredEvalActivosPasivos(psCtaCod, 1, UCase(rsActivos!tipo), CDbl(IIf(Trim(rsActivos![P.E.]) = "", 0, rsActivos![P.E.])), CDbl(IIf(Trim(rsActivos![P.P.]) = "", 0, rsActivos![P.P.])), CDbl(IIf(Trim(rsActivos!Total) = "", 0, rsActivos!Total)))
            rsActivos.MoveNext
        Next i
    End If
    
     If Not rsPasivos Is Nothing Then
        Call oCredito.dEliminaCredEvalActivosPasivos(psCtaCod, 2)
        For i = 0 To rsPasivos.RecordCount - 1
            Call oCredito.dInsertaCredEvalActivosPasivos(psCtaCod, 2, "100", CDbl(IIf(Trim(rsPasivos![P.E.]) = "", 0, rsPasivos![P.E.])), CDbl(IIf(Trim(rsPasivos![P.P.]) = "", 0, rsPasivos![P.P.])), CDbl(IIf(Trim(rsPasivos!Total) = "", 0, rsPasivos!Total)), rsPasivos![Pasivo Corriente])
            rsPasivos.MoveNext
        Next i
    End If
    
    If Not rsPasivosNo Is Nothing Then
        Call oCredito.dEliminaCredEvalActivosPasivos(psCtaCod, 3)
        For i = 0 To rsPasivosNo.RecordCount - 1
            Call oCredito.dInsertaCredEvalActivosPasivos(psCtaCod, 3, "200", CDbl(IIf(Trim(rsPasivosNo![P.E.]) = "", 0, rsPasivosNo![P.E.])), CDbl(IIf(Trim(rsPasivosNo![P.P.]) = "", 0, rsPasivosNo![P.P.])), CDbl(IIf(Trim(rsPasivosNo!Total) = "", 0, rsPasivosNo!Total)), rsPasivosNo![Pasivo No Corriente])
            rsPasivosNo.MoveNext
        Next i
    End If
    

    If Not rsPDT Is Nothing Then
        Call oCredito.dEliminaCredEvalPDT(psCtaCod)
        Call oCredito.dInsertaCredEvalPDT(psCtaCod, pnMes1, pnMes2, pnMes3, pnAnio1, pnAnio2, pnAnio3)
        For i = 0 To rsPDT.RecordCount - 1
            Call oCredito.dInsertaCredEvalPDTDet(psCtaCod, rsPDT!tipo, CDbl(IIf(Trim(rsPDT!Mes1) = "", 0, rsPDT!Mes1)), CDbl(IIf(Trim(rsPDT!Mes2) = "", 0, rsPDT!Mes2)), CDbl(IIf(Trim(rsPDT!Mes3) = "", 0, rsPDT!Mes3)), CDbl(IIf(Trim(rsPDT!Promedio) = "", 0, rsPDT!Promedio)))
            rsPDT.MoveNext
        Next i
    End If
    
     If Not rsEstadoGP Is Nothing Then
        Call oCredito.dEliminaCredEvalEstadosGP(psCtaCod)
        For i = 0 To rsEstadoGP.RecordCount - 1
            Call oCredito.dInsertaCredEvalEstadosGP(psCtaCod, CDbl(IIf(Trim(rsEstadoGP!Ingresos) = "", 0, rsEstadoGP!Ingresos)), CDbl(IIf(Trim(rsEstadoGP!Egresos) = "", 0, rsEstadoGP!Egresos)), CDbl(IIf(Trim(rsEstadoGP![Margen Bruto]) = "", 0, rsEstadoGP![Margen Bruto])), CDbl(IIf(Trim(rsEstadoGP![Gastos del Negocio]) = "", 0, rsEstadoGP![Gastos del Negocio])), CDbl(IIf(Trim(rsEstadoGP![Ingreso Neto]) = "", 0, rsEstadoGP![Ingreso Neto])))
            rsEstadoGP.MoveNext
        Next i
    End If
    
    If Not rsRatios Is Nothing Then
        Call oCredito.dEliminaCredEvalRatios(psCtaCod)
        For i = 0 To rsRatios.RecordCount - 1
            Call oCredito.dInsertaCredEvalRatios(psCtaCod, rsRatios!tipo, CDbl(IIf(Trim(rsRatios![End. Corto Plazo]) = "", 0, rsRatios![End. Corto Plazo])), CDbl(IIf(Trim(rsRatios![End. Largo Plazo]) = "", 0, rsRatios![End. Largo Plazo])), _
                        CDbl(IIf(Trim(rsRatios![Liquidez Corriente]) = "", 0, rsRatios![Liquidez Corriente])), CDbl(IIf(Trim(rsRatios![Capital de Trabajo]) = "", 0, rsRatios![Capital de Trabajo])), CDbl(IIf(Trim(rsRatios![Rotación de Invent.]) = "", 0, rsRatios![Rotación de Invent.])))
            rsRatios.MoveNext
        Next i
    End If
    
    If Not rsIngNeg Is Nothing Then
        Call oCredito.dEliminaCredEvalIngNeg(psCtaCod)
        For i = 0 To rsIngNeg.RecordCount - 1
            Call oCredito.dInsertaCredEvalIngNeg(psCtaCod, rsIngNeg!tipo, CDbl(IIf(Trim(rsIngNeg!Prod1) = "", 0, rsIngNeg!Prod1)), CDbl(IIf(Trim(rsIngNeg!Prod2) = "", 0, rsIngNeg!Prod2)), CDbl(IIf(Trim(rsIngNeg!Prod3) = "", 0, rsIngNeg!Prod3)), CDbl(IIf(Trim(rsIngNeg!Resultado) = "", 0, rsIngNeg!Resultado)))
            rsIngNeg.MoveNext
        Next i
    End If
    
    
    oCredito.dCommitTrans
    Set oCredito = Nothing
    
    GrabarRSFormato3y4 = True
    Exit Function
ErrorGrabarRSFormato3y4:
oCredito.dRollbackTrans
GrabarRSFormato3y4 = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
Public Function CargaDatosCredEvaluacion3y4(ByVal psCtaCod As String, ByVal pnFormato As Integer, _
                                        ByRef prsDatCredEval As ADODB.Recordset, ByRef prsInd As ADODB.Recordset, _
                                        Optional ByRef prsDatGastoNeg As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatGastoFam As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatOtrosIng As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatRef As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatActivos As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatPasivos As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatPasivosNo As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatPDT As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatPDTDet As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatPatrimonio As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatPasPat As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatEstadoGP As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatRatios As ADODB.Recordset = Nothing, _
                                        Optional ByRef prsDatIngNeg As ADODB.Recordset = Nothing, _
                                        Optional ByRef pnTasaIngNeg As Double = 0, _
                                        Optional ByRef pnTasaGastoNeg As Double = 0, _
                                        Optional ByRef pnTasaGastoFam As Double = 0, _
                                        Optional ByRef pnTasaOtrosIng As Double = 0) As Boolean


On Error GoTo ErrorCargaDatosCreEval
    Dim oCred As COMDCredito.DCOMCredito
    Dim prsColocacCred As ADODB.Recordset
    Set oCred = New COMDCredito.DCOMCredito

    
    CargaDatosCredEvaluacion3y4 = False
        
    Set prsDatCredEval = oCred.RecuperaColocacCredEval(psCtaCod)
    Set prsColocacCred = oCred.RecuperaColocacCred(psCtaCod)
    Set prsInd = oCred.RecuperaDatosIndicadCredEval(IIf(prsColocacCred!nColocCondicion = 1, 1, 2), pnFormato, 2)
    
    Set prsDatGastoNeg = oCred.RecuperaDatosCredEvalGastosNeg(psCtaCod)
    
    Set prsDatGastoFam = oCred.RecuperaDatosGrillaCredEval(psCtaCod, 2)
    
    Set prsDatOtrosIng = oCred.RecuperaDatosGrillaCredEval(psCtaCod, 3)
    
    Set prsDatRef = oCred.RecuperaDatosRef(psCtaCod)
    
    Set prsDatActivos = oCred.RecuperaDatosCredEvalActivosPasivos(psCtaCod, 1)
    Set prsDatPasivos = oCred.RecuperaDatosCredEvalActivosPasivos(psCtaCod, 2)
    Set prsDatPasivosNo = oCred.RecuperaDatosCredEvalActivosPasivos(psCtaCod, 3)
    Set prsDatPDT = oCred.RecuperaDatosCredEvalPDT(psCtaCod)
    Set prsDatEstadoGP = oCred.RecuperaDatosCredEvalEstadosGP(psCtaCod)
    Set prsDatRatios = oCred.RecuperaDatosCredEvalRatios(psCtaCod)
    Set prsDatIngNeg = oCred.RecuperaDatosCredEvalIngNeg(psCtaCod)
    Set prsDatPDTDet = oCred.RecuperaDatosCredEvalPDTDet(psCtaCod)
    Set prsDatPatrimonio = oCred.RecuperaDatosCredEvalActivosPasivos(psCtaCod, 4)
    Set prsDatPasPat = oCred.RecuperaDatosCredEvalActivosPasivos(psCtaCod, 5)

    
    pnTasaIngNeg = oCred.RecuperaDatosCredEvalTasasIngEg(psCtaCod, 4)
    pnTasaGastoNeg = oCred.RecuperaDatosCredEvalTasasIngEg(psCtaCod, 1)
    pnTasaGastoFam = oCred.RecuperaDatosCredEvalTasasIngEg(psCtaCod, 2)
    pnTasaOtrosIng = oCred.RecuperaDatosCredEvalTasasIngEg(psCtaCod, 3)

                                        
    CargaDatosCredEvaluacion3y4 = True
    
Exit Function
ErrorCargaDatosCreEval:
    MsgBox Err.Description, vbCritical, "Error"
End Function
'WIOR FIN **************************************************************************
'EJVG20121126 ***
'Public Function grabarPagoCuotasEcotaxi(ByRef pMatCreditos As Variant, ByVal psUser As String, ByVal psAgeCod As String, ByVal pdFecha As Date, ByRef psImpreBoleta As String) As String
Public Function grabarPagoCuotasEcotaxi(ByRef pMatCreditos As Variant, ByVal psUser As String, ByVal psAgeCod As String, ByVal pdFecha As Date, ByRef psImpreBoleta As String, ByVal psOpeCod As String) As String
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim oCapta As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim rsOperador As ADODB.Recordset
    Dim pMatDatosAhoAbo As Variant
    Dim bTransac As Boolean, bExitoPagoCredito As Boolean, bPuedeCoberturar As Boolean
    Dim sMovNro As String, sOpeCred As String, sCadImprCredNOCoberturados As String
    Dim CtaCodCredito As String, CtaCodRecaudo As String, CtaCodOperador As String
    Dim MontoCuota As Double, ITF As Double, MontoPagar As Double, SaldoRecaudoCubre As Double, SaldoOperadorCubre As Double, SaldoOperadorCubreTmp As Double, SaldoRecaudoCubreTmp As Double
    Dim lnMontoITFDebitoCli As Double, lnMontoITFDebitoOpe As Double, lnMontoITFDebitoOpeTmp As Double, lnMontoITFDebitoCliTmp As Double
    Dim nMovNro As Long, lnNroRegistros As Long, i As Long
    Dim NroCuota As Integer
    Dim lsImpreBoletaCred As String
    Dim rsTitular As ADODB.Recordset
    
    grabarPagoCuotasEcotaxi = ""
    
    ReDim pMatDatosAhoAbo(14)
    pMatDatosAhoAbo(0) = "" 'Cuenta de Ahorros
    pMatDatosAhoAbo(1) = "0.00" 'Monto de Apertura
    pMatDatosAhoAbo(2) = "0.00" 'Interes Ganado de Abono
    pMatDatosAhoAbo(3) = "0.00" 'Interes Ganado de Retiro Gastos
    pMatDatosAhoAbo(4) = "0.00" 'Interes Ganado de Retiro Cancelaciones
    pMatDatosAhoAbo(5) = "0.00" 'Monto de Abono
    pMatDatosAhoAbo(6) = "0.00" 'Monto de Retiro de Gastos
    pMatDatosAhoAbo(7) = "0.00" 'Monto de Retiro de Cancelaciones
    pMatDatosAhoAbo(8) = "0.00" 'Saldo Disponible Abono
    pMatDatosAhoAbo(9) = "0.00" 'Saldo Contable Abono
    pMatDatosAhoAbo(10) = "0.00" 'Saldo Disponible Retiro de Gastos
    pMatDatosAhoAbo(11) = "0.00" 'Saldo Contable Retiro de Gastos
    pMatDatosAhoAbo(12) = "0.00" 'Saldo Disponible Retiro de Cancelaciones
    pMatDatosAhoAbo(13) = "0.00" 'Saldo Contable Retiro de Cancelaciones
    
On Error GoTo ErrgrabarPagoCuotasEcotaxi
    
    sCadImprCredNOCoberturados = ""
    lnNroRegistros = UBound(pMatCreditos, 2)
    
    For i = 1 To lnNroRegistros
        CtaCodCredito = "": CtaCodRecaudo = "": CtaCodOperador = ""
        NroCuota = 0:
        MontoCuota = 0
        ITF = 0
        MontoPagar = 0
        SaldoRecaudoCubre = 0
        SaldoOperadorCubre = 0
        lnMontoITFDebitoCli = 0: lnMontoITFDebitoOpe = 0
        SaldoRecaudoCubreTmp = 0: lnMontoITFDebitoCliTmp = 0
        nMovNro = 0
        sOpeCred = ""
        bTransac = False
        SaldoOperadorCubreTmp = 0
        lnMontoITFDebitoOpeTmp = 0
        lsImpreBoletaCred = ""
        
        CtaCodCredito = Trim(pMatCreditos(2, i))
        NroCuota = CInt(Trim(pMatCreditos(3, i)))
        MontoCuota = CDbl(Trim(pMatCreditos(4, i)))
        ITF = CDbl(Trim(pMatCreditos(5, i)))
        MontoPagar = MontoCuota + ITF
        CtaCodRecaudo = Trim(pMatCreditos(6, i))
        SaldoRecaudoCubre = CDbl(Trim(pMatCreditos(7, i)))
        lnMontoITFDebitoCli = IIf(SaldoRecaudoCubre > 0, DameMontoITF(SaldoRecaudoCubre), 0)
        CtaCodOperador = Trim(Trim(pMatCreditos(8, i)))
        SaldoOperadorCubre = CDbl(Trim(pMatCreditos(9, i)))
        lnMontoITFDebitoOpe = IIf(SaldoOperadorCubre > 0, DameMontoITF(SaldoOperadorCubre), 0)

        Set oCapta = New COMDCaptaGenerales.DCOMCaptaGenerales
        
        'Verificamos nuevamente si el Cliente tiene saldo Disponible
        Set rsTitular = oCapta.GetDatosCuentaAho(CtaCodRecaudo)
        If CDbl(rsTitular!nSaldo) < (SaldoRecaudoCubre + lnMontoITFDebitoCli) Then
            SaldoRecaudoCubreTmp = IIf(CDbl(rsTitular!nSaldo) < 0, 0, CDbl(rsTitular!nSaldo))
            lnMontoITFDebitoCliTmp = IIf(SaldoRecaudoCubreTmp > 0, DameMontoITF(SaldoRecaudoCubreTmp), 0)
            'Deducimos el ITF
            SaldoRecaudoCubre = SaldoRecaudoCubreTmp - lnMontoITFDebitoCliTmp
            lnMontoITFDebitoCli = IIf(SaldoRecaudoCubre > 0, DameMontoITF(SaldoRecaudoCubre), 0)
        End If
        If psOpeCod = gCredPagoCuotasEcotaxi Then
            SaldoOperadorCubre = 0
        End If

        'Verificamos si el Operador tiene Saldo Disponible ***********
        bPuedeCoberturar = True
        Set rsOperador = New ADODB.Recordset
        If SaldoOperadorCubre > 0 Then
            Set rsOperador = oCapta.GetDatosCuentaAho(CtaCodOperador)
            If CDbl(rsOperador!nSaldo) < (SaldoOperadorCubre + lnMontoITFDebitoOpe) Then
                SaldoOperadorCubreTmp = IIf(CDbl(rsOperador!nSaldo) < 0, 0, CDbl(rsOperador!nSaldo))
                lnMontoITFDebitoOpeTmp = IIf(SaldoOperadorCubreTmp > 0, DameMontoITF(SaldoOperadorCubreTmp), 0)
                'Deducimos el ITF
                SaldoOperadorCubre = SaldoOperadorCubreTmp - lnMontoITFDebitoOpeTmp
                lnMontoITFDebitoOpe = IIf(SaldoOperadorCubre > 0, DameMontoITF(SaldoOperadorCubre), 0)
            End If
        End If
        '*************************************************************
        MontoPagar = SaldoRecaudoCubre + SaldoOperadorCubre
        If MontoPagar > 0 Then 'EJVG20140911
            Do While MontoPagar > 0
                MontoCuota = MontoPagar
                ITF = DameMontoITF(MontoCuota)
                If (MontoCuota + ITF) = (SaldoRecaudoCubre + SaldoOperadorCubre) Then
                    Exit Do
                ElseIf (MontoCuota + ITF) < (SaldoRecaudoCubre + SaldoOperadorCubre) Then
                    MontoCuota = SaldoRecaudoCubre + SaldoOperadorCubre
                    ITF = DameMontoITF(MontoCuota)
                    MontoCuota = MontoCuota - ITF
                    Exit Do
                End If
                MontoPagar = MontoPagar - 0.005
            Loop

            Set oBase = New COMDCredito.DCOMCredActBD
            Call oBase.dBeginTrans
            bTransac = True

            sMovNro = oBase.GeneraMovNro(pdFecha, Right(psAgeCod, 2), psUser)
            'Call oBase.InsertaMov(sMovNro, gCredPagoCuotasEcotaxi, "Pago de Cuota Crédito Ecotaxi", gMovEstContabMovContable, gMovFlagVigente)
            Call oBase.InsertaMov(sMovNro, psOpeCod, "Pago de Cuota Crédito Ecotaxi", gMovEstContabMovContable, gMovFlagVigente)
            nMovNro = oBase.GetnMovNro(sMovNro)

            'Pago del Crédito ************************************
            bExitoPagoCredito = PagarCuotaEcotaxi(oBase, nMovNro, CtaCodCredito, MontoCuota, ITF, Right(psAgeCod, 2), psUser, pdFecha, lsImpreBoletaCred)
            '*****************************************************
            If bExitoPagoCredito Then
                'Actualizamos las Operaciones de ITF en el Movimiento de Pago
                Call oBase.ActualizaOperacionITFPagoCuotaEcoTaxi(nMovNro, gITFCobroPagoCuotaEcoTaxi)
                sOpeCred = oBase.DameOpeCodPagoCuotaEcoTaxi(nMovNro)
                If sOpeCred <> "" Then
                    'Retiros *********************************************
                    If SaldoRecaudoCubre > 0 Then
                        Call oBase.CapCargoCuentaAho(pMatDatosAhoAbo, CtaCodRecaudo, SaldoRecaudoCubre, sOpeCred, sMovNro, "Cargo por Pago de Cuota Crédito Ecotaxi Nro " & CtaCodCredito, pdFecha, , , , False, False, False, , , , , , , Mid(CtaCodRecaudo, 9, 1), True, lnMontoITFDebitoCli, False, gITFCobroCargoEcoTaxi)
                    End If
                    If SaldoOperadorCubre > 0 Then
                        Call oBase.CapCargoCuentaAho(pMatDatosAhoAbo, CtaCodOperador, SaldoOperadorCubre, sOpeCred, sMovNro, "Cargo por Pago de Cuota Crédito Ecotaxi Nro " & CtaCodCredito, pdFecha, , , , False, False, False, , , , , , , Mid(CtaCodRecaudo, 9, 1), True, lnMontoITFDebitoOpe, False, gITFCobroCargoEcoTaxi)
                    End If
                    '*****************************************************
                    Call oBase.dCommitTrans
                    bTransac = False
                    psImpreBoleta = psImpreBoleta & lsImpreBoletaCred
                    pMatCreditos(4, i) = MontoCuota
                    pMatCreditos(5, i) = ITF
                    pMatCreditos(10, i) = 1 'Bit de Pago satisfactorio
                Else
                    Call oBase.dRollbackTrans
                End If
            Else
                Call oBase.dRollbackTrans
            End If
        End If
    Next
    
    Set oBase = Nothing
    Set oCapta = Nothing
    Exit Function
ErrgrabarPagoCuotasEcotaxi:
    grabarPagoCuotasEcotaxi = "Ocurrió un error al procesar los pagos de cuota ecotaxi"
    If bTransac Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Pago de Cuotas Crédito EcoTaxi", Err.Description
End Function
Private Function PagarCuotaEcotaxi(ByVal poConnBase As COMDCredito.DCOMCredActBD, ByVal pnMovNro As Long, ByVal psCtaCod As String, ByVal pnImporteCobrado As Double, ByVal pnITF As Double, ByVal psCodAge As String, ByVal psCodUser As String, ByVal pdFecha As Date, ByRef psImpreBoleta As String) As Boolean
    Dim rsPers As ADODB.Recordset
    Dim rsCredVig As ADODB.Recordset
    Dim sAgencia As String
    Dim nDiasAtraso As Integer
    Dim nGastos As Double
    Dim nMonPago As Double
    Dim nMora As Double
    Dim nCuotasMora As Integer
    Dim nTotalDeuda As Currency
    Dim nInteresDesagio As Double
    Dim nMonCalDin As Double
    Dim sMensaje As String
    Dim cNomCliente As String
    Dim nNewSalCap As Double
    Dim nNewCPend As Integer
    Dim dProxFec As Date
    Dim sEstado As String
    Dim sMetodoLiq As String

    Dim cMoneda As String
    Dim bRfa As Boolean
    Dim nCuotaPendiente As Integer
    Dim nMoraCalculada As Double
    Dim dFechaVencimiento As Date
    Dim sImpreBoleta As String
    Dim bValorProceso As Boolean
    Dim nMonIntGra As Double
    Dim nIntPendiente As Double
    Dim nIntPendientePagado As Double
    Dim bPrepago As Boolean
    Dim nCalendDinamico As Integer
    Dim bCalenDinamic As Boolean
    Dim bCalenCuotaLibre As Boolean
    Dim nMivivienda As Integer
    Dim nCalPago As Integer
    Dim sPersCod As String
    Dim sOperacion As String
    Dim bExoneradaLavado As Boolean
    Dim bOperacionEfectivo As Boolean
    Dim nMontoLavDinero As Double
    Dim nTC As Double
    Dim nMontoPago As Double
    Dim nITF As Double, nITFTmp As Double
    Dim nCalendDinamTipo As Integer
    Dim nNroTransac As Integer
    Dim nPrestamo As Double
    Dim bCuotaCom As Integer
    Dim bRecepcionCmact As Boolean
    Dim sPersCmac As String
    
On Error GoTo ErrorPagarCuota

    PagarCuotaEcotaxi = False
    nInteresDesagio = 0
    
    Call CargaDatosPagoCuotas(psCtaCod, pdFecha, bPrepago, psCodAge, rsCredVig, sAgencia, nCalendDinamico, bCalenDinamic, bCalenCuotaLibre, _
                                nMivivienda, nCalPago, nGastos, nMonPago, nMora, nCuotasMora, nTotalDeuda, nInteresDesagio, _
                                nMonCalDin, sMensaje, sPersCod, sOperacion, bExoneradaLavado, bRfa, rsPers, bOperacionEfectivo, nMontoLavDinero, nTC, _
                                nMontoPago, nITF, nIntPendientePagado, nNewSalCap, nNewCPend, dProxFec, sEstado, nCuotaPendiente, nMoraCalculada, dFechaVencimiento)

    If Not rsCredVig.EOF Then
        sMetodoLiq = Trim(rsCredVig!cMetLiquidacion)
        nCalendDinamTipo = rsCredVig!nCalendDinamTipo
        cNomCliente = rsCredVig!cPersNombre
        nIntPendiente = IIf(IsNull(rsCredVig!nIntPend), 0, rsCredVig!nIntPend)
        nIntPendientePagado = 0
        nNroTransac = IIf(IsNull(rsCredVig!nTransacc), 0, rsCredVig!nTransacc)
        cMoneda = Trim(rsCredVig!cMoneda)
        nDiasAtraso = CInt(rsCredVig!nDiasAtraso)
        
        nITFTmp = pnITF
        bValorProceso = ActualizaMontoPago(pnImporteCobrado, nTotalDeuda, psCtaCod, pdFecha, sMetodoLiq, nIntPendiente, nIntPendientePagado, bCalenCuotaLibre, bCalenDinamic, bPrepago, pnImporteCobrado, _
                nMonCalDin, sMensaje, pnITF, nInteresDesagio, nNewSalCap, nNewCPend, dProxFec, sEstado, nMonIntGra)
        pnITF = nITFTmp
        If bValorProceso Then
        Call GrabarPagoCuotas(psCtaCod, nMivivienda, nCalPago, pnImporteCobrado, _
                         pdFecha, sMetodoLiq, gColocTipoPagoCargoCta, psCodAge, psCodUser, "109", "", _
                         bRecepcionCmact, sPersCmac, nIntPendiente, nIntPendientePagado, bPrepago, "", pnITF, _
                         nInteresDesagio, nTotalDeuda, bCalenDinamic, nMonCalDin, nCalendDinamTipo, "", CInt(Mid(psCtaCod, 6, 3)), _
                         cNomCliente, cMoneda, nNroTransac, Format(dProxFec, "dd/mm/yyyy"), "", "", False, "", _
                         "", "", psImpreBoleta, nDiasAtraso, "", , , "", "", "", "", pnMovNro, , , , , poConnBase)
        PagarCuotaEcotaxi = True
        End If
    Else
        PagarCuotaEcotaxi = False
    End If
    
    Set rsPers = Nothing
    Set rsCredVig = Nothing
    Exit Function
ErrorPagarCuota:
    PagarCuotaEcotaxi = False
End Function
Public Function DameMontoITF(ByVal pnMonto As Double) As Double
    Dim oITF As New COMDConstSistema.FCOMITF
    Dim lnMonto As Double, lnITF As Double, lnRedondeoITF As Double
        
    oITF.fgITFParametros

    lnMonto = pnMonto
    lnITF = lnMonto * oITF.gnITFPorcent
    lnITF = oITF.CortaDosITF(lnITF)
    lnRedondeoITF = fgDiferenciaRedondeoITF(lnITF)
    If lnRedondeoITF > 0 Then
        lnITF = lnITF - lnRedondeoITF
    End If
    DameMontoITF = lnITF
    Set oITF = Nothing
End Function
'END EJVG *******

'JUEZ 20121218 ******************************************************************************************************
Public Sub GrabarSugerenciaNew(ByVal psCtaCod As String, ByVal pnColocDestino As Integer, ByVal pnCampana As Integer, ByVal psCtaCodAho As String, _
                                    ByVal pnBloqueo As Integer, ByVal pnExoneraReg As Integer, ByVal prsExonera As ADODB.Recordset, _
                                    ByVal pnExoSeguroDes As Integer, ByVal pnDesembBcoNac As Integer, ByVal psClaveCli As String, ByVal psCodAgeBcoNac As String)

Dim oCredito As COMDCredito.DCOMCredActBD
Dim i As Integer

On Error GoTo ErrorGrabarSugerenciaNew

    Set oCredito = New COMDCredito.DCOMCredActBD
    oCredito.dBeginTrans
    Call oCredito.dUpdateColocacCred(psCtaCod, , , pnColocDestino, , , , , , , , , , , , , , , , , , , , , , pnBloqueo, , pnExoneraReg, pnExoSeguroDes, , , psCtaCodAho, , pnCampana)

    Call oCredito.dDeleteColocConvBcoNac(psCtaCod)
    If pnDesembBcoNac = 1 Then
        Call oCredito.dInsertColocacConvBcoNac(psCtaCod, psClaveCli, psCodAgeBcoNac, gDesBcoNacNuevo)
    End If
    
    Call oCredito.dDeleteCredSugExonera(psCtaCod)
    If pnExoneraReg = 1 Then
        prsExonera.MoveFirst
        For i = 0 To prsExonera.RecordCount - 1
            If prsExonera!Solicitar = 1 Then
                Call oCredito.dInsertaCredSugExonera(psCtaCod, prsExonera!cExoneraCod)
            End If
             prsExonera.MoveNext
        Next i
    End If
    oCredito.dCommitTrans
    Set oCredito = Nothing

    Exit Sub

ErrorGrabarSugerenciaNew:
    oCredito.dRollbackTrans
    Err.Raise Err.Number, "Error En Proceso SugerenciaCredito", Err.Description
End Sub
'END JUEZ ***********************************************************************************************************

'AMDO 20130312 Funciones para CrediPremiazo ***********************************
Public Sub InsertaPuntosCrediPremiazoDesemboloso(ByVal pnMovNro As Long, ByVal pnMontoPrestamo As Double, ByVal psCtaCod As String, ByVal psPersCod As String, ByVal pdFecSis As Date)
   Dim nCantPuntos As Integer
   nCantPuntos = DevuelveCantPuntosDesembolso(pnMontoPrestamo, psCtaCod, pdFecSis)
  
    If nCantPuntos <> 0 Then
        Dim oCon As COMConecta.DCOMConecta
        Dim sSql As String

        Set oCon = New COMConecta.DCOMConecta
        oCon.AbreConexion
        sSql = "exec stp_ins_PuntosCrediPremiazo " & pnMovNro & ",'" & psCtaCod & "','" & psPersCod & "'," & nCantPuntos
        oCon.ConexionActiva.Execute sSql
        oCon.CierraConexion
        Set oCon = Nothing
    End If
End Sub

Public Function DevuelveCantPuntosTotalCredito(ByVal psCtaCod As String) As Integer
Dim R As ADODB.Recordset
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    sSql = "exec stp_sel_PuntosTotalAcumuladosCrediPremiazo '" & psCtaCod & "'"
    
    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    Set R = oCon.CargaRecordSet(sSql)

    If Not R.EOF Then
        DevuelveCantPuntosTotalCredito = R!TotalPuntos
    Else
        DevuelveCantPuntosTotalCredito = 0
    End If
End Function

Public Function DevuelveCantPuntosMovCredito(ByVal pnMovNro As Long, ByVal psCtaCod As String) As Integer
Dim R As ADODB.Recordset
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    sSql = "exec stp_sel_PuntosTotalMovCredito " & pnMovNro & ",'" & psCtaCod & "'"
    
    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    Set R = oCon.CargaRecordSet(sSql)

    If Not R.EOF Then
        DevuelveCantPuntosMovCredito = R!TotalPuntos
    Else
        DevuelveCantPuntosMovCredito = 0
    End If
End Function


Public Function DevuelveCantPuntosDesembolso(ByVal pnMontoPrestamo As Double, ByVal psCtaCod As String, ByVal pdFecSis As Date) As Integer
    If (Mid(psCtaCod, 9, 1) = "2") Then  'Si Monto del prestamo es en dolar se convierte a soles
    Dim rs As ADODB.Recordset
    Dim objTC As COMDConstSistema.NCOMTipoCambio
    Dim nTpoCambio As Double
    
        Set objTC = New COMDConstSistema.NCOMTipoCambio
       nTpoCambio = objTC.EmiteTipoCambio(pdFecSis, TCFijoDia)
        
        pnMontoPrestamo = pnMontoPrestamo * nTpoCambio
   End If
    
    Dim nCantPuntos As Integer
    nCantPuntos = 0
    
    If pnMontoPrestamo <= 1000 Then
       nCantPuntos = 4
    ElseIf pnMontoPrestamo > 1000 And pnMontoPrestamo <= 3000 Then
       nCantPuntos = 5
    ElseIf pnMontoPrestamo > 3000 And pnMontoPrestamo <= 5000 Then
       nCantPuntos = 6
    ElseIf pnMontoPrestamo > 5000 And pnMontoPrestamo <= 10000 Then
       nCantPuntos = 8
    ElseIf pnMontoPrestamo > 10000 Then
       nCantPuntos = 10
    End If

    DevuelveCantPuntosDesembolso = nCantPuntos
End Function

Public Sub InsertaPuntosCrediPremiazoPagoNormal(ByVal pnMovNro As Long, Optional ByVal pnDiasAtras As Integer = 0)
    Dim oCon As COMConecta.DCOMConecta
    Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_ins_PuntosCrediPremiazoPagoLote " & pnMovNro & "," & pnDiasAtras
    oCon.ConexionActiva.Execute sSql
    oCon.CierraConexion
    Set oCon = Nothing
End Sub

Public Sub CancelacionPuntosCreditoCancelado(ByVal psCtaCod As String)
    Dim oCon As COMConecta.DCOMConecta
    Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_upd_CancelacionPuntosCreditoCancelado '" & psCtaCod & "'"
    oCon.ConexionActiva.Execute sSql
    oCon.CierraConexion
    Set oCon = Nothing
End Sub


Public Sub ExtornaPuntosCrediPremiazo(ByVal pnMovNro As Long, ByVal psCtaCod As String)
    Dim oCon As COMConecta.DCOMConecta
    Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_upd_ExtornosPuntosCrediPremiazo " & pnMovNro & ",'" & psCtaCod & "'"
    oCon.ConexionActiva.Execute sSql
    oCon.CierraConexion
    Set oCon = Nothing
End Sub

'END AMDO *************************************************************************
'JUEZ 20130401 ********************************************************************
Public Function ObtieneAgenciaHabNivelesApr(ByVal psCodAge As String) As Integer
    
On Error GoTo ErrorObtieneAgenciaHabNivelesApr
    Dim oGen As COMDConstSistema.DCOMGeneral
    Dim sAgencias As String
    Dim sCod() As String
    Dim i As Integer
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    sAgencias = oGen.LeeConstSistema(gConstSistAgenciaHabNivelesApr)
    
    sCod = Split(sAgencias, ",")
    ObtieneAgenciaHabNivelesApr = 0
    
    For i = 0 To UBound(sCod)
        If psCodAge = sCod(i) Then
            ObtieneAgenciaHabNivelesApr = 1
            Exit Function
        End If
    Next i
    Exit Function
ErrorObtieneAgenciaHabNivelesApr:
    MsgBox Err.Description, vbCritical, "Error"
End Function
'END JUEZ *************************************************************************
'ALPA20130727**********************************************************************
Public Function ObtenerCuotaCalendarioMiVivienda(ByVal psCtaCod As String, ByVal pnCuota As String, ByVal poBase As COMDCredito.DCOMCredActBD) As Currency

Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim R2 As ADODB.Recordset
Dim oBase As COMDCredito.DCOMCredActBD
Dim sSql As String
Dim lnMonto As Currency



    Set oBase = New COMDCredito.DCOMCredActBD
    Set oBase = poBase

     sSql = "exec stp_sel_ObtenerCuotaCalendarioMiVivienda '" & psCtaCod & "'," & pnCuota
     Set R = New ADODB.Recordset
     R.Open sSql, oBase.coConex.ConexionActiva, adOpenStatic, adLockReadOnly, adCmdText
    If Not (R.BOF Or R.EOF) Then
    Do While Not R.EOF
        
        If R.RecordCount > 0 Then
            lnMonto = IIf(IsNull(R!nMonto), 0, R!nMonto)
        End If
        
        R.MoveNext
        
    Loop
    End If
    R.Close
    ObtenerCuotaCalendarioMiVivienda = lnMonto
End Function

Public Function MatrizCapitalPagadoMivivienda(ByVal MatCalendDistrib As Variant, ByVal psCtaCod As String, ByVal poBase As COMDCredito.DCOMCredActBD) As Double
Dim i As Integer
    MatrizCapitalPagadoMivivienda = 0
    For i = 0 To UBound(MatCalendDistrib) - 1
        If (CDbl(MatCalendDistrib(i, 3)) + CDbl(MatCalendDistrib(i, 4)) + CDbl(MatCalendDistrib(i, 5)) + CDbl(MatCalendDistrib(i, 6)) + CDbl(MatCalendDistrib(i, 7)) + CDbl(MatCalendDistrib(i, 8)) + CDbl(MatCalendDistrib(i, 9)) + CDbl(MatCalendDistrib(i, 11))) > 0 Then
            MatrizCapitalPagadoMivivienda = MatrizCapitalPagadoMivivienda + ObtenerCuotaCalendarioMiVivienda(psCtaCod, MatCalendDistrib(i, 1), poBase)
        End If
    Next i
End Function

'**********************************************************************************
'ALPA20130731**********************************************************************
'Public Function MatrizDistribuirMontoMiViviendaSinPago(ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
'                    ByVal psMetLiquidacion As String, Optional ByVal pnMontoIntFecha As Double = 0#, Optional ByVal pnMontoIntFechaGra As Double = 0#, Optional ByVal MatCalendDistrib As Variant = "") As Variant
'Dim i As Integer
'Dim J As Integer
''Dim MatCalendDistrib As Variant
'Dim nMonto As Double
'Dim nMontoTemp As Double
'
'        nMonto = pnMontoPago
'        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
'        Do While nMonto > 0
'            For J = 1 To 4
'                Select Case Mid(psMetLiquidacion, J, 1)
'                    Case "G"
'                        Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMonto)
'                    Case "M"
'                        Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMonto)
'                    Case "I"
'                        Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMonto, , pnMontoIntFechaGra)
'                    Case "C"
'                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMonto)
'                End Select
'                Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
'            Next J
'        Loop
'        MatrizDistribuirMontoMiViviendaSinPago = MatCalendDistrib
'End Function
'Public Function MatrizDistribuirCancelacionMiViviendaSinPago(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
'                 ByVal psMetLiquidacion As String, ByVal pdHoy As Date, Optional ByVal pbNoCancelar As Boolean = False, Optional ByVal pbCalenDin As Boolean = False, _
'                 Optional ByVal pCancel As Boolean = True, _
'                 Optional ByVal pbVerificaSoloCapital As Boolean = False, Optional ByVal MatCalendDistrib As Variant = "") As Variant
'
''Dim MatCalendDistrib As Variant
'Dim nMontoGastos As Double
'Dim nMontoMora As Double
'Dim nMontoInteres As Double
'Dim nMontoInterGra As Double
'Dim nMontoCapital As Double
'Dim nMontoTotalTmp As Double
'Dim nMontoPagoTmp As Double
'Dim J As Integer
'
'Dim nMontoInteresFecha As Double
'
'        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
'        nMontoTotalTmp = 0
'        nMontoPagoTmp = pnMontoPago
'        For J = 1 To 4
'                Select Case Mid(psMetLiquidacion, J, 1)
'                    Case "G"
'                        nMontoGastos = MatrizGastosFecha(psCtaCod, MatCalend)
'                        If nMontoPagoTmp > nMontoGastos Then
'                            nMontoPagoTmp = nMontoPagoTmp - nMontoGastos
'                        Else
'                            nMontoGastos = nMontoPagoTmp
'                            nMontoPagoTmp = 0#
'                        End If
'                        nMontoTotalTmp = nMontoTotalTmp + nMontoGastos
'                        Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMontoGastos, True)
'                    Case "M"
'                        nMontoMora = MatrizInteresMorFecha(psCtaCod, MatCalend)
'                        If nMontoPagoTmp > nMontoMora Then
'                            nMontoPagoTmp = nMontoPagoTmp - nMontoMora
'                        Else
'                            nMontoMora = nMontoPagoTmp
'                            nMontoPagoTmp = 0#
'                        End If
'                        nMontoTotalTmp = nMontoTotalTmp + nMontoMora
'                        Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMontoMora, True)
'                    Case "I", "i", "Y"
'                        nMontoInteres = CDbl(Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, MatCalend, pdHoy, pbCalenDin), "#0.00"))
'                        nMontoInterGra = CDbl(Format(MatrizInteresGraAFecha(psCtaCod, MatCalend, pdHoy, True), "#0.00"))
'
'                        nMontoInteresFecha = nMontoInteres 'ARCV 30-07-2006
'
'                        If pCancel = True Then
'                            If nMontoPagoTmp > nMontoInteres Then
'                                nMontoPagoTmp = nMontoPagoTmp - (nMontoInteres + nMontoInterGra)
'                            Else
'                                nMontoInteres = nMontoPagoTmp
'                                nMontoPagoTmp = 0#
'                            End If
'                            nMontoTotalTmp = nMontoTotalTmp + nMontoInteres + nMontoInterGra
'                            Call MatrizDistribuirInteresICancelacion(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
'                       Else
'
'                            Dim bCubreInt As Boolean
'
'                            If nMontoPagoTmp >= (IIf(nMontoInteres > 0, nMontoInteres, 0) + IIf(nMontoInterGra > 0, nMontoInterGra, 0)) Then
'                                nMontoPagoTmp = Round(nMontoPagoTmp - (IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra), 2)
'                                bCubreInt = True
'                            ElseIf nMontoPagoTmp >= IIf(nMontoInteres >= 0, nMontoInteres, 0) And (nMontoPagoTmp >= IIf(nMontoInterGra > 0, nMontoInterGra, 0)) Then
'                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInterGra, 2)
'                                nMontoInteres = nMontoPagoTmp
'                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInteres, 2)
'                                bCubreInt = True
'                            ElseIf nMontoPagoTmp >= IIf(nMontoInterGra > 0, nMontoInterGra, 0) And (nMontoPagoTmp < IIf(nMontoInteres > 0, nMontoInteres, 0)) Then
'                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInterGra, 2)
'                                nMontoInteres = nMontoPagoTmp
'                                nMontoPagoTmp = Round(nMontoPagoTmp - nMontoInteres, 2)
'                                bCubreInt = True
'                            ElseIf nMontoPagoTmp >= IIf(nMontoInteres > 0, nMontoInteres, 0) And (nMontoPagoTmp < IIf(nMontoInterGra > 0, nMontoInterGra, 0)) Then
'                                nMontoInterGra = nMontoPagoTmp
'                                nMontoInteres = 0#
'                                nMontoPagoTmp = 0#
'                                bCubreInt = True
'                            End If
'
'                            If bCubreInt = False Then
'                                nMontoInterGra = nMontoPagoTmp
'                                nMontoInteres = 0#
'                                nMontoPagoTmp = 0#
'                            End If
'                            'end MADM
'
'                            nMontoTotalTmp = nMontoTotalTmp + IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra 'Corregido Gitu 26-08-09
'                            Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, IIf(nMontoInteres > 0, nMontoInteres, 0) + nMontoInterGra, True, nMontoInterGra, nMontoInteres) 'Corregido Gitu 26-08-09
'                       End If
'                    Case "C"
'                        nMontoCapital = MatrizCapitalAFecha(psCtaCod, MatCalend)
'                        If nMontoPagoTmp > nMontoCapital Then
'                            nMontoPagoTmp = nMontoPagoTmp - nMontoCapital
'                        Else
'                            nMontoCapital = nMontoPagoTmp
'                            nMontoPagoTmp = 0#
'                        End If
'                        nMontoTotalTmp = nMontoTotalTmp + nMontoCapital
'                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoCapital, True)
'                        'Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoTotalTmp, True) 'Coment gitu 13-06-2009
'                End Select
'        Next J
'        If (Mid(psMetLiquidacion, 3, 1) = "i" Or Mid(psMetLiquidacion, 3, 1) = "Y") And pbNoCancelar Then
'            If Mid(psMetLiquidacion, 3, 1) = "Y" Then
'                Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, True, pbNoCancelar, MatCalend)
'            Else
'                Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, False, pbNoCancelar, MatCalend)
'            End If
'        Else
'               If Mid(psMetLiquidacion, 3, 1) = "Y" And pCancel = False Then
'                    Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, True, False, MatCalend)
'               Else
'                    If Mid(psMetLiquidacion, 3, 1) = "i" Then
'                        Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, True, pbNoCancelar, MatCalend)
'                    Else
'                        'Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, , pbNoCancelar, MatCalend)
'                        Call MatrizActualizarEstadoCalendCancelado(MatCalendDistrib, pbVerificaSoloCapital, pbNoCancelar, MatCalend, nMontoInteresFecha) 'ARCV 12-07-2006 + 30-07-2006
'                    End If
'               End If
'        End If
'        MatrizDistribuirCancelacionMiViviendaSinPago = MatCalendDistrib
'End Function
Public Function ObtenerSumaCuotaCalendarioMiVivienda(ByVal psCtaCod As String, ByVal pnCuota As String) As Currency

Dim oCred As COMDCredito.DCOMCredito
Dim R As ADODB.Recordset
Dim R2 As ADODB.Recordset
Dim oBase As COMDCredito.DCOMCredActBD
Dim sSql As String
Dim lnMonto As Currency
Dim poConex As COMConecta.DCOMConecta


'    Set oBase = New COMDCredito.DCOMCredActBD
    Set poConex = New COMConecta.DCOMConecta
    poConex.AbreConexion
    sSql = "exec stp_sel_ObtenerSumaCuotaCalendarioMiVivienda '" & psCtaCod & "'," & pnCuota
    Set R = New ADODB.Recordset
    Set R = poConex.CargaRecordSet(sSql)
    If Not (R.BOF Or R.EOF) Then
        Do While Not R.EOF
            If R.RecordCount > 0 Then
                lnMonto = IIf(IsNull(R!nMonto), 0, R!nMonto)
            End If
            R.MoveNext
        Loop
    End If
    poConex.CierraConexion
    R.Close
    ObtenerSumaCuotaCalendarioMiVivienda = lnMonto
End Function

'Public Function MatrizDistribuirCalendDinamicoMiViviendaSinPago(ByVal psCtaCod As String, ByVal MatCalend As Variant, ByVal pnMontoPago As Double, _
'                 ByVal psMetLiquidacion As String, ByVal pdHoy As Date, Optional MatCalendDistrib As Variant = 0) As Variant
'
''Dim MatCalendDistrib As Variant
'Dim nMontoGastos As Double
'Dim nMontoMora As Double
'Dim nMontoInteres As Double
'Dim nMontoInterGra As Double
'Dim nMontoCapital As Double
'Dim nMontoTotalTmp As Double
'Dim nMontoPago As Double
'Dim J As Integer
'Dim nMivivienda As Integer
'Dim oCred As COMDCredito.DCOMCredito
'Dim R As ADODB.Recordset
'
'        Set oCred = New COMDCredito.DCOMCredito
'        Set R = oCred.RecuperaColocacCred(psCtaCod)
'        Set oCred = Nothing
'        nMivivienda = IIf(IsNull(R!bMiVivienda), 0, R!bMiVivienda)
'        R.Close
'
'        MatCalendDistrib = CrearMatrizparaAmortizacion(MatCalend)
'        nMontoTotalTmp = 0
'        nMontoPago = pnMontoPago
'        For J = 1 To 4
'            Select Case Mid(psMetLiquidacion, J, 1)
'                Case "G"
'                    If nMivivienda = 1 Then
'                        nMontoGastos = MatrizGastosVencidos(MatCalend, pdHoy)
'                    Else
'                        'nMontoGastos = MatrizGastosFecha(psCtaCod, MatCalend)
'                        nMontoGastos = MatrizGastosFechaCancelacion(psCtaCod, MatCalend, pdHoy)
'                    End If
'                    nMontoPago = nMontoPago - nMontoGastos
'                    Call MatrizDistribuirGastos(MatCalend, MatCalendDistrib, nMontoGastos, True)
'                Case "M"
'                    nMontoMora = MatrizInteresMorFecha(psCtaCod, MatCalend)
'                    nMontoPago = nMontoPago - nMontoMora
'                    Call MatrizDistribuirMora(MatCalend, MatCalendDistrib, nMontoMora, True)
'                Case "I"
'                    nMontoInteres = CDbl(Format(MatrizInteresTotalesAFechaSinMora(psCtaCod, MatCalend, pdHoy, True), "#0.00"))
'                    'Add by gitu 07-05-2009....CORREGIR!!!
'                    nMontoInterGra = CDbl(Format(MatrizInteresGraAFecha(psCtaCod, MatCalend, pdHoy, True), "#0.00"))
'                    nMontoPago = nMontoPago - (nMontoInteres + nMontoInterGra)
'                    'nMontoPago = nMontoPago - nMontoInteres
'                    'MAVM 20100820 Prepago***
'                    'Call MatrizDistribuirInteresI(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
'                    Call MatrizDistribuirInteresICancelacion(MatCalend, MatCalendDistrib, nMontoInteres + nMontoInterGra, True, nMontoInterGra)
'                    '***
'                Case "C"
'                    nMontoCapital = MatrizCapitalVencido(MatCalend, pdHoy)
'                    nMontoPago = nMontoPago - nMontoCapital
'                    If nMontoCapital > 0 Then
'                        Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoCapital, True)
'                    End If
'            End Select
'            nMontoPago = CDbl(Format(nMontoPago, "#0.00"))
'            Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
'        Next J
'        If nMontoPago > 0 Then
'            Call MatrizDistribuirCapital(MatCalend, MatCalendDistrib, nMontoPago, True)
'            Call MatrizActualizarEstadoCuota(MatCalend, MatCalendDistrib)
'        End If
'        MatrizDistribuirCalendDinamicoMiViviendaSinPago = MatCalendDistrib
'End Function
'**********************************************************************************

'WIOR 20131012 *****************************************************************
Public Sub OperacionConfigCuotaBalonSubProd(ByVal pnOpe As Integer, ByVal psAgencia As String, Optional ByVal psTpoProd As String = "")
Dim oCredito As COMDCredito.DCOMCredito
On Error GoTo ErrorOperacionConfigCuotaBalonSubProd

Set oCredito = New COMDCredito.DCOMCredito

oCredito.BeginTrans
Call oCredito.OperacionConfigCuotaBalonSubProd(pnOpe, psAgencia, psTpoProd)
oCredito.CommitTrans
Set oCredito = Nothing
   
Exit Sub
ErrorOperacionConfigCuotaBalonSubProd:
    oCredito.RollbackTrans
    Set oCredito = Nothing
    Err.Raise Err.Number, "NCOMCredito:OperacionConfigCuotaBalonSubProd", Err.Description
End Sub
Public Sub OperacionConfigCuotaBalonRangosMontos(ByVal pnOpe As Integer, ByVal psAgencia As String, _
                                    Optional ByVal pnMontoASol As Double = 0, Optional ByVal pnMontoBSol As Double = 0, _
                                    Optional ByVal pnMontoADol As Double = 0, Optional ByVal pnMontoBDol As Double = 0)

Dim oCredito As COMDCredito.DCOMCredito
On Error GoTo ErrorOperacionConfigCuotaBalonRangosMontos

Set oCredito = New COMDCredito.DCOMCredito

oCredito.BeginTrans
Call oCredito.OperacionConfigCuotaBalonRangosMontos(pnOpe, psAgencia, pnMontoASol, pnMontoBSol, pnMontoADol, pnMontoBDol)
oCredito.CommitTrans
Set oCredito = Nothing
Exit Sub
ErrorOperacionConfigCuotaBalonRangosMontos:
    oCredito.RollbackTrans
    Set oCredito = Nothing
    Err.Raise Err.Number, "NCOMCredito:OperacionConfigCuotaBalonRangosMontos", Err.Description
End Sub


Public Function AplicaCuotaBalon(ByVal psAgencia As String, ByVal psTpoProd As String, ByVal pnMonto As Double, ByVal pnMoneda As Integer) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset
On Error GoTo ErrorAplicaCuotaBalon

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.AplicaCuotaBalon(psAgencia, psTpoProd, pnMonto, pnMoneda)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    AplicaCuotaBalon = True
Else
    AplicaCuotaBalon = False
End If

Set rsCredito = Nothing
Set oCredito = Nothing
    
Exit Function
ErrorAplicaCuotaBalon:
    Set oCredito = Nothing
    Set rsCredito = Nothing
    Err.Raise Err.Number, "NCOMCredito:AplicaCuotaBalon", Err.Description
End Function

'WIOR FIN **********************************************************************


'WIOR 20131219 ******************************************************************
Public Sub OperacionCredHonrado(ByVal nOpe As Integer, Optional ByVal psCtaCod As String = "", Optional ByVal pnMontoHonrado As Double = 0, Optional ByVal pnMontoDevuelto As Double = 0, _
                                Optional ByVal psMovHonra As String = "", Optional ByVal pdFecHonramiento As Date = "01/01/1900", Optional ByVal pnCodigo As Long = 0)
Dim oCredito As New COMDCredito.DCOMCredito

On Error GoTo ErrorOperacionCredHonrado

oCredito.BeginTrans

Call oCredito.OperacionCredHonrado(nOpe, psCtaCod, pnMontoHonrado, pnMontoDevuelto, psMovHonra, pdFecHonramiento, pnCodigo)

oCredito.CommitTrans
Set oCredito = Nothing

Exit Sub
ErrorOperacionCredHonrado:
    oCredito.RollbackTrans
    Set oCredito = Nothing
    Err.Raise Err.Number, "NCOMCredito:OperacionCredHonrado", Err.Description
End Sub
Public Function ObtenerCodigoCredHonrado(ByVal pnCodigo As Long, ByVal pdFecha As Date) As Long
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset
On Error GoTo ErrorObtenerCodigoCredHonrado

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.ObtenerCodigoCredHonrado(pnCodigo, pdFecha)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    ObtenerCodigoCredHonrado = CLng(rsCredito!nCodCredHonrado)
Else
    ObtenerCodigoCredHonrado = 0
End If

Set rsCredito = Nothing
Set oCredito = Nothing
    
Exit Function
ErrorObtenerCodigoCredHonrado:
    Set oCredito = Nothing
    Set rsCredito = Nothing
    Err.Raise Err.Number, "NCOMCredito:ObtenerCodigoCredHonrado", Err.Description
End Function

Public Function EsCreditoHonrado(ByVal psCtaCod As String) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset
On Error GoTo ErrorEsCreditoHonrado

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.ObtenerCreditosHonrados(psCtaCod)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    EsCreditoHonrado = True
Else
    EsCreditoHonrado = False
End If

Set rsCredito = Nothing
Set oCredito = Nothing
    
Exit Function
ErrorEsCreditoHonrado:
    Set oCredito = Nothing
    Set rsCredito = Nothing
    Err.Raise Err.Number, "NCOMCredito:EsCreditoHonrado", Err.Description
End Function

Public Function ObtenerCreditosHonrados(ByVal psCtaCod As String) As ADODB.Recordset
    Dim oCredito As New COMDCredito.DCOMCredito
    Set ObtenerCreditosHonrados = oCredito.ObtenerCreditosHonrados(psCtaCod)
    Set oCredito = Nothing
End Function
Public Sub PagoCreditoHonrado(ByVal psCtaCod As String, ByVal pnMonto As Double, ByVal pnITF As Double, ByVal pdFecha As Date, _
                                ByRef pnMovNro As Long, ByVal pnMovRef As Long, ByVal psCodAge As String, ByVal psCodUser As String, _
                                ByVal pnMontoHonrado As Double, ByRef psImpreBoleta As String, ByVal psNombreCliente As String, _
                                ByVal psNomAge As String, ByVal psNomCmacAbrev As String, ByVal psCodCMAC As String, Optional pbImpTMU As Boolean = False)
                                
                                
Dim oCredito As New COMDCredito.DCOMCredito
Dim oCredDoc As New COMNCredito.NCOMCredDoc
Dim rsCredito As New ADODB.Recordset

Dim oBase As New COMDCredito.DCOMCredActBD
Dim bTrans As Boolean, bTransBase As Boolean
Dim sMovNro As String
Dim nComision As Double

Dim nNroCalen As Integer
Dim psMetLiquid As String
Dim pnPlazo As Integer

On Error GoTo ErrorPagoCreditoHonrado

psMetLiquid = ""
nNroCalen = 0
Set rsCredito = oCredito.RecuperaColocacCred(psCtaCod)
If Not (rsCredito.EOF And rsCredito.BOF) Then
    psMetLiquid = Trim(IIf(IsNull(rsCredito!cMetLiquidacion), 0, rsCredito!cMetLiquidacion))
    nNroCalen = Trim(IIf(IsNull(rsCredito!nNroCalen), 0, rsCredito!nNroCalen))
End If
Set rsCredito = Nothing

Set rsCredito = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
If Not (rsCredito.EOF And rsCredito.BOF) Then
    pnPlazo = IIf(IsNull(rsCredito!nPlazo), 0, rsCredito!nPlazo)
End If
Set rsCredito = Nothing

nComision = Round(pnMonto * ObtenerPorcComisionHonrado(pnMontoHonrado), 2)

Set oCredito = New COMDCredito.DCOMCredito

oBase.dBeginTrans
oCredito.BeginTrans
bTrans = True
bTransBase = True

sMovNro = oBase.GeneraMovNro(pdFecha, psCodAge, psCodUser)

'Registra el Movimiento
Call oBase.dInsertMov(sMovNro, gCredPagHonramiento, "Pago Por Horamiento de la cuenta: " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente, False)
pnMovNro = oBase.dGetnMovNro(sMovNro)

'Movimiento de Pago
Call oBase.dInsertMovCol(pnMovNro, gCredPagHonramiento, psCtaCod, nNroCalen, pnMonto, 0, psMetLiquid, pnPlazo, 0, gColocEstCancelado, False)

'Movimiento Detalle de Pago
Call oBase.dInsertMovColDet(pnMovNro, gCredPagHonramiento, psCtaCod, CLng(nNroCalen), gColocConceptoCodMontoHonrado, 0, (pnMonto - nComision), False)
Call oBase.dInsertMovColDet(pnMovNro, gCredPagHonramiento, psCtaCod, CLng(nNroCalen), gColocConceptoCodComisionHonramiento, 0, nComision, False)

'Moviemiento de ITF
If pnITF > 0 Then
    Call oBase.dInsertMovCol(pnMovNro, gITFCobroEfectivo, psCtaCod, CLng(nNroCalen), pnITF, 0, "", 0, 0#, gColocEstCancelado, False)
    Call oBase.dInsertMovColDet(pnMovNro, gITFCobroEfectivo, psCtaCod, CLng(nNroCalen), gConcITFCliente, 0, pnITF, False)
End If

'Actualiza el saldo devuelto
Call oCredito.OperacionCredHonrado(2, psCtaCod, 0, pnMonto)

'Inserta Mov de Referencia
Call oBase.InsertaMovRef(pnMovNro, pnMovRef)

oBase.dCommitTrans
oCredito.CommitTrans
bTrans = False
bTransBase = False

psImpreBoleta = oCredDoc.ImprimePagoHonramiento(psCtaCod, psNombreCliente, psNomAge, pdFecha, pnMonto, psNomCmacAbrev, pnITF, psCodCMAC, psCodUser, pbImpTMU)

Set oCredito = Nothing
Set oBase = Nothing

Exit Sub
ErrorPagoCreditoHonrado:
    Err.Raise Err.Number, "NCOMCredito:PagoCreditoHonrado", Err.Description

    If bTrans Then
        oCredito.RollbackTrans
        Set oCredito = Nothing
    End If
    If bTransBase Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
End Sub

Public Function ObtenerPorcComisionHonrado(ByVal pnMontoHonrado As Double) As Double
    Dim oCredito As New COMDCredito.DCOMCredito
    Dim rsCredito As ADODB.Recordset
    
    Set rsCredito = oCredito.ObtenerPorcComisionHonrado(pnMontoHonrado)
    
    If Not (rsCredito.EOF And rsCredito.BOF) Then
        ObtenerPorcComisionHonrado = CDbl(rsCredito!nComision) / 100
    Else
        ObtenerPorcComisionHonrado = 0
    End If
    
    Set rsCredito = Nothing
    Set oCredito = Nothing
End Function

'WIOR FIN **********************************************************************

'JUEZ 20140103 ************************************************************************
Public Function RecuperaDPFParaGarantia(ByVal psPersCod As String) As ADODB.Recordset
Dim oDCred As COMDCredito.DCOMCredito

Set oDCred = New COMDCredito.DCOMCredito
Set RecuperaDPFParaGarantia = oDCred.RecuperaDPFParaGarantia(psPersCod)
Set oDCred = Nothing
End Function
'END JUEZ *****************************************************************************
'FRHU 20131202
Public Function ValidarClientePreferencial(ByVal pcPersCod As String) As Boolean
    Dim oParam As COMDCredito.DCOMParametro
    Set oParam = New COMDCredito.DCOMParametro
    Dim rs As ADODB.Recordset
    'Dim R As ADODB.Recordset
    Call CargarParametrosClientePreferencial
    
    Set rs = oParam.RecuperaValidaClientePreferencial(pcPersCod, fnMinCalSbsNorm, fnEndeMaxUniFami, fnEdadMaxClie, fnPerContMini)
    If rs.BOF And rs.EOF Then
        ValidarClientePreferencial = False
    Else
        If rs!PrePreferencial = True Then
            Dim n As Integer
            Dim P As Integer
            Dim desemb As Date
            Dim Cancel As Date
            Dim Dias As Integer
            Dim Diasx As Integer ' Dias Con Creditos
            Dim Diasy As Integer ' Dias sin tenter creditos
            'Dim DiasyInicio As Integer
            'Dim DiasyFin As Integer
            
            'Inicio
            Do While Not rs.EOF
                n = n + 1
                If n = 1 Then
                    desemb = rs!dDesembolso
                    Cancel = rs!dCancelado
                    Dias = rs!Dias
                    Diasy = DateDiff("d", Format(rs!fechaini, "dd/mm/yyyy"), Format(rs!dDesembolso, "dd/mm/yyyy"))
                    If Diasy < 0 Then
                        Diasy = 0
                        'P = 0
                        P = 1
                    Else
                        P = 1
                    End If
                    'Diasy = CDate(Rs!dDesembolso) - CDate(Rs!fechaini)
                Else
                    If CDate(Format(rs!dDesembolso, "dd/mm/yyyy")) >= CDate(Format(desemb, "dd/mm/yyyy")) And CDate(Format(rs!dDesembolso, "dd/mm/yyyy")) <= CDate(Format(Cancel, "dd/mm/yyyy")) Then
                        If CDate(Format(rs!dCancelado, "dd/mm/yyyy")) > CDate(Format(Cancel, "dd/mm/yyyy")) Then
                            Diasx = DateDiff("d", Format(Cancel, "dd/mm/yyyy"), Format(rs!dCancelado, "dd/mm/yyyy"))
                            'Diasx = CDate(Rs!dCancelado) - CDate(cancel)
                            Dias = Dias + Diasx
                            Cancel = rs!dCancelado
                        Else
                            Cancel = Cancel
                        End If
                            desemb = desemb
                    Else
                        Diasy = Diasy + DateDiff("d", Format(Cancel, "dd/mm/yyyy"), Format(rs!dDesembolso, "dd/mm/yyyy"))
                        'Diasy = Diasy + (CDate(Rs!dDesembolso) - CDate(cancel))
                        If CDate(Format(rs!dDesembolso, "dd/mm/yyyy")) <= CDate(Format(rs!fechaini, "dd/mm/yyyy")) Then
                            Diasy = 0
                        Else
                            P = P + 1
                            If P = 1 Then
                                Diasy = 0
                            End If
                        End If
                        If CDate(Format(rs!dCancelado, "dd/mm/yyyy")) > CDate(Format(Cancel, "dd/mm/yyyy")) Then
                             Diasx = DateDiff("d", Format(rs!dDesembolso, "dd/mm/yyyy"), Format(rs!dCancelado, "dd/mm/yyyy"))
                             'Diasx = CDate(Rs!dCancelado) - CDate(Rs!dDesembolso)
                             Dias = Dias + Diasx
                             Cancel = rs!dCancelado
                        Else
                             Cancel = Cancel
                        End If
                        desemb = rs!dDesembolso
                    End If
                End If
               
                If rs.RecordCount = n Then  'Rs.RecordCount cuenta la cantidad de registro de un recordset
                    If CDate(Cancel) = Date Then
                    Else
                        Diasy = Diasy + DateDiff("d", Format(Cancel, "dd/mm/yyyy"), Format(rs!FechaActual, "dd/mm/yyyy"))
                        'Diasy = Diasy + (CDate(Rs!FechaActual) - CDate(cancel))
                    End If
                End If
                rs.MoveNext
            Loop
            'Fin
            If Diasy > fnTieMaxTotCre Then
                ValidarClientePreferencial = False
            Else
                ValidarClientePreferencial = True
            End If
        Else
            ValidarClientePreferencial = False
        End If
    End If
    rs.Close
    Set rs = Nothing
    End Function
    
Public Sub CargarParametrosClientePreferencial()
    Dim oParam As COMDCredito.DCOMParametro
    Set oParam = New COMDCredito.DCOMParametro

    fnPerContMini = oParam.RecuperaValorParametro(102746)
    fnTieMaxTotCre = oParam.RecuperaValorParametro(102747)
    fnMinCalSbsNorm = oParam.RecuperaValorParametro(102748)
    fnEndeMaxUniFami = oParam.RecuperaValorParametro(102749)
    fnEdadMaxClie = oParam.RecuperaValorParametro(102750)
End Sub
'END FRHU 20131202

'*******************************************************
'Agregado por PASI20131127 segun TI-ERS136-2013
Public Function VerificarExisteDesembolsoBcoNac(ByVal psCtaCod As String) As Boolean
    Dim rs As ADODB.Recordset
    Dim oDCred As COMDCredito.DCOMCredito
    Set oDCred = New COMDCredito.DCOMCredito
    Set rs = oDCred.RecuperaExisteDesembolso(psCtaCod)
    If rs.RecordCount > 0 Then
        VerificarExisteDesembolsoBcoNac = True
    Else
        VerificarExisteDesembolsoBcoNac = False
    End If
End Function
'END PASI************************************************


'WIOR 20140201 *********************************************
Public Function ObtenerSaldoTrabDirVinc() As Double
    Dim oCredito As New COMDCredito.DCOMCredito
    Dim rsCredito As ADODB.Recordset
    
    Set rsCredito = oCredito.ObtenerSaldoTrabDirVinc
    
    If Not (rsCredito.EOF And rsCredito.BOF) Then
        ObtenerSaldoTrabDirVinc = CDbl(rsCredito!nSaldoTDV)
    Else
        ObtenerSaldoTrabDirVinc = 0
    End If
    
    Set rsCredito = Nothing
    Set oCredito = Nothing
End Function

Public Function ObtenerSaldoAsignaEstado(ByVal pnEstado As Integer) As Double
    Dim oCredito As New COMDCredito.DCOMCredito
    Dim rsCredito As ADODB.Recordset
    
    Set rsCredito = oCredito.ObtenerSaldoAsignaEstado(pnEstado)
    
    If Not (rsCredito.EOF And rsCredito.BOF) Then
        ObtenerSaldoAsignaEstado = CDbl(rsCredito!nSaldoAsigna)
    Else
        ObtenerSaldoAsignaEstado = 0
    End If
    
    Set rsCredito = Nothing
    Set oCredito = Nothing
End Function

Public Function ObtenerSaldoAsignaTrabEstado(ByVal psPersCod As String, ByVal pnEstado As Integer) As Double
    Dim oCredito As New COMDCredito.DCOMCredito
    Dim rsCredito As ADODB.Recordset
    
    Set rsCredito = oCredito.ObtenerSaldoAsignaTrabEstado(psPersCod, pnEstado)
    
    If Not (rsCredito.EOF And rsCredito.BOF) Then
        ObtenerSaldoAsignaTrabEstado = CDbl(rsCredito!nSaldoAsigna)
    Else
        ObtenerSaldoAsignaTrabEstado = 0
    End If
    
    Set rsCredito = Nothing
    Set oCredito = Nothing
End Function

Public Function ObtenerCreditosAAsignar(ByVal pnTipo As Integer) As ADODB.Recordset
    Dim oCredito As New COMDCredito.DCOMCredito
    Set ObtenerCreditosAAsignar = oCredito.ObtenerCreditosAAsignar(pnTipo)
    Set oCredito = Nothing
End Function

Public Function ObtenerCreditosTrabVinc(ByVal psPersCod As String) As ADODB.Recordset
    Dim oCredito As New COMDCredito.DCOMCredito
    Set ObtenerCreditosTrabVinc = oCredito.ObtenerCreditosTrabVinc(psPersCod)
    Set oCredito = Nothing
End Function

Public Function ActualizaCredVinculados(ByVal psCtaCod As String, ByVal psMovAprueba As String, ByVal pnEstadoA As Integer, ByVal pnEstadoB As Integer) As Integer
Dim oCredito As New COMDCredito.DCOMCredito
Dim bTrans As Boolean

On Error GoTo Error
ActualizaCredVinculados = 0
oCredito.BeginTrans
bTrans = True
Call oCredito.ActualizaCredVinculados(psCtaCod, psMovAprueba, pnEstadoA, pnEstadoB)
oCredito.CommitTrans
bTrans = False
ActualizaCredVinculados = 1
    Exit Function
Error:
    If bTrans Then
        oCredito.RollbackTrans
        Set oCredito = Nothing
        ActualizaCredVinculados = 0
    End If
    Err.Raise Err.Number, "Error en Proceso(ActualizaCredVinculados)", Err.Description
End Function

Public Function ExisteAsignaSaldo(ByVal psCtaCod As String, ByVal pnEstado As Integer) As Boolean
    Dim oCredito As New COMDCredito.DCOMCredito
    Dim rsCredito As ADODB.Recordset
    
    Set rsCredito = oCredito.ObtenerDatosAsignacionSaldo(psCtaCod, pnEstado)
    
    If Not (rsCredito.EOF And rsCredito.BOF) Then
        ExisteAsignaSaldo = True
    Else
        ExisteAsignaSaldo = False
    End If
    
    Set rsCredito = Nothing
    Set oCredito = Nothing
End Function
'WIOR FIN **************************************************
'ORCR20140314 ***
Public Function ReporteSaldosTrabDirVinc(ByVal UltFinMes As Integer) As ADODB.Recordset
On Error GoTo ErrorReporteSaldosTrabDirVinc
    Dim oDCOMCredito As New COMDCredito.DCOMCredito
    Set ReporteSaldosTrabDirVinc = oDCOMCredito.ReporteSaldosTrabDirVinc(UltFinMes) 'ORCR20140621
    Set oDCOMCredito = Nothing
    Exit Function
ErrorReporteSaldosTrabDirVinc:
    Err.Raise Err.Number, "NCOMCredito:ReporteSaldosTrabDirVinc", Err.Description
End Function
Public Function ReporteSaldoAsignaEstado(ByVal pnEstado As Integer, ByVal UltFinMes As Integer) As ADODB.Recordset
On Error GoTo ErrorReporteSaldoAsignaEstado
    Dim oDCOMCredito As New COMDCredito.DCOMCredito
    Set ReporteSaldoAsignaEstado = oDCOMCredito.ReporteSaldoAsignaEstado(pnEstado, UltFinMes) 'ORCR20140621
    Set oDCOMCredito = Nothing
    Exit Function
ErrorReporteSaldoAsignaEstado:
    Err.Raise Err.Number, "NCOMCredito:ReporteSaldoAsignaEstado", Err.Description
End Function
'END ORCR *******
'EJVG20140408 ***
Public Function EgresoxDevolucionSobranteOtrasOpeCheque(ByVal psMovNro As String, ByVal psOpeCod As String, ByVal psGlosa As String, _
        ByVal pnMonto As Currency, ByVal pnITF As Currency, ByVal psCtaCod As String, ByVal psPersCodTit As String, _
        ByVal pnTpoDoc As Integer, ByVal psNroDoc As String, ByVal psPersCod As String, ByVal psIFTpo As String, ByVal psIFCta As String, ByRef pnMovNro As Long) As Boolean
    Dim oMov As New COMDCredito.DCOMCredActBD
    Dim lnMovNro As Long
    Dim bTrans As Boolean
    Dim dFecSis As Date

    On Error GoTo ErrEgresoxDevolucionSobranteOtrasOpeCheque
    dFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    oMov.dBeginTrans
    bTrans = True
    oMov.AgregaMov psMovNro, psOpeCod, psGlosa, gMovEstContabMovContable, gMovFlagVigente
    lnMovNro = oMov.GetnMovNro(psMovNro)
    oMov.dInsertMovCol lnMovNro, psOpeCod, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0
    oMov.dInsertMovColDet lnMovNro, psOpeCod, psCtaCod, 0, 0, 0, pnMonto
    If pnITF > 0 Then
        oMov.dInsertMovCol lnMovNro, gITFCobroEfectivoCred, psCtaCod, 0, pnITF, 0, "", 0, 0, 0
        oMov.dInsertMovColDet lnMovNro, gITFCobroEfectivoCred, psCtaCod, 0, 20, 0, pnITF
    End If
    oMov.dInsertaMovDocRec lnMovNro, pnTpoDoc, psNroDoc, psPersCod, psIFTpo, psIFCta
    oMov.dInsertaCuentaDocumento lnMovNro, pnTpoDoc, psNroDoc, psPersCod, psIFTpo, psIFCta, psCtaCod, pnMonto
    oMov.dCommitTrans
    EgresoxDevolucionSobranteOtrasOpeCheque = True
    pnMovNro = lnMovNro
    bTrans = False
    Set oMov = Nothing
    Exit Function
ErrEgresoxDevolucionSobranteOtrasOpeCheque:
    EgresoxDevolucionSobranteOtrasOpeCheque = False
    pnMovNro = 0
    If bTrans Then
        oMov.dRollbackTrans
        Set oMov = Nothing
    End If
    Err.Raise Err.Number, "EgresoxDevolucionSobranteOtrasOpeCheque", Err.Description
End Function
'END EJVG *******
'FRHU 20140424 ERS015-2014
Public Function CargarCreditosVigentesNew(ByVal psCodPers As String, ByVal psCodCta As String, ByVal psMoneda As String) As Recordset
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec stp_sel_cargarCreditosVigentes '" & Trim(psCodPers) & "','" & Trim(psCodCta) & "','" & Trim(psMoneda) & "'"
    Set CargarCreditosVigentesNew = oCon.CargaRecordSet(sSql)
      
    oCon.CierraConexion
    Set oCon = Nothing
End Function
'FIN FRHU ERS015-2014
'JAME 20140328
Public Function ObtenerMotivoRefinanciamiento(ByVal pncCtaCod As String) As ADODB.Recordset
On Error GoTo ErrorReporteSaldoAsignaEstado
    Dim oDCOMCredito As New COMDCredito.DCOMCredito
    Set ObtenerMotivoRefinanciamiento = oDCOMCredito.ObtenerMotivoRefinanciamiento(pncCtaCod)
    Set oDCOMCredito = Nothing
    Exit Function
ErrorReporteSaldoAsignaEstado:
    Err.Raise Err.Number, "NCOMCredito:ObtenerMotivoRefinanciamiento", Err.Description
End Function
'JAME FIN ***************

'WIOR 20140509 **********************
Public Sub ReprogramarCredConvenio(ByVal psCtaCod As String, ByVal pdFecha As Date, ByVal nNroCalend As Integer, ByVal MatCalendDes As Variant, ByVal MatCalendPagos As Variant, _
                                        ByVal MatGastos As Variant, ByVal pNumGastos As Integer, ByVal pnTipoCuota As ColocTipoCalend, ByRef pbError As Boolean)
Dim oDCredito As COMDCredito.DCOMCredActBD

Dim bTransac As Boolean
Dim sMov As String
Dim i As Integer
On Error GoTo ErrorReprogCredConvenio

Set oDCredito = New COMDCredito.DCOMCredActBD
Call oDCredito.dBeginTrans
bTransac = True
pbError = False

Call oDCredito.dUpdateColocacCred(psCtaCod, 0, , , , , , , 1, , , , , , nNroCalend, , , , , , , nNroCalend + 1)

'Nuevo Calendario
'Desembolsos
For i = 0 To UBound(MatCalendDes) - 1
    'Call oDCredito.dInsertColocCalendarioReprog(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, CDate(MatCalendDes(i, 0)), CDate(MatCalendDes(i, 0)), gColocCalendEstadoPagado, "Calendario de Reprogramación Convenio Desembolsos", gColocCalendConceptoProcReprogramado, False)'WIOR 20141212 Comento
    Call oDCredito.dInsertColocCalendarioReprog(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, pdFecha, pdFecha, gColocCalendEstadoPagado, "Calendario de Reprogramación Convenio Desembolsos", gColocCalendConceptoProcReprogramado, False) 'WIOR 20141212
    Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatCalendDes(i, 1)), 0, "", False)
Next i


'Pagos
For i = 0 To UBound(MatCalendPagos) - 1
    Call oDCredito.dInsertColocCalendario(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, CDate(Format(MatCalendPagos(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Reprogramación Convenio Pagos", gColocCalendConceptoProcAprobado, False)
    If pnTipoCuota <> gColocCalendCodCL Then
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
        If CDbl(MatCalendPagos(i, 5)) > 0 Then
            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalendPagos(i, 5)), 0, "", False)
        End If
    Else
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
    End If
Next i

'Gastos
For i = 0 To UBound(MatGastos) - 1
    If CDbl(MatGastos(i, 3)) > 0 Or CLng(Trim(Right(MatGastos(i, 2), 20))) = "1217" Then
        Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
    End If
Next i

oDCredito.dCommitTrans
bTransac = False
pbError = False
Exit Sub

ErrorReprogCredConvenio:
    If bTransac Then
        oDCredito.dRollbackTrans
        Set oDCredito = Nothing
    End If
    pbError = True
    Err.Raise Err.Number, "Error En Proceso Reprogramar Credito Convenio", Err.Description
End Sub
'WIOR FIN ***************************

'ALPA 20150214 COMENTO************
'Public Function ObtenerRecuperaAutorizacionCreditos(ByVal psPersCod As String, ByVal psTpoProdCod As String, ByVal pnEdad As Integer, ByVal pbPlazo As Integer, ByVal pnPlazoValor As Integer, ByVal psAgencia As String, ByVal pnDestino As Integer) As Integer
'    Dim oRs As ADODB.Recordset
'    Set oRs = New ADODB.Recordset
'    Dim oCredito As New COMDCredito.DCOMCredito
'    ObtenerRecuperaAutorizacionCreditos = 0
'    Set oRs = oCredito.RecuperaAutorizacionCreditos(psPersCod, psTpoProdCod, pnEdad, pbPlazo, pnPlazoValor, psAgencia, pnDestino)
'    If Not (oRs.BOF Or oRs.EOF) Then
'        ObtenerRecuperaAutorizacionCreditos = oRs!nPase
'    End If
'    Exit Function
'End Function
'ALPA FIN ************************

'WIOR 20140510 **********************
Public Function VerificaGruposRegPromotores(ByVal psGrupos As String) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.VerificaGruposRegPromotores(psGrupos)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    VerificaGruposRegPromotores = True
Else
    VerificaGruposRegPromotores = False
End If

End Function

Public Sub RenovarPoliza(ByVal psCtaCod As String, ByVal psNumGarant As String, ByVal psNumPoliza As String, ByVal pnTipoRenovacion As Integer, ByVal psPersCodAseguradora As String, _
                        ByVal psNumCertificado As String, ByVal pnMoneda As Integer, ByVal pdTasacion As Date, ByVal pnValorEdificacion As Double, ByVal pnInmueble As Double, _
                        ByVal pnPrimaNeta As Double, ByVal pnDerechoEm As Double, ByVal pnIGV As Double, ByVal pnPrimaTotal As Double, ByVal pnPrimaTotalTC As Double, _
                        ByVal pnDesde As Integer, ByVal pnPrimaCuota As Double, ByVal pdVigencia As Date, ByVal pdVencimiento As Date, ByVal pdVigenciaNueva As Date, _
                        ByVal pdVencimientoNueva As Date, ByVal pnPrimaCalend As Double, ByVal psMovRegistro As String, ByRef pbError As Boolean)
    
Dim oDCredito As COMDCredito.DCOMCredActBD

Dim bTransac As Boolean
Dim i As Integer
On Error GoTo ErrorRenovarPoliza

Set oDCredito = New COMDCredito.DCOMCredActBD
Call oDCredito.dBeginTrans
bTransac = True
pbError = False

Call oDCredito.ActualizaMontoPolizaCalend(psCtaCod, pnDesde, pnPrimaCalend)
Call oDCredito.RegistrarRenovacionPoliza(psCtaCod, psNumGarant, psNumPoliza, pnTipoRenovacion, psPersCodAseguradora, psNumCertificado, pnMoneda, pdTasacion, pnValorEdificacion, pnInmueble, _
                         pnPrimaNeta, pnDerechoEm, pnIGV, pnPrimaTotal, pnPrimaTotalTC, pnDesde, pnPrimaCuota, pdVigencia, pdVencimiento, pdVigenciaNueva, pdVencimientoNueva, psMovRegistro)

oDCredito.dCommitTrans
bTransac = False
pbError = False
Exit Sub

ErrorRenovarPoliza:
    If bTransac Then
        oDCredito.dRollbackTrans
        Set oDCredito = Nothing
    End If
    pbError = True
    Err.Raise Err.Number, "Error En Proceso Renovar Póliza", Err.Description
End Sub

Public Function GrabarPagosAutomaticos(ByVal psCtaCod As String, ByVal psUser As String, ByVal psAgeCod As String, ByVal pdFecha As Date, _
                                        ByRef psImpreBoleta As String, ByVal psOpeCod As String, ByVal pnMontoPago As Double, _
                                        ByRef pMatDebito As Variant, ByVal pnPendiente As Double) As String
                                        
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim bTransac As Boolean, bExitoPagoCredito As Boolean
    Dim sMovNro As String, sOpeCred As String
    Dim MontoCuota As Double, ITF As Double, MontoPagar As Double
    Dim lnMontoITFDebitoCli As Double, lnMontoITFDebitoOpe As Double, lnMontoITFDebitoOpeTmp As Double
    Dim nMovNro As Long, i As Long
    Dim nMontoRetiro As Double
    Dim lsImpreBoletaCred As String
    
    Dim MatDatosAho(14) As String
    
    GrabarPagosAutomaticos = ""
    

On Error GoTo ErrGrabarPagosAutomaticos

            Set oBase = New COMDCredito.DCOMCredActBD
            Call oBase.dBeginTrans
            bTransac = True

            sMovNro = oBase.GeneraMovNro(pdFecha, Right(psAgeCod, 2), psUser)
            Call oBase.InsertaMov(sMovNro, psOpeCod, "Pago Automático de Crédito Nº " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente)
            nMovNro = oBase.GetnMovNro(sMovNro)

            'Pago del Crédito ************************************
            bExitoPagoCredito = PagarCreditoAuto(oBase, nMovNro, psCtaCod, pnMontoPago, ITF, Right(psAgeCod, 2), psUser, pdFecha, lsImpreBoletaCred)
            
            'Débito de la Cuenta de Ahorros **********************
            If bExitoPagoCredito Then
                sOpeCred = gAhoCargoCtaPagoCredAuto
                If sOpeCred <> "" Then
                    For i = 0 To UBound(pMatDebito, 2)
                        nMontoRetiro = CDbl(IIf(Trim(Mid(psCtaCod, 9, 1)) <> Trim(Mid(pMatDebito(0, i), 9, 1)), pMatDebito(2, i), pMatDebito(1, i)))
                        
                        Call oBase.CapCargoCuentaAho(MatDatosAho, Trim(pMatDebito(0, i)), _
                                    nMontoRetiro, sOpeCred, sMovNro, _
                                    "Cargo a Cuenta Pago Crédito - Automático: " & Trim(pMatDebito(0, i)), pdFecha)
                        Call oBase.InsertaMovDoc(nMovNro, gColocTipoPagoCargoCtaAuto, Trim(pMatDebito(0, i)), Format(pdFecha, "yyyymmdd"))
                    Next i
                    
                    If pnPendiente > 0 Then
                        Call oBase.RegistarPendientPagoAutomatico(nMovNro, pnPendiente)
                    End If
                    Call oBase.dCommitTrans
                    bTransac = False
                    psImpreBoleta = psImpreBoleta & lsImpreBoletaCred
                Else
                    Call oBase.dRollbackTrans
                End If
            Else
                Call oBase.dRollbackTrans
            End If

    Set oBase = Nothing
    Exit Function
ErrGrabarPagosAutomaticos:
    GrabarPagosAutomaticos = "Ocurrió un error al procesar los Pagos de cuota"
    If bTransac Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Pago Automatico de Créditos", Err.Description
End Function


Private Function PagarCreditoAuto(ByVal poConnBase As COMDCredito.DCOMCredActBD, ByVal pnMovNro As Long, ByVal psCtaCod As String, _
                            ByVal pnImporteCobrado As Double, ByVal pnITF As Double, ByVal psCodAge As String, ByVal psCodUser As String, _
                            ByVal pdFecha As Date, ByRef psImpreBoleta As String) As Boolean
                            
    Dim rsPers As ADODB.Recordset
    Dim rsCredVig As ADODB.Recordset
    Dim sAgencia As String
    Dim nDiasAtraso As Integer
    Dim nGastos As Double
    Dim nMonPago As Double
    Dim nMora As Double
    Dim nCuotasMora As Integer
    Dim nTotalDeuda As Currency
    Dim nInteresDesagio As Double
    Dim nMonCalDin As Double
    Dim sMensaje As String
    Dim cNomCliente As String
    Dim nNewSalCap As Double
    Dim nNewCPend As Integer
    Dim dProxFec As Date
    Dim sEstado As String
    Dim sMetodoLiq As String

    Dim cMoneda As String
    Dim bRfa As Boolean
    Dim nCuotaPendiente As Integer
    Dim nMoraCalculada As Double
    Dim dFechaVencimiento As Date
    Dim sImpreBoleta As String
    Dim bValorProceso As Boolean
    Dim nMonIntGra As Double
    Dim nIntPendiente As Double
    Dim nIntPendientePagado As Double
    Dim bPrepago As Boolean
    Dim nCalendDinamico As Integer
    Dim bCalenDinamic As Boolean
    Dim bCalenCuotaLibre As Boolean
    Dim nMivivienda As Integer
    Dim nCalPago As Integer
    Dim sPersCod As String
    Dim sOperacion As String
    Dim bExoneradaLavado As Boolean
    Dim bOperacionEfectivo As Boolean
    Dim nMontoLavDinero As Double
    Dim nTC As Double
    Dim nMontoPago As Double
    Dim nITF As Double, nITFTmp As Double
    Dim nCalendDinamTipo As Integer
    Dim nNroTransac As Integer
    Dim nPrestamo As Double
    Dim bCuotaCom As Integer
    Dim bRecepcionCmact As Boolean
    Dim sPersCmac As String
    
On Error GoTo ErrorPagarCuota

    PagarCreditoAuto = False
    nInteresDesagio = 0
    
    Call CargaDatosPagoCuotas(psCtaCod, pdFecha, bPrepago, psCodAge, rsCredVig, sAgencia, nCalendDinamico, bCalenDinamic, bCalenCuotaLibre, _
                                nMivivienda, nCalPago, nGastos, nMonPago, nMora, nCuotasMora, nTotalDeuda, nInteresDesagio, _
                                nMonCalDin, sMensaje, sPersCod, sOperacion, bExoneradaLavado, bRfa, rsPers, bOperacionEfectivo, nMontoLavDinero, nTC, _
                                nMontoPago, nITF, nIntPendientePagado, nNewSalCap, nNewCPend, dProxFec, sEstado, nCuotaPendiente, nMoraCalculada, dFechaVencimiento)

    If Not rsCredVig.EOF Then
        sMetodoLiq = Trim(rsCredVig!cMetLiquidacion)
        nCalendDinamTipo = rsCredVig!nCalendDinamTipo
        cNomCliente = rsCredVig!cPersNombre
        nIntPendiente = IIf(IsNull(rsCredVig!nIntPend), 0, rsCredVig!nIntPend)
        nIntPendientePagado = 0
        nNroTransac = IIf(IsNull(rsCredVig!nTransacc), 0, rsCredVig!nTransacc)
        cMoneda = Trim(rsCredVig!cMoneda)
        nDiasAtraso = CInt(rsCredVig!nDiasAtraso)
        
        nITFTmp = pnITF
        bValorProceso = ActualizaMontoPago(pnImporteCobrado, nTotalDeuda, psCtaCod, pdFecha, sMetodoLiq, nIntPendiente, nIntPendientePagado, bCalenCuotaLibre, bCalenDinamic, bPrepago, pnImporteCobrado, _
                nMonCalDin, sMensaje, pnITF, nInteresDesagio, nNewSalCap, nNewCPend, dProxFec, sEstado, nMonIntGra)
        pnITF = nITFTmp
        
        If bValorProceso Then
        Call GrabarPagoCuotas(psCtaCod, nMivivienda, nCalPago, pnImporteCobrado, _
                         pdFecha, sMetodoLiq, gColocTipoPagoCargoCtaAuto, psCodAge, psCodUser, "109", "", _
                         bRecepcionCmact, sPersCmac, nIntPendiente, nIntPendientePagado, bPrepago, "", pnITF, _
                         nInteresDesagio, nTotalDeuda, bCalenDinamic, nMonCalDin, nCalendDinamTipo, "", CInt(Mid(psCtaCod, 6, 3)), _
                         cNomCliente, cMoneda, nNroTransac, Format(dProxFec, "dd/mm/yyyy"), "", "", False, "", _
                         "", "", psImpreBoleta, nDiasAtraso, "", , , "", "", "", "", pnMovNro, , , , , poConnBase)
        PagarCreditoAuto = True
        End If
    Else
        PagarCreditoAuto = False
    End If
    
    Set rsPers = Nothing
    Set rsCredVig = Nothing
    Exit Function
ErrorPagarCuota:
    PagarCreditoAuto = False
End Function
'WIOR FIN ***************************

'RIRO20140610 ERS017 ******

Public Function DevSobranteXope(ByVal pnMovNroOpe As Long) As Recordset
Dim oCon As COMConecta.DCOMConecta
Dim sSql As String

    Set oCon = New COMConecta.DCOMConecta
    oCon.AbreConexion
    sSql = "exec spt_sel_DevSobranteXope " & pnMovNroOpe
    Set DevSobranteXope = oCon.CargaRecordSet(sSql)
    oCon.CierraConexion
    Set oCon = Nothing
    
End Function

'END RIRO *****************

'WIOR 20140725 *********************************************
Public Function VerificaGarantiaDPF(ByVal psCtaCod As String) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.VerificaGarantiaDPF(psCtaCod)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    VerificaGarantiaDPF = True
Else
    VerificaGarantiaDPF = False
End If

Set oCredito = Nothing
End Function
'WIOR FIN **************************************************
'JUEZ 20140814 **************************************************
Function GeneraTirNoPer(pdFecDesemb As Date, pnMonto As Double, pMatCalendPagos As Variant) As Double

Dim i As Integer, J As Integer, a As Double, b As Double, C As Double
Dim nPeriodo As Double
Dim nPeriodoAnt As Double
Dim nCuotas As Integer
Dim nValCalc As Double
Dim nTIRDiaria As Double, nTIRAnual As Double

nCuotas = UBound(pMatCalendPagos)
            
' a es la tasa más baja posible
a = 0
' b es la tasa más alta posible
b = 2 / 360
' es el punto medio de las dos tasas pero al momento inicial es cero
C = 0
            
' i número máximo de iteraciones dadas para encontrar la TIR
For i = 1 To 1000
    'Proceso para calcular la suma de las cuotas traidas a valor presente a una tasa c
    nValCalc = 0
    C = (a + b) / 2
    nPeriodoAnt = 0
    For J = 1 To nCuotas
        nPeriodo = DateDiff("d", pdFecDesemb, pMatCalendPagos(J - 1, 0))
        nPeriodoAnt = nPeriodo
        nValCalc = nValCalc + 1 * pMatCalendPagos(J - 1, 2) / ((1 + C) ^ nPeriodo)
    Next
    
    If nValCalc < pnMonto Then
        b = C
    Else
        a = C
    End If

    If Abs(nValCalc - pnMonto) < 0.00001 Then
        nTIRDiaria = C
        nTIRAnual = C * 365
        GeneraTirNoPer = Round((((1 + nTIRAnual * 1 / 365) ^ (365 / 1)) - 1) * 100, 2)
        i = 1000
    End If
Next i
End Function
'END JUEZ *******************************************************

'WIOR 20140820 *********************************************
Public Function ConfigEdadProducto(ByVal psTpoCred As String, ByRef pnMinAprobacion As Long, ByRef pnMaxAprobacion As Long, ByRef pnPermanencia As Long) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset
On Error GoTo Error

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.ConfigEdadProducto(psTpoCred)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    pnMinAprobacion = CLng(rsCredito!nMinAprobacion)
    pnMaxAprobacion = CLng(rsCredito!nMaxAprobacion)
    pnPermanencia = CLng(rsCredito!nPermanencia)
    ConfigEdadProducto = True
Else
    pnMinAprobacion = 0
    pnMaxAprobacion = 0
    pnPermanencia = 0
    ConfigEdadProducto = False
End If

Set rsCredito = Nothing
Set oCredito = Nothing

Exit Function
Error:
    ConfigEdadProducto = False
    Set rsCredito = Nothing
    Set oCredito = Nothing
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
Public Function ConfigPeriodoProducto(ByVal psTpoCred As String, ByRef pnCuotas As Long, ByRef pnMontoMax As Double, ByRef pbNecesario As Boolean) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset
On Error GoTo Error

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.ConfigPeriodoProducto(psTpoCred)

If Not (rsCredito.EOF And rsCredito.BOF) Then
    pnCuotas = CLng(rsCredito!nCuotas)
    pnMontoMax = CDbl(rsCredito!nMontoMax)
    pbNecesario = CBool(rsCredito!bNecesario)
    ConfigPeriodoProducto = True
Else
    pnCuotas = 0
    pnMontoMax = 0
    pbNecesario = False
    ConfigPeriodoProducto = False
End If

Set rsCredito = Nothing
Set oCredito = Nothing

Exit Function
Error:
    ConfigPeriodoProducto = False
    Set rsCredito = Nothing
    Set oCredito = Nothing
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'WIOR FIN **************************************************
'JUEZ 20140922 *************************************************
'Public Function TotalGastosAFecha(ByVal psCtaCod As String, ByVal pdFecha As Date, Optional ByVal pnPrdConcepto As Integer = -1) As Double 'Comento Joep20200408 pbReprogramado
Public Function TotalGastosAFecha(ByVal psCtaCod As String, ByVal pdFecha As Date, Optional ByVal pnPrdConcepto As Integer = -1, Optional ByVal pnMenuOpcion As Integer = -1, Optional ByVal pnOpCovid As Integer = -1) As Double 'Add JOEP20210306 garantia covid
'LUCV20180601, Agregó Parametro pnPrdConcepto
Dim oDCredActBD As COMDCredito.DCOMCredActBD
Dim rs As ADODB.Recordset

    Set oDCredActBD = New COMDCredito.DCOMCredActBD
    'Set rs = oDCredActBD.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha('" & psCtaCod & "','" & Format(pdFecha, "mm/dd/yyyy") & "')") 'LUCV20180601, Comentó.
    'Set rs = oDCredActBD.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(pdFecha, "mm/dd/yyyy") & "', " & pnPrdConcepto & ")") 'LUCV20180601, Agregó.
    Set rs = oDCredActBD.CargaRecordSet(" SELECT nGasto=dbo.ColocCred_ObtieneGastoFechaCreditoDeudaFecha_Negocio('" & psCtaCod & "','" & Format(pdFecha, "mm/dd/yyyy") & "'," & pnPrdConcepto & "," & pnMenuOpcion & "," & pnOpCovid & ")") 'Add JOEP20210306 garantia covid
    Set oDCredActBD = Nothing
    
    TotalGastosAFecha = rs!nGasto
End Function
'END JUEZ ******************************************************
'EJVG20140925 ***
Public Function UnirMatricesMiViviendaAmortizacionHistorial(ByVal pMat1 As Variant, ByVal pMat2 As Variant) As Variant
Dim i, J, k As Integer
Dim MatResul As Variant
Dim nMonto As Double

    ReDim MatResul(UBound(pMat1), 17)
    For i = 0 To UBound(pMat1) - 1
        MatResul(i, 0) = pMat1(i, 0) 'fecha
        MatResul(i, 1) = pMat1(i, 1) 'Cuota
        MatResul(i, 2) = pMat1(i, 2) 'Monto Cuota
        For J = 3 To 16 'unimos concepto por concepto
            nMonto = 0
            For k = 0 To UBound(pMat2) - 1 'buscamos su cuota equivalente en calendatio paralelo
                If pMat1(i, 1) = pMat2(k, 1) Then 'si se encuentra la fila de la cuota
                    nMonto = CDbl(pMat2(k, J))
                    Exit For
                End If
            Next k
            MatResul(i, J) = Format(CDbl(pMat1(i, J)) + nMonto, "#0.00")
        Next J
        'MatResul(i, 3) = Format(CDbl(pMat1(i, 3)) + CDbl(pMat2(i, 3)), "#0.00") 'Capital
        'MatResul(i, 4) = Format(CDbl(pMat1(i, 4)) + CDbl(pMat2(i, 4)), "#0.00") 'Interes
        'MatResul(i, 5) = Format(CDbl(pMat1(i, 5)) + CDbl(pMat2(i, 5)), "#0.00") 'Interes Gracia
        'MatResul(i, 6) = Format(CDbl(pMat1(i, 6)) + CDbl(pMat2(i, 6)), "#0.00") 'Interes Mora
        'MatResul(i, 7) = Format(CDbl(pMat1(i, 7)) + CDbl(pMat2(i, 7)), "#0.00") 'Interes Reprog
        'MatResul(i, 8) = Format(CDbl(pMat1(i, 8)) + CDbl(pMat2(i, 8)), "#0.00") 'Interes Suspenso
        'MatResul(i, 9) = Format(CDbl(pMat1(i, 9)) + CDbl(pMat2(i, 9)), "#0.00") 'Interes Gasto
        'MatResul(i, 10) = Format(CDbl(pMat1(i, 10)) + CDbl(pMat2(i, 10)), "#0.00") 'Saldo
    Next i
    
    UnirMatricesMiViviendaAmortizacionHistorial = MatResul
    
End Function
'END EJVG *******

'ALPA 20150114 ********************************************************************************************************************
Public Sub GrabarSugerenciaExoneracion(ByVal psCtaCod As String, ByVal pnExoneraReg As Integer, ByVal prsExonera As ADODB.Recordset)

Dim oCredito As COMDCredito.DCOMCredActBD
Dim i As Integer

On Error GoTo ErrorGrabarSugerenciaExoneracion

    Set oCredito = New COMDCredito.DCOMCredActBD
    oCredito.dBeginTrans

    Call oCredito.dDeleteCredSugExonera(psCtaCod)
    If pnExoneraReg = 1 Then
        prsExonera.MoveFirst
        For i = 0 To prsExonera.RecordCount - 1
            If prsExonera!Solicitar = 1 Then
                Call oCredito.dInsertaCredSugExonera(psCtaCod, prsExonera!cExoneraCod)
            End If
             prsExonera.MoveNext
        Next i
    End If
    oCredito.dCommitTrans
    Set oCredito = Nothing

    Exit Sub

ErrorGrabarSugerenciaExoneracion:
    oCredito.dRollbackTrans
    Err.Raise Err.Number, "Error En Proceso SugerenciaCredito", Err.Description
End Sub

Public Function ValidaExoneracion(ByVal psCtaCod As String, ByVal psExoneraCod As String) As Boolean
    Dim oConecta As COMConecta.DCOMConecta
    Set oConecta = New COMConecta.DCOMConecta
    Dim rs As New ADODB.Recordset
    Dim rs1 As New ADODB.Recordset
    Dim Rs2 As New ADODB.Recordset
    Dim Sql As String
    oConecta.AbreConexion
    'CTI6-20210503-ERS032-2019 -(Optimizar Sugerencia)
    'Sql = "Select * from CredSugExonera where cCtaCod='" & psCtaCod & "' and cExoneraCod = '" & psExoneraCod & "'"
    Sql = "Execute spt_sel_ValidaExoneracion '" & psCtaCod & "', '" & psExoneraCod & "' "
    'Fin CTI6-20210503
    
    Set rs = oConecta.CargaRecordSet(Sql)
    If Not (rs.EOF And rs.BOF) Then
      ValidaExoneracion = True
    Else
      ValidaExoneracion = False
    End If
End Function
'END ALPA ***********************************************************************************************************
'JUEZ 20150217 *********************************************************************************
Public Function GrabarPagoCreditoDebitoAutomatico(ByVal psCtaCod As String, ByVal psUser As String, ByVal psAgeCod As String, ByVal pdFecha As Date, ByVal psCtaCodAho As String, _
                                                  ByVal pnMontoPago, ByVal pnITF As Double, ByVal pnComision As Double, ByRef psImpreBoleta As String) As String
                                        
Dim oBase As COMDCredito.DCOMCredActBD
Dim bTransac As Boolean, bExitoPagoCredito As Boolean
Dim sMovNro As String
Dim nMovNro As Long
Dim rsCta As ADODB.Recordset
Dim vMatAho As Variant
Dim lsImpreBoletaCred As String

On Error GoTo ErrGrabarPagoCreditoDebitoAutomatico
    
    GrabarPagoCreditoDebitoAutomatico = ""

    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    bTransac = True

    sMovNro = oBase.GeneraMovNro(pdFecha, psAgeCod, psUser)
    Call oBase.InsertaMov(sMovNro, gCredPagoCuotasDebitoAuto, "Pago Automático Crédito Nº " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente)
    nMovNro = oBase.GetnMovNro(sMovNro)

    'Pago del Crédito ************************************
    bExitoPagoCredito = PagarCreditoDebitoAutomatico(oBase, psCtaCod, pnMontoPago, pnITF, psCtaCodAho, psAgeCod, psUser, pdFecha, nMovNro, lsImpreBoletaCred)
    
    'FInalizacion Debito Automático **********************
    If bExitoPagoCredito Then
        If pnComision > 0 Then
            ReDim vMatAho(14)
            If Mid(psCtaCodAho, 6, 3) = gCapAhorros Then
                oBase.CapCargoCuentaAho vMatAho, psCtaCodAho, pnComision, gAhoCargoComisionServDebitoAuto, sMovNro, "", pdFecha
            Else
                oBase.CapCargoCuentaCTS vMatAho, psCtaCodAho, pnComision, "220314", sMovNro, "", pdFecha
            End If
        End If
        oBase.InsertaMovCapServDebitoAuto nMovNro, psCtaCodAho, pnMontoPago + pnITF, pnComision, gServCredito, psCtaCod
        oBase.dCommitTrans
        bTransac = False
        psImpreBoleta = psImpreBoleta & lsImpreBoletaCred
    Else
        If bTransac Then
            GrabarPagoCreditoDebitoAutomatico = "Ocurrió un error al procesar el Pago del crédito " & psCtaCod
            oBase.dRollbackTrans
            Set oBase = Nothing
        End If
    End If
    
    Set oBase = Nothing
    Exit Function
ErrGrabarPagoCreditoDebitoAutomatico:
    GrabarPagoCreditoDebitoAutomatico = "Ocurrió un error al procesar los Pagos de cuota del crédito " & psCtaCod & ". Error " & Err.Number & " - " & Err.Description
    If bTransac Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Pago Automatico de Créditos", Err.Description
End Function

'Modificado por JUEZ 20150217 PagarCreditoDebitoAutomatico *******************
Private Function PagarCreditoDebitoAutomatico(ByVal poConnBase As COMDCredito.DCOMCredActBD, ByVal psCtaCod As String, ByVal pnImporteCobrado As Double, _
                                              ByVal pnITF As Double, ByVal psCtaCodAho As String, ByVal psCodAge As String, ByVal psCodUser As String, _
                                              ByVal pdFecha As Date, ByVal pnMovNro As Long, ByRef psImpreBoleta As String) As Boolean

    Dim rsPers As ADODB.Recordset
    Dim rsCredVig As ADODB.Recordset
    Dim sAgencia As String
    Dim nDiasAtraso As Integer
    Dim nGastos As Double
    Dim nMonPago As Double
    Dim nMora As Double
    Dim nCuotasMora As Integer
    Dim nTotalDeuda As Currency
    Dim nInteresDesagio As Double
    Dim nMonCalDin As Double
    Dim sMensaje As String
    Dim cNomCliente As String
    Dim nNewSalCap As Double
    Dim nNewCPend As Integer
    Dim dProxFec As Date
    Dim sEstado As String
    Dim sMetodoLiq As String

    Dim cMoneda As String
    Dim bRfa As Boolean
    Dim nCuotaPendiente As Integer
    Dim nMoraCalculada As Double
    Dim dFechaVencimiento As Date
    Dim sImpreBoleta As String
    Dim bValorProceso As Boolean
    Dim nMonIntGra As Double
    Dim nIntPendiente As Double
    Dim nIntPendientePagado As Double
    Dim bPrepago As Boolean
    Dim nCalendDinamico As Integer
    Dim bCalenDinamic As Boolean
    Dim bCalenCuotaLibre As Boolean
    Dim nMivivienda As Integer
    Dim nCalPago As Integer
    Dim sPersCod As String
    Dim sOperacion As String
    Dim bExoneradaLavado As Boolean
    Dim bOperacionEfectivo As Boolean
    Dim nMontoLavDinero As Double
    Dim nTC As Double
    Dim nMontoPago As Double
    Dim nITF As Double, nITFTmp As Double
    Dim nCalendDinamTipo As Integer
    Dim nNroTransac As Integer
    Dim nPrestamo As Double
    Dim bCuotaCom As Integer
    Dim bRecepcionCmact As Boolean
    Dim sPersCmac As String
    
On Error GoTo ErrorPagarCuota

    PagarCreditoDebitoAutomatico = False
    nInteresDesagio = 0
    
    Call CargaDatosPagoCuotas(psCtaCod, pdFecha, bPrepago, psCodAge, rsCredVig, sAgencia, nCalendDinamico, bCalenDinamic, bCalenCuotaLibre, _
                                nMivivienda, nCalPago, nGastos, nMonPago, nMora, nCuotasMora, nTotalDeuda, nInteresDesagio, _
                                nMonCalDin, sMensaje, sPersCod, sOperacion, bExoneradaLavado, bRfa, rsPers, bOperacionEfectivo, nMontoLavDinero, nTC, _
                                nMontoPago, nITF, nIntPendientePagado, nNewSalCap, nNewCPend, dProxFec, sEstado, nCuotaPendiente, nMoraCalculada, dFechaVencimiento)

    If Not rsCredVig.EOF Then
        sMetodoLiq = Trim(rsCredVig!cMetLiquidacion)
        nCalendDinamTipo = rsCredVig!nCalendDinamTipo
        cNomCliente = rsCredVig!cPersNombre
        nIntPendiente = IIf(IsNull(rsCredVig!nIntPend), 0, rsCredVig!nIntPend)
        nIntPendientePagado = 0
        nNroTransac = IIf(IsNull(rsCredVig!nTransacc), 0, rsCredVig!nTransacc)
        cMoneda = Trim(rsCredVig!cMoneda)
        nDiasAtraso = CInt(rsCredVig!nDiasAtraso)
        
        nITFTmp = pnITF
        bValorProceso = ActualizaMontoPago(pnImporteCobrado, nTotalDeuda, psCtaCod, pdFecha, sMetodoLiq, nIntPendiente, nIntPendientePagado, bCalenCuotaLibre, bCalenDinamic, bPrepago, pnImporteCobrado, _
                nMonCalDin, sMensaje, pnITF, nInteresDesagio, nNewSalCap, nNewCPend, dProxFec, sEstado, nMonIntGra)
        pnITF = nITFTmp
        
        If bValorProceso Then
        Call GrabarPagoCuotas(psCtaCod, nMivivienda, nCalPago, pnImporteCobrado, _
                         pdFecha, sMetodoLiq, gColocTipoPagoCargoCta, psCodAge, psCodUser, "109", "", _
                         bRecepcionCmact, sPersCmac, nIntPendiente, nIntPendientePagado, bPrepago, "", pnITF, _
                         nInteresDesagio, nTotalDeuda, bCalenDinamic, nMonCalDin, nCalendDinamTipo, "", CInt(Mid(psCtaCod, 6, 3)), _
                         cNomCliente, cMoneda, nNroTransac, Format(dProxFec, "dd/mm/yyyy"), "", "", False, "", _
                         "", "", psImpreBoleta, nDiasAtraso, "", , , "", "", "", "", pnMovNro, , , , , poConnBase, , , , psCtaCodAho)
        PagarCreditoDebitoAutomatico = True
        End If
    Else
        PagarCreditoDebitoAutomatico = False
    End If
    
    Set rsPers = Nothing
    Set rsCredVig = Nothing
    Exit Function
ErrorPagarCuota:
    PagarCreditoDebitoAutomatico = False
End Function
'END JUEZ **************************************************************************************
'RECO20150318 ERS010-2015********************************************************************
Public Function AdmCredListaCredAprobados(ByVal psCadAge As String) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set AdmCredListaCredAprobados = obj.AdmCredListaCredAprobados(psCadAge)
    Set obj = Nothing
End Function
Public Sub RegistraControlDesembolso(ByVal psCtaCod As String, ByVal psIngreso As String, ByVal psUser As String)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.RegistraControlDesembolso(psCtaCod, psIngreso, psUser)
    Set obj = Nothing
End Sub
Public Sub RegistraControlDesembolsoHistoral(ByVal nIdControl As Long, ByVal nTpoOpe As Integer, ByVal dUltMov As String)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.RegistraControlDesembolsoHistoral(nIdControl, nTpoOpe, dUltMov)
    Set obj = Nothing
End Sub
Public Sub RegistroCredAdmSeccion(ByVal psTpoCred As String, ByVal psDescripcion As String, ByVal psUltimaActualizacion As String, ByVal pnEstado As Integer)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.RegistroCredAdmSeccion(psTpoCred, psDescripcion, psUltimaActualizacion, pnEstado)
    Set obj = Nothing
End Sub
'Public Function ListaCredAdmSecciones(ByVal psTpoCred As String) As ADODB.Recordset 'Comento JOEP20190208 CP
Public Function ListaCredAdmSecciones(ByVal psCtaCod As String, ByVal psTpoCateg As String, ByVal psTpoProd As String, ByVal pnMonto As Currency, ByVal psTpoCred As String, Optional ByVal psTpoOpe As Integer = 0) As ADODB.Recordset 'JOEP20181229 CP
    Dim obj As New COMDCredito.DCOMCredito
    'Set ListaCredAdmSecciones = obj.ListaCredAdmSecciones(psTpoCred)'Comento JOEP20190208 CP
    Set ListaCredAdmSecciones = obj.ListaCredAdmSecciones(psCtaCod, psTpoCateg, psTpoProd, pnMonto, psTpoCred, psTpoOpe) 'JOEP20181229 CP
    Set obj = Nothing
End Function
'JOEP20190107 CP
Public Function ListaCredAdmNiveles(ByVal psTpoCateg As String, ByVal psTpoProd As String, ByVal pcItem As String, ByVal pnCantConfig As Integer) As ADODB.Recordset   'JOEP20181229 CP
    Dim obj As New COMDCredito.DCOMCredito
    Set ListaCredAdmNiveles = obj.ListaCredAdmNiveles(psTpoCateg, psTpoProd, pcItem, pnCantConfig)
    Set obj = Nothing
End Function
'JOEP20190107 CP
Public Sub CredAdmActualizaSeccion(ByVal pnIdSeccion As Long, ByVal pnEstado As Integer, ByVal psUltActualizacion As String)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.CredAdmActualizaSeccion(pnIdSeccion, pnEstado, psUltActualizacion)
End Sub
Public Sub RegistroCredAdmRequisito(ByVal nIdSeccion As Long, ByVal psDescripcion As String, ByVal psUltimaActualizacion As String, ByVal pnEstado As Integer)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.RegistroCredAdmRequisito(nIdSeccion, psDescripcion, psUltimaActualizacion, pnEstado)
    Set obj = Nothing
End Sub
'Public Function ListaCredAdmRequisitos(ByVal nIdSeccion As Long) As ADODB.Recordset'Comento JOEP20190208 CP
Public Function ListaCredAdmRequisitos(ByVal psTpoCateg As String, ByVal psTpoProd As String, ByVal psItem As String, ByVal pnCantConf As Long) As ADODB.Recordset  'JOEP20181229 CP
    Dim obj As New COMDCredito.DCOMCredito
    'Set ListaCredAdmRequisitos = obj.ListaCredAdmRequisito(nIdSeccion)'Comento JOEP20190208 CP
    Set ListaCredAdmRequisitos = obj.ListaCredAdmRequisito(psTpoCateg, psTpoProd, psItem, pnCantConf) 'JOEP20181229 CP
    Set obj = Nothing
End Function
Public Sub CredAdmActualizaRequisito(ByVal pnIdRequisito As Long, ByVal pnEstado As Integer, ByVal psUltActualizacion As String)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.CredAdmActualizaRequisito(pnIdRequisito, pnEstado, psUltActualizacion)
    Set obj = Nothing
End Sub
Public Function SegSolicitudCIHistorial(ByVal pnIdSolicitud As Long) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set SegSolicitudCIHistorial = obj.SegSolicitudCIHistorial(pnIdSolicitud)
    Set obj = Nothing
End Function
Public Sub ActualizaControlDesembolso(ByVal pnIdControl As Long, ByVal psIngreso As String, ByVal pnTpoOpe As Integer)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.ActualizaControlDesembolso(pnIdControl, psIngreso, pnTpoOpe)
    Set obj = Nothing
End Sub
Public Sub RegistraRequisitoCta(ByVal psCtaCod As String, ByVal pnIdRequisito As Long, ByVal pnEstado As Integer, ByVal pnTpoOpe As Integer)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.RegistraRequisitoCta(psCtaCod, pnIdRequisito, pnEstado, pnTpoOpe)
    Set obj = Nothing
End Sub
Public Function ObtieneDatosAutorizaChekList(ByVal psCtaCod As String) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set ObtieneDatosAutorizaChekList = obj.ObtieneDatosAutorizaChekList(psCtaCod)
    Set obj = Nothing
End Function
Public Sub CredAdmRegistraAutorizacionChekList(ByVal psCtaCod As String, ByVal psPersCodAuto As String, ByVal psGlosa As String, ByVal psFecAuto As String, ByVal pnEstado As Integer)
    Dim obj As New COMDCredito.DCOMCredito
    Call obj.CredAdmRegistraAutorizacionChekList(psCtaCod, psPersCodAuto, psGlosa, psFecAuto, pnEstado)
    Set obj = Nothing
End Sub
Public Function CredAdmObtieneCtaAutorizadaChekList(ByVal psCtaCod As String) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set CredAdmObtieneCtaAutorizadaChekList = obj.CredAdmObtieneCtaAutorizadaChekList(psCtaCod)
    Set obj = Nothing
End Function
'Public Function ObtieneRequisitosTpoCred(ByVal psTpoCred As String, ByVal psCtaCod As String) As ADODB.Recordset'Comento JOEP20190208 CP
Public Function ObtieneRequisitosTpoCred(ByVal psTpoCatg As String, ByVal psTpoProd As String, ByVal psCtaCod As String, ByVal pnMonto As Currency, ByVal psTpoCred As String, Optional ByVal psTpoOpe As Integer = 0) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    'Set ObtieneRequisitosTpoCred = obj.ObtieneRequisitosTpoCred(psTpoCred, psCtaCod)'Comento JOEP20190208 CP
    Set ObtieneRequisitosTpoCred = obj.ObtieneRequisitosTpoCred(psTpoCatg, psTpoProd, psCtaCod, pnMonto, psTpoCred, psTpoOpe) 'JOEP20190102 CP
    Set obj = Nothing
End Function
Public Function DevuelveDatosAutorizacion(ByVal psCtaCod As String) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set DevuelveDatosAutorizacion = obj.DevuelveDatosAutorizacion(psCtaCod)
    Set obj = Nothing
End Function
Public Function DevuelveDatosCred(ByVal psCtaCod As String) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set DevuelveDatosCred = obj.DevuelveDatosCred(psCtaCod)
    Set obj = Nothing
End Function
Public Sub EliminaCheckListCta(ByVal psCtaCod As String)
    Dim obj As New COMDCredito.DCOMCredito
    obj.EliminaCheckListCta (psCtaCod)
    Set obj = Nothing
End Sub
Public Function ObtenerDatosCredChekList(ByVal psCtaCod As String) As ADODB.Recordset
    Dim obj As New COMDCredito.DCOMCredito
    Set ObtenerDatosCredChekList = obj.ObtenerDatosCredChekList(psCtaCod)
    Set obj = Nothing
End Function
'RECO FIN************************************************************************************
'WIOR 20150526 ***
Public Function GrabarCampanaRecuperaciones(ByRef pnCod As Long, ByVal psNombre As String, ByVal psAprobado As String, ByVal pdDesde As Date, ByVal pdHasta As Date, _
                                            ByVal pnNumMax As Integer, ByVal ArrAgencias As Variant, ByVal ArrTpoCreditos As Variant, ByRef MatSubCampana As Variant, _
                                            ByVal pRsNiveles As ADODB.Recordset) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim i As Integer
Dim nCodSub As Long
Dim sCodSubs As String

On Error GoTo ErrorGrabarCampanaRecuperaciones

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Registrar datos basicos
If pnCod = 0 Then
    pnCod = oCredito.RegistrarCampanaRecup(psNombre, psAprobado, pdDesde, pdHasta, pnNumMax)
Else
    Call oCredito.ActualizaCampanaRecup(pnCod, psNombre, psAprobado, pdDesde, pdHasta, pnNumMax)
End If

'Registrar relacion con Agencias
Call oCredito.EliminaAgenciasCampanaRecup(pnCod)
If IsArray(ArrAgencias) Then
    If Trim(ArrAgencias(0)) <> "" Then
        For i = 0 To UBound(ArrAgencias)
            Call oCredito.RegistraAgenciasCampanaRecup(pnCod, ArrAgencias(i))
        Next i
    End If
End If

'Registrar relacion con Tipo de Creditos
Call oCredito.EliminaTpoCredCampanaRecup(pnCod)
If IsArray(ArrTpoCreditos) Then
    If Trim(ArrTpoCreditos(0)) <> "" Then
        For i = 0 To UBound(ArrTpoCreditos)
            Call oCredito.RegistraTpoCredCampanaRecup(pnCod, ArrTpoCreditos(i))
        Next i
    End If
End If

'Registrar Sub Campañas
sCodSubs = ""
If IsArray(MatSubCampana) Then
    If Trim(MatSubCampana(0, 0)) <> "" Then
        For i = 0 To UBound(MatSubCampana, 2)
            nCodSub = 0
            If CInt(MatSubCampana(0, i)) = 0 Then
                nCodSub = oCredito.RegistraSubCampCampanaRecup(pnCod, CInt(MatSubCampana(1, i)), CInt(MatSubCampana(2, i)), CInt(MatSubCampana(3, i)), CInt(MatSubCampana(4, i)), _
                                                    CDbl(MatSubCampana(6, i)), CDbl(MatSubCampana(7, i)), CDbl(MatSubCampana(8, i)), CDbl(MatSubCampana(9, i)), CInt(MatSubCampana(10, i)), _
                                                    CInt(MatSubCampana(11, i)), CInt(MatSubCampana(12, i)), _
                                                    CDbl(MatSubCampana(13, i))) 'JOEP
                sCodSubs = sCodSubs & nCodSub & ","
                MatSubCampana(0, i) = nCodSub
            Else
                Call oCredito.ActualizaSubCampCampanaRecup(pnCod, CLng(MatSubCampana(0, i)), CInt(MatSubCampana(1, i)), CInt(MatSubCampana(2, i)), CInt(MatSubCampana(3, i)), CInt(MatSubCampana(4, i)), _
                                                    CDbl(MatSubCampana(6, i)), CDbl(MatSubCampana(7, i)), CDbl(MatSubCampana(8, i)), CDbl(MatSubCampana(9, i)), CInt(MatSubCampana(10, i)), _
                                                    CInt(MatSubCampana(11, i)), CInt(MatSubCampana(12, i)), _
                                                    CDbl(MatSubCampana(13, i))) 'JOEP
                                                    
                sCodSubs = sCodSubs & Trim(MatSubCampana(0, i)) & ","
            End If
        Next i
    End If
End If

If Trim(sCodSubs) <> "" Then
    sCodSubs = Mid(sCodSubs, 1, Len(sCodSubs) - 1)
    Call oCredito.DarBajaSubCampCampanaRecup(pnCod, sCodSubs, 0)
End If

'Registrar Niveles de Aprobación
Call oCredito.EliminaNivelesAprCampanaRecup(pnCod)
If Not pRsNiveles Is Nothing Then
    If Not (pRsNiveles.BOF And pRsNiveles.EOF) Then
        For i = 1 To pRsNiveles.RecordCount
            If Trim(pRsNiveles!Act) = "1" Then
                Call oCredito.RegistraNivelesAprCampanaRecup(pnCod, CInt(pRsNiveles!Cod), CDbl(pRsNiveles!Desde), CDbl(pRsNiveles!Hasta))
            End If
            pRsNiveles.MoveNext
        Next i
    End If
End If

oCredito.CommitTrans
Set oCredito = Nothing
GrabarCampanaRecuperaciones = True

Exit Function
ErrorGrabarCampanaRecuperaciones:
oCredito.RollbackTrans
GrabarCampanaRecuperaciones = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function AcogerCreditoCampanaRecup(ByVal pdFecha As Date, ByVal pcCtaCod As String, ByVal pnSaldoCap As Double, ByVal pnDiasAtraso As Integer, ByVal pnCuotaVenc As Integer, ByVal pnNroCalen As Integer, _
                                          ByVal pnCampana As Long, ByVal pnSubCamp As Long, ByVal pnMontoPerdon As Double, ByVal pnMontoPagar As Double, ByVal pnMontoMin As Double, _
                                          ByVal pnMontoMax As Double, ByVal pnNivelApr As Integer, ByVal pnMontoPend As Double, ByVal pnMontoDeuda As Double, ByVal psMovNro As String, ByVal pMatCuotasPerd As Variant, _
                                          ByVal pArrPorcentaje As Variant, ByVal psCargo As String) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim i As Integer
Dim nCod As Long

On Error GoTo ErrorAcogerCreditoCampanaRecup

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Anular Registro anterior
Call oCredito.AnularCampanaRecupCred(pdFecha, pcCtaCod)

'Registro Acoger Credito
nCod = oCredito.AcogerCredCampanaRecup(pcCtaCod, pnSaldoCap, pnDiasAtraso, pnCuotaVenc, pnNroCalen, pnCampana, pnSubCamp, pnMontoPerdon, pnMontoPagar, pnMontoMin, pnMontoMax, pnNivelApr, pnMontoPend, pnMontoDeuda, _
                                        CDbl(pArrPorcentaje(0)), CDbl(pArrPorcentaje(1)), CDbl(pArrPorcentaje(2)), CDbl(pArrPorcentaje(3)), psMovNro, _
                                        CDbl(pArrPorcentaje(4))) 'JOEP

'Registro de las Cuotas Perdonadas
If IsArray(pMatCuotasPerd) Then
    If Trim(pMatCuotasPerd(0, 0)) <> "" Then
        For i = 0 To UBound(pMatCuotasPerd)
            Call oCredito.AcogerCredCampanaRecupCuota(nCod, CInt(pMatCuotasPerd(i, 0)), CDbl(pMatCuotasPerd(i, 1)), CDbl(pMatCuotasPerd(i, 2)), CDbl(pMatCuotasPerd(i, 3)), CDbl(pMatCuotasPerd(i, 4)), CDbl(pMatCuotasPerd(i, 5)), _
            CDbl(pMatCuotasPerd(i, 6)), CDbl(pMatCuotasPerd(i, 7)), CDbl(pMatCuotasPerd(i, 8)), CDbl(pMatCuotasPerd(i, 9)), CDbl(pMatCuotasPerd(i, 10)), CDbl(pMatCuotasPerd(i, 11)), CDbl(pMatCuotasPerd(i, 12)), CDbl(pMatCuotasPerd(i, 13)), _
            CDbl(pMatCuotasPerd(i, 14)), CDbl(pMatCuotasPerd(i, 15)), CDbl(pMatCuotasPerd(i, 16))) 'JOEP
        Next i
    End If
End If

'Aprobacion directa
Call oCredito.AprocacionDirectaCampanaRecupCred(nCod, pnNivelApr, psCargo, psMovNro)

oCredito.CommitTrans
Set oCredito = Nothing
AcogerCreditoCampanaRecup = True

Exit Function
ErrorAcogerCreditoCampanaRecup:
oCredito.RollbackTrans
AcogerCreditoCampanaRecup = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function GarbarAutorizacionCredCampanaRecup(ByVal pnCod As Long, ByVal psCodCargo As String, ByVal psMovNro As String) As Boolean
Dim oCredito As COMDCredito.DCOMCredito

On Error GoTo ErrorGarbarAutorizacionCredCampanaRecup

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

Call oCredito.RegistraAutorizacionCredCampanaRecup(pnCod, psCodCargo, psMovNro)
Call oCredito.ActualizaEstCredCampanaRecup(pnCod)

oCredito.CommitTrans
Set oCredito = Nothing
GarbarAutorizacionCredCampanaRecup = True

Exit Function
ErrorGarbarAutorizacionCredCampanaRecup:
oCredito.RollbackTrans
GarbarAutorizacionCredCampanaRecup = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'WIOR FIN ********
'JUEZ 20150415 *********************************************************************
Public Function MatrizMontoAPagarAlDia(ByVal pMatCalend As Variant, ByVal pdFecProxCuota As Date) As Double
Dim i, J, Cant As Integer
    MatrizMontoAPagarAlDia = 0
    For i = 0 To UBound(pMatCalend) - 1
        If CDate(pMatCalend(i, 0)) <= pdFecProxCuota Then
            For J = 3 To 9
                MatrizMontoAPagarAlDia = MatrizMontoAPagarAlDia + CDbl(pMatCalend(i, J))
            Next J
            MatrizMontoAPagarAlDia = MatrizMontoAPagarAlDia + CDbl(pMatCalend(i, 11))
        End If
    Next i
    MatrizMontoAPagarAlDia = Round(MatrizMontoAPagarAlDia, 2)
End Function
'END JUEZ **************************************************************************
'RECO20151019 ERS034-2015**********************************************************
Public Sub RegistraPagoActivacionSeguro(ByVal pnMovNro As Long, ByVal psCtaCod As String, ByVal pnTpoSeguro As Integer)
    Dim obj As New COMDCredito.DCOMCredito
    obj.RegistraPagoActivacionSeguro pnMovNro, psCtaCod, pnTpoSeguro
    Set obj = Nothing
End Sub
'RECO FIN *************************************************************************

'WIOR 20151220 ***
Public Function EsCredMIVIVENDA(ByVal cTpoProd As String, ByVal cTpoCred As String, Optional ByVal pnTipo As Integer = 1) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Set oCredito = New COMDCredito.DCOMCredito
EsCredMIVIVENDA = oCredito.EsCredMIVIVENDA(cTpoProd, cTpoCred, pnTipo)
Set oCredito = Nothing
End Function
'WIOR FIN ********
'EJVG20150513 ***
Public Function GrabarCoberturaGarantia(ByVal psCtaCod As String, ByVal psTpoProdCod As String, ByVal pnMontoColocado As Currency, ByRef pvGarantiaCobertura As Variant, Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing, Optional ByVal pnCliPreferencial As Integer = -1) As Boolean
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim bTrans As Boolean
    Dim i As Integer
    Dim nRatio As Double
    Dim pvDatos() As tGarantiaGravamen
    
    On Error GoTo ErrGrabarCoberturaGarantia
    
    GrabarCoberturaGarantia = True
    
    pvDatos = pvGarantiaCobertura
    If UBound(pvDatos) <= 0 Then Exit Function
    
    GrabarCoberturaGarantia = False
    
    If pConnBase Is Nothing Then
        Set oBase = New COMDCredito.DCOMCredActBD
        oBase.dBeginTrans
    Else
        Set oBase = pConnBase
    End If

    bTrans = True
    
    oBase.EliminarCoberturaGarantia psCtaCod
    oBase.RegistrarColocGravamen psCtaCod, psTpoProdCod, pnMontoColocado, pnCliPreferencial
    For i = 1 To UBound(pvDatos)
        oBase.RegistrarCoberturaGarantia pvDatos(i).sNumGarant, pvDatos(i).nMoneda, psCtaCod, pvDatos(i).dFechaValorizacion, pvDatos(i).nSaldoCobertura, pvDatos(i).nRatio, pvDatos(i).nMaxCobertura, pvDatos(i).nCobertura, pvDatos(i).nOrden, pvDatos(i).dFechaTramiteLegal
        nRatio = pvDatos(i).nRatio
    Next
    
    oBase.dUpdateColocaciones psCtaCod, , , , , , , , , , , , , , , , , , nRatio
    
    'Actualizamos Garantías con el Ratio que está en colocaciones
    For i = 1 To UBound(pvDatos)
        oBase.dUpdateCoberturaGarantia pvDatos(i).sNumGarant
    Next

    If pConnBase Is Nothing Then
        oBase.dCommitTrans
        Set oBase = Nothing
    End If
    bTrans = False
    
    GrabarCoberturaGarantia = True
    Exit Function
ErrGrabarCoberturaGarantia:
    GrabarCoberturaGarantia = False
    If bTrans Then
        If pConnBase Is Nothing Then
            oBase.dRollbackTrans
            Set oBase = Nothing
        End If
    End If
    Err.Raise Err.Number, "Ocurrió un error al grabar la cobertura de garantías del Producto con Id: " & psCtaCod, Err.Description
End Function
Public Function RequierePoliza(ByVal psCtaCod As String, ByVal psTpoCredCod As String, ByVal pnMonto As Currency, ByVal pdFecVencimiento As Date, Optional ByVal psNumGarant As String = "", Optional ByVal pConnBase As COMDCredito.DCOMCredActBD = Nothing) As Boolean
    Dim oBase As COMDCredito.DCOMCredActBD
    On Error GoTo ErrRequierePoliza
    
    If pConnBase Is Nothing Then
        Set oBase = New COMDCredito.DCOMCredActBD
    Else
        Set oBase = pConnBase
    End If
    
    RequierePoliza = oBase.RequierePoliza(psCtaCod, psTpoCredCod, pnMonto, pdFecVencimiento, psNumGarant)
    
    If pConnBase Is Nothing Then
        Set oBase = Nothing
    End If
    Exit Function
ErrRequierePoliza:
    Err.Raise Err.Number, "Ocurrió al consultar si para las Garantías del crédito se requiere alguna Poliza", Err.Description
End Function
Public Function GrabarPoliza(ByVal pdRegistro As Date, ByVal psAgeCod As String, ByVal psUser As String, _
                                ByVal pbPolizaExterna As Boolean, ByVal pnTpoPolizaExterna As eTipoInicioPolizaExt, ByVal pnTpoPolizaInterna As eTipoInicioPolizaInt, _
                                ByRef psNumPoliza As String, ByVal psPersCodContr As String, ByVal psPersCodAseg As String, _
                                ByVal pnMoneda As Moneda, ByVal psNumCertif As String, _
                                ByVal pnTipoPoliza As ePolizaTipo, ByVal pnTipoAltPoliza As Integer, ByVal pdVigencia As Date, ByVal pdVencimiento As Date, _
                                ByVal pnSumaAsegurada As Currency, ByVal pnTasacionTC As Currency, ByVal pnPrimaNeta As Currency, ByVal pnDerechoEmision As Currency, ByVal pnIGV As Currency, pnPrimaTotal As Currency, ByVal pnPrimaCuota As Currency, _
                                ByVal pnNroCuotaIni As Integer, ByVal pnNroCuotaFin As Integer, ByVal pnNumAnio As Integer, ByVal pnTipoPago As Integer, _
                                ByVal psNumGarant As String, ByVal pdValorizacion As Date, ByVal pnMonedaGarantia As Integer, ByVal pnValorEdifComGarantia As Currency, _
                                ByVal psCtaCod As String, ByVal pnNroCalen As Integer, ByVal pnMontoOtrasPolizasInmobiliarias As Currency, ByVal pnMontoOtrasPolizasMobiliarias As Currency) As Boolean
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim bTrans As Boolean
    Dim nColocConcepto As ColocConcepto
    Dim lsNumPoliza As String

    On Error GoTo ErrGrabarPoliza

    nColocConcepto = IIf(pnTipoPoliza = Incendio, 1231, 1243)
    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    bTrans = True
    
    If pbPolizaExterna = True Then
        If pnTpoPolizaExterna = PolizaExtxSustitucion Or pnTpoPolizaExterna = PolizaExtxRenovacion Then
            oBase.EliminarCreditoGarantiaPoliza psCtaCod, psNumGarant, psNumPoliza
        End If
        'Nueva Póliza
        lsNumPoliza = oBase.RecuperaNumeroPoliza()
        oBase.InsertarPoliza lsNumPoliza, psPersCodContr, psPersCodAseg, pnMoneda, psNumCertif, pnTipoPoliza, CDate(pdRegistro & " " & oBase.coConex.GetHoraServer()), pbPolizaExterna, pdVigencia, pdVencimiento, pnSumaAsegurada, pnTasacionTC, pnPrimaNeta, pnDerechoEmision, pnIGV, pnPrimaTotal, pnPrimaCuota, pnNroCuotaIni, pnNroCuotaFin, pnNumAnio, pnTipoPago, IIf(pbPolizaExterna, pnTpoPolizaExterna, pnTpoPolizaInterna)
        If pbPolizaExterna Then
            oBase.dUpdateComision psPersCodContr, gComisionEvalPolEndosada
        End If
        oBase.InsertarCreditoGarantiaPoliza psCtaCod, psNumGarant, pdValorizacion, lsNumPoliza, CDate(pdRegistro & " " & oBase.coConex.GetHoraServer()), pnMonedaGarantia, pnValorEdifComGarantia
    Else
        If pnTpoPolizaInterna = PolizaIntxSustitucion Then
            oBase.EliminarCreditoGarantiaPoliza psCtaCod, psNumGarant, psNumPoliza
        End If
        'Nueva Póliza
        lsNumPoliza = oBase.RecuperaNumeroPoliza()
        oBase.InsertarPoliza lsNumPoliza, psPersCodContr, psPersCodAseg, pnMoneda, psNumCertif, pnTipoPoliza, CDate(pdRegistro & " " & oBase.coConex.GetHoraServer()), pbPolizaExterna, pdVigencia, pdVencimiento, pnSumaAsegurada, pnTasacionTC, pnPrimaNeta, pnDerechoEmision, pnIGV, pnPrimaTotal, pnPrimaCuota, pnNroCuotaIni, pnNroCuotaFin, pnNumAnio, pnTipoPago, IIf(pbPolizaExterna, pnTpoPolizaExterna, pnTpoPolizaInterna)
        oBase.InsertarCreditoGarantiaPoliza psCtaCod, psNumGarant, pdValorizacion, lsNumPoliza, CDate(pdRegistro & " " & oBase.coConex.GetHoraServer()), pnMonedaGarantia, pnValorEdifComGarantia
        
        If pnTpoPolizaInterna = PolizaIntxSustitucion Or pnTpoPolizaInterna = PolizaIntxRegistroCreditoVigente Then
            oBase.InsertarGastosxCuotaLote psCtaCod, pnNroCalen, 1, nColocConcepto, pnNroCuotaIni, pnNroCuotaFin, IIf(pnTipoPoliza = Incendio, pnMontoOtrasPolizasInmobiliarias, pnMontoOtrasPolizasMobiliarias) + pnPrimaCuota, False, True, lsNumPoliza
        End If
    End If
    
    oBase.ConsolidarGarantia psNumGarant
    
    oBase.dCommitTrans
    bTrans = False
    
    psNumPoliza = lsNumPoliza
    GrabarPoliza = True
    
    Set oBase = Nothing
    Exit Function
ErrGrabarPoliza:
    GrabarPoliza = False
    If bTrans Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Ocurrió un error al grabar una nueva Poliza", Err.Description
End Function
Public Function EliminarCoberturaGarantia(ByVal psCtaCod As String) As Boolean
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim bTrans As Boolean

    On Error GoTo ErrEliminar

    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    bTrans = True
    
    oBase.EliminarCoberturaGarantia psCtaCod
    
    oBase.dCommitTrans
    Set oBase = Nothing
    bTrans = False
    
    EliminarCoberturaGarantia = True
    Exit Function
ErrEliminar:
    EliminarCoberturaGarantia = False
    If bTrans Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Ocurrió un error al eliminar la Cobertura de las garantías", Err.Description
End Function
Public Function SolicitudExoneraCobertura(ByVal psCtaCod As String, ByVal psComentario As String, ByVal psMovNro As String, ByVal pnRatio As Double) As Long
    Dim oBase As COMDCredito.DCOMCredActBD
    Dim bTrans As Boolean

    On Error GoTo ErrInsertar

    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    bTrans = True
    
    oBase.dInsertSolicitudExoneraCobertura psCtaCod, psComentario, psMovNro, pnRatio
    
    oBase.dCommitTrans
    Set oBase = Nothing
    bTrans = False
    
    SolicitudExoneraCobertura = True
    Exit Function
ErrInsertar:
    SolicitudExoneraCobertura = False
    If bTrans Then
        oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Ocurrió un error al registrar la Solicitud de Exoneración de Coberturas", Err.Description
End Function
'END EJVG *******
'JUEZ 20160216 ***************************************************************
Public Sub RegistraReprogramacionEstado(ByVal psCtaCod As String, ByVal pdPrdEstado As Date, ByVal pnPrdEstado As ColocacReprogEstado, ByVal pnSaldoReprog As Double, _
                                        ByVal psMovNro As String, Optional ByVal pnDiasAtraso As Integer = -1000, Optional ByVal pnCuotasReprog As Integer = 0, _
                                        Optional ByVal pdFecCuotaVenc As Date = CDate("01/01/1900"), Optional ByVal pdFecNuevaCuotaVenc As Date = CDate("01/01/1900"), _
                                        Optional ByVal psMotivo As String = "", Optional ByVal pbSolicAutorizacion As Boolean = False, _
                                        Optional ByVal poBase As COMDCredito.DCOMCredActBD = Nothing, Optional ByVal prsExonera As ADODB.Recordset = Nothing, _
                                        Optional ByVal pMatrixDatActEcon As Variant = Nothing, Optional ByVal pMatrixIfis As Variant = Nothing, Optional ByVal pOpCovid As Integer = -1, _
                                        Optional ByVal pnMontoCuota As Currency = -1, Optional ByVal pMatrixModalidades As Variant = Nothing, Optional ByVal pCmbRechOtro As Integer = -1, Optional ByVal pNewDias As Integer = -1, _
                                        Optional ByVal pMatrixCalend As Variant = Nothing, Optional ByVal pnMenuOpcion As Integer = -1, Optional ByVal pMatrixDatos As Variant = Nothing)
'Optional ByVal pMatrixDatActEcon As Variant = Nothing, Optional ByVal pMatrixIfis As Variant = Nothing,Optional ByVal pOpCovid As Integer = -1 'JOEP202008 Activida Economica Covid
'pMatrixCalend , pnMenuOpcion, pMatrixDatos 'Add JOEP20210306 garantia covid
Dim oBase As COMDCredito.DCOMCredActBD
Dim pbTran As Boolean
Dim psFechaEstado As String
Dim i As Integer
On Error GoTo ErrorRegistraReprogramacionEstado

    pbTran = False
    
    If Not poBase Is Nothing Then
        Set oBase = poBase
    Else
        Set oBase = New COMDCredito.DCOMCredActBD
    End If
    
    psFechaEstado = Format(CDate(Format(pdPrdEstado, "dd/mm/yyyy") & Space(1) & Format(oBase.dFechaHora, "hh:mm:ss")), "mm/dd/yyyy hh:mm:ss")
    
    If poBase Is Nothing Then oBase.dBeginTrans
    pbTran = True
          
    oBase.dInsertaColocacReprogramadoEstado psCtaCod, psFechaEstado, pnPrdEstado, pnSaldoReprog, psMovNro, pnDiasAtraso, pnCuotasReprog, _
                                     pdFecCuotaVenc, pdFecNuevaCuotaVenc, psMotivo, pbSolicAutorizacion, pnMenuOpcion, pOpCovid, pMatrixDatos  'Add JOEP20210306 garantia covid
    
    'oBase.dInsertaActualizaColocacReprogramado psCtaCod, pnSaldoReprog, pnPrdEstado, psFechaEstado, psMovNro'Comento JOEP Tasa Especial
    oBase.dInsertaActualizaColocacReprogramado psCtaCod, pnSaldoReprog, pnPrdEstado, psFechaEstado, psMovNro, pOpCovid, pnMontoCuota, _
                                                pnMenuOpcion 'Add JOEP20210306 garantia covid
    
    If Not prsExonera Is Nothing Then
        If Not prsExonera.EOF And Not prsExonera.BOF Then
            For i = 0 To prsExonera.RecordCount - 1
                If prsExonera(2) = 1 Then
                    oBase.dInsertaColocacReprogExoneraSolicitud psCtaCod, CInt(prsExonera(0)), psFechaEstado
                End If
                prsExonera.MoveNext
            Next i
        End If
    End If
            
'JOEP202008 Activida Economica Covid
    If IsArray(pMatrixDatActEcon) Then
        If UBound(pMatrixDatActEcon) > 0 Then
            oBase.dInsertaColocacReprogActiEco psCtaCod, pMatrixDatActEcon(0), pMatrixDatActEcon(1), pMatrixDatActEcon(2), pMatrixDatActEcon(3), pMatrixDatActEcon(4), pMatrixDatActEcon(5), pMatrixDatActEcon(6), pMatrixDatActEcon(7), pMatrixDatActEcon(8), pMatrixDatActEcon(9), pMatrixDatActEcon(10), pnPrdEstado, psFechaEstado, psMovNro
        End If
    End If
    
    If IsArray(pMatrixIfis) Then
        If UBound(pMatrixIfis) > 0 Then
            For i = 1 To UBound(pMatrixIfis)
                oBase.dInsertaColocacReprogIfis psCtaCod, pMatrixIfis(i, 7), pMatrixIfis(i, 4), pMatrixIfis(i, 1), pMatrixIfis(i, 5), pMatrixIfis(i, 6), pnPrdEstado, psFechaEstado, psMovNro
            Next i
        End If
    End If
    
    If IsArray(pMatrixModalidades) Then
        If UBound(pMatrixModalidades) > 0 Then
            For i = 1 To UBound(pMatrixModalidades)
                If pMatrixModalidades(i, 2) <> "" Then
                    oBase.dInsertaColocacReprogModalidades psCtaCod, pMatrixModalidades(i, 1), pMatrixModalidades(i, 2), pMatrixModalidades(i, 3), psFechaEstado, pnPrdEstado, psMovNro
                End If
            Next i
        End If
    End If
'JOEP202008 Activida Economica Covid

'JOEP20210211 Garantia covid
    If IsArray(pMatrixCalend) Then
        If UBound(pMatrixCalend) > 0 Then
            For i = 0 To (UBound(pMatrixCalend) - 1)
                'Calendario
                oBase.dInsertaColocacReprogCalen psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), pMatrixCalend(i, 0), IIf(pMatrixCalend(i, 17) = 0, "", pMatrixCalend(i, 25)), pMatrixCalend(i, 17), pMatrixCalend(i, 26)
                'CalendDet
                oBase.dInsertaColocacReprogCalenDet psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), 1000, pMatrixCalend(i, 3), 0, pMatrixCalend(i, 26)
                oBase.dInsertaColocacReprogCalenDet psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), 1100, pMatrixCalend(i, 4), 0, pMatrixCalend(i, 26)
                oBase.dInsertaColocacReprogCalenDet psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), 1102, pMatrixCalend(i, 5), 0, pMatrixCalend(i, 26)
                oBase.dInsertaColocacReprogCalenDet psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), 1217, pMatrixCalend(i, 8), 0, pMatrixCalend(i, 26)
                oBase.dInsertaColocacReprogCalenDet psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), 1231, pMatrixCalend(i, 15), 0, pMatrixCalend(i, 26)
                oBase.dInsertaColocacReprogCalenDet psCtaCod, pnPrdEstado, psFechaEstado, pMatrixCalend(i, 24), 1, pMatrixCalend(i, 1), 1279, pMatrixCalend(i, 16), 0, pMatrixCalend(i, 26)
            Next i
        End If
    End If
'JOEP20210211 Garantia covid

    'reversion
    If pnPrdEstado = 204 Then
        oBase.dInsertaColocacReprogRechazo psCtaCod, psFechaEstado, pnPrdEstado, psMovNro, psMotivo, pNewDias, pCmbRechOtro
    End If
    'reversion
    
    If poBase Is Nothing Then oBase.dCommitTrans
    pbTran = False

    If poBase Is Nothing Then Set oBase = Nothing
    Exit Sub
    
ErrorRegistraReprogramacionEstado:
    If pbTran Then
        If poBase Is Nothing Then oBase.dRollbackTrans
        If poBase Is Nothing Then Set oBase = Nothing
        pbTran = False
    End If
    Err.Raise Err.Number, "Error En Proceso Reprogramacion Estado", Err.Description
End Sub
'END JUEZ ********************************************************************
'JUEZ 20160407 *********************************************************************
Public Function GrabarMetasAnalistas(ByVal prsMetas As ADODB.Recordset, ByVal pnAnio As Integer, ByVal pnMes As Integer, ByVal psUltimaActualizacion As String) As Boolean
Dim oBase As COMDCredito.DCOMCredActBD
Dim pbTran As Boolean
Dim i As Integer

    On Error GoTo ErrorGrabarMetasAnalistas
    GrabarMetasAnalistas = False
    pbTran = False
    
    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    pbTran = True
    
    If Not prsMetas Is Nothing Then
        If Not prsMetas.EOF And Not prsMetas.BOF Then
            For i = 0 To prsMetas.RecordCount - 1
                oBase.dInsertaCredMetasAnalistas prsMetas(2), prsMetas(3), prsMetas(0), pnAnio, pnMes, prsMetas(6), prsMetas(7), _
                                                 prsMetas(8), prsMetas(9) / 100, prsMetas(10), prsMetas(11) / 100, prsMetas(12), psUltimaActualizacion
                prsMetas.MoveNext
            Next i
        End If
    End If
    
    oBase.dCommitTrans
    pbTran = False
    Set oBase = Nothing
    
    GrabarMetasAnalistas = True
    
    Exit Function
ErrorGrabarMetasAnalistas:
    If pbTran Then
        oBase.dRollbackTrans
        Set oBase = Nothing
        pbTran = False
        GrabarMetasAnalistas = False
    End If
    Err.Raise Err.Number, "Error En Proceso Grabar Metas Analistas", Err.Description
End Function
'END JUEZ **************************************************************************

'WIOR 20160224 ***
Public Function EdadPersona(ByVal pdFecNac As Date, Optional ByVal pdFecha As Date = "01/01/1900") As Long
Dim nEdad As Integer

nEdad = DateDiff("yyyy", pdFecNac, pdFecha)

If Month(pdFecNac) >= Month(pdFecha) Then
    If Month(pdFecNac) = Month(pdFecha) Then
        If Day(pdFecNac) > Day(pdFecha) Then
            nEdad = nEdad - 1
        End If
    Else
        nEdad = nEdad - 1
    End If
End If

EdadPersona = nEdad
End Function

Public Function ObtenerTasaSeguroDesg(ByVal psCtaCod As String, ByVal pdFecha As Date, ByRef pnCantAfiliados As Integer) As Double
Dim oCredito As COMDCredito.DCOMCredito
Dim rsCredito As ADODB.Recordset
Dim nEdadActual As Long
Dim nEdadMinSegDes As Long
Dim nTasa1 As Double
Dim nTasa2 As Double

'APRI20171122 ERS028-2017
Dim oParametro As COMDCredito.DCOMParametro
Set oParametro = New COMDCredito.DCOMParametro
Dim CumpleEdadMinima As Boolean
'END APRI

Dim i As Integer
Dim Contador As Integer
              
Dim oParam As COMDCredito.DCOMParametro
Set oParam = New COMDCredito.DCOMParametro
nEdadMinSegDes = oParam.RecuperaValorParametro(3213)
             
Contador = -1

Set oCredito = New COMDCredito.DCOMCredito
Set rsCredito = oCredito.RecuperaProductoConcepto(gColocConceptoCodGastoSeguro7)
If Not (rsCredito.EOF And rsCredito.BOF) Then
    nTasa1 = IIf(IsNull(rsCredito!nValor), 0, rsCredito!nValor)
    nTasa2 = IIf(IsNull(rsCredito!nValorDosTit), 0, rsCredito!nValorDosTit)
Else
    nTasa1 = 0
    nTasa2 = 0
End If

Set rsCredito = Nothing
Set rsCredito = oCredito.ListaPersonaExonerasSegDesg(psCtaCod, "%", "0,1")

If Not (rsCredito.EOF And rsCredito.BOF) Then
    For i = 0 To rsCredito.RecordCount - 1
        If CBool(rsCredito!bExonera) = False Then
            Contador = Contador + 1
        End If
        rsCredito.MoveNext
    Next i
Else
    Set rsCredito = Nothing
    Set rsCredito = oCredito.RecuperaRelacPersSegDes(psCtaCod)

    If Not (rsCredito.EOF And rsCredito.BOF) Then
        For i = 0 To rsCredito.RecordCount - 1
            If Contador >= 1 Then
                Exit For
            Else
                CumpleEdadMinima = oParametro.CumpleCriterioEdad(rsCredito!cPersCod, pdFecha, 2) 'APRI20171122 ERS028-2017
                If Not CumpleEdadMinima Then 'APRI20171122 ERS028-2017
                'nEdadActual = EdadPersona(CDate(rsCredito!dPersNacCreac), pdFecha)
                'If nEdadActual >= nEdadMinSegDes Then
                    If CInt(rsCredito!Orden) = 1 Then
                        Exit For
                    End If
                Else
                    Contador = Contador + 1
                End If
            End If
            rsCredito.MoveNext
        Next i
    End If
End If

pnCantAfiliados = 0

If Contador = -1 Then
    ObtenerTasaSeguroDesg = 0
ElseIf Contador = 0 Then
    ObtenerTasaSeguroDesg = nTasa1
    pnCantAfiliados = 1
ElseIf Contador >= 1 Then
    ObtenerTasaSeguroDesg = nTasa2
    pnCantAfiliados = 2
End If

Set oCredito = Nothing
Set rsCredito = Nothing
End Function

Public Function GestionSiniestroReg(ByVal pnTipoSeguro As Long, ByVal pcPersCodCiaSeguro As String, ByVal pcPersCodCliente As String, ByVal pdFechaSiniestro As Date, _
                                          ByVal pnMoneda As Integer, ByVal pnSumaSol As Currency, ByVal pcNumCarta As String, ByVal pcGlosa As String, ByVal pdFechaReg As Date, _
                                          ByVal pcUserReg As String, ByVal pMatDocumentos As Variant, ByVal pMatCreditos As Variant) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim i As Integer
Dim nIdSiniestro As Long

On Error GoTo ErrorGestionSiniestroReg

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Registro General
nIdSiniestro = oCredito.GestionSiniestroReg(pnTipoSeguro, pcPersCodCiaSeguro, pcPersCodCliente, pdFechaSiniestro, pnMoneda, pnSumaSol, pcNumCarta, pcGlosa, pdFechaReg, pcUserReg)

'Registro Documentos
If IsArray(pMatDocumentos) Then
    If Trim(pMatDocumentos(0, 0)) <> "" Then
        For i = 0 To UBound(pMatDocumentos, 2)
            Call oCredito.GestionSiniestroRegDocsAdj(nIdSiniestro, CLng(pMatDocumentos(0, i)), CInt(pMatDocumentos(1, i)))
        Next i
    End If
End If

'Registro Creditos
If IsArray(pMatCreditos) Then
    If Trim(pMatCreditos(0, 0)) <> "" Then
        For i = 0 To UBound(pMatCreditos, 2)
            Call oCredito.GestionSiniestroRegCreditos(nIdSiniestro, pdFechaReg, pMatCreditos(0, i), CCur(pMatCreditos(1, i)), CCur(pMatCreditos(2, i)), CCur(pMatCreditos(3, i)), CCur(pMatCreditos(4, i)))
        Next i
    End If
End If

oCredito.CommitTrans
Set oCredito = Nothing
GestionSiniestroReg = True

Exit Function
ErrorGestionSiniestroReg:
oCredito.RollbackTrans
GestionSiniestroReg = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function GestionSiniestroRegAtencion(ByVal pnIdSiniestro As Long, ByVal pnTipo As Integer, ByVal pnImporte As Currency, ByVal pnMoneda As Integer, _
                                            ByVal pcDocReferencia As String, ByVal pdFechaRecepcion As Date, ByVal pcAgeCod As String, ByVal pcDocEmitir As String, _
                                            ByVal pcObservacion As String, ByVal pdFechaReg As Date, ByVal pcUserReg As String, Optional ByVal pMatDistMontos As Variant = Nothing) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim i As Integer
Dim nIdRegAtencion As Long

On Error GoTo ErrorGestionSiniestroReg

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Registro General
nIdRegAtencion = oCredito.GestionSiniestroRegAtencion(pnIdSiniestro, pnTipo, pnImporte, pnMoneda, pcDocReferencia, pdFechaRecepcion, pcAgeCod, pcDocEmitir, pcObservacion, pdFechaReg, pcUserReg)

'Registro Distribucion de Montos(Solo Liquidados)
If pnTipo = 3 Then
    If Trim(pMatDistMontos(0, 0)) <> "" Then
        If IsArray(pMatDistMontos) Then
            For i = 0 To UBound(pMatDistMontos)
                Call oCredito.GestionSiniestroRegAtencionDistMontos(nIdRegAtencion, pMatDistMontos(i, 0), pMatDistMontos(i, 2), pMatDistMontos(i, 3), pMatDistMontos(i, 4), pMatDistMontos(i, 5), pMatDistMontos(i, 6), pdFechaReg, pcUserReg)
            Next i
        End If
    End If
End If

oCredito.CommitTrans
Set oCredito = Nothing
GestionSiniestroRegAtencion = True

Exit Function
ErrorGestionSiniestroReg:
oCredito.RollbackTrans
GestionSiniestroRegAtencion = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function GrabarLiquidacionCredSegDes(ByRef psImpreBoleta As String, ByVal pnIdSiniestro As Integer, ByVal pnIdRegAtencion As Integer, ByVal pnMontoDevolucion As Currency, _
                                            ByVal psCtaCod As String, ByVal psUser As String, ByVal psAgeCod As String, ByVal psNomAge As String, ByVal pdFecha As Date, _
                                            ByVal pnMontoPago As Currency, ByVal pnITF As Double, ByVal pArrDistMontos As Variant, ByVal pnTipoPago As Integer, ByVal psNroDoc As String, _
                                            ByVal psLpt As String, ByVal psInstCmac As String, ByVal pbImpTMU As Boolean, Optional ByVal pArrDocRec As Variant = Nothing, _
                                            Optional ByVal pMovNroRVD As Variant = Nothing, Optional ByRef pnMovNro As Long = 0) As String
                                        
Dim oBase As COMDCredito.DCOMCredActBD
Dim bTransac As Boolean, bExitoPagoCredito As Boolean
Dim sMovNro As String
Dim nMovNro As Long
Dim rsCta As ADODB.Recordset
Dim vMatAho As Variant
Dim lsImpreBoletaCred As String

On Error GoTo ErrGrabarLiquidacionCredSegDes
    
    GrabarLiquidacionCredSegDes = ""

    Set oBase = New COMDCredito.DCOMCredActBD
    oBase.dBeginTrans
    bTransac = True
    'APRI20171205 ERS028-2017
    Dim oCred As COMDCredito.DCOMCredito
    Dim R As ADODB.Recordset
    Dim nNroCalen As Integer
    Dim nEstadoCredTemp As Integer
    Set oCred = New COMDCredito.DCOMCredito
    Set R = oCred.RecuperaColocacCred(psCtaCod)
    nNroCalen = R!nNroCalen
    R.Close
    Set R = Nothing
    Set R = oCred.RecuperaProducto(psCtaCod)
    nEstadoCredTemp = R!nPrdEstado
    R.Close
    Set R = Nothing
    Set oCred = Nothing
    'END APRI
    
    sMovNro = oBase.GeneraMovNro(pdFecha, psAgeCod, psUser)
    Call oBase.InsertaMov(sMovNro, gCredPagoCuotasLiqCredSegDes, "Liquidación con el seg. degravamen de crédito Nº " & psCtaCod, gMovEstContabMovContable, gMovFlagVigente)
    nMovNro = oBase.GetnMovNro(sMovNro)
    'MARG ERS073********
    pnMovNro = nMovNro
    'END MARG***********
    'Pago del Crédito ************************************
    bExitoPagoCredito = PagarLiquidacionCredSegDes(oBase, lsImpreBoletaCred, psCtaCod, pnMontoPago, pnITF, psAgeCod, psNomAge, psUser, pdFecha, nMovNro, pArrDistMontos, pnTipoPago, _
                        psNroDoc, psLpt, psInstCmac, pbImpTMU, pArrDocRec, pMovNroRVD)
    
    'FInalizacion Liquidacion
    If bExitoPagoCredito Then
        oBase.GestionSiniestrorLiquidacionReg pnIdSiniestro, pnIdRegAtencion, psCtaCod, nMovNro, psNroDoc, pnMontoPago, pnMontoDevolucion, pdFecha
        
         'APRI20171205 ERS028-2017
        If CCur(pArrDistMontos(4)) > 0 Then
             oBase.dInsertMovCol nMovNro, "906000", psCtaCod, CLng(nNroCalen), CCur(pArrDistMontos(4)), 0, "", 0, 0#, nEstadoCredTemp, False
             oBase.dInsertMovColDet nMovNro, "906000", psCtaCod, CLng(nNroCalen), 5500, 0, CCur(pArrDistMontos(4)), False
        End If
        'END APRI
        
        oBase.dCommitTrans
        bTransac = False
        psImpreBoleta = psImpreBoleta & lsImpreBoletaCred
    Else
        If bTransac Then
            GrabarLiquidacionCredSegDes = "Ocurrió un error al procesar el Pago del crédito " & psCtaCod
            oBase.dRollbackTrans
            Set oBase = Nothing
        End If
    End If
    
    Set oBase = Nothing
    Exit Function
ErrGrabarLiquidacionCredSegDes:
    GrabarLiquidacionCredSegDes = "Ocurrió un error al procesar los Pagos de cuota del crédito " & psCtaCod & ". Error " & Err.Number & " - " & Err.Description
    If bTransac Then
        Call oBase.dRollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Pago Automatico de Créditos", Err.Description
End Function

Private Function PagarLiquidacionCredSegDes(ByVal poConnBase As COMDCredito.DCOMCredActBD, ByRef psImpreBoleta As String, ByVal psCtaCod As String, ByVal pnImporteCobrado As Double, _
                                              ByVal pnITF As Double, ByVal psCodAge As String, ByVal psNomAge As String, ByVal psCodUser As String, _
                                              ByVal pdFecha As Date, ByVal pnMovNro As Long, ByVal pArrDistMontos As Variant, ByVal pnTipoPago As Integer, _
                                              ByVal psNroDoc As String, ByVal psLpt As String, ByVal psInstCmac As String, ByVal pbImpTMU As Boolean, _
                                              Optional ByVal pArrDocRec As Variant = Nothing, Optional ByVal pMovNroRVD As Variant = Nothing) As Boolean

    Dim rsPers As ADODB.Recordset
    Dim rsCredVig As ADODB.Recordset
    Dim sAgencia As String
    Dim nDiasAtraso As Integer
    Dim nGastos As Double
    Dim nMonPago As Double
    Dim nMora As Double
    Dim nCuotasMora As Integer
    Dim nTotalDeuda As Currency
    Dim nInteresDesagio As Double
    Dim nMonCalDin As Double
    Dim sMensaje As String
    Dim cNomCliente As String
    Dim nNewSalCap As Double
    Dim nNewCPend As Integer
    Dim dProxFec As Date
    Dim sEstado As String
    Dim sMetodoLiq As String

    Dim cMoneda As String
    Dim bRfa As Boolean
    Dim nCuotaPendiente As Integer
    Dim nMoraCalculada As Double
    Dim dFechaVencimiento As Date
    Dim sImpreBoleta As String
    Dim bValorProceso As Boolean
    Dim nMonIntGra As Double
    Dim nIntPendiente As Double
    Dim nIntPendientePagado As Double
    Dim bPrepago As Boolean
    Dim nCalendDinamico As Integer
    Dim bCalenDinamic As Boolean
    Dim bCalenCuotaLibre As Boolean
    Dim nMivivienda As Integer
    Dim nCalPago As Integer
    Dim sPersCod As String
    Dim sOperacion As String
    Dim bExoneradaLavado As Boolean
    Dim bOperacionEfectivo As Boolean
    Dim nMontoLavDinero As Double
    Dim nTC As Double
    Dim nMontoPago As Double
    Dim nITF As Double, nITFTmp As Double
    Dim nCalendDinamTipo As Integer
    Dim nNroTransac As Integer
    Dim nPrestamo As Double
    Dim bCuotaCom As Integer
    Dim bRecepcionCmact As Boolean
    Dim sPersCmac As String
    
    Dim i As Integer
    Dim nIntComp As Currency
    Dim nIntMora As Currency
    Dim nGastosCal As Currency
    
    Dim bMIVIVIENDAAnt As Boolean
    
    Dim lsSaltoLin As String
    lsSaltoLin = Chr$(10)
On Error GoTo ErrorPagarCuota

    PagarLiquidacionCredSegDes = False
    nInteresDesagio = 0
    
    Call CargaDatosPagoCuotas(psCtaCod, pdFecha, bPrepago, psCodAge, rsCredVig, sAgencia, nCalendDinamico, bCalenDinamic, bCalenCuotaLibre, _
                                nMivivienda, nCalPago, nGastos, nMonPago, nMora, nCuotasMora, nTotalDeuda, nInteresDesagio, _
                                nMonCalDin, sMensaje, sPersCod, sOperacion, bExoneradaLavado, bRfa, rsPers, bOperacionEfectivo, nMontoLavDinero, nTC, _
                                nMontoPago, nITF, nIntPendientePagado, nNewSalCap, nNewCPend, dProxFec, sEstado, nCuotaPendiente, nMoraCalculada, dFechaVencimiento)

    If Not rsCredVig.EOF Then
        sMetodoLiq = Trim(rsCredVig!cMetLiquidacion)
        nCalendDinamTipo = rsCredVig!nCalendDinamTipo
        cNomCliente = rsCredVig!cPersNombre
        nIntPendiente = IIf(IsNull(rsCredVig!nIntPend), 0, rsCredVig!nIntPend)
        nIntPendientePagado = 0
        nNroTransac = IIf(IsNull(rsCredVig!nTransacc), 0, rsCredVig!nTransacc)
        cMoneda = Trim(rsCredVig!cMoneda)
        nDiasAtraso = CInt(rsCredVig!nDiasAtraso)
        bMIVIVIENDAAnt = EsCredMIVIVENDA(rsCredVig!cTpoProdCod, rsCredVig!cTpoCredCod)

        nIntComp = CCur(pArrDistMontos(1)) 'Int Comp.
        nIntMora = CCur(pArrDistMontos(2)) 'Mora
        nGastosCal = CCur(pArrDistMontos(3)) 'Gastos


        For i = 0 To UBound(pMatCalend) - 1
            If CInt(pMatCalend(i, 2)) = 0 Then
                'Interes Compensatorio
                If nIntComp = 0 Then
                    pMatCalend(i, 4) = 0
                Else
                    If CCur(pMatCalend(i, 4)) > nIntComp Then
                        pMatCalend(i, 4) = nIntComp
                        nIntComp = 0
                    Else
                        nIntComp = nIntComp - CCur(pMatCalend(i, 4))
                        If nIntComp < 0 Then nIntComp = 0
                    End If
                End If
    
                'Interes Moratorio
                If nIntMora = 0 Then
                    pMatCalend(i, 6) = 0
                Else
                    If CCur(pMatCalend(i, 6)) > nIntMora Then
                        pMatCalend(i, 6) = nIntMora
                        nIntMora = 0
                    Else
                        nIntMora = nIntMora - CCur(pMatCalend(i, 6))
                        If nIntMora < 0 Then nIntMora = 0
                    End If
                End If
    
                'Gastos
                If nGastosCal = 0 Then
                    pMatCalend(i, 9) = 0
                Else
                    If CCur(pMatCalend(i, 9)) > nGastosCal Then
                        pMatCalend(i, 9) = nGastosCal
                        nGastosCal = 0
                    Else
                        nGastosCal = nGastosCal - CCur(pMatCalend(i, 9))
                        If nGastosCal < 0 Then nGastosCal = 0
                    End If
                End If
    
                'Calendario
                pMatCalend(i, 5) = 0
                pMatCalend(i, 7) = 0
                pMatCalend(i, 8) = 0
                pMatCalend(i, 11) = 0
            End If
        Next i
        pMatCalendTmp = pMatCalend

        sMetodoLiq = "GMIC"
        
        nITFTmp = pnITF
        bValorProceso = ActualizaMontoPago(pnImporteCobrado, nTotalDeuda, psCtaCod, pdFecha, sMetodoLiq, nIntPendiente, nIntPendientePagado, bCalenCuotaLibre, bCalenDinamic, bPrepago, pnImporteCobrado, _
                nMonCalDin, sMensaje, pnITF, nInteresDesagio, nNewSalCap, nNewCPend, dProxFec, sEstado, nMonIntGra, , , , , , , , , , True, , , True) 'GEMO20200801
                
        pnITF = nITFTmp
        bValorProceso = True
        If bValorProceso Then
            If Trim(pArrDocRec(0)) = "" Then
                ReDim pArrDocRec(3)
                pArrDocRec(0) = "47"
                pArrDocRec(1) = ""
                pArrDocRec(2) = "01"
                pArrDocRec(3) = ""
            End If
            
            Call GrabarPagoCuotas(psCtaCod, IIf(bMIVIVIENDAAnt = True, 1, 0), nCalPago, pnImporteCobrado, _
                             pdFecha, sMetodoLiq, pnTipoPago, psCodAge, psCodUser, "109", psNroDoc, _
                             bRecepcionCmact, sPersCmac, nIntPendiente, nIntPendientePagado, bPrepago, "", pnITF, _
                             nInteresDesagio, nTotalDeuda, bCalenDinamic, nMonCalDin, nCalendDinamTipo, psNomAge, CInt(Mid(psCtaCod, 6, 3)), _
                             cNomCliente, cMoneda, nNroTransac, "", psLpt, psInstCmac, IIf(pnTipoPago = 2, True, False), _
                             psNroDoc, "", "", psImpreBoleta, nDiasAtraso, , pbImpTMU, , , , , , pnMovNro, Trim(rsCredVig!cAgeCodAct), Trim(rsCredVig!cTpoProdCod), Trim(rsCredVig!cTpoCredCod), , poConnBase, , , , , _
                             CInt(pArrDocRec(0)), CStr(pArrDocRec(1)), pArrDocRec(2), pArrDocRec(3), pMovNroRVD)
                             
        If pbImpTMU Then
            psImpreBoleta = Trim(Replace(psImpreBoleta, String(10, lsSaltoLin) & Chr(27) & "m" & Chr(10), ""))
            psImpreBoleta = psImpreBoleta & String(7, "*") & " LIQUIDACIÓN DE CREDITO  " & String(7, "*") & lsSaltoLin
            psImpreBoleta = psImpreBoleta & String(7, "*") & " CON EL SEG. DESGRAVAMEN " & String(7, "*")
            psImpreBoleta = psImpreBoleta & String(10, lsSaltoLin) & Chr(27) & "m" & Chr(10)
        Else
            psImpreBoleta = psImpreBoleta & String(7, "*") & " LIQUIDACIÓN DE CREDITO  " & String(7, "*") & Space(12) & String(7, "*") & " LIQUIDACIÓN DE CREDITO  " & String(7, "*") & lsSaltoLin
            psImpreBoleta = psImpreBoleta & String(7, "*") & " CON EL SEG. DESGRAVAMEN " & String(7, "*") & Space(12) & String(7, "*") & " CON EL SEG. DESGRAVAMEN " & String(7, "*") & lsSaltoLin
        End If
                            
        PagarLiquidacionCredSegDes = True
        End If
    Else
        PagarLiquidacionCredSegDes = False
    End If
    
    Set rsPers = Nothing
    Set rsCredVig = Nothing
    Exit Function
ErrorPagarCuota:
    PagarLiquidacionCredSegDes = False
    Err.Raise Err.Number, "Error En Pago Automatico de Créditos", Err.Description
End Function
'WIOR FIN ********
'EJVG20160512 ***
Public Function EsAmpliado(ByVal psCtaCod As String) As Boolean
    Dim oAmpliadoVal As New COMDCredito.DCOMAmpliacion
    On Error GoTo ErrEsAmpliado
    EsAmpliado = oAmpliadoVal.ValidaCreditoaAmpliar(psCtaCod)
    Set oAmpliadoVal = Nothing
    Exit Function
ErrEsAmpliado:
    Err.Raise Err.Number, "Error En Proceso <ErrEsAmpliado>", Err.Description
End Function
'END EJVG *******

'WIOR 20160621 ***
Public Function SobreEndAutorizarDesbloq(ByVal psCtaCod As String, ByVal pnId As Long, ByVal pMatCodigos As Variant, ByVal pdFechaReg As Date, ByVal pcUserReg As String, ByVal psCargo As String) As Boolean
Dim oCredito As COMDCredito.DCOMCredito
Dim i As Integer
Dim nIdRegAtencion As Long

On Error GoTo ErrorSobreEndAutorizarDesbloq

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Desbloqueo de Codigos
If Trim(pMatCodigos(0, 0)) <> "" Then
    If IsArray(pMatCodigos) Then
        For i = 0 To UBound(pMatCodigos, 2)
            Call oCredito.SobreEndRegistrarAutCodigos(pnId, pMatCodigos(0, i), pMatCodigos(1, i), pMatCodigos(2, i), pdFechaReg, pcUserReg, psCargo)
        Next i
    End If
End If

'Regular el estado
Call oCredito.SobreEndRegularEstado(psCtaCod)

oCredito.CommitTrans
Set oCredito = Nothing
SobreEndAutorizarDesbloq = True

Exit Function
ErrorSobreEndAutorizarDesbloq:
oCredito.RollbackTrans
SobreEndAutorizarDesbloq = False
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'WIOR FIN ********

'-----------------------------------------------------------------------------------------------------------------
'************************************* Inicio--> LUCV 20160516 - ERS2016-004 *************************************
'-----------------------------------------------------------------------------------------------------------------
Public Function GrabarAprobacionVigenciaRefinanciar(ByVal psCtaCod As String, _
                                                    ByVal pnEstado As ColocEstado, _
                                                    ByVal pdEstado As Date, _
                                                    ByVal pnNroTransac As Long, _
                                                    ByVal psLineaCred As String, _
                                                    ByVal pnTasa As Double, _
                                                    ByVal pnMonto As Double, _
                                                    ByVal pnNroCuotas As Integer, _
                                                    ByVal pnPlazo As Integer, _
                                                    ByVal pnTipoCuota As ColocTipoCalend, _
                                                    ByVal pnDiaFijo As Integer, _
                                                    ByVal pnProxMes As Integer, _
                                                    ByVal pnTipoDesemb As ColocTiposDesembolso, _
                                                    ByVal pnCalendDinamico As Integer, _
                                                    ByVal pnGraciaSug As Integer, _
                                                    ByVal pnTasaGracia As Double, _
                                                    ByVal pnTipoGracia As ColocTiposGracia, _
                                                    ByVal nNroCalend As Integer, ByRef psError As String, ByRef psMensaje As String, ByRef psImprimeDoc As String, _
                                                    ByVal psCodAge As String, ByVal psCodUser As String, ByVal psNomAge As String, ByVal psNomCmac As String, ByVal psInstCmac As String, ByVal psCodCMAC As String, _
                                                    Optional ByVal lnDescripCuota As Variant = "", Optional pbRefinanc As Boolean = False, _
                                                    Optional pbCapitalInter As Boolean = False, _
                                                    Optional ByVal psTipoGasto As String = "F", _
                                                    Optional ByVal pnDiaFijo2 As Integer = 0, Optional ByVal pnIncremCapital As Integer = -1, _
                                                    Optional ByVal pbGraciaEnCuotas As Integer = -1, Optional ByVal psPersCod As String = "") As String



'*********************************
'Variables locales declaradas por LUCV
'***********************************
Dim oDCredito As COMDCredito.DCOMCredActBD
Dim R As ADODB.Recordset
Dim RRef As ADODB.Recordset
Dim i As Integer
Dim nMontoReservado As Double
Dim bTransac As Boolean
Dim MatCredRef As Variant
Dim MatCredRefTempo As Variant
Dim MatCalend As Variant
Dim oCredito As COMDCredito.DCOMCredito
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim sMovNro As String
Dim nMovNro As Long
'*****************fin lucv***********

Dim oNCredDoc As COMNCredito.NCOMCredDoc
Dim oCal As COMDCredito.DCOMCalendario
Dim nDCred As COMDCredito.DCOMCredito
Dim oNCredito As COMNCredito.NCOMCredito
Dim loMov As COMDMov.DCOMMov

Dim Docs As Variant
Dim sError As String
Dim MatGastos As Variant

Dim nNumDias As Integer
Dim dUltimaFecdes As Date
Dim dProxFecDes As Date

Dim sSql As String
Dim oCon As COMConecta.DCOMConecta

'**********
Dim lsTpoProdCod As String
Dim lsTpoCredCod As String
'**********

On Error GoTo ERRORGrabarAprobacionVigenciaRefinanciar
Dim oGen As COMDConstSistema.DCOMGeneral
Set oGen = New COMDConstSistema.DCOMGeneral
nNumDias = oGen.LeeConstSistema(79)
Set oGen = Nothing

Set oCal = New COMDCredito.DCOMCalendario
Set R = oCal.RecuperaCalendarioDesemb(psCtaCod)
Set oCal = Nothing
dUltimaFecdes = CDate("01/01/1900")
    If R.BOF Then
        psMensaje = "No existe calendario de desembolsos grabado"
        Exit Function
    Else
        R.MoveFirst
        If R.RecordCount > 1 Then 'Parciales
            'Sacar el menor pendiente
            Do While Not R.EOF
                If R!ncoloccalendestado = 0 Then
                    dProxFecDes = R!dVenc
                    Exit Do
                ElseIf R!ncoloccalendestado = 1 Then
                    dUltimaFecdes = R!dPago
                End If
                R.MoveNext
            Loop
        Else
            dUltimaFecdes = R!dVenc
        End If
        R.MoveFirst
    End If

    Do While Not R.EOF
        If R!ncoloccalendestado = 0 Then 'Si es pendiente
            If dUltimaFecdes = R!dPago Then
                psMensaje = "No Se puede Realizar dos Desembolsos el Mismo Dia al mismo Credito "
                'R.Close
                Exit Function
            End If
        Else
            dUltimaFecdes = CDate(Format(R!dPago, "dd/mm/yyyy"))
        End If
        R.MoveNext
    Loop

'****Referencia: Proceso del Desembolso******
Set nDCred = New COMDCredito.DCOMCredito
    Set R = nDCred.RecuperaColocaciones(psCtaCod)
        If Not R.EOF Or Not R.EOF Then
            lsTpoProdCod = IIf(IsNull(R!cTpoProdCod), 0, R!cTpoProdCod)
            lsTpoCredCod = IIf(IsNull(R!cTpoCredCod), 0, R!cTpoCredCod)
        End If
Set nDCred = Nothing
'*******************************************

'Validar que se ha Autorizado el credito
sSql = "SELECT cCtaCod FROM CredAprobacion WHERE cCtaCod='" & psCtaCod & "' AND ISNULL(cCodUsu,'')=''"
Set oCon = New COMConecta.DCOMConecta
oCon.AbreConexion
 Set R = oCon.CargaRecordSet(sSql)
    If Not R.EOF Then
        psMensaje = "El Credito no esta Autorizado"
        oCon.CierraConexion
        Set oCon = Nothing
        Exit Function
    End If
  oCon.CierraConexion
  Set oCon = Nothing
  
  psError = AprobacionVigenciaRefinanciar(psCtaCod, _
                                            pnEstado, _
                                            pdEstado, _
                                            nMovNro, _
                                            pnNroTransac, _
                                            psLineaCred, _
                                            pnTasa, _
                                            pnMonto, _
                                            pnNroCuotas, _
                                            pnPlazo, _
                                            pnTipoCuota, _
                                            pnDiaFijo, _
                                            pnProxMes, _
                                            pnTipoDesemb, _
                                            pnCalendDinamico, _
                                            pnGraciaSug, _
                                            pnTasaGracia, _
                                            pnTipoGracia, _
                                            nNroCalend, lnDescripCuota, Mid(psCtaCod, 4, 2), _
                                            lsTpoProdCod, lsTpoCredCod, pbRefinanc, _
                                            pbCapitalInter, psCodAge, psCodUser, _
                                            psTipoGasto, pnDiaFijo2, pnIncremCapital, _
                                            pbGraciaEnCuotas, psPersCod)
                                        
    If psError <> "" Then
        Exit Function
    End If
    
    'ImprimeDocumentosRefinanciados
    Set oNCredDoc = New COMNCredito.NCOMCredDoc
    Docs = oNCredDoc.ImprimeDocumentosDesembolso(psCtaCod, nMovNro, psNomAge, _
                                                 psCodUser, pdEstado, , , , , , , , , , , , , , , , psNomCmac, _
                                                 psInstCmac, psCodCMAC, 0, 0, , , , , , , IIf(pbRefinanc = True, 1, -1))
                                                 'pnMontoITF, pnMontoPoliza)
    Set oNCredDoc = Nothing
     Dim lsDoc As String
     lsDoc = ""
     For i = 0 To UBound(Docs) '- 1
        'CTI3
        If Docs(i, 0) = "1" Then 'Para Papel Tamaño CARTA
                'lsDoc = lsDoc & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
                lsDoc = lsDoc & Chr$(27) & Chr$(67) & Chr$(66)   'Longitud de página a 22 líneas'
                'lsDoc = lsDoc & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
                'lsDoc = lsDoc & Chr$(27) + Chr$(107) + Chr$(0) 'Tipo de Letra Sans Serif
                'lsDoc = lsDoc & Chr$(27) + Chr$(18)  ' cancela condensada
                'lsDoc = lsDoc & Chr$(27) + Chr$(72)  ' desactiva negrita
            lsDoc = lsDoc & Docs(i, 1)
        End If
        If Docs(i, 0) = "2" Then 'Para Papel Tamaño CARTA
                'lsDoc = lsDoc & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
                lsDoc = lsDoc & Chr$(27) & Chr$(67) & Chr$(66)   'Longitud de página a 22 líneas'
                'lsDoc = lsDoc & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
                'lsDoc = lsDoc & Chr$(27) + Chr$(107) + Chr$(0) 'Tipo de Letra Sans Serif
                'lsDoc = lsDoc & Chr$(27) + Chr$(18)  ' cancela condensada
                'lsDoc = lsDoc & Chr$(27) + Chr$(72)  ' desactiva negrita
            lsDoc = lsDoc & Docs(i, 1)
        End If
     Next i
    psImprimeDoc = lsDoc
'
'    psImpreDocsBoleta = ""
'    For i = 0 To UBound(Docs) - 1
'      If Docs(i, 0) = "1" Then 'Para Boleta
'          psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
'          psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(67) & Chr$(22)   'Longitud de página a 22 líneas'
'          psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
'          psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(107) + Chr$(0)      'Tipo de Letra Sans Serif
'          psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(18)  ' cancela condensada
'          psImpreDocsBoleta = psImpreDocsBoleta & Chr$(27) + Chr$(72)  ' desactiva negrita
'          psImpreDocsBoleta = psImpreDocsBoleta & Docs(i, 1)
'    End If
'    Next i
'
'    Dim oCap As COMNCaptaGenerales.NCOMCaptaMovimiento
'    Set oCap = New COMNCaptaGenerales.NCOMCaptaMovimiento
'    psImpreBoletaAbono = ""
'    psImpreBoletaCancel = ""
'    psImpreBoletaGasto = ""
'
'    If psctaAho = "" Then psctaAho = MatDatosAho(0)
'    Set oCap = Nothing
'    Dim clsImp As COMNCaptaGenerales.NCOMCaptaImpresion
'    Dim sBoletaLavDinero As String

Exit Function
ERRORGrabarAprobacionVigenciaRefinanciar:
    Err.Raise Err.Number, "Error En Proceso VigenciaCreditosRefinanciar", Err.Description
End Function

Public Function AprobacionVigenciaRefinanciar(ByVal psCtaCod As String, _
                                            ByVal pnEstado As ColocEstado, _
                                            ByVal pdEstado As Date, _
                                            ByRef pnMovNro As Long, _
                                            ByVal pnNroTransac As Long, _
                                            ByVal psLineaCred As String, _
                                            ByVal pnTasa As Double, _
                                            ByVal pnMonto As Double, _
                                            ByVal pnNroCuotas As Integer, _
                                            ByVal pnPlazo As Integer, _
                                            ByVal pnTipoCuota As ColocTipoCalend, _
                                            ByVal pnDiaFijo As Integer, _
                                            ByVal pnProxMes As Integer, _
                                            ByVal pnTipoDesemb As ColocTiposDesembolso, _
                                            ByVal pnCalendDinamico As Integer, _
                                            ByVal pnGraciaSug As Integer, _
                                            ByVal pnTasaGracia As Double, _
                                            ByVal pnTipoGracia As ColocTiposGracia, _
                                            ByVal nNroCalend As Integer, Optional ByVal lnDescripCuota As Variant = "", Optional ByVal psAgeCodAct As String = "", _
                                            Optional ByVal psTpoProdCod As String = "", Optional ByVal psTpoCredCod As String = "", Optional pbRefinanc As Boolean = True, _
                                            Optional pbCapitalInter As Boolean = False, Optional ByVal psCodAge As String = "", Optional ByVal psCodUsu As String = "", _
                                            Optional ByVal psTipoGasto As String = "F", Optional ByVal pnDiaFijo2 As Integer = 0, Optional ByVal pnIncremCapital As Integer = -1, _
                                            Optional ByVal pbGraciaEnCuotas As Integer = -1, Optional ByVal psPersCod As String = "") As String
'**************************************
'Variables Locales para  Refinanciados
'***************************************
Dim oDCredito As COMDCredito.DCOMCredActBD
Dim R As ADODB.Recordset
Dim RRef As ADODB.Recordset
Dim i As Integer
Dim nMontoReservado As Double
Dim bTransac As Boolean
Dim MatCredRef As Variant
Dim MatCredRefTempo As Variant
Dim MatCalend As Variant
Dim oCredito As COMDCredito.DCOMCredito
Dim oFunciones As COMNContabilidad.NCOMContFunciones
Dim sMovNro As String
Dim nMovNro As Long
Dim nMontoRefTmp As Double
Dim nMontoRefTmpCapital As Double
Dim nMontoRefTmpInteres As Double
Dim nMontoRefTmpInterSusp As Double
Dim nMontoRefTmpGastosSusp As Double
Dim nMontoRefTmpNew As Double
Dim nMontoRefTmpCapitalNew As Double
Dim nMontoRefTmpInteresNew As Double
Dim nMontoRefTmpInterSuspNew As Double
Dim nMontoRefTmpGastosSuspNew As Double
Dim nMontoRefTempo As Double

Dim oGeneral As COMDConstSistema.DCOMGeneral
Dim nEstadCredRef As Integer
Dim sConsCred As String
Dim sConsCred2 As String
Dim nTipoCambioFijo As Double
Dim nIntSuspTot As Double
Dim nGastoSuspTot As Double

Dim MatrizMatCredRef() As Variant
Dim MatrizGastosCredRef() As Variant
Dim MatrizGastosCredRefTempo As Variant
Dim MatrizGastosCredGrp As Variant
Dim k As Integer

Dim nEstado As Integer
Dim sCadCtaGastoTemp As String
Dim sSql As String
Dim D As COMConecta.DCOMConecta
Dim nRefin As Integer
Dim nNivApr As Integer
Dim oLeasing As COMDCredito.DCOMleasing
Dim RAval As ADODB.Recordset
Dim nPrestamo As Double
Dim bReprogRoyaAmarilla As Boolean
Dim nMovNroReversionReprog As Long
Dim RReprog As ADODB.Recordset
Dim nCapitalCtaCodRef As Double
Dim sTpoCredCodRef, sTpoCredCod As String


Dim dFecVigRef As Date
Dim bReprogDesNat As Boolean
Dim nMovNroReversionReprogDesNat As Long
Dim nCapitalCtaCodRefDesNat As Double
Dim lnInteresDiferido As Currency
Dim lnInteresDiferidoCA As Currency

Dim nIntDiferido As Double
Dim sOpeTrasIntDif As String
nIntDiferido = 0
sOpeTrasIntDif = ""

Dim bReprogZonaInundada As Boolean 'PASI 20170328 ****************************************
Dim nMovNroReversionReprogZonaInundada As Long 'PASI 20170328 ****************************************
Dim nCapitalCtaCodRefZonaInundada As Double 'PASI 20170328 ****************************************

Dim lvGravamen() As tGarantiaGravamen
Dim lsTpoProdCod As String
Dim iMat As Integer
  
nIntSuspTot = 0
nGastoSuspTot = 0
bTransac = False
'******** Variables Locales refinanciados ********

'************************************************** COPIADO DEL PROCESO DEL DESEMBOLSO *************************************************************
'Dim R As ADODB.Recordset
'Dim oCredito As COMDCredito.DCOMCredito
Dim oBase As COMDCredito.DCOMCredActBD
Dim oLinea As COMDCredito.DCOMLineaCredito
Dim oCalend As NCOMCalendario
Dim oDCalend As COMDCredito.DCOMCalendario
Dim oGastos As NCOMGasto
Dim sLineaCod As String
Dim MatCalendPagos As Variant
Dim MatCalendPagos_2 As Variant
Dim MatGracia As Variant
Dim nPeriodoGracia As Integer
Dim nTasaInteres As Double
Dim nNroCalen As Integer
Dim nNroProxDesemb As Integer
Dim nCuotaCom As Integer
Dim nMiViv As Integer
Dim nDatoViviendaRef As Integer

Dim MatGastos As Variant
Dim MatDesemb() As String
Dim ContDesemb As Integer
Dim nNumGastos As Integer
Dim nNumTransac As Long

Dim nMovNroAnt As Long
Dim nConsCred As String
'Dim bTransac As Boolean
Dim MatDesParcial As Variant

'Dim nTramoConsTasa As Double
Dim nMontoGarantia As Double
Dim oGar As COMDCredito.DCOMGarantia
Dim nCuotaTemp As String
Dim dFecTran As Date

'Para Cancelacion de Creditos
Dim MatCalendTemp As Variant
Dim MatCalendDistrTemp As Variant
Dim sMetLiqTmp As String
Dim RTmp As ADODB.Recordset
Dim MatRSCancel() As ADODB.Recordset
Dim MatRSCancelCalPend() As Variant
Dim RCalendActual As ADODB.Recordset
Dim RCalendDesembActual As ADODB.Recordset
Dim RColocCalendDesembActual As ADODB.Recordset

'Para Apertura de Cuenta de Ahorros
Dim sTipoGasto As String
Dim sConsAhoRetGas As String
Dim sConsAhoRetCan As String
Dim bAmpliado As Boolean
Dim oAmpliado As COMDCredito.DCOMAmpliacion

Dim sEstadoCreditoParcial As String
Dim oDCred As COMDCredito.DCOMCredito
Dim nDias As Integer
Dim nPeriodo As Integer
'Dim sSql As String

Dim lnCuotaBalon As Integer
Dim nMontoGra As Double
Dim nDatoVivienda As Integer
Dim oCred As COMDCredito.DCOMCredito
Dim RGar As ADODB.Recordset

'*****Poliza
Dim nPolizaBF As Integer
Dim dFechaPBF As Date
'*****
Dim MatCalendSegDes As Variant
ReDim MatCalendSegDes(4, 0)

Dim pnMontoMivivienda As Currency
Dim pnCuotaMivivienda As Integer
Dim nCondicionCred As Integer 'LUCV20180601, Según ERS022-2018

On Error GoTo ErrorAprobacionVigenciaRefinanciar
        '*****Poliza
        Set oCred = New COMDCredito.DCOMCredito
        Set RGar = New ADODB.Recordset
        Set RGar = oCred.RecuperaGarantiasCredito(psCtaCod)
        If RGar!nPolizaBF = 1 Then
            nPolizaBF = 1
            dFechaPBF = Format(RGar!dFechaPBF)
        Else
            nPolizaBF = 0
            dFechaPBF = "01/01/1900"
        End If
        Set oCred = Nothing
        ' Fin Poliza *****
        
        Dim sMensFecAprob As String
        sMensFecAprob = DevolverFechaAprobacion(psCtaCod)
        
        'Estado del Credito
        Set oDCred = New COMDCredito.DCOMCredito
        sEstadoCreditoParcial = CStr(oDCred.RecuperaEstadoCredito(psCtaCod))
        Set oDCred = Nothing

        'Valida Datos Antes de Pasar a Vigencia
        AprobacionVigenciaRefinanciar = ValidaGrabarDesembolso(psCtaCod, pnMonto)
        If AprobacionVigenciaRefinanciar <> "" Then
          Exit Function
        End If
        
        'Colocaciones
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocaciones(psCtaCod)
        sLineaCod = R!cLineaCred
        pnMontoMivivienda = IIf(IsNull(R!nMontoMiVivienda), 0, R!nMontoMiVivienda)
        pnCuotaMivivienda = IIf(IsNull(R!nCuotaPolizaMivivienda), 0, R!nCuotaPolizaMivivienda)
        R.Close
        Set R = Nothing
        
        nMontoGra = 0
        'ColocacEstado
        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        sTipoGasto = R!cTipoGasto
        If R.RecordCount <> 0 Then
            If R!nTipoGracia = 6 Then nMontoGra = MontoIntPerDias(R!nTasaGracia, R!nPeriodoGracia, pnMonto)
        End If
        R.Close
        Set R = Nothing
        
        'Recupera Producto
        Set R = oCredito.RecuperaProducto(psCtaCod)
        nTasaInteres = Format(R!nTasaInteres, "#0.0000")
        nNumTransac = IIf(IsNull(R!nTransacc), 0, R!nTransacc)
        R.Close
        Set R = Nothing
        
        'Recupera ColocacCred
        Set R = oCredito.RecuperaColocacCred(psCtaCod)
        nNroCalen = R!nNroCalen
        nNroProxDesemb = R!nNroProxDesemb
        'sMetLiquid = R!cMetLiquidacion
        nCuotaCom = R!bCuotaCom
        nMiViv = R!bMiVivienda
        lnCuotaBalon = IIf(IsNull(R!nCuotaBalon), 0, R!nCuotaBalon)
        nCondicionCred = IIf(IsNull(R!nColocCondicion), 0, R!nColocCondicion) 'LUCV20180601, Según ERS022-2018
        
        Dim nExoSegDes As Integer
            If R!nExoSeguroDes = 1 Then
            nExoSegDes = R!nExoSeguroDes
            End If
        R.Close
        Set R = Nothing
        Set oCredito = Nothing
        Set oBase = Nothing
        Set oBase = New COMDCredito.DCOMCredActBD
        
        'Recupera Calendario de Desembolsos
        ContDesemb = 0
        Set oDCalend = New COMDCredito.DCOMCalendario
        Set R = oDCalend.RecuperaCalendarioDesemb(psCtaCod)
        
        'Contador ContDesemb
        Do While Not R.EOF
            ContDesemb = ContDesemb + 1
            R.MoveNext
        Loop
        
        'Formateamos Campos -> dPago, dVenc, nCapital
        If ContDesemb > 0 Then
            ReDim MatDesemb(ContDesemb, 3)
            ContDesemb = 0
            R.MoveFirst
            Do While Not R.EOF
                ContDesemb = ContDesemb + 1
                If R!ncoloccalendestado = 1 Then
                    MatDesemb(ContDesemb - 1, 0) = Format(R!dPago, "dd/mm/yyyy")
                Else
                    MatDesemb(ContDesemb - 1, 0) = Format(R!dVenc, "dd/mm/yyyy")
                End If
                MatDesemb(ContDesemb - 1, 1) = Format(R!nCapital, "#0.00")
                MatDesemb(ContDesemb - 1, 2) = Format(R!dVenc, "dd/mm/yyyy")
                R.MoveNext
            Loop
        End If
        R.Close
        MatDesParcial = MatDesemb

        'Actualiza MatDesembolsos
        If ContDesemb > 1 Then
            For i = 0 To UBound(MatDesParcial) - 1
                If i = nNroProxDesemb - 1 Then
                    MatDesParcial(i, 0) = Format(pdEstado, "dd/mm/yyyy")
                Else
                    If i > nNroProxDesemb - 1 Then
                        MatDesParcial(i, 1) = "0.00"
                    End If
                End If
            Next i

        End If
        Set R = Nothing
        
        '*********************************************************************
        'Verificando si tiene un calendario de tipo Directores y Trabajadores
        '*********************************************************************
        Dim oCalendX As COMDCredito.DCOMCalendario
        Dim bQuincenal As Boolean
            Set oCalendX = New COMDCredito.DCOMCalendario
            bQuincenal = oCalendX.VerificaCalendQuincenal(psCtaCod)
            Set oCalendX = Nothing
        '*********************************************************************
        
        If pbRefinanc Then 'LUCV20160531
            Set RCalendActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplCuota)
            Set RCalendDesembActual = oDCalend.RecuperaColocCalendDet(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
            Set RColocCalendDesembActual = oDCalend.RecuperaColocCalendario(psCtaCod, nNroCalen, gColocCalendAplDesembolso)
            Set oDCalend = Nothing
        End If
        
        '*********************************************************************
        '-------------------- GENERACION DEL NUEVO CALENDARIO  --------------
        '*********************************************************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
        Set oCredito = Nothing
        If R!nColocCalendCod <> gColocCalendCodCL Then
            Set oCalend = New NCOMCalendario
            nPeriodoGracia = IIf(IsNull(R!nPeriodoGracia), 0, R!nPeriodoGracia)
                       
            If nPeriodoGracia > 0 Then
                MatGracia = oCalend.GeneraGracia(R!nTipoGracia, CDbl(Format(TasaIntPerDias(nTasaInteres, nPeriodoGracia) * pnMonto, "#0.00")), R!nCuotas)
            End If

            If ContDesemb > 1 Then
                Set oDCalend = New COMDCredito.DCOMCalendario
                    nDias = oDCalend.ObtenerDiasPeriodoParcial(psCtaCod, pdEstado)
                Set oDCalend = Nothing
                If nDias > 0 Then
                   nPeriodo = R!nPlazo - nDias
                Else
                   nPeriodo = R!nPlazo
                End If
            Else
                   nPeriodo = R!nPlazo
            End If
              
        '*********************************************************************
        'Generacion de la Matrix Calendario de Pagos
        '*********************************************************************
        '->***** LUCV20180601, Agregó según ERS022-2018
        nTasaSegDes = ObtenerTasaSeguroDesg(psCtaCod, pdEstado, nCantAfiliadosSegDes)
        
        Dim nMontoPoliza As Double
        Dim nTasaSegInc As Double
        Dim oNGasto As COMNCredito.NCOMGasto
        Set oNGasto = New COMNCredito.NCOMGasto
        nMontoPoliza = 0

        nMontoPoliza = oNGasto.RecuperaMontoPoliza(psCtaCod, _
                                                   CInt(R!nCuotas), _
                                                   gColocConceptoCodGastoPolizaIncendioHipoteca, _
                                                   nTasaSegInc, _
                                                   IIf(nCondicionCred = "3", True, False))
        '<-***** Fin LUCV20180601
        
        MatCalendPagos = oCalend.GeneraCalendario(pnMonto, nTasaInteres, R!nCuotas, _
                                                    nPeriodo, pdEstado, DameTipoCuota(R!nColocCalendCod), _
                                                    DameTipoPeriodo(R!nColocCalendCod), IIf(IsNull(R!nTipoGracia), 0, R!nTipoGracia), _
                                                    nPeriodoGracia, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), _
                                                    IIf(R!nProxMes = 0, False, True), MatGracia, True, _
                                                    IIf(nCuotaCom = 1, True, False), IIf(ContDesemb > 1, True, False), MatDesParcial, , , _
                                                    bQuincenal, IIf(IsNull(R!bGraciaEnCuotas), False, _
                                                    R!bGraciaEnCuotas), IIf(IsNull(R!nTasaGracia), 0, R!nTasaGracia), _
                                                    IIf(IsNull(R!nPeriodoFechaFija2), 0, R!nPeriodoFechaFija2), , , psCtaCod, _
                                                    sMensFecAprob, lnDescripCuota, nMontoGra, "N", lnCuotaBalon, , , _
                                                    nTasaSegDes, MatCalendSegDes, nExoSegDes, nMontoPoliza, nTasaSegInc)
        'LUCV20180601, Agregó: psCtaCod, nTasaSegDes, MatCalendSegDes, nExoSegDes, nMontoPoliza, nTasaSegInc. Según ERS022-2018
        For i = 0 To UBound(MatCalendPagos) - 1
            MatCalendPagos(i, 4) = Format(CDbl(MatCalendPagos(i, 4)) + CDbl(MatCalendPagos(i, 11)), "#0.00")
        Next i
        nCuotaTemp = CDbl(MatCalendPagos(0, 2))
        Set oCalend = Nothing
        R.Close
        Set R = Nothing
        
        '*********************************************************************
        'Generacion De Gastos (MatGastos)
        '*********************************************************************
        Set oGar = New COMDCredito.DCOMGarantia
        nMontoGarantia = oGar.RecuperaMontoGarantiaCredito(psCtaCod)
        Set oGar = Nothing
        Set oGastos = New NCOMGasto
        MatGastos = oGastos.GeneraCalendarioGastos(MatCalendPagos, MatDesemb, nNumGastos, pdEstado, _
                                                    psCtaCod, 1, "DE", sTipoGasto, _
                                                    CDbl(MatCalendPagos(0, 2)), pnMonto, , , _
                                                    , , , , , , IIf(nPeriodo = 0, "2", "1"), _
                                                    nPeriodo, nExoSegDes, psAgeCodAct, psTpoProdCod, _
                                                    psTpoCredCod, pdEstado, , , , nPolizaBF, _
                                                    dFechaPBF, MatCalendSegDes, pnCuotaMivivienda)
        Set oGastos = Nothing
        
        '*********************************************************************
        'Para Cancelacion de Creditos
        '*********************************************************************
'        If nNroProxDesemb = 1 Then
'            Dim pMatCalendTmp As Variant
'            ReDim MatRSCancel(pnContMatCredCanc)
'            ReDim MatRSCancelCalPend(pnContMatCredCanc)
'            Set oCredito = New COMDCredito.DCOMCredito
'            Set RTmp = New ADODB.Recordset
'            For i = 0 To pnContMatCredCanc - 1
'                Set MatRSCancel(i) = oCredito.RecuperaDatosCreditoVigente(MatCredCanc(i, 0))
'                MatRSCancelCalPend(i) = RecuperaMatrizCalendarioPendiente(MatCredCanc(i, 0))
'            Next i
'            Set oCredito = Nothing
'        End If
        
        '*********************************************************************
        'INICIO DE TRANSACCION
        '*********************************************************************
        Call oBase.dBeginTrans
        'Actualiza la Saldos de Linea
        Set oLinea = New COMDCredito.DCOMLineaCredito
     If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
        
        'Nuevo Calendario de Desembolsos
        For i = 0 To ContDesemb - 1
            Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, i + 1, CDate(Format(MatDesemb(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Vigencia - Refinanciados", gColocCalendConceptoProcDesembolsado, False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, i + 1, gColocConceptoCodCapital, CDbl(MatDesemb(i, 1)), 0, "", False)
        Next i

        'Nuevos Gastos de Desembolsos
        For i = 0 To nNumGastos - 1
            If CInt(Trim(Right(MatGastos(i, 0), 10))) = gColocCalendAplDesembolso Then
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
            End If
        Next i
        
        '*********************************************************************
        'Para Desembolsos Parciales Actualizo del Calendario Anterior
        '*********************************************************************
        If nNroProxDesemb <> 1 Then 'ColoCalendario
            Do While Not RColocCalendDesembActual.EOF
                Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen + 1, RColocCalendDesembActual!nCuota, gColocCalendAplDesembolso, , RColocCalendDesembActual!ncoloccalendestado, , , False, , IIf(IsNull(RColocCalendDesembActual!dPago), CDate("01/01/1900"), RColocCalendDesembActual!dPago))
                RColocCalendDesembActual.MoveNext
            Loop
        End If
        RColocCalendDesembActual.Close
        
        If nNroProxDesemb <> 1 Then 'ColoCalendDet
            Do While Not RCalendDesembActual.EOF
                Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, RCalendDesembActual!nCuota, RCalendDesembActual!nPrdConceptoCod, , RCalendDesembActual!nMontoPagado, "", False)
                RCalendDesembActual.MoveNext
            Loop
        End If
        RCalendDesembActual.Close
        '***************************** Fin ***********************************

        '*********************************************************************
        'Nuevo Calendario de PAGOS
        '*********************************************************************
        For i = 0 To UBound(MatCalendPagos) - 1
            Call oBase.dInsertColocCalendario(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, CDate(Format(MatCalendPagos(i, 0), "dd/MM/yyyy")), gColocCalendEstadoPendiente, "Calendario de Pagos - Vigencia Refinanciado", gColocCalendConceptoProcDesembolsado, False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodCapital, CDbl(MatCalendPagos(i, 3)), 0, "", False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompensatorio, CDbl(MatCalendPagos(i, 4)), 0, "", False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresMoratorio, 0, 0, "", False)
            Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresCompVencido, 0, 0, "", False)
            If CDbl(MatCalendPagos(i, 5)) > 0 Then
                Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, i + 1, gColocConceptoCodInteresGracia, CDbl(MatCalendPagos(i, 5)), 0, "", False)
            End If
        Next i
                
        'RIRO 20200829 ******* Liquidación ***
        Dim nLiquidacion As Long
        nLiquidacion = -1
        oBase.RegistraLiquidacion psCtaCod, psCodUsu, pnMovNro, nLiquidacion, MatCalendPagos(UBound(MatCalendPagos) - 1, 1), 3
        If nLiquidacion > 0 Then
            For i = 0 To UBound(MatCalendPagos) - 1
                If IsNumeric(MatCalendPagos(i, 17)) Then
                    If CDbl(MatCalendPagos(i, 17)) > 0 Then
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 17)), 1 ' Int. Comp. Calculado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 4)), 2 ' Int. Comp. Asignado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 9999, CInt(MatCalendPagos(i, 18)), 3 ' Días Calculados
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 19)), 4 ' Int. Comp. Diferencia Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 20)), 5 ' Int. Grac. Generado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 21)), 6 ' Int. Comp. Capitalizado
                        oBase.RegistraLiquidacionDet nLiquidacion, CDbl(MatCalendPagos(i, 1)), 1100, CDbl(MatCalendPagos(i, 22)), 7 ' Int. Comp. Asignado
                    End If
                End If
            Next i
        End If
        'END RIRO ****************************
           
        'Nuevos Gastos de Cuota
        For i = 0 To nNumGastos - 1
            If CInt(Trim(Right(MatGastos(i, 0), 10))) = gColocCalendAplCuota Then
                If CDbl(MatGastos(i, 3)) > 0 Then
                    Call oBase.dInsertColocCalendDet(psCtaCod, nNroCalen + 1, CInt(Trim(Right(MatGastos(i, 0), 3))), CInt(Trim(MatGastos(i, 1))), CLng(Trim(Right(MatGastos(i, 2), 20))), CDbl(MatGastos(i, 3)), 0, "", False)
                End If
            End If
        Next i
        
        'APRI20180525 ERS028-2017********************************
        Call oBase.dDeleteColocCalendDetSegDes(psCtaCod, nNroCalen + 1)
        If IsArray(MatCalendSegDes) Then
            If Trim(MatCalendSegDes(0, 0)) <> "" Then
                For i = 0 To UBound(MatCalendSegDes, 2)
                    Call oBase.dInsertColocCalendDetSegDes(psCtaCod, nNroCalen + 1, CInt(MatCalendSegDes(0, i)), CInt(MatCalendSegDes(1, i)), CDbl(MatCalendSegDes(2, i)), CDbl(MatCalendSegDes(3, i)))
                Next i
            End If
        End If
        'APRI FIN *************************************
        
   
        If nNroProxDesemb <> 1 Then
            Do While Not RCalendActual.EOF
                Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplCuota, RCalendActual!nCuota, RCalendActual!nPrdConceptoCod, , RCalendActual!nMontoPagado, "", False)
                RCalendActual.MoveNext
            Loop
        End If
        RCalendActual.Close
        Else
            
    End If
    '************************** Fin Nuevo Calendario *************************
    End If

        'Actualiza ColocacCred
        If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
            Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdEstado), , , , 0, , , 1, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
        Else
            Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdEstado), , , , 0, , , 0, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
        End If


'                            Set oCredito = New COMDCredito.DCOMCredito
'                            Set R = oCredito.RecuperaColocacEstado(psCtaCod, gColocEstAprob)
'                            Set oCredito = Nothing

'                            'Actualiza Estado
'                            Call oBase.dInsertColocacEstado(psCtaCod, pdHoy, gColocEstVigNorm, R!nCuotas, pnPrestamo, "Desembolso de Credito", R!nColocCalendCod, IIf(IsNull(R!nPeriodoFechaFija), 0, R!nPeriodoFechaFija), nPeriodoGracia, R!nPlazo, R!nTipoGracia, R!nTipoDesembolso, R!nProxMes, R!nCalendDinamico, False, , , , , IIf(IsNull(R!bGraciaEnCuotas), -1, R!bGraciaEnCuotas), IIf(IsNull(R!nTasaGracia), 0, R!nTasaGracia))
'                            'Actualiza Colocaciones
'                            If nNroProxDesemb = 1 Then
'                                Call oBase.dUpdateColocaciones(psCtaCod, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatDesemb(0, 0)) _
'                                    , CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), pnPrestamo, , , pdHoy, False)
'                            Else
'                                Call oBase.dUpdateColocaciones(psCtaCod, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatDesemb(0, 0)) _
'                                    , CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)), pnPrestamo, , , , False, True)
'                            End If
'
'                            'Actualiza ColocacCred
'                            'ALPA 20110609*********************************
'                            If Not (Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516") Then
'                                Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdHoy), , , , IIf(UBound(MatCargoAutom) > 0, 1, 0), , 0, 1, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
'                            Else
'                                Call oBase.dUpdateColocacCred(psCtaCod, DateDiff("d", CDate(MatCalendPagos(0, 0)), pdHoy), , , , IIf(UBound(MatCargoAutom) > 0, 1, 0), , 0, 0, , , , , , nNroCalen + 1, nNroProxDesemb + 1, , , False, nCuotaCom, nMiViv, nNroCalen + 2, IIf(nMiViv = 1, 1, 0))
'                            End If
'                            '**********************************************
'
'                            'Actualiza Producto
'                            If nNroProxDesemb = 1 Then
'                                Call oBase.dUpdateProducto(psCtaCod, , pnPrestamo, gColocEstVigNorm, pdHoy, nNumTransac + 1, False)
'                            Else
'                                Call oBase.dUpdateProducto(psCtaCod, , pnPrestamo, , pdHoy, nNumTransac + 1, False, , True)
'                            End If
'                            R.Close
'                            Set R = Nothing
'                            Call oBase.dInsertMovCol(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, CDbl(Format(pnPrestamo - (pnMontoGastos), "#0.00")), 0, sMetLiquid, CDate(MatCalendPagos(UBound(MatCalendPagos) - 1, 0)) - CDate(MatCalendPagos(0, 0)), False, IIf(ContDesemb > 1, sEstadoCreditoParcial, gColocEstAprob))
'                            Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, gColocConceptoCodCapital, nNroProxDesemb, pnPrestamo, False)
'
'                            'Ingresa el Monto de Todos los Gastos del desembolso
'                            For i = 0 To UBound(pMatGastos) - 1
'                                If pMatGastos(i, 1) <> 0 Then
'                                    Call oBase.dInsertMovColDet(nMovNro, nConsCred, psCtaCod, nNroCalen + 1, CLng(pMatGastos(i, 2)), CInt(pMatGastos(i, 0)), Format(-1 * pMatGastos(i, 1), "#0.00"), False)
'                                End If
'                            Next i
        
'                        '********************************************************************
'                        'Actualiza Calendario de Desembolsos
'                        Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, nNroProxDesemb, gColocConceptoCodCapital, , pnPrestamo, , False)
'                        '********************************************************************
        
'                    'Actualiza Gastos de Desembolso
'                    If nNumGastos > 0 Then
'                        For i = 0 To UBound(pMatGastos) - 1
'                                Call oBase.dUpdateColocCalendDet(psCtaCod, nNroCalen + 1, gColocCalendAplDesembolso, nNroProxDesemb, CLng(Trim(Right(pMatGastos(i, 2), 20))), , CDbl(pMatGastos(i, 1)), , False)
'                        Next i
'                    End If
'                    'Cambia a estado Cancelado el Desembolso
'                    Call oBase.dUpdateColocCalendario(psCtaCod, nNroCalen + 1, nNroProxDesemb, gColocCalendAplDesembolso, , gColocCalendEstadoPagado, , , False, , pdHoy)
        Call oBase.dCommitTrans
        Set oBase = Nothing
        '********************************************************************
        'FIN DE TRANSACCION
        '********************************************************************
'***************************************************************************************************************
'-------------------------------------------FIN: COPIADA DEL DESEMBOLSO -----------------------------------------
'***************************************************************************************************************

    Set D = New COMConecta.DCOMConecta
    sSql = "Select cCtaCod from ColocacRefinanc where cCtaCod = '" & psCtaCod & "'"
    D.AbreConexion
    Set R = D.CargaRecordSet(sSql)
    If R.RecordCount > 0 Then
        nRefin = 2
    Else
        nRefin = 1
    End If
    
    If Mid(psCtaCod, 6, 3) = "515" Or Mid(psCtaCod, 6, 3) = "516" Then
        Set oLeasing = New COMDCredito.DCOMleasing
        Call oLeasing.ActualizarLeasingCotizacion(psCtaCod, psPersCod)
    End If
   
    Set oCredito = New COMDCredito.DCOMCredito
    Set R = oCredito.RecuperaLlaveProceso(ColocCredLlaveProceso.gColCredNivApr)
    If Not R.EOF And Not R.BOF Then
        nNivApr = R!nConsValor
    End If

    '**** Movimiento para la vigencia del credito a refinanciar
    Set oFunciones = New COMNContabilidad.NCOMContFunciones
    sMovNro = oFunciones.GeneraMovNro(pdEstado, psCodAge, psCodUsu)
    Set oFunciones = Nothing
    
    If pbRefinanc Then
        '************************************************
        'Recupera los calendarios de Pagos de Todos los Creditos Pendientes
        '************************************************
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacRefinanc(psCtaCod, gColocEstadoRefinancSugerido)
        ReDim MatrizMatCredRef(0)
        ReDim MatrizGastosCredRef(0)
        sCadCtaGastoTemp = "("
        Do While Not R.EOF
            MatCredRef = RecuperaMatrizCalendarioPendiente(R!cCtaCodref)
            MatCredRefTempo = RecuperaMatrizCalendarioPendiente(R!cCtaCodref, True)
            MatCredRef = UnirMatricesMiViviendaAmortizacion(MatCredRef, MatCredRefTempo)

            ReDim Preserve MatrizMatCredRef(R.Bookmark)
            MatrizMatCredRef(R.Bookmark - 1) = MatCredRef

            ReDim Preserve MatrizGastosCredRef(R.Bookmark)
            MatrizGastosCredRef(R.Bookmark - 1) = RecuperaMatrizGastosPendiente(R!cCtaCodref)
            'MatrizGastosCredRef(R.Bookmark - 1) = MatrizGastosFecha(pdEstado, MatCredRef)
            '-----------------
            sCadCtaGastoTemp = sCadCtaGastoTemp & "'" & R!cCtaCodref & "',"
            R.MoveNext
        Loop
        R.Close
        Set oCredito = Nothing

        MatCredRef = RecuperaMatrizRefinanciados(psCtaCod)
        'Obtiene Gastos Agrupados de Todos los Calendarios
        sCadCtaGastoTemp = Mid(sCadCtaGastoTemp, 1, Len(sCadCtaGastoTemp) - 1) & ")"
        MatrizGastosCredGrp = RecuperaMatrizGastosPendienteAgrupado(sCadCtaGastoTemp)
        
        Set oCredito = New COMDCredito.DCOMCredito
        Set RAval = oCredito.RecuperaColocaciones(psCtaCod)
        sTpoCredCod = RAval!cTpoCredCod
        Set RAval = Nothing
        Set RAval = oCredito.RecuperaColocacCred(psCtaCod)
        nDatoVivienda = IIf(IsNull(RAval!nDatoVivienda), 0, RAval!nDatoVivienda)
        Set RAval = Nothing
    End If
    
    '*********************************************************
    '************* REFINANCIACION DE CREDITO ***************** 'INICIO REFINANCIAR 2030 - LUCV
    '*********************************************************
     Set oDCredito = New COMDCredito.DCOMCredActBD
    If pbRefinanc Then
        Set oGeneral = New COMDConstSistema.DCOMGeneral
        nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdEstado, TCFijoMes)
        Set oGeneral = Nothing
        'Inserta Estado 2030.
        Call oDCredito.dInsertColocacEstado(psCtaCod, pdEstado, gColocEstRefNorm, pnNroCuotas, pnMonto, "Refinanciacion de Credito", pnTipoCuota, pnDiaFijo, pnGraciaSug, pnPlazo, pnTipoGracia, pnTipoDesemb, pnProxMes, pnCalendDinamico, False, , psTipoGasto, pnDiaFijo2, pnIncremCapital, pbGraciaEnCuotas, pnTasaGracia)
        nMontoRefTmpNew = 0
        nMontoRefTmpCapitalNew = 0
        nMontoRefTmpInteresNew = 0
        Call oDCredito.dInsertMov(sMovNro, gCredRefinanciacion, "", gMovEstContabMovContable, gMovFlagVigente, False)
        nMovNro = oDCredito.dGetnMovNro(sMovNro)
        pnMovNro = nMovNro
        
        Set oCredito = New COMDCredito.DCOMCredito
        Set R = oCredito.RecuperaColocacRefinanc(psCtaCod, gColocEstadoRefinancSugerido)
        Do While Not R.EOF
            Set RRef = oCredito.RecuperaProducto(R!cCtaCodref)
            nEstadCredRef = RRef!nPrdEstado
            RRef.Close
            Set RRef = Nothing
            MatCredRef = MatrizMatCredRef(R.Bookmark - 1)
            Set RAval = oCredito.RecuperaColocaciones(R!cCtaCodref)
            nPrestamo = RAval!nMontoCol
            sTpoCredCodRef = RAval!cTpoCredCod
            dFecVigRef = RAval!dVigencia
            Set RAval = Nothing

            bReprogRoyaAmarilla = False
            'Caso: Desastres Naturales
            Set RReprog = oDCredito.ExisteReprogramacionxDesastreNat(R!cCtaCodref, gCredReprogRoyaAmarilla, , False) 'FRHU 20150725 INCIDENTE
            If RReprog.RecordCount > 0 Then
                bReprogRoyaAmarilla = True
                nMovNroReversionReprog = RReprog!nMovNro
                nCapitalCtaCodRef = RReprog!nCapital
                bReprogDesNat = True
            End If
            Set RReprog = Nothing
            'PASI 20170328 *********************************************
            Set RReprog = oDCredito.ExisteReprogramacionxDesastreNat(R!cCtaCodref, gCredReprogZonaInundada, , False)
            If RReprog.RecordCount > 0 Then
                bReprogZonaInundada = True
                nMovNroReversionReprogZonaInundada = RReprog!nMovNro
                nCapitalCtaCodRefZonaInundada = RReprog!nCapital
            End If
            Set RReprog = Nothing
            'END PASI **************************************************
            'Recupera ColocacCred MiVivienda
            Set RRef = oCredito.RecuperaColocacCred(R!cCtaCodref)
            nDatoViviendaRef = IIf(IsNull(RRef!nDatoVivienda), 0, RRef!nDatoVivienda)
            RRef.Close
            Set RRef = Nothing
            'Recupera Producto
            Set RRef = oCredito.RecuperaProducto(R!cCtaCodref)
            nCapitalCtaCodRef = RRef!nSaldo
            Set RRef = Nothing
            'Obtener InteresDiferidoPendienteCredito
            nIntDiferido = 0
            sOpeTrasIntDif = ""
            Set RRef = oCredito.ObtenerInteresDiferidoPendCredito(R!cCtaCodref)
            If RRef.RecordCount > 0 Then
                nIntDiferido = IIf(IsNull(RRef!nIntDifPend), 0, RRef!nIntDifPend)
            End If

            If nEstadCredRef = gColocEstVigNorm Or nEstadCredRef = gColocEstVigVenc Or nEstadCredRef = gColocEstVigMor Then
                If nEstadCredRef = gColocEstVigNorm Then
                    sOpeTrasIntDif = gCredTransRefIntDifVig
                End If

                If nEstadCredRef = gColocEstVigVenc Or nEstadCredRef = gColocEstVigMor Then
                    sOpeTrasIntDif = gCredTransRefIntDifVenc
                End If
            End If
            Set RRef = Nothing
      
            If pbCapitalInter Then
                If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
                    nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
                Else
                    If Mid(R!cCtaCod, 9, 1) = "1" Then
                        nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) * nTipoCambioFijo 'JUEZ 20140922
                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                    Else
                        nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) / nTipoCambioFijo 'JUEZ 20140922
                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                    End If
                End If
                Call oDCredito.dInsertColocacRefinanc(psCtaCod, R!cCtaCodref, nMontoRefTempo, gColocEstadoRefinancAprobado, pdEstado, False, R!bSustiDeudor)
            Else
                If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
                    nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                Else
                    If Mid(R!cCtaCod, 9, 1) = "1" Then
                        nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) * nTipoCambioFijo
                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                    Else
                        nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) / nTipoCambioFijo
                        nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                    End If
                End If
                Call oDCredito.dInsertColocacRefinanc(psCtaCod, R!cCtaCodref, nMontoRefTempo, gColocEstadoRefinancAprobado, pdEstado, False, R!bSustiDeudor)
            End If

            'Inserta en ColocacCredRefinancDet y en el Calendario
                If pbCapitalInter Then
                    If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
                        nMontoRefTempo = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
                    Else
                        If Mid(R!cCtaCod, 9, 1) = "1" Then
                            nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) * nTipoCambioFijo 'JUEZ 20140922
                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                        Else
                            nMontoRefTempo = (MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado)) / nTipoCambioFijo 'JUEZ 20140922
                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                        End If
                    End If

                    Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, nMontoRefTempo, 0, gColocEstadoRefinancAprobado, gColocConceptoCodCapital, pdEstado, False)
                Else
                    If Mid(R!cCtaCodref, 9, 1) = Mid(R!cCtaCod, 9, 1) Then
                        nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                    Else
                        If Mid(R!cCtaCod, 9, 1) = "1" Then
                            nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) * nTipoCambioFijo
                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                        Else
                            nMontoRefTempo = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) / nTipoCambioFijo
                            nMontoRefTempo = Format(nMontoRefTempo, "#0.00")
                        End If
                    End If

                    Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, nMontoRefTempo, 0, gColocEstadoRefinancAprobado, gColocConceptoCodCapital, pdEstado, False)
                End If
                lnInteresDiferido = 0
                lnInteresDiferidoCA = lnInteresDiferidoCA + oDCredito.dObtenerDiferidoCreditoRefinanciadoDeVigenteCancelado(R!cCtaCodref, pdEstado, Mid(psCtaCod, 9, 1), False)
                lnInteresDiferido = lnInteresDiferido + oDCredito.dObtenerDiferidoCreditoRefinanciadoDeVigenteCancelado(R!cCtaCodref, pdEstado, Mid(psCtaCod, 9, 1), False)
                'Asiento Contable
                If pbCapitalInter Then
                    If MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCredRef) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresReprogramado, pdEstado, False)
                        lnInteresDiferido = lnInteresDiferido + MatrizInteresReprogramadoFecha(R!cCtaCodref, MatCredRef)
                    End If
                    If MatrizInteresSuspensoFecha(R!cCtaCodref, MatCredRef) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresSuspensoFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresSuspenso, pdEstado, False)
                        lnInteresDiferido = lnInteresDiferido + MatrizInteresSuspensoFecha(R!cCtaCodref, MatCredRef)
                    End If
                    If MatrizInteresGraciaFecha(R!cCtaCodref, MatCredRef, pdEstado) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresGraciaFecha(R!cCtaCodref, MatCredRef, pdEstado), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresGracia, pdEstado, False)
                        lnInteresDiferido = lnInteresDiferido + MatrizInteresGraciaFecha(R!cCtaCodref, MatCredRef, pdEstado)
                    End If
                    If MatrizInteresMorFecha(R!cCtaCodref, MatCredRef) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresMorFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresMoratorio, pdEstado, False)
                        lnInteresDiferido = lnInteresDiferido + MatrizInteresMorFecha(R!cCtaCodref, MatCredRef)
                    End If
                    If MatrizInteresCompAFecha(R!cCtaCodref, MatCredRef, pdEstado) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresCompAFecha(R!cCtaCodref, MatCredRef, pdEstado), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresCompensatorio, pdEstado, False)
                        lnInteresDiferido = lnInteresDiferido + MatrizInteresCompAFecha(R!cCtaCodref, MatCredRef, pdEstado)
                    End If
                    If MatrizInteresCompVencidoFecha(R!cCtaCodref, MatCredRef) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, MatrizInteresCompVencidoFecha(R!cCtaCodref, MatCredRef), 0, gColocEstadoRefinancAprobado, gColocConceptoCodInteresCompVencido, pdEstado, False)
                        lnInteresDiferido = lnInteresDiferido + MatrizInteresCompVencidoFecha(R!cCtaCodref, MatCredRef)
                    End If
                    If TotalGastosAFecha(R!cCtaCodref, pdEstado) > 0 Then
                        Call oDCredito.dInsertColocacRefinancDet(psCtaCod, R!cCtaCodref, TotalGastosAFecha(R!cCtaCodref, pdEstado), 0, gColocEstadoRefinancAprobado, gColocConceptoCodGastoVarios, pdEstado, False)
                    End If
                End If
            Call oDCredito.dUpdateColocacCred_InteresDiferido(psCtaCod, lnInteresDiferido, False)
        
            'Halla la Constante
            If pbCapitalInter Then
                Select Case nEstadCredRef
                    Case gColocEstRefMor '2032
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefCapIntDMMorSoles
                                sConsCred2 = gCredRefRefCapIntIngDMDolares
                            Else
                                sConsCred = gCredRefRefCapIntMorSoles
                                sConsCred2 = gCredRefRefCapIntIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefCapIntDMMorDolares
                                sConsCred2 = gCredRefRefCapIntIngDMSoles
                            Else
                                sConsCred = gCredRefRefCapIntMorDolares
                                sConsCred2 = gCredRefRefCapIntIngDolares
                            End If
                        End If
                    Case gColocEstRefNorm '2030
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefCapIntDMNormSoles
                                sConsCred2 = gCredRefRefCapIntIngDMDolares
                            Else
                                sConsCred = gCredRefRefCapIntNormSoles
                                sConsCred2 = gCredRefRefCapIntIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefCapIntDMNormDolares
                                sConsCred2 = gCredRefRefCapIntIngDMSoles
                            Else
                                sConsCred = gCredRefRefCapIntNormDolares
                                sConsCred2 = gCredRefRefCapIntIngDolares
                            End If
                        End If
                    Case gColocEstRefVenc '2031
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefCapIntDMVencSoles
                                sConsCred2 = gCredRefRefCapIntIngDMDolares
                            Else
                                sConsCred = gCredRefRefCapIntVencSoles
                                sConsCred2 = gCredRefRefCapIntIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefCapIntDMVencDolares
                                sConsCred2 = gCredRefRefCapIntIngDMSoles
                            Else
                                sConsCred = gCredRefRefCapIntVencDolares
                                sConsCred2 = gCredRefRefCapIntIngDMDolares
                            End If
                        End If
                    Case gColocEstVigMor '2022
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefCapIntDMMorSoles
                                sConsCred2 = gCredRefCapIntIngDMDolares
                            Else
                                sConsCred = gCredRefCapIntMorSoles
                                sConsCred2 = gCredRefCapIntIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefCapIntDMMorDolares
                                sConsCred2 = gCredRefCapIntIngDMSoles
                            Else
                                sConsCred = gCredRefCapIntMorDolares
                                sConsCred2 = gCredRefCapIntIngDolares
                            End If
                        End If
                    Case gColocEstVigNorm '2020
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefCapIntDMNormSoles
                                sConsCred2 = gCredRefCapIntIngDMDolares
                            Else
                                sConsCred = gCredRefCapIntNormSoles
                                sConsCred2 = gCredRefCapIntIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefCapIntDMNormDolares
                                sConsCred2 = gCredRefCapIntIngDMSoles
                            Else
                                sConsCred = gCredRefCapIntNormDolares
                                sConsCred2 = gCredRefCapIntIngDolares
                            End If
                        End If
                    Case gColocEstVigVenc '2021
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefCapIntDMVencSoles
                                sConsCred2 = gCredRefCapIntIngDMDolares
                            Else
                                sConsCred = gCredRefCapIntVencSoles
                                sConsCred2 = gCredRefCapIntIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefCapIntDMVencDolares
                                sConsCred2 = gCredRefCapIntIngDMSoles
                            Else
                                sConsCred = gCredRefCapIntVencDolares
                                sConsCred2 = gCredRefCapIntIngDolares
                            End If
                        End If
                End Select
            Else
                Select Case nEstadCredRef
                    Case gColocEstRefMor '2032
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefDMMorSoles
                                sConsCred2 = gCredRefRefIngDMDolares
                            Else
                                sConsCred = gCredRefRefMorSoles
                                sConsCred2 = gCredRefRefIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefDMMorDolares
                                sConsCred2 = gCredRefRefIngDMSoles
                            Else
                                sConsCred = gCredRefRefMorDolares
                                sConsCred2 = gCredRefRefIngDolares
                            End If
                        End If
                    Case gColocEstRefNorm '2030
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefDMNormSoles
                                sConsCred2 = gCredRefRefIngDMDolares
                            Else
                                sConsCred = gCredRefRefNormSoles
                                sConsCred2 = gCredRefRefIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefDMNormDolares
                                sConsCred2 = gCredRefRefIngDMSoles
                            Else
                                sConsCred = gCredRefRefNormDolares
                                sConsCred2 = gCredRefRefIngDolares
                            End If
                        End If
                    Case gColocEstRefVenc '2031
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefDMVencSoles
                                sConsCred2 = gCredRefRefIngDMDolares
                            Else
                                sConsCred = gCredRefRefVencSoles
                                sConsCred2 = gCredRefRefIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefRefDMVencDolares
                                sConsCred2 = gCredRefRefIngDMSoles
                            Else
                                sConsCred = gCredRefRefVencDolares
                                sConsCred2 = gCredRefRefIngDolares
                            End If
                        End If
                    Case gColocEstVigMor '2022
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefDMMorSoles
                                sConsCred2 = gCredRefIngDMDolares
                            Else
                                sConsCred = gCredRefMorSoles
                                sConsCred2 = gCredRefIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefDMMorDolares
                                sConsCred2 = gCredRefIngDMSoles
                            Else
                                sConsCred = gCredRefMorDolares
                                sConsCred2 = gCredRefIngDolares
                            End If
                        End If
                    Case gColocEstVigNorm '2020
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefDMNormSoles
                                sConsCred2 = gCredRefIngDMDolares
                            Else
                                sConsCred = gCredRefNormSoles
                                sConsCred2 = gCredRefIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefDMNormDolares
                                sConsCred2 = gCredRefIngDMSoles
                            Else
                                sConsCred = gCredRefNormDolares
                                sConsCred2 = gCredRefIngDolares
                            End If
                        End If
                    Case gColocEstVigVenc '2021
                        If CInt(Mid(R!cCtaCodref, 9, 1)) = COMDConstantes.gMonedaNacional Then
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefDMVencSoles
                                sConsCred2 = gCredRefIngDMDolares
                            Else
                                sConsCred = gCredRefVencSoles
                                sConsCred2 = gCredRefIngSoles
                            End If
                        Else
                            If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                                sConsCred = gCredRefDMVencDolares
                                sConsCred2 = gCredRefIngDMSoles
                            Else
                                sConsCred = gCredRefVencDolares
                                sConsCred2 = gCredRefIngDolares
                            End If
                        End If
                End Select
            End If

            'Movimiento para Credito Antiguo
            If pbCapitalInter Then
                nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                'Se agrego interes compensatorio
                nMontoRefTmpInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
                nMontoRefTmpGastosSusp = TotalGastosAFecha(R!cCtaCodref, pdEstado)
                nMontoRefTmpInterSusp = nMontoRefTmpInteres
                'Insertar Movimientos
                Call oDCredito.dInsertMovCol(nMovNro, sConsCred, R!cCtaCodref, 0, nMontoRefTmp, 0, 0, 0, False, gColocEstAprob)
                Call oDCredito.dInsertMovColDet(nMovNro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapital, False)
                    If nMontoRefTmpInteres > 0 Or nMontoRefTmpGastosSusp > 0 Then
                        Call oDCredito.dInsertMovColDet(nMovNro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInteres + nMontoRefTmpGastosSusp, False)
                    End If
            Else
                'Solo capital, Intereses y Gastos en suspenso son de otro Movimiento
                nMontoRefTmp = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                nMontoRefTmpInterSusp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef)
                nMontoRefTmpGastosSusp = TotalGastosAFecha(R!cCtaCodref, pdEstado)
                'Insertar Movimientos
                Call oDCredito.dInsertMovCol(nMovNro, sConsCred, R!cCtaCodref, 0, nMontoRefTmp, 0, 0, 0, False, gColocEstAprob)
                Call oDCredito.dInsertMovColDet(nMovNro, sConsCred, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapital, False)
                nIntSuspTot = nIntSuspTot + nMontoRefTmpInterSusp + nMontoRefTmpGastosSusp
            End If

            'Insertar Movimientos Intereses en suspenso
            If nMontoRefTmpInterSusp > 0 Or nMontoRefTmpGastosSusp > 0 Then
                Call oDCredito.dInsertMovCol(nMovNro, gCredRefIntSuspenso, R!cCtaCodref, 0, nMontoRefTmpInterSusp + nMontoRefTmpGastosSusp, 0, 0, 0, False, gColocEstAprob)
                Call oDCredito.dInsertMovColDet(nMovNro, gCredRefIntSuspenso, R!cCtaCodref, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInterSusp + nMontoRefTmpGastosSusp, False)
            End If
            If lnInteresDiferidoCA Then
                Call oDCredito.dInsertMovCol(nMovNro, "101111", psCtaCod, 0, Round(lnInteresDiferidoCA, 2), 0, 0, 0, False, gColocEstAprob)
                Call oDCredito.dInsertMovColDet(nMovNro, "101111", psCtaCod, 0, gColocRFAInteresDiferido, 0, Round(lnInteresDiferidoCA, 2), False)
            End If

            'Movimiento para Credito Nuevo
            If pbCapitalInter Then
                nMontoRefTmp = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) + MatrizCapitalAFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                nMontoRefTmpInteres = MatrizInteresGastosAFecha(R!cCtaCodref, MatCredRef, pdEstado) - MatrizGastosFecha(R!cCtaCodref, MatCredRef) + MatrizInteresGraAFecha(R!cCtaCodref, MatCredRef, pdEstado)
                nMontoRefTmpGastosSusp = TotalGastosAFecha(R!cCtaCodref, pdEstado) 'JUEZ 20140922
                
                'Si es Diferente Moneda
                If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                    Set oGeneral = New COMDConstSistema.DCOMGeneral
                    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdEstado, TCFijoMes)
                    Set oGeneral = Nothing
                    If CInt(Mid(psCtaCod, 9, 1)) = COMDConstantes.gMonedaNacional Then 'de Dolares a Soles
                        nMontoRefTmp = nMontoRefTmp * nTipoCambioFijo
                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
                        nMontoRefTmpCapital = nMontoRefTmpCapital * nTipoCambioFijo
                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
                        nMontoRefTmpInteres = nMontoRefTmpInteres * nTipoCambioFijo
                        nMontoRefTmpInteres = CDbl(Format(nMontoRefTmpInteres, "#0.00"))
                    Else 'De Soles a Dolares
                        nMontoRefTmp = nMontoRefTmp / nTipoCambioFijo
                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
                        nMontoRefTmpCapital = nMontoRefTmpCapital / nTipoCambioFijo
                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
                        nMontoRefTmpInteres = nMontoRefTmpInteres / nTipoCambioFijo
                        nMontoRefTmpInteres = CDbl(Format(nMontoRefTmpInteres, "#0.00"))
                    End If
                End If

                nMontoRefTmpNew = nMontoRefTmpNew + nMontoRefTmp
                nMontoRefTmpNew = CDbl(Format(nMontoRefTmpNew, "#0.00"))
                nMontoRefTmpCapitalNew = nMontoRefTmpCapitalNew + nMontoRefTmpCapital
                nMontoRefTmpCapitalNew = CDbl(Format(nMontoRefTmpCapitalNew, "#0.00"))
                nMontoRefTmpInteresNew = nMontoRefTmpInteresNew + nMontoRefTmpInteres + nMontoRefTmpGastosSusp
                nMontoRefTmpInteresNew = CDbl(Format(nMontoRefTmpInteresNew, "#0.00"))

            Else
                nMontoRefTmp = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                nMontoRefTmpCapital = MatrizCapitalAFecha(R!cCtaCodref, MatCredRef)
                'Si es Diferente Moneda
                If Mid(psCtaCod, 9, 1) <> Mid(R!cCtaCodref, 9, 1) Then
                    Set oGeneral = New COMDConstSistema.DCOMGeneral
                    nTipoCambioFijo = oGeneral.EmiteTipoCambio(pdEstado, TCFijoMes)
                    Set oGeneral = Nothing
                    If CInt(Mid(psCtaCod, 9, 1)) = COMDConstantes.gMonedaNacional Then 'de Dolares a Soles
                        nMontoRefTmp = nMontoRefTmp * nTipoCambioFijo
                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
                        nMontoRefTmpCapital = nMontoRefTmpCapital * nTipoCambioFijo
                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
                    Else 'De Soles a Dolares
                        nMontoRefTmp = nMontoRefTmp / nTipoCambioFijo
                        nMontoRefTmp = CDbl(Format(nMontoRefTmp, "#0.00"))
                        nMontoRefTmpCapital = nMontoRefTmpCapital / nTipoCambioFijo
                        nMontoRefTmpCapital = CDbl(Format(nMontoRefTmpCapital, "#0.00"))
                    End If
                End If

                nMontoRefTmpNew = nMontoRefTmpNew + nMontoRefTmp
                nMontoRefTmpNew = CDbl(Format(nMontoRefTmpNew, "#0.00"))
                nMontoRefTmpCapitalNew = nMontoRefTmpCapitalNew + nMontoRefTmpCapital
                nMontoRefTmpCapitalNew = CDbl(Format(nMontoRefTmpCapitalNew, "#0.00"))
            End If

            'Actualiza Estado
            If R!bSustiDeudor Then
               nEstado = gColocEstCancelado
            Else
                nEstado = gColocEstRefinanc '2060
            End If
            Call oDCredito.dUpdateProducto_Estado(R!cCtaCodref, nEstado, pdEstado, , False, True) 'Estado 2060: Cancelado x Refinanciamiento

            If bReprogRoyaAmarilla Then
                Call oDCredito.dInsertMovCol(nMovNro, gReversionReprogRoyaAmarilla, R!cCtaCodref, 0, nCapitalCtaCodRef, 0, "", 0, 0, 0, False)
                Call oDCredito.dInsertMovColDet(nMovNro, gReversionReprogRoyaAmarilla, R!cCtaCodref, 0, gColocConceptoCodCapitalReprogRoyaAmarilla, 0, nCapitalCtaCodRef, False)
                Call oDCredito.dUpdateCredReprogNatEspeciales(nMovNroReversionReprog, 1)
                Call oDCredito.dInsertMovRef(nMovNro, nMovNroReversionReprog, False)
            End If
            
            If bReprogDesNat Then
                Call oDCredito.dInsertMovCol(nMovNro, gReversionReprogDesNat, R!cCtaCodref, 0, nCapitalCtaCodRefDesNat, 0, "", 0, 0, 0, False)
                Call oDCredito.dInsertMovColDet(nMovNro, gReversionReprogDesNat, R!cCtaCodref, 0, gColocConceptoCodCapitalReprogxDesNat, 0, nCapitalCtaCodRefDesNat, False)
                Call oDCredito.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogDesNat, 1)
                Call oDCredito.dInsertMovRef(nMovNro, nMovNroReversionReprogDesNat, False)
            End If
            
            'PASI 20170328 *********************************************************
            If bReprogZonaInundada Then
                Call oDCredito.dInsertMovCol(nMovNro, gReversionReprogZonaInundada, R!cCtaCodref, 0, nCapitalCtaCodRefZonaInundada, 0, "", 0, 0, 0, False)
                Call oDCredito.dInsertMovColDet(nMovNro, gReversionReprogZonaInundada, R!cCtaCodref, 0, gColocConceptoCodCapitalReprogZonaInundada, 0, nCapitalCtaCodRefZonaInundada, False)
                Call oDCredito.dUpdateCredReprogNatEspeciales(nMovNroReversionReprogZonaInundada, 1)
                Call oDCredito.dInsertMovRef(nMovNro, nMovNroReversionReprogZonaInundada, False)
            End If
            'END PASI **************************************************************
            
            If Left(sTpoCredCodRef, 1) = "8" And DateDiff("D", dFecVigRef, "01/01/2013") <= 0 Then
                If nDatoViviendaRef = 1 Then
                    Call oDCredito.dInsertMovCol(nMovNro, gReversionCapHipoPrimeraVivienda, R!cCtaCodref, 0, nCapitalCtaCodRef, 0, "", 0, 0, 0)
                    Call oDCredito.dInsertMovColDet(nMovNro, gReversionCapHipoPrimeraVivienda, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nCapitalCtaCodRef, False)
                ElseIf nDatoViviendaRef = 2 Then
                    Call oDCredito.dInsertMovCol(nMovNro, gReversionCapHipoNoPrimeraVivienda, R!cCtaCodref, 0, nCapitalCtaCodRef, 0, "", 0, 0, 0)
                    Call oDCredito.dInsertMovColDet(nMovNro, gReversionCapHipoNoPrimeraVivienda, R!cCtaCodref, 0, gColocConceptoCodCapital, 0, nCapitalCtaCodRef, False)
                End If
            End If
            
            If nIntDiferido > 0 And Trim(sOpeTrasIntDif) <> "" Then
                Call oDCredito.dInsertMovCol(nMovNro, sOpeTrasIntDif, R!cCtaCodref, 0, nIntDiferido, 0, "", 0, 0, 0)
                Call oDCredito.dInsertMovColDet(nMovNro, sOpeTrasIntDif, R!cCtaCodref, 0, gColocConceptoCodInteresDiferidoAmp, 0, nIntDiferido, False)
            End If
          
            oDCredito.dUpdateCoberturaGarantiaxCredito R!cCtaCodref
            R.MoveNext
        Loop
        R.Close
        Set R = Nothing

        'Graba Movimientos de Credito Nuevo Totalizado de Todos los Creditos Antiguos
'        If nGastoSuspTot > 0 And Not pbCapitalInter Then
'            For i = 0 To UBound(MatrizGastosCredGrp) - 1
'                Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, UBound(MatCalendPagos), CLng(MatrizGastosCredGrp(i, 0)), CDbl(MatrizGastosCredGrp(i, 1)), 0, "", False)
'            Next i
'        End If 'LUCV COMENTO TEMPO
'        If nIntSuspTot > 0 And Not pbCapitalInter Then
'            Call oDCredito.dInsertColocCalendDet(psCtaCod, nNroCalend, gColocCalendAplCuota, UBound(MatCalendPagos), gColocConceptoCodInteresSuspenso, nIntSuspTot, 0, "", False)
'        End If
'        Set oCredito = Nothing 'LUCV COMENTO TEMPO

        'Ingresar Movimientos para Nuevo Credito
        If pbCapitalInter Then
            'Inserta Movimientos
            Call oDCredito.dInsertMovCol(nMovNro, sConsCred2, psCtaCod, 0, nMontoRefTmpNew, 0, 0, 0, False, gColocEstAprob)
            Call oDCredito.dInsertMovColDet(nMovNro, sConsCred2, psCtaCod, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapitalNew, False)
            If nMontoRefTmpInteresNew > 0 Then
                Call oDCredito.dInsertMovColDet(nMovNro, sConsCred2, psCtaCod, 0, gColocConceptoCodInteresSuspenso, 0, nMontoRefTmpInteresNew, False)
            End If
        Else
            'Insertar Movimientos
            Call oDCredito.dInsertMovCol(nMovNro, sConsCred2, psCtaCod, 0, nMontoRefTmpNew, 0, 0, 0, False, gColocEstAprob)
            Call oDCredito.dInsertMovColDet(nMovNro, sConsCred2, psCtaCod, 0, gColocConceptoCodCapital, 0, nMontoRefTmpCapitalNew, False)
        End If

        'Actualiza Estado de Producto
        Call oDCredito.dUpdateProducto(psCtaCod, , pnMonto, gColocEstRefNorm, pdEstado, 0, False)
        'Actualiza Colocaciones
        Call oDCredito.dUpdateColocaciones(psCtaCod, , , pnMonto, , , pdEstado, False)
        If Left(sTpoCredCod, 1) = "8" Then
            If nDatoVivienda = 1 Then
                Call oDCredito.dInsertMovCol(nMovNro, gAsientoCapHipoPrimeraVivienda, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0)
                Call oDCredito.dInsertMovColDet(nMovNro, gAsientoCapHipoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto, False)
            ElseIf nDatoVivienda = 2 Then
                Call oDCredito.dInsertMovCol(nMovNro, gAsientoCapHipoNoPrimeraVivienda, psCtaCod, 0, pnMonto, 0, "", 0, 0, 0)
                Call oDCredito.dInsertMovColDet(nMovNro, gAsientoCapHipoNoPrimeraVivienda, psCtaCod, 0, gColocConceptoCodCapital, 0, pnMonto, False)
            End If
        End If
        oDCredito.dAsientoGarantiaRefinancia nMovNro, psCtaCod
    Else
    End If
'FIN DE REFINANCIAMIENTO - comentado por  LUCV 20160512 - ERS2016004************************************************************************************

Exit Function
ErrorAprobacionVigenciaRefinanciar:
   Err.Raise Err.Number, "Error En Proceso VigenciaCreditosRefinanciar", Err.Description
End Function

'LUCV 20160518 - ERS2016-004 (Refinanciacion de Creditos)
Public Function CargarDatosRefinanciar(ByVal psCtaCod As String, _
                                    ByVal pdFecSis As Date, _
                                    ByRef pnNroProxDesemb As Integer, _
                                    ByRef prsRefina As ADODB.Recordset, _
                                    ByRef rsTotalRefina As ADODB.Recordset, _
                                    ByRef prsCredVig As ADODB.Recordset, _
                                    ByRef pvTotalesVig As Variant, _
                                    ByRef prsVigGra As ADODB.Recordset, _
                                    ByRef prsCuentas As ADODB.Recordset, _
                                    ByRef pvAgencias As Variant, _
                                    ByRef prsGastos As ADODB.Recordset, _
                                    ByRef pnMontoITF As Double, _
                                    ByRef prsDesemPar As ADODB.Recordset, _
                                    ByRef pbAmpliacion As Boolean, _
                                    ByVal psOperacion As String, _
                                    ByRef pbOperacionEfectivo As Boolean, _
                                    ByRef pnMontoLavDinero As Double, _
                                    ByRef pnTC As Double, _
                                    ByRef pbExoneradaLavado As Boolean, _
                                    ByRef psPersCodRep As String, _
                                    ByRef psPersNombreRep As String, _
                                    ByRef prBancos As ADODB.Recordset, _
                                    Optional ByRef prsRelEmp As ADODB.Recordset = Nothing, _
                                    Optional ByRef prsProveedores As ADODB.Recordset, _
                                    Optional ByRef prsComisionLeasing As ADODB.Recordset)
                                    
Dim oLineas As COMDCredito.DCOMLineaCredito
Dim oCredito As COMDCredito.DCOMCredito
Dim oCaptacion As COMNCaptaGenerales.NCOMCaptaGenerales
Dim oCalend As COMDCredito.DCOMCalendario
Dim oAmpliacion As COMDCredito.DCOMAmpliacion
Dim oITF As COMDConstSistema.FCOMITF
Dim oLeasing As COMDCredito.DCOMleasing

Dim clsLav As COMNCaptaGenerales.NCOMCaptaDefinicion
Dim clsExo As COMNCaptaServicios.NCOMCaptaServicios
    
Dim RTemp As ADODB.Recordset
Dim nNroCalen As Integer
        
Dim i As Integer
Dim nMontoA As Double
Dim nInteresA As Double
Dim nTotal As Double
        
Dim nNumCtasAhorro As Integer
Dim vCtaAhorro As Variant
Dim nMontoPrestamo As Double
Dim sPersCod As String
Dim sTpoProdCod As Integer
        
Dim oRel As COMDCredito.UCOMCredRela
On Error GoTo ErrorCargarDatosRefinanciar

    Set oCredito = New COMDCredito.DCOMCredito
    Set prsRefina = oCredito.RecuperaDatosRefinanciar(psCtaCod)
    
    If Not prsRefina.BOF And Not prsRefina.EOF Then
        sTpoProdCod = prsRefina!cTpoProdCod
        nNroCalen = prsRefina!nNroCalen
        sPersCod = prsRefina!cPersCod
        
        'Creditos Vigentes
        Set prsCredVig = CargarCreditosVigentesNew(sPersCod, psCtaCod, Mid(psCtaCod, 9, 1))
        Set oITF = New COMDConstSistema.FCOMITF
        oITF.fgITFParametros
        'oITF.fgITFParamAsume (psCodAge)
        ReDim pvTotalesVig(prsCredVig.RecordCount)
        Do While Not prsCredVig.EOF
            nMontoA = prsCredVig!nSaldo
            nInteresA = InteresGastosAFecha(prsCredVig!cCtaCod, pdFecSis)
            'nTotal = oITF.fgITFCalculaImpuestoNOIncluido(nMontoA + nInteresA, True)
            nTotal = nMontoA + nInteresA
            pvTotalesVig(prsCredVig.Bookmark) = Format(nTotal, "#0.00")
            prsCredVig.MoveNext
        Loop
        pnMontoITF = oITF.fgITFDesembolso(nMontoPrestamo)
        Set oITF = Nothing
        Set prsVigGra = oCredito.RecuperaCreditosVigentesGrabados(psCtaCod)
        
       '***Ecotaxi **************************************************
        If sTpoProdCod = "517" Then
            Set prsRelEmp = oCredito.RecuperaRelacionesInfogas(psCtaCod)
        End If
        '************************************************************
                                
        'Totales de Credito refinanciado***
        Set rsTotalRefina = oCredito.RecuperaTotalRefinanciar(psCtaCod)
            
        Set oCredito = Nothing
        'Halla el Gasto del Desembolso
        Set oCalend = New COMDCredito.DCOMCalendario
        Set prsGastos = oCalend.RecuperaCalendarioGastosPendientes(psCtaCod, 1)
        'Set prsGastos = oCalend.RecuperaCalendarioGastosPendientesAgrupado(psCtaCod) 'nNroCalen, gColocCalendAplDesembolso, pnNroProxDesemb)
        Set oCalend = Nothing
        'Carga todos los desembolsos Pp
        Set oCalend = New COMDCredito.DCOMCalendario
        Set prsDesemPar = oCalend.RecuperaListaDesembolsosParciales(psCtaCod)
        Set oCalend = Nothing
        ' Mensaje que indica que el credito es una ampliacion
        Set oAmpliacion = New COMDCredito.DCOMAmpliacion
        pbAmpliacion = oAmpliacion.ValidaCreditoaAmpliar(psCtaCod)
        Set oAmpliacion = Nothing

    Else
        Set oCredito = Nothing
        Exit Function
    End If

''''' SE AGREGO PARA EL LAVADO DE DINERO '''''''''''''''''
    Set clsLav = New COMNCaptaGenerales.NCOMCaptaDefinicion
    Set clsExo = New COMNCaptaServicios.NCOMCaptaServicios

    pbExoneradaLavado = clsExo.EsPersonaExoneradaLavadoDinero(sPersCod)
    pbOperacionEfectivo = clsLav.EsOperacionEfectivo(Trim(psOperacion))
    pnMontoLavDinero = clsLav.GetCapParametro(gMonOpeLavDineroME)
    
    If Mid(psCtaCod, 9, 1) = gMonedaNacional Then
        Dim clsTC As COMDConstSistema.NCOMTipoCambio
        Set clsTC = New COMDConstSistema.NCOMTipoCambio
        pnTC = clsTC.EmiteTipoCambio(pdFecSis, TCFijoDia)
        Set clsTC = Nothing
    Else
        pnTC = 1
    End If
    
    Set clsLav = Nothing
    Set clsExo = Nothing
'''''''''''''''''''''''''''''''''''''''''''''''''''''''
'CUSCO
psPersCodRep = ""
psPersNombreRep = ""

'If prsRefina!nPersPersoneria <> gPersonaNat Then
'    Set oRel = New COMDCredito.UCOMCredRela
'    Call oRel.CargaRelacPersCred(psCtaCod)
'    oRel.IniciarMatriz
'    While Not oRel.EOF
'        If oRel.ObtenerValorRelac = gColRelPersRepresentante Then
'            psPersCodRep = oRel.ObtenerCodigo
'            psPersNombreRep = oRel.ObtenerNombre
'        End If
'        oRel.siguiente
'    Wend
'    Set oRel = Nothing
'End If
'''''''''''''''''''''''''''''''''''''''''''''''''''''''
    Exit Function
ErrorCargarDatosRefinanciar:
    Err.Raise Err.Number, "Cargar Datos Refinanciar", Err.Description
End Function
'INICIO FRHU 20170316 Descomentar despues de la reprogramación
'JOEP ERS059_2016
Public Function GrabarFichaSobreEnd(ByVal pnTipoReg As Integer, ByVal pscCtaCodEval As String, ByVal pcCodPers As String, ByVal pcAna As String, ByVal pnAge As String, ByVal pnSalCapConso As Double, _
                                                ByVal pcCalfCamc As Integer, ByVal pnSalEndSistFin As Double, ByVal pnMarClieAval As Integer, ByVal pnMonCmac As Double, _
                                                ByVal pcCtaCodNew As String, ByVal pcCtaCodAdm As String, ByVal pMatifis As Variant, ByVal pMatDiasAtrs As Variant, _
                                                ByVal pMatFichaNew As Variant, ByVal pMatFichaAdm As Variant, ByVal dFecSis As Date, ByVal dFecCierre As Date) As Boolean

 Dim i As Integer
 Dim nVecesReg As Integer
 Dim nID As Integer
 Dim rsnID As ADODB.Recordset
 Dim oCredFichaSobreEnd As COMDCredito.DCOMCredito
 Set oCredFichaSobreEnd = New COMDCredito.DCOMCredito

      'Para Validar que solo Guarde Dos Veces
        If pnTipoReg = 1 Then
            nVecesReg = 1
        Else
            nVecesReg = 2
        End If

        Call oCredFichaSobreEnd.GrabarCabFichaSobreEnd(pnTipoReg, pscCtaCodEval, pcCodPers, pcAna, pnAge, pnSalCapConso, pcCalfCamc, _
                                                        pnSalEndSistFin, pnMarClieAval, pnMonCmac, dFecSis, nVecesReg, dFecCierre)


'        Para Obtener el nId del Registro
        If pnTipoReg = 1 Then
            Call oCredFichaSobreEnd.ObtenerFichaSobEndCabnId
                If Not (oCredFichaSobreEnd.ObtenerFichaSobEndCabnId.EOF And oCredFichaSobreEnd.ObtenerFichaSobEndCabnId.BOF) Then
                    nID = oCredFichaSobreEnd.ObtenerFichaSobEndCabnId!nID
                End If
        Else
              Set rsnID = oCredFichaSobreEnd.ObtenerFichaSobEndMatnId(pscCtaCodEval, pcCodPers, dFecSis, dFecCierre)
                If Not (rsnID.EOF And rsnID.BOF) Then
                    nID = rsnID!nID
                End If
        End If

        If IsArray(pMatifis) Then 'Pregunto Matriz no Sea Vacia
                If UBound(pMatifis) Then
            If pnTipoReg = 2 Then
                Call oCredFichaSobreEnd.EliminarFichaSobEndIfis(pscCtaCodEval, pcCodPers, dFecSis)
            End If
                    For i = 1 To UBound(pMatifis)
                        Call oCredFichaSobreEnd.GuardarFichaIfis(nID, pscCtaCodEval, pcCodPers, pMatifis(i, 0), pMatifis(i, 1), dFecSis, dFecCierre)
                    Next i
                End If
        End If

        If IsArray(pMatDiasAtrs) Then 'Pregunto Matriz no Sea Vacia
                If UBound(pMatDiasAtrs) Then
            If pnTipoReg = 2 Then
                Call oCredFichaSobreEnd.EliminarFichaSobEndDiasAtraso(pscCtaCodEval, pcCodPers, dFecSis)
            End If
                    For i = 1 To UBound(pMatDiasAtrs)
                        Call oCredFichaSobreEnd.GuardarFichaDiasAtrs(nID, pscCtaCodEval, pcCodPers, pMatDiasAtrs(i, 0), pMatDiasAtrs(i, 1), pMatDiasAtrs(i, 2), dFecSis, dFecCierre)
                    Next i
                End If
        End If

        If IsArray(pMatFichaNew) Then 'Pregunto Matriz no Sea Vacia
                If UBound(pMatFichaNew) Then
            If pnTipoReg = 2 Then
                Call oCredFichaSobreEnd.EliminarFichaSobEndNew(pscCtaCodEval, pcCodPers, dFecSis)
            End If
                    For i = 1 To UBound(pMatFichaNew)
                      If CInt(pMatFichaNew(i, 1)) <> 0 Then
                            Call oCredFichaSobreEnd.GuardarFichaNew(nID, pscCtaCodEval, pcCodPers, pcCtaCodNew, pMatFichaNew(i, 0), pMatFichaNew(i, 1), pMatFichaNew(i, 2), dFecSis, dFecCierre)
                      End If
                    Next i
                End If
        End If

        If IsArray(pMatFichaAdm) Then 'Pregunto Matriz no Sea Vacia
                If UBound(pMatFichaAdm) Then
            If pnTipoReg = 2 Then
                Call oCredFichaSobreEnd.EliminarFichaSobEndAdm(pscCtaCodEval, pcCodPers, dFecSis)
            End If
                    For i = 1 To UBound(pMatFichaAdm)
                        If CInt(pMatFichaAdm(i, 1)) <> 0 Then
                            Call oCredFichaSobreEnd.GuardarFichaAdm(nID, pscCtaCodEval, pcCodPers, pcCtaCodAdm, pMatFichaAdm(i, 0), pMatFichaAdm(i, 1), pMatFichaAdm(i, 2), pMatFichaAdm(i, 3), dFecSis, dFecCierre)
                        End If
                    Next i
                End If
        End If

    'Set oCredito = Nothing

    GrabarFichaSobreEnd = True
    Exit Function
ErrorGrabarFichaSobreEnd:
    'oCredito.dRollbackTrans
    GrabarFichaSobreEnd = False
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function ObtieneTipoPermisoFichaSobreEnd(ByVal pTpoReg As String, ByVal pCargo As String) As Integer
On Error GoTo ErrorObtieneTipoPermisoFichaSobreEnd
    Dim oGen As COMDConstSistema.DCOMGeneral
    Dim i As Integer
    Dim sCargosFichaSobEnd As String
    Dim sCodCargo() As String

    Set oGen = New COMDConstSistema.DCOMGeneral

    If pTpoReg = 3 Then
        sCargosFichaSobEnd = oGen.LeeConstSistema(gConstSistRHCargoCodRiesgos)
        sCodCargo = Split(sCargosFichaSobEnd, ",")
        ObtieneTipoPermisoFichaSobreEnd = 0
    Else
        sCargosFichaSobEnd = oGen.LeeConstSistema(gConstSistRHCargoCodJefeAgenciaNegocio)
        sCodCargo = Split(sCargosFichaSobEnd, ",")
        ObtieneTipoPermisoFichaSobreEnd = 0
    End If

    If pTpoReg = 3 Then
        For i = 0 To UBound(sCodCargo)
            If pCargo = sCodCargo(i) Then
                ObtieneTipoPermisoFichaSobreEnd = 2
                Exit Function
            End If
        Next i
    Else
        For i = 0 To UBound(sCodCargo)
            If pCargo = sCodCargo(i) Then
                ObtieneTipoPermisoFichaSobreEnd = 3
                Exit Function
            End If
        Next i
    End If

    Exit Function
ErrorObtieneTipoPermisoFichaSobreEnd:
    MsgBox Err.Description, vbCritical, "Error"
End Function
'JOEP ERS059_2016

'*************BEGIN APRI 20170206 '20170324 Se descomento x FRHU
Public Function ObtenerCFRelacion(ByVal psCtaCod As String) As ADODB.Recordset
    Dim sSql As String
    Dim oCon As New COMConecta.DCOMConecta
    sSql = "EXEC STP_CFINFORELACION '" & psCtaCod & "'"
    oCon.AbreConexion
    Set ObtenerCFRelacion = oCon.CargaRecordSet(sSql)
    oCon.CierraConexion
    Set oCon = Nothing
End Function
Public Function ObtenerTipoCredito(ByVal psCtaCod As String) As ADODB.Recordset
    Dim sSql As String
    Dim oCon As New COMConecta.DCOMConecta
    sSql = "EXEC STP_VERIFICAR_CREDITO '" & psCtaCod & "'"
    oCon.AbreConexion
    Set ObtenerTipoCredito = oCon.CargaRecordSet(sSql)
    oCon.CierraConexion
    Set oCon = Nothing
End Function
Public Function ObtenerGarantiaPersona(ByVal psCtaCod As String) As ADODB.Recordset
    Dim sSql As String
    Dim oCon As New COMConecta.DCOMConecta
    sSql = "EXEC STP_CAINFOGARANTIASPERSONA '" & psCtaCod & "'"
    oCon.AbreConexion
    Set ObtenerGarantiaPersona = oCon.CargaRecordSet(sSql)
    oCon.CierraConexion
    Set oCon = Nothing
End Function
Public Function ObtenerTitularCredito(ByVal psCtaCod As String) As ADODB.Recordset 'EAAS 20170831
    Dim sSql As String
    Dim oCon As New COMConecta.DCOMConecta
    sSql = "EXEC STP_SEL_ObtenerTitularAvaladoRapiflash '" & psCtaCod & "'"
    oCon.AbreConexion
    Set ObtenerTitularCredito = oCon.CargaRecordSet(sSql)
    oCon.CierraConexion
    Set oCon = Nothing
End Function
'END EAAS 20170831
Public Function ObtenerGarantias(ByVal psCtaCod As String) As ADODB.Recordset
    Dim sSql As String
    Dim oCon As New COMConecta.DCOMConecta
    sSql = "EXEC STP_CACTAGARANTIAS '" & psCtaCod & "'" ' ,'" & pcPersCod & "'"
    oCon.AbreConexion
    Set ObtenerGarantias = oCon.CargaRecordSet(sSql)
    oCon.CierraConexion
    Set oCon = Nothing
End Function
'*************END APRI
'FIN FRHU 20170316 Descomentar despues de la reprogramación


'Inicio - JOEP ERS-064
Public Function GrabarDatosConfMonto(ByVal pnMatDatosConfMonto As Variant)
Dim i As Integer

Dim oCredDatosConfMonto As COMDCredito.DCOMCredito
Set oCredDatosConfMonto = New COMDCredito.DCOMCredito

On Error GoTo ErrorGrabarDatosConfMonto
        
     If IsArray(pnMatDatosConfMonto) Then 'Pregunto Matriz no Sea Vacia
        If UBound(pnMatDatosConfMonto) Then
            For i = 1 To UBound(pnMatDatosConfMonto)
                
                    Call oCredDatosConfMonto.GrabarDatosConfMonto(pnMatDatosConfMonto(i, 12), pnMatDatosConfMonto(i, 2), pnMatDatosConfMonto(i, 3), pnMatDatosConfMonto(i, 4))
                
                    Call oCredDatosConfMonto.GrabarDatosConfMonto(pnMatDatosConfMonto(i, 12), pnMatDatosConfMonto(i, 2), pnMatDatosConfMonto(i, 5), pnMatDatosConfMonto(i, 6))
                
                    Call oCredDatosConfMonto.GrabarDatosConfMonto(pnMatDatosConfMonto(i, 12), pnMatDatosConfMonto(i, 7), pnMatDatosConfMonto(i, 7), pnMatDatosConfMonto(i, 9))
                
                    Call oCredDatosConfMonto.GrabarDatosConfMonto(pnMatDatosConfMonto(i, 12), pnMatDatosConfMonto(i, 7), pnMatDatosConfMonto(i, 10), pnMatDatosConfMonto(i, 11))
                
            Next i
        End If
    End If
    
    GrabarDatosConfMonto = True
    
Exit Function
ErrorGrabarDatosConfMonto:
    MsgBox Err.Description, vbCritical, "Error"
    
End Function

Public Function GrabarDatosConfCatAge(ByVal pnMatDatosConfMonto As Variant)
Dim i As Integer

Dim oCredDatosConfMonto As COMDCredito.DCOMCredito
Set oCredDatosConfMonto = New COMDCredito.DCOMCredito

On Error GoTo ErrorGrabarDatosConfCatAge
        
     If IsArray(pnMatDatosConfMonto) Then 'Pregunto Matriz no Sea Vacia
        If UBound(pnMatDatosConfMonto) Then
            For i = 1 To UBound(pnMatDatosConfMonto)
                    Call oCredDatosConfMonto.GrabarDatosConfCatAge(pnMatDatosConfMonto(i, 1), pnMatDatosConfMonto(i, 2), pnMatDatosConfMonto(i, 3))
                
                    Call oCredDatosConfMonto.GrabarDatosConfCatAge(pnMatDatosConfMonto(i, 1), pnMatDatosConfMonto(i, 4), pnMatDatosConfMonto(i, 5))
                
                    Call oCredDatosConfMonto.GrabarDatosConfCatAge(pnMatDatosConfMonto(i, 1), pnMatDatosConfMonto(i, 6), pnMatDatosConfMonto(i, 7))
                
                    Call oCredDatosConfMonto.GrabarDatosConfCatAge(pnMatDatosConfMonto(i, 1), pnMatDatosConfMonto(i, 8), pnMatDatosConfMonto(i, 9))
            Next i
        End If
    End If
    
    GrabarDatosConfCatAge = True
    
Exit Function

ErrorGrabarDatosConfCatAge:
    MsgBox Err.Description, vbCritical, "Error"
    
End Function

'Public Function GrabarDatosMoraAge(ByVal pdFechaSis As String, ByVal pnMatDatosConfMonto As Variant)
'Dim i As Integer
'
'Dim oCredDatosMoraAge As COMDCredito.DCOMCredito
'Set oCredDatosMoraAge = New COMDCredito.DCOMCredito
'
'On Error GoTo ErrorGrabarDatosMoraAge
'
'     If IsArray(pnMatDatosConfMonto) Then 'Pregunto Matriz no Sea Vacia
'        If UBound(pnMatDatosConfMonto) Then
'            For i = 1 To UBound(pnMatDatosConfMonto)
'                    Call oCredDatosMoraAge.GuardarMoraAgencia(CStr(pdFechaSis), CStr(pnMatDatosConfMonto(i, 1)), CDbl(pnMatDatosConfMonto(i, 2)))
'            Next i
'        End If
'    End If
'
'    GrabarDatosMoraAge = True
'
'Exit Function
'
'ErrorGrabarDatosMoraAge:
'    MsgBox Err.Description, vbCritical, "Error"
'
'End Function

'Fin - JOEP ERS-064

'JOEP 20170823 Configuracion de Codigos ERS044
Public Function GrabarDatosCodigosSob(ByVal nCod As Integer, ByVal nMatCodigos As Variant, Optional ByVal pnTipProd As Integer = 0, Optional ByVal pnTipCliente As Integer = 0, Optional ByVal pnCondicion As String = "", Optional ByVal pnEntidad As Integer = 0, Optional ByVal pnClisf As Integer = 0)
Dim i As Integer

Dim oCredDatosConfCod As COMDCredito.DCOMCredito
Set oCredDatosConfCod = New COMDCredito.DCOMCredito

On Error GoTo ErrorGrabarDatosCodigosSob
        
    If nCod = 1 Then
        If IsArray(nMatCodigos) Then 'Pregunto Matriz no Sea Vacia
            If UBound(nMatCodigos) Then
                For i = 1 To UBound(nMatCodigos)
                    Call oCredDatosConfCod.GrabarDatosCodigosSob(nMatCodigos(i, 1), nCod, nMatCodigos(i, 2), nMatCodigos(i, 3), nMatCodigos(i, 4), pnTipProd)
                Next i
            End If
        End If
    ElseIf nCod = 2 Then
        If IsArray(nMatCodigos) Then 'Pregunto Matriz no Sea Vacia
            If UBound(nMatCodigos) Then
                For i = 1 To UBound(nMatCodigos)
                    Call oCredDatosConfCod.GrabarDatosCodigosSob(nMatCodigos(i, 1), nCod, nMatCodigos(i, 2), nMatCodigos(i, 3), nMatCodigos(i, 4))
                Next i
            End If
        End If
    ElseIf nCod = 3 Then
        If IsArray(nMatCodigos) Then 'Pregunto Matriz no Sea Vacia
            If UBound(nMatCodigos) Then
                For i = 1 To UBound(nMatCodigos)
                    Call oCredDatosConfCod.GrabarDatosCodigosSob(nMatCodigos(i, 1), nCod, nMatCodigos(i, 2), nMatCodigos(i, 3), nMatCodigos(i, 4), pnTipProd)
                Next i
            End If
        End If
    ElseIf nCod = 4 Then
        If IsArray(nMatCodigos) Then 'Pregunto Matriz no Sea Vacia
            If UBound(nMatCodigos) Then
                For i = 1 To UBound(nMatCodigos)
                    Call oCredDatosConfCod.GrabarDatosCodigosSob(nMatCodigos(i, 1), nCod, , , nMatCodigos(i, 5), , Right(nMatCodigos(i, 2), 2), Right(nMatCodigos(i, 3), 2), Right(nMatCodigos(i, 4), 2))
                Next i
            End If
        End If
    End If
    
    GrabarDatosCodigosSob = True
    
Exit Function

ErrorGrabarDatosCodigosSob:
    MsgBox Err.Description, vbCritical, "Error"
    
End Function

Public Function GrabarDatosModulosCodigosSob(ByVal pnModulo As Integer, ByVal pcModulo As String, Optional ByVal pnMatModulo As Variant)
Dim i As Integer

Dim oCredDatosConfCod As COMDCredito.DCOMCredito
Set oCredDatosConfCod = New COMDCredito.DCOMCredito

On Error GoTo ErrorGrabarDatosModulosCodigosSob
        
    If pnModulo <> 7 Then
        If IsArray(pnMatModulo) Then 'Pregunto Matriz no Sea Vacia
            If UBound(pnMatModulo) Then
                For i = 1 To UBound(pnMatModulo)
                    Call oCredDatosConfCod.GrabarDatosModulosCodigosSob(pnMatModulo(i, 1), pnModulo, pcModulo, Right(pnMatModulo(i, 2), 2), 0, 0, 0, pnMatModulo(i, 3))
                Next i
            End If
        End If
    ElseIf pnModulo = 7 Then
        If IsArray(pnMatModulo) Then 'Pregunto Matriz no Sea Vacia
            If UBound(pnMatModulo) Then
                For i = 1 To UBound(pnMatModulo)
                    Call oCredDatosConfCod.GrabarDatosModulosCodigosSob(pnMatModulo(i, 1), pnModulo, pcModulo, 0, pnMatModulo(i, 2), pnMatModulo(i, 3), Right(pnMatModulo(i, 4), 2), 0)
                Next i
            End If
        End If
    End If
    
    GrabarDatosModulosCodigosSob = True
    
Exit Function

ErrorGrabarDatosModulosCodigosSob:
    MsgBox Err.Description, vbCritical, "Error"
    
End Function
'JOEP 20170823 Configuracion de Codigos ERS044

'Inicio Agrego JOEP20171214 ACTA220-2017
Public Function ObtieneTipoPermisoReprog(ByVal pCargo As String) As Integer
On Error GoTo ErrorObtieneTipoPermiso
    Dim oGen As COMDConstSistema.DCOMGeneral
    Dim i As Integer
    Dim sCargosGR As String
    Dim sCargosCC As String
    Dim sCargosSC As String
    Dim sCargosSNC As String
    Dim sCodCargoGR() As String
    Dim sCodCargoCC() As String
    Dim sCodCargoSC() As String
    Dim sCodCargoSNC() As String

    Set oGen = New COMDConstSistema.DCOMGeneral

    sCargosGR = oGen.LeeConstSistema(703)
    sCodCargoGR = Split(sCargosGR, ",")
    
    sCargosCC = oGen.LeeConstSistema(704)
    sCodCargoCC = Split(sCargosCC, ",")

    sCargosSC = oGen.LeeConstSistema(705)
    sCodCargoSC = Split(sCargosSC, ",")
    
    sCargosSNC = oGen.LeeConstSistema(706)
    sCodCargoSNC = Split(sCargosSNC, ",")
    
ObtieneTipoPermisoReprog = 0

    For i = 0 To UBound(sCodCargoCC)
        If pCargo = sCodCargoCC(i) Then
            ObtieneTipoPermisoReprog = 1
            Exit Function
        End If
    Next i
    
    For i = 0 To UBound(sCodCargoGR)
        If pCargo = sCodCargoGR(i) Then
            ObtieneTipoPermisoReprog = 2
            Exit Function
        End If
    Next i
        
    For i = 0 To UBound(sCodCargoSC)
        If pCargo = sCodCargoSC(i) Then
            ObtieneTipoPermisoReprog = 3
            Exit Function
        End If
    Next i
    
    For i = 0 To UBound(sCodCargoSNC)
        If pCargo = sCodCargoSNC(i) Then
            ObtieneTipoPermisoReprog = 4
            Exit Function
        End If
    Next i
    
    Exit Function
ErrorObtieneTipoPermiso:
    MsgBox Err.Description, vbCritical, "Error"
End Function
'Fin Agrego JOEP20171214 ACTA220-2017
'INICIO EAAS20180924 SEGUN ACTA 103-2018
Public Function EsCredParaAmpliado(ByVal psCtaCod As String) As Boolean
    Dim oAmpliadoVal As New COMDCredito.DCOMAmpliacion
    On Error GoTo ErrEsCredParaAmpliado
    EsCredParaAmpliado = oAmpliadoVal.ValidaCreditoParaAmpliar(psCtaCod)
    Set oAmpliadoVal = Nothing
    Exit Function
ErrEsCredParaAmpliado:
    Err.Raise Err.Number, "Error En Proceso <ErrEsCredParaAmpliado>", Err.Description
End Function
'FIN EAAS20180924 SEGUN ACTA 103-2018


'CROB20180813 ERS055-2018
Public Sub RegistrarCampanaMaximaAnual(ByVal pnCantMaxAnual As Byte, pcUserReg As String)
Dim oCredito As COMDCredito.DCOMCredito
On Error GoTo ErrorRegistrarCampanaMaximaAnual

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Registro Campana maxima anual
Call oCredito.RegistrarCampanaMaximaAnual(pnCantMaxAnual, pcUserReg)

oCredito.CommitTrans
Set oCredito = Nothing
Exit Sub

ErrorRegistrarCampanaMaximaAnual:
oCredito.RollbackTrans
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Sub

Public Sub RegistrarDescuentoCampanaAdicionalAnual(ByVal psPersCod As String, ByVal pnCantDescMax As Byte, ByVal psUsuarioReg As String)
Dim oCredito As COMDCredito.DCOMCredito
On Error GoTo ErrorRegistrarDescuentoCampanaAdicionalAnual

Set oCredito = New COMDCredito.DCOMCredito
oCredito.BeginTrans

'Registro descuento adicional campanas
Call oCredito.RegistrarDescuentoCampanaAdicionalAnual(psPersCod, pnCantDescMax, psUsuarioReg)

oCredito.CommitTrans
Set oCredito = Nothing
Exit Sub

ErrorRegistrarDescuentoCampanaAdicionalAnual:
oCredito.RollbackTrans
Err.Raise Err.Number, "Error En Proceso", Err.Description
End Sub
'CROB20180813 ERS055-2018

'INICIO EAAS20181031
Function CFijaFechaFijaNew(ByVal pTasa As Double, ByVal pPlazo As Integer, ByVal pnMonto As Double, _
    ByVal pnPer As Double, ByVal pdFecDes As Date, ByVal pnDiaFijo As Integer, _
    ByVal pnDiasGracia As Integer, ByVal pnProxMes As Integer, Optional pnDeltaMes As Integer = 1, _
    Optional ByVal pbMiViv As Boolean = False, Optional ByVal pnDiaFijo2 As Integer = 0, _
    Optional ByVal pnNroCuotas As Integer = 0, Optional ByVal pdFechaCuotaPend As Date = "01/01/1900") As Double

Dim i As Integer
Dim SumTotal As Double
Dim nTasaDiaria As Double
Dim nValorActual As Double
Dim nDiasTrans As Integer
Dim dFecInicio, dFecVenc, dFecTemp As Date
Dim nDia, nMes, nAnio As Integer
Dim nProxMesTmp As Boolean
        
'*********** Manejo de 2 dias fijos
    If pnDiaFijo2 <> 0 Then
        
        nTasaDiaria = ((1 + (pTasa / 100)) ^ (1 / 30) - 1) * 100
        SumTotal = 0
        dFecInicio = pdFecDes + pnDiasGracia

        If Day(pdFecDes) <= pnDiaFijo2 - 8 Then
            nDia = pnDiaFijo2
        Else
            nDia = pnDiaFijo
        End If
        
        nMes = Month(dFecInicio)
        nAnio = Year(dFecInicio)

        If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
            If nDia = 31 Then
                nDia = 30
            End If
        End If
        If nMes = 2 Then
            If nDia >= 29 Then
                If nAnio Mod 4 = 0 Then 'si es biciesto
                    nDia = 29
                Else
                    nDia = 28
                End If
            End If
        End If

        dFecTemp = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Trim(Str(nAnio)), "dd/mm/yyyy"))
        If dFecTemp < dFecInicio Then
            nProxMesTmp = True
        Else
            nProxMesTmp = False
        End If

        If pnProxMes Or nProxMesTmp Or pnDeltaMes = 6 Then
            nMes = nMes + pnDeltaMes
        End If
        For i = 1 To pPlazo
        
            If nMes > 12 Then
                nMes = nMes - 12
                nAnio = nAnio + 1
            End If
            If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
                If nDia = 31 Then
                    nDia = 30
                End If
            End If
            If nMes = 2 Then
                If nDia >= 29 Then
                    If nAnio Mod 4 = 0 Then 'si es biciesto
                        nDia = 29
                    Else
                        nDia = 28
                    End If
                End If
            End If

            dFecVenc = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Format(nAnio, "0000"), "dd/mm/yyyy"))
            If i = 1 And pbMiViv Then
                dFecInicio = dFecInicio - pnDiasGracia
            End If
            nDiasTrans = dFecVenc - dFecInicio
            nValorActual = (1 / (1 + (nTasaDiaria / 100))) ^ (nDiasTrans)
            SumTotal = SumTotal + nValorActual
            
            If nDia = pnDiaFijo Then
                nDia = pnDiaFijo2
            Else
                nDia = pnDiaFijo
                nMes = nMes + pnDeltaMes
            End If
            
        Next i

        CFijaFechaFijaNew = pnMonto / SumTotal
    
    Else
        nTasaDiaria = ((1 + (pTasa / 100)) ^ (1 / 30) - 1) * 100
        SumTotal = 0
        dFecInicio = pdFecDes
        'INICIO EAAS201811103
        If pdFechaCuotaPend <> "12:00:00 AM" Then
            nDia = Day(pdFechaCuotaPend)
            nMes = Month(pdFechaCuotaPend)
            nAnio = Year(pdFechaCuotaPend)
        Else
'            dFecInicio = dFecInicio + 30
'            nDia = Day(dFecInicio)
'            nMes = Month(dFecInicio)
'            nAnio = Year(dFecInicio)

        nDia = pnDiaFijo
        nMes = Month(dFecInicio)
        nAnio = Year(dFecInicio)
        
        'MAVM 20110104 ***
            If Not (nDia >= Day(dFecInicio) And (Not pnProxMes)) Then
                If pnDiasGracia <> 0 Then
                    dFecTemp = dFecInicio + 30
                    nDia = Day(dFecTemp)
                    nMes = Month(dFecTemp)
                    nAnio = Year(dFecTemp)
                Else
                    nMes = nMes + pnDeltaMes
                    If nMes > 12 Then
                        nMes = nMes - 12
                        nAnio = nAnio + 1
                    End If
                    
                    If nMes = 2 Then
                        If nDia > 28 Then
                            If nAnio Mod 4 = 0 Then
                                nDia = 29
                            Else
                                nDia = 28
                            End If
                        End If
                    Else
                        If nDia > 30 Then
                            If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
                                nDia = 30
                            End If
                        End If
                    End If
                    
                    If CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Trim(Str(nAnio)), "dd/mm/yyyy")) - dFecInicio < 5 Then
                       'MADM 201120218
                        nMes = nMes + pnDeltaMes
                        If nMes > 12 Then
                            nAnio = nAnio + 1
                            nMes = 1
                        End If
                        'END MADM
                    End If
                End If
            End If
        End If
        'FIN EAAS201811103
        For i = 1 To pPlazo
            If nMes > 12 Then
                nMes = nMes - 12
                nAnio = nAnio + 1
            End If
            If nMes = 4 Or nMes = 6 Or nMes = 9 Or nMes = 11 Then
                If nDia = 31 Then
                    nDia = 30
                End If
            End If
            If nMes = 2 Then
                If nDia >= 29 Then
                    If nAnio Mod 4 = 0 Then 'si es biciesto
                        nDia = 29
                    Else
                        nDia = 28
                    End If
                End If
            End If

            dFecVenc = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Format(nAnio, "0000"), "dd/mm/yyyy"))
            
            nDiasTrans = dFecVenc - dFecInicio
            nValorActual = (1 / (1 + (nTasaDiaria / 100))) ^ (nDiasTrans)
            SumTotal = SumTotal + nValorActual
            nDia = pnDiaFijo
            nMes = nMes + pnDeltaMes
        Next i

        CFijaFechaFijaNew = pnMonto / SumTotal
        
    End If
    
    CFijaFechaFijaNew = CDbl(Format(CFijaFechaFijaNew, "#0.00"))

End Function

'FIN EAAS20181031

'CTI2 20181229 *** INI
Private Sub Class_Initialize()
    pbExcluyeGastos = False
    CofideReactivaLimpiarDatos 'ANGC/RIRO 20200520 Cofide Reactiva
    nICVCuota = 0 'RIRO 20210523
    nICVTotal = 0 'RIRO 20210523
End Sub
'CTI2 20181229 *** FIN

'->***** LUCV20180601, Agregó según ERS022-2018
Public Function ValidaFechasFijasCuota(Optional ByRef pnDia As Integer = -1, Optional ByRef pnMes As Integer = -1, Optional ByRef pnAnio As Integer = -1) As Integer
    On Error GoTo ErrorValidaFechasFijasCuota
        If pnMes > 12 Then
            pnAnio = pnAnio + 1
            pnMes = pnMes - 12
        End If
        If pnMes = 2 Then
            If pnDia > 28 Then
                If pnAnio Mod 4 = 0 Then
                    pnDia = 29
                Else
                    pnDia = 28
                End If
            End If
        Else
            If pnDia > 30 Then
                If pnMes = 4 Or pnMes = 6 Or pnMes = 9 Or pnMes = 11 Then
                    pnDia = 30
                End If
            End If
        End If
        Exit Function
ErrorValidaFechasFijasCuota:
        Err.Raise Err.Number, "Error", Err.Description
End Function
Public Function ObtieneEquivalenteEfectivoMensual(Optional ByVal pnTasa As Double) As Double
    ObtieneEquivalenteEfectivoMensual = Round(((1 + (pnTasa / 100) / 30) ^ 30) - 1, 10) * 100
End Function
Function CuotaFijaTipoPeriodo(ByVal pnTEMTotal As Double, _
                              ByVal pdFecDesemb As Date, _
                              ByVal pnNroCuotas As Integer, _
                              ByVal pnMonto As Double, _
                              ByVal pnTipoPeriodo As Integer, _
                              ByVal pnPeriodo As Integer, _
                              ByVal pnDiaFijo As Integer, _
                              Optional ByVal pnDiasGracia As Integer = 0, _
                              Optional ByVal pnNumMes As Integer = 1, _
                              Optional ByRef pnTotalDias As Integer = 0, _
                              Optional ByRef pnSumaFAS As Double = 0, _
                              Optional ByVal pbReprogramacion As Boolean = False, _
                              Optional ByVal pbRealizaPagoAnt As Boolean = False, _
                              Optional ByVal pdFechaCuotaPend As Date = "01/01/1900", _
                              Optional ByVal pdDesembolsoNuevo As Date = "01/01/1900") As Double
                              'LUCV20180601, Este met. reemplazó a CuotaFija, CFijaFechaFija
                              'pdFechaCuotaPend: Fecha de la Prox. Cuota a pagar
                              'pdDesembolsoNuevo: Fecha con ultimo pago realizado
    
    Dim i As Integer
    Dim nDiasTrans As Integer
    Dim dFecInicio As Date
    Dim dFecVenc As Date
    Dim dFecTemp As Date
    Dim dFechaReprogramado As Date
    'Tipo Calendario: Fecha Fija
    Dim nDia As Integer
    Dim nMes As Integer
    Dim nAnio As Integer
    'Factor de Actualización de la serie
    Dim nFAS As Double
    
    'Inicializa variables de iteración
    pnSumaFAS = 0: nDiasTrans = 0
    dFecInicio = pdFecDesemb + pnDiasGracia
        
    If pnTipoPeriodo = FechaFija Then '----------------------------------------
        dFecTemp = dFecInicio + 30
        nDia = Day(dFecTemp)
        nMes = Month(dFecTemp)
        nAnio = Year(dFecTemp)
        Call ValidaFechasFijasCuota(nDia, nMes, nAnio)
        
        'Artificio para cuando el desembolso sea a fines de enero
        If CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Trim(Str(nAnio)), "dd/mm/yyyy")) - dFecInicio < 5 Then
            nMes = nMes + pnNumMes
            Call ValidaFechasFijasCuota(nDia, nMes, nAnio)
        End If

        'Para: Pago Anticipado
        If pbRealizaPagoAnt = True Then
           nDia = Day(pdFechaCuotaPend)
           nMes = Month(pdFechaCuotaPend)
           nAnio = Year(pdFechaCuotaPend)
           If (pdFechaCuotaPend > dFecInicio) And (pdDesembolsoNuevo > dFecInicio) Then
                dFecInicio = pdDesembolsoNuevo
           End If
        End If
        
        'Para: Reprogramación
        If (pbReprogramacion = True) Then
            dFechaReprogramado = pdFechaCuotaPend + pnDiasGracia 'pnDiasGracia: Representa los días Reprogramados
            nDia = Day(dFechaReprogramado)
            nMes = Month(dFechaReprogramado)
            nAnio = Year(dFechaReprogramado)
            
            'dFecInicio = pdDesembolsoNuevo + pnDiasGracia 'Comento JOEP20200414 Covid
            dFecInicio = pdDesembolsoNuevo 'Add JOEP20200414 Covid
        End If
        
        'Recorrido de todas las cuotas
        Call ValidaFechasFijasCuota(nDia, nMes, nAnio)
        For i = 1 To pnNroCuotas
            Call ValidaFechasFijasCuota(nDia, nMes, nAnio)
            dFecVenc = CDate(Format(Format(nDia, "00") & "/" & Format(nMes, "00") & "/" & Format(nAnio, "0000"), "dd/mm/yyyy"))
            
            nDiasTrans = dFecVenc - dFecInicio
            nFAS = 1 / ((1 + pnTEMTotal / 100) ^ (nDiasTrans / 30))
            pnSumaFAS = pnSumaFAS + nFAS
            
            nDia = pnDiaFijo
            nMes = nMes + pnNumMes
        Next i
        
    ElseIf pnTipoPeriodo = PeriodoFijo Then '----------------------------------
        dFecTemp = dFecInicio + pnPeriodo
        
        For i = 1 To pnNroCuotas
            dFecVenc = dFecTemp
            nDiasTrans = dFecVenc - dFecInicio
            
            nFAS = 1 / ((1 + pnTEMTotal / 100) ^ (nDiasTrans / 30))
            pnSumaFAS = pnSumaFAS + nFAS
            
            dFecTemp = dFecTemp + pnPeriodo
        Next i
    Else
        CuotaFijaTipoPeriodo = "#0.00"
        Exit Function
    End If
    
    'Consideramos los días de gracia o dias a reprogramarse
    'pnTotalDias = nDiasTrans + pnDiasGracia'Comento JOEP20200414 Covid
    'Add JOEP20200414 Covid
    If (pbReprogramacion = True) Then
        pnTotalDias = nDiasTrans
    Else
        pnTotalDias = nDiasTrans + pnDiasGracia
    End If
    'Add JOEP20200414 Covid
    
    CuotaFijaTipoPeriodo = (pnMonto / pnSumaFAS)
    CuotaFijaTipoPeriodo = CDbl(Format(CuotaFijaTipoPeriodo, "#0.00"))
    
End Function

Function ObtieneValoresGraciaCalendarioIterativo(ByVal pnNroCuota As Integer, _
                                                ByVal pnTasaInt As Double, _
                                                ByVal pnPeriodoDiasGracia As Integer, _
                                                ByVal pnIntPeriodoGracia As Double, _
                                                ByVal pnMontoCuotaPrevia As Double, _
                                                ByVal pnIntComp As Double, _
                                                ByVal pnSegDes As Double, _
                                                ByVal pnMontoPrima As Double, _
                                                ByRef pnGraciaGenerada As Double, _
                                                ByRef pnGraciaCapitalizada As Double, _
                                                ByRef pnGraciaNoPagada As Double) As Double
    
    Dim nGraciaGenerado As Currency
    On Error GoTo ErrorObtieneValoresGraciaCalendarioIterativo
    

    'Para Cuota Inicial
    If pnNroCuota = 0 Then
        'Gracia Generada
        pnGraciaGenerada = pnIntPeriodoGracia
        'Gracia Capitalizada
        pnGraciaCapitalizada = MontoIntPerDias(pnTasaInt, pnPeriodoDiasGracia, pnIntPeriodoGracia)
        'Obtiene Gracia No Pagada
        'If pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnIntComp + pnSegDes + pnMontoPrima) >= 0 Then 'Comentado a petición GELU
        If pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnSegDes) >= 0 Then
            pnGraciaNoPagada = 0
        Else
            'pnGraciaNoPagada = pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnIntComp + pnSegDes + pnMontoPrima) 'Comentado a petición GELU
            pnGraciaNoPagada = pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnSegDes)
        End If
    Else
        'Gracia Generada
        If pnGraciaNoPagada >= 0 Then
            pnGraciaGenerada = 0
        Else
            pnGraciaGenerada = Abs(pnGraciaNoPagada)
        End If
        'Gracia Capitalizada
        pnGraciaCapitalizada = MontoIntPerDias(pnTasaInt, pnPeriodoDiasGracia, pnGraciaGenerada)
        'Obtiene Gracia No Pagada
        'If pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnIntComp + pnSegDes) >= 0 Then 'Comentado a petición GELU
        If pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnSegDes) >= 0 Then
            pnGraciaNoPagada = 0
        Else
            'pnGraciaNoPagada = pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnIntComp + pnSegDes + pnMontoPrima)'Comentado a petición GELU
            pnGraciaNoPagada = pnMontoCuotaPrevia - (pnGraciaGenerada + pnGraciaCapitalizada) - (pnSegDes)
        End If
    End If
    
    'Resultado Final
    nGraciaGenerado = (pnGraciaGenerada + pnGraciaCapitalizada + pnGraciaNoPagada)
    ObtieneValoresGraciaCalendarioIterativo = CDbl(Format(nGraciaGenerado, "#0.00"))
    
       Exit Function
       
ErrorObtieneValoresGraciaCalendarioIterativo:
MsgBox Err.Description, vbCritical, "Error"
End Function

Public Function RecuperaValoresGarantiaPoliza(ByVal psCtaCod As String) As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrorRecuperaValoresGarantiaPoliza
    sSql = "exec stp_sel_ERS0222018_GarantiasxSolicitudPoliza '" & psCtaCod & "'"
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set RecuperaValoresGarantiaPoliza = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorRecuperaValoresGarantiaPoliza:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function

Public Function RecuperaDatosReprogramacionCalendario(ByVal psCtaCod As String) As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrorRecuperaDatosReprogramacionCalendario
    sSql = "exec stp_sel_ERS0222018_DatosReprogramacionCalendario '" & psCtaCod & "'"
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set RecuperaDatosReprogramacionCalendario = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorRecuperaDatosReprogramacionCalendario:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'<-***** Fin LUCV20180601

'Add joep20200414 Covid
Public Function RecuperaDatosLiquidacionReprogramacion(ByVal psCtaCod As String) As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrorRecuperaDatosLiquidacionReprogramacion
    sSql = "exec stp_sel_ObtieneLiquidacionReprogramados '" & psCtaCod & "'"
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set RecuperaDatosLiquidacionReprogramacion = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrorRecuperaDatosLiquidacionReprogramacion:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
'Add joep20200414 Covid

Public Function CofideReactivaLimpiarDatos()
    bAplicaComision = False
    nComisionCofideReactiva = 0
End Function

'RIRO 20200911 CORRECCION LIQUIDACION ****************

Public Function VerificaActualizacionLiquidacion(ByVal psCtaCod As String, Optional ByRef cMensaje As String = "") As Boolean
    Dim bAplicaLiqCalendIterativo As Boolean
    Dim bLiquidacionActualizada As Boolean
    Dim oGen As COMDConstSistema.DCOMGeneral
    Dim oCalend As COMDCredito.DCOMCalendario
    Dim rsLiquidacion As ADODB.Recordset
    
    Set oGen = New COMDConstSistema.DCOMGeneral
    Set oCalend = New COMDCredito.DCOMCalendario
    Dim bRespuesta As Boolean
    bRespuesta = False
    bAplicaLiqCalendIterativo = False
    bLiquidacionActualizada = False
    bAplicaLiqCalendIterativo = IIf(Val(oGen.LeeConstSistema(741)) = 1, True, False)
    
    If bAplicaLiqCalendIterativo = False Then
        bRespuesta = True
    Else
        bLiquidacionActualizada = oCalend.VerificaActualizacionLiquidacion(psCtaCod, "")
        Set oGen = Nothing
        Set oCalend = Nothing
        If bAplicaLiqCalendIterativo And bLiquidacionActualizada Then
            bRespuesta = True
        End If
    End If
    VerificaActualizacionLiquidacion = bRespuesta
End Function

'RIRO 20200911 CORRECCION LIQUIDACION ****************
'LARI 2021-02-03: FUNCIÓN DE VERIFICACIÓN DE AMPLIACIÓN DE CRÉDITO******
Public Function ValidaAmpliacion(ByVal pcCtaCod As String) As String
Dim Mensaje As String
Mensaje = ""
Dim rsAmpliacion As ADODB.Recordset
Set rsAmpliacion = New ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Set oCredito = New COMDCredito.DCOMCredito
Set rsAmpliacion = oCredito.ValidaCreditoAmpliarPagos(pcCtaCod)
'If (rsAmpliacion <> Null) Then
Mensaje = rsAmpliacion!Mensaje
'Else
'Mensje = ""
'End If
ValidaAmpliacion = Mensaje
End Function


'LARI 2021-06-04: ELIMINA LAS CUOTAS RESTANTES DE LA REPROGRAMACION************************************
Public Function EliminarCuotaSobranteRep(ByVal pcCtaCod As String, nCuotaF As Integer) As String
Dim Mensaje As String
Mensaje = ""
Dim rsRptaEliminar As ADODB.Recordset
Set rsRptaEliminar = New ADODB.Recordset
Dim oCredito As COMDCredito.DCOMCredito
Set oCredito = New COMDCredito.DCOMCredito
Set rsRptaEliminar = oCredito.EliminarCuotaSobranteRep(pcCtaCod, nCuotaF)
'If (rsRptaEliminar <> Null) Then
Mensaje = rsRptaEliminar!Rpta
'Else
'Mensje = ""
'End If
EliminarCuotaSobranteRep = Mensaje
End Function
'******************************************************************************************************
  


'CTI5 ERS0032020 20200119 ***
Public Function ListaTramosCapacidadPagoSobreEnd(ByVal pnTipoConfiguracion As Integer) As ADODB.Recordset
    Dim sSql As String
    Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrListaTramosCapacidadPagoSobreEnd
    sSql = "exec [dbo].[stp_sel_TramosCapacidadPagoSobreEnd] @pnTipoConfiguracion=" & pnTipoConfiguracion
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set ListaTramosCapacidadPagoSobreEnd = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrListaTramosCapacidadPagoSobreEnd:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
Public Function ListaNroEntidadesPagoSobreEnd(ByVal pnTipoConfiguracion As Integer) As ADODB.Recordset
    Dim sSql As String
    Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrListaNroEntidadesPagoSobreEnd
    sSql = "exec [dbo].[stp_sel_TramosNroEntidadesSobreEnd] @pnTipoConfiguracion=" & pnTipoConfiguracion
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set ListaNroEntidadesPagoSobreEnd = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrListaNroEntidadesPagoSobreEnd:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
Public Function ListaMatrizConfiguracionPagoSobreEnd(ByVal pnTipoConfiguracion As Integer) As ADODB.Recordset
    Dim sSql As String
    Dim oConecta As COMConecta.DCOMConecta

    On Error GoTo ErrListaMatrizConfiguracionPagoSobreEnd
    sSql = "exec [dbo].[stp_sel_MatrizConfiguracionSobreEnd] @pnTipoConfiguracion=" & pnTipoConfiguracion
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set ListaMatrizConfiguracionPagoSobreEnd = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing
    Exit Function

ErrListaMatrizConfiguracionPagoSobreEnd:
    Err.Raise Err.Number, "Error En Proceso", Err.Description
End Function
Public Function GrabarConfiguracionSobreEnd(ByVal pnTipoConfiguracion As Integer, _
        ByRef pTramosCP As Variant, _
        ByRef pNroEntidades As Variant, _
        ByRef pMatrizConfigSobreEnd As Variant, _
        ByVal psUsuario As String, ByVal psGlosa As String) As Boolean
    Dim obj As COMDCredito.DCOMCredito
    Dim bTransac As Boolean
    Dim i As Integer, J As Integer, z As Integer
    Dim nRSE As Integer
    
    Set obj = New COMDCredito.DCOMCredito
    On Error GoTo ErrGrabarConfiguracionSobreEnd
    
    Call obj.BeginTrans
    bTransac = True
    
    Call obj.EliminaMatrizConfiguracionSobreEnd(pnTipoConfiguracion)
    Call obj.EliminaNroEntidadesSobreEnd(pnTipoConfiguracion)
    Call obj.EliminaTramoCPSobreEnd(pnTipoConfiguracion)
    
    For i = 1 To UBound(pTramosCP, 2)
        Call obj.InsertaTramoCPSobreEnd(pnTipoConfiguracion, pTramosCP(1, i), pTramosCP(2, i), pTramosCP(3, i), pTramosCP(4, i))
    Next i

    For J = 1 To UBound(pNroEntidades, 2)
        Call obj.InsertaNroEntidadesSobreEnd(pnTipoConfiguracion, pNroEntidades(1, J), pNroEntidades(2, J), pNroEntidades(3, J), pNroEntidades(4, J))
    Next J
    
    For i = 1 To UBound(pTramosCP, 2)
        nRSE = 0
        For J = 1 To UBound(pNroEntidades, 2)
            For z = 1 To UBound(pMatrizConfigSobreEnd, 2)
                If (pMatrizConfigSobreEnd(2, z) = pTramosCP(1, i) And pMatrizConfigSobreEnd(3, z) = pNroEntidades(1, J)) Then
                    nRSE = pMatrizConfigSobreEnd(4, z)
                    Exit For
                End If
            Next z
                    
            Call obj.InsertaMatrizConfiguracionSobreEnd(pnTipoConfiguracion, pTramosCP(1, i), pNroEntidades(1, J), nRSE)
        Next J
    Next i
    
    Call obj.GuardarHistoricoConfiguracionSobreEnd(psUsuario, psGlosa, pnTipoConfiguracion)
    
    Call obj.CommitTrans
    bTransac = False
    
    GrabarConfiguracionSobreEnd = True
    Exit Function
ErrGrabarConfiguracionSobreEnd:
    GrabarConfiguracionSobreEnd = False
    If bTransac Then
        Call obj.RollbackTrans
        Set obj = Nothing
    End If
    Err.Raise Err.Number, "Ocurrió un error al grabar la configuración de Sobreendeudados", Err.Description
End Function

Private Function ExisteCuentaAperturaFMV(ByVal psCtaCod As String, ByRef pMatNroCtas As Variant) As Boolean
    If IsArray(pMatNroCtas) Then
        Dim i As Integer
        For i = 1 To UBound(pMatNroCtas)
            If pMatNroCtas(i) = psCtaCod Then
                ExisteCuentaAperturaFMV = True
            End If
        Next
    End If
End Function

'Public Function ObtenerCalendarioCredito(ByVal pcCtaCod As String) As Variant
'    Dim obj As COMDCredito.DCOMCredito
'    Set obj = New COMDCredito.DCOMCredito
'    Dim nIndex As Integer
'    Dim oRsbj As ADODB.Recordset
'    Set oRsbj = New ADODB.Recordset
'
'    Set oRsbj = obj.ObtenerCalendarioMIVIENDA(pcCtaCod)
'    nIndex = 0
'    If Not oRsbj.BOF And Not oRsbj.EOF Then
'        ReDim sCalendPagos(oRsbj.RecordCount, 3)
'        Do While Not oRsbj.EOF
'            sCalendPagos(nIndex, 0) = oRsbj!dVenc
'            sCalendPagos(nIndex, 1) = oRsbj!nCuota
'            sCalendPagos(nIndex, 2) = oRsbj!nMontoCuota
'            nIndex = nIndex + 1
'            oRsbj.MoveNext
'        Loop
'    End If
'   ObtenerCalendarioCredito = sCalendPagos
'End Function
'Public Function ObtenerDatosCredito(ByVal psNumGarant As String) As ADODB.Recordset
'    Dim oCredito As New COMDCredito.DCOMCredito
'    Set ObtenerDatosCredito = oCredito.ObtenerDatosCredito(psNumGarant)
'    Set oCredito = Nothing
'End Function
'Public Function IdentificarTipoPeriodo(ByVal psCtaCod As String) As ADODB.Recordset
'    Dim oCredito As New COMDCredito.DCOMCredito
'    Set IdentificarTipoPeriodo = oCredito.IdentificarTipoPeriodo(psCtaCod)
'    Set oCredito = Nothing
'End Function
'Public Sub ActualizaTCEA(ByVal psCtaCod As String, ByVal pnTCEA As Double)
'Dim oCredito As COMDCredito.DCOMCredito
'On Error GoTo ErrorActualizaTCEA
'
'Set oCredito = New COMDCredito.DCOMCredito
'oCredito.BeginTrans
'
''Registro Campana maxima anual
'Call oCredito.ActualizaTCEA(psCtaCod, pnTCEA)
'
'oCredito.CommitTrans
'Set oCredito = Nothing
'Exit Sub
'
'ErrorActualizaTCEA:
'oCredito.RollbackTrans
'Err.Raise Err.Number, "Error En Proceso", Err.Description
'End Sub
'END CTI5 ******


