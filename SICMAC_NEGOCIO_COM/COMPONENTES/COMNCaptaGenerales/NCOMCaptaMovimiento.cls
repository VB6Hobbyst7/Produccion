VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "NCOMCaptaMovimiento"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = True
Option Explicit

Dim sCodUser As String
Dim CuentasPersonaPrd() As String
Dim CuentasPersonaCre() As String
Dim CuentasPersonaJud() As String
Public oImp As COMFunciones.FCOMVarImpresion
Public gcPEN As New COMDConstantes.DCOMConstantes 'marg ers044-2016
'inicio ANPS20210406*******
Public Function ObtenerMotivoBloqueoTarjetaEfectivo(ByVal DNI As String) As Integer
Dim rs As ADODB.Recordset
Dim oConec As COMConecta.DCOMConecta
Dim sql As String
Set oConec = New COMConecta.DCOMConecta
Set rs = New ADODB.Recordset
Dim Cmd As New Command
Dim Prm As New ADODB.Parameter
Dim nRes As Integer

    Set Prm = New ADODB.Parameter
    Set Prm = Cmd.CreateParameter("@psPersCod", adVarChar, adParamInput, 13, DNI)
    Cmd.Parameters.Append Prm

    Set Prm = New ADODB.Parameter
    Set Prm = Cmd.CreateParameter("@pscMotivoBlq", adInteger, adParamOutput)
    Cmd.Parameters.Append Prm
    oConec.AbreConexion
    Cmd.ActiveConnection = oConec.ConexionActiva 'AbrirConexion
    Cmd.CommandType = adCmdStoredProc
    Cmd.CommandText = "stp_sel_MotivoBloqueoTarjetaEfectivo"
    Cmd.Execute
    ObtenerMotivoBloqueoTarjetaEfectivo = Cmd.Parameters(1).Value
    oConec.CierraConexion
    Set Cmd = Nothing
    Set Prm = Nothing

End Function
'FIN ANPS20210406*******
Public Function Get_PremioPF(psCuenta As String) As ADODB.Recordset
    Dim sql As String
    Dim Co As COMConecta.DCOMConecta
    Set Co = New COMConecta.DCOMConecta
    On Error GoTo Error
    sql = " select  C.cDescripcion, nMontoPremio, nCantidad, nExonerado"
    sql = sql & " from CapPremio C"
    sql = sql & " Inner Join CapPremioDet CD on C.nTipoPremio = CD.nTipoPremio"
    sql = sql & " where cCtaCod = '" & psCuenta & "' and nExonerado = 0"
    Co.AbreConexion
    Set Get_PremioPF = Co.CargaRecordSet(sql)
    Co.CierraConexion
    Set Co = Nothing
    Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion...", Err.Description
End Function
Public Sub CapCancelacionPremioPF(ByVal psNomAge As String, ByVal psCodUser As String, _
ByVal psMovNro As String, ByVal pdFecSis As String, ByVal pnSaldo As Currency, _
ByVal psCuenta As String, ByRef psBoleta As String)


'gsNomAge , gsCodUser, sMovNro, FechaHora(gdFecSis), nSaldo, sCuenta,
'nMontoPremio, nCantPremio, lsBoletaPremioCanc
'select * from CapPremioDet where cCtaCod = '' and nExonerado = 1
End Sub

Public Function ImprimeBoletaCMAC(ByVal psTit As String, ByVal psText As String, ByVal pnMonto As String, _
        ByVal psCliente As String, ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal nMoneda As Moneda, NomDoc As String, ByVal pnNumExt As Long, ByVal pnSaldoC As Double, _
        Optional pbOpSaldoC As Boolean = True, Optional pbSaldoInt As Boolean = True, Optional psNumDias As String = "----", _
        Optional psComCmac As String = "XXX", Optional psLin3 As String = "XXX", Optional psTexto As String = "XXX", _
        Optional pdFecSis As Date, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional sLpt As String = "", Optional bPregImpSaldos As Boolean = True, Optional sCodAge As String = "", _
        Optional pbImprimeSaldos As Boolean = True, Optional ByVal psCuentaPers As String, Optional ByVal pbImpTMU As Boolean = False) As String

    'Dim nFicSal As Integer
    Dim sFecha As String
    Dim sHora As String
    Dim sSep As Integer
    Dim sIni As Integer
    Dim sMonto As String
    Dim sSDisp As String
    Dim sIntAcum As String
    Dim sMax As Integer
    Dim saux As Integer
    Dim lsNroExt As String
    Dim lnTope As Integer
    Dim lsSaldoC As String
    Dim lsCadArg As String
    Dim lsInteres As String
    Dim sCad As String
    Dim lnCliAux As Long
    Dim lsCliAux1 As String
    Dim lsCliAux2 As String
    
    Dim lnChq As Long
    Dim lsChqAux1 As String
    Dim lsChqAux2 As String
    Dim lsNomAge As String
    
    Dim lnNumLinCmac As Integer
    
    Dim lsMensaje As String * 39
    
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim lscad As String

ETIQ:
    
    On Error GoTo Error
    
    lnTope = 0 '6 'Tope de lineas en Boleta
    
    lsNroExt = Str(pnNumExt)

    lscad = lscad & oImp.gPrnInicializa
    lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
    lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita
    
    sSep = 15
    sIni = 0
    sMax = 33
    saux = 5
    
    sFecha = Format$(pdFecSis, "dd/mm/yyyy")
    sHora = Format$(Time, "hh:mm:ss")
    sMonto = Format$(pnMonto, "#,##0.00")
    sSDisp = Format$(pnSaldo, "#,##0.00")
    lsSaldoC = Format$(pnSaldoC, "#,##0.00")

    lsNomAge = sNomAge
    
    ' Declaracion para los mensajes
    Dim clsGen As COMDConstSistema.DCOMGeneral
    Set clsGen = New COMDConstSistema.DCOMGeneral
    
    If pbImpTMU = False Then
        
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 - 2 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
                
        If nMoneda = gMonedaNacional Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
        End If
        
        lscad = lscad & ""
                
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea   'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & "NroDocCmac:" & psComCmac & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
                
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
                
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(saux + sMax + sSep - Len(psCodCta) - 7) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
                    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
                
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
            lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(saux + sMax + sSep - Len(psCodCta) - 7) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep - 2) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
                
                
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnSaltoLinea
            lscad = lscad & ""
        End If

        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        If pbSaldoInt Then
            If bPregImpSaldos Then
                'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
                If pbImprimeSaldos Then
                     lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                    If pbOpSaldoC Then
                       lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                    Else
                       lscad = lscad & ""
                    End If
                Else
                    lscad = lscad & ""
                    lscad = lscad & ""
                    pbSaldoInt = False
                End If
            Else
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbOpSaldoC Then
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & ""
                End If
            End If
        Else
            lscad = lscad & ""
            lscad = lscad & ""
            lscad = lscad & ""
        End If

        lscad = lscad & ""
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
        
        lnTope = 3 - lnCliAux
        
        lscad = lscad & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
        
        'lsMensaje = clsGen.GetMensajeBoletas("XXXXX" & gCapAhorros, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
    Else
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        If nMoneda = gMonedaNacional Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES " & lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & " " & lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES " & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
        End If
        
        lscad = lscad & ""
                
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea   'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(5) & "Hora:" & sHora & oImp.gPrnSaltoLinea
                
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
                
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
                    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
                
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
            lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
                
                
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnSaltoLinea
            lscad = lscad & ""
        End If

        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        If pbSaldoInt Then
            If bPregImpSaldos Then
                If pbImprimeSaldos Then
                     lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                    If pbOpSaldoC Then
                       lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                    Else
                       lscad = lscad & ""
                    End If
                Else
                    lscad = lscad & ""
                    lscad = lscad & ""
                    pbSaldoInt = False
                End If
            Else
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbOpSaldoC Then
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & ""
                End If
            End If
        Else
            lscad = lscad & ""
            lscad = lscad & ""
            lscad = lscad & ""
        End If
        lscad = lscad & ""
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
        
        lnTope = 3 - lnCliAux
        
        lscad = lscad & Space(sIni) & "---------------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
        
        'lsMensaje = clsGen.GetMensajeBoletas("XXXXX" & gCapAhorros, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
    End If
    ImprimeBoletaCMAC = lscad
Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora...", Err.Description
    
End Function

Public Function ImprimeBoleta(ByVal psTit As String, ByVal psText As String, ByVal psCodOpe As String, ByVal pnMonto As String, _
        ByVal psCliente As String, ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal pnInteresA As String, NomDoc As String, ByVal pnNumExt As Long, ByVal pnSaldoC As Double, _
        Optional pbOpSaldoC As Boolean = True, Optional pbSaldoInt As Boolean = True, Optional psNumDias As String = "----", _
        Optional psNomAgeRem As String = "", Optional psCodUsuRem As String = "", Optional pbCuenta As Boolean = False, _
        Optional psComCmac As String = "XXX", Optional psLin3 As String = "XXX", Optional psTexto As String = "XXX", _
        Optional pdFecSis As Date, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional sLpt As String = "", Optional bPregImpSaldos As Boolean = True, Optional ByVal psCodCmac As String, _
        Optional sCodAge As String = "", Optional pnMonedaCMAC As Integer = 1, Optional ByRef bImpreSaldos As Boolean = False, Optional psOpeCod As String = "", _
        Optional sUserBus As String = "", Optional bExtorno As Boolean = False, Optional ByVal sProxReno As String = "", Optional psDisponible As String = "", Optional psIntangible As String = "", _
        Optional psDispCta As String = "", Optional psIntaCta As String = "", Optional ByVal pbImprimeSaldos As Boolean = True, Optional pnTipoPago As Integer, Optional pnMontoIFT As Double, _
        Optional pbImpItf As Boolean = False, Optional pnComixRetOtraAge As Double = 0, Optional pnComixMaxRet As Double = 0, Optional pbImpTMU As Boolean = False, Optional psNumTarj As String = "", _
        Optional pbPagoServicio As Boolean = False, Optional pcPersNomInst As String = "", Optional pnComisionPServiciox As Double = 0, Optional pcImrimePerx As String = "", _
        Optional ByVal pnComiVB As Double = 0, Optional ByVal psCodOpeVB As String = "", Optional ByVal pnConceptoSer As String = "", Optional ByVal psNomCliServ As String = "", Optional ByVal pnMontoSer As String = "0", _
        Optional ByVal psProxReno2 As String = "", Optional ByVal psTipoCambio As String = "XXX", Optional sPerEcotaxi As Variant = "", Optional pnLogEcotaxi As Integer = 0) As String
        'madm 20111213 - 20111207 - 20110613 - 20110318 pnConceptoSer bPagoServiciom, pcPersNomInst - pcImrimePerx PAGO DE SERVICIOS
        'Agregado por ELRO el parametro psProxReno2 el 20121031,según OYP-RFC098-2012
        'Agregado por ELRO el parametro psTipoCambio el 20121029, según OYP-RFC101-2012
        
        'sPerEcotaxi(1)=psPersCodEcotaxi As String
        'sPerEcotaxi(2)=psPersNomEcotaxi As String
        'sPerEcotaxi(3)=psPersDNIEcotaxi As String
        
    Dim sFecha As String
    Dim sHora As String
    Dim sSep As Integer
    Dim sIni As Integer
    Dim sMonto As String
    Dim sSDisp As String
    Dim sIntAcum As String
    Dim sMax As Integer
    Dim saux As Integer
    Dim lsNroExt As String
    Dim lnTope As Integer
    Dim lsSaldoC As String
    Dim lsCadArg As String
    Dim lsInteres As String
    Dim sCad As String
    Dim lnCliAux As Long
    Dim lsCliAux1 As String
    Dim lsCliAux2 As String

    Dim lnChq As Long
    Dim lsChqAux1 As String
    Dim lsChqAux2 As String
    Dim lsNomAge As String

    Dim lnNumLinCmac As Integer

    Dim lsMensaje As String * 39

    Dim oVarImpre As New COMFunciones.FCOMVarImpresion

    '** Para la Impresion del Codigo Antiguo en las Boletas
    Dim lsCodAntiguo As String
    Dim lscad As String

    Dim nComiTotal As Double
    Dim nComiTotalServicio As Double
    Dim nTotalServicio As Double '20110701
    Dim pcImrimePer As String

    Dim loConstSistema As COMDConstSistema.NCOMConstSistema
    Set loConstSistema = New COMDConstSistema.NCOMConstSistema
    If loConstSistema.LeeConstSistema(122) = "1" Then
        Dim loGeneral As COMDConstSistema.DCOMGeneral
        Set loGeneral = New COMDConstSistema.DCOMGeneral
        lsCodAntiguo = loGeneral.GetCuentaAntigua(psCodCta)
    Else
        lsCodAntiguo = ""
    End If
    Set loConstSistema = Nothing
    Dim nComisionTrans As String 'RIRO20131212 ERS137
    
    'ande ERS021-2018
    Dim bPartipaCamp As Boolean, nPunto As Integer, nCondicion As Integer, nPTotalAcumulado As Integer, cNombreCliente As String, cTexto As String, cadenita As String
    If Left(psTexto, 1) = "#" And Right(psTexto, 1) = "&" Then
        cTexto = Trim(Replace(Replace(psTexto, "#", ""), "&", ""))
        bPartipaCamp = IIf(Mid(cTexto, 1, InStr(cTexto, ".") - 1) = "1", True, False)
        nPunto = CInt(Mid(cTexto, InStr(cTexto, ".") + 1, InStr(cTexto, "$") - InStr(cTexto, ".") - 1))
        nCondicion = CInt(Mid(cTexto, InStr(cTexto, "$") + 1, InStr(cTexto, "_") - InStr(cTexto, "$") - 1))
        nPTotalAcumulado = CInt(Right(cTexto, Len(cTexto) - InStr(cTexto, "_")))
        psTexto = "XXX"
    ElseIf psTexto = "" Then
        psTexto = "XXX"
    End If
    
ETIQ:

    On Error GoTo Error

    lnTope = 0 '6 'Tope de lineas en Boleta

    lsNroExt = Str(pnNumExt)
    

    lscad = lscad & oImp.gPrnInicializa
    lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
    lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita

    sSep = 15
    sIni = 0
    sMax = 33
    saux = 5

    sFecha = Format$(pdFecSis, "dd/mm/yyyy")
    sHora = Format$(Time, "hh:mm:ss")
    sMonto = Format$(pnMonto, "#,##0.00")
    sSDisp = Format$(pnSaldo, "#,##0.00")
    lsSaldoC = Format$(pnSaldoC, "#,##0.00")

    lsNomAge = sNomAge

    '' Declaracion para los mensajes
    Dim clsGen As COMDConstSistema.DCOMGeneral
    Set clsGen = New COMDConstSistema.DCOMGeneral
    Dim oImpre As New COMFunciones.FCOMImpresion
    
       'CTI3 04122018 ERS082-2018 ********************************
        Dim TpoCta As String
        'TpoCta = Space(4)
     '       If psCodOpe = gAhoApeEfec Or psCodOpe = gAhoApeLoteEfec Or psCodOpe = gAhoApeTransf Or psCodOpe = gAhoApeCargoCta Or psCodOpe = gAhoApeLoteTransfBanco _
            Or psCodOpe = gAhoRetEfec Or psCodOpe = gAhoRetOP Or psCodOpe = gAhoRetTransf Or psCodOpe = gAhoRetOPCanje Or psCodOpe = gPFApeEfec Then

                Dim clsTpoCta As COMNCaptaGenerales.NCOMCaptaGenerales
                Set clsTpoCta = New COMNCaptaGenerales.NCOMCaptaGenerales
                
                  TpoCta = "(" & clsTpoCta.GetTpoCta(psCodCta) & ")"
                
                Set clsTpoCta = Nothing
     '       End If
        '*********************************************************
    
    
    'JUEZ 20131021 *******************************************************************************
    Dim oGen As New COMDConstSistema.DCOMGeneral, nEstadoCampDatos As Integer
    nEstadoCampDatos = oGen.LeeConstSistema(gConstSistEstadoCampActualizaDatos)
    If nEstadoCampDatos = 1 Then
        If pbImpTMU = False Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnNegritaON
            lscad = lscad & "                            * *         " & Space(sSep - 2) & "                            * *         " & oImp.gPrnSaltoLinea
            lscad = lscad & "                         *      *       " & Space(sSep - 2) & "                         *      *       " & oImp.gPrnSaltoLinea
            lscad = lscad & "                        *               " & Space(sSep - 2) & "                        *               " & oImp.gPrnSaltoLinea
            lscad = lscad & "      * *              *          *     " & Space(sSep - 2) & "      * *              *          *     " & oImp.gPrnSaltoLinea
            lscad = lscad & "    *     *      *   *             *    " & Space(sSep - 2) & "    *     *      *   *             *    " & oImp.gPrnSaltoLinea
            lscad = lscad & "   *        *  *   *                    " & Space(sSep - 2) & "   *        *  *   *                    " & oImp.gPrnSaltoLinea
            lscad = lscad & "  *           *                     *   " & Space(sSep - 2) & "  *           *                     *   " & oImp.gPrnSaltoLinea
            lscad = lscad & " *                                   *  " & Space(sSep - 2) & " *                                   *  " & oImp.gPrnSaltoLinea
            lscad = lscad & "*                                     * " & Space(sSep - 2) & "*                                     * " & oImp.gPrnSaltoLinea
            lscad = lscad & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & Space(sSep - 2) & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            lscad = lscad & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnNegritaON & "C"
            lscad = lscad & "                            * *" & oImp.gPrnSaltoLinea
            lscad = lscad & "                         *      *" & oImp.gPrnSaltoLinea
            lscad = lscad & "                        *         " & oImp.gPrnSaltoLinea
            lscad = lscad & "      * *              *          *" & oImp.gPrnSaltoLinea
            lscad = lscad & "    *     *      *   *             *" & oImp.gPrnSaltoLinea
            lscad = lscad & "   *        *  *   *                " & oImp.gPrnSaltoLinea
            lscad = lscad & "  *           *                     *" & oImp.gPrnSaltoLinea
            lscad = lscad & " *                                   *" & oImp.gPrnSaltoLinea
            lscad = lscad & "*                                     *" & oImp.gPrnSaltoLinea
            lscad = lscad & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            lscad = lscad & oImp.gPrnSaltoLinea
        End If
    End If
    'END JUEZ ************************************************************************************
    
    'RIRO20131212 ERS137 *******
    If InStr(1, "200303,200411,230303,230411,210209,210302,240204,240304,220302,220403,250302,250403", psCodOpe) > 0 And Not pbPagoServicio Then
        nComisionTrans = Trim(pnMontoSer)
    End If
    'END RIRO            *******
        
    '' liquidacion Trujillo
    If pbImpTMU = False Then
        lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
        lscad = lscad & oImp.gPrnSaltoLinea
        nComiTotalServicio = 0
        nTotalServicio = 0
        'CTI5 ERS0112020
        If psCodOpe = "" Then
            psCodOpe = 0
        End If
        'CTI5 ERS0112020 FIN
        'RIRO20160111 ADD gOtrOpePagoRecaudoCajeroCorresponsal
        If pbPagoServicio Or psCodOpe = gOtrOpePagoRecaudoCajeroCorresponsal Then
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - SERVICIOS" & Space(16 + sSep + saux) & "CMAC-MAYNAS - SERVICIOS" & oImp.gPrnSaltoLinea
            psCliente = pcPersNomInst
            nComiTotalServicio = pnComisionPServiciox
            pcImrimePer = Trim(pcImrimePerx)
        Else
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        End If

        If Len(Trim(psCodCta)) < 18 Then
            If pnMonedaCMAC = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
            End If
        Else
            If Mid(psCodCta, 9, 1) = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
            End If
        End If

        If psNomAgeRem = "" Then
            lscad = lscad & ""
        Else
            lscad = lscad & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & "Ag.Rem: " & Trim(psNomAgeRem) & oImp.gPrnSaltoLinea
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & "NroDocCmac:" & psComCmac & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
        
        lnCliAux = InStr(1, pcPersNomInst, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            
            lnCliAux = 1
        End If
        
        If pbSaldoInt Or pbCuenta Then
            If lsCodAntiguo <> "" Then  ' Para Codigo Antiguo - LAYG
              'CTI3 - FERIMORO : ERS082-2018
                lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & lsCodAntiguo & Space(2) & TpoCta & oImp.gPrnSaltoLinea
                'lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & Space(8 + sSep + saux) & "Cuenta:" & lsCodAntiguo & oImp.gPrnSaltoLinea
                'lsCadImp = lsCadImp & " Contrato  : " & lsCodAntiguo & Space(10) & Space(1 + vEspacio) _
                                            & " Contrato  : " & lsCodAntiguo & Space(10) & Chr(10)
            Else
               'CTI3 FERIMORO : ERS082-2018
                If Left(psCodOpe, 4) = "2001" Or Left(psCodOpe, 4) = "2003" Or Left(psCodOpe, 4) = "2004" _
                Or Left(psCodOpe, 4) = "2101" Or Left(psCodOpe, 4) = "2102" Or Left(psCodOpe, 4) = "2103" Then
                  lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & psCodCta & Space(2) & TpoCta & oImp.gPrnSaltoLinea
                Else ' EN CASO SEAN EXTORNOS
                  lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(8 + sSep + saux) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
                End If
            End If
        Else
            lscad = lscad & ""
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                'MADM 20111209
                If pbPagoServicio Then
                     Dim xx1 As Integer
                     Dim psConceptoSerTemp As String
                     Dim psMontoSerTemp As String
                     psConceptoSerTemp = pnConceptoSer
                     psMontoSerTemp = pnMontoSer
                     pnConceptoSer = Trim(pnConceptoSer)
                     pnMontoSer = Trim(pnMontoSer)
                     pnConceptoSer = Mid(pnConceptoSer, 1, Len(pnConceptoSer) - 5)
                     If Int(Right(psConceptoSerTemp, 5)) = 1 Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                            pnMontoSer = pnMontoSer & " XXX"
                     End If
                     lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & Space(sMax + 6 - Len(Trim(Mid(psNomCliServ, 1, 30)))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & Space(sMax + 6 - Len(Trim(Mid(psNomCliServ, 1, 30)))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                     For xx1 = 1 To Int(Right(psConceptoSerTemp, 5))
                        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                        pnConceptoSer = Trim(Mid(pnConceptoSer, InStr(5, pnConceptoSer, "XXX", vbTextCompare), Len(pnConceptoSer) - 6))
                        If Right(Trim(pnConceptoSer), 3) <> "XXX" Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                        End If
                        If Right(Trim(pnMontoSer), 3) <> "XXX" Then
                            pnMontoSer = pnMontoSer & " XXX"
                        End If
                     Next xx1
                End If
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            If psDisponible = "" And psIntangible = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If psDisponible <> "" And psIntangible <> "" Then
           'psDispCta psIntaCta
           'gPrnCondensadaOFF
           'gPrnCondensadaON
           lscad = lscad & oVarImpre.gPrnCondensadaON & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDispCta)) & Space(saux + sSep + sMax - Len(Trim(psDispCta))) & oImpre.ImpreCarEsp(Trim(psDispCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & Space(saux + sSep + sMax - Len(Trim(psIntaCta))) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDisponible)) & Space(saux + sSep + sMax - Len(Trim(psDisponible))) & oImpre.ImpreCarEsp(Trim(psDisponible)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntangible)) & Space(saux + sSep + sMax - Len(Trim(psIntangible))) & oImpre.ImpreCarEsp(Trim(psIntangible)) & oVarImpre.gPrnCondensadaOFF & oImp.gPrnSaltoLinea

        End If
        'Insertar ITF
        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                 
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                'ALPA 20091120************************************************
                ElseIf pnTipoPago = 3 Then
                    psTexto = "ITF Abono a Cuenta"
                End If
                '*************************************************************
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & oImp.gPrnSaltoLinea
            End If
        End If
        '***    IMPRIMIR COMISON DE RETIRO -- AVMM 10-08-2006  ***
        'nComiTotal = pnComixRetOtraAge + pnComixMaxRet'Comentado by JACA 20111025
        'If nComiTotal <> 0 Then'Comentado by JACA 20111025
            If pnComixRetOtraAge <> 0 Then
               'psTexto = "Comisión Operación Otra Age."
               psTexto = "Comisión " & IIf(Left(psCodOpe, 4) = "2002", "Dep.", IIf(Left(psCodOpe, 4) = "2003", "Ret.", "Ope.")) & " Otra Loc." 'JUEZ 20150930
              'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & oImp.gPrnSaltoLinea
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(33 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnComixRetOtraAge, "#,##0.00"))) & Format(pnComixRetOtraAge, "#,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(33 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnComixRetOtraAge, "#,##0.00"))) & Format(pnComixRetOtraAge, "#,##0.00") & oImp.gPrnSaltoLinea 'APRI20190109 MEJORA SUGERENCIA CALIDAD
            End If
            If pnComixMaxRet <> 0 Then
               psTexto = "Comisión x Max Nro Ope."
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & oImp.gPrnSaltoLinea
            End If
        'End If
        '*********************************************************
        'MADM 20110815 - 20110318
        If nComiTotalServicio <> 0 Then
           nTotalServicio = nComiTotalServicio + pnMontoIFT + sMonto 'Format(nComiTotalServicio + pnMontoIFT + sMonto, "#,###,##0.00")
           psTexto = "Comision Pago de Servicios:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nComiTotalServicio, "0.00"))) & Format(nComiTotalServicio, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nComiTotalServicio, "0.00"))) & Format(nComiTotalServicio, "0.00") & oImp.gPrnSaltoLinea
           psTexto = "Total Pagado              :"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nTotalServicio, "#,###,##0.00"))) & Format(nTotalServicio, "#,###,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nTotalServicio, "#,###,##0.00"))) & Format(nTotalServicio, "#,###,##0.00") & oImp.gPrnSaltoLinea
        End If
       '*********************************************************
       
       'Add by GITU 30-09-2011
       If pnComiVB <> 0 Then
           'psTexto = "Comision Ope Sin Tarjeta" 'Comentado CTI4 ERS0112020
           'CTI4 ERS0112020
            Select Case psCodOpeVB
                Case "300627"
                    psTexto = "Comisión Ope Sin Tarjeta"
                Case gComisionEmisionChequeCargoCta
                    psTexto = "Comisión Cargo a Cuenta"
                Case gComisionEmisionChequeEfectivo
                    psTexto = "Comisión Efectivo"
            End Select
           'CTI4 End
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComiVB, "0.00"))) & Format(pnComiVB, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComiVB, "0.00"))) & Format(pnComiVB, "0.00") & oImp.gPrnSaltoLinea
       End If
       'END GITU
       
       'RIRO20131212 ERS137
       If Len(Trim(nComisionTrans)) <> 0 Then
           psTexto = "Comision Transf:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(nComisionTrans, "0.00"))) & Format(nComisionTrans, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(nComisionTrans, "0.00"))) & Format(nComisionTrans, "0.00") & oImp.gPrnSaltoLinea
       End If
       'END RIRO
        
        'If pbSaldoInt Then
        If bPregImpSaldos Then
            'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                If psCodOpe <> "200399" Then 'MADM 20101115
                    bImpreSaldos = True
                    lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                    If pbOpSaldoC Then
                        lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                    Else
                        lscad = lscad & ""
                    End If
                End If
            Else
                bImpreSaldos = False
                lscad = lscad & ""
                lscad = lscad & ""
                pbSaldoInt = False
            End If
        Else
            lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
            If pbOpSaldoC Then
               lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
            Else
                lscad = lscad & ""
            End If
        End If
        'Else
        '   lscad = lscad & ""
        'End If
 
        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If
        
        '***Modificado por ELRO el 20121109, según OYP-RFC098-2012
        If Trim(psProxReno2) <> "" Then
            lscad = lscad & Space(sIni) & psProxReno2 & Space(sMax + 20 - Len(psProxReno2)) & psProxReno2 & oImp.gPrnSaltoLinea
        End If
        '***Fin Modificado por ELRO el 20121109*******************

        If Trim(sProxReno) <> "" Then
              lscad = lscad & Space(sIni) & sProxReno & Space(sMax + 20 - Len(sProxReno)) & sProxReno & oImp.gPrnSaltoLinea
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            If Trim(psDisponible) = "" And Trim(psIntangible) = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If Not psNumDias = "----" Then
            lscad = lscad & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & Space(-1 + sSep) & "Nro Dias Interes" & Space(sMax + 6 - Len(psNumDias) - Len("Nro Dias Interes")) & psNumDias & oImp.gPrnSaltoLinea
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If
        
        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        If psCodUsuRem = "" Then
            If bExtorno Then
                lscad = lscad & Space(sIni) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & Space(11 + sSep + saux) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & Space(11 + sSep + saux) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & oImp.gPrnSaltoLinea
            Else
                'ALPA 20130110****************************************************************************************************************************************
                If pnLogEcotaxi <> 0 Then
                    If Len(Trim(sPerEcotaxi(1))) <> 0 Then
                        lscad = lscad & Space(sIni) & Left(oImpre.ImpreCarEsp("ABONADO POR: " & sPerEcotaxi(2)) & Space(40), 40) & Space(13) & Left(oImpre.ImpreCarEsp("ABONADO POR: " & sPerEcotaxi(2)) & Space(40), 40) & oImp.gPrnSaltoLinea
                        lscad = lscad & Space(sIni) & Left(oImpre.ImpreCarEsp("DNI: " & sPerEcotaxi(3)) & Space(40), 40) & Space(13) & Left(oImpre.ImpreCarEsp("DNI: " & sPerEcotaxi(3)) & Space(40), 40) & oImp.gPrnSaltoLinea
                    End If
                End If
                '*****************************************************************************************************************************************************
                'WIOR 20130419 *******************************************
                If psCodOpe = gPFApeEfec Or psCodOpe = gPFApeChq Or psCodOpe = gPFApeTransf Then
                   If EsDepositoGarantia(psCodCta) Then
                        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & oImpre.ImpreCarEsp("Depósito en Garantía ------------------") & Space(-1 + sSep) & oImpre.ImpreCarEsp("Depósito en Garantía ------------------") & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                   End If
                End If
                'WIOR FIN ************************************************
                '***Modificado por ELRO el 20121029, según OYP-RFC101-2012
                'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                If psTipoCambio = "XXX" Then
                    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(5) & psTipoCambio & Space(sSep + saux - 2) & oImpre.ImpreCarEsp(sCodUser) & Space(5) & psTipoCambio & oImp.gPrnSaltoLinea
                    
                End If
                '***Modificado por ELRO el 20121029**********************
            End If
        Else
            lscad = lscad & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & Space(sSep) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & oImp.gPrnSaltoLinea
        End If

        lsMensaje = clsGen.GetMensajeBoletas(psCodCta, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        
        If Left(psOpeCod, 4) = "2605" Or Left(psOpeCod, 4) = "1270" Or Left(psOpeCod, 4) = "1070" Then
            lscad = lscad & ""
        ElseIf bExtorno = True Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf sProxReno <> "" Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf Trim(psDisponible) <> "" And Trim(psIntangible) <> "" Then
           lscad = lscad & ""
        Else
            For saux = 1 To (lnTope - lnNumLinCmac)
                lscad = lscad & ""
            Next saux
        End If
        If psNumTarj <> "" Then
            lscad = lscad & "Operacion realizada con Tarjeta Electronica" & Space(14) & "Operacion realizada con Tarjeta Electronica" & oImp.gPrnSaltoLinea
        End If
        
        'ande ers021-2018
        If bPartipaCamp Then
            'cadenita = IIf(nCondicion = 0, "¡Gol!", "¡Autogol!") & " Con " & Chr(130) & "sta operaci" & Chr(162) & "n" & IIf(nCondicion = 0, " ganaste", " perdiste")
            'lscad = lscad & cadenita & IIf(nCondicion = 0, Space(21), Space(17)) & cadenita & oImp.gPrnSaltoLinea
            'cadenita = IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s). Sigue participando en"
            'lscad = lscad & cadenita & Space(17) & cadenita & oImp.gPrnSaltoLinea
            'cadenita = "nuestra Campa" & Chr(164) & "a Mundial del Ahorro 2018"
            'APRI20191128
'            Comentado por GEMO
'            cadenita = IIf(nCondicion = 0, "Felicitaciones sumas ", "Lo sentimos, perdiste ") & IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s) para"
'            lscad = lscad & cadenita & IIf(nCondicion = 0, Space(13), Space(12)) & cadenita & oImp.gPrnSaltoLinea
'            cadenita = "el sorteo de practicos electrodomesticos"
'            lscad = lscad & cadenita & Space(13) & cadenita & oImp.gPrnSaltoLinea
'            cadenita = "y televisores para tu hogar!"
'            'END APRI
'            lscad = lscad & cadenita & Space(25) & cadenita & oImp.gPrnSaltoLinea
'            cadenita = "Pto(s) acumulado(s): " & IIf(Len(CStr(nPTotalAcumulado)) < 6, CStr(nPTotalAcumulado) & String(6 - Len(CStr(nPTotalAcumulado)), " "), CStr(nPTotalAcumulado))
'            lscad = lscad & cadenita & Space(26) & cadenita & oImp.gPrnSaltoLinea
        End If
        
        ImprimeBoleta = lscad & oImp.gPrnSaltoLinea
    Else 'TMU
        lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
        '***Modificado por ELRO el 20120524, según OYP-RFC005-2012 y OYP-RFC016-2012
        'lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea '& oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        If psCodOpe <> gOtrOpeDesParGas And psCodOpe <> gOtrOpeDesParVia And psCodOpe <> gOtrOpeDesParCaj Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea '& oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        End If
        '***Fin Modificado por ELRO
        nComiTotalServicio = 0 'MADM 20111209
        nTotalServicio = 0 'MADM 20111209
        'RIRO20160111 ADD gOtrOpePagoRecaudoCajeroCorresponsal
        If pbPagoServicio Or psCodOpe = gOtrOpePagoRecaudoCajeroCorresponsal Then
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - SERVICIOS" & Space(16 + sSep + saux) & oImp.gPrnSaltoLinea
            psCliente = pcPersNomInst
            nComiTotalServicio = pnComisionPServiciox
            pcImrimePer = Trim(pcImrimePerx)
        Else
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 + sSep + saux) & oImp.gPrnSaltoLinea
        End If
        
        If Len(Trim(psCodCta)) < 18 Then
            If pnMonedaCMAC = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & oImp.gPrnSaltoLinea
            End If
        Else
            If Mid(psCodCta, 9, 1) = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & oImp.gPrnSaltoLinea
            End If
        End If

        If psNomAgeRem = "" Then
            lscad = lscad & ""
        Else
            lscad = lscad & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & oImp.gPrnSaltoLinea
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & oImp.gPrnSaltoLinea

        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)

        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            'Space(saux + sMax + sSep - Len(lsCliAux2))
            lnCliAux = 1
        End If
        
        If pbSaldoInt Or pbCuenta Then
            If lsCodAntiguo <> "" Then  ' Para Codigo Antiguo - LAYG
                lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & oImp.gPrnSaltoLinea
                'lsCadImp = lsCadImp & " Contrato  : " & lsCodAntiguo & Space(10) & Space(1 + vEspacio) _
                                            & " Contrato  : " & lsCodAntiguo & Space(10) & Chr(10)
            Else
                lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                'lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                psText = Left(psText, 28) 'GEMO-JAOR 20210419 Correción al imprimir por tm
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space((sMax + 6 - (Len(psText) + Len(Format(sMonto, "0.00"))))) & Format(sMonto, "0.00") & oImp.gPrnSaltoLinea
                 'MADM 20111209
                If pbPagoServicio Then
                     Dim xxx1 As Integer
                     Dim psConceptoSerTemp1 As String
                     psConceptoSerTemp1 = pnConceptoSer
                     pnConceptoSer = Trim(pnConceptoSer)
                     pnMontoSer = Trim(pnMontoSer)
                     pnConceptoSer = Mid(pnConceptoSer, 1, Len(pnConceptoSer) - 5)
                     If Int(Right(psConceptoSerTemp1, 5)) = 1 Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                            pnMontoSer = pnMontoSer & " XXX"
                     End If
                     lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & oImp.gPrnSaltoLinea
                     For xxx1 = 1 To Int(Right(psConceptoSerTemp1, 5))
                        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & oImp.gPrnSaltoLinea
                        pnConceptoSer = Trim(Mid(pnConceptoSer, InStr(5, pnConceptoSer, "XXX", vbTextCompare), Len(pnConceptoSer) - 6))
                        If Right(Trim(pnConceptoSer), 3) <> "XXX" Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                        End If
                         If Right(Trim(pnMontoSer), 3) <> "XXX" Then
                            pnMontoSer = pnMontoSer & " XXX"
                        End If
                     Next xxx1
                End If
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            If psDisponible = "" And psIntangible = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If psDisponible <> "" And psIntangible <> "" Then
           'psDispCta psIntaCta
           'gPrnCondensadaOFF
           'gPrnCondensadaON
           lscad = lscad & oVarImpre.gPrnCondensadaON & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDispCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDisponible)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntangible)) & Space(saux + sSep + sMax - Len(Trim(psIntangible))) & oImpre.ImpreCarEsp(Trim(psIntangible)) & oVarImpre.gPrnCondensadaOFF & oImp.gPrnSaltoLinea

        End If
        'Insertar ITF
        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                 
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                End If
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & oImp.gPrnSaltoLinea
            End If
        End If
        '***    IMPRIMIR COMISON DE RETIRO -- AVMM 10-08-2006  ***
        'nComiTotal = pnComixRetOtraAge + pnComixMaxRet 'Comentado by JACA 20111129
        'If nComiTotal <> 0 Then'Comentado by JACA 20111129
            If pnComixRetOtraAge <> 0 Then
               'psTexto = "Comisión Operación Otra Age."
               psTexto = "Comisión " & IIf(Left(psCodOpe, 4) = "2002", "Dep.", IIf(Left(psCodOpe, 4) = "2003", "Ret.", "Ope.")) & " Otra Loc." 'JUEZ 20150930
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & oImp.gPrnSaltoLinea
            End If
            If pnComixMaxRet <> 0 Then
               psTexto = "Comisión x Max Nro Ope."
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & oImp.gPrnSaltoLinea
            End If
        'End If
        '*********************************************************
        
        'Add by GITU 30-09-2011
        'If pnComiVB <> 0 And psCodOpeVB = "300627" Then 'Comentado CTI4 ERS0112020
        If pnComiVB <> 0 Then
           'psTexto = "Comision Ope Sin Tarjeta" 'Comentado CTI4 ERS0112020
           'CTI4 ERS0112020
            Select Case psCodOpeVB
                Case "300627"
                    psTexto = "Comisión Ope Sin Tarjeta"
                Case gComisionEmisionChequeCargoCta
                    psTexto = "Comisión Cargo a Cuenta"
                Case gComisionEmisionChequeEfectivo
                    psTexto = "Comisión Efectivo"
            End Select
           'CTI4 End
            lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComiVB)) & Format(pnComiVB, "0.00") & oImp.gPrnSaltoLinea
        End If
       'END GITU
       
       'RIRO20131212 ERS137
       If Len(Trim(nComisionTrans)) <> 0 Then
           psTexto = "Comision Transf:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(nComisionTrans, "0.00"))) & Format(nComisionTrans, "0.00") & oImp.gPrnSaltoLinea
       End If
       'END RIRO
       
       'MADM 20111209
        If nComiTotalServicio <> 0 Then
           nTotalServicio = nComiTotalServicio + pnMontoIFT + sMonto 'Format(nComiTotalServicio + pnMontoIFT + sMonto, "#,###,##0.00")
           psTexto = "Comision Pago Servicios"
           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(sMax + 6 - (Len(Trim(Mid(psTexto, 1, 27)))) + Len(Format(nComiTotalServicio, "#,###,##0.00"))) & oImpre.ImpreCarEsp(Trim(Format(nComiTotalServicio, "#,###,##0.00"))) & oImp.gPrnSaltoLinea
           lscad = lscad & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(sMax + 6 - (Len(psTexto) + Len(Format(nComiTotalServicio, "0.00")))) & Format(nComiTotalServicio, "0.00") & oImp.gPrnSaltoLinea
           psTexto = "Total Pagado"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(sMax + 6 - (Len(psTexto) + Len(Format(nTotalServicio, "#,###,##0.00")))) & Format(nTotalServicio, "#,###,##0.00") & oImp.gPrnSaltoLinea
           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(sMax + 6 - (Len(Mid(psTexto, 1, 27))) + Len(Format(nComiTotalServicio, "#,###,##0.00"))) & oImpre.ImpreCarEsp(Trim(Format(nComiTotalServicio, "#,###,##0.00"))) & oImp.gPrnSaltoLinea
        End If
       'END MADM
        'If pbSaldoInt Then
        If bPregImpSaldos Then
            'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                bImpreSaldos = True
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbOpSaldoC Then
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & ""
                End If
            Else
                bImpreSaldos = False
                lscad = lscad & ""
                lscad = lscad & ""
                pbSaldoInt = False
            End If
        Else
            lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
            If pbOpSaldoC Then
               lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
            Else
                lscad = lscad & ""
            End If
        End If
        'Else
        '   lscad = lscad & ""
        'End If

        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If

        If Trim(sProxReno) <> "" Then
              lscad = lscad & Space(sIni) & sProxReno & Space(sMax + 20 - Len(sProxReno)) & sProxReno & oImp.gPrnSaltoLinea
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            If Trim(psDisponible) = "" And Trim(psIntangible) = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If Not psNumDias = "----" Then
            lscad = lscad & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & oImp.gPrnSaltoLinea
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If


        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        If psCodUsuRem = "" Then
            If bExtorno Then
                lscad = lscad & Space(sIni) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & oImp.gPrnSaltoLinea
            Else
                'WIOR 20130419 *******************************************
                If psCodOpe = gPFApeEfec Or psCodOpe = gPFApeChq Or psCodOpe = gPFApeTransf Then
                   If EsDepositoGarantia(psCodCta) Then
                        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp("Depósito en Garantía ------------------") & oImp.gPrnSaltoLinea
                   End If
                End If
                'WIOR FIN ************************************************
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & oImp.gPrnSaltoLinea
        End If

        lsMensaje = clsGen.GetMensajeBoletas(psCodCta, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        
        If Left(psOpeCod, 4) = "2605" Or Left(psOpeCod, 4) = "1270" Or Left(psOpeCod, 4) = "1070" Then
            lscad = lscad & ""
        ElseIf bExtorno = True Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf sProxReno <> "" Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf Trim(psDisponible) <> "" And Trim(psIntangible) <> "" Then
           lscad = lscad & ""
        Else
            For saux = 1 To (lnTope - lnNumLinCmac)
                lscad = lscad & ""
            Next saux
        End If
        If psNumTarj <> "" Then
            lscad = lscad & "Operacion realizada con Tarjeta Electronica"
        End If
        '***Modificado por ELRO el 20120503, según OYP-RFC005-2012
         'ande ers021 - 2018
        If bPartipaCamp Then
            'cadenita = IIf(nCondicion = 0, "¡Gol!", "¡Autogol!") & " Con " & Chr(130) & "sta operaci" & Chr(162) & "n" & IIf(nCondicion = 0, " ganaste", " perdiste")
            'lscad = lscad & cadenita & oImp.gPrnSaltoLinea
            'cadenita = IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s). Sigue participando en"
            'lscad = lscad & cadenita & oImp.gPrnSaltoLinea
            'cadenita = "nuestra Campa" & Chr(164) & "a Mundial del Ahorro 2018"
            'APRI20191128
'           Comentado por GEMO
'            cadenita = IIf(nCondicion = 0, "Felicitaciones sumas ", "Lo sentimos, perdiste ") & IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s) para"
'            lscad = lscad & cadenita & oImp.gPrnSaltoLinea
'            cadenita = "el sorteo de practicos electrodomesticos"
'            lscad = lscad & cadenita & oImp.gPrnSaltoLinea
'            cadenita = "y televisores para tu hogar!"
'            'END APRI
'            lscad = lscad & cadenita & oImp.gPrnSaltoLinea
'            cadenita = "Pto(s) acumulado(s): " & CStr(nPTotalAcumulado)
'            lscad = lscad & cadenita & oImp.gPrnSaltoLinea
        End If
        
        'lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        If psCodOpe <> gOtrOpeDesParGas And psCodOpe <> gOtrOpeDesParVia And psCodOpe <> gOtrOpeDesParCaj Then
            'Linea que corta el ticket en TMU
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        ElseIf psCodOpe = gOtrOpeDesParCaj Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        End If
        '***Fin Modificado por ELRO*******************************
        
        ImprimeBoleta = lscad
    End If
Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora... ", Err.Description
'    If MsgBox("Comprueba la conexion de su impresora, " + Err.Description & " Desea Reintentar?", vbCritical + vbYesNo, "Aviso") = vbYes Then
'        GoTo ETIQ
'    End If
End Function

Public Function ImprimeBoletaInteres(ByVal psTit As String, ByVal psText As String, _
        ByVal psCodOpe As String, ByVal pnMonto As String, ByVal psCliente As String, _
        ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal pnInteresA As String, ByVal NomDoc As String, ByVal pnNumExt As Long, _
        ByVal psTextInt As String, ByVal psInter As String, Optional pbSaldoCnt As Boolean = False, _
        Optional psSaldoCnt As String = "XXX", Optional pbPSaldos As Boolean = True, _
        Optional sNomAge As String = "", Optional dFecSis As Date, Optional sCodUser As String = "", _
        Optional sLpt As String, Optional ByVal psCodCmac As String = "", _
        Optional pbImprimeSaldos As Boolean = True, Optional pnTipoPago As Integer, _
        Optional pnMontoIFT As Currency, Optional pbImpItf As Boolean = False, Optional pbImpTMU As Boolean = False, _
        Optional pnMonComVB As Double = 0, Optional pnComisionTransf As Double = 0, Optional pcTexto As String, Optional pbComisionTransfCargoCta As Boolean = True, _
        Optional ByVal psNombreBanco As String = "", Optional sCuentaBco As String) As String ' ande ers021-2018 agregué pcTexto
        'CTI4 ERS0112020 Add: pbComisionTransfCargoCta

Dim sFecha As String
Dim sHora As String
Dim sSep As Integer
Dim sIni As Integer
Dim sMonto As String
Dim sSDisp As String
Dim sIntAcum As String
Dim sMax  As Integer
Dim saux As Integer
Dim lsNroExt As String
Dim lsMonInt As String
Dim lsMonTotal As String
Dim LnMonTotal As Currency
Dim lnMontoTransf As Currency 'CTI4 ERS0112020
Dim lsMontoTransf As Currency 'CTI4 ERS0112020

Dim lsCliAux1 As String
Dim lsCliAux2 As String
Dim lnCliAux As Long
Dim lsSaldCnt As String

Dim lsMensaje As String * 39

Dim lscad As String
Dim psTexto As String
Dim bMuestraDetalle As Boolean 'JUEZ 20141202

'ande ERS021-2018
    Dim bPartipaCamp As Boolean, nPunto As Integer, nCondicion As Integer, nPTotalAcumulado As Integer, cNombreCliente As String, cTexto As String, cadenita As String
    If Left(pcTexto, 1) = "#" And Right(pcTexto, 1) = "&" Then
        cTexto = Trim(Replace(Replace(pcTexto, "#", ""), "&", ""))
        bPartipaCamp = IIf(Mid(cTexto, 1, InStr(cTexto, ".") - 1) = "1", True, False)
        nPunto = CInt(Mid(cTexto, InStr(cTexto, ".") + 1, InStr(cTexto, "$") - InStr(cTexto, ".") - 1))
        nCondicion = CInt(Mid(cTexto, InStr(cTexto, "$") + 1, InStr(cTexto, "_") - InStr(cTexto, "$") - 1))
        nPTotalAcumulado = CInt(Right(cTexto, Len(cTexto) - InStr(cTexto, "_")))
        pcTexto = ""
    End If

ETIQ:
'On Error GoTo Error

oImp.gPrnNegritaON = Chr$(27) + Chr$(71)
oImp.gPrnNegritaOFF = Chr$(27) + Chr$(72)

lsNroExt = Str(pnNumExt)


lscad = lscad & oImp.gPrnInicializa
lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita

sSep = 15
sIni = 0
sMax = 33
saux = 5


'JUEZ 20141202 *************************************
bMuestraDetalle = True
If Left(psCodOpe, 4) = Left(gPFAumCapEfec, 4) Then bMuestraDetalle = False
If Not bMuestraDetalle Then psInter = "0"
'END JUEZ *****************************************
sFecha = Format$(dFecSis, "dd/mm/yyyy")
sHora = Format$(Time, "hh:mm:ss")
sMonto = Format$(pnMonto, "#,##0.00")
sSDisp = Format$(pnSaldo, "#,##0.00")

lsMonInt = Format$(psInter, "#,##0.00")
LnMonTotal = Val(psInter) + Val(pnMonto)
lnMontoTransf = LnMonTotal - IIf(pbComisionTransfCargoCta, pnComisionTransf, 0) 'CTI4 ERS0112020
lsMonTotal = Format(LnMonTotal, "#,##0.00")
lsMontoTransf = Format(lnMontoTransf, "#,##0.00") 'CTI4 ERS0112020

Dim lsCadArg As String
Dim lsInteres As String

Dim clsGen As COMDConstSistema.DCOMGeneral
Dim oImpre As New COMFunciones.FCOMImpresion

        '********************************************CTI3 04122018
        Dim TpoCta As String
        'TpoCta = Space(4)
     '       If psCodOpe = gAhoApeEfec Or psCodOpe = gAhoApeLoteEfec Or psCodOpe = gAhoApeTransf Or psCodOpe = gAhoApeCargoCta Or psCodOpe = gAhoApeLoteTransfBanco _
            Or psCodOpe = gAhoRetEfec Or psCodOpe = gAhoRetOP Or psCodOpe = gAhoRetTransf Or psCodOpe = gAhoRetOPCanje Or psCodOpe = gPFApeEfec Then
                
                Dim clsTpoCta As COMNCaptaGenerales.NCOMCaptaGenerales
                Set clsTpoCta = New COMNCaptaGenerales.NCOMCaptaGenerales
                
                TpoCta = "(" & clsTpoCta.GetTpoCta(psCodCta) & ")"
                
                Set clsTpoCta = Nothing
     '       End If
        '*********************************************************

'JUEZ 20131021 *******************************************************************************
Dim oGen As New COMDConstSistema.DCOMGeneral, nEstadoCampDatos As Integer
nEstadoCampDatos = oGen.LeeConstSistema(gConstSistEstadoCampActualizaDatos)
If nEstadoCampDatos = 1 Then
    If pbImpTMU = False Then
        lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnNegritaON
        lscad = lscad & "                            * *         " & Space(sSep - 2) & "                            * *         " & oImp.gPrnSaltoLinea
        lscad = lscad & "                         *      *       " & Space(sSep - 2) & "                         *      *       " & oImp.gPrnSaltoLinea
        lscad = lscad & "                        *               " & Space(sSep - 2) & "                        *               " & oImp.gPrnSaltoLinea
        lscad = lscad & "      * *              *          *     " & Space(sSep - 2) & "      * *              *          *     " & oImp.gPrnSaltoLinea
        lscad = lscad & "    *     *      *   *             *    " & Space(sSep - 2) & "    *     *      *   *             *    " & oImp.gPrnSaltoLinea
        lscad = lscad & "   *        *  *   *                    " & Space(sSep - 2) & "   *        *  *   *                    " & oImp.gPrnSaltoLinea
        lscad = lscad & "  *           *                     *   " & Space(sSep - 2) & "  *           *                     *   " & oImp.gPrnSaltoLinea
        lscad = lscad & " *                                   *  " & Space(sSep - 2) & " *                                   *  " & oImp.gPrnSaltoLinea
        lscad = lscad & "*                                     * " & Space(sSep - 2) & "*                                     * " & oImp.gPrnSaltoLinea
        lscad = lscad & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & Space(sSep - 2) & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
    Else
        lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnNegritaON & "C"
        lscad = lscad & "                            * *" & oImp.gPrnSaltoLinea
        lscad = lscad & "                         *      *" & oImp.gPrnSaltoLinea
        lscad = lscad & "                        *         " & oImp.gPrnSaltoLinea
        lscad = lscad & "      * *              *          *" & oImp.gPrnSaltoLinea
        lscad = lscad & "    *     *      *   *             *" & oImp.gPrnSaltoLinea
        lscad = lscad & "   *        *  *   *                " & oImp.gPrnSaltoLinea
        lscad = lscad & "  *           *                     *" & oImp.gPrnSaltoLinea
        lscad = lscad & " *                                   *" & oImp.gPrnSaltoLinea
        lscad = lscad & "*                                     *" & oImp.gPrnSaltoLinea
        lscad = lscad & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
    End If
End If
'END JUEZ ************************************************************************************

If psCodCmac = "102" Then  '' liquidacion Lima
        'Print #nFicSal, oImp.gPrnSaltoLinea;
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        'Print #nFicSal, Tab(sIni); ""
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        
        If Mid(psCodCta, 9, 1) = 1 Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(lsNroExt) - Len(Trim(sNomAge)) - Len("-DOLARES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(lsNroExt) - Len(Trim(sNomAge)) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
        End If
        
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        
        lscad = lscad & ""
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
        
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If sMax - Len(psCliente) < 2 Then psCliente = Mid(psCliente, 1, sMax - 2)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
        Else
            
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
            
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax - 2)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax - 2)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
        End If
        
        'CTI3 FERIMORO: ERS 082-2018
        lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & psCodCta & Space(2) & TpoCta & oImp.gPrnSaltoLinea
        'lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(8 + sSep + saux) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
         lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & Space(-1 + sSep) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & Space(-1 + sSep) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        lscad = lscad & ""
        
        'Add By GITU 30-09-2011
        If pnMonComVB <> 0 Then
           psTexto = "Comision Ope. Sin Tarjeta:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & oImp.gPrnSaltoLinea
        End If
        'END GITU
                
        'RIRO20131212 ERS137 ****
'        If pnComisionTransf <> 0 Then
'           psTexto = "Comision Transf:"
'           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & oImp.gPrnSaltoLinea
'        End If
        'END RIRO ***************
                
        If pbPSaldos Then
        
            'If MsgBox("Desea Imprimir el Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbSaldoCnt Then
                    lsSaldCnt = Format(psSaldoCnt, "#,##0.00")
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldCnt)) & lsSaldCnt & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldCnt)) & lsSaldCnt & oImp.gPrnSaltoLinea
                    lnCliAux = lnCliAux + 1
                End If
            Else
                lscad = lscad & ""
                lsInteres = "No Valido"
            End If
        Else
            lscad = lscad & ""
        End If
        lsInteres = pnInteresA
        
        If lsInteres <> "No Valido" Then
            lsInteres = Format(lsInteres, "###,##0.00")
            lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
        
        lscad = lscad & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
        
        
        Set clsGen = New COMDConstSistema.DCOMGeneral
        lsMensaje = clsGen.GetMensajeBoletas(psCodCta)
        Set clsGen = Nothing
        
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea ' Space(-1 + sSep); oImpre.ImpreCarEsp(lsMensaje); oImp.gPrnNegritaOFF
        lnCliAux = lnCliAux + 1
        
        'Print #nFicSal, oImp.gPrnSaltoPagina
        For saux = 1 To 4 - lnCliAux
            lscad = lscad & ""
        Next saux
        
        'Close nFicSal
        
        Exit Function

Else  '' liquidacion trujillo
    If pbImpTMU = False Then
        lscad = lscad & oImp.gPrnNegritaON   'Activa Negrita
        'Print #nFicSal, Tab(sIni); ""
        'lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        
        If Mid(psCodCta, 9, 1) = 1 Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(sMax + saux - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(lsNroExt) - Len(Trim(sNomAge)) - Len("-DOLARES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(lsNroExt) - Len(Trim(sNomAge)) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
        End If
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        lscad = lscad & ""
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        If lnCliAux = 0 Then
            If sMax - Len(psCliente) < 2 Then psCliente = Mid(psCliente, 1, sMax - 2)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
            
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax - 2)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax - 2)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
        End If
        
        lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & psCodCta & Space(2) & TpoCta & oImp.gPrnSaltoLinea
        'lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(8 + sSep + saux) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
    
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea

        'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
        If bMuestraDetalle Then lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea 'JUEZ 20141202
        'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & Space(-1 + sSep) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & oImp.gPrnSaltoLinea
        If bMuestraDetalle Then lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & Space(-1 + sSep) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & oImp.gPrnSaltoLinea 'JUEZ 20141202
        'lscad = lscad & Space(sIni) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & Space(-1 + sSep) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & oImp.gPrnSaltoLinea
        If bMuestraDetalle Then lscad = lscad & Space(sIni) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & Space(-1 + sSep) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & oImp.gPrnSaltoLinea 'JUEZ 20141202
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        lscad = lscad & ""
        'INSERTAR IMPRESION BOLETA
        

        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                End If
                '***Modificado por ELRO el 20120825, según OYP-RFC024-2012
                'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & pnMontoIFT & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & pnMontoIFT & oImp.gPrnSaltoLinea
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnMontoIFT, "#,##0.00"))) & Format(pnMontoIFT, "#,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnMontoIFT, "#,##0.00"))) & Format(pnMontoIFT, "#,##0.00") & oImp.gPrnSaltoLinea
                '***Fin Modificado por ELRO el 20120825*******************
            End If
        End If
        
        'Add by GITU 30-09-2011
        If pnMonComVB <> 0 Then
           psTexto = "Comision Ope. Sin Tarjeta:"
           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & oImp.gPrnSaltoLinea
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & oImp.gPrnSaltoLinea 'JUEZ 20150130
        End If
        'END GITU
       
        'RIRO20131212 ERS137 ****
'        If pnComisionTransf <> 0 Then
'           psTexto = "Comision Transf:"
'           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & Space(-1 + 15) & oImp.gPrnSaltoLinea
'           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & oImp.gPrnSaltoLinea 'Comentado CTI4 ERS0112020
'           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnComisionTransf, "#,##0.00"))) & Format(pnComisionTransf, "#,##0.00") & Space(-1 + 15) & oImp.gPrnSaltoLinea 'CTI4 ERS0112020
'        End If
        'END RIRO ***************
        'CTI4 ERS0112020
        If psCodOpe = "210302" Or psCodOpe = "220403" Then
            psTexto = "Total Transf:"
            lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(lnMontoTransf, "0.00"))) & Format(lnMontoTransf, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(lnMontoTransf, "#,##0.00"))) & Format(lnMontoTransf, "#,##0.00") & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        End If
        'CTI4 end

        
        If pbPSaldos Then
            'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbSaldoCnt Then
                    lsSaldCnt = Format(psSaldoCnt, "#,##0.00")
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldCnt)) & lsSaldCnt & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldCnt)) & lsSaldCnt & oImp.gPrnSaltoLinea
                    lnCliAux = lnCliAux + 1
                End If
            Else
                lscad = lscad & ""
                lsInteres = "No Valido"
            End If
        Else
            lscad = lscad & ""
        End If
        

        
    Else
        lscad = lscad & oImp.gPrnNegritaON   'Activa Negrita
        'Print #nFicSal, Tab(sIni); ""
        'lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "CCMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        
        If Mid(psCodCta, 9, 1) = 1 Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & oImp.gPrnSaltoLinea 'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & oImp.gPrnSaltoLinea
        End If
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        lscad = lscad & ""
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        If lnCliAux = 0 Then
            If sMax - Len(psCliente) < 2 Then psCliente = Mid(psCliente, 1, sMax - 2)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
            
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax - 2)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax - 2)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
        End If
        
        lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
    
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea

        'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
        If bMuestraDetalle Then lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psText) & Space(sMax + 6 - Len(psText) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea 'JUEZ 20141202
        'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & oImp.gPrnSaltoLinea
        If bMuestraDetalle Then lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psTextInt) & Space(sMax + 6 - Len(psTextInt) - Len(lsMonInt)) & lsMonInt & oImp.gPrnSaltoLinea 'JUEZ 20141202
        'lscad = lscad & Space(sIni) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & oImp.gPrnSaltoLinea
        If bMuestraDetalle Then lscad = lscad & Space(sIni) & "Total" & Space(sMax + 6 - Len("Total") - Len(lsMonTotal)) & lsMonTotal & oImp.gPrnSaltoLinea 'JUEZ 20141202
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
        lscad = lscad & ""
        'INSERTAR IMPRESION BOLETA

        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                End If
                '***Modificado por ELRO el 20120825, según OYP-RFC024-2012
                'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & pnMontoIFT & oImp.gPrnSaltoLinea
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnMontoIFT, "#,##0.00"))) & Format(pnMontoIFT, "#,##0.00") & oImp.gPrnSaltoLinea
                '***Fin Modificado por ELRO el 20120825*******************
            End If
        End If
        
       'Add by GITU 30-09-2011
       If pnMonComVB <> 0 Then
           psTexto = "Comision Ope. Sin Tarjeta:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnMonComVB, "0.00"))) & Format(pnMonComVB, "0.00") & oImp.gPrnSaltoLinea
       End If
       'END GITU
       
       'RIRO20131212 ERS137 ****
'       If pnComisionTransf <> 0 Then
'          psTexto = "Comision Transf:"
'          'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & Space(-1 + 15) & oImp.gPrnSaltoLinea 'Comentado CTI4 ERS0112020
'          lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & oImp.gPrnSaltoLinea 'CTI4 ERS0112020
'       End If
       'END RIRO ***************
       'CTI4 ERS0112020
       If psCodOpe = "210302" Or psCodOpe = "220403" Then
          psTexto = "Total Transf:"
          lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(lnMontoTransf, "0.00"))) & Format(lnMontoTransf, "0.00") & Space(-1 + 15) & oImp.gPrnSaltoLinea
       End If
       'CTI4 end
       
        If pbPSaldos Then
            'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbSaldoCnt Then
                    lsSaldCnt = Format(psSaldoCnt, "#,##0.00")
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldCnt)) & lsSaldCnt & oImp.gPrnSaltoLinea
                    lnCliAux = lnCliAux + 1
                End If
            Else
                lscad = lscad & ""
                lsInteres = "No Valido"
            End If
        Else
            lscad = lscad & ""
        End If
    End If
End If

lsInteres = pnInteresA
Dim ntotal As Double
If pbImpTMU = False Then
    If bMuestraDetalle Then 'JUEZ 20141202
        If lsInteres <> "No Valido" Then
            lsInteres = Format(lsInteres, "###,##0.00")
            lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
    End If

    'se agrego por tranparencia SBS
    ntotal = CDbl(lsMonTotal) - pnMontoIFT
    If pnMonComVB <> 0 Then ntotal = ntotal - pnMonComVB 'JUEZ 20140104
    lscad = lscad & oImp.gPrnNegritaON
    'If psCodOpe = gPFAumCapEfec Then '***Modificado por ELRO el 20120824, según OYP-RFC024-2012
    If psCodOpe = gPFAumCapEfec Or psCodOpe = gPFAumCapTrans Then
        '***Agregado por ELRO 20120824, según OYP-RFC024-2012
        If pnTipoPago = 1 Then
            ntotal = CDbl(lsMonTotal)
            
        ElseIf pnTipoPago = 2 Then
            ntotal = CDbl(lsMonTotal) - pnMontoIFT
            
        End If
        '***Agregado por ELRO 20120824***********************
        '***Modificado por ELRO 20120824, según OYP-RFC024-2012
        'lscad = lscad & Space(sIni) & "Total  Aumento" & Space(sMax + 8 - Len("Total  Aumento") - Len(ntotal)) & Format(ntotal, "#,##0.00") & Space(-1 + sSep) & "Total  Aumento" & Space(sMax + 8 - Len("Total  Aumento") - Len(ntotal)) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Total  Aumento" & Space(sMax + 6 - Len("Total  Aumento") - Len(Format(ntotal, "#,##0.00"))) & Format(ntotal, "#,##0.00") & Space(-1 + sSep) & "Total  Aumento" & Space(sMax + 6 - Len("Total  Aumento") - Len(Format(ntotal, "#,##0.00"))) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea
        '***Fin Modificado por ELRO 20120824*******************
    Else
        'lscad = lscad & Space(sIni) & "Total  Cancela." & Space(sMax + 8 - Len("Total  Cancela.") - Len(ntotal)) & Format(ntotal, "#,##0.00") & Space(-1 + sSep) & "Total  Cancela." & Space(sMax + 8 - Len("Total  Cancela.") - Len(ntotal)) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Total  Cancela." & Space(24 - Len(Format(ntotal, "#,##0.00"))) & Format(ntotal, "#,##0.00") & Space(-1 + sSep) & "Total  Cancela." & Space(24 - Len(Format(ntotal, "#,##0.00"))) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea 'APRI20171030 MEJORA CORREO20171026
    End If
    
                'CTI4 ERS0112020
    If psCodOpe = "210302" Or psCodOpe = "220403" Or psCodOpe = gPFCancTransf Then
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("Comisión", 1, 26))) & Space(39 - Len("Comisión") - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid("Comisión", 1, 25))) & Space(37 + 2 - Len(Trim(Mid("Comisión", 1, 28))) - Len(Format(pnComisionTransf, "#,##0.00"))) & Format(pnComisionTransf, "#,##0.00") & oImp.gPrnSaltoLinea
    
        psTexto = "Total Transf:"
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(lnMontoTransf, "0.00"))) & Format(lnMontoTransf, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(lnMontoTransf, "#,##0.00"))) & Format(lnMontoTransf, "#,##0.00") & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("Cuenta destino", 1, 26))) & Space(39 - Len("Cuenta destino") - Len("")) & "" & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid("Cuenta destino", 1, 25))) & Space(37 + 2 - Len(Trim(Mid("Cuenta destino", 1, 28))) - Len("")) & "" & oImp.gPrnSaltoLinea
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psNombreBanco, 1, 26))) & Space(39 - Len(psNombreBanco) - Len("")) & "" & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psNombreBanco, 1, 25))) & Space(37 + 2 - Len(Trim(Mid(psNombreBanco, 1, 28))) - Len("")) & "" & oImp.gPrnSaltoLinea
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("CCI", 1, 26))) & Space(39 - Len("CCI") - Len(sCuentaBco)) & sCuentaBco & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid("CCI", 1, 25))) & Space(37 + 2 - Len(Trim(Mid("CCI", 1, 28))) - Len(sCuentaBco)) & sCuentaBco & oImp.gPrnSaltoLinea
       
    End If
    'CTI4 end
    lscad = lscad & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
    lscad = lscad & " ** ESTIMADO CLIENTE, ANTES DE RETIRARSE" & Space(14) & "** ESTIMADO CLIENTE, ANTES DE RETIRARSE" & oImp.gPrnSaltoLinea
    lscad = lscad & " DE  LA  VENTANILLA  VERIFIQUE  QUE  LOS" & Space(14) & "DE  LA  VENTANILLA  VERIFIQUE  QUE  LOS" & oImp.gPrnSaltoLinea
    lscad = lscad & " DATOS  CONSIGNADOS  CORRESPONDAN  A  LA" & Space(14) & "DATOS  CONSIGNADOS  CORRESPONDAN  A  LA" & oImp.gPrnSaltoLinea
    lscad = lscad & " OPERACION SOLICITADA **                 " & Space(14) & "OPERACION SOLICITADA **                 " & oImp.gPrnSaltoLinea
    
    lscad = lscad & oImp.gPrnNegritaOFF
    If Not psNumDoc = "" Then
        lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & oImp.gPrnSaltoLinea 'NomDoc; Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)); psNumDoc
    Else
        lscad = lscad & ""
    End If

    lscad = lscad & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
    Set clsGen = New COMDConstSistema.DCOMGeneral
    lsMensaje = clsGen.GetMensajeBoletas(psCodCta)
    Set clsGen = Nothing
    lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea ' Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF
    lnCliAux = lnCliAux + 1
    
     'ande ers021-2018 20180430
    If bPartipaCamp Then
        'cadenita = IIf(nCondicion = 0, "¡Gol!", "¡Autogol!") & " Con " & Chr(130) & "sta operaci" & Chr(162) & "n" & IIf(nCondicion = 0, " ganaste", " perdiste")
        'lscad = lscad & cadenita & IIf(nCondicion = 0, Space(21), Space(17)) & cadenita & oImp.gPrnSaltoLinea
        'cadenita = IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s). Sigue participando en"
        'lscad = lscad & cadenita & Space(17) & cadenita & oImp.gPrnSaltoLinea
        'cadenita = "nuestra Campa" & Chr(164) & "a Mundial del Ahorro 2018"
        'APRI20191128 'Comentado por GEMO 20210626
'        cadenita = IIf(nCondicion = 0, "Felicitaciones sumas ", "Lo sentimos, perdiste ") & IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s) para"
'        lscad = lscad & cadenita & IIf(nCondicion = 0, Space(13), Space(12)) & cadenita & oImp.gPrnSaltoLinea
'        cadenita = "el sorteo de practicos electrodomesticos"
'        lscad = lscad & cadenita & Space(13) & cadenita & oImp.gPrnSaltoLinea
'        cadenita = "y televisores para tu hogar!"
'        'END APRI
'        lscad = lscad & cadenita & Space(25) & cadenita & oImp.gPrnSaltoLinea
'        cadenita = "Pto(s) acumulado(s): " & IIf(Len(CStr(nPTotalAcumulado)) < 6, CStr(nPTotalAcumulado) & String(6 - Len(CStr(nPTotalAcumulado)), " "), CStr(nPTotalAcumulado))
'        lscad = lscad & cadenita & Space(26) & cadenita & oImp.gPrnSaltoLinea
    End If
    'end ande
    
Else
    If bMuestraDetalle Then 'JUEZ 20141202
        If lsInteres <> "No Valido" Then
            lsInteres = Format(lsInteres, "###,##0.00")
            lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
    End If
    'se agrego por tranparencia SBS
    ntotal = CDbl(lsMonTotal) - pnMontoIFT
    If pnMonComVB <> 0 Then ntotal = ntotal - pnMonComVB 'JUEZ 20140104
    lscad = lscad & oImp.gPrnNegritaON
    'JUEZ 20141202 ****************************************
    If psCodOpe = gPFAumCapEfec Or psCodOpe = gPFAumCapTrans Or psCodOpe = gPFAumCapCargoCta Then 'JUEZ 20150130 Se agregó gPFAumCapCargoCta
        If pnTipoPago = 1 Then
            ntotal = CDbl(lsMonTotal)
        ElseIf pnTipoPago = 2 Then
            ntotal = CDbl(lsMonTotal) - pnMontoIFT
        End If
        lscad = lscad & Space(sIni) & "Total  Aumento" & Space(sMax + 6 - Len("Total  Aumento") - Len(Format(ntotal, "#,##0.00"))) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea
    Else
        'lscad = lscad & Space(sIni) & "TTotal  Cancela." & Space(sMax + 8 - Len("Total  Cancela.") - Len(ntotal)) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Total  Cancela." & Space(24 - Len(Format(ntotal, "#,##0.00"))) & Format(ntotal, "#,##0.00") & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea 'APRI20171030 MEJORA CORREO20171026
    End If
    'END JUEZ *********************************************
    
    'CTI4 ERS0112020
    If psCodOpe = "210302" Or psCodOpe = "220403" Or psCodOpe = gPFCancTransf Then
       lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("Comisión", 1, 26))) & Space(39 - Len("Comisión") - Len(Format(pnComisionTransf, "0.00"))) & Format(pnComisionTransf, "0.00") & Space(-1 + 15) & oImp.gPrnSaltoLinea
    
       psTexto = "Total Transf:"
       lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(lnMontoTransf, "0.00"))) & Format(lnMontoTransf, "0.00") & Space(-1 + 15) & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    
       lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("Cuenta destino", 1, 26))) & oImp.gPrnSaltoLinea
       lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psNombreBanco, 1, 26))) & oImp.gPrnSaltoLinea
       lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("CCI", 1, 26))) & Space(39 - Len("CCI:") - Len(sCuentaBco)) & sCuentaBco & Space(-1 + 15) & oImp.gPrnSaltoLinea
   
    End If
    lscad = lscad & Space(sIni) & "---------------------------------------" & oImp.gPrnSaltoLinea
    lscad = lscad & "** ESTIMADO CLIENTE, ANTES DE RETIRARSE" & oImp.gPrnSaltoLinea
    lscad = lscad & "DE  LA  VENTANILLA  VERIFIQUE  QUE  LOS" & oImp.gPrnSaltoLinea
    lscad = lscad & "DATOS  CONSIGNADOS  CORRESPONDAN  A  LA" & oImp.gPrnSaltoLinea
    lscad = lscad & "OPERACION SOLICITADA **                 " & oImp.gPrnSaltoLinea
    'CTI4 end
       
    lscad = lscad & oImp.gPrnNegritaOFF
    If Not psNumDoc = "" Then
        lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
    Else
        lscad = lscad & ""
    End If

    lscad = lscad & Space(sIni) & "---------------------------------------" & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
    Set clsGen = New COMDConstSistema.DCOMGeneral
    lsMensaje = clsGen.GetMensajeBoletas(psCodCta)
    Set clsGen = Nothing
    lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnSaltoLinea
    lnCliAux = lnCliAux + 1
    
    'ande ers021-2018 20180430
    If bPartipaCamp Then
       'cadenita = IIf(nCondicion = 0, "¡Gol!", "¡Autogol!") & " Con " & Chr(130) & "sta operaci" & Chr(162) & "n" & IIf(nCondicion = 0, " ganaste", " perdiste")
       'lscad = lscad & cadenita & oImp.gPrnSaltoLinea
       'cadenita = IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s). Sigue participando en"
       'lscad = lscad & cadenita & oImp.gPrnSaltoLinea
       'cadenita = "nuestra Campa" & Chr(164) & "a Mundial del Ahorro 2018"
      'APRI20191128 'Comentado por GEMO
'       cadenita = IIf(nCondicion = 0, "Felicitaciones sumas ", "Lo sentimos, perdiste ") & IIf(Len(CStr(nPunto)) < 5, CStr(nPunto) & String(5 - Len(CStr(nPunto)), " "), CStr(nPunto)) & " punto(s) para"
'       lscad = lscad & cadenita & oImp.gPrnSaltoLinea
'       cadenita = "el sorteo de practicos electrodomesticos"
'       lscad = lscad & cadenita & oImp.gPrnSaltoLinea
'       cadenita = "y televisores para tu hogar!"
'      'END APRI
'       lscad = lscad & cadenita & oImp.gPrnSaltoLinea
'       cadenita = "Pto(s) acumulado(s): " & CStr(nPTotalAcumulado)
'       lscad = lscad & cadenita & oImp.gPrnSaltoLinea
    End If

    'end ande
End If

If pbImpTMU = False Then
    ImprimeBoletaInteres = oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & lscad
Else
    ImprimeBoletaInteres = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
End If
Exit Function

Error:
     Err.Raise Err.Number, "Comprueba la conexion de su impresora... ", Err.Description

End Function

Private Function EmiteBoleta(ByVal sMsgProd As String, ByVal sMsgOpe As String, ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal nOperacion As CaptacOperacion, ByVal nSaldoDisp As Double, ByVal nSaldoCnt As Double, _
            ByVal nIntMes As Double, ByVal nExtracto As Long, Optional bDocumento As Boolean = False, Optional nDocumento As TpoDoc = TpoDocCheque, _
            Optional sNroDoc As String = "", Optional dFechaValor As Date, Optional bBoletaInt As Boolean = False, _
            Optional nIntCanc As Double = 0, Optional nDias As Long = 0, Optional bImpSaldos As Boolean = True, Optional pcTexto As String) As String 'ande agregué pcTexto ers021-2018

Dim bReImp As Boolean
Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
Dim oImpre As New COMFunciones.FCOMImpresion

'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe
sTipApe = sMsgProd
Dim clsMant As NCOMCaptaGenerales
Set clsMant = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsMant.GetNombreTitulares(sCuenta))
Set clsMant = Nothing
bReImp = False
'Do
    If bDocumento Then
        Select Case nDocumento
            Case TpoDocCheque
                EmiteBoleta = ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, Format$(dFechaValor, "dd/mm/yyyy"), nSaldoDisp, nIntMes, "Fecha Valor", nExtracto, nSaldoCnt, bImpSaldos, , , , , , , , pcTexto)
            Case TpoDocNotaAbono, TpoDocNotaCargo
                If bBoletaInt Then
                    EmiteBoleta = ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, sNroDoc, nSaldoDisp, Trim(nIntMes), "Nota Cargo", nExtracto, "Interes Retirado", Trim(nIntCanc), , , bImpSaldos)
                Else
                    EmiteBoleta = ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntMes, "", nExtracto, nSaldoCnt, bImpSaldos)
                End If
            Case TpoDocOrdenPago
                EmiteBoleta = ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntMes, "", nExtracto, nSaldoCnt, bImpSaldos)
        End Select
    Else
        If bBoletaInt Then
             EmiteBoleta = ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, Trim(nIntMes), "", nExtracto, "Interes Retirado", Trim(nIntCanc), , , bImpSaldos)
        Else
            If nDias > 0 Then
                EmiteBoleta = ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntMes, "", 1, nSaldoCnt, bImpSaldos, , Trim(nDias))
            Else
                 EmiteBoleta = ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntMes, "", 1, nSaldoCnt, bImpSaldos)
            End If
        End If
    End If
    'If MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbYes Then
    '    bReImp = True
    'Else
    '    bReImp = False
    'End If
'Loop Until Not bReImp
End Function

Public Function GetInteres(ByVal nCapital As Double, ByVal nTasa As Double, _
            ByVal nPlazo As Long, Optional nTipoInteres As TipoCalculoInteres = TpoCalcIntSimple) As Double

Dim nIntEfe As Double
If nTipoInteres = TpoCalcIntSimple Then
    GetInteres = Round((nTasa / 36000) * nPlazo * nCapital, 2)
ElseIf nTipoInteres = TpoCalcIntCompuesto Then
    GetInteres = Round(((nTasa / 36000 + 1) ^ nPlazo - 1) * nCapital, 2)
ElseIf nTipoInteres = TpoCalcIntAdelantado Then
    nIntEfe = ((nTasa / 36000 + 1) ^ nPlazo - 1)
    nIntEfe = nIntEfe / (1 + nIntEfe)
    GetInteres = Round(nIntEfe * nCapital, 2)
End If
End Function

Public Function GetTasaInteresEspecial(ByVal cPersCod As String, ByVal nEstado As Integer, ByVal nProd As Integer, ByVal nMoneda As Integer, ByVal dFecha As Date) As ADODB.Recordset

Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento, rsTemp As ADODB.Recordset
Set rsTemp = New ADODB.Recordset
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set GetTasaInteresEspecial = New ADODB.Recordset
Set rsTemp = clsCap.GetDataInteresEspecial(cPersCod, nEstado, nProd, nMoneda, dFecha)
Set GetTasaInteresEspecial = rsTemp
Set clsCap = Nothing

End Function

Public Function ValidaMontoApertura(ByVal nProducto As Producto, ByVal nPersoneria As PersPersoneria, _
        ByVal nMonto As Double, ByVal nMoneda As Moneda, Optional bOrdPag As Boolean = False, Optional nTpoPrograma As Integer = 0) As String
        'BRGO 20111219 Se agregó el parámetro "nTpoPrograma"
Dim nValor As Double
Dim clsGen  As NCOMCaptaDefinicion
Dim sDesc As String
Set clsGen = New NCOMCaptaDefinicion
nValor = clsGen.GetMontoMinimoAperturaPersoneria(nProducto, nMoneda, nPersoneria, bOrdPag, nTpoPrograma)
Set clsGen = Nothing
If nValor > nMonto Then
    ValidaMontoApertura = "Monto de Apertura debe ser > ó = a " & Format$(nValor, "#,##0.00")
Else
    ValidaMontoApertura = ""
End If
End Function

Public Function CapAperturaCuenta(ByVal nProducto As Producto, ByVal nMoneda As Moneda, ByVal rsPers As ADODB.Recordset, _
        ByVal sAgencia As String, ByVal nOperacion As CaptacOperacion, ByVal nTasa As Double, ByVal nSaldo As Double, _
        ByVal dFecha As Date, ByVal nFirmas As Integer, ByVal nPersoneria As PersPersoneria, ByVal sGlosa As String, _
        ByVal nTipoCuenta As ProductoCuentaTipo, ByVal sMovNro As String, _
        ByVal nTipoTasa As CaptacTipoTasa, Optional bCheque As Boolean = False, _
        Optional sNroDoc As String, Optional sCodIF As String, _
        Optional ByVal bOrdPag As Boolean = False, Optional nPlazo As Long = 0, _
        Optional nFormaRetiro As CaptacPFFormaRetiro = gCapPFFormRetMensual, _
        Optional bCtaAboInt As Boolean = False, Optional sCtaCodAbono As String = "", _
        Optional nPorcRetCTS As Double = 0, Optional sInstitucion As String = "", _
        Optional sPersLavDinero As String = "", Optional sOrdPersLavDinero As String = "", Optional sReaPersLavDinero As String = "", _
        Optional sBenPersLavDinero As String = "", Optional VisPersLavDinero As String = "", Optional pnMovNroTransfer As Long = -1, Optional pnMonedaTrans As Moneda = gMonedaNacional, _
        Optional pbITFAplica As Boolean = True, Optional pnITFTipoExoneracion As Integer = 0, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, Optional ByVal psITFOpeCod As String = "", Optional ByVal cAlias As String, Optional ByVal nFirmasMin As Integer, _
        Optional cPersTasaEspecial As String, Optional bEsTasaPermanente As Boolean, _
        Optional nTpoPrograma As Integer = -1, Optional pnMontoAbonar As Currency = 0, Optional pnPlazo As Integer = 0, Optional psCodPromotor As String, Optional ByRef pnMovNro As Long, _
        Optional pnMovNroTemp As Long = 0, Optional ByVal nGarantDepCF As Integer = -1, _
        Optional ByVal pnMovNroRVD As Long = 0, _
        Optional ByVal pnMontoRVD As Long = 0, Optional ByVal psPersCodConv As String, Optional ByVal nSubasta As Integer = -1, _
        Optional ByVal sRegla As String, _
        Optional ByVal sGrupo As String, Optional ByVal psCtaCodCargo As String = "", Optional ByRef psBoletaCargo As String = "", _
        Optional ByVal pbImpTMU As Boolean, Optional ByVal psNombreCMAC As String, Optional ByVal psNomAge As String, _
        Optional ByRef pArrDatos As Variant = Nothing) As String
        'MIOL 20121109 SEGUN RFC098-2012 - nSubasta
        'MADM 20111022 - nGarantDepCF
        '*** PEAC 20080812 - se agregó el parametro "pnMovNro"
        '*** Parametros: pnMovNroRVD y pnMontoRVD agregado por ELRO el 20120717, según OYP-RFC024-2012
        'SE AGREGARON PARAMETROS "sRegla, sGrupo", RIRO 20131102 SEGUN "CAMBIOS EN PODERES"
        'JUEZ 20131212 Se agregò psCtaCodCargo, psBoletaCargo, pbImpTMU, psNombreCMAC, psNomAge, psLpt
        'EJVG20140408 Se agregó array MatDatos y se quito el parametro psLpt x Limite máximo de argumentos

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim dlsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim nErrNum As Integer
    Dim nErrDesc As String, sCuenta As String
    Dim bTrans As Boolean
    Dim nMovNro As Long
    Dim lnMontoCV As Currency

    'Para el manejo del Tipo de Cambio
    Dim oGen As New COMDConstSistema.DCOMGeneral

    Dim lnTipCambio As Currency
    Dim lnTipCambioV As Currency
    Dim lnTipCambioC As Currency
    'JUEZ 20130805 *******************************************************
    Dim lnTipoCambio As Currency, nPorcDisp As Double
    Dim clsDef As New NCOMCaptaDefinicion
    lnTipoCambio = oGen.GetTipCambio(dFecha, TCFijoMes)
    nPorcDisp = clsDef.GetCapParametro(gPorRetCTS)
    'END JUEZ ************************************************************
    Dim bCtaAboIntInact As Boolean, nSaldDispCtaAboIntInact As Double, nSaldCntCtaAboIntInact As Double 'JUEZ 20130909
    Dim nSaldoCtaCargo As Double 'JUEZ 20131212
    'EJVG20140408 ***
    Dim psLpt As String
    Dim lnTpoDoc As Integer
    Dim lsNroDoc As String
    Dim lsPersCod As String
    Dim lsIFTpo As String
    Dim lsIFCta As String
    Dim iMat As Integer
    'END EJVG *******
    Dim lnCampanaCod As Long
    
    'EJVG20140408 *** Para nuevos parametros
    If IsArray(pArrDatos) Then
        For iMat = 0 To UBound(pArrDatos)
            Select Case iMat
                Case 0: psLpt = pArrDatos(iMat)
                Case 1: lnTpoDoc = pArrDatos(iMat)
                Case 2: lsNroDoc = pArrDatos(iMat)
                Case 3: lsPersCod = pArrDatos(iMat)
                Case 4: lsIFTpo = pArrDatos(iMat)
                Case 5: lsIFCta = pArrDatos(iMat)
                Case 6: lnCampanaCod = pArrDatos(iMat) 'JUEZ 20160420
            End Select
        Next
    End If
    'END EJVG *******
    bTrans = False
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Set dlsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    'JUEZ 20130909 *******************************************
    If nProducto = gCapPlazoFijo And bCtaAboInt Then
        Dim rsCtaAbo As ADODB.Recordset
        Set rsCtaAbo = dlsMant.GetDatosCuentaAho(sCtaCodAbono)
        If rsCtaAbo!bInactiva Then
            bCtaAboIntInact = True
            nSaldDispCtaAboIntInact = rsCtaAbo("nSaldoDisp")
            nSaldCntCtaAboIntInact = rsCtaAbo("nSaldo")
        End If
        Set rsCtaAbo = Nothing
    End If
    'END JUEZ ************************************************
    On Error GoTo ErrGraba
    clsMant.dbCmact.BeginTrans
    bTrans = True
    
    If pbITFAplica And pnITFValor > 0 Then
        If (nOperacion = gAhoApeChq Or nOperacion = gPFApeChq) And pbITFAsumido = False Then
                sCuenta = clsMant.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - pnITFValor, nSaldo), dFecha, nFirmas, nPersoneria, _
                nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, cAlias, nFirmasMin, cPersTasaEspecial, bEsTasaPermanente, pnITFValor, nTpoPrograma, pnMontoAbonar, pnPlazo, nGarantDepCF, psPersCodConv, nSubasta, sRegla, , lnCampanaCod) 'MIOL nSubasta)
            
        ElseIf (nOperacion = gAhoApeChq Or nOperacion = gPFApeChq) And pbITFAsumido = True Then
                sCuenta = clsMant.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - pnITFValor, nSaldo), dFecha, nFirmas, nPersoneria, _
                nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, cAlias, nFirmasMin, cPersTasaEspecial, bEsTasaPermanente, , nTpoPrograma, pnMontoAbonar, pnPlazo, nGarantDepCF, psPersCodConv, nSubasta, sRegla, , lnCampanaCod) 'MIOL nSubasta
            
        ElseIf Not (nOperacion = gAhoApeChq Or nOperacion = gPFApeChq) And pbITFAsumido = True Then
                sCuenta = clsMant.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - pnITFValor, nSaldo), dFecha, nFirmas, nPersoneria, _
                nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, cAlias, nFirmasMin, cPersTasaEspecial, bEsTasaPermanente, , nTpoPrograma, pnMontoAbonar, pnPlazo, nGarantDepCF, psPersCodConv, nSubasta, sRegla, , lnCampanaCod) 'MIOL nSubasta
            
        Else
            If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                sCuenta = clsMant.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - pnITFValor, nSaldo), dFecha, nFirmas, nPersoneria, _
                nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, cAlias, nFirmasMin, cPersTasaEspecial, bEsTasaPermanente, , nTpoPrograma, pnMontoAbonar, pnPlazo, nGarantDepCF, psPersCodConv, nSubasta, sRegla, , lnCampanaCod) 'MIOL nSubasta
            Else                                                                                                                                                                                                                                                          'PAVA20210917
                sCuenta = clsMant.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo - pnITFValor, dFecha, nFirmas, nPersoneria, _
                nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, cAlias, nFirmasMin, cPersTasaEspecial, bEsTasaPermanente, , nTpoPrograma, pnMontoAbonar, pnPlazo, nGarantDepCF, psPersCodConv, nSubasta, sRegla, , lnCampanaCod) ' PAVA20210920
            End If
        End If
    Else
        sCuenta = clsMant.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo, dFecha, nFirmas, nPersoneria, _
        nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, cAlias, nFirmasMin, cPersTasaEspecial, bEsTasaPermanente, , nTpoPrograma, pnMontoAbonar, pnPlazo, nGarantDepCF, psPersCodConv, nSubasta, sRegla, psCtaCodCargo, lnCampanaCod) 'MIOL nSubasta
        'JUEZ 20131212 Se agregó psCtaCodCargo
    End If

    clsMant.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsMant.GetnMovNro(sMovNro)
    'ALPA 20081010*******************************
    pnMovNroTemp = nMovNro

    Select Case nOperacion
        Case gAhoApeChq, gPFApeChq, gCTSApeChq
            'clsMant.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, 0, nSaldo
            'EJVG20140408 ***
            clsMant.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, nSaldo, nSaldo
            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo
        
            'Dim rstemp1 As New ADODB.Recordset
            'Set rstemp1 = clsMant.GetDatosCheque(sNroDoc, sCodIF, "01")
        
            'clsMant.AgregaCuentaDocumento sCuenta, TpoDocCheque, sNroDoc, sCodIF, sMovNro, nMovNro, nSaldo, , rstemp1!cIFCta
            clsMant.AgregaCuentaDocumento sCuenta, lnTpoDoc, lsNroDoc, lsPersCod, sMovNro, nMovNro, nSaldo, , lsIFCta, lsIFTpo
            clsMant.AgregaMovDocRec nMovNro, lnTpoDoc, lsNroDoc, lsPersCod, lsIFTpo, lsIFCta
            'END EJVG *******
    
            If pbITFAplica And pnITFValor > 0 Then
                If pnITFTipoExoneracion = 0 Then
                    If pbITFAsumido Then
                        clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, 0, nSaldo
                        clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFAsumido, pnITFValor
                    Else
                        If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                            clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, 0, nSaldo
                            clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, pnITFValor
                        Else
                            clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, 0 - pnITFValor, nSaldo - pnITFValor
                            clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, pnITFValor
                        End If
                    End If
                End If
            End If
        Case gAhoApeTransf, gPFApeTransf, gCTSApeTransf
            clsMant.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, nSaldo, nSaldo
            '***Comentado por ELRO 20120828, según OYP-RFC024-2012
            'clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo
            '***Fin Comentado por ELRO 20120828*******************
        
            If pnMovNroTransfer <> -1 Then
                '***Agregado por ELRO 20120828, según OYP-RFC024-2012
                clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcPenTran, nSaldo
                '***Fin Agregado por ELRO 20120828*******************
                clsMant.AgregaMovRef nMovNro, pnMovNroTransfer
                '***Agregado por ELRO 20120828, según OYP-RFC024-2012
                clsMant.ActualizaMovPendientesRend pnMovNroTransfer, pnMontoRVD
                '***Fin Agregado por ELRO 20120828*******************
                If pnMonedaTrans <> nMoneda Then
                    'GetTipCambio dFecha
                    lnTipCambio = oGen.GetTipCambio(dFecha, TCFijoMes)
                    lnTipCambioC = oGen.GetTipCambio(dFecha, TCCompra)
                    lnTipCambioV = oGen.GetTipCambio(dFecha, TCVenta)
        
                    If nMoneda = gMonedaNacional Then
                        '***Comentado por ELRO 20120828, según OYP-RFC024-2012
                        'clsMant.ActualizaMovPendientesRend pnMovNroTransfer, Round(nSaldo / lnTipCambioC, 2)
                        '***Fin Comentado por ELRO 20120828*******************
                        lnMontoCV = Round((nSaldo / lnTipCambioC) * lnTipCambio, 2)
                        '***Comentado por ELRO 20120828, según OYP-RFC024-2012
                        'clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeCompra, lnMontoCV
                        '***Fin Comentado por ELRO 20120828*******************
                        clsMant.AgregaMovTipoCambio nMovNro, lnTipCambioC
                        If lnTipCambioC < lnTipCambio Then
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nSaldo)
                        Else
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nSaldo)
                        End If
                    Else
                        '***Comentado por ELRO 20120828, según OYP-RFC024-2012
                        'clsMant.ActualizaMovPendientesRend pnMovNroTransfer, Round(nSaldo * lnTipCambioV, 2)
                        '***Fin Comentado por ELRO 20120828*******************
                        lnMontoCV = Round(nSaldo * lnTipCambio, 2)
                        '***Comentado por ELRO 20120828, según OYP-RFC024-2012
                        'clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
                        '***Fin Comentado por ELRO 20120828*******************
                        clsMant.AgregaMovTipoCambio nMovNro, lnTipCambioV
                        If lnTipCambioV > lnTipCambio Then
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nSaldo * lnTipCambioV, 2))
                        Else
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nSaldo * lnTipCambioV, 2))
                        End If
                    End If
                'Else
                    '***Comentado por ELRO 20120828, según OYP-RFC024-2012
                    'clsMant.ActualizaMovPendientesRend pnMovNroTransfer, nSaldo
                    '***Fin Comentado por ELRO 20120828*******************
                End If
            '***Agregado por ELRO el 20120829, según OYP-RFC024-2012
            ElseIf pnMovNroTransfer = -1 Then
                clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo
                
                If pnMonedaTrans <> nMoneda Then
                    lnTipCambio = oGen.GetTipCambio(dFecha, TCFijoMes)
                    lnTipCambioC = oGen.GetTipCambio(dFecha, TCCompra)
                    lnTipCambioV = oGen.GetTipCambio(dFecha, TCVenta)
                    If nMoneda = gMonedaNacional Then
                        lnMontoCV = Round((nSaldo / lnTipCambioC) * lnTipCambio, 2)
                        clsMant.AgregaMovTipoCambio nMovNro, lnTipCambioC
                        If lnTipCambioC < lnTipCambio Then
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nSaldo)
                        Else
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nSaldo)
                        End If
                    Else
                        lnMontoCV = Round(nSaldo * lnTipCambio, 2)
                        clsMant.AgregaMovTipoCambio nMovNro, lnTipCambioV
                        If lnTipCambioV > lnTipCambio Then
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nSaldo * lnTipCambioV, 2))
                        Else
                            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nSaldo * lnTipCambioV, 2))
                        End If
                    End If
                 End If
            '***Agregado por ELRO el 20120829**********************
            End If
            
            '***Agregado por ELRO el 20120717, según OYP-RFC024-2012
            'Para relacionar el Registro de Voucher con la Operación
            clsMant.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
            
            'Para cobro de ITF
            If pbITFAplica And pnITFValor > 0 Then
                If pnITFTipoExoneracion = 0 Then
                    If pbITFAsumido Then
                        clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, nSaldo, nSaldo
                        clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFAsumido, pnITFValor
                    Else
                        If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                            clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, nSaldo, nSaldo
                            clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, pnITFValor
                        Else
                            clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, nSaldo - pnITFValor, nSaldo - pnITFValor
                            clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, pnITFValor
                        End If
                    End If
                End If
            End If
            '***Fin Agregado por ELRO el 20120717********************
            
            
        Case Else
            clsMant.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, nSaldo, nSaldo
            clsMant.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo

            If pbITFAplica And pnITFValor > 0 Then
                If pnITFTipoExoneracion = 0 Then
                    If pbITFAsumido Then
                        clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, nSaldo, nSaldo
                        clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFAsumido, pnITFValor
                    Else
                        If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                            clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, nSaldo, nSaldo
                            clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, pnITFValor
                        Else
                            clsMant.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, pnITFValor, nSaldo - pnITFValor, nSaldo - pnITFValor
                            clsMant.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, pnITFValor
                        End If
                    End If
                End If
            End If
    End Select

    If pbITFAplica Then
        If pnITFTipoExoneracion <> 0 Then
            clsMant.AgregaCtaExoneradaITF sCuenta, pnITFTipoExoneracion, sMovNro
        End If
    End If

    If nOperacion = gCTSApeEfec Or nOperacion = gCTSApeChq Or nOperacion = gCTSApeTransf Then
        clsMant.AgregaMovParamCTS nMovNro, nPorcRetCTS
    End If
    
    'JUEZ 20131212 *********************************************************
    If nOperacion = gAhoApeCargoCta Or nOperacion = gPFApeCargoCta Then
        nSaldoCtaCargo = CapCargoCuentaAho(psCtaCodCargo, nSaldo, gAhoCargoCtaApert, sMovNro, sGlosa, , , , , , , , psNombreCMAC, psNomAge, psLpt, sPersLavDinero, True, , , , clsMant.dbCmact, sAgencia, , pbITFAplica, pnITFValor, pbITFAsumido, psITFOpeCod, , sBenPersLavDinero, , psBoletaCargo, , , , pbImpTMU, sPersLavDinero, sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero, VisPersLavDinero, , , , , , sRegla)
        clsMant.AgregaMovDoc nMovNro, TpoDocCtaCargoApert, psCtaCodCargo, dFecha
    End If
    'JUEZ 20131212 *********************************************************
    
    'JUEZ 20130909 ***************************************************************************
    If nProducto = gCapPlazoFijo And bCtaAboIntInact Then
        clsMant.AgregaMovCap nMovNro, gAhoEstInacAct, sCtaCodAbono, nSaldCntCtaAboIntInact, nSaldDispCtaAboIntInact, nSaldCntCtaAboIntInact
        clsMant.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaCodAbono, gConcCapital, nSaldCntCtaAboIntInact
        clsMant.ActualizaEstadoCuenta sCtaCodAbono, gCapEstActiva, dFecha, sMovNro
        clsMant.ActualizaInactivaAct sCtaCodAbono
    End If
    'END JUEZ ********************************************************************************
    'If sPersLavDinero <> "" Then
''ALPA 20081010*************************************************
''    If sOrdPersLavDinero <> "" And sOrdPersLavDinero <> "Exit" Then
''
''        'By Capi 20012008
''        clsMant.AgregaMovLavDinero nMovNro, sPersLavDinero, sPersLavDinero, sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero, VisPersLavDinero
''        'clsMant.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''    End If
''**************************************************************

    '*** PEAC 20080807
    
    pnMovNro = nMovNro
    
    '*** FIN PEAC

    ' RIRO el 20131102
    Dim arrGrupos() As String
    Dim nContar As Integer
    ' FIN RIRO
    If Mid(sCuenta, 6, 3) = "232" Or Mid(sCuenta, 6, 3) = "233" Then
        ' RIRO 20131102
        nContar = 0
        arrGrupos = Split(sGrupo, "-")
        ' FIN RIRO
        Do While Not rsPers.EOF
            clsMant.AgregaNuevoProdPers sCuenta, rsPers("Codigo"), CLng(Trim(Right(rsPers("Relacion"), 4))), Left(rsPers("Firma Oblig"), 1), arrGrupos(nContar)
            dlsMant.AgregaBitacoraPPer sMovNro, sCuenta, rsPers("Codigo"), CLng(Trim(Right(rsPers("Relacion"), 4))), Left(rsPers("Firma Oblig"), 1), arrGrupos(nContar)
            rsPers.MoveNext
            nContar = nContar + 1
        Loop
    Else
        nContar = 0
        arrGrupos = Split(sGrupo, "-")
        Do While Not rsPers.EOF
            clsMant.AgregaNuevoProdPers sCuenta, rsPers("Codigo"), CLng(Trim(Right(rsPers("Relacion"), 4))), , sGrupo
            dlsMant.AgregaBitacoraPPer sMovNro, sCuenta, rsPers("Codigo"), CLng(Trim(Right(rsPers("Relacion"), 4))), "S", sGrupo
            rsPers.MoveNext
            nContar = nContar + 1
        Loop
    End If
    'Midificación GRVA - Agrega promotor
    If psCodPromotor <> "" Then
        clsMant.AgregaNuevoProdPers sCuenta, psCodPromotor, gCapRelPersPromotor, , "PA"
        dlsMant.AgregaBitacoraPPer sMovNro, sCuenta, psCodPromotor, gCapRelPersPromotor, "N", "PA"
    End If
    
    clsMant.dbCmact.CommitTrans
    bTrans = False
    
    'JUEZ 20130805 *********************************************************************
    If nProducto = gCapCTS Then
        Dim rsSueldos As New ADODB.Recordset, rsCta As ADODB.Recordset
        Dim nExcedente As Double, nSaldoRetiro As Double
        Set rsSueldos = clsMant.ObtenerDatosSueldosClienteInstitucionCTS(sCuenta)
        If Not rsSueldos.EOF Then
            Call clsMant.AgregaDatosSueldosClientesCTS(sMovNro, sCuenta, Mid(sCuenta, 9, 1), rsSueldos!nSueldos / IIf(Mid(sCuenta, 9, 1) = "1", 1, lnTipoCambio))
            Set rsCta = clsMant.ObtenerCapSaldosCuentasCTS(sCuenta, CDbl(lnTipoCambio))
            nExcedente = rsCta!TotalSaldos - rsCta!TotalSueldos
            If nExcedente > 0 Then
                nSaldoRetiro = nExcedente * nPorcDisp / 100
            Else
                nSaldoRetiro = 0
            End If
            clsMant.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, 0
        End If
        'APRI20200512 POR COVID-19
        Dim nDU01 As Double
        Set rsCta = dlsMant.GetDatosCuentaCTS(sCuenta)
        nDU01 = rsCta("nDU01New")
        rsCta.Close
        Set rsCta = Nothing
        clsMant.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, 0, nDU01
        'END APRI
    End If
    'END JUEZ **************************************************************************

    If Mid(sCuenta, 6, 3) = "233" Or Mid(sCuenta, 6, 3) = "234" Then
        Dim cAlcance As String
        Dim osorteo As COMDCaptaGenerales.DCOMSorteo, rsDatos As ADODB.Recordset
        Dim gsMontoxCuponS As Double, gsMontoxCuponD As Double, gsMinPlazoOtorgado As Long, gsLimMaxOtorgadoS As Double, gsLimMaxOtorgadoD As Double, gsProcesaSorteo As Boolean
  
        Set osorteo = New COMDCaptaGenerales.DCOMSorteo
        Set rsDatos = New ADODB.Recordset
        Set rsDatos = osorteo.GetParametrosSorteo
        While Not rsDatos.EOF
            Select Case rsDatos!nparamcod
               Case 2001
                     gsMontoxCuponS = CDbl(rsDatos!cparamvalor)
               
               Case 2002
                    gsMontoxCuponD = CDbl(rsDatos!cparamvalor)
                    
               Case 2003
                    gsMinPlazoOtorgado = CLng(rsDatos!cparamvalor)
                    
               Case 2004
                    gsLimMaxOtorgadoS = CDbl(rsDatos!cparamvalor)
               
               Case 2005
                    gsLimMaxOtorgadoD = CDbl(rsDatos!cparamvalor)
                    
                Case 2008
                    gsProcesaSorteo = IIf(rsDatos!cparamvalor = 0, False, True)
                         
            
            End Select
            rsDatos.MoveNext
        Wend
  
      If gsProcesaSorteo = True Then
        cAlcance = ""
        If Mid(sCuenta, 4, 2) = "13" Or Mid(sCuenta, 4, 2) = "03" Or Mid(sCuenta, 4, 2) = "06" Then
          cAlcance = "13"
        ElseIf Mid(sCuenta, 4, 2) = "04" Or Mid(sCuenta, 4, 2) = "05" Then
          cAlcance = "04"
        ElseIf Mid(sCuenta, 4, 2) = "01" Or Mid(sCuenta, 4, 2) = "14" Then
          cAlcance = "01"
        ElseIf Mid(sCuenta, 4, 2) <> "13" And Mid(sCuenta, 4, 2) <> "03" And Mid(sCuenta, 4, 2) <> "06" And Mid(sCuenta, 4, 2) <> "04" And Mid(sCuenta, 4, 2) <> "05" And Mid(sCuenta, 4, 2) <> "01" And Mid(sCuenta, 4, 2) <> "14" Then
          cAlcance = Mid(sCuenta, 4, 2)
        End If
        
         Set rsDatos = New ADODB.Recordset
         Set rsDatos = osorteo.GetSorteo("I", cAlcance)
          
         If Not rsDatos.EOF Then
            If CInt(Right(rsDatos!CnumSorteo, 2)) = 1 Then
                 Call osorteo.ProcesarCtaSorteoPrimer(rsDatos!CnumSorteo, gsMontoxCuponS, gsMontoxCuponD, gsMinPlazoOtorgado, gsLimMaxOtorgadoS, gsLimMaxOtorgadoD, cAlcance, sMovNro, sCuenta)
            Else
                 Call osorteo.ProcesarCtaSorteoOtros(rsDatos!CnumSorteo, gsMontoxCuponS, gsMontoxCuponD, gsMinPlazoOtorgado, gsLimMaxOtorgadoS, gsLimMaxOtorgadoD, cAlcance, sMovNro, sCuenta)
            End If
         End If
                  
            If Mid(sCuenta, 4, 2) = "01" Or Mid(sCuenta, 4, 2) = "14" Then
                Set rsDatos = New ADODB.Recordset
                Set rsDatos = osorteo.GetSorteo("I", "00")
            
                If Not rsDatos.EOF Then
                    If CInt(Right(rsDatos!CnumSorteo, 2)) = 1 Then
                        Call osorteo.ProcesarCtaSorteoPrimer(rsDatos!CnumSorteo, gsMontoxCuponS, gsMontoxCuponD, gsMinPlazoOtorgado, gsLimMaxOtorgadoS, gsLimMaxOtorgadoD, "00", sMovNro, sCuenta)
                    Else
                        Call osorteo.ProcesarCtaSorteoOtros(rsDatos!CnumSorteo, gsMontoxCuponS, gsMontoxCuponD, gsMinPlazoOtorgado, gsLimMaxOtorgadoS, gsLimMaxOtorgadoD, "00", sMovNro, sCuenta)
                    End If
                End If
            End If
        End If
    End If

    CapAperturaCuenta = sCuenta
    Exit Function
ErrGraba:
    If bTrans Then clsMant.dbCmact.RollbackTrans
    Set clsMant = Nothing
    CapAperturaCuenta = ""
    Err.Raise Err.Number, "CapAperturaCuenta", Err.Description
End Function

Public Function CapAperturaCuentaLote(ByVal nProducto As Producto, ByVal nMoneda As Moneda, ByVal rsCuenta As ADODB.Recordset, _
                                ByVal nOperacion As CaptacOperacion, ByVal sGlosa As String, ByVal sMovNro As String, ByVal nTipoTasa As CaptacTipoTasa, _
                                Optional bCheque As Boolean = False, Optional sNroDoc As String = "", Optional sCodIF As String = "", _
                                Optional dFechaValorizacion As Date, Optional nPorcRetCTS As Double = 0, Optional sInstitucion As String = "", _
                                Optional sNomCmac As String = "", Optional sNomAge As String = "", Optional sLpt As String = "", _
                                Optional pbITFAplica As Boolean = True, Optional pnITFTipoExoneracion As Integer = 0, Optional pbITFAsumido As Boolean = False, Optional ByVal psITFOpeCod As String = "", _
                                Optional ByRef psCadImp As String, Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByRef rsNroCta As Variant, Optional ByRef psCadImpPlazo As String, _
                                Optional nTpoPrograma As Integer = -1, _
                                Optional ByVal pbChkEfectivoITF As Boolean = True, _
                                Optional ByRef psCroRetInt As String = "", _
                                Optional ByVal psCodInstConv As String, Optional ByRef psImpBoletaRes As String, Optional ByVal pnMonTotal As Currency, _
                                Optional ByVal pnTpoDoc As Integer = 47, Optional ByVal psIFTpo As String = "", Optional ByVal psIFCta As String = "", _
                                Optional ByVal pnMovNroTransfer As Long = -1, Optional ByVal pnMovNroRVD As Long = 0, Optional ByVal pnDetalle As Integer = 0, Optional psMovNroV As String = "", _
                                Optional ByVal pbImpTMU As Boolean = False)
                                'RIRO20140430 ERS017 Se agrego pnMovNroTransfer, pnMovNroRVD,pnDetalle

Dim ClsMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim clsMant As NCOMCaptaGenerales
Dim nErrNum As Integer
Dim nErrDesc As String, sCuenta As String, sCtaCodAbono As String
Dim bTrans As Boolean, bOrdPag As Boolean, bCtaAboInt As Boolean
Dim nMovNro As Long, nPlazo As Long, nFirmas As Long, nMovNroV As Long, nMontoAbo As Double
Dim nSaldo As Double, nTasa As Double
Dim nITF As Double

Dim nFormaRetiro As CaptacPFFormaRetiro
Dim nPersoneria As PersPersoneria
Dim nTipoCuenta As ProductoCuentaTipo
Dim sImpresion As String, sCodUser As String, sAgencia As String, sOperacion As String
Dim dFecSis As Date
Dim sCad As String, sNomTit As String, sPersLavDinero As String, sBoletaLavDinero As String
Dim clsImp As NCOMCaptaImpresion
Dim rsProdPers As New ADODB.Recordset
Dim lbImpRegFirma As Byte
Dim oGen As COMDConstSistema.DCOMGeneral
Dim nMontoLavDinero As Double, nTC As Double
Dim clsLav As NCOMCaptaDefinicion
Dim sPersCod As String, sNombre As String, sDocId As String, sDireccion As String
Dim rsPers As New ADODB.Recordset
Dim nTipoPag As Integer
Dim scadPlazo As String
Dim nMontoAper As Double

Dim nMontoMimimoDep As Double
Dim nPlazoMinimo As Integer

Dim oVarImpre As New COMFunciones.FCOMVarImpresion

'***Modificado por ELRO el 20111013, según Acta 252-2011/TI-D
Dim sCroRetInt As String
'***Fin Modificado por ELRO**********************************
Dim nCampanaCod As Integer 'JUEZ 20160420
'ande ERS021-2018
Dim aDetalleCamp() As String, cTextoDatos As String
Dim oCampanhaLN As New COMNCaptaGenerales.NCOMCaptaGenerales
'end ande
Dim nConsMant  As Currency 'APRI20190109 ERS077-2018
'Realiza la Validación para el Lavado de Dinero
sPersLavDinero = ""
sBoletaLavDinero = ""

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
sAgencia = Mid(sMovNro, 18, 2)

Set clsLav = New NCOMCaptaDefinicion
nMontoLavDinero = clsLav.GetCapParametro(gMonOpeLavDineroME)
Set clsLav = Nothing
Dim i As Integer
ReDim rsNroCta(rsCuenta.RecordCount)

i = 1
    
If nMoneda = gMonedaNacional Then
    Dim clsTC As COMDConstSistema.NCOMTipoCambio
    Set clsTC = New COMDConstSistema.NCOMTipoCambio
    nTC = clsTC.EmiteTipoCambio(dFecSis, TCFijoDia)
    Set clsTC = Nothing
Else
    nTC = 1
End If

Set oGen = New COMDConstSistema.DCOMGeneral

lbImpRegFirma = CInt(oGen.LeeConstSistema(100))
Set oGen = Nothing

bTrans = False
Set ClsMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
On Error GoTo ErrGraba


ClsMov.dbCmact.BeginTrans 'Inicializa la transacción
bTrans = True
    
'Agrega el movimiento
ClsMov.AgregaMov sMovNro, nOperacion, sGlosa
nMovNro = ClsMov.GetnMovNro(sMovNro)
If nOperacion = gCTSApeLoteEfec Or nOperacion = gCTSApeLoteChq Or nOperacion = gCTSApeLoteTransfNew Then
    ClsMov.AgregaMovParamCTS nMovNro, nPorcRetCTS
End If
ClsMov.dbCmact.CommitTrans 'Inicializa la transacción
bTrans = False


'Variables globales para las aperturas en lote
bCtaAboInt = False
nTipoCuenta = gPrdCtaTpoIndiv
sCtaCodAbono = ""
nFirmas = 1

Set clsMant = New NCOMCaptaGenerales
'If nOperacion = gAhoApeLoteChq Or nOperacion = gPFApeLoteChq Or nOperacion = gCTSApeLoteChq Then
'    ClsMov.AgregaMovDoc nMovNro, TpoDocCheque, sNroDoc, dFecSis
If nOperacion = gAhoApeLoteChq Or nOperacion = gPFApeLoteChq Or nOperacion = gCTSApeLoteChq Then
    ClsMov.AgregaMovDoc nMovNro, pnTpoDoc, sNroDoc, dFecSis
    ClsMov.AgregaMovDocRec nMovNro, pnTpoDoc, sNroDoc, sCodIF, psIFTpo, psIFCta
    sOperacion = "APERTURA LOTE CHEQUE"
ElseIf nOperacion = gCTSApeLoteTransfNew Or nOperacion = gPFApeLoteTransf Then
    sOperacion = "APERTURA LOTE VOUCHER" 'CTI7 ERS0032020****************
Else
    sOperacion = "APERTURA LOTE EFECTIVO"
End If
ReDim Preserve aDetalleCamp(rsCuenta.RecordCount)  'ande ers021-2018

Do While Not rsCuenta.EOF
    ClsMov.dbCmact.BeginTrans
    bTrans = True
    nSaldo = CDbl(rsCuenta("Monto"))
    
    nMontoMimimoDep = 0
    nPlazoMinimo = 0
    
    'nPlazoMinimo = IIf(Trim(rsCuenta(12)) = "", 0, rsCuenta(12))
    'nMontoMimimoDep = IIf(Trim(rsCuenta(13)) = "", 0, rsCuenta(13))
    
    If IsNumeric(rsCuenta("ITF")) Then
        nITF = CDbl(rsCuenta("ITF"))
    Else
        nITF = 0
    End If
    nPersoneria = CInt(rsCuenta("cPersoneria"))
    nTasa = CDbl(rsCuenta("nTasaNominal"))
    
    nPlazo = 0
    bOrdPag = False
    If nProducto = gCapPlazoFijo Then
        nPlazo = rsCuenta("Plazo")
        nFormaRetiro = CLng(Right(rsCuenta("Forma Retiro"), 4))
    ElseIf nProducto = gCapAhorros Then
        bOrdPag = IIf(rsCuenta("OP") = "1", True, False)
    End If
    nCampanaCod = rsCuenta("nCampanaCod") 'JUEZ 20160420
    
    If pbITFAplica And nITF > 0 Then
        If nOperacion = gAhoApeLoteChq Or nOperacion = gPFApeLoteChq Or pbITFAsumido Then
            '***Modificado por ELRO el 20121129, según OYP-RFC101-2012
            'sCuenta = clsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo, dFecSis, nFirmas, nPersoneria, _
            '    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo)
            If nProducto = gCapCTS Then
                sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo), dFecSis, nFirmas, nPersoneria, _
                          nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , IIf(psITFOpeCod = gITFCobroCargo, nITF, 0), CInt(rsCuenta("nTpoProgramaCTS")), nMontoMimimoDep, nPlazoMinimo, , , , "A", , nCampanaCod, IIf(psITFOpeCod = gITFCobroCargo, 1, 0)) 'RIRO 20141002, Se agregó regla
            Else
                sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo), dFecSis, nFirmas, nPersoneria, _
                nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , IIf(psITFOpeCod = gITFCobroCargo, nITF, 0), nTpoPrograma, nMontoMimimoDep, nPlazoMinimo, , , , "A", , nCampanaCod, IIf(psITFOpeCod = gITFCobroCargo, nITF, 0)) 'RIRO 20141002, Se agregó regla
            End If
            '***Fin Modificado por ELRO el 20121129*******************
        Else
            If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                '***Modificado por ELRO el 20121129, según OYP-RFC101-2012****
                'sCuenta = clsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo, dFecSis, nFirmas, nPersoneria, _
                '    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo)
                If nProducto = gCapCTS Then
                    sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo), dFecSis, nFirmas, nPersoneria, _
                    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , CInt(rsCuenta("nTpoProgramaCTS")), nMontoMimimoDep, nPlazoMinimo, , , , "A", , nCampanaCod)
                Else
                    sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo), dFecSis, nFirmas, nPersoneria, _
                    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo, , , , "A", , nCampanaCod)
                End If
                '***Fin Modificado por ELRO el 20121129***********************
            Else
                '***Modificado por ELRO el 20121129, según OYP-RFC101-2012****
                'sCuenta = clsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo - nITF, dFecSis, nFirmas, nPersoneria, _
                '    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo)
                If nProducto = gCapCTS Then
                    sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo), dFecSis, nFirmas, nPersoneria, _
                              nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , CInt(rsCuenta("nTpoProgramaCTS")), nMontoMimimoDep, nPlazoMinimo, , , , "A", , nCampanaCod)
                Else
                    sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo), dFecSis, nFirmas, nPersoneria, _
                    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo, , , , "A", , nCampanaCod)
                End If
                '***Fin Modificado por ELRO el 20121129***********************
            End If
        End If
    Else
        '***Modificado por ELRO el 20121129, según OYP-RFC101-2012
        'sCuenta = clsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo, dFecSis, nFirmas, nPersoneria, _
        '    nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo, , psCodInstConv)
        If nProducto = gCapCTS Then
            sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo, dFecSis, nFirmas, nPersoneria, _
            nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , CInt(rsCuenta("nTpoProgramaCTS")), nMontoMimimoDep, nPlazoMinimo, , psCodInstConv, , "A", , nCampanaCod)
        Else
            sCuenta = ClsMov.AgregaNuevaCaptacion(nProducto, nMoneda, Mid(sMovNro, 15, 3) & sAgencia, nTasa, nSaldo, dFecSis, nFirmas, nPersoneria, _
            nTipoCuenta, sMovNro, nTipoTasa, bCheque, bOrdPag, nPlazo, nFormaRetiro, bCtaAboInt, sCtaCodAbono, nPorcRetCTS, sInstitucion, , , , , , nTpoPrograma, nMontoMimimoDep, nPlazoMinimo, , psCodInstConv, , "A", , nCampanaCod)
        End If
        '***Modificado por ELRO el 20121129***********************
    End If
    
    rsCuenta("Cuenta") = sCuenta
    rsNroCta(i) = sCuenta
    rsCuenta.Update
    
    'ANDE 20170109 IMPLEMENTACIÓN CAMPAÑA DE AHORRO
    Dim nOpeTipo As Integer, nPuntosRef As Integer, nCondicion As Integer, nPTotalAcumulado As Integer, bParticipaCamp As Boolean ', oCampanhaLN As COMDCaptaGenerales.DCOMCaptaGenerales
    Set oCampanhaLN = New COMNCaptaGenerales.NCOMCaptaGenerales
    If _
        nOperacion = gAhoApeLoteEfec Or nOperacion = gAhoApeLoteTransfBanco _
    Then
        nOpeTipo = 1 '1:APERTURA
        nMoneda = Mid(sCuenta, 9, 1)
        If nMoneda = gMonedaNacional Then
            If nOperacion = gAhoApeLoteEfec Or nOperacion = gAhoApeLoteTransfBanco Then
                Call oCampanhaLN.VerificarParticipacionCampMundial(rsCuenta(0), sCuenta, nOperacion, nOpeTipo, nMoneda, nSaldo, nPersoneria, bParticipaCamp, sMovNro, , dFecSis, nTpoPrograma, sAgencia, nPuntosRef, nCondicion, rsCuenta(1), nPTotalAcumulado)
            End If
            cTextoDatos = "#" & IIf(bParticipaCamp, "1", "0") & "." & CStr(nPuntosRef) & "$" & CStr(nCondicion) & "_" & CStr(nPTotalAcumulado) & "&"
        End If
    End If
    aDetalleCamp(i) = cTextoDatos
    'end ande
    
    Select Case nOperacion
        Case gAhoApeLoteChq, gPFApeLoteChq, gCTSApeLoteChq
            ClsMov.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, 0, nSaldo
            ClsMov.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo
            'EJVG20140408 ***
            'clsMov.AgregaDocRecCapta sCuenta, TpoDocCheque, sNroDoc, sCodIF, nMovNro, nSaldo
            ClsMov.AgregaDocRecCapta sCuenta, pnTpoDoc, sNroDoc, sCodIF, nMovNro, nSaldo, psIFTpo, psIFCta
            'ClsMov.AgregaMovDocRec nMovNro, pnTpoDoc, sNroDoc, sCodIF, psIFTpo, psIFCta
            'END EJVG *******
        
            If pbITFAplica And nITF > 0 Then
                If pnITFTipoExoneracion = 0 Then
                   If pbITFAsumido Then
                      ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo, nSaldo
                      ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFAsumido, nITF
                   Else
                      If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                         ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo, nSaldo
                         ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, nITF
                      Else
                         ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo - nITF, nSaldo - nITF
                         ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, nITF
                      End If
                   End If
                End If
            End If
        'RIRO20140430 ERS017 ****
        Case gAhoApeLoteTransfBanco, gCTSApeLoteTransfNew, gPFApeLoteTransf '
            ClsMov.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, nSaldo, nSaldo
            If pnMovNroTransfer <> -1 Then
                ClsMov.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcPenTran, nSaldo
            Else
                ClsMov.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo
            End If
            If pbITFAplica And nITF > 0 Then
                If pnITFTipoExoneracion = 0 Then
                    If pbITFAsumido Then
                        ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo, nSaldo
                        ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFAsumido, nITF
                    Else
                        If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                            ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo, nSaldo
                            ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, nITF
                        Else
                            ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo - nITF, nSaldo - nITF
                            ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, nITF
                        End If
                    End If
                End If
            End If
        'END RIRO ***************
        Case Else
            ClsMov.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldo, nSaldo, nSaldo
            ClsMov.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldo
    
            If pbITFAplica And nITF > 0 Then
                If pnITFTipoExoneracion = 0 Then
                   If pbITFAsumido Then
                      ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo, nSaldo
                      ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFAsumido, nITF
                   Else
                      If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
                         nTipoPag = 1
                         ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo, nSaldo
                         ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, nITF
                      Else
                         nTipoPag = 2
                         ClsMov.AgregaMovCap nMovNro, psITFOpeCod, sCuenta, nITF, nSaldo - nITF, nSaldo - nITF
                         ClsMov.AgregaMovCapDet nMovNro, psITFOpeCod, sCuenta, gConcITFCliente, nITF
                      End If
                   End If
                End If
            End If
    End Select
    
    If pbITFAplica Then
        If pnITFTipoExoneracion <> 0 Then
            ClsMov.AgregaCtaExoneradaITF sCuenta, pnITFTipoExoneracion, sMovNro
        End If
    End If
    
    ClsMov.AgregaNuevoProdPers sCuenta, rsCuenta("Código"), gCapRelPersTitular, "S", "A" 'RIRO20140530 ERS017
    
    'By Capi 20012008 se comento porque el cambio realizado ya que en este caso puede existir mas de un beneficiario
    
'    If nSaldo >= Round(nMontoLavDinero * nTC, 2) Then
'        sPersLavDinero = rsCuenta("Código")
'        clsMov.AgregaMovLavDinero nMovNro, sPersLavDinero
'
'        Set rsPers = clsMant.GetDatosPersona(sPersLavDinero)
'        sDireccion = rsPers("Direccion")
'        sDocId = rsPers("ID N°")
'        sNombre = rsCuenta("Nombre")
'        rsPers.Close
'        Set rsPers = Nothing
'        Set clsImp = New NCOMCaptaImpresion
'        If sBoletaLavDinero <> "" Then sBoletaLavDinero = sBoletaLavDinero & oImp.gPrnSaltoPagina
'        sBoletaLavDinero = sBoletaLavDinero & clsImp.ImprimeBoletaLavadoDinero(sNomCmac, sNomAge, dFecSis, sCuenta, sNombre, sDocId, sDireccion, _
'                    sNombre, sDocId, sDireccion, sNombre, sDocId, sDireccion, sOperacion, nSaldo, sLpt, , True, "INDIVIDUAL")
'        Set clsImp = Nothing
'    End If
    
    'RIRO20140620 ERS017 *****************************
    If nOperacion = gAhoApeLoteTransfBanco Or nOperacion = gCTSApeLoteTransfNew Or nOperacion = gPFApeLoteTransf Then
        If i = 1 Then
            If rsCuenta.RecordCount <> i Then ' cuando solo hay un registro
                If nOperacion = gCTSApeLoteTransfNew Then
                    nMovNroV = ClsMov.registrarVoucherErr(psMovNroV, 23, pnMovNroRVD, pnMovNroTransfer, pnDetalle - 1, nSaldo)
                ElseIf nOperacion = gPFApeLoteTransf Then
                    nMovNroV = ClsMov.registrarVoucherErr(psMovNroV, 24, pnMovNroRVD, pnMovNroTransfer, pnDetalle - 1, nSaldo)
                Else
                    nMovNroV = ClsMov.registrarVoucherErr(psMovNroV, 8, pnMovNroRVD, pnMovNroTransfer, pnDetalle - 1, nSaldo)
                End If
            End If
            ClsMov.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
            If pnMovNroTransfer <> -1 Then
                 ClsMov.AgregaMovRef nMovNro, pnMovNroTransfer
                 ClsMov.ActualizaMovPendientesRend pnMovNroTransfer, nMontoAbo
            End If
        Else
            If rsCuenta.RecordCount = i Then
                If pnMovNroTransfer <> -1 Then
                    ClsMov.ActualizaMovPendientesRend pnMovNroTransfer, nMontoAbo
                End If
                ClsMov.ActualizarVoucherErr pnMovNroRVD, nMovNroV, nMontoAbo
                ClsMov.EliminarVoucherErr pnMovNroRVD, nMovNroV, nMovNro, pnDetalle, pnMonTotal
            Else
                ClsMov.ActualizarVoucherErr pnMovNroRVD, nMovNroV, nMontoAbo
                If pnMovNroTransfer <> -1 Then
                    ClsMov.ActualizaMovPendientesRend pnMovNroTransfer, nMontoAbo
                End If
            End If
        End If
    End If
    'END RIRO ****************************************
    
    ClsMov.dbCmact.CommitTrans
    bTrans = False
    rsCuenta.MoveNext
    i = i + 1
Loop

Set ClsMov = Nothing
sCad = ""

'Imprime registro de firmas
rsCuenta.MoveFirst
Do While Not rsCuenta.EOF
    bOrdPag = False
    If nProducto = gCapAhorros Then
        bOrdPag = IIf(rsCuenta("OP") = "1", True, False)
    End If
    'If sCad <> "" Then sCad = sCad & oImp.gPrnSaltoPagina
    'Creamos el recordset para el registro de firmas
    Set rsProdPers = New ADODB.Recordset
    rsProdPers.Fields.Append "Codigo", adVarChar, 13
    rsProdPers.Fields.Append "Relacion", adVarChar, 30
    rsProdPers.Fields.Append "Grupo", adVarChar, 10 'FRHU 20140927 ERS099-2014
    rsProdPers.Open
    rsProdPers.AddNew
    rsProdPers("Codigo") = rsCuenta("Código")
    'ALPA 20100108************************************
    '***Modificado por ELRO el 20110913, según Acta 245-2011/TI-D
    'rsProdPers("Relacion") = "TITULAR   20"    ' comentado por ELRO el 20110913
    rsProdPers("Relacion") = "TITULAR   10"
    '***Fin Modificado por ELRO**********************************
    'rsProdPers("Relacion") = "TITULAR"
    '*************************************************
    rsProdPers("Grupo") = "A" 'FRHU 20140927 ERS099-2014
    rsProdPers.Update
    
    'FRHU 20140926 ERS099-2014: SE REEMPLAZO REGISTRO DE FIRMAS POR SOLICITUD DE APERTURA
'    If lbImpRegFirma = 1 Then
'        '***Modificado por ELRO el 20121129, según OYP-RFC101-2012
'        'sCad = sCad & clsMant.GeneraRegistroFirmas(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), nTpoPrograma) & Chr(10)
'        If nProducto = gCapCTS Then
'            sCad = sCad & clsMant.GeneraRegistroFirmas(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), rsCuenta("nTpoProgramaCTS")) & Chr(10)
'        Else
'            sCad = sCad & clsMant.GeneraRegistroFirmas(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), nTpoPrograma) & Chr(10)
'        End If
'        '***Fin Modificado por ELRO el 20121129*******************
'    End If
     'APRI20190109 ERS077-2018
    Set clsLav = New NCOMCaptaDefinicion
    nConsMant = clsLav.GetCapCostoMantenimiento(nProducto, nTpoPrograma, nMoneda, rsCuenta("Monto"))
    Set clsLav = Nothing
    'END APRI
    If nPersoneria <> 1 Then
        If nProducto = gCapCTS Then
            sCad = sCad & clsMant.GeneraSolicitudAperturaPersJuridica(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), rsCuenta("nTpoProgramaCTS"), , "") & Chr(10)
        Else
            'sCad = sCad & clsMant.GeneraSolicitudAperturaPersJuridica(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), nTpoPrograma, , "") & Chr(10)
            sCad = sCad & clsMant.GeneraSolicitudAperturaPersJuridica(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), nTpoPrograma, nConsMant, "") & Chr(10) 'APRI20190109 ERS077-2018
        End If
    Else
        If nProducto = gCapCTS Then
            sCad = sCad & clsMant.GeneraSolicitudAperturaPersNatural(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), rsCuenta("nTpoProgramaCTS"), , "A") & Chr(10)
        Else
            'sCad = sCad & clsMant.GeneraSolicitudAperturaPersNatural(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), nTpoPrograma, , "A") & Chr(10)
            sCad = sCad & clsMant.GeneraSolicitudAperturaPersNatural(rsCuenta("Cuenta"), "INDIVIDUAL", dFecSis, bOrdPag, rsProdPers, sNomAge, dFecSis, Trim(Right(sMovNro, 4)), nTpoPrograma, nConsMant, "A") & Chr(10) 'APRI20190109 ERS077-2018
        End If
    End If
    'FIN FRHU 20140926
    
    '***Modificado por ELRO el 20110915, según Acta 252-2011/TI-D
    'Imprime cronograma de retiro de pagos
    If Trim(Right(rsCuenta("Forma Retiro"), 4)) = "1" Then
      
        sCroRetInt = sCroRetInt & EmiteCalendarioRetiroIntPFMensual(IIf(pbChkEfectivoITF = True, CDbl(rsCuenta("Monto")), CDbl(rsCuenta("Monto")) - CDbl(rsCuenta("ITF"))), CDbl(rsCuenta("nTasaNominal")), CInt(rsCuenta("Plazo")), dFecSis, nMoneda, 0, rsCuenta("Cuenta"))
           
    End If
    '***Fin Modificado por ELRO**********************************
   
    'Imprime Certificado de plazos fijos
    If nProducto = gCapPlazoFijo Then
        Dim sDirCli As String
        Dim sFormaRetiro As String
        Dim sLetras As String
        '***Modificado por ELRO en la fecha 20110914, según Acta 245-2011/TI-D
        Dim sTipoCuenta As String
         '***Fin Modificado por ELRO******************************************
        
        Dim clsBol As NCOMCaptaImpresion
        Dim oFun As New COMFunciones.FCOMCadenas
        Dim oImpre As New COMFunciones.FCOMImpresion
       
        nSaldo = CDbl(rsCuenta("Monto"))
        nMontoAper = nSaldo
        nTasa = CDbl(rsCuenta("nTasaNominal"))
        nPlazo = rsCuenta("Plazo")
        nFormaRetiro = CLng(Right(rsCuenta("Forma Retiro"), 4))
        sNomTit = clsMant.GetNombreTitulares(rsCuenta("Cuenta"))
        Set rsPers = clsMant.GetDatosPersona(rsCuenta("Código"))
        sDirCli = Trim(rsPers("Direccion")) & ""
         '***Modificado por ELRO en la fecha 20110913, según Acta 245-2011/TI-D
        'sLetras = oFun.ConversNL(nMoneda, nSaldo)  ' comentado por ELRO el 20110913
        sLetras = oFun.ConversNL(nMoneda, IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - CDbl(rsCuenta("ITF"))))
        '***Fin Modificado por ELRO********************************************
        sFormaRetiro = Trim(Left(rsCuenta("Forma Retiro"), 25))
        'If scad <> "" Then scad = scad & oImp.gPrnSaltopagina
        Set clsImp = New NCOMCaptaImpresion
        
            
        '***Modificado por ELRO en la fecha 20110913, según Acta 245-2011/TI-D
        'scadPlazo = scadPlazo & clsImp.ImprimeCertificadoPlazoFijo(dFecSis, sNomTit, sDirCli,
        '            rsCuenta("Cuenta"), "1", nPlazo, nSaldo, nTasa, sFormaRetiro, sLetras, , True, ,
        '            rsProdPers, sNomCmac)  'comentado por ELRO el 20110913
        scadPlazo = scadPlazo & clsImp.ImprimeCertificadoPlazoFijo(dFecSis, sNomTit, sDirCli, _
                    rsCuenta("Cuenta"), "1", nPlazo, IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - CDbl(rsCuenta("ITF"))), _
                    nTasa, sFormaRetiro, sLetras, , True, sTipoCuenta, rsProdPers, sNomCmac, sFormaRetiro)
        '***Fin Modificado por ELRO*******************************************
    
        Set oFun = Nothing
        Set oImpre = Nothing
    End If
    Set rsProdPers = Nothing
    rsCuenta.MoveNext
    
Loop

Set clsImp = New NCOMCaptaImpresion
psCadImp = sCad
'***Modificado por ELRO el 20111013, según Acta 252-2011/TI-D
psCroRetInt = sCroRetInt
'***Fin Modificado por ELRO**********************************

'Dim oPrevio As Previo.clsPrevio
'Set oPrevio = New Previo.clsPrevio
'Call oPrevio.Show(sCad, "APERTURA EN LOTE", False)
'oPrevio.PrintSpool sLpt, sCad, False
    
'Imprime las boletas
Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
'''sTipDep = IIf(nMoneda = gMonedaNacional, "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(nMoneda = gMonedaNacional, StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
If bCheque Then
    sModDep = "Depósito Cheque"
Else
    If nOperacion = gCTSApeLoteTransfNew Or nOperacion = gPFApeLoteTransf Then
        sModDep = "Depósito Voucher"
    Else
        sModDep = "Depósito Efectivo"
    End If
End If
Select Case nProducto
    Case gCapAhorros
        sTipApe = "APERTURA AHORROS"
    Case gCapPlazoFijo
        sTipApe = "APERTURA PLAZO FIJO"
    Case gCapCTS
        sTipApe = "APERTURA CTS"
End Select

'Do

sCad = Chr$(27) & Chr$(77)
rsCuenta.MoveFirst
Dim lnSaldo As Double, lnsaldisp As Double

'Boleta de Resumen GITU 2012-11-05
If nOperacion = gAhoApeLoteEfec Then
    bOrdPag = False
    If nProducto = gCapAhorros Then
        bOrdPag = IIf(rsCuenta("OP") = "1", True, False)
    End If
    If bOrdPag Then sTipApe = "APERTURA AHORROS CON OP"
    sNomTit = "VARIOS" 'clsMant.GetNombreTitulares(rsCuenta("Cuenta"))
    nSaldo = 0
'    If IsNumeric(rsCuenta("ITF")) Then
'        nITF = CDbl(rsCuenta("ITF"))
'    Else
        nITF = 0
'    End If
   
'    If nOperacion = gAhoApeLoteEfec Or nOperacion = gAhoApeLoteChq Then
'        If nTipoPag = 2 Then
'            nMontoAper = nSaldo
'            nSaldo = nSaldo - nITF
'        Else
'            nMontoAper = nSaldo
'        End If
'    ElseIf nOperacion = gCTSApeLoteEfec Or nOperacion = gCTSApeLoteChq Then
'        nMontoAper = nSaldo
'    End If
    
'    If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
'       nTipoPag = 1
'    Else
'       nTipoPag = 2
'    End If
    sTipApe = "APERTURA DE AHORROS EN LOTE"
    If bCheque Then
        psImpBoletaRes = psImpBoletaRes & ImprimeBoletaRes(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, Trim(nOperacion), Trim(pnMonTotal), sNomTit, rsCuenta.RecordCount, Format$(dFechaValorizacion, "dd/mm/yyyy"), nSaldo, 0, "Fecha Valor", 1, nSaldo, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF, True) & oImp.gPrnSaltoLinea
        lnsaldisp = 0
        lnSaldo = 0
    Else
        psImpBoletaRes = psImpBoletaRes & ImprimeBoletaRes(sTipApe, oImpre.ImpreCarEsp(sModDep), Trim(nOperacion), _
        pnMonTotal, sNomTit, CStr(rsCuenta.RecordCount), "", _
        IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF), 0, "", 1, _
        IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF), , , , , , , , , , _
        dFecSis, Trim(sNomAge), sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF, _
        True, , , , , , , , , , , , , , nMovNro) & oImp.gPrnSaltoLinea
        lnsaldisp = IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF)
        lnSaldo = IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF)
        '***Fin Modificado por ELRO******************************************
    End If
End If
'End GITU
'***Agregado por ELRO el 20121130, según OYP-RFC101-2012
'Boleta de Resumen
If nProducto = gCapCTS Then
    sNomTit = "VARIOS"
    nSaldo = 0
    nITF = 0
    sTipApe = "APERTURA DE CTS EN LOTE"
    If bCheque Then
        psImpBoletaRes = psImpBoletaRes & ImprimeBoletaRes(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, Trim(nOperacion), Trim(pnMonTotal), sNomTit, rsCuenta.RecordCount, Format$(dFechaValorizacion, "dd/mm/yyyy"), nSaldo, 0, "Fecha Valor", 1, nSaldo, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF, True) & oImp.gPrnSaltoLinea
        lnsaldisp = 0
        lnSaldo = 0
    Else
        psImpBoletaRes = psImpBoletaRes & ImprimeBoletaRes(sTipApe, oImpre.ImpreCarEsp(sModDep), Trim(nOperacion), _
        pnMonTotal, sNomTit, CStr(rsCuenta.RecordCount), "", _
        IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF), 0, "", 1, _
        IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF), , , , , , , , , , _
        dFecSis, Trim(sNomAge), sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF, _
        True, , , , , , , , , , , , , , nMovNro) & oImp.gPrnSaltoLinea
        lnsaldisp = IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF)
        lnSaldo = IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF)
        '***Fin Modificado por ELRO******************************************
    End If
End If
'***Fin Agregado por ELRO el 20121130*******************
i = 1 'ande ers021-2018 20180430
Do While Not rsCuenta.EOF
    'ande ers021-2018 20180430
    cTextoDatos = ""
    cTextoDatos = aDetalleCamp(i)
    'end ande

    bOrdPag = False
    If nProducto = gCapAhorros Then
        bOrdPag = IIf(rsCuenta("OP") = "1", True, False)
    End If
    If bOrdPag Then sTipApe = "APERTURA AHORROS CON OP"
    sNomTit = clsMant.GetNombreTitulares(rsCuenta("Cuenta"))
    nSaldo = CDbl(rsCuenta("Monto"))
    If IsNumeric(rsCuenta("ITF")) Then
        nITF = CDbl(rsCuenta("ITF"))
    Else
        nITF = 0
    End If
   
    If nOperacion = gAhoApeLoteEfec Or nOperacion = gAhoApeLoteChq Then
'        If nTipoPag = 2 Then
'            nMontoAper = nSaldo
'            nSaldo = nSaldo - nITF
'        Else
'            nMontoAper = nSaldo
'        End If
        nSaldo = IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo)
        nMontoAper = nSaldo
    ElseIf nOperacion = gCTSApeLoteEfec Or nOperacion = gCTSApeLoteChq Then
        nSaldo = IIf(psITFOpeCod = gITFCobroCargo, nSaldo - nITF, nSaldo)
        nMontoAper = nSaldo
    End If
    
    If psITFOpeCod = gITFCobroEfectivo Or psITFOpeCod = gITFCobroEfectivoAsumidoPF Then
       nTipoPag = 1
    Else
       nTipoPag = 2
    End If
    
    If bCheque Then
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, Trim(nOperacion), Trim(nSaldo), sNomTit, rsCuenta("Cuenta"), Format$(dFechaValorizacion, "dd/mm/yyyy"), nSaldo, 0, "Fecha Valor", 1, nSaldo, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF, True, , , pbImpTMU) & oImp.gPrnSaltoLinea
        lnsaldisp = 0
        lnSaldo = nSaldo
    Else
     '***Modificado por ELRO en la fech 20110913, según Acta 245-2011/TI-D
        'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), Trim(sCodOpe),
        'Format$(nMontoAper), sNomTit, rsCuenta("Cuenta"), "", nSaldo, 0, "", 1, nSaldo, , , , , , , , , ,
        'dFecSis, Trim(sNomAge), sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF,
        'True) & oImp.gPrnSaltoLinea  'comentado por ELRO el 20110913
        'lnsaldisp = nSaldo 'comentado por ELRO el 20110913
        'lnSaldo = nSaldo   'comentado por ELRO el 20110913
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), Trim(nOperacion), _
        rsCuenta("Monto"), sNomTit, rsCuenta("Cuenta"), "", _
        IIf(pbChkEfectivoITF = True, nSaldo, nSaldo), 0, "", 1, _
        IIf(pbChkEfectivoITF = True, nSaldo, nSaldo), , , , , , , , , cTextoDatos, _
        dFecSis, Trim(sNomAge), sCodUser, sLpt, False, , , , True, , , , , , , , , True, nTipoPag, nITF, _
        True, , , pbImpTMU) & oImp.gPrnSaltoLinea
        lnsaldisp = IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF)
        lnSaldo = IIf(pbChkEfectivoITF = True, nSaldo, nSaldo - nITF)
        '***Fin Modificado por ELRO******************************************
    End If
    
psCadImpPlazo = scadPlazo
' COMENTADO TEMPORALMENTE
'    If pbITFAplica And nITF > 0 Then
'       ' sCad = sCad & oImp.gPrnSaltopagina
'        If pbITFAsumido Then
'            If psITFOpeCod = gITFCobroEfectivo Then
''                 sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA",  False, sNomAge, sCodUser)
'                 'sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser) & oImp.gPrnSaltopagina
'                 ' fgITFImprimeBoleta sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , , Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, psITFOpeCod
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , , Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, psITFOpeCod)
'            Else
''                 sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'                 'sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser) & oImp.gPrnSaltopagina
'                  'fgITFImprimeBoleta(sNomTit, nITF, sGlosa, dFecSis, sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, CStr(nOperacion))
'                  psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITF, sGlosa, dFecSis, sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, CStr(nOperacion))
'            End If
'        Else
'            If psITFOpeCod = gITFCobroEfectivo Then
''                sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'                'sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser) & oImp.gPrnSaltopagina
'                'fgITFImprimeBoleta(sNomTit, nITF, sGlosa, dFecSis, sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR EL CLIENTE", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, CStr(nOperacion))
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITF, sGlosa, dFecSis, sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR EL CLIENTE", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, CStr(nOperacion))
'            Else
''                sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'                'sCad = sCad & fgITFImprimeBoletaCadena(sNomTit, nITF, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser) & oImp.gPrnSaltopagina
'                'fgITFImprimeBoleta(sNomTit, nITF, sGlosa, dFecSis, sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR EL CLIENTE", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, CStr(nOperacion))
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITF, sGlosa, dFecSis, sLpt, 1, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR EL CLIENTE", False, sNomAge, sCodUser, True, lnsaldisp, lnSaldo, CStr(nOperacion))
'            End If
'        End If
'    End If
    i = i + 1 'ers021-2018 20180430
    rsCuenta.MoveNext
Loop

'Loop Until MsgBox("Desea reimprimir boletas", vbYesNo + vbQuestion, "AVISO") = vbNo

'If sBoletaLavDinero <> "" Then sCad = sCad & oImp.gPrnSaltopagina & sBoletaLavDinero
'clsPrev.Show sCad, "APERTURA EN LOTE", False

Set clsImp = Nothing
Set clsMant = Nothing
Exit Function

ErrGraba:
    If bTrans Then ClsMov.dbCmact.RollbackTrans
    Set ClsMov = Nothing
    'err.raise err.number,"Error",err.description
    Err.Raise Err.Number, "Error", Err.Description
End Function
'***Modificado por ELRO el 20120307, según Acta 039-2012/TI
'Public Function ValidaCuentaOperacion(ByVal sCuenta As String, Optional bAbono As Boolean = False,
'            Optional bGarantia As Boolean = False) As String
Public Function ValidaCuentaOperacion(ByVal sCuenta As String, _
                                      Optional bAbono As Boolean = False, _
                                      Optional bGarantia As Boolean = False, _
                                      Optional ByVal pnOpeCod As Long = -1) As String
'***Fin Modificado por ELRO********************************
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim nEstado As CaptacEstado
    Dim rsBlq As New ADODB.Recordset
    Dim sCad As String
    Dim bPrimero As Boolean
    '***Agregado por ELRO el 20120307, según Acta 039-2012/TI
    Dim lnTipoPrograma As Integer
    '***Fin Agregado por ELRO********************************
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    nEstado = clsCap.GetEstadoCuenta(sCuenta)
    '***Agregado por ELRO el 20120307, según Acta 039-2012/TI
    lnTipoPrograma = clsCap.GetTipoProgramaCaptacion(sCuenta)
    '***Fin Agregado por ELRO********************************
    If nEstado < 0 Then
        ValidaCuentaOperacion = "Cuenta No Existe"
    Else
        Select Case nEstado
    
            Case gCapEstAnulada, gCapEstCancelada
                ValidaCuentaOperacion = "Cuenta CANCELADA O ANULADA"
            Case gCapEstBloqTotal, gCapEstBloqRetiro
                sCad = ""
                Set rsBlq = clsCap.GetCuentaBloqueos(sCuenta, gCapTpoBlqRetiro)
                If Not bAbono Then
                    If Not (rsBlq.EOF And rsBlq.BOF) Then
                        bPrimero = True
                        Do While Not rsBlq.EOF
                            '***Modificado por ELRO el 20120307, según Acta 039-2012/TI
                            'If Not (rsBlq("nBlqMotivo") = gCapMotBlqRetGarantia And bGarantia) Then
                                'If bPrimero Then
                                    'sCad = "BLOQUEO PARA RETIRO: " & Chr$(13)
                                    'bPrimero = False
                                'End If
                                'sCad = sCad & "- " & Trim(rsBlq("Motivo")) & Chr$(13)
                            'End If
                            If (lnTipoPrograma = 1 Or lnTipoPrograma = 2 Or lnTipoPrograma = 3) And _
                                rsBlq("nBlqMotivo") = gCapMotBlqRetGarantia And (pnOpeCod = 210801 Or pnOpeCod = 210802 Or pnOpeCod = 210803 Or pnOpeCod = 210804 Or pnOpeCod = 210807 Or pnOpeCod = 210808) Then 'EJVG20130920
                               'rsBlq("nBlqMotivo") = gCapMotBlqRetGarantia And pnOpeCod = 210801 Then
                                ValidaCuentaOperacion = ""
                            Else
                                If Not (rsBlq("nBlqMotivo") = gCapMotBlqRetGarantia And bGarantia) Then
                                    If bPrimero Then
                                        sCad = "BLOQUEO PARA RETIRO: " & Chr$(13)
                                        bPrimero = False
                                    End If
                                    sCad = sCad & "- " & Trim(rsBlq("Motivo")) & Chr$(13)
                                End If
                            End If
                            '***Modificado por ELRO************************************
                            rsBlq.MoveNext
                        Loop
                    End If
                End If
                Set rsBlq = clsCap.GetCuentaBloqueos(sCuenta, gCapTpoBlqTotal)
                If Not (rsBlq.EOF And rsBlq.BOF) Then
                    bPrimero = True
                    Do While Not rsBlq.EOF
                        If Not (rsBlq("nBlqMotivo") = gCapMotBlqTotGarantia And bGarantia) Then
                            If bPrimero = True Then
                                sCad = sCad & "BLOQUEO TOTAL: " & Chr$(13)
                                bPrimero = False
                            End If
                            sCad = sCad & "- " & Trim(rsBlq("Motivo")) & Chr$(13)
                        End If
                        rsBlq.MoveNext
                    Loop
                End If
                If sCad <> "" Then
                    ValidaCuentaOperacion = sCad
                End If
            Case Else
                ValidaCuentaOperacion = ""
        End Select
    End If
End Function

Public Function ValidaRetiroIntPF(ByVal sCuenta As String, ByVal dFecSis As Date, ByVal nOperacion As CaptacOperacion) As String
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim sCad As String
    Dim dAuxiliar As Date, dRenovacion As Date, dVencimiento As Date
    Dim nPlazo As Long, nFormaRetiro As CaptacPFFormaRetiro
    Dim nIntPag As Double
    Dim rsCta As New ADODB.Recordset
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsCap.GetDatosCuentaPF(sCuenta)
    Set clsCap = Nothing
    If Not (rsCta.EOF And rsCta.BOF) Then
       
        dAuxiliar = rsCta("dAuxiliar")
        dRenovacion = rsCta("dRenovacion")
        nPlazo = rsCta("nPlazo")
        dVencimiento = DateAdd("d", nPlazo, dRenovacion)
        nFormaRetiro = rsCta("nFormaRetiro")
        nIntPag = rsCta("nIntPag")  'Add By GITU 14-03-2011
        
        '***Agregado por ELRO el 20120731, según SATI INC1207310004
        If nFormaRetiro = gCapPFFormRetAdelantado And (nOperacion = gPFRetInt Or nOperacion = gPFRetIntAboAho) Then
            ValidaRetiroIntPF = "Depóstio Plazo Fijo con Forma de Retiro: Interes Adelantado no esta permitido por esta operación"
            Exit Function
        End If
        If nFormaRetiro <> gCapPFFormRetAdelantado And nOperacion = gPFRetIntAdelantado Then
            ValidaRetiroIntPF = "Depóstio Plazo Fijo con Forma de Retiro: No es Interes Adelantado, esta operación no esta permitido."
            Exit Function
        End If
        '***Fin Agregado por ELRO el 20120731**********************
        If nFormaRetiro <> gCapPFFormRetLibre Then
            If DateDiff("d", dVencimiento, dFecSis) <> 0 Then
                If DateDiff("d", dAuxiliar, dFecSis) < 30 And nFormaRetiro = gCapPFFormRetMensual Then
                    sCad = "El número de dias transcurridos desde la última " & Chr$(13) _
                            & "FECHA PACTADA DE RETIRO es MENOR A 30 DIAS"
                    sCad = "El número de dias transcurridos desde la última " & Chr$(13) _
                            & "FECHA PACTADA DE RETIRO es MENOR A 30 DIAS"
                ElseIf DateDiff("d", dRenovacion, dFecSis) < nPlazo And nFormaRetiro = gCapPFFormRetFinalPlazo Then
                    sCad = "El número de dias transcurridos desde la última " & Chr$(13) _
                            & " RENOVACION es MENOR A 30 DIAS"
                ElseIf DateDiff("d", dRenovacion, dFecSis) <> 0 And nFormaRetiro = gCapPFFormRetAdelantado Then
                    sCad = "Fecha No Válida para Retiro de Interés Adelantado"
                ElseIf nOperacion = gPFRetIntAdelantado And nFormaRetiro <> gCapPFFormRetAdelantado Then
                    sCad = "La cuenta no fue aperturada como Forma de Retiro Adelantado"
                ElseIf nFormaRetiro = gCapPFFormRetAdelantado And nIntPag > 0 Then
                    sCad = "Ya se realizo el retiro del Interes Adelantado"
                Else
                    sCad = ""
                End If
            '***Agregado por ELRO el 20120731, según SATI INC1207310004
            ElseIf DateDiff("d", dVencimiento, dFecSis) = 0 And nFormaRetiro = gCapPFFormRetAdelantado Then
                 sCad = "Depóstio Plazo Fijo con Forma de Retiro: Interés Adelantado, Cliente ya realizo retiro"
            End If
            '***Fin Agregado por ELRO el 20120731**********************
        End If
    Else
        sCad = "Cuenta NO Existe"
    End If
    rsCta.Close
    Set rsCta = Nothing
    ValidaRetiroIntPF = sCad
End Function

Public Function CapYaRetiro(ByVal psCuenta As String, ByVal dFecSis As Date) As Boolean
 Dim FRetiro1 As Date
    
    FRetiro1 = GetFechaUltimoRetiroIntPF(psCuenta)

End Function

Public Function CapAbonoCuentaAho(ByVal sCuenta As String, ByVal nMonto As Double, _
        ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal sGlosa As String, _
        Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", Optional sCodIF As String = "", _
        Optional dFechaValor As Date, Optional bActivaCta As Boolean = True, Optional bNumExtracto As Boolean = True, _
        Optional sCodCmac As String = "", Optional sNomCmac As String = "", Optional sNomAge As String = "", _
        Optional sLpt As String = "", Optional sPersLavDinero As String = "", Optional bTransaccion As Boolean = False, _
        Optional bImprimeBoleta As Boolean = True, Optional pnMovNroTransfer As Long = -1, _
        Optional pnMonedaTrans As Moneda = gMonedaNacional, Optional ByVal psCodCmac As String, Optional pCon As ADODB.Connection = Nothing, _
        Optional pbITFAplica As Boolean = True, Optional pnITFValor As Double = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional sOPedesc As String = "", Optional ByRef pnExtracto As Long, _
        Optional sBenPersLavDinero As String, Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoleta As String, Optional ByRef psITFImprimeBoleta As String, Optional pbImpTMU As Boolean, _
        Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
        Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0, _
        Optional pnComiDepOtraAge As Variant = 0, Optional pbPagoServicio As Boolean = False, Optional pcPersNomInst As String = "", _
        Optional nComisionPServicio As Double = 0, Optional pcImrimePer As String = "", Optional ByVal pnConceptoSer As String = "", _
        Optional ByVal pnNomCliServ As String = "", Optional ByVal pnMontoSer As String = "", Optional ByVal psNumTarj As String, _
        Optional ByVal pnMovNroRVD As Long = 0, Optional ByVal pnMontoRVD As Long = 0, Optional sPerEcotaxi As Variant = "", Optional pnLogEcotaxi As Integer = 0, _
        Optional ByVal psCtaCodAbono As String = "", Optional ByVal pbDevolRecaudoEcotaxi As Boolean = False, Optional ByVal sDocReferencia As String = "", _
        Optional ByVal psIFTpo As String = "", Optional ByVal psIFCta As String = "", _
        Optional ByVal pnConcepto As Long = 0, Optional ByVal pnMovNroVistoElec As Long = 0) As Double
        '*** RIRO20131102 ERS145 Se agregó parámetro sDocReferencia para los depósitos al club de trabajadores.
        '****RECO20131112 ERS141 Se agrego el parametro psCtaCodAbono con la finalidad de poder registrar la cuenta que realiza el deposito fr Fonfo de garantia ecotaxi
        '****RECO20131112 ERS141 Se agrego el parametro pbDevolRecaudoEcotaxi con la finalidad de poder registrar la devolucion de cuenta recaudo ecotaxi
        'By Capi 12022008 se adiciono Optional sOrdPersLavDinero As String, Optional sReaPersLavDinero As String, Optional VisPersLavDinero As String
        'By 20111213 MADM pnNomCliServ 20110613 MADM para pago de servicios pcPersNomInst - pbPagoServicio - pcImrimePer
        '*** Parametros: pnMovNroRVD, pnMontoRVD agregado por ELRO el 20120717, según OYP-RFC024-2012
        'sPerEcotaxi(1)=psPersCodEcotaxi
        'sPerEcotaxi(2)=psPersNomEcotaxi
        'sPerEcotaxi(3)=psPersDNIEcotaxi
        'FRHU 20141203 ERS048-2014 Se agrego psConcepto y pnMovVistoElec
        'APRI20190109 ERS077-2018 -> Change pnComiDepOtraAge As Double To As Variant
        
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim nSaldoInac As Double
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean, bInamovilizada As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long, nExtracto As Long
    Dim sMsgOpe As String, sCodUser As String, sAgencia As String
    Dim nMovNro As Long
    Dim dFecSis As Date
    Dim sConceptoDesc As String 'FRHU 20141203 ERS048-2014
    Dim oCon As COMDConstSistema.NCOMConstSistema
    Set oCon = New COMDConstSistema.NCOMConstSistema
    Dim oGen As New COMDConstSistema.DCOMGeneral
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim oConcepto As New COMDConstantes.DCOMConstantes 'FRHU 20141203 ERS048-2014

    Dim lnSaldoDisp As Double
    Dim lnSaldoCont As Double
    Dim bImpreSaldos As Boolean

    Dim lnMontoCV As Currency

    'Para el manejo del Tipo de Cambio
    Dim lnTipCambio As Currency
    Dim lnTipCambioV As Currency
    Dim lnTipCambioC As Currency
    
    Dim lnOpeTarj As Integer 'Indica si la operacion se realizo con tarjeta
    If psNumTarj <> "" Then
        lnOpeTarj = 1
    End If
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    sAgencia = Mid(sMovNro, 18, 2)

    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

    Dim MontoItf As Double
    nMovNro = clsCap.GetnMovNro(sMovNro)
    
    'APRI20190109 ERS077-2018
    Dim nComiDepOtraAge As Double
    Dim nComiDepxMaxOpe As Double
    Dim nComisionesDeposito As Double
    If IsArray(pnComiDepOtraAge) Then
        nComiDepOtraAge = CDbl(pnComiDepOtraAge(0))
        nComiDepxMaxOpe = CDbl(pnComiDepOtraAge(1))
    Else
        nComiDepOtraAge = 0
        nComiDepxMaxOpe = 0
    End If
    nComisionesDeposito = nComiDepOtraAge + nComiDepxMaxOpe
    'END APRI

     'ande ERS021-2018 20180430 campaña mundial
    Dim cDatosCamp As String
    If Left(psMensajeValidacion, 1) = "#" And Right(psMensajeValidacion, 1) = "&" Then
        cDatosCamp = psMensajeValidacion
        psMensajeValidacion = ""
    End If

    bTrans = False
    'Obtiene los datos para el calculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInamovilizada = IIf(rsCta("bInmovilizada") = 0, False, True)
    nExtracto = rsCta("nTransacc") + 1
    pnExtracto = nExtracto
    
    rsCta.Close
    Set rsCta = Nothing
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    On Error GoTo ErrGraba
    
    If Not pCon Is Nothing Then
        clsCap.SetConexion pCon
        clsCap.bTransaccion = True
        bTransaccion = True
    End If
    
    If Not bTransaccion Then clsCap.dbCmact.BeginTrans
    bTrans = True


    If Not ValidaEstadoCuenta(sCuenta, False) Then   'Valida el estado de la cuenta nuevamente
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        psMensajeValidacion = "Cuenta NO Tiene un estado valido para la Operacion, consulte con el Asistente de Agencia."
        CapAbonoCuentaAho = 0
        Exit Function
    End If
     'APRI20190109 ERS077-2018 - MEJORA
    If Not ValidaSaldoCuenta(sCuenta, 0, , nComiDepOtraAge, nComiDepxMaxOpe, , , , nMonto) Then 'Valida el saldo de la cuenta nuevamente
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente para la operación."
        CapAbonoCuentaAho = 0
        Exit Function
    End If
    'END APRI
    If sGlosa = "" Then sGlosa = "Abono Cuenta = " & sCuenta
    If bActivaCta Then
        If bInactiva Then
            nSaldoInac = nSaldoCnt
        End If
    End If

    'Calcula intereses
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nDiasTranscurridos < 0 Then
        nDiasTranscurridos = 0
    End If
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMonto
    
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    
    nMovNro = clsCap.GetnMovNro(sMovNro)
    
    If sNroDoc = "" Then ' Si la operacion es en efectivo
        clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
        nSaldoDisp = nSaldoDisp + nMonto
        clsCap.ActualizadUltContactoAho sCuenta, dFecSis
    Else
        If nTipoDoc = TpoDocCheque And nOperacion <> "200252" Then 'Si el abono es con cheque
            'EJVG20140208 *** xq los cheques ya estarán valorizados
            nSaldoDisp = nSaldoDisp + 0
            clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
            nSaldoDisp = nSaldoDisp + nMonto
            'nIntGanado = 0
            'END EJVG *******
            clsCap.ActualizadUltContactoAho sCuenta, dFecSis
        ElseIf nTipoDoc = TpoDocCheque And nOperacion = "200252" Then
            clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
            nSaldoDisp = nSaldoDisp + nMonto
            clsCap.ActualizadUltContactoAho sCuenta, dFecSis
        ElseIf nTipoDoc = TpoDocNotaAbono Then 'Si el abono es con nota de abono
            clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
            nSaldoDisp = nSaldoDisp + nMonto
        End If
    End If

    '******** para Boleta ITF
    
     lnSaldoDisp = nSaldoDisp
     lnSaldoCont = nSaldoCnt
    '-----
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt, lnOpeTarj, psNumTarj
    
    '***********RECO20131106 ERS-141**************************
    If nOperacion = "200201" And psCtaCodAbono <> "" Then
        clsCap.RegistraDevFonfoGarantEcotaxi nMovNro, sCuenta, dFecSis, nMonto, nOperacion, psCtaCodAbono, 1, sGlosa
    ElseIf nOperacion = "200203" And psCtaCodAbono <> "" Then
        clsCap.RegistraDevFonfoGarantEcotaxi nMovNro, sCuenta, dFecSis, nMonto, nOperacion, psCtaCodAbono, 2, sGlosa
    End If
    
    If nOperacion = "200201" And pbDevolRecaudoEcotaxi = True Then
        clsCap.RegistraDevolucionRecaudoEcotaxi nMovNro, sCuenta, dFecSis, nMonto, nOperacion, sGlosa
    ElseIf nOperacion = "200203" And pbDevolRecaudoEcotaxi = True Then
        clsCap.RegistraDevolucionRecaudoEcotaxi nMovNro, sCuenta, dFecSis, nMonto, nOperacion, sGlosa
    End If
    '*****************END RECO********************************
    
    '***Modificado por ELRO el 20120828, según OYP-RFC024-2012
    'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    'If nOperacion = gAhoDepTransf Then
    'If nOperacion = gAhoDepTransf Or nOperacion = "200245" Then 'EJVG20130923
    If nOperacion = gAhoDepTransf Or nOperacion = "200245" Or nOperacion = gAhoDepActivacionSegTarjeta Then 'FRHU 20140903: gAhoDepActivacionSegTarjeta = 200269
        If pnMovNroTransfer <> -1 Then
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcPenTran, nMonto
        ElseIf pnMovNroTransfer = -1 Then
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
        End If
    Else
        'FRHU 20141203 ERS048-2014
        'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
        If nOperacion = gCapNotaDeAbono Then
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, CStr(pnConcepto), nMonto
        Else
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
        End If
        'FIN FRHU 20141203
    End If
    '***Fin Modificado por ELRO el 20120828*******************
    If pbITFAplica And pnITFValor > 0 Then
        If pbITFAsumido Then
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFAsumido, pnITFValor
        Else
            If psITFOperacion = gITFCobroEfectivo Then
                clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
                clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
            Else
                clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor
                clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
            End If
        End If
    End If
    'FRHU 20141203 ERS048-2014
    sConceptoDesc = oConcepto.GetProductoConcepto(pnConcepto)
    If pnMovNroVistoElec <> 0 Then
        clsCap.AgregaMovRef nMovNro, pnMovNroVistoElec
    End If
    'FIN FRHU 20141203
     'APRI20190109 ERS077-2018
    If nComisionesDeposito > 0 Then
     clsCap.ActualizaCargoCaptacion sCuenta, nComisionesDeposito, nComisionesDeposito, 0, dUltMov, sMovNro, bNumExtracto
     clsCap.AgregaMovCap nMovNro, gAhoDepComision, sCuenta, nComisionesDeposito, nSaldoDisp - pnITFValor - nComisionesDeposito, nSaldoCnt - pnITFValor - nComisionesDeposito
        '*** BRGO 20110127 ***** COBRO DE COMISION X DEPOSITOS OTRA AGENCIA *********
        If nComiDepOtraAge <> 0 Then
        'APRI20190109 ERS077-2018 CHANGE pnComiDepOtraAge To nComiDepOtraAge y Comentó ActualizaCargoCaptacion,AgregaMovCap
             'clsCap.ActualizaCargoCaptacion sCuenta, nComiDepOtraAge, nComiDepOtraAge, 0, dUltMov, sMovNro, bNumExtracto
             'clsCap.AgregaMovCap nMovNro, gAhoDepComision, sCuenta, nComiDepOtraAge, nSaldoDisp - pnITFValor - nComiDepOtraAge, nSaldoCnt - pnITFValor - nComiDepOtraAge
             clsCap.AgregaMovCapDet nMovNro, gAhoDepComision, sCuenta, gConcOpeDepOtraAge, nComiDepOtraAge
        End If
        '*** END BRGO ***************************************************************
        If nComiDepxMaxOpe <> 0 Then
             clsCap.AgregaMovCapDet nMovNro, gAhoDepComision, sCuenta, gConcOpeRetxMaxOpe, nComiDepxMaxOpe
        End If
    End If
    'END APRI


    If sNroDoc = "" Then ' Si la operacion es en efectivo
        If (pbITFAplica And pnITFValor > 0) And (Not pbITFAsumido) And (Val(psITFOperacion) = gITFCobroCargo Or Val(psITFOperacion) = gITFCobroCMACCargo) Then
            clsCap.ActualizaAbonoCaptacion sCuenta, nMonto - pnITFValor, nMonto - pnITFValor, nIntGanado, dUltMov, sMovNro, bNumExtracto
        Else
            clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, bNumExtracto
        End If
        
        If nOperacion = gAhoDepEfec Then
            sMsgOpe = "Depósito Efectivo"
        ElseIf nOperacion = gAhoDepTransf Then
            sMsgOpe = "Depósito Transferencia"
        ElseIf nOperacion = gAhoDepDevFondoGar Then
            sMsgOpe = "Depósito Dev Fondo Gar"
        ElseIf nOperacion = gAhoDepPagServEdelnor Then
            sMsgOpe = "Depósito Serv Edelnor"
        ElseIf nOperacion = gAhoDepPagServHidrandina Then
            sMsgOpe = "Depósito Serv Hidrandina"
        ElseIf nOperacion = gAhoDepPagServSedalib Then
            sMsgOpe = "Depósito Serv Sedalib"
        ElseIf nOperacion = gAhoDepSobCaja Then
            sMsgOpe = "Depósito Sobrante"
        ElseIf nOperacion = gAhoDepAboOtrosConceptos Then
            sMsgOpe = "Depósito Otros Conceptos"
        ElseIf nOperacion = gAhoDepDevCredPersonales Then
            sMsgOpe = "Depósito Dev Cred Pers"
        ElseIf nOperacion = "200242" Then
            sMsgOpe = "Abono por otros Servicios"
        ElseIf nOperacion = "200209" Then
            sMsgOpe = "Otros Conceptos RRHH"
        ElseIf nOperacion >= 200247 And nOperacion <= 200251 Then
            sMsgOpe = Trim(sOPedesc)
        'FRHU 20140603 ERS068-2014
        ElseIf nOperacion = 200269 Then
            sMsgOpe = "Abono por Seguro Tarjeta"
        'FRHU 20140603
        'YIHU 20150108 ERS 160
        ElseIf nOperacion = "200245" Then
            sMsgOpe = "Abono Cta. Haberes Transf."
        ElseIf nOperacion = gCapNotaDeAbono Then 'FRHU 20141203 ERS048-2014
            sMsgOpe = sConceptoDesc
        End If
        'END YIHU
    Else
        If nTipoDoc = TpoDocCheque Then  'Si el abono es con cheque
        
           If nOperacion <> "200252" Then
              If (pbITFAplica And pnITFValor > 0) And (Not pbITFAsumido) And (Val(psITFOperacion) = gITFCobroCargo Or Val(psITFOperacion) = gITFCobroCMACCargo) Then
                   'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto - pnITFValor, (pnITFValor * -1), nIntGanado, dUltMov, sMovNro, True
                   clsCap.ActualizaAbonoCaptacion sCuenta, nMonto - pnITFValor, nMonto - pnITFValor, nIntGanado, dUltMov, sMovNro, True 'EJVG20140408
              Else
                   'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, 0, nIntGanado, dUltMov, sMovNro, True
                   clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True 'EJVG20140408
              End If
           Else
              If (pbITFAplica And pnITFValor > 0) And (Not pbITFAsumido) And (Val(psITFOperacion) = gITFCobroCargo Or Val(psITFOperacion) = gITFCobroCMACCargo) Then
                    clsCap.ActualizaAbonoCaptacion sCuenta, nMonto - pnITFValor, nMonto - pnITFValor, nIntGanado, dUltMov, sMovNro, bNumExtracto
              Else
                    'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, 0, nIntGanado, dUltMov, sMovNro, True
                    clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True 'EJVG20140408
              End If
           End If
             
           If nOperacion <> "200252" Then
                 'EJVG20140408 ***
                 'Dim rstemp1 As ADODB.Recordset
                 
                 'Set rstemp1 = clsCap.GetDatosCheque(sNroDoc, sCodIF, "01")
                
                 'clsCap.AgregaCuentaDocumento sCuenta, nTipoDoc, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , rstemp1!cIFCta
                 clsCap.AgregaCuentaDocumento sCuenta, nTipoDoc, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , psIFCta, psIFTpo
                 clsCap.AgregaMovDocRec nMovNro, nTipoDoc, sNroDoc, sCodIF, psIFTpo, psIFCta
                 'END EJVG *******
           End If
            
            sMsgOpe = "Dep.Chq"
        End If
    End If
    
    If sMsgOpe = "" Then sMsgOpe = Left(clsCap.GetCaptaOperacion(Trim(Str(nOperacion))), 28) 'YIHU 20150101 ERS160

    If bInamovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCap nMovNro, gAhoEstInmovAct, sCuenta, nSaldoInac, nSaldoDisp, nSaldoCnt
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCuenta
            clsCap.ActualizaInactivaAct sCuenta
        End If
    End If
    
    If bInactiva And Not bInamovilizada Then
        clsCap.AgregaMovCap nMovNro, gAhoEstInacAct, sCuenta, nSaldoInac, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInactivaAct sCuenta
    End If
    'ALPA 20130108*****************************************************
    If pnLogEcotaxi <> 0 Then
        If Trim(sPerEcotaxi(1)) <> "" Then
            Call clsCap.RegistrarClienteEcotaxi(nMovNro, sPerEcotaxi(1))
        End If
    End If
    '******************************************************************
    '***Modificado por ELRO el 20120829 según OYP-RFC024-2012
    'If pnMovNroTransfer <> -1 Then
    'If pnMovNroTransfer <> -1 And nOperacion = gAhoDepTransf Then
    If pnMovNroTransfer <> -1 And (nOperacion = gAhoDepTransf Or nOperacion = "200245") Then 'EJVG20130923
    '***Fin Modificado por ELRO el 20120829******************
        clsCap.AgregaMovRef nMovNro, pnMovNroTransfer
        '***Agregado por ELRO el 20120716, según OYP-RFC024-2012
        clsCap.ActualizaMovPendientesRend pnMovNroTransfer, pnMontoRVD
        '***Fin Agregado por ELRO el 20120716********************
        If pnMonedaTrans <> Mid(sCuenta, 9, 1) Then
            lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
            lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
            lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
            
            If Mid(sCuenta, 9, 1) = gMonedaNacional Then
                '***Comentado por ELRO el 201208028, según OYP-RFC024-2012
                'clsCap.ActualizaMovPendientesRend pnMovNroTransfer, Round(nMonto / lnTipCambioC, 2)
                '***Fin Comentado por ELRO el 201208028*******************
                lnMontoCV = Round((nMonto / lnTipCambioC) * lnTipCambio, 2)
                '***Comentado por ELRO el 201208028, según OYP-RFC024-2012
                'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeCompra, lnMontoCV
                '***Fin Comentado por ELRO el 201208028*******************
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
                End If
            Else
                '***Comentado por ELRO el 201208028, según OYP-RFC024-2012
                'clsCap.ActualizaMovPendientesRend pnMovNroTransfer, Round(nMonto * lnTipCambioV, 2)
                '***Fin Comentado por ELRO el 201208028*******************
                lnMontoCV = Round(nMonto * lnTipCambio, 2)
                '***Comentado por ELRO el 201208028, según OYP-RFC024-2012
                'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
                '***Fin Comentado por ELRO el 201208028*******************
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                End If
            End If
        'Else
            '***Comentado por ELRO el 201208028, según OYP-RFC024-2012
            'clsCap.ActualizaMovPendientesRend pnMovNroTransfer, nMonto
            '***Fin Comentado por ELRO el 201208028*******************
        End If
    '***Agregado por ELRO el 20120716, según OYP-RFC024-2012
    'ElseIf pnMovNroTransfer = -1 And nOperacion = gAhoDepTransf Then
    ElseIf pnMovNroTransfer = -1 And (nOperacion = gAhoDepTransf Or nOperacion = "200245") Then 'EJVG20130923
        If pnMonedaTrans <> Mid(sCuenta, 9, 1) Then
            lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
            lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
            lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
            
            If Mid(sCuenta, 9, 1) = gMonedaNacional Then
                lnMontoCV = Round((nMonto / lnTipCambioC) * lnTipCambio, 2)
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
                End If
            Else
                lnMontoCV = Round(nMonto * lnTipCambio, 2)
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                End If
            End If
        End If
    '***Fin Agregado por ELRO el 20120716********************
    'FRHU 20140903: Anexo 03
    ElseIf pnMovNroTransfer <> -1 And nOperacion = gAhoDepActivacionSegTarjeta Then
        clsCap.AgregaMovRef nMovNro, pnMovNroTransfer
        clsCap.ActualizaMovPendientesRend pnMovNroTransfer, pnMontoRVD
    'FIN FRHU 20140903
    End If
    
    '***Agregado por ELRO el 20120717, según OYP-RFC024-2012
    'Para relacionar el Registro de Voucher con la Operación
    'If nOperacion = gAhoDepTransf And pnMovNroRVD > 0 Then
    If (nOperacion = gAhoDepTransf Or nOperacion = "200245") And pnMovNroRVD > 0 Then 'EJVG20130923
        clsCap.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
    End If
    '***Fin Agregado por ELRO el 20120717********************

    If sCodCmac <> "" Then
        clsCap.AgregaMovCMAC nMovNro, sCodCmac, CLng(Mid(sCuenta, 9, 1)), nOperacion, nMonto
    End If
    
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

    ' RIRO20131102 ERS145
    If Len(sDocReferencia) > 0 Then
        RegistrarMovDepositoClub nMovNro, nOperacion, sDocReferencia
    End If
    ' FIN RIRO
    
    'If sPersLavDinero <> "" Then
    'ALPA 20081010**********************
''    If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
''        clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
''    End If
    
    CapAbonoCuentaAho = nSaldoCnt
    'ALPA 20081007*****************************************************
''    If bCtaWester = True Then
''        clsCap.AgregaMovWesterUnion nmovnro, sPerCodWesterUnion
''    End If
    'ALPA 20081010
    pnMovNro = nMovNro
    '******************************************************************
    If (Not bImprimeBoleta) Or nOperacion = gAhoDepEntConv Then
            Exit Function
    End If

    '****************************************
    '*************************************************
    If Not bTransaccion Then clsCap.dbCmact.CommitTrans
    bTrans = False
    
    
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = Moneda.gMonedaNacional, "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = Moneda.gMonedaNacional, StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "DEPOSITO AHORROS"
    If nOperacion = gCapNotaDeAbono Then sTipApe = "NOTA DE ABONO" 'FRHU 20140630 ERS048-2014
    If nOperacion = gotropeDepUtilidadesTrans Then sTipApe = "PAGO UTILIDADES ABONO EN CTA" 'RIRO 20150601 ERS162-2014
    
    'MADM 20110318
    If pbPagoServicio Then
        Dim pbPagoServiciox As Boolean
        Dim pcPersNomInstx As String
        Dim nComisionPServiciox As Double
        Dim pcImrimePerx As String
        pcImrimePerx = pcImrimePer
        pcPersNomInstx = pcPersNomInst
        pbPagoServiciox = pbPagoServicio
        nComisionPServiciox = nComisionPServicio
        sTipApe = "PAGO SERVICIOS"
    End If
    'END MADM
    
    'If nOperacion >= 200247 And nOperacion <= 200251 Then
    '        sTipApe = UCase(Trim(sOPedesc))
    'End If
    
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsMant = Nothing
    
    If pbITFAplica And pnITFValor > 0 And pbITFAsumido = False Then
        
            If (Val(psITFOperacion) = gITFCobroCargo Or Val(psITFOperacion) = gITFCobroCMACCargo) Then
                nSaldoDisp = nSaldoDisp - pnITFValor
                nSaldoCnt = nSaldoCnt - pnITFValor
                
            End If
    End If
    
    '**** BRGO 20110127
    'If pnComiDepOtraAge <> 0 Then
    If nComiDepOtraAge <> 0 Then 'APRI20190109 ERS077-2018 Change pnComiDepOtraAge To nComiDepOtraAge
        'nSaldoDisp = nSaldoDisp - pnComiDepOtraAge
        'nSaldoCnt = nSaldoCnt - pnComiDepOtraAge
        'APRI20190109 ERS077 - 2018
        nSaldoDisp = nSaldoDisp - nComiDepOtraAge
        nSaldoCnt = nSaldoCnt - nComiDepOtraAge
        'END APRI
    End If
    '******************
    'APRI2190190 ERS077-2018
    If nComiDepxMaxOpe <> 0 Then
        nSaldoDisp = nSaldoDisp - nComiDepxMaxOpe
        nSaldoCnt = nSaldoCnt - nComiDepxMaxOpe
    End If
    'END APRI
    
    Dim nTipoPag As Integer


    If pnITFValor > 0 Then
        If psITFOperacion = gITFCobroEfectivo Then
            nTipoPag = 1
        Else
            nTipoPag = 2
        End If
    End If
    'Do
    If sNroDoc <> "" Then
        Select Case nTipoDoc
            Case TpoDocCheque
                If sCodCmac <> "" Then
                    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, Trim(nOperacion), Trim(nMonto), sNomTit, sCuenta, Format$(dFechaValor, "dd/mm/yyyy"), nSaldoDisp, nIntGanado, "Fecha Valor", nExtracto, nSaldoCnt, True, , , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, , , pbImpTMU, , , , , , , , , , , , , sPerEcotaxi, pnLogEcotaxi)
                Else
                    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, Trim(nOperacion), Trim(nMonto), sNomTit, sCuenta, Format$(dFechaValor, "dd/mm/yyyy"), nSaldoDisp, nIntGanado, "Fecha Valor", nExtracto, nSaldoCnt, True, , , , , , , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, , , pbImpTMU, , , , , , , , , , , , , sPerEcotaxi, pnLogEcotaxi)
                End If
            Case TpoDocNotaAbono
                psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, Trim(nOperacion), Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, , , pbImpTMU, , , , , , , , , , , , , sPerEcotaxi, pnLogEcotaxi)
        End Select
    Else
        If sCodCmac <> "" Then
            sTipApe = "DEPOSITO CMAC AHORROS"
            'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, pnComiDepOtraAge, , pbImpTMU, , , , , , , , , , , , , sPerEcotaxi, pnLogEcotaxi)
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, nComiDepOtraAge, nComiDepxMaxOpe, pbImpTMU, , , , , , , , , , , , , sPerEcotaxi, pnLogEcotaxi)  'APRI20190109 ERS077-2018
        Else
            'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, pnComiDepOtraAge, , pbImpTMU, psNumTarj, pbPagoServiciox, pcPersNomInstx, nComisionPServiciox, pcImrimePerx, , , pnConceptoSer, pnNomCliServ, pnMontoSer, , , sPerEcotaxi, pnLogEcotaxi)
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, sAgencia, , bImpreSaldos, CStr(nOperacion), , , , , , , , False, nTipoPag, CDbl(pnITFValor), True, nComiDepOtraAge, nComiDepxMaxOpe, pbImpTMU, psNumTarj, pbPagoServiciox, pcPersNomInstx, nComisionPServiciox, pcImrimePerx, , , pnConceptoSer, pnNomCliServ, pnMontoSer, , , sPerEcotaxi, pnLogEcotaxi) 'APRI20190109 ERS077-2018 JIPR20191018
        End If
    End If
    
    'COMENTADO TEMPORALMENTE
    '    If pbITFAplica And pnITFValor > 0 Then
    '        If pbITFAsumido Then
    '            If psItfOperacion = gITFCobroEfectivo Then
    '                psITFImprimeBoleta = psITFImprimeBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
    '            Else
    '                psITFImprimeBoleta = psITFImprimeBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
    '            End If
    '        Else
    '            If psItfOperacion = gITFCobroEfectivo Then
    '                psITFImprimeBoleta = psITFImprimeBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
    '            Else
    '                psITFImprimeBoleta = psITFImprimeBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
    '            End If
    '        End If
    '    End If
        
    'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo


Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    'MsgBox "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ERROR:" & Err.Description, vbOKOnly + vbInformation, "AVISO"
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    Set clsCap = Nothing
    'Err.Raise Err.Number, "", Err.Description
    CapAbonoCuentaAho = 0
End Function

Public Function CapAbonoCuentaCTS(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal sGlosa As String, _
            Optional nPorcDisp As Double = 0, Optional nTipoDoc As TpoDoc = TpoDocCheque, _
            Optional sNroDoc As String = "", Optional sCodIF As String = "", _
            Optional dFechaValor As Date, Optional bNumExtracto As Boolean = True, _
            Optional sCodCmac As String = "", Optional sNomCmac As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional pnMovNroTransfer As Long = -1, _
            Optional pnMonedaTrans As Moneda = gMonedaNacional, Optional ByVal psCodCmac As String, _
            Optional sBenPersLavDinero As String = "", Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoletas As String, Optional pbImpTMU As Boolean = False, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0, _
            Optional ByVal pnMovNroRVD As Long = 0, Optional ByVal pnMontoRVD As Long = 0, _
            Optional ByVal psIFTpo As String = "", Optional ByVal psIFCta As String = "") As Double
            '*** Parametros: pnMovNroRVD, pnMontoRVD agregado por ELRO el 20120717, según OYP-RFC024-2012
            'EJVG20140208 Se agregó psIFTpo, psIFCta

Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oImpre As New COMFunciones.FCOMImpresion

Dim rsCta As New ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nSaldoRetiro As Double
Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
Dim dUltMov As Date
Dim bTrans As Boolean, bInactiva As Boolean
Dim nNumExtracto As Long, nDiasTranscurridos As Long, nExtracto As Long
Dim nMovNro As Long
Dim sMsgOpe As String, sCodUser As String
Dim dFecSis As Date
Dim lnMontoCV As Currency

Dim nTotalSaldos As Double 'BRGO 20110420
Dim nTotalSueldos As Double 'BRGO 20110420
Dim nExcedente As Double 'BRGO 20110420
Dim nMontoMN As Double 'JUEZ 20130726
Dim nTpoPrograma As Integer 'JUEZ 20130816
Dim bCeseLaboral As Boolean 'JUEZ 20140319

Dim oGen As New COMDConstSistema.DCOMGeneral

'Para el manejo del Tipo de Cambio
Dim lnTipCambio As Currency
Dim lnTipCambioV As Currency
Dim lnTipCambioC As Currency
Dim nDU01 As Double 'APRI20200415 POR COVID-19
dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
bTrans = False
'Obtiene los datos para el calculo
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")
nSaldoRetiro = rsCta("nSaldRetiro")
nExtracto = rsCta("nTransacc") + 1
nTpoPrograma = rsCta("nTpoPrograma") 'JUEZ 20130816
bCeseLaboral = rsCta("bCeseLaboral") 'JUEZ 20140319
nPorcDisp = rsCta("nPorDisp") 'JUEZ 20141017
nDU01 = rsCta("nDU01") 'APRI20200415 POR COVID-19
rsCta.Close
Set rsCta = Nothing
'If nPorcDisp = 0 Then 'Comentado x JUEZ 20141017
'    Dim clsDef As NCOMCaptaDefinicion
'    Set clsDef = New NCOMCaptaDefinicion
'    nPorcDisp = clsDef.GetCapParametro(gPorRetCTS)
'    Set clsDef = Nothing
'End If
'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrGraba

clsCap.dbCmact.BeginTrans
bTrans = True

If Not ValidaEstadoCuenta(sCuenta, False) Then   'Valida el estado de la cuenta nuevamente
    clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox "Cuenta NO Tiene un estado valido para la Operacion, consulte con el Asistente de Agencia.", vbInformation, "Aviso"
    psMensajeValidacion = "Cuenta NO Tiene un estado valido para la Operacion, consulte con el Asistente de Agencia."
    CapAbonoCuentaCTS = 0
    Exit Function
End If

'Calcula Intereses
nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
If nDiasTranscurridos < 0 Then
    nDiasTranscurridos = 0
End If
'Mody By GITU 17-09-2010 se cambio la formula del simple al compuesto para calcular
'el interes de las cuentas CTS
'nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)
'End GITU
nIntSaldo = GetInteres(nSaldoRetiro, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
nSaldoCnt = nSaldoCnt + nMonto
dUltMov = DateAdd("d", -1, dFecSis)

If sGlosa = "" Then sGlosa = "Abono Cuenta = " & sCuenta
clsCap.AgregaMov sMovNro, nOperacion, sGlosa
nMovNro = clsCap.GetnMovNro(sMovNro)
'ALPA 20081010
pnMovNro = nMovNro

'If sNroDoc = "" Then 'Si es abono en efectivo
'    nSaldoDisp = nSaldoDisp + nMonto
'    nSaldoRetiro = nSaldoRetiro + (nMonto * nPorcDisp / 100)
'Else
'    If nTipoDoc = TpoDocCheque Then 'Si es con cheque
'        nSaldoDisp = nSaldoDisp + 0
'    End If
'End If

'*** BRGO 20110423 *** Nueva Ley Nº 29352 *******************************************
Set rsCta = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'Obtiene valores en Soles
nTotalSaldos = rsCta!TotalSaldos
nTotalSueldos = rsCta!TotalSueldos
rsCta.Close

nMontoMN = nMonto * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'JUEZ 20130726 Saldo Retiro por Institucion y Persona

'JUEZ 20141118 Eliminamos condición para que cuando sea con cheque también actualice saldo de retiro, ya que la operacion con cheque ahora suma al saldo disponiblesegún ultimo cambio EJVG
'If sNroDoc = "" Then 'Si es abono en efectivo
    nSaldoDisp = nSaldoDisp + nMonto
    'nExcedente = (nTotalSaldos + nMonto) - nTotalSueldos
    'nExcedente = (nTotalSaldos + IIf(nTpoPrograma = 2, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20130726
    nExcedente = (nTotalSaldos + IIf(nTpoPrograma = 2 And bCeseLaboral, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20140319 Si tiene Cese Laboral no suma saldo retiro
    If nExcedente > 0 Then
        nSaldoRetiro = nExcedente * nPorcDisp / 100
    Else
        nSaldoRetiro = 0
    End If
'Else
'    If nTipoDoc = TpoDocCheque Then 'Si es con cheque
        'nSaldoDisp = nSaldoDisp + 0
'        nSaldoDisp = nSaldoDisp + nMonto 'EJVG20140408 Xq el cheque ya estará valorizado
'    End If
'End If
'************************************************************************************

clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'***Modificado por ELRO el 20120828, según OYP-RFC024-2012
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
If nOperacion = gCTSDepTransf Then
    If pnMovNroTransfer <> -1 Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcPenTran, nMonto
    ElseIf pnMovNroTransfer = -1 Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    End If
    
Else
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
End If
'***Fin Modificado por ELRO el 20120828*******************
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvision, nIntGanado 'COMENTADO POR APRI20180926 MEJORA CORREO-MARI 21/09/2018
clsCap.AgregaMovParamCTS nMovNro, nPorcDisp
If sNroDoc = "" Then 'Si es abono en efectivo
    'clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, nIntSaldo
    clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, nIntSaldo, nDU01 'APRI20200415 POR COVID-19
    clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
    
    If nOperacion = gCTSDepEfec Then
        sMsgOpe = "Depósito Efectivo"
    ElseIf nOperacion = gCTSDepTransf Then
        sMsgOpe = "Depósito Transferencia"
    End If
Else
    If nTipoDoc = TpoDocCheque Then 'Si es con cheque
        'clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, nIntSaldo 'JUEZ 20141118
        clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, nIntSaldo, nDU01 'APRI20200415 POR COVID-19
        'EJVG20140408 ***
        'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, 0, nIntGanado, dUltMov, sMovNro, True
        clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
        
        'Dim rstemp1 As New ADODB.Recordset
         
        'Set rstemp1 = clsCap.GetDatosCheque(sNroDoc, sCodIF, "01")
       
        'clsCap.AgregaCuentaDocumento sCuenta, nTipoDoc, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , rstemp1!cIFCta
        clsCap.AgregaCuentaDocumento sCuenta, nTipoDoc, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , psIFCta, psIFTpo
        clsCap.AgregaMovDocRec nMovNro, nTipoDoc, sNroDoc, sCodIF, psIFTpo, psIFCta
        'END EJVG *******
        
        sMsgOpe = "Depósito Cheque"
    End If
End If

'***Modificado por ELRO el 20120828, según RFC024-2012
'If pnMovNroTransfer <> -1 Then
If pnMovNroTransfer <> -1 And nOperacion = gCTSDepTransf Then
'***Fin Modificado por ELRO el 20120828***************
    clsCap.AgregaMovRef nMovNro, pnMovNroTransfer
    '***Agregado por ELRO el 20120828, según OYP-RFC024-2012
    clsCap.ActualizaMovPendientesRend pnMovNroTransfer, pnMontoRVD
    '***Fin Agregado por ELRO el 20120828*******************
    If pnMonedaTrans <> Mid(sCuenta, 9, 1) Then
        'GetTipCambio dFecSis
        lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
        lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
        lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
        
        If Mid(sCuenta, 9, 1) = gMonedaNacional Then
            '***Comentado por ELRO el 20120828, según OYP-RFC024-2012
            'clsCap.ActualizaMovPendientesRend pnMovNroTransfer, Round(nMonto / lnTipCambioC, 2)
            '***Fin Comentado por ELRO el 20120828*******************
            lnMontoCV = Round((nMonto / lnTipCambioC) * lnTipCambio, 2)
            '***Comentado por ELRO el 20120828, según OYP-RFC024-2012
            'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeCompra, lnMontoCV
            '***Fin Comentado por ELRO el 20120828*******************
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
            If lnTipCambioC < lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
            End If
        Else
            '***Comentado por ELRO el 20120828, según OYP-RFC024-2012
            'clsCap.ActualizaMovPendientesRend pnMovNroTransfer, Round(nMonto * lnTipCambioV, 2)
            '***Fin Comentado por ELRO el 20120828*******************
            lnMontoCV = Round(nMonto * lnTipCambio, 2)
            '***Comentado por ELRO el 20120828, según OYP-RFC024-2012
            'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
            '***Fin Comentado por ELRO el 20120828*******************
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
            If lnTipCambioV > lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
            End If
        End If
    'Else
        '***Comentado por ELRO el 20120828, según OYP-RFC024-2012
        'clsCap.ActualizaMovPendientesRend pnMovNroTransfer, nMonto
        '***Fin Comentado por ELRO el 20120828*******************
    End If
    
'***Agregado por ELRO el 20120828, según OYP-RFC024-2012
ElseIf pnMovNroTransfer = -1 And nOperacion = gCTSDepTransf Then

    If pnMonedaTrans <> Mid(sCuenta, 9, 1) Then
        lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
        lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
        lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
        
        If Mid(sCuenta, 9, 1) = gMonedaNacional Then
            lnMontoCV = Round((nMonto / lnTipCambioC) * lnTipCambio, 2)
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
            If lnTipCambioC < lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
            End If
        Else
            lnMontoCV = Round(nMonto * lnTipCambio, 2)
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
            If lnTipCambioV > lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
            End If
        End If
    End If
'***Fin Agregado por ELRO el 20120828*******************
End If

'***Agregado por ELRO el 20120717, según OYP-RFC024-2012
'Para relacionar el Registro de Voucher con la Operación
If nOperacion = gCTSDepTransf And pnMovNroRVD > 0 Then
    clsCap.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
End If
'***Fin Agregado por ELRO el 20120717********************

If sCodCmac <> "" Then
    clsCap.AgregaMovCMAC nMovNro, sCodCmac, CLng(Mid(sCuenta, 9, 1)), nOperacion, nMonto
End If
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
'If sPersLavDinero <> "" Then
'ALPA 20081010***********************
'''If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
'''    'By Capi 18022008
'''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
'''    'ALPA 20081003******************************************************************************************
'''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
'''    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
'''    '*******************************************************************************************
'''End If

'***************************
'*****************************************
clsCap.dbCmact.CommitTrans
bTrans = False
CapAbonoCuentaCTS = nSaldoCnt
'APRI20200512 POR COVID-19
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
Set clsMant = Nothing
nDU01 = rsCta("nDU01New")
rsCta.Close
Set rsCta = Nothing
clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, nIntSaldo, nDU01
'END APRI

Dim sTipDep As String, sCodOpe As String
Dim sTipApe As String
Dim sNomTit As String
'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sTipApe = "DEPOSITO CTS"
Dim clsTit As NCOMCaptaGenerales
Set clsTit = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsMant = Nothing

'Do
    If sNroDoc <> "" Then
        Select Case nTipoDoc
            Case TpoDocCheque
                psImpBoletas = psImpBoletas & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, Format$(dFechaValor, "dd/mm/yyyy"), nSaldoDisp, nIntGanado, "Fecha Valor", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU)
        End Select
    Else
        If sCodCmac <> "" Then
            sTipApe = "DEPOSITO CMAC CTS"
            psImpBoletas = psImpBoletas & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, , , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU)
        Else
            psImpBoletas = psImpBoletas & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU)
        End If
    End If

'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION", Err.Description
    'MsgBox "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ERROR:" & Err.Description, vbOKOnly + vbInformation, "AVISO"
    
End Function

Public Function CapCargoAhoOPCertifcada(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal sGlosa As String, _
            ByVal sNroDoc As String, Optional sCodIF As String = "", _
            Optional sCodCmac As String = "", Optional sNomCmac As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional sBenPersLavDinero As String = "", Optional ByRef psImpBoleta As String, _
            Optional pnComiRetOtraAge As Double = 0, Optional pnComiRetxMaxOpe As Double = 0, Optional pbImpTMU As Boolean = False, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", _
            Optional psReaPersLavDinero As String = "", Optional psBenPersLavDinero As String = "", _
            Optional psVisPersLavDinero As String = "", _
            Optional pnMovNro As Long = 0, Optional ByVal psRegla As String = "") As Double
    'RIRO 20131102 SEGUN "CAMBIOS EN PODERES", se agrego parametro "psRegla"
    'ALPA 20081009****************************************************
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim oImpre As New COMFunciones.FCOMImpresion

    Dim rsCta As New ADODB.Recordset, rsPers As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean
    Dim nExtracto As Long, nDiasTranscurridos As Long, i As Long
    Dim nMovNro As Long
    Dim sMsgOpe As String, sNombreIF As String, sCodUser As String
    Dim dFecSis As Date
    Dim nComisionesRetiro As Double

    Dim bMaxOpeRet As Boolean

    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    'Obtiene los datos para el calculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    If sCodIF <> "" Then
        'Set rsPers = clsMant.GetDatosPersona(sCodIF) ---CTI3 ERS082-2018
        Set rsPers = clsMant.GetDatosPersona(Mid(sCodIF, 4, 16))
        sNombreIF = rsPers("Nombre")
        rsPers.Close
        Set rsPers = Nothing
    End If
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    nExtracto = rsCta("nTransacc")
    rsCta.Close
    Set rsCta = Nothing
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    clsCap.AgregaOrdenPago sCuenta, sNroDoc, sMovNro, nMonto, gCapOPEstCobrada
    If nOperacion = gAhoRetOPCert Then
        sMsgOpe = "Retiro OP Cert."
    ElseIf nOperacion = gAhoRetOPCertCanje Then
        sMsgOpe = "Retiro OP Cert.Canje"
    End If
    sGlosa = sGlosa & ".Cargo Cuenta = " & sCuenta
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010****************
    pnMovNro = nMovNro
    '*****************************
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt, , , psRegla
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

    ' *** COBRO DE COMISION X RETIROS  ***
    nComisionesRetiro = pnComiRetOtraAge + pnComiRetxMaxOpe

    If nComisionesRetiro <> 0 Then
        clsCap.ActualizaCargoCaptacion sCuenta, nComisionesRetiro, nComisionesRetiro, 0, dUltMov, sMovNro
        If pnComiRetOtraAge <> 0 Then
            If pnComiRetxMaxOpe <> 0 Then
                pnComiRetOtraAge = pnComiRetOtraAge + pnComiRetxMaxOpe
                bMaxOpeRet = True
            End If
            clsCap.AgregaMovCap nMovNro, gAhoRetComision, sCuenta, pnComiRetOtraAge, nSaldoDisp - pnComiRetOtraAge, nSaldoCnt - pnComiRetOtraAge, , , psRegla
            clsCap.AgregaMovCapDet nMovNro, gAhoRetComision, sCuenta, gConcOpeRetOtraAge, pnComiRetOtraAge
        End If
        If bMaxOpeRet = False Then
            If pnComiRetxMaxOpe <> 0 Then
                clsCap.AgregaMovCap nMovNro, gAhoRetComision, sCuenta, pnComiRetxMaxOpe, nSaldoDisp - pnComiRetxMaxOpe, nSaldoCnt - pnComiRetxMaxOpe, , , psRegla
                clsCap.AgregaMovCapDet nMovNro, gAhoRetComision, sCuenta, gConcOpeRetxMaxOpe, pnComiRetxMaxOpe
            End If
        End If
    End If

    'If sPersLavDinero <> "" Then
''ALPA 20081010************
''    If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
''        'By Capi 2802208
''        'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''        clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
''        '**************************************************************************************
''    End If
    clsCap.dbCmact.CommitTrans
    CapCargoAhoOPCertifcada = nSaldoCnt

    Dim bReImp As Boolean
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "RETIRO AHORROS"
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsMant = Nothing
    bReImp = False
    'Do
        If sCodCmac <> "" Then
            sTipApe = "RETIRO AHORROS CMAC"
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , False, , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU)
        Else
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , False, , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU)
        End If
    'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
    Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapCargoAhoOPCertifcada = 0
End Function

Public Function CapCargoCuentaAho(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal sGlosa As String, _
            Optional nTipoDoc As TpoDoc = TpoDocNotaCargo, Optional sNroDoc As String = "", _
            Optional sCodIF As String = "", Optional bOPExiste As Boolean = False, _
            Optional bActivaCta As Boolean = True, Optional bNumExtracto As Boolean = True, _
            Optional sCodCmac As String = "", Optional sNomCmac As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional bTransaccion As Boolean = False, _
            Optional psCtaBanco As String = "", Optional pnMoneda As Moneda = gMonedaNacional, _
            Optional ByVal psCodCmac As String, Optional pCon As ADODB.Connection = Nothing, _
            Optional ByVal psCodAge As String, Optional ByVal pbProcesaAutorizacion As Boolean = False, _
            Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, _
            Optional psITFOperacion As String = "", Optional ByVal sOPedesc As String = "", Optional ByVal sBenPersLavDinero As String = "", _
            Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pnComiRetOtraAge As Double = 0, Optional pnComiRetxMaxOpe As Double = 0, Optional pbImpTMU As Boolean = False, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", _
            Optional pnMovNro As Long = 0, Optional psNumTarj As String = "", _
            Optional ByVal pnComRetVB As Double = 0, Optional psCodCarVB As String = "", _
            Optional ByVal pnMedioRetiro As Integer = 0, Optional ByVal psRegla As String = "", _
            Optional ByVal nComisionTranf As Double = 0, Optional ByVal sMovNroCom As String = "", _
            Optional ByVal sNomTitular As String = "", Optional ByVal nComRetTransVB As Integer = 0, _
            Optional ByVal pnConcepto As Long = 0, Optional ByVal pnMovNroVistoElec As Long = 0, _
            Optional ByVal pnComiServDebito As Double = 0, _
            Optional ByVal pnComiCliRecaudo As Double = 0, Optional ByVal pnComiEmiteCheque As Double = 0, Optional ByVal psCodOpeEmiteCheque As CaptacOperacion = 0, Optional ByVal psMovNroComEmiChe As String = "") As Double
            'Se agrego la variable psNumTarj Add By Gitu 04-05-2010
            'ALPA 20081009***************************************************
            '***Parametro pnMedioRetiro agregado por ELRO el 20130723, según TI-ERS079-2013
            '*** RIRO 20131102 SEGUN "CAMBIOS EN PODERES", se agrego parametro "psRegla"
            '*** RIRO20131212 ERS137 nComisionTranf, sMovNroCom, sNomTitular, nComRetTransVB
            '*** FRHU 20150126 ERS048-2014 Se agrego pnConcepto y pnMovNroVistoElec
            'JUEZ 20150217 Se agregó pnComiServDebito y pnComiCliRecaudo
            'CTI4 ERS0112020 Add: pnComiEmiteCheque,psCodOpeEmiteCheque,psMovNroComEmiChe
Dim lnOperacion As CaptacOperacion
Dim lnMonto As Double


Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
Dim nSaldoInac As Double
Dim dUltMov As Date
Dim bInactiva As Boolean, bTrans As Boolean, bInmovilizada As Boolean
Dim nNumExtracto As Long, nDiasTranscurridos As Long, i As Long
Dim nExtracto As Long, nMovNro As Long
Dim sMsgOpe As String, sCodUser As String
Dim dFecSis As Date
Dim sConceptoDesc As String 'FRHU 20150126 ERS048-2014
Dim oConcepto As New COMDConstantes.DCOMConstantes 'FRHU 20141203 ERS048-2014
Dim oCon As COMDConstSistema.NCOMConstSistema
Set oCon = New COMDConstSistema.NCOMConstSistema
Dim lnMontoCV As Currency
Dim lnSaldoCont As Double
Dim lnSaldoDisp As Double
Dim bImpreSaldos As Boolean
Dim bMaxOpeRet As Boolean
Dim nSumaComiRet As Double


Dim lsCodCliente As String

Dim oGen As New COMDConstSistema.DCOMGeneral

'Para el manejo del Tipo de Cambio
Dim lnTipCambio As Currency
Dim lnTipCambioV As Currency
Dim lnTipCambioC As Currency

Dim oImpre As New COMFunciones.FCOMImpresion
Dim nComisionesRetiro As Double

Dim pnTipoITF As Integer

Dim nOpeTarj As Integer 'Add by GITU 2012-03-28

'ande ERS021-2018 20180430 campaña mundial
Dim cDatosCamp As String
If Left(psMensajeValidacion, 1) = "#" And Right(psMensajeValidacion, 1) = "&" Then
    cDatosCamp = psMensajeValidacion
    psMensajeValidacion = ""
End If

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
bTrans = False

Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

Dim lsrt As New ADODB.Recordset
'Obtiene los datos para el calculo
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
Set lsrt = clsMant.GetProductoPersona(sCuenta)
Set clsMant = Nothing

lsCodCliente = lsrt("cPersCod")

nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")
bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
bInmovilizada = IIf(rsCta("bInmovilizada") = 0, False, True)

nExtracto = rsCta("nTransacc") + 1
rsCta.Close
Set rsCta = Nothing

'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento


On Error GoTo ErrGraba

If Not pCon Is Nothing Then
    clsCap.SetConexion pCon
    clsCap.bTransaccion = True
    bTransaccion = True
End If


If Not bTransaccion Then clsCap.dbCmact.BeginTrans
bTrans = True

Randomize

For i = 0 To Rnd(2000) * 1000
Next i

'CTI4 ERS0112020
Dim nMontoTemp As Double
nMontoTemp = nMonto
If pnComiEmiteCheque <> 0 And psCodOpeEmiteCheque = gComisionEmisionChequeCargoCta Then nMontoTemp = nMontoTemp + pnComiEmiteCheque
'CTI4 end

' RIRO20131212 ERS137 - Se agregó nComisionTranf
'If Not ValidaSaldoCuenta(sCuenta, nMonto, , pnComiRetOtraAge, pnComiRetxMaxOpe, , IIf(nComRetTransVB = 0, nComisionTranf, 0)) Then 'Valida el saldo de la cuenta nuevamente 'Comentado CTI4 ERS0112020
If Not ValidaSaldoCuenta(sCuenta, nMontoTemp, , pnComiRetOtraAge, pnComiRetxMaxOpe, , IIf(nComRetTransVB = 0, nComisionTranf, 0)) Then  'CTI4 ERS0112020: Valida el saldo de la cuenta nuevamente
    clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox "Cuenta NO Posee Saldo Suficiente", vbInformation, "Aviso"
    psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente o Estado es diferente a Activa"
    CapCargoCuentaAho = 0
    Exit Function
End If

If bActivaCta Then
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
End If

'If Not ValidaSaldoCuenta(sCuenta, nMonto, , pnComiRetOtraAge, pnComiRetxMaxOpe, pnComRetVB, IIf(nComRetTransVB = 0, nComisionTranf, 0)) Then 'Valida el saldo de la cuenta nuevamente 'Comentado CTI4 ERS0112020
If Not ValidaSaldoCuenta(sCuenta, nMontoTemp, , pnComiRetOtraAge, pnComiRetxMaxOpe, pnComRetVB, IIf(nComRetTransVB = 0, nComisionTranf, 0)) Then  'CTI4 ERS0112020 Valida el saldo de la cuenta nuevamente
    clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente"
    CapCargoCuentaAho = 0
    Exit Function
End If

'----------------------------------------

'Calcula los intereses
nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
If nDiasTranscurridos < 0 Then
   nDiasTranscurridos = 0
End If
nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
dUltMov = DateAdd("d", -1, dFecSis)
nSaldoCnt = nSaldoCnt - nMonto

If Not bTransaccion Then clsCap.AgregaMov sMovNro, nOperacion, sGlosa 'JUEZ 20131212
nMovNro = clsCap.GetnMovNro(sMovNro)
pnMovNro = nMovNro
clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
nSaldoDisp = nSaldoDisp - nMonto

lnSaldoDisp = nSaldoDisp
lnSaldoCont = nSaldoCnt

If pbITFAplica And pnITFValor > 0 Then
    If pbITFAsumido Then
       clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, bNumExtracto
        clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
        clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFAsumido, pnITFValor
    Else
    
        If psITFOperacion = gITFCobroEfectivo Then 'cuando se cobra en efectivo
            pnTipoITF = 1
            clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, bNumExtracto
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
        Else
            pnTipoITF = 2
            clsCap.ActualizaCargoCaptacion sCuenta, nMonto + pnITFValor, nMonto + pnITFValor, nIntGanado, dUltMov, sMovNro, bNumExtracto
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor, psRegla:=psRegla
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
        End If
    End If
Else
    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, bNumExtracto
End If

'Add By Gitu 2011-08-29 cobro de comision por operacion sin Tarjeta
If pnComRetVB <> 0 Then
    If psCodCarVB = "300627" Then 'Cobro de Comision con cargo a cuenta
        clsCap.ActualizaCargoCaptacion sCuenta, pnComRetVB, pnComRetVB, 0, dUltMov, sMovNro, bNumExtracto
        'clsCap.AgregaMovCap nMovNro, psCodCarVB, sCuenta, pnComRetVB, nSaldoDisp - pnComRetVB, nSaldoCnt - pnComRetVB, psRegla:=psRegla 'JUEZ 20141006
        clsCap.AgregaMovCap nMovNro, psCodCarVB, sCuenta, pnComRetVB, nSaldoDisp - pnComRetVB - IIf(pbITFAplica, pnITFValor, 0), nSaldoCnt - pnComRetVB - IIf(pbITFAplica, pnITFValor, 0), psRegla:=psRegla
        clsCap.AgregaMovCapDet nMovNro, psCodCarVB, sCuenta, gConcRetSinTarj, pnComRetVB
'    Else
'        'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, bNumExtracto
'        clsCap.AgregaMovCap nMovNro, psCodCarVB, sCuenta, pnComRetVB, nSaldoDisp, nSaldoCnt
'        clsCap.AgregaMovCapDet nMovNro, psCodCarVB, sCuenta, gConcRetSinTarj, pnComRetVB
    End If
End If
'End Gitu

'CTI4 ERS0112020***
If pnComiEmiteCheque <> 0 Then
    If psCodOpeEmiteCheque = gComisionEmisionChequeCargoCta Then
        clsCap.ActualizaCargoCaptacion sCuenta, pnComiEmiteCheque, pnComiEmiteCheque, 0, dUltMov, sMovNro, bNumExtracto
        clsCap.AgregaMovCap nMovNro, psCodOpeEmiteCheque, sCuenta, pnComiEmiteCheque, nSaldoDisp - pnComiEmiteCheque - IIf(pbITFAplica And psITFOperacion = gITFCobroCargo, pnITFValor, 0), nSaldoCnt - pnComiEmiteCheque - IIf(pbITFAplica And psITFOperacion = gITFCobroCargo, pnITFValor, 0), psRegla:=psRegla
        clsCap.AgregaMovCapDet nMovNro, psCodOpeEmiteCheque, sCuenta, gConcComEmisionCheque, pnComiEmiteCheque
    ElseIf psCodOpeEmiteCheque = gComisionEmisionChequeEfectivo Then
        Dim nMovNroCom As Long
        clsCap.AgregaMov psMovNroComEmiChe, psCodOpeEmiteCheque, "COMISIÓN POR EMISIÓN DE CHEQUE", gMovEstContabNoContable, gMovFlagVigente
        nMovNroCom = clsCap.GetnMovNro(psMovNroComEmiChe)
        clsCap.AgregaMovOpeVarias nMovNroCom, pnComiEmiteCheque, "", "", pnMoneda, psCodOpeEmiteCheque
        clsCap.AgregaMovGasto nMovNroCom, "", ""
        clsCap.AgregaMovRef nMovNro, nMovNroCom
    End If
End If
'End CTI4

' *** COBRO DE COMISION X RETIROS  ***
nComisionesRetiro = pnComiRetOtraAge + pnComiRetxMaxOpe

If nComisionesRetiro <> 0 Then
     clsCap.ActualizaCargoCaptacion sCuenta, nComisionesRetiro, nComisionesRetiro, 0, dUltMov, sMovNro, bNumExtracto
     'Modificado by JACA 20111029
     clsCap.AgregaMovCap nMovNro, gAhoRetComision, sCuenta, nComisionesRetiro, nSaldoDisp - pnITFValor - nComisionesRetiro - pnComRetVB, nSaldoCnt - pnITFValor - nComisionesRetiro - pnComRetVB, psRegla:=psRegla
     If pnComiRetOtraAge <> 0 Then
        'Comentado by JACA 20111029***************************************
            'If pnComiRetxMaxOpe <> 0 Then
            '    pnComiRetOtraAge = pnComiRetOtraAge + pnComiRetxMaxOpe
            '    bMaxOpeRet = True
            'End If
            'clsCap.AgregaMovCap nMovNro, gAhoRetComision, sCuenta, pnComiRetOtraAge, nSaldoDisp - pnITFValor - pnComiRetOtraAge, nSaldoCnt - pnITFValor - pnComiRetOtraAge
        'JACA END********************************************************
        clsCap.AgregaMovCapDet nMovNro, gAhoRetComision, sCuenta, gConcOpeRetOtraAge, pnComiRetOtraAge
     End If
     'If bMaxOpeRet = False Then Comentado by JACA 20111025
        
    If pnComiRetxMaxOpe <> 0 Then
       'Comentado by JACA 20111029***************************************
            'If bMaxOpeRet = False Then 'JACA 20111025
            '     clsCap.AgregaMovCap nMovNro, gAhoRetComision, sCuenta, pnComiRetxMaxOpe, nSaldoDisp - pnITFValor - pnComiRetxMaxOpe, nSaldoCnt - pnITFValor - pnComiRetxMaxOpe
            'Else
            '     pnComiRetOtraAge = pnComiRetOtraAge - pnComiRetxMaxOpe
            'End If
       'JACA END********************************************************
       clsCap.AgregaMovCapDet nMovNro, gAhoRetComision, sCuenta, gConcOpeRetxMaxOpe, pnComiRetxMaxOpe
    End If
     'End If
End If

' **** RIRO20131212 ERS137 ***
If nOperacion = gAhoRetTransf Then

    'clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, nComisionTranf, _
    nSaldoDisp - nComisionesRetiro - nComisionTranf - pnITFValor, _
    nSaldoCnt - nComisionesRetiro - nComisionTranf - pnITFValor, dUltMov, nComRetTransVB 'Comentado CTI4 ERS0112020
    
    'CTI4 ERS0112020
    clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, nComisionTranf, _
    nSaldoDisp - nComisionesRetiro - nComisionTranf - IIf(Not psITFOperacion = gITFCobroEfectivo, pnITFValor, 0), _
    nSaldoCnt - nComisionesRetiro - nComisionTranf - IIf(Not psITFOperacion = gITFCobroEfectivo, pnITFValor, 0), dUltMov, nComRetTransVB
    'CTI4 end

End If
' **** FIN RIRO **************

'JUEZ 20150217 Comision Servicio debito Automatico ***********
If nOperacion = gAhoCargoCtaPagoServ Then
    If pnComiServDebito > 0 Then
        clsCap.ActualizaCargoCaptacion sCuenta, pnComiServDebito, pnComiServDebito, 0, dUltMov, sMovNro, bNumExtracto
        clsCap.AgregaMovCap nMovNro, gAhoCargoComisionServDebitoAuto, sCuenta, pnComiServDebito, nSaldoDisp - pnComiServDebito - IIf(pbITFAplica, pnITFValor, 0), nSaldoCnt - pnComiServDebito - IIf(pbITFAplica, pnITFValor, 0)
        clsCap.AgregaMovCapDet nMovNro, gAhoCargoComisionServDebitoAuto, sCuenta, gConcCapital, pnComiServDebito
        clsCap.AgregaMovDoc nMovNro, TpoDocCtaCargoPagoCred, sCuenta, dFecSis
    End If
    If pnComiCliRecaudo > 0 Then
        clsCap.ActualizaCargoCaptacion sCuenta, pnComiCliRecaudo, pnComiCliRecaudo, 0, dUltMov, sMovNro, bNumExtracto
        clsCap.AgregaMovCap nMovNro, gCargoClienteRecaudoCargoCta, sCuenta, pnComiCliRecaudo, nSaldoDisp - pnComiServDebito - pnComiCliRecaudo - IIf(pbITFAplica, pnITFValor, 0), nSaldoCnt - pnComiServDebito - pnComiCliRecaudo - IIf(pbITFAplica, pnITFValor, 0)
        clsCap.AgregaMovCapDet nMovNro, gCargoClienteRecaudoCargoCta, sCuenta, gConcCapital, pnComiCliRecaudo
    End If
End If
'END JUEZ ****************************************************

sConceptoDesc = oConcepto.GetProductoConcepto(pnConcepto) 'FRHU 20150126 ERS048-2014
If sNroDoc <> "" Then
    If nTipoDoc = TpoDocOrdenPago Then 'Si es con orden de pago
        
        Dim nEstadoOP As CaptacOrdPagoEstado
        If nOperacion <> gAhoRetComOrdPagDev Then
            nEstadoOP = gCapOPEstCobrada
        Else
            nEstadoOP = gCapOPEstRechazada
        End If
        If nOperacion = gAhoRetOPCanje Then
            sMsgOpe = "Retiro OP Canje"
        ElseIf nOperacion = gAhoRetOP Then
            sMsgOpe = "Retiro OP"
        ElseIf nOperacion = gAhoOPCertificacion Then
            sMsgOpe = "Certif. OP"
            nEstadoOP = gCapOPEstCertifiCada
        End If
        
        clsCap.AgregaCuentaDocumento sCuenta, nTipoDoc, sNroDoc, Right(sCodIF, 13), sMovNro, nMovNro, nMonto, nEstadoOP
    End If
Else
    If nOperacion = gAhoDctoEmiOP Then
        sMsgOpe = "Retiro Emisión OP"
    ElseIf nOperacion = gAhoRetTransf Then
        'sMsgOpe = "Retiro Transferencia" 'Comentado CTI4 ERS0112020
        sMsgOpe = "Monto a  Transf." 'CTI4 ERS0112020
    ElseIf nOperacion = gAhoRetEfec Then
        sMsgOpe = "Retiro Efectivo"
    ElseIf nOperacion = gAhoRetRetencionJudicial Then
        sMsgOpe = "Retiro Retención Jud."
    ElseIf nOperacion = gAhoRetDuplicadoTarj Then
        sMsgOpe = "Retiro Dup.Tarj."
    ElseIf nOperacion = gAhoRetComServHidrandina Then
        sMsgOpe = "Retiro Serv Hidrandina"
    ElseIf nOperacion = gAhoRetComServSEDALIB Then
        sMsgOpe = "Retiro Serv Sedalib"
    ElseIf nOperacion = gAhoRetComServEDELNOR Then
        sMsgOpe = "Retiro Serv Edelnor"
    ElseIf nOperacion = gAhoRetEmiChq Then
        'sMsgOpe = "Retiro Emisión Cheque" 'Comentado CTI4 ERS0112020
        sMsgOpe = "Monto Cheque"
    ElseIf nOperacion = gAhoRetEmiChqCanjeOP Then
        sMsgOpe = "Ret Emi.Chq Canje OP"
    ElseIf nOperacion = gAhoDctoEmiExt Then
        sMsgOpe = "Comision Extracto Cuenta"
    ElseIf nOperacion = gAhoRetComOPCanje Then    'MADM 20101115
        sMsgOpe = "Comisión Retiro Orden Pago Canje"
    ElseIf nOperacion = gAhoConsSaldo Then 'JUEZ 20151229
        sMsgOpe = "Descuento Consulta Saldos"
    ElseIf nOperacion >= 200331 And nOperacion <= 200357 Then
        sMsgOpe = Trim(sOPedesc)
    'JUEZ 20131212 **********************************
    ElseIf nOperacion = gAhoCargoCtaApert Then
        sMsgOpe = "Cargo Cta. por Apertura"
    ElseIf nOperacion = gAhoCargoCtaAumCapPF Then
        sMsgOpe = "Cargo Cta. por Aum Cap PF"
    ElseIf nOperacion = gAhoCargoAfilSegTarjeta Then 'JUEZ 20140711
        sMsgOpe = "Cargo Afiliacion Seg. Tarj."
    ElseIf nOperacion = gCapNotaDeCargo Then 'FRHU 20150126 ERS048-2014
        sMsgOpe = sConceptoDesc
    End If
    'END JUEZ ***************************************
    
End If

If psNumTarj = "" Then
    nOpeTarj = 0
Else
    nOpeTarj = 1
End If

clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt, nOpeTarj, psNumTarj, psRegla
clsCap.ActualizadUltContactoAho sCuenta, dFecSis

If bInmovilizada Then
    If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
        clsCap.AgregaMovCap nMovNro, gAhoEstInmovAct, sCuenta, nSaldoInac, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInmovilizadaAct sCuenta
        clsCap.ActualizaInactivaAct sCuenta
    End If
End If

If bInactiva And Not bInmovilizada Then
    clsCap.AgregaMovCap nMovNro, gAhoEstInacAct, sCuenta, nSaldoInac, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
    clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
    clsCap.ActualizaInactivaAct sCuenta
End If

'FRHU 20150126 ERS048-2014
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
'If nOperacion = gCapNotaDeCargo Then
If nOperacion = gCapNotaDeCargo Or nOperacion = gAhoCargoCobroComDiversasAho Then 'JUEZ 20150930
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, CStr(pnConcepto), nMonto
Else
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
End If
If pnMovNroVistoElec <> 0 Then
    clsCap.AgregaMovRef nMovNro, pnMovNroVistoElec
End If
'FIN FRHU 20150126

If sCodCmac <> "" Then
    clsCap.AgregaMovCMAC nMovNro, sCodCmac, CLng(Mid(sCuenta, 9, 1)), nOperacion, nMonto
End If
If nOperacion = gAhoRetTransf Or nOperacion = gAhoRetEmiChq Then
    clsCap.AgregaMovTranferBanco nMovNro, sCodIF, psCtaBanco, Mid(sCuenta, 9, 1), sNomTitular

    If pnMoneda <> Mid(sCuenta, 9, 1) Then
        'GetTipCambio dFecSis
        lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
        lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
        lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
        
        If Mid(sCuenta, 9, 1) = gMonedaNacional Then
            lnMontoCV = Round((nMonto / lnTipCambioV) * lnTipCambio, 2)
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
            If lnTipCambioV > lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
            End If
        Else
            lnMontoCV = Round(nMonto * lnTipCambio, 2)
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
            If lnTipCambioC < lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioC, 2))
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioC, 2))
            End If
        End If
    End If
        
End If

clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

'If sPersLavDinero <> "" Then
''If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
''    'By Capi 18022008
''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''    'ALPA 20081009***************************************************************************
''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
''    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
''    '****************************************************************************************
''End If

'************************
'***Agregado por ELRO el 20130723, según TI-ERS079-2013****
If nOperacion = gAhoRetEfec Or nOperacion = gAhoRetOP Then
    clsCap.registrarMedioRetiro pnMedioRetiro, nMovNro
End If

'***Fin Agregado por ELRO el 20130723, según TI-ERS079-2013
If Not bTransaccion Then clsCap.dbCmact.CommitTrans
bTrans = False

'CTI3 ERS082-2018

'If bTransaccion Then clsCap.dbCmact.CommitTrans: clsCap.dbCmact.BeginTrans
'bTrans = True
'----------------------

CapCargoCuentaAho = nSaldoCnt

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe
sTipApe = "RETIRO AHORROS"
If nOperacion = gCapNotaDeCargo Then sTipApe = "NOTA DE CARGO" 'FRHU 20150126 ERS048-2014
Dim clsTit As NCOMCaptaGenerales
Set clsTit = New NCOMCaptaGenerales

sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsTit = Nothing


'If pbITFAplica And pnITFValor > 0 Then
'    If pbITFAsumido Then
'        clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, bNumExtracto
'        clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
'        clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFAsumido, pnITFValor
'    Else
'        If psITFOperacion = gITFCobroEfectivo Then
'            clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, bNumExtracto
'            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
'            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
'        Else
'            clsCap.ActualizaCargoCaptacion sCuenta, nMonto + pnITFValor, nMonto + pnITFValor, nIntGanado, dUltMov, sMovnro, bNumExtracto
'            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor
'            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
'        End If
'    End If
'Else
'    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, bNumExtracto
'End If


If pbITFAplica And pnITFValor > 0 And pbITFAsumido = False Then
    
        If (Val(psITFOperacion) = gITFCobroCargo Or Val(psITFOperacion) = gITFCobroCMACCargo) Then
            nSaldoDisp = nSaldoDisp - pnITFValor
            nSaldoCnt = nSaldoCnt - pnITFValor
            
        End If
End If

If nComisionesRetiro <> 0 Then
    nSaldoDisp = nSaldoDisp - nComisionesRetiro
    nSaldoCnt = nSaldoCnt - nComisionesRetiro
End If

'Add By Gitu 2011-08-29 cobro de comision por operacion sin Tarjeta
If pnComRetVB <> 0 And psCodCarVB = "300627" Then 'Cobro de Comision con cargo a cuenta
    nSaldoDisp = nSaldoDisp - pnComRetVB
    nSaldoCnt = nSaldoCnt - pnComRetVB
End If
'End Gitu

'CTI4 ERS0112020
If pnComiEmiteCheque <> 0 And psCodOpeEmiteCheque = gComisionEmisionChequeCargoCta Then
    nSaldoDisp = nSaldoDisp - pnComiEmiteCheque
    nSaldoCnt = nSaldoCnt - pnComiEmiteCheque
End If
If nComisionTranf <> 0 And nOperacion = gAhoRetTransf And nComRetTransVB = 0 Then
    nSaldoDisp = nSaldoDisp - nComisionTranf
    nSaldoCnt = nSaldoCnt - nComisionTranf
End If
'CTI4 end

If sMsgOpe = "" Then sMsgOpe = clsCap.GetCaptaOperacion(Trim(Str(nOperacion)))
sMsgOpe = Left(sMsgOpe, 28) 'JUEZ 20150327

'Do
    If sNroDoc <> "" Then
        Select Case nTipoDoc
            Case TpoDocOrdenPago
                If sCodCmac <> "" Then
                    sTipApe = "RETIRO AHORROS CMACMAYNAS"
                    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , False, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU)
                Else
                    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , False, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU) 'ande ers 021-2018 agregué cDatosCamp
                End If
        End Select
    Else
        If sCodCmac <> "" Then
            sTipApe = "RETIRO AHORROS CMACMAYNAS"
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , True, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, , , , , , , , , , nComisionTranf) 'RIRO20131212 ERS137
        Else
            'FRHU 20150214 ERS048-2014
            'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , True, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComRetVB, psCodCarVB, , , CStr(nComisionTranf))  'RIRO20131212 ERS137
            If nOperacion = gCapNotaDeCargo Then
                psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , False, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComRetVB, psCodCarVB, , , CStr(nComisionTranf))  'RIRO20131212 ERS137
            ElseIf nOperacion = gAhoRetEmiChq Then 'CTI4 ERS0112020
                'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCMAC, , , bImpreSaldos, CStr(nOperacion), , , , , , , , True, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComiEmiteCheque, psCodOpeEmiteCheque, , , CStr(nComisionTranf)) 'Comentado CTI4 ERS0112020
                psImpBoleta = psImpBoleta & ImprimeBoletaNew("RETIRO POR EMISION DE CHEQUE", oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , True, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComiEmiteCheque, psCodOpeEmiteCheque, , , CStr(nComisionTranf)) 'CTI4 ERS0112020
            ElseIf nOperacion = gAhoRetTransf Then 'CTI4 ERS0112020
                psImpBoleta = psImpBoleta & ImprimeBoletaNew("RETIRO POR TRANSFERENCIA", oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , True, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComRetVB, psCodCarVB, , , CStr(nComisionTranf), nMovNro)
            Else
                psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, False, False, , , , True, , , cDatosCamp, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , bImpreSaldos, CStr(nOperacion), , , , , , , , True, pnTipoITF, CDbl(pnITFValor), True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComRetVB, psCodCarVB, , , CStr(nComisionTranf))  'RIRO20131212 ERS137 'ande ers 021-2018 agregué cDatosCamp
            End If
            'FIN FRHU 20150214
        End If
    End If
   
' COMENTADO TEMPORAL
'    If pbITFAplica And pnITFValor > 0 Then
'        If pbITFAsumido Then
'            If psItfOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
'            End If
'        Else
'            If psItfOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser, bImpreSaldos, lnSaldoDisp, lnSaldoCont, CStr(nOperacion))
'            End If
'        End If
'    End If
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

Exit Function
ErrGraba:
    If bTrans And Not bTransaccion Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
    End If
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION", "Error"
    'MsgBox "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ERROR:" & Err.Description, vbOKOnly + vbInformation, "AVISO"
    CapCargoCuentaAho = 0
End Function



Public Function CapCargoCuentaCTS(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal sGlosa As String, _
            Optional nTipoDoc As TpoDoc = TpoDocNotaCargo, Optional sNroDoc As String = "", _
            Optional sCodIF1 As String = "", Optional bNumExtracto As Boolean = True, _
            Optional sCodCmac As String = "", Optional sNomCmac As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional ByVal sBenPersLavDinero As String = "", _
            Optional sCodIF As String = "", Optional psCtaBanco As String = "", Optional pnMoneda As Moneda = gMonedaNacional, _
            Optional nIntaRet As Double, Optional nPorInta As Double, Optional nPorDisp As Double, _
            Optional nPorIntaCta As Double, Optional nPorDispCta As Double, Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional pbImpTMU As Boolean = False, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0, _
            Optional pnComRetVB As Double = 0, Optional psCodRetSinTarj As String = "", _
            Optional ByVal pnMedioRetiro As Integer = 0, Optional ByVal psRegla As String = "", Optional ByVal nComision As Double = 0, _
            Optional ByVal sMovNroCom As String = "", Optional ByVal sNomTitular As String = "", Optional ByVal nComRetTransVB As Integer = 0, _
            Optional bTransaccion As Boolean = False, Optional pCon As ADODB.Connection = Nothing, _
            Optional psNumTarj As String = "", _
            Optional ByVal pnComiServDebito As Double = 0, _
            Optional ByVal pnComiCliRecaudo As Double = 0, _
            Optional ByVal pnConcepto As Long = 0, Optional ByVal pnComiRetOtraAge As Double = 0, Optional pnComiRetxMaxOpe As Double = 0) As Double
            '*** RIRO 20131102 SEGUN "CAMBIOS EN PODERES", se agrego parametro "psRegla"
            '*** RIRO 20131212 ERS137 nComRetTransVB
            'JUEZ 20140710 Se agregó bTransaccion,pCon
            'RECO20141127 se agrego psNumTarj
            'JUEZ 20150217 Se agregó pnComiServDebito y pnComiCliRecaudo
            'JUEZ 20150930 Se agregó pnConcepto
            'APRI20190109 ERS077-2018 Add pnComiRetOtraAge, pnComiRetxMaxOpe
             
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim nSaldRetiro As Double, nIntRetiro As Double, nIntGanadoRet As Double
    Dim dUltMov As Date
    Dim bTrans As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long, i As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String, nSaldEfectivo As Double
    Dim dFecSis As Date
    Dim rsCtaSueldos As ADODB.Recordset '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nTotalSaldos As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nTotalSueldos As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nExcedente As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nTpoPrograma As Integer 'JUEZ 20130816
    Dim bCeseLaboral As Boolean 'JUEZ 20140319
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False

    Dim oImpre As New COMFunciones.FCOMImpresion

    Dim oGen As New COMDConstSistema.DCOMGeneral

    'Para el manejo del Tipo de Cambio
    Dim lnTipCambio As Currency
    Dim lnTipCambioV As Currency
    Dim lnTipCambioC As Currency

    Dim lnMontoCV As Currency
    Dim nMontoMN As Double 'JUEZ 20130726
    Dim nSaldRetiro1 As Double, nDU01 As Double 'APRI20200415 POR COVID-19
    'Obtiene los datos para el cálculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = Round(rsCta("nSaldoDisp"), 2)
    nSaldoCnt = Round(rsCta("nSaldo"), 2)
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    nSaldRetiro = Round(rsCta("nSaldRetiro"), 2)
    nSaldEfectivo = Round(rsCta("nSaldoDisp"), 2)
    nIntRetiro = rsCta("nIntSaldo")
    nExtracto = rsCta("nTransacc") + 1
    'APRI20200415 POR COVID-19
    nSaldRetiro1 = Round(rsCta("nSaldRetiro1"), 2)
    nDU01 = Round(rsCta("nDU01"), 2)
    'END APRI
    '***Agregado por ELRO el 20130118, según TI-ERS031-2013****
    nPorDisp = rsCta("nPorDisp")
    '***FinAgregado por ELRO el 20130118, según TI-ERS031-2013
    nTpoPrograma = rsCta("nTpoPrograma") 'JUEZ 20130816
    bCeseLaboral = rsCta("bCeseLaboral") 'JUEZ 20140319
    nDU01 = rsCta("nDU01") 'APRI20200415 POR COVID-19
    rsCta.Close
    Set rsCta = Nothing

    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    'JUEZ 20140710 **********************
    'clsCap.dbCmact.BeginTrans
    'bTrans = True
    If Not pCon Is Nothing Then
        clsCap.SetConexion pCon
        clsCap.bTransaccion = True
        bTransaccion = True
    End If
    
    If Not bTransaccion Then clsCap.dbCmact.BeginTrans
    bTrans = True
    'END JUEZ ***************************

    Randomize
    For i = 0 To Rnd(2000) * 1000
    Next i

    'RIRO20131212 ERS137 - Se agrego nComision
    'If Not ValidaSaldoCuenta(sCuenta, nMonto, nOperacion, , , pnComRetVB, IIf(nComRetTransVB = 0, nComision, 0)) Then 'Valida el saldo de la cuenta nuevamente
    If Not ValidaSaldoCuenta(sCuenta, nMonto, nOperacion, pnComiRetOtraAge, pnComiRetxMaxOpe, pnComRetVB, IIf(nComRetTransVB = 0, nComision, 0)) Then 'APRI20190109 ERS077-2018
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        'MsgBox "Cuenta NO Posee Saldo Suficiente", vbInformation, "Aviso"
        psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente"
        CapCargoCuentaCTS = -1
        Exit Function
    End If

    sGlosa = sGlosa & "Cargo Cuenta = " & sCuenta

    'Calcula los intereses
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nDiasTranscurridos < 0 Then
       nDiasTranscurridos = 0
    End If
    'Mody By GITU 17-09-2010 se cambio la formula del simple al compuesto para calcular
    'el interes de las cuentas CTS
    'nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)
    'End GITU
    nIntGanadoRet = GetInteres(nSaldRetiro, nTasa, nDiasTranscurridos, TpoCalcIntSimple)


    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt - nMonto
    nSaldoDisp = nSaldoDisp - nMonto
    
    '***Agregado por ELRO el 20130118, según TI-ERS031-2013****
    Set rsCtaSueldos = New ADODB.Recordset
    Set rsCtaSueldos = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'Obtiene valores en Soles
    nTotalSaldos = rsCtaSueldos!TotalSaldos
    nTotalSueldos = rsCtaSueldos!TotalSueldos
    Set rsCtaSueldos = Nothing
    
    nMontoMN = nMonto * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'JUEZ 20130726 Saldo Retiro por Institucion y Persona
    
    'nExcedente = (nTotalSaldos - nMonto) - nTotalSueldos
    'nExcedente = (nTotalSaldos - IIf(nTpoPrograma = 2, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20130726 Si nTpoPrograma es NO ACTIVO (2) No resta saldo retiro
    nExcedente = (nTotalSaldos - IIf(nTpoPrograma = 2 And bCeseLaboral, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20140319 Si tiene Cese Laboral no resta saldo retiro
    'APRI20200326 CULPA DEL COVID-19
'    Dim nSaldRetiroOld As Double
'    nSaldRetiroOld = nSaldRetiro * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes))
    'END APRI
    If nExcedente > 0 Then
       nSaldRetiro = nExcedente * (nPorDisp / 100)
    Else
       nSaldRetiro = 0
    End If
    'APRI20200326 CULPA DEL COVID-19
'    Dim nSaldRetiroNew As Double
'    nSaldRetiroNew = 0
'    If dFecSis <= "2020-06-10" And nOperacion <> "220303" Then
'            nSaldRetiroNew = nSaldRetiroOld - nMontoMN
'    End If
'    nSaldRetiro = IIf(nSaldRetiro >= nSaldRetiroNew, nSaldRetiro, nSaldRetiroNew)
    'END APRI
    '***Fin Agregado por ELRO el 20130118, según TI-ERS031-2013

    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True

    If nOperacion <> "220303" Then
        '***Modificado por ELRO el 20130118, según TI-ERS031-2013****
        'clsCap.ActualizaCargoCTS sCuenta, nMonto, nIntGanadoRet
        'clsCap.ActualizaCargoCTS sCuenta, nSaldRetiro, nIntGanadoRet
        '***Fin Modificado por ELRO el 20130118, según TI-ERS031-2013
        'APRI20200415 POR COVID-19
        Dim nMonto2 As Double
        nMonto2 = nMonto - nSaldRetiro1
         If nMonto2 > 0 Then
            If nDU01 > 0 And nDU01 >= nMonto2 Then
                nDU01 = nDU01 - nMonto2
                nMonto2 = 0
            ElseIf nDU01 > 0 And nDU01 < nMonto2 Then
                nMonto2 = nMonto2 - nDU01
                nDU01 = 0
            End If
          End If
        'END APRI
        'clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntGanadoRet 'JUEZ 20130726
        clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntGanadoRet, nDU01 'APRI20200415 POR COVID-19
    Else
        clsCap.ActualizaCargoCTS sCuenta, nMonto - nIntaRet, nIntGanadoRet
    End If

    If sNroDoc <> "" Then
        If nTipoDoc = TpoDocNotaCargo Then
            sMsgOpe = "Retiro NC"
        End If
    Else
        If nOperacion = gCTSRetEfec Then
            sMsgOpe = "Retiro Efectivo"
        ElseIf nOperacion = gCTSRetTransf Then
            sMsgOpe = "Retiro Transferencia Bcos"
        ElseIf nOperacion = "220303" Then
            sMsgOpe = "Retiro LEY 28461"
        End If
    End If

    'clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    If Not bTransaccion Then clsCap.AgregaMov sMovNro, nOperacion, sGlosa 'JUEZ 20140710
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010***********************************
    pnMovNro = nMovNro
    '************************************************
    
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
    'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, IIf(nOperacion = gCTSCargoCobroComDiversasAho, pnConcepto, gConcCapital), nMonto 'JUEZ 20150930
    
    'JUEZ 20141027 **********************************
    'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvision, nIntGanado
    'If nOperacion <> gCTSCargoAfilSegTarjeta Then
    'If nOperacion <> gCTSCargoAfilSegTarjeta And nOperacion <> gCTSCargoCobroComDiversasAho And nOperacion <> gCTSDctoEmiExt And nOperacion <> gCTSConsSaldo Then 'JUEZ 20150930
    'COMENTADO POR APRI20180926 MEJORA CORREO-MARI 21/09/2018
    'If nOperacion <> gCTSCargoAfilSegTarjeta And nOperacion <> gCTSCargoCobroComDiversasAho And nOperacion <> gCTSDctoEmiExt And nOperacion <> gCTSConsSaldo And nOperacion <> gCTSCargoAfilSegSepelio Then 'RECO20160322
    '    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvision, nIntGanado
    'End If
    'END APRI
    'END JUEZ ***************************************
    
    If nOperacion = gCTSRetTransf Then
        clsCap.AgregaMovTranferBanco nMovNro, sCodIF, psCtaBanco, Mid(sCuenta, 9, 1), sNomTitular

        If pnMoneda <> Mid(sCuenta, 9, 1) Then
            'GetTipCambio dFecSis
            lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
            lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
            lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
                
            If Mid(sCuenta, 9, 1) = gMonedaNacional Then
                lnMontoCV = Round((nMonto / lnTipCambioV) * lnTipCambio, 2)
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
                End If
            Else
                lnMontoCV = Round(nMonto * lnTipCambio, 2)
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioC, 2))
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioC, 2))
                End If
            End If
        End If
    End If
    
    'Add By GITU 2011-08-29
    If pnComRetVB <> 0 Then
        If psCodRetSinTarj = "300627" Or psCodRetSinTarj = "300629" Then 'Cargo a Cuenta de comision por retiro sin tarjeta
            clsCap.ActualizaCargoCaptacion sCuenta, pnComRetVB, pnComRetVB, 0, dUltMov, sMovNro, True
            clsCap.ActualizaCargoCTS sCuenta, pnComRetVB, nIntGanadoRet

            clsCap.AgregaMovCap nMovNro, psCodRetSinTarj, sCuenta, pnComRetVB, nSaldoDisp - pnComRetVB, nSaldoCnt - pnComRetVB, psRegla:=psRegla
            clsCap.AgregaMovCapDet nMovNro, psCodRetSinTarj, sCuenta, gConcRetSinTarj, pnComRetVB
            nSaldoDisp = nSaldoDisp - pnComRetVB 'JUEZ 20141006
            nSaldoCnt = nSaldoCnt - pnComRetVB 'JUEZ 20141006
'        Else
'            clsCap.AgregaMovCap nMovNro, psCodRetSinTarj, sCuenta, pnComRetVB, nSaldoDisp, nSaldoCnt
'            clsCap.AgregaMovCapDet nMovNro, psCodRetSinTarj, sCuenta, gConcRetSinTarj, pnComRetVB
        End If
    End If
    'End GITU
    'APRI20190109 ERS077-2018
    Dim nComisionesRetiro As Double
    nComisionesRetiro = pnComiRetOtraAge + pnComiRetxMaxOpe
    If nComisionesRetiro <> 0 Then
         clsCap.ActualizaCargoCaptacion sCuenta, nComisionesRetiro, nComisionesRetiro, 0, dUltMov, sMovNro, bNumExtracto
         clsCap.AgregaMovCap nMovNro, "220319", sCuenta, nComisionesRetiro, nSaldoDisp - nComisionesRetiro - pnComRetVB, nSaldoCnt - nComisionesRetiro - pnComRetVB, psRegla:=psRegla
         If pnComiRetOtraAge <> 0 Then
            clsCap.AgregaMovCapDet nMovNro, "220319", sCuenta, gConcOpeRetOtraAge, pnComiRetOtraAge
         End If

        If pnComiRetxMaxOpe <> 0 Then
           clsCap.AgregaMovCapDet nMovNro, "220319", sCuenta, gConcOpeRetxMaxOpe, pnComiRetxMaxOpe
        End If
        nSaldoCnt = nSaldoCnt - nComisionesRetiro
        nSaldoDisp = nSaldoDisp - nComisionesRetiro
    End If
    'END APRI
    If nOperacion = "220303" Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, 30, nIntaRet
        clsCap.AgregaMovParamCTS nMovNro, 0, nPorInta, nPorDisp
    End If

    If sCodCmac <> "" Then
        clsCap.AgregaMovCMAC nMovNro, sCodCmac, CLng(Mid(sCuenta, 9, 1)), nOperacion, nMonto
    End If

    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

    'If sPersLavDinero <> "" Then
''      ALPA 20081010*****************
''    If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
''        'By Capi 18022008
''        clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''    End If
    If nOperacion = gCTSRetEfec Then
        clsCap.registrarMedioRetiro pnMedioRetiro, nMovNro
    End If
    
    ' RIRO20131220 ***
    If nOperacion = gCTSRetTransf Then
        clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, nComision, _
        nSaldoDisp - nComision, _
        nSaldoCnt - nComision, dUltMov, nComRetTransVB
    End If
    ' END RIRO ***
    
    'JUEZ 20150217 Comision Servicio debito Automatico ***********
    If nOperacion = "220313" Then
        If pnComiServDebito > 0 Then
            clsCap.ActualizaCargoCaptacion sCuenta, pnComiServDebito, pnComiServDebito, 0, dUltMov, sMovNro, bNumExtracto
            clsCap.AgregaMovCap nMovNro, "220314", sCuenta, pnComiServDebito, nSaldoDisp - pnComiServDebito, nSaldoCnt - pnComiServDebito
            clsCap.AgregaMovCapDet nMovNro, "220314", sCuenta, gConcCapital, pnComiServDebito
            clsCap.AgregaMovDoc nMovNro, TpoDocCtaCargoPagoCred, sCuenta, dFecSis
        End If
        If pnComiCliRecaudo > 0 Then
            clsCap.ActualizaCargoCaptacion sCuenta, pnComiCliRecaudo, pnComiCliRecaudo, 0, dUltMov, sMovNro, bNumExtracto
            clsCap.AgregaMovCap nMovNro, "300114", sCuenta, pnComiCliRecaudo, nSaldoDisp - pnComiServDebito - pnComiCliRecaudo, nSaldoCnt - pnComiServDebito - pnComiCliRecaudo
            clsCap.AgregaMovCapDet nMovNro, "300114", sCuenta, gConcCapital, pnComiCliRecaudo
        End If
    End If
    'END JUEZ
    
    '*******************************************************
    'clsCap.dbCmact.CommitTrans
    If Not bTransaccion Then clsCap.dbCmact.CommitTrans 'JUEZ 20140710
    bTrans = False
    '********************************************************
    CapCargoCuentaCTS = nSaldoCnt

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    Dim clsNeg As NCOMCaptaGenerales
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sTipApe = "RETIRO CTS"
    Set clsNeg = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsNeg.GetNombreTitulares(sCuenta))

    Dim psDispImp As String * 39, psIntaImp As String * 39
    Dim psDispCtaImp As String * 39, psIntaCtaImp As String * 39

    'Optional nPorIntaCta As Double, Optional nPorDispCta As Double
    psDispCtaImp = "Disponible Cuenta: " & Format(nPorDispCta, "##0.0000") & "% " & CStr(nSaldRetiro)
    psIntaCtaImp = "Intangible Cuenta: " & Format(nPorIntaCta, "##0.0000") & "% " & CStr(nSaldEfectivo - nSaldRetiro)
    'nIntaRet As Double, Optional nPorInta As Double, Optional nPorDisp
    psDispImp = "Disponible Retiro: " & Format(nPorDisp, "##0.0000") & "% " & CStr(nMonto - nIntaRet)
    psIntaImp = "Intangible Retiro: " & Format(nPorInta, "##0.0000") & "% " & CStr(nIntaRet)


    Set clsNeg = Nothing
    'Do
        If sNroDoc <> "" Then
            'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , , , pbImpTMU)
            'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , , , pbImpTMU, psNumTarj) 'RECO20141127
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, True, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj) 'APRI20190109 ERS077-2018
            
        Else
            If sCodCmac <> "" Then
                sTipApe = "RETIRO CMAC CTS"
                'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, False, , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , , , pbImpTMU, , , , , , , , , , nComision)
                'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, False, , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , , , pbImpTMU, psNumTarj, , , , , , , , , nComision) 'RECO20141127
                psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, False, , , , , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , , , , , nComision) 'APRI20190109 ERS077-2018
            Else
                'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , , , pbImpTMU, , , , , , pnComRetVB, psCodRetSinTarj, , , nComision)
                'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , , , pbImpTMU, psNumTarj, , , , , pnComRetVB, psCodRetSinTarj, , , nComision) 'RECO20141127
                psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, True, False, , , , True, , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , True, , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, psNumTarj, , , , , pnComRetVB, psCodRetSinTarj, , , nComision) 'APRI20190109 ERS077-2018
            End If
        End If
    'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

    Exit Function
ErrGraba:
    If bTrans And Not bTransaccion Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
    End If
    Err.Raise Err.Number, "", Err.Description
    CapCargoCuentaCTS = 0
End Function
Private Function GetTasaMinima(ByVal pnProducto As Integer, ByVal pnMoneda As Integer, ByVal pcOrdPag As String, ByVal pcCodAge As String, ByVal pntasatpo, Optional ByVal bOrdPag As Boolean)
Dim sSql As String, rsTemp As ADODB.Recordset
Dim conex As COMConecta.DCOMConecta
sSql = "select ntasavalor from captactasas "
sSql = sSql & " where nplazoini=0 and NTASAPROD=" & pnProducto & " AND NTASAMON=" & pnMoneda & "  AND CORDPAG='" & pcOrdPag & "' AND CCODAGE='" & pcCodAge & "' "
sSql = sSql & " AND NTASATPO=" & pntasatpo & " and cordpag='" & IIf(bOrdPag = True, "1", "0") & "'"
Set rsTemp = New ADODB.Recordset
Set conex = New COMConecta.DCOMConecta
conex.AbreConexion
rsTemp.CursorLocation = adUseClient
Set rsTemp = conex.CargaRecordSet(sSql)
Set rsTemp.ActiveConnection = Nothing

If rsTemp.EOF And rsTemp.BOF Then
    GetTasaMinima = 0
Else
    GetTasaMinima = rsTemp("ntasavalor")
End If
conex.CierraConexion
rsTemp.Close
Set rsTemp = Nothing
Set conex = Nothing
End Function

Public Function GetSaldoCancelacion(ByVal sCuenta As String, ByVal dFecSis As Date, ByVal sCodAge As String, _
                Optional ByRef nTasaCancelacion As Double = 0, Optional ByRef pnCapital As Double = 0, _
                Optional ByRef pnInteres As Double = 0, Optional ByVal bTasaPactada As Boolean = False, _
                Optional ByRef pnMontoPremio As Double, Optional ByVal bAumCapital As Boolean = False) As Double
                
Dim nProd As Producto
Dim rsProd As New ADODB.Recordset
Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim objPre As COMDCaptaGenerales.DCOMCampanas
Dim nSaldoDisp As Double, nSaldoCnt As Double
Dim nIntAcum As Double, nIntGanado As Double
Dim nTasa As Double
Dim dUltMov As Date
Dim nDiasTranscurridos As Long
Dim nCostPremio As Double
Dim nPlazoParametro As Long
Dim nPlazoCumplido As Long
Dim nTipProgram  As Integer
Dim nPlazoAho As Integer
Dim dApertura As Date
Dim clsDef As NCOMCaptaDefinicion
Dim nTasaDias As Double

Dim rsCta As ADODB.Recordset 'BRGO 20111228

nProd = CLng(Mid(sCuenta, 6, 3))
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Select Case nProd
    Case gCapAhorros, gCapCTS
        
        
        If nProd = gCapAhorros Then
            Set rsProd = clsMant.GetDatosCuentaAho(sCuenta)
        Else
            Set rsProd = clsMant.GetDatosCuentaCTS(sCuenta)
        End If
        Set clsMant = Nothing
        
        nSaldoDisp = rsProd("nSaldoDisp")
        nSaldoCnt = rsProd("nSaldo")
        dUltMov = rsProd("dUltCierre")
        nTasa = rsProd("nTasaInteres")
        nIntAcum = rsProd("nIntAcum")
        dApertura = rsProd("dApertura")
        nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
        nPlazoCumplido = DateDiff("d", dApertura, dFecSis)
        
        If nProd = gCapAhorros Then
            nTipProgram = rsProd("nTpoPrograma")
            nPlazoAho = IIf(IsNull(rsProd("nPlazo")), 0, rsProd("nPlazo"))
        End If
        
        If nProd = gCapAhorros And nTipProgram <> 0 Then
            Set clsDef = New NCOMCaptaDefinicion
            If nTipProgram = 1 Then
                nPlazoParametro = clsDef.GetCapParametro(gPlazoMinCancelNañito)
            ElseIf nTipProgram = 2 Or nTipProgram = 3 Then '*** BRGO 20111221 Se agregó "nTipProgram = 3"
                nPlazoParametro = clsDef.GetCapParametro(gPlazoMinCancelPandero)
            Else
                nPlazoParametro = nPlazoAho
            End If
            If nPlazoCumplido < nPlazoParametro Then
                nTasaDias = clsDef.GetCapTasaInteres(gCapAhorros, CLng(Mid(sCuenta, 9, 1)), gCapTasaNormal, , nSaldoCnt, sCodAge, , nTipProgram)
            Else
                nTasaDias = nTasa
            End If
        Else
            nTasaDias = nTasa
        End If
        
        'nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
        'nIntGanado = GetInteres(nSaldoDisp, nTasaDias, nDiasTranscurridos, TpoCalcIntSimple)
        'JUEZ 20141111 Para calcular con formula compuesta para CTS
        nIntGanado = GetInteres(nSaldoDisp, nTasaDias, nDiasTranscurridos, IIf(nProd = gCapCTS, TpoCalcIntCompuesto, TpoCalcIntSimple))
        GetSaldoCancelacion = nSaldoDisp + nIntAcum + nIntGanado
        pnCapital = nSaldoDisp
        pnInteres = nIntGanado + nIntAcum
        rsProd.Close
        
       Set rsProd = Nothing
    Case gCapPlazoFijo
        
        Dim nIntPagado As Double
        Dim nDias As Long, nPlazo As Long
        Dim dVencimiento As Date, dAperturaReal As Date
        Dim nInt01 As Double, nInt02 As Double, nInt03 As Double
        Dim nTipoTasa As CaptacTipoTasa
        Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
        Dim sValor As String
        Dim nFormaRetiro As Integer
        Dim nTpoPrograma As Integer 'BRGO 20111220
        Dim dUltAct As Date 'BRGO 20111228
        Dim nSaldDisponible As Double 'BRGO 20111228
        Dim i As Integer
        
        Set rsProd = clsMant.GetDatosCuentaPF(sCuenta)
        Set clsMant = Nothing
        nSaldoDisp = rsProd("nSaldoDisp")
        nSaldoCnt = rsProd("nSaldo")
        dApertura = Format(rsProd("dRenovacion"), "dd/MM/yyyy")
        dUltMov = rsProd("dUltCierre")
        nTasa = rsProd("nTasaInteres")
        nIntAcum = rsProd("nIntAcum")
        nIntPagado = rsProd("nIntPag")
        nPlazo = rsProd("nPlazo")
        nTipoTasa = rsProd("nPrdTasaInteres")
        nFormaRetiro = rsProd("nFormaRetiro")
        nTpoPrograma = rsProd("nTpoPrograma") 'BRGO 20111220
'APRI20200730 COMENTÓ CORREO SEOR 30/07/2020
'        Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
'        sValor = clsCap.GetFechaValorChqApePF(sCuenta)
'        Set clsCap = Nothing
'        If sValor <> "" Then
'            dApertura = CDate(sValor)
'        End If
'END APRI
            
        dVencimiento = DateAdd("d", nPlazo, dApertura)
        nPlazoCumplido = DateDiff("d", dApertura, dFecSis)
        Set clsDef = New NCOMCaptaDefinicion
        
'       COMENTADO X POLITICA DE LA EMPRESA AVMM 10-03-2007
'        'Si la tasa es preferencial, la tasa de cancelacion es la misma tasa
'        If nTipoTasa = COMDConstantes.gCapTasaPreferencial Or nTipoTasa = COMDConstantes.gCapTasaEspecial Then
'            nTasaDias = nTasa
'        Else
'            'Cambio para que de acuerdo al parametro (180 días) se aplica tasa de ahorros o tasa pactada
'            nPlazoParametro = clsDef.GetCapParametro(gPlazoMinCancelacion)
'            If nPlazoCumplido < nPlazoParametro Then
'                nTasaDias = clsDef.GetCapTasaInteres(gCapAhorros, CLng(Mid(scuenta, 9, 1)), gCapTasaNormal, , nSaldoCnt, sCodage)
'            Else
'                'nTasaDias = clsDef.GetCapTasaInteres(gCapPlazoFijo, CLng(Mid(sCuenta, 9, 1)), gCapTasaNormal, nPlazoCumplido, nSaldoCnt, sCodage)
'                nTasaDias = nTasa
'            End If
'        End If
        
        'Si es menor del Plazo debe de ser AHO corriente
        'By Capi 19082008 se modifico para tasa pactada
        'If nPlazoCumplido < nPlazo Then
        
        If nPlazoCumplido < nPlazo And Not bTasaPactada And Not bAumCapital Then
            '*** Modificado por BRGO 20111220 Si es PF Premium y menor del Plazo debe ser PF Clásico
            '***Modificado por ELRO el 20120306, según Acta N° 049-2012/TI-D
            'nTasaDias = clsDef.GetCapTasaInteres(IIf(nTpoPrograma = 1, gCapPlazoFijo, gCapAhorros), CLng(Mid(sCuenta, 9, 1)), gCapTasaNormal, IIf(nTpoPrograma = 1, nPlazoCumplido, 0), nSaldoCnt, sCodAge)
            If nPlazoCumplido < 31 And nTpoPrograma = 1 Then
                nTasaDias = clsDef.GetCapTasaInteres(gCapAhorros, CLng(Mid(sCuenta, 9, 1)), gCapTasaNormal, nPlazoCumplido, nSaldoCnt, sCodAge)
            Else
                nTasaDias = clsDef.GetCapTasaInteres(IIf(nTpoPrograma = 1, gCapPlazoFijo, gCapAhorros), CLng(Mid(sCuenta, 9, 1)), gCapTasaNormal, IIf(nTpoPrograma = 1, nPlazoCumplido, 0), nSaldoCnt, sCodAge)
                'Modify by GITU 18-04-2013
                If nTpoPrograma = 1 And nTasaDias > nTasa Then
                    nTasaDias = nTasa
                End If
                'End GITU
            End If
            
            '***Fin Modificado por ELRO el 20120306*************************
        Else
            nTasaDias = nTasa
        End If

        If bTasaPactada Then
            nTasaDias = nTasa
        End If
        
        Set clsDef = Nothing
        nInt01 = 0: nInt02 = 0: nInt03 = 0: nCostPremio = 0
        
        If dVencimiento = dFecSis Then
            nInt01 = nIntAcum
            If nFormaRetiro = 4 Then
                nDias = 0
            Else
                nDias = DateDiff("d", dUltMov, dVencimiento) - 1
            End If
            nInt02 = GetInteres(nSaldoDisp + nIntAcum, nTasa, nDias, TpoCalcIntCompuesto)
            nTasaCancelacion = nTasa
        ElseIf dVencimiento > dFecSis Then
            If bAumCapital Then 'BRGO 20111227
                nInt01 = nIntAcum
                nDias = DateDiff("d", dUltMov, dFecSis) - 1
            'JUEZ 20150121 ***********************************
            ElseIf bTasaPactada And nFormaRetiro = 1 Then
                nInt01 = 0
                nIntPagado = 0
                nDias = DateDiff("d", dUltMov, dFecSis) - 1
            'END JUEZ ****************************************
            Else
                nInt01 = 0
                nDias = nPlazoCumplido
            End If
            '*** Modificado por BRGO para el cálculo de inteses de PF con Cancelación anticipada
            'If nTpoPrograma = 0 Or bAumCapital  Then
            If nTpoPrograma = 0 Or bAumCapital Or (bTasaPactada And nFormaRetiro = 1) Then 'JUEZ 20150121 Se agregó bTasaPactada And nFormaRetiro = 1
                nInt02 = GetInteres(nSaldoDisp + nInt01, nTasaDias, nDias, TpoCalcIntCompuesto) - nIntPagado     'BRGO 20111226 Se cambió "nTasaDias" por "nDias"
                nTasaCancelacion = nTasaDias
            Else
                Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
                Set rsCta = clsMant.GetMovimientosAumCapitalPF(sCuenta)
                If Not rsCta.EOF And Not rsCta.BOF Then
                    If IsNull(rsCta!UltCierreAnt) Then
                        dUltAct = dApertura
                        i = 0
                    Else
                        dUltAct = rsCta!UltCierreAnt
                        i = 1
                    End If
                   
                    While Not rsCta.EOF And Not rsCta.BOF
                        nSaldDisponible = rsCta!nSaldoDisponible
                        nDias = DateDiff("d", dUltAct, rsCta!dFecha) - i
                        nInt02 = nInt02 + GetInteres(nSaldDisponible - rsCta!nMonto + nInt02, nTasaDias, nDias, TpoCalcIntCompuesto)
                        dUltAct = rsCta!dFecha
                        i = 0
                        rsCta.MoveNext
                    Wend
                    nDias = DateDiff("d", dUltAct, dFecSis)
                Else
                    dUltMov = dApertura 'Si no realizó aumento de capital, se calculará el interés desde la última renovación
                    nDias = nPlazoCumplido
                End If
                nInt02 = nInt02 + GetInteres(nSaldoDisp + nInt01 + nInt02, nTasaDias, nDias, TpoCalcIntCompuesto) - nIntPagado
                nTasaCancelacion = nTasaDias
            End If
            '*** END BRGO ******************************************************************
        Else
            nInt01 = nIntAcum
            Set objPre = New COMDCaptaGenerales.DCOMCampanas
            nCostPremio = objPre.GetMontoPremio(sCuenta)
            If DateDiff("d", CDate(dUltMov), CDate(dVencimiento)) >= 1 Then
                nInt02 = GetInteres(nSaldoDisp + nInt01, nTasa, DateDiff("d", CDate(dUltMov), CDate(dVencimiento)) - 1, TpoCalcIntCompuesto)
            Else
                nInt02 = 0
            End If
            nTasaCancelacion = nTasa
            nInt03 = GetInteres(nSaldoDisp + nInt01 + nInt02, nTasa, DateDiff("d", dVencimiento, dFecSis) - 1, TpoCalcIntCompuesto)
        End If
        If Not bAumCapital Then
            nIntGanado = nInt01 + nInt02 + nInt03
        Else
            nIntGanado = nInt02 + nInt03
        End If
        pnCapital = nSaldoDisp
        pnInteres = nIntGanado
        pnMontoPremio = nCostPremio
        GetSaldoCancelacion = nSaldoDisp - nCostPremio + nIntGanado
        rsProd.Close
        Set rsProd = Nothing
End Select
End Function

Public Function TieneChequesValorizacion(ByVal sCuenta As String) As Boolean
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    TieneChequesValorizacion = clsCap.TieneChequesValorizacion(sCuenta)
    Set clsCap = Nothing
End Function
'ALPA 20081009*****************************************************************************
'''Public Sub CapCancelaCuentaAho(ByVal sCuenta As String, ByVal sMovNro As String, _
'''        ByVal sGlosa As String, ByVal nOperacion As CaptacOperacion, _
'''        Optional nEstado As CaptacEstado = gCapEstCancelada, Optional sNomAge As String = "", _
'''        Optional sLpt As String = "", Optional sPersLavDinero As String = "", Optional ByVal psCodCmac As String, _
'''        Optional PbValidaSaldo As Boolean = True, _
'''        Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, _
'''        Optional ByVal sBenPersLavDinero As String = "", Optional ByRef psMensajeValidacion As String = "", _
'''        Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
'''        Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
'''        Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "")
Public Sub CapCancelaCuentaAho(ByVal sCuenta As String, ByVal sMovNro As String, _
        ByVal sGlosa As String, ByVal nOperacion As CaptacOperacion, _
        Optional nEstado As CaptacEstado = gCapEstCancelada, Optional sNomAge As String = "", _
        Optional sLpt As String = "", Optional sPersLavDinero As String = "", Optional ByVal psCodCmac As String, _
        Optional PbValidaSaldo As Boolean = True, _
        Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, _
        Optional ByVal sBenPersLavDinero As String = "", Optional ByRef psMensajeValidacion As String = "", _
        Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
        Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
        Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", _
        Optional pnMovNro As Long = 0, Optional pnMonComVB As Double = 0, Optional psCodRetSinCom As String = "", _
        Optional ByVal pnMedioRetiro As Integer = 0, Optional ByVal psRegla As String = "", Optional ByVal nComision As Double = 0, _
        Optional sCodIF As String = "", Optional ByVal sMovNroCom As String = "", Optional ByVal sCtaBancoTransf As String = "", _
        Optional sTitularTransf As String = "", Optional ByVal nComRetTransVB As Integer = 0)
'***Parametro pnMedioRetiro agregado por ELRO el 20130724, según TI-ERS079-2013
' RIRO20131102 Se agrego parámetro "psRegla"
' RIRO20131226 Se agrego parámetro "nComision,sCodIF,sMovNroCom,sCtaBancoTransf,sTitularTransf"

Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
Dim nMonto As Double
Dim dUltMov As Date
Dim bInactiva As Boolean, bTrans As Boolean, bInmovilizada As Boolean
Dim nNumExtracto As Long, nDiasTranscurridos As Long, i As Long
Dim nExtracto As Long, nMovNro As Long
Dim sMsgOpe As String, sCodUser As String
Dim dFecSis As Date
Dim oCon As COMDConstSistema.NCOMConstSistema
Set oCon = New COMDConstSistema.NCOMConstSistema

Dim oImpre As New COMFunciones.FCOMImpresion
'sMovNro
'ande ERS021-2018 20180430 campaña mundial
Dim cDatosCamp As String
If Left(psMensajeValidacion, 1) = "#" And Right(psMensajeValidacion, 1) = "&" Then
    cDatosCamp = psMensajeValidacion
    psMensajeValidacion = ""
End If
'end ande
dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
bTrans = False
'Obtiene los datos para el calculo
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")

'Format$(clsCap.GetSaldoCancelacion(sCuenta, gdFecSis, psCodAge), "#,##0.00")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")

nIntAcum = rsCta("nIntAcum")
bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
bInmovilizada = IIf(rsCta("bInmovilizada") = 0, False, True)

nExtracto = rsCta("nTransacc") + 1
rsCta.Close
Set rsCta = Nothing
'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
On Error GoTo ErrGraba

'clsCap.dbCmact.BeginTrans
'bTrans = True
'ALPA20130930***
clsCap.dBeginTrans
bTrans = True
'***************
Randomize
For i = 0 To Rnd(2000) * 1000
Next i

'If PbValidaSaldo Then
    'If Not ValidaSaldoCuenta(sCuenta, nMonto) Then 'Valida el saldo de la cuenta nuevamente
    '    clsCap.dbCmact.RollbackTrans
    '    Set clsCap = Nothing
    '    MsgBox "Cuenta NO Posee Saldo Suficiente", vbInformation, "Aviso"
    '    Exit Sub
    'ElseIf TieneChequesValorizacion(sCuenta) Then
    If TieneChequesValorizacion(sCuenta) Then
        'ALPA20130930**************
        clsCap.dRollbackTrans
        'clsCap.dbCmact.RollbackTrans
        '**************************
        Set clsCap = Nothing
        'MsgBox "La Cuenta Tiene cheques en valorizacion", vbInformation, "Aviso"
        psMensajeValidacion = "La Cuenta Tiene cheques en valorizacion"
        pnMovNro = 0
        Exit Sub
    End If
 'End If
'**************

nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
'nMonto = Round(nSaldoCnt + nIntAcum + nIntGanado, 2)
'Mody By Gitu 2011-08-29
If psCodRetSinCom = "300627" Then 'Si la operacion es con cargo a cuenta resta la comision al saldo capital
    nMonto = Format((nSaldoCnt + nIntAcum + nIntGanado) - pnMonComVB, "#,##0.00")
Else
    nMonto = Format(nSaldoCnt + nIntAcum + nIntGanado, "#,##0.00")
End If
'End Gitu
dUltMov = DateAdd("d", -1, dFecSis)
If nOperacion = gAhoCancTransfAct Then
    If bInactiva Then nOperacion = gAhoCancTransfInact
    sMsgOpe = "Cancelación Transferencia"
ElseIf nOperacion = gAhoCancAct Then
    If bInactiva Then nOperacion = 200409
    sMsgOpe = "Cancelación Efectivo"
End If
If sGlosa = "" Then sGlosa = "Cancelación Cuenta = " & sCuenta
clsCap.ActualizadUltContactoAho sCuenta, dFecSis
clsCap.ActualizaCargoCaptacion sCuenta, 0, 0, nIntGanado, dUltMov, sMovNro, True
clsCap.ActualizaEstadoCuenta sCuenta, gCapEstCancelada, dFecSis, sMovNro
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
clsCap.AgregaMov sMovNro, nOperacion, sGlosa
nMovNro = clsCap.GetnMovNro(sMovNro)
'ALPA 20081010*****************************************
pnMovNro = nMovNro
'clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldoDisp + nIntAcum + nIntGanado, 0, 0
'Mody By GITU 2011-09-01
'clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, Format((nSaldoCnt + nIntAcum + nIntGanado), "#,##0.00"), 0, 0
If psCodRetSinCom = "300627" Then 'Si la operacion es con cargo a cuenta resta la comision al saldo capital
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, Format(nSaldoCnt + nIntAcum + nIntGanado - pnMonComVB, "#,##0.00"), 0, 0, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp - pnMonComVB
Else
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, Format(nSaldoCnt + nIntAcum + nIntGanado, "#,##0.00"), 0, 0, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp
End If
'End Gitu
clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nIntAcum + nIntGanado

If pbITFAplica And pnITFValor > 0 Then
    If pbITFAsumido Then
        clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, 0, 0, psRegla:=psRegla
        clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFAsumido, pnITFValor
    Else
        clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, 0, 0, psRegla:=psRegla
        clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFCliente, pnITFValor
    End If
End If

'Mody By GITU 2011-09-01
If pnMonComVB <> 0 And psCodRetSinCom = "300627" Then
    clsCap.AgregaMovCap nMovNro, psCodRetSinCom, sCuenta, pnMonComVB, 0, 0, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, psCodRetSinCom, sCuenta, gConcRetSinTarj, pnMonComVB
End If

'***Agregado por ELRO el 20130723, según TI-ERS079-2013****
If nOperacion = gAhoCancAct Then
    clsCap.registrarMedioRetiro pnMedioRetiro, nMovNro
End If
'***Fin Agregado por ELRO el 20130723, según TI-ERS079-2013

'RIRO20131226 ERS137
If nOperacion = gAhoCancTransfAbCtaBco Then
    clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, nComision, _
    nSaldoDisp - nComision, nSaldoCnt - nComision, dUltMov, nComRetTransVB
    clsCap.AgregaMovTranferBanco nMovNro, sCodIF, sCtaBancoTransf, Mid(sCuenta, 9, 1), sTitularTransf
End If
'FIN RIRO

'If sPersLavDinero <> "" Then
'''If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
'''    'by capi 18022008
'''    'ALPA 20081009**********************************************************
'''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
'''    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
'''    '***********************************************************************
'''End If
'clsCap.dbCmact.CommitTrans
'ALPA20130930*********************
clsCap.dCommitTrans
'*********************************

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String

'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe
sTipApe = "CANCELACION AHORROS"
Dim clsNMant As NCOMCaptaGenerales
Set clsNMant = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsNMant.GetNombreTitulares(sCuenta))
Set clsNMant = Nothing
Dim nTipoPag As Integer
nTipoPag = 2
'Do
    'psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto - (nIntAcum + nIntGanado)), sNomTit, sCuenta, "", 0, Trim(0), "", nExtracto, "Interes Retirado", Trim(nIntAcum + nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, True, nTipoPag, pnITFValor, True, pbImpTMU, pnMonComVB, nComision)
    psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto - (nIntAcum + nIntGanado) + pnMonComVB), sNomTit, sCuenta, "", 0, Trim(0), "", nExtracto, "Interes Retirado", Trim(nIntAcum + nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, True, nTipoPag, pnITFValor, True, pbImpTMU, pnMonComVB, nComision, cDatosCamp) 'JUEZ 20141006 'ande ERS021-2018 agregué cDatosCamp
    
'COMENTADO TEMPORALMENTE
'    If pbITFAplica And pnITFValor > 0 Then
'        If pbITFAsumido Then
'             psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'        Else
'             psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'        End If
'    End If
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

Exit Sub

ErrGraba:
    'ALPA20130930********************************************
    'If bTrans Then clsCap.dbCmact.RollbackTrans
    If bTrans Then
        clsCap.dRollbackTrans
        Set clsCap = Nothing
        pnMovNro = 0
        bTrans = False
        Err.Raise Err.Number, "", Err.Description
    End If
    '********************************************************
End Sub
'ALPA 20081009***************************************************************
''Public Sub CapCancelaCuentaCTS(ByVal sCuenta As String, ByVal sMovNro As String, _
''            ByVal sGlosa As String, ByVal nOperacion As CaptacOperacion, Optional sNroDoc As String = "", _
''            Optional nDocumento As TpoDoc = TpoDocNotaCargo, Optional sNomAge As String = "", _
''            Optional sLpt As String = "", Optional sPersLavDinero As String = "", Optional ByVal psCodCmac As String, _
''            Optional ByRef psMensajeValidacion As String = "", _
''            Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean, _
''            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
''            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "")
'***********************************************************************
Public Sub CapCancelaCuentaCTS(ByVal sCuenta As String, ByVal sMovNro As String, _
            ByVal sGlosa As String, ByVal nOperacion As CaptacOperacion, Optional sNroDoc As String = "", _
            Optional nDocumento As TpoDoc = TpoDocNotaCargo, Optional sNomAge As String = "", _
            Optional sLpt As String = "", Optional sPersLavDinero As String = "", Optional ByVal psCodCmac As String, _
            Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", _
            Optional pnMovNro As Long = 1, Optional ByVal pnMedioRetiro As Integer = 0, Optional ByVal psRegla As String = "", _
            Optional pnComisionVB As Double, Optional psCodRetSinCom As String = "", Optional ByVal nComision As Double, _
            Optional ByVal sCodIF As String = "", Optional ByVal sMovNroCom As String = "", Optional ByVal sCuentaBco As String = "", _
            Optional ByVal sNomTitular As String = "", Optional ByVal nComRetTransVB As Integer = 0, Optional ByVal psNombreBanco As String = "")
'Parametro pnMedioRetiro agregado por ELRO el 20130724
'RIRO20131102 Se agrego parámetro "psRegla"
'RIRO20131212 ERS137 - Se agregó: nComision, sCodIF, sMovNroCom, sCuentaBco, sNomTitular
Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
Dim nMonto As Double
Dim dUltMov As Date
Dim bTrans As Boolean
Dim nEstado As CaptacEstado
Dim nNumExtracto As Long, nDiasTranscurridos As Long, i As Long
Dim nExtracto As Long, nMovNro As Long
Dim sMsgOpe As String, sCodUser As String
Dim dFecSis As Date
dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
bTrans = False
'Obtiene los datos para el calculo

Dim oImpre As COMFunciones.FCOMImpresion
'JUEZ 20130726 ****************************************
Dim oGen As New COMDConstSistema.DCOMGeneral
Dim clsDef As New NCOMCaptaDefinicion
Dim nTipoCamb As Double
Dim nPorcDisp As Double, nExcedente As Double, nSaldoRetiro As Double
'nPorcDisp = clsDef.GetCapParametro(gPorRetCTS) 'JUEZ 20141017
nTipoCamb = oGen.GetTipCambio(dFecSis, TCFijoMes)
'END JUEZ *********************************************

Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")
nExtracto = rsCta("nTransacc") + 1
nPorcDisp = rsCta("nPorDisp") 'JUEZ 20141017
rsCta.Close
Set rsCta = Nothing
'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
On Error GoTo ErrGraba

'***************
Randomize
For i = 0 To Rnd(2000) * 1000
Next i

If Not ValidaSaldoCuenta(sCuenta, nMonto) Then 'Valida el saldo de la cuenta nuevamente
    'clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox "Cuenta NO Posee Saldo Suficiente", vbInformation, "Aviso"
    psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente"
    Exit Sub
ElseIf TieneChequesValorizacion(sCuenta) Then
    'clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox "La Cuenta Tiene cheques en valorizacion", vbInformation, "Aviso"
    psMensajeValidacion = "La Cuenta Tiene cheques en valorizacion"
    Exit Sub
End If
'**************

nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
'JUEZ 20141111 Para calcular interes con formula compuesta
'nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)

If pnComisionVB <> 0 Then 'Si la operacion es con cargo a cuenta resta la comision al saldo capital
    nMonto = Format((nSaldoCnt + nIntAcum + nIntGanado) - pnComisionVB, "#,##0.00")
Else
    nMonto = Format(nSaldoCnt + nIntAcum + nIntGanado, "#,##0.00")
End If
'nMonto = Format(nSaldoCnt + nIntAcum + nIntGanado, "#,##0.00")
'End Gitu


dUltMov = DateAdd("d", -1, dFecSis)
If nOperacion = gCTSCancEfec Then
    sMsgOpe = "Cancelación Efectivo"
ElseIf nOperacion = gCTSCancTransf Then
    sMsgOpe = "Cancelación Transferencia"
End If
If sGlosa = "" Then
    sGlosa = "Cancelación Cuenta = " & sCuenta
Else
    sGlosa = sGlosa & Chr$(13) & ".Cancelación Cuenta = " & sCuenta
End If
clsCap.dbCmact.BeginTrans
bTrans = True

clsCap.ActualizaEstadoCuenta sCuenta, gCapEstCancelada, dFecSis, sMovNro
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
clsCap.AgregaMov sMovNro, nOperacion, sGlosa
nMovNro = clsCap.GetnMovNro(sMovNro)
'ALPA 20081010*********************************************
pnMovNro = nMovNro
'**********************************************************
'Comentado CTI4 ERS0112020
'clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, Format((nSaldoDisp + nIntAcum + nIntGanado) - pnComisionVB, "#,##0.00"), 0, 0, psRegla:=psRegla
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp - pnComisionVB
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nIntAcum + nIntGanado

'CTI4 ERS0112020
If nOperacion = gCTSCancTransfBco Then
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, Format(((nSaldoDisp + nIntAcum + nIntGanado) - pnComisionVB) - (IIf(nComRetTransVB = 1, 0, nComision)), "#,##0.00"), 0, 0, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp - pnComisionVB - IIf(nComRetTransVB = 1, 0, nComision)
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nIntAcum + nIntGanado
Else
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, Format((nSaldoDisp + nIntAcum + nIntGanado) - pnComisionVB, "#,##0.00"), 0, 0, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp - pnComisionVB
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nIntAcum + nIntGanado
End If
'CTI4 end

'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvision, nIntGanado 'COMENTADO POR APRI20180926 MEJORA CORREO-MARI 21/09/2018
'If sPersLavDinero <> "" Then
'''If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
'''    'by capi 18022008
'''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
'''    'ALPA 20081009********************************************************************************************
'''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
'''    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
'''    '*********************************************************************************************************
'''End If

'Mody By GITU 2011-09-01
If pnComisionVB <> 0 Then
    clsCap.AgregaMovCap nMovNro, psCodRetSinCom, sCuenta, pnComisionVB, 0, 0, psRegla:=psRegla
    clsCap.AgregaMovCapDet nMovNro, psCodRetSinCom, sCuenta, gConcRetSinTarj, pnComisionVB
End If

'***Agregado por ELRO el 20130723, según TI-ERS079-2013****
If nOperacion = gCTSCancEfec Then
    clsCap.registrarMedioRetiro pnMedioRetiro, nMovNro
End If
'***Fin Agregado por ELRO el 20130723, según TI-ERS079-2013

' *** RIRO20131226 ERS137
If nOperacion = gCTSCancTransfBco Then
    clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, nComision, _
    nSaldoDisp - nComision, nSaldoCnt - nComision, dUltMov, nComRetTransVB
    clsCap.AgregaMovTranferBanco nMovNro, sCodIF, sCuentaBco, Mid(sCuenta, 9, 1), sNomTitular
End If
' *** END RIRO

clsCap.dbCmact.CommitTrans

'JUEZ 20130726 Recalcula saldo autorizado retiro Institucion - Persona *****
Set rsCta = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, nTipoCamb)
nExcedente = rsCta!TotalSaldos - rsCta!TotalSueldos
If nExcedente > 0 Then
    nSaldoRetiro = nExcedente * nPorcDisp / 100
Else
    nSaldoRetiro = 0
End If
clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, nIntSaldo 'JUEZ 20130726
'END JUEZ ******************************************************************

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
Dim clsImp As NCOMCaptaGenerales
'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe
If nOperacion = gCTSCancTransfBco Then
    sTipApe = "TRANSFERENCIA POR CANCELACIÓN CTS"
    sModDep = "Monto Cancelaciòn"
Else
    sTipApe = "CANCELACION CTS"
End If
   Set clsImp = New NCOMCaptaGenerales
      Set oImpre = New COMFunciones.FCOMImpresion
           sNomTit = oImpre.ImpreCarEsp(clsImp.GetNombreTitulares(sCuenta))
   Set clsImp = Nothing
'Do
    If sNroDoc <> "" Then
        psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, nSaldoCnt, sNomTit, sCuenta, sNroDoc, 0, Trim(0), "Nota Cargo", nExtracto, "Interes Retirado", Trim(nIntAcum + nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, , , , , pbImpTMU, pnComisionVB)
    Else
        'psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, nSaldoCnt, sNomTit, sCuenta, "", 0, Trim(0), "", nExtracto, "Interes Retirado", Trim(nIntAcum + nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCMAC, , , , , pbImpTMU, pnComisionVB, nComision) 'Comentado CTI4 ERS0112020
        psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, nSaldoCnt, sNomTit, sCuenta, "", 0, Trim(0), "", nExtracto, "Interes Retirado", Trim(nIntAcum + nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, , , , , pbImpTMU, pnComisionVB, nComision, , IIf(nComRetTransVB = 1, False, True), psNombreBanco, sCuentaBco) 'CTI4 ERS0112020
    End If
  Set oImpre = Nothing
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Exit Sub
ErrGraba:
    If bTrans Then
        clsCap.dbCmact.RollbackTrans
    End If
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
End Sub
Public Function CapTransferenciaAhoaNTERIOR(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal sMovNro As String, ByVal rsCtaAbo As ADODB.Recordset, ByVal sGlosa As String, _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional pnTCC As Double = 0, Optional pnTCV As Double = 0) As Boolean

'Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
'Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
'Dim rsCta As Recordset
'Dim nEstado As CaptacEstado
'Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
'Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double, nMontoAbo As Double
'Dim dUltMov As Date
'Dim nSaldoInac As Double
'Dim bInactiva As Boolean, bTrans As Boolean, bActivaCta As Boolean, bInmovilizada As Boolean
'Dim nNumExtracto As Long, nDiasTranscurridos As Long, I As Long
'Dim nExtracto As Long, nMovNro As Long
'Dim sMsgOpe As String, sCtaAbo As String, sCodUser As String
'Dim nMoneda As Moneda
'Dim nOperacion As CaptacOperacion
'Dim dFecSis As Date
'Dim oCon As COMDConstSistema.NCOMConstSistema
'Set oCon = New COMDConstSistema.NCOMConstSistema
'
'Dim lnTCC As Double
'Dim lnTCV As Double
'
'Dim clsGen As nTipoCambio
'Set clsGen = New nTipoCambio
'
'dFecSis = CDate(Mid(sMovnro, 7, 2) & "/" & Mid(sMovnro, 5, 2) & "/" & Left(sMovnro, 4))
'
'If pnTCC = 0 Then
'    lnTCC = clsGen.EmiteTipoCambio(dFecSis, TCCompra)
'Else
'    lnTCC = pnTCC
'End If
'
'If pnTCV = 0 Then
'    lnTCV = clsGen.EmiteTipoCambio(dFecSis, TCVenta)
'Else
'    lnTCV = pnTCV
'End If
'
'sCodUser = Right(sMovnro, 4)
'bTrans = False
'bActivaCta = False
'nMoneda = CLng(Mid(sCuenta, 9, 1))
''Obtiene los datos para el calculo
'Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
'Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
'Set clsMant = Nothing
'nEstado = rsCta("nPrdEstado")
'nSaldoDisp = rsCta("nSaldoDisp")
'nSaldoCnt = rsCta("nSaldo")
'dUltMov = rsCta("dUltCierre")
'nTasa = rsCta("nTasaInteres")
'nIntAcum = rsCta("nIntAcum")
'bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
'bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
'
'nExtracto = rsCta("nTransacc") + 1
'rsCta.Close
'Set rsCta = Nothing
'
''Inicia la transaccion
'Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
'On Error GoTo ErrGraba
'clsCap.dbCmact.BeginTrans
'bTrans = True
'If Not ValidaSaldoCuenta(sCuenta, nMonto) Then
'    clsCap.dbCmact.RollbackTrans
'    Set clsCap = Nothing
'    MsgBox "Cuenta NO Posee SALDO SUFICIENTE", vbInformation, "Aviso"
'    CapTransferenciaAho = False
'    Exit Function
'End If
'sGlosa = sGlosa & "Cargo Transferencia Cuenta = " & sCuenta
'nOperacion = gAhoTransCargo
'If bInactiva Then
'    nSaldoInac = nSaldoCnt
'End If
'nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
'nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
'dUltMov = DateAdd("d", -1, dFecSis)
'nSaldoCnt = nSaldoCnt - nMonto
'clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
'nSaldoDisp = nSaldoDisp - nMonto
'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
'sMsgOpe = "Cargo Transferencia"
'clsCap.AgregaMov sMovnro, nOperacion, sGlosa
'nMovNro = clsCap.GetnMovNro(sMovnro)
'clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'clsCap.ActualizadUltContactoAho sCuenta, dFecSis
'
'If bInmovilizada Then
'    If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
'        clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
'        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovnro
'        clsCap.ActualizaInmovilizadaAct sCuenta
'    End If
'End If
'
'If bInactiva And Not bInmovilizada Then
'    clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
'    clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovnro
'    clsCap.ActualizaInactivaAct sCuenta
'End If
'
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
'clsCap.UltimaActualizacionCuenta sCuenta, sMovnro
'
'Dim sTipDep As String, sCodOpe As String
'Dim sModDep As String, sTipApe As String
'Dim sNomTit As String
'Dim sBoletas As String
'sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES")
'sCodOpe = Trim(nOperacion)
'sModDep = sMsgOpe
'sTipApe = "RETIRO AHORROS"
'Dim clsTit As NCOMCaptaGenerales
'Dim oImp As NCapImpBoleta
'Set clsTit = New NCOMCaptaGenerales
'sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
'Set clsMant = Nothing
'Set clsTit = Nothing
'Set oImp = New NCapImpBoleta
'sBoletas = sBoletas & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado + nIntAcum, "", 1, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False)
''Inicio de los abonos de cuenta
'Do While Not rsCtaAbo.EOF
'    sCtaAbo = rsCtaAbo("Cuenta")
'    If CLng(Mid(sCtaAbo, 9, 1)) = gMonedaNacional Then
'        nMontoAbo = rsCtaAbo("Monto S/.")
'    Else
'        nMontoAbo = rsCtaAbo("Monto $")
'    End If
'    nOperacion = gAhoTransAbono
'    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
'    Set rsCta = clsMant.GetDatosCuentaAho(sCtaAbo)
'    Set clsMant = Nothing
'    nEstado = rsCta("nPrdEstado")
'    nSaldoDisp = rsCta("nSaldoDisp")
'    nSaldoCnt = rsCta("nSaldo")
'    dUltMov = rsCta("dUltCierre")
'    nTasa = rsCta("nTasaInteres")
'    nIntAcum = rsCta("nIntAcum")
'    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
'    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
'
'    nExtracto = rsCta("nTransacc") + 1
'    rsCta.Close
'    Set rsCta = Nothing
'    If bInactiva Then
'        nSaldoInac = nSaldoCnt
'    End If
'    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
'    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
'    dUltMov = DateAdd("d", -1, dFecSis)
'    nSaldoCnt = nSaldoCnt + nMontoAbo
'    clsCap.ActualizaSaldoAnteriorAho sCtaAbo, nSaldoDisp
'    nSaldoDisp = nSaldoDisp + nMontoAbo
'    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovnro, True
'    sMsgOpe = "Abono Transferencia"
'    If sGlosa = "" Then sGlosa = "Abono Transferencia Cuenta = " & sCtaAbo
'    clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
'    clsCap.ActualizadUltContactoAho sCtaAbo, dFecSis
'
'    If bInmovilizada Then
'        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
'            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCtaAbo, gConcCapital, nSaldoInac
'            clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovnro
'            clsCap.ActualizaInmovilizadaAct sCtaAbo
'        End If
'    End If
'
'    If bInactiva And Not bInmovilizada Then
'        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaAbo, gConcCapital, nSaldoInac
'        clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovnro
'        clsCap.ActualizaInactivaAct sCtaAbo
'    End If
'
'    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
'    clsCap.UltimaActualizacionCuenta sCtaAbo, sMovnro
'    'Impresión de la boleta
'    sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", "SOLES", "DOLARES")
'    sCodOpe = Trim(nOperacion)
'    sModDep = sMsgOpe
'    sTipApe = "TRANSFERENCIA AHORROS"
'    Set clsTit = New NCOMCaptaGenerales
'    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCtaAbo))
'    Set clsTit = Nothing
'    sBoletas = sBoletas & oImp.gPrnSaltopagina
'    If Mid(sCuenta, 9, 1) = Mid(sCtaAbo, 9, 1) Then
'        sBoletas = sBoletas & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", 1, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False)
'    Else
'        If Mid(sCtaAbo, 9, 1) = "1" Then
'            sBoletas = sBoletas & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", 1, nSaldoCnt, True, , , , , , , "Imp U$. " & Format(rsCtaAbo.Fields(3), "#,##0.00") & " A TCC:" & Format(lnTCC, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False)
'        Else
'            sBoletas = sBoletas & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", 1, nSaldoCnt, True, , , , , , , "Imp S/. " & Format(rsCtaAbo.Fields(2), "#,##0.00") & " A TCV:" & Format(lnTCV, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False)
'        End If
'    End If
'    rsCtaAbo.MoveNext
'Loop
'If sPersLavDinero <> "" Then
'    clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero
'End If
'clsCap.dbCmact.CommitTrans
'CapTransferenciaAho = True
'Set clsCap = Nothing
'Set oImp = Nothing
'Dim oPrevio As Previo.clsPrevio
'Set oPrevio = New Previo.clsPrevio
'oPrevio.Show sBoletas, "Transferencia de Cuenta"
'Set oPrevio = Nothing
'Exit Function
'ErrGraba:
'    If bTrans Then clsCap.dbCmact.RollbackTrans
'    Set clsMant = Nothing
'    Set oImp = Nothing
'    Set clsCap = Nothing
'    Err.Raise Err.Number, "", Err.Description
'    CapTransferenciaAho = False
End Function
Public Function CapTransferenciaAho(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal sMovNro As String, ByVal rsCtaAbo As ADODB.Recordset, ByVal sGlosa As String, _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional pnTCC As Double = 0, Optional pnTCV As Double = 0, _
            Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional ByVal sBenPersLavDinero As String = "", _
            Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pbImpTMU As Boolean, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0) As Boolean

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double, nMontoAbo As Double
    'ALPA 20091123***********************
    Dim nTpoAbono As Integer
    '************************************
    Dim dUltMov As Date
    Dim nSaldoInac As Double
    Dim bInactiva As Boolean, bTrans As Boolean, bActivaCta As Boolean, bInmovilizada As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCtaAbo As String, sCodUser As String
    Dim nMoneda As Moneda
    Dim nOperacion As CaptacOperacion
    Dim dFecSis As Date





    Dim oCon As COMDConstSistema.NCOMConstSistema
    Set oCon = New COMDConstSistema.NCOMConstSistema

    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim i As Integer
    
    
    Dim lnTCC As Double
    Dim lnTCV As Double
    
    Dim clsGen As COMDConstSistema.NCOMTipoCambio
    Set clsGen = New COMDConstSistema.NCOMTipoCambio
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    
    If pnTCC = 0 Then
        lnTCC = clsGen.EmiteTipoCambio(dFecSis, TCCompra)
    Else
        lnTCC = pnTCC
    End If
    
    If pnTCV = 0 Then
        lnTCV = clsGen.EmiteTipoCambio(dFecSis, TCVenta)
    Else
        lnTCV = pnTCV
    End If

    sCodUser = Right(sMovNro, 4)
    bTrans = False
    bActivaCta = False
    nMoneda = CLng(Mid(sCuenta, 9, 1))
    'Obtiene los datos para el calculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)

    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    'JUEZ 20150404 Se agregó IIf(psItfOperacion = gITFCobroEfectivo, 0, pnITFValor)
    If Not ValidaSaldoCuenta(sCuenta, nMonto + IIf(psITFOperacion = gITFCobroEfectivo, 0, pnITFValor)) Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        'MsgBox "Cuenta NO Posee SALDO SUFICIENTE", vbInformation, "Aviso"
        psMensajeValidacion = "Cuenta NO Posee SALDO SUFICIENTE"
        CapTransferenciaAho = False
        Exit Function
    End If
    sGlosa = sGlosa & "Cargo Transferencia Cuenta = " & sCuenta
    nOperacion = gAhoTransCargo
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt - nMonto
    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
    nSaldoDisp = nSaldoDisp - nMonto
    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
    
    sMsgOpe = "Cargo Transferencia"
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010**********************************************************
    pnMovNro = nMovNro
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.ActualizadUltContactoAho sCuenta, dFecSis

    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCuenta
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
    
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
        
        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
        
        clsCap.ActualizaInactivaAct sCuenta
        
    End If

    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    
    '**********PARA AGREGAR ITF***********
    If pbITFAplica And pnITFValor > 0 Then
        If pbITFAsumido Then
            'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
            clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, 0, 0
            clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFAsumido, pnITFValor
            
        Else
            If psITFOperacion = gITFCobroEfectivo Then
               ' clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFCliente, pnITFValor
            Else
                clsCap.ActualizaCargoCaptacion sCuenta, pnITFValor, pnITFValor, nIntGanado, dUltMov, sMovNro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor
                clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCuenta, gConcITFCliente, pnITFValor
                nSaldoDisp = nSaldoDisp - pnITFValor
                nSaldoCnt = nSaldoCnt - pnITFValor
            End If
        
        End If
    End If
    '**********FIN ITF*************
    
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro


    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    Dim sBoletas As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "RETIRO AHORROS"
    Dim clsTit As NCOMCaptaGenerales
    Dim oImp As NCOMCaptaImpresion
    Dim nTipPago As Integer
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsMant = Nothing
    Set clsTit = Nothing
    Set oImp = New NCOMCaptaImpresion
    
    If pbITFAplica And pnITFValor > 0 Then
    
        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
            
    End If

    sBoletas = ""
    psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor) 'YIHU 20150106 ERS 160-2014
    
    'Inicio de los abonos de cuenta
    Dim CANTABO As Integer
    CANTABO = 0

Do While Not rsCtaAbo.EOF

    Dim nMonITF As Double, sAboOpeITF As String

    sCtaAbo = rsCtaAbo("Cuenta")

    
    If CLng(Mid(sCtaAbo, 9, 1)) = gMonedaNacional Then
        If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120*****************************************
            'nMontoAbo = rsCtaAbo("Monto S/.")
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            '******************************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroCargo
            
        ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120***************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto S/.")
            '****************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroEfectivo
            
        ElseIf rsCtaAbo("fItf") = "N" Then
            nMontoAbo = rsCtaAbo("Monto S/.")
            nMonITF = 0
            sAboOpeITF = gITFCobroEfectivo
            
        End If
    Else
        If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120********************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '**********************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroCargo
        ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120************************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '*************************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroEfectivo
        ElseIf rsCtaAbo("fItf") = "N" Then
            nMontoAbo = rsCtaAbo("Monto $")
            nMonITF = 0
            sAboOpeITF = gITFCobroEfectivo
        End If
    End If
    
    nOperacion = gAhoTransAbono
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCtaAbo)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
    
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMontoAbo
    clsCap.ActualizaSaldoAnteriorAho sCtaAbo, nSaldoDisp
    nSaldoDisp = nSaldoDisp + nMontoAbo
    'ALPA 20091123
    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
    '********************************************
    sMsgOpe = "Abono Transferencia"
    If sGlosa = "" Then sGlosa = "Abono Transferencia Cuenta = " & sCtaAbo
    'Modify By GITU 31-05-2009 Porque generaba un descuadre en los asientos
    'If nTpoAbono = 1 Then
    '    clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    'Else
        'clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo - nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
        clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    'End If
    'End GITU
    clsCap.ActualizadUltContactoAho sCtaAbo, dFecSis

    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCtaAbo, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCtaAbo
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
        clsCap.AgregaMovCap nMovNro, gAhoEstInacAct, sCtaAbo, nSaldoInac, nSaldoDisp, nSaldoCnt  ' RIRO20150303, corrección para cuentas inactivas
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaAbo, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInactivaAct sCtaAbo
    End If
    'ALPA 20091123
    'Modify By GITU 31-05-2009 Porque generaba un descuadre en los asientos
    'If nTpoAbono = 1 Then
    '  clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    'Else
      'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo - nMonITF
      clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    'End If
    'End GITU
    '***********************
    '**********PARA AGREGAR ITF***********
    If pbITFAplica And nMonITF > 0 Then
            If rsCtaAbo("TipoItf") = "A" Then
                'clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovnro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, 0, 0
                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFAsumido, nMonITF
            Else
                If rsCtaAbo("TipoItf") = "E" Then
                    'clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovnro, True
                    clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, nSaldoDisp, nSaldoCnt
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFCliente, nMonITF
                Else
                    clsCap.ActualizaAbonoCaptacion sCtaAbo, -nMonITF, -nMonITF, nIntGanado, dUltMov, sMovNro, True
                    clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCtaAbo, nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCtaAbo, gConcITFCliente, nMonITF
                    
                    nSaldoDisp = nSaldoDisp - nMonITF
                    nSaldoCnt = nSaldoCnt - nMonITF
                    
                End If
            End If

    End If


    '**********FIN ITF*************
    
    
    clsCap.UltimaActualizacionCuenta sCtaAbo, sMovNro
    
    
    CANTABO = CANTABO + 1
    
    
    'Impresión de la boleta
    '''sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "TRANSFERENCIA AHORROS"
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCtaAbo))
    Set clsTit = Nothing
 
    If pbITFAplica And pnITFValor > 0 Then

        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
        
    End If
    
    If Mid(sCuenta, 9, 1) = Mid(sCtaAbo, 9, 1) Then
        psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor) 'YIHU 20150106 ERS 160-2014
        
    Else
        If Mid(sCtaAbo, 9, 1) = "1" Then
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , "Imp U$. " & Format(rsCtaAbo.Fields(3), "#,##0.00") & " A TCC:" & Format(lnTCC, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor) 'YIHU 20150106 ERS 160-2014
        Else
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , "Imp S/. " & Format(rsCtaAbo.Fields(2), "#,##0.00") & " A TCV:" & Format(lnTCV, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor) 'YIHU 20150106 ERS 160-2014
        End If
    End If
              
    rsCtaAbo.MoveNext
Loop
'ALPA 20081010
'If sPersLavDinero <> "" Then
'If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
'    'by capi 18022008
'    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
'    'ALPA 20081009****************************************************************************
'    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
'    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
'    '*****************************************************************************************
'End If


clsCap.dbCmact.CommitTrans
CapTransferenciaAho = True
Set clsCap = Nothing
'oPrevio.Show sBoletas, ""

Set oImp = Nothing
'Set oPrevio = Nothing
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsMant = Nothing
    Set oImp = Nothing
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapTransferenciaAho = False
End Function
'Modify by GITU 23-10-2012
Public Function CapTransferenciaAhoLote(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal sMovNro As String, ByVal rsCtaAbo As ADODB.Recordset, ByVal sGlosa As String, _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional pnTCC As Double = 0, Optional pnTCV As Double = 0, _
            Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional ByVal sBenPersLavDinero As String = "", _
            Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pbImpTMU As Boolean, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0, _
            Optional ByRef psImpBoletaRes As String, Optional ByVal pnTransfConvenio As Integer = -1) As Boolean
            'RIRO20150513 ERS146-2014, ADD pbTransfConvenio

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double, nMontoAbo As Double
    'ALPA 20091123***********************
    Dim nTpoAbono As Integer
    '************************************
    Dim dUltMov As Date
    Dim nSaldoInac As Double
    Dim bInactiva As Boolean, bTrans As Boolean, bActivaCta As Boolean, bInmovilizada As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCtaAbo As String, sCodUser As String
    Dim nMoneda As Moneda
    Dim nOperacion As CaptacOperacion
    Dim dFecSis As Date
    '-----Add By Gitu 24-10-2012-----'
    Dim lsGlosaDet As String
    Dim nMonITF As Currency
    Dim sAboOpeITF As String
    '-----End Gitu ------------------'
    Dim oCon As COMDConstSistema.NCOMConstSistema
    Set oCon = New COMDConstSistema.NCOMConstSistema

    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim i As Integer
    
    Dim lnTCC As Double
    Dim lnTCV As Double
    
    Dim nComisionConvenio As Currency 'RIRO20150513 ERS146-2014
    Dim rsConvenio As ADODB.Recordset 'RIRO20150513 ERS146-2014
    
    Dim clsGen As COMDConstSistema.NCOMTipoCambio
    Set clsGen = New COMDConstSistema.NCOMTipoCambio
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    
    If pnTCC = 0 Then
        lnTCC = clsGen.EmiteTipoCambio(dFecSis, TCCompra)
    Else
        lnTCC = pnTCC
    End If
    
    If pnTCV = 0 Then
        lnTCV = clsGen.EmiteTipoCambio(dFecSis, TCVenta)
    Else
        lnTCV = pnTCV
    End If

    sCodUser = Right(sMovNro, 4)
    bTrans = False
    bActivaCta = False
    nMoneda = CLng(Mid(sCuenta, 9, 1))
    'Obtiene los datos para el calculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)

    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    'EAAS20190605 SEGUN CORREO, cobro de comision de Serv Pago ***
    If pnTransfConvenio > 0 Then
        nComisionConvenio = 0
        Set rsConvenio = clsCap.devolverDatosCuentaConvenioServicioPago(pnTransfConvenio)
        If Not rsConvenio Is Nothing Then
            If Not rsConvenio.EOF And Not rsConvenio.BOF Then
                nComisionConvenio = rsConvenio!nComisionTrans
            End If
        End If
        nComisionConvenio = nComisionConvenio * rsCtaAbo.RecordCount

    End If
    'END EAAS20190605 *********************************************
    'JUEZ 20150404 Se agregó IIf(psItfOperacion = gITFCobroEfectivo, 0, pnITFValor)
    'EAAS20190605 nComisionConvenio SEGUN CORREO, SE AGREGO LA COMISION PARA LA VALIDACION DE SALDO DISPONIBLE DE LA CUENTA A DEBITAR ***
    If Not ValidaSaldoCuenta(sCuenta, nMonto + nComisionConvenio + IIf(psITFOperacion = gITFCobroEfectivo, 0, pnITFValor)) Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        'MsgBox "Cuenta NO Posee SALDO SUFICIENTE", vbInformation, "Aviso"
        psMensajeValidacion = "Cuenta NO posee SALDO SUFICIENTE,considere la COMISIÓN de: S/" & Format(nComisionConvenio, "#,##0.00") 'EAAS20190605
        'psMensajeValidacion = "Cuenta NO Posee SALDO SUFICIENTE"
        CapTransferenciaAhoLote = False
        Exit Function
    End If
    
    'RIRO20150630 ERS146 - 2014 - COMENTADO
    'sGlosa = sGlosa & "Cargo Transferencia Cuenta En Lote = " & sCuenta
    'nOperacion = gAhoTransCargoL
    
    'RIRO20150515 ERS146-2014 ***************
    If pnTransfConvenio > 0 Then
        sGlosa = sGlosa & "Cargo Transferencia Cuenta En Lote = " & sCuenta
        nOperacion = gAhoTransCargoLC
    Else
        sGlosa = sGlosa & "Cargo Transferencia Cuenta En Lote = " & sCuenta
        nOperacion = gAhoTransCargoL
    End If
    'END RIRO ******************************
    
    
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt - nMonto
    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
    nSaldoDisp = nSaldoDisp - nMonto
    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
    
    sMsgOpe = "Cargo Transferencia"
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010**********************************************************
    pnMovNro = nMovNro
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.ActualizadUltContactoAho sCuenta, dFecSis

    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCuenta
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
    
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
        
        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
        
        clsCap.ActualizaInactivaAct sCuenta
        
    End If

    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    
    '**********PARA AGREGAR ITF***********
    If pbITFAplica And pnITFValor > 0 Then
        If pbITFAsumido Then
            'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
            clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, 0, 0
            clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFAsumido, pnITFValor
            
        Else
            If psITFOperacion = gITFCobroEfectivo Then
               ' clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFCliente, pnITFValor
            Else
                clsCap.ActualizaCargoCaptacion sCuenta, pnITFValor, pnITFValor, nIntGanado, dUltMov, sMovNro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor
                clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCuenta, gConcITFCliente, pnITFValor
                nSaldoDisp = nSaldoDisp - pnITFValor
                nSaldoCnt = nSaldoCnt - pnITFValor
            End If
        
        End If
    End If
    '**********FIN ITF*************
    
    'RIRO20150513 ERS146-2014, cobro de comision de Serv Pago ***
    If pnTransfConvenio > 0 Then
        nComisionConvenio = 0
        Set rsConvenio = clsCap.devolverDatosCuentaConvenioServicioPago(pnTransfConvenio)
        If Not rsConvenio Is Nothing Then
            If Not rsConvenio.EOF And Not rsConvenio.BOF Then
                nComisionConvenio = rsConvenio!nComisionTrans
            End If
        End If
        nComisionConvenio = nComisionConvenio * rsCtaAbo.RecordCount
        If nComisionConvenio > 0 Then
            clsCap.ActualizaCargoCaptacion sCuenta, nComisionConvenio, nComisionConvenio, 0, dUltMov, sMovNro, True
            clsCap.AgregaMovCap nMovNro, gCapConSerPagDebCom, sCuenta, nComisionConvenio, nSaldoDisp - nComisionConvenio, nSaldoCnt - nComisionConvenio
            clsCap.AgregaMovCapDet nMovNro, gCapConSerPagDebCom, sCuenta, gComConSerPag, nComisionConvenio
            nSaldoDisp = nSaldoDisp - nComisionConvenio
            nSaldoCnt = nSaldoCnt - nComisionConvenio
        End If
    End If
    'END RIRO *********************************************
    
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    Dim sBoletas As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "RETIRO AHORROS"
    Dim clsTit As NCOMCaptaGenerales
    Dim oImp As NCOMCaptaImpresion
    Dim nTipPago As Integer
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsMant = Nothing
    Set clsTit = Nothing
    Set oImp = New NCOMCaptaImpresion
    
    If pbITFAplica And pnITFValor > 0 Then
    
        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
            
    End If

    sBoletas = ""
    psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor, , nMovNro) 'YIHU 20150106 ERS 160-2014
    
    'Inicio de los abonos de cuenta
    Dim CANTABO As Integer
    CANTABO = 0

Do While Not rsCtaAbo.EOF

    sCtaAbo = rsCtaAbo("Cuenta")
    lsGlosaDet = rsCtaAbo("Glosa")
    
    If CLng(Mid(sCtaAbo, 9, 1)) = gMonedaNacional Then
        'If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120*****************************************
            'nMontoAbo = rsCtaAbo("Monto S/.")
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            'nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            '******************************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroCargo

        'ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120***************************
        '    nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
        '    nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto S/.")
            '****************************************
        '    nMonITF = rsCtaAbo("ITF S/.")
        '    sAboOpeITF = gITFCobroEfectivo

        'ElseIf rsCtaAbo("fItf") = "N" Then
        '    nMontoAbo = rsCtaAbo("Monto S/.")
        '    nMonITF = 0
        '    sAboOpeITF = gITFCobroEfectivo

        'End If
    Else
        'If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120********************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            'nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '**********************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroCargo
        'ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120************************************************
'            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
'            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
'            'nMontoAbo = rsCtaAbo("Monto $")
'            '*************************************************************
'            nMonITF = rsCtaAbo("ITF $")
'            sAboOpeITF = gITFCobroEfectivo
'        ElseIf rsCtaAbo("fItf") = "N" Then
'            nMontoAbo = rsCtaAbo("Monto $")
'            nMonITF = 0
'            sAboOpeITF = gITFCobroEfectivo
'        End If
    End If
    
    nOperacion = gAhoTransAbonoL
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCtaAbo)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
    
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMontoAbo
    clsCap.ActualizaSaldoAnteriorAho sCtaAbo, nSaldoDisp
    nSaldoDisp = nSaldoDisp + nMontoAbo
    'ALPA 20091123
    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
    '********************************************
    sMsgOpe = "Abono Transferencia"
    If sGlosa = "" Then sGlosa = "Abono Transferencia Cuenta = " & sCtaAbo
    'Modify By GITU 31-05-2009 Porque generaba un descuadre en los asientos
    'If nTpoAbono = 1 Then
    '    clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    'Else
        'clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo - nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
        clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    'End If
    'End GITU
    clsCap.ActualizadUltContactoAho sCtaAbo, dFecSis

    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCtaAbo, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCtaAbo
        End If
    End If
    
'    If bInactiva And Not bInmovilizada Then
'        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaAbo, gConcCapital, nSaldoInac
'        clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
'        clsCap.ActualizaInactivaAct sCtaAbo
'    End If
    
    'ALPA 20091123
    'Modify By GITU 31-05-2009 Porque generaba un descuadre en los asientos
    'If nTpoAbono = 1 Then
    '  clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    'Else
      'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo - nMonITF
      clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    'End If
    'End GITU
    '***********************
    '**********PARA AGREGAR ITF***********
    If pbITFAplica And nMonITF > 0 Then
'            If rsCtaAbo("TipoItf") = "A" Then
'                clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
'                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, 0, 0
'                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFAsumido, nMonITF
'            Else
'                If rsCtaAbo("TipoItf") = "E" Then
'                    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
'                    clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, nSaldoDisp, nSaldoCnt
'                    clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFCliente, nMonITF
'                Else
                    clsCap.ActualizaAbonoCaptacion sCtaAbo, -nMonITF, -nMonITF, nIntGanado, dUltMov, sMovNro, True
                    clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCtaAbo, nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCtaAbo, gConcITFCliente, nMonITF

                    nSaldoDisp = nSaldoDisp - nMonITF
                    nSaldoCnt = nSaldoCnt - nMonITF

'                End If
'            End If

    End If


    '**********FIN ITF*************
    
    
    clsCap.UltimaActualizacionCuenta sCtaAbo, sMovNro
    
    
    CANTABO = CANTABO + 1
    
    
    'Impresión de la boleta
    '''sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "TRANSFERENCIA AHORROS"
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCtaAbo))
    Set clsTit = Nothing
 
    If pbITFAplica And pnITFValor > 0 Then

        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
        
    End If
    
    If Mid(sCuenta, 9, 1) = Mid(sCtaAbo, 9, 1) Then
        psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, nMonITF, , nMovNro) 'YIHU 20150106 ERS 160-2014
    Else
        If Mid(sCtaAbo, 9, 1) = "1" Then
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , "Imp U$. " & Format(rsCtaAbo.Fields(4), "#,##0.00") & " A TCC:" & Format(lnTCC, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, nMonITF, , nMovNro) 'YIHU 20150106 ERS 160-2014
        Else
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, False, , , , , , "Imp S/. " & Format(rsCtaAbo.Fields(3), "#,##0.00") & " A TCV:" & Format(lnTCV, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, nMonITF, , nMovNro) 'YIHU 20150106 ERS 160-2014
        End If
    End If
              
    rsCtaAbo.MoveNext
Loop
'ALPA 20081010
'If sPersLavDinero <> "" Then
'If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
'    'by capi 18022008
'    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
'    'ALPA 20081009****************************************************************************
'    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
'    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
'    '*****************************************************************************************
'End If


clsCap.dbCmact.CommitTrans
CapTransferenciaAhoLote = True
Set clsCap = Nothing
'oPrevio.Show sBoletas, ""

Set oImp = Nothing
'Set oPrevio = Nothing
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsMant = Nothing
    Set oImp = Nothing
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapTransferenciaAhoLote = False
End Function
'End GITU

Public Function GetCapInteresAlaFecha(ByVal nProducto As Producto, ByVal nMonto As Double, _
        ByVal nTasa As Double, ByVal dUltMov As Date, ByVal nIntAcum As Double, _
        ByVal dFecSis As Date) As Double
Dim nIntGanado As Double
Dim nDias As Long
nDias = DateDiff("d", dUltMov, dFecSis) - 1
If nDias < 0 Then nDias = 0
Select Case nProducto
    Case gCapAhorros, gCapCTS
        GetCapInteresAlaFecha = nIntAcum + GetInteres(nMonto, nTasa, nDias, TpoCalcIntSimple)
    Case gCapPlazoFijo
        GetCapInteresAlaFecha = nIntAcum + GetInteres(nMonto + nIntAcum, nTasa, nDias, TpoCalcIntCompuesto)
End Select
End Function

Public Function GetMovExtorno(ByVal sDatoBus As String, ByVal dFecha As Date, _
        ByVal nOperacion As CaptacOperacion, psAgeCod As String, Optional nTipoBus As Integer = 0) As ADODB.Recordset
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set GetMovExtorno = clsCap.GetMovExtorno(sDatoBus, dFecha, nOperacion, psAgeCod, nTipoBus)
Set clsCap = Nothing
End Function

Public Function GetMovExtornoGiro(ByVal sDatoBus As String, ByVal dFecha As Date, _
        ByVal nOperacion As CaptacOperacion, psAgeCod As String, Optional nTipoBus As Integer = 0) As ADODB.Recordset
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set GetMovExtornoGiro = clsCap.GetMovExtornoGiro(sDatoBus, dFecha, nOperacion, psAgeCod, nTipoBus)
Set clsCap = Nothing
End Function

Public Function GetMovExtornoCMAC(ByVal sDatoBus As String, ByVal dFecha As Date, _
        ByVal nOperacion As CaptacOperacion, Optional nTipoBus As Integer = 0) As ADODB.Recordset
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
  Set GetMovExtornoCMAC = clsCap.GetMovExtornoCMAC(sDatoBus, dFecha, nOperacion, nTipoBus)
Set clsCap = Nothing
End Function

Public Function CapExtornoAbonoAho(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
            Optional sCodIF As String = "", Optional sNomAge As String, Optional sLpt As String = "", _
            Optional ByVal psCodCmac As String, Optional ByVal pnITFValor As Double = 0, _
            Optional ByVal nITFOperacion As CaptacOperacion, Optional ByVal nITFConcepto As CaptacConcepto, _
            Optional ByVal psCodAge As String = "", Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional pbImpTMU As Boolean = False, _
            Optional ByVal pnComiDepOtraAge As Double = 0, Optional ByVal bestaPagoServ As Boolean = False, _
            Optional ByVal pnConnBase As ADODB.Connection = Nothing, _
            Optional ByVal psMotExtorno As Variant, Optional ByVal pnComiDepxMaxOpe As Double = 0) As Double

    'RIRO 20150602 ERS162-2014, Add "pnConnBase"
    'APRI20190109 ERS077-2018 ADD -> pnComiDepxMaxOpe
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean
    Dim nDiasTranscurridos As Long, i As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim nITFDescuento As Double
    Dim nTipPago As Integer
    Dim rsConcepto As New ADODB.Recordset 'FRHU 20141203 ERS048-2014
    Dim sConceptoDesc As String 'FRHU 20141203 ERS048-2014
    Dim nComisionDepositos As Double 'APRI20190109 ERS077-2018
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    'Obtiene los datos para el calculo
    'FRHU 20141203 ERS048-2014
    If nOperacion = gCapExtNotaDeAbono Then
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsConcepto = clsMant.GetMovProductoConcepto(nMovNroBus)
        sConceptoDesc = rsConcepto("cDescripcion")
        Set clsMant = Nothing
    End If
    'FIN FRHU 20141203
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = "": sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)
    
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    bTrans = True
    Randomize
    For i = 0 To Rnd(2000) * 1000
    Next i
    nITFDescuento = 0
    If pnITFValor > 0 And nITFConcepto = gConcITFCliente And (nITFOperacion = gITFCobroCargo Or nITFOperacion = gITFCobroCMACCargo) Then
        nITFDescuento = pnITFValor
    End If

    If sNroDoc = "" Then
        'If Not ValidaSaldoCuenta(sCuenta, nMonto - nITFDescuento - pnComiDepOtraAge) Then
        'If Not ValidaSaldoCuenta(sCuenta, nMonto - nITFDescuento - pnComiDepOtraAge, , , , , , True) Then 'FRHU CORREO 20150414
        If Not ValidaSaldoCuenta(sCuenta, nMonto - nITFDescuento - pnComiDepOtraAge - pnComiDepxMaxOpe, , , , , , True) Then 'APRI20190109 ERS077-2018
            Set clsCap = Nothing
            'MsgBox "Cuenta NO Posee Saldo Suficiente", vbInformation, "Aviso"
            'psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente"
            psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente o NO está ACTIVA" 'JUEZ 20131209
            CapExtornoAbonoAho = 0
            Exit Function
        End If
    End If
    
    sGlosa = sGlosa & ". Extorno Abono Cuenta = " & sCuenta
    
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nDiasTranscurridos < 0 Then
        nDiasTranscurridos = 0
    End If
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt - nMonto
    
    'RIRO 20150602 ERS162-2014, Comentado ******
    'clsCap.dbCmact.BeginTrans
    'bTrans = True
    If Not pnConnBase Is Nothing Then
        clsCap.SetConexion pnConnBase
        bTrans = False
        clsCap.bTransaccion = True
    Else
        bTrans = True
        clsCap.dBeginTrans
    End If
    'END RIRO **********************************
    
    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp

    If sNroDoc <> "" Then
        If nTipoDoc = TpoDocCheque Then
            'Modificado PASI20150618 ********************************************************************
            'nSaldoDisp = nSaldoDisp - 0
            'clsCap.ActualizaCargoCaptacion sCuenta, nMonto - nITFDescuento, 0, nIntGanado, dUltMov, sMovNro, True
            clsCap.ActualizaCargoCaptacion sCuenta, nMonto - nITFDescuento, nMonto - nITFDescuento, nIntGanado, dUltMov, sMovNro, True 'PASI20140618 cambios EJVG
            'end PASI******************************************************************************************
            clsCap.ActualizaEstadoDocRecEst TpoDocCheque, sNroDoc, sCodIF, sMovNro, gsChqEstExtornado, , sCuenta
            sMsgOpe = "Ext. Depósito Chq."
        End If
    Else
        nSaldoDisp = nSaldoDisp - nMonto
        'clsCap.ActualizaCargoCaptacion sCuenta, nMonto - nITFDescuento - pnComiDepOtraAge, nMonto - nITFDescuento - pnComiDepOtraAge, nIntGanado, dUltMov, sMovNro, True
        clsCap.ActualizaCargoCaptacion sCuenta, nMonto - nITFDescuento - pnComiDepOtraAge - pnComiDepxMaxOpe, nMonto - nITFDescuento - pnComiDepOtraAge - pnComiDepxMaxOpe, nIntGanado, dUltMov, sMovNro, True 'APRI20190109 ERS077-2018
        If nOperacion = gAhoExtTransAbono Then  '230901
            sMsgOpe = "Ext. Depósito Transferencia"
        ElseIf nOperacion = gAhoExtDepEfec Then
            sMsgOpe = "Ext. Depósito Efectivo"
        ElseIf nOperacion = gAhoExtDepPagServEdelnor Then
            sMsgOpe = "Ext. Dep. Pago Edelnor"
        ElseIf nOperacion = gAhoExtDepOtrosConceptos Then
            sMsgOpe = "Ext. Dep. Otros Conc."
        ElseIf nOperacion = gAhoExtDepDevCredPersonales Then
            sMsgOpe = "Ext. Dep. Dev.Cred.Pers"
        ElseIf nOperacion = gAhoExtTransAbonoL Then
            sMsgOpe = "Ext. Depósito Trans. Lote"
        ElseIf nOperacion = gCapExtNotaDeAbono Then 'FRHU 20150128 ERS048-2014
            sMsgOpe = sConceptoDesc
        ElseIf nOperacion = gAhoExtornoElectronicoDeposito Then 'CTI7 OPEv2*****
            sMsgOpe = "Ext. Dep. conversión de dinero"
        End If
    End If
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
    '**CTI3 (ferimoro) 02102018
    If clsCap.ExisteNroMov(nMovNro) = False Then clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
       
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto

    If pnITFValor > 0 And nITFConcepto = gConcITFCliente Then
        clsCap.AgregaMovCap nMovNro, gITFCobroCargoExt, sCuenta, pnITFValor, nSaldoDisp + pnITFValor, nSaldoCnt + pnITFValor
        clsCap.AgregaMovCapDet nMovNro, gITFCobroCargoExt, sCuenta, gConcITFCliente, pnITFValor
    End If
     'APRI20190109 ERS077-2018
    nComisionDepositos = pnComiDepOtraAge + pnComiDepxMaxOpe
    If nComisionDepositos > 0 Then
        clsCap.AgregaMovCap nMovNro, gAhoExtDepComision, sCuenta, nComisionDepositos, nSaldoDisp + pnITFValor + nComisionDepositos, nSaldoCnt + pnITFValor + nComisionDepositos
        '**BRGO 20110531 Extorno de comisión de depósito en otras agencias
        If pnComiDepOtraAge > 0 Then
            'clsCap.AgregaMovCap nMovNro, gAhoExtDepComision, sCuenta, pnComiDepOtraAge, nSaldoDisp + pnITFValor + pnComiDepOtraAge, nSaldoCnt + pnITFValor + pnComiDepOtraAge
            clsCap.AgregaMovCapDet nMovNro, gAhoExtDepComision, sCuenta, gConcOpeDepOtraAge, pnComiDepOtraAge
        End If
        'End BRGO
        If pnComiDepxMaxOpe > 0 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoExtDepComision, sCuenta, gConcOpeRetxMaxOpe, pnComiDepxMaxOpe
        End If
    End If
    'END APRI

    'MADM 20110712
    If bestaPagoServ Then
        clsCap.ActualizarEstMovPagoServicios nMovNroBus
    End If
    'END MADM
    
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
        
    '***Agregado por ELRO el 20120815, según OYP-RFC024-2012
    If nOperacion = gAhoExtDepTransf Then
        clsCap.actualizarRelacionExtornoVoucherCaptacion nMovNroBus
    End If
    '***Fin Agregado por ELRO el 20120717*******************
    
    'RIRO20150602 ERS162-2014 **********
    'clsCap.dbCmact.CommitTrans
    'bTrans = False
    If bTrans Then
        clsCap.dbCmact.CommitTrans
        bTrans = False
    End If
    'END RIRO **************************
    
    CapExtornoAbonoAho = nSaldoCnt

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "EXTORNO AHORROS"
    If nOperacion = gCapExtNotaDeAbono Then sTipApe = "EXTORNO NOTA DE ABONO" 'FRHU 20150128 ERS048-2014
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
'Do
    If pnITFValor > 0 Then
       If nITFOperacion = gITFCobroEfectivo Then
           nTipPago = 1
       Else
           nTipPago = 2
       End If
    End If

    nSaldoDisp = nSaldoDisp + pnITFValor
    
    nSaldoCnt = nSaldoCnt + pnITFValor

    If sNroDoc <> "" Then
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, , , pbImpTMU)
    Else
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, , , pbImpTMU)
    End If
    
    
' COMENTADO TEPORALMENTE
'    If pnITFValor > 0 Then
'        If nITFConcepto = gConcITFAsumido Then
'            If nITFOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Abono Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Abono Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            End If
'        Else
'            If nITFOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Abono Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Abono Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            End If
'        End If
'    End If
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox Err.Description, vbExclamation, "Error"
    Err.Raise Err.Number, "Error", Err.Description
    CapExtornoAbonoAho = 0
End Function
'OJO 07-11

Public Sub CapExtornaApeEspecial(ByVal sCtaCod As String, ByVal sMovNro As String, _
                                    Optional ByVal sCuenta As String = "")
Dim sSql As String, rsTemp As ADODB.Recordset
Dim conex As COMConecta.DCOMConecta
Set rsTemp = New ADODB.Recordset
Set conex = New COMConecta.DCOMConecta


conex.AbreConexion
sSql = "SELECT NNUMSOLICITUD,NPRODUCTO,CPERSCOD,NMONEDA,NPLAZO,NTASA,NMONTO FROM CapTasaEspecial WHERE NESTADO=2 AND  CCTACOD='" & sCtaCod & "'"

rsTemp.CursorLocation = adUseClient
rsTemp.Open sSql, conex.ConexionActiva, adOpenForwardOnly, adLockReadOnly, adCmdText
If Not (rsTemp.EOF Or rsTemp.BOF) Then

    sSql = "INSERT INTO CAPTASAESPECIAL"
    sSql = sSql & "VALUES(" & rsTemp!nNumSolicitud & ",'" & rsTemp!cPersCod & "'," & rsTemp!nProducto & "," & rsTemp!nMoneda & ",1,'" & sMovNro & "', " & rsTemp!nTasa & ",'EXTORNO ESTADO 2','" & sCuenta & "'," & rsTemp!nMonto & "," & rsTemp!nPlazo & " )"
 
    conex.ConexionActiva.Execute sSql
    rsTemp.Close
End If
rsTemp.ActiveConnection = Nothing
conex.CierraConexion
Set rsTemp = Nothing
Set conex = Nothing
End Sub


'OJO 07-11

Public Function CapExtornoApertura(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional bDocumento As Boolean = False, Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
            Optional sCodIF As String = "", Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional ByVal pnITFValor As Double = 0, Optional ByVal nITFOperacion As CaptacOperacion, Optional ByVal nITFConcepto As CaptacConcepto, _
            Optional ByVal psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
            Optional ByVal psMotExtorno As Variant) As String

Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oImpre As New COMFunciones.FCOMImpresion

Dim sMsgProd As String, sCodUser As String, sMovNroBus As String, sCodUserBus As String
Dim nProd As Producto
Dim nMovNro As Long
Dim dFecSis As Date
Dim nTipPago As Integer

'JUEZ 20130805 *******************************************************
Dim oGen As New COMDConstSistema.DCOMGeneral
Dim clsDef As New NCOMCaptaDefinicion
Dim nTipoCamb As Double
Dim nPorcDisp As Double, nExcedente As Double, nSaldoRetiro As Double
'END JUEZ ************************************************************
Dim lsBoletaExtCargo As String 'JUEZ 20131226
Dim bTrans As Boolean 'JUEZ 20131226

bTrans = False 'JUEZ 20131226
dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
nProd = CLng(Mid(sCuenta, 6, 3))

If nProd = gCapAhorros Then
    sMsgProd = "EXTORNO AHORROS"
ElseIf nProd = gCapPlazoFijo Then
    sMsgProd = "EXTORNO PLAZO FIJO"
ElseIf nProd = gCapCTS Then
    sMsgProd = "EXTORNO CTS"
End If
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

Dim ClsMov As COMDMov.DCOMMov
Set ClsMov = New COMDMov.DCOMMov
sMovNroBus = "": sCodUserBus = ""
sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
sCodUserBus = Right(sMovNroBus, 4)

On Error GoTo ErrGraba
clsCap.dbCmact.BeginTrans
bTrans = True 'JUEZ 20131226
clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
nMovNro = clsCap.GetnMovNro(sMovNro)

'**CTI3 (ferimoro) 02102018
Call clsCap.dInsertDetExtMov(nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1))

clsCap.ActualizaEstadoCuenta sCuenta, gCapEstAnulada, dFecSis, sMovNro
clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, 0, 0
clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto

'Dim oClsMant As NCOMCaptaGenerales
Dim RSTMP As ADODB.Recordset, nTipoTasaInt As Integer

'Set oClsMant = New NCOMCaptaGenerales

'Set rstmp = oClsMant.GetDatosCuenta(sCuenta)
'nTipoTasaInt = rstmp!nPrdTasaInteres

Dim oServ1 As COMDCaptaServicios.DCOMCaptaServicios
Dim nNumsol As Integer
Set oServ1 = New COMDCaptaServicios.DCOMCaptaServicios
 
  Set RSTMP = oServ1.GetEstadoTPCta(sCuenta)
   nNumsol = 0
   If Not RSTMP.EOF Then
     nNumsol = RSTMP!nNumSolicitud
   End If
  
   If nNumsol <> 0 Then
     oServ1.AgregaCapTasaEspecial nNumsol, RSTMP!cPersCod, RSTMP!nProducto, RSTMP!nMoneda, 3, sMovNro, RSTMP!nTasa, "EXTORNO DE APERTURA CON SOLICITUD DE TASA ESPECIAL ", RSTMP!nMonto, sCuenta, RSTMP!nPlazo, 2, RSTMP!bPermanente
   End If
        


Set RSTMP = Nothing
Set oServ1 = Nothing


'***Modificado por ELRO el 201203 nITFOperacion = gITFCobroCargoPF
If pnITFValor > 0 And (nITFOperacion = gITFCobroCargo Or nITFOperacion = gITFCobroCargoPF) And nITFConcepto = gConcITFCliente Then
    clsCap.AgregaMovCap nMovNro, gITFCobroCargoExt, sCuenta, pnITFValor, 0, 0
    clsCap.AgregaMovCapDet nMovNro, gITFCobroCargoExt, sCuenta, gConcITFCliente, pnITFValor
End If

'Call CapExtornaApeEspecial(sCuenta, sMovNro)

clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
'If bDocumento Then
If bDocumento And nTipoDoc <> TpoDocCtaCargoApert Then 'JUEZ 20131226
    If nTipoDoc = TpoDocCheque Then
        clsCap.ActualizaEstadoDocRecEst TpoDocCheque, sNroDoc, sCodIF, sMovNro, gsChqEstExtornado
    End If
End If

'***Agregado por ELRO el 20120717, según OYP-RFC024-2012
If nOperacion = gAhoExtApeTransf Or nOperacion = gPFExtApeTransf Or nOperacion = gCTSExtApeTransf Then
    clsCap.actualizarRelacionExtornoVoucherCaptacion nMovNroBus
End If
'***Fin Agregado por ELRO el 20120717*******************
'JUEZ 20131226 **********************************************************
If nOperacion = gAhoExtApeCargoCta Or nOperacion = gPFExtApeCargoCta Then
    CapExtornoCargoAho nMovNroBus, gAhoExtCargoCtaApert, sNroDoc, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, pnITFValor, nITFOperacion, nITFConcepto, , lsBoletaExtCargo, , 0, 0, pbImpTMU, , , , clsCap.dbCmact
End If
'END JUEZ ***************************************************************
clsCap.dbCmact.CommitTrans
bTrans = False 'JUEZ 20131226

'JUEZ 20130805 Recalcula saldo autorizado retiro Institucion - Persona *****
If Mid(sCuenta, 6, 3) = gCapCTS Then
    Dim rsCta As ADODB.Recordset
    Set rsCta = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, nTipoCamb)
    nExcedente = rsCta!TotalSaldos - rsCta!TotalSueldos
    If nExcedente > 0 Then
        nSaldoRetiro = nExcedente * nPorcDisp / 100
    Else
        nSaldoRetiro = 0
    End If
    clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, 0
End If
'END JUEZ ******************************************************************

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String

'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = "Extorno Apertura"
sTipApe = sMsgProd
Dim clsTit As NCOMCaptaGenerales
Set clsTit = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsTit = Nothing
'Do
    If pnITFValor > 0 Then
        If nITFOperacion = gITFCobroEfectivo Then
             nTipPago = 1
        Else
             nTipPago = 2
        End If
    End If
    
    If bDocumento And nTipoDoc <> TpoDocCtaCargoApert Then
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", 0, 0, "", 1, 0, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, , , pbImpTMU)
    Else
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", 0, 0, "", 1, 0, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, , , pbImpTMU)
    End If

If nOperacion = gAhoExtApeCargoCta Or nOperacion = gPFExtApeCargoCta Then psImpBoleta = psImpBoleta & lsBoletaExtCargo 'JUEZ 20131226

Exit Function
'COMENTADO TEMPORALMENTE
'    If pnITFValor > 0 Then
'        If nITFConcepto = gConcITFAsumido Then
'            If nITFOperacion = gITFCobroEfectivo Then
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Apertura Cta = " & sCuenta, dFecSis, sLpt, 0, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            Else
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Apertura Cta = " & sCuenta, dFecSis, sLpt, 0, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            End If
'        Else
'            If nITFOperacion = gITFCobroEfectivo Then
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Apertura Cta = " & sCuenta, dFecSis, sLpt, 0, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            Else
'                 psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Apertura Cta = " & sCuenta, dFecSis, sLpt, 0, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            End If
'        End If
'    End If

'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

ErrGraba:
    If bTrans Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
    End If
    CapExtornoApertura = ""
    Err.Raise Err.Number, "CapExtornoApertura", Err.Description
End Function

Public Function CapExtornoAperturaLote(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional bDocumento As Boolean = False, Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
            Optional sCodIF As String = "", Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, _
            Optional ByVal psMotExtorno As Variant, _
            Optional ByVal pbTMU As Boolean = False) As String

Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oImpre As New COMFunciones.FCOMImpresion
Dim sMsgProd As String, sCodUser As String
Dim nProd As Producto
Dim nMovNro As Long
Dim dFecSis As Date
Dim rsCtas As ADODB.Recordset
Set rsCtas = New ADODB.Recordset
Dim nTipPago As Integer
Dim sOpeCodITF As String
Dim nITF As Currency

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
'***Modificado por ELRO el 20121205, según OYP-RFC101-2012
'nProd = CLng(Mid(sCuenta, 6, 3))
If nOperacion = gCTSExtApeLoteEfec Then
    nProd = gCapCTS
ElseIf nOperacion = gAhoExtApeLoteChq Then
    nProd = gCapAhorros
ElseIf nOperacion = gPFExtApeLoteChq Then
    nProd = gCapPlazoFijo
Else
    nProd = CLng(Mid(sCuenta, 6, 3))
End If
'***Fin Modificado por ELRO el 20121205******************
If nProd = gCapAhorros Then
    sMsgProd = "EXTORNO AHORROS"
ElseIf nProd = gCapPlazoFijo Then
    sMsgProd = "EXTORNO PLAZO FIJO"
ElseIf nProd = gCapCTS Then
    sMsgProd = "EXTORNO CTS"
End If
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set rsCtas = clsCap.GetApeLoteCuentas(nMovNroBus)
rsCtas.MoveFirst


Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
Set ClsMov = New COMDMov.DCOMMov
sMovNroBus = "": sCodUserBus = ""
sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
sCodUserBus = Right(sMovNroBus, 4)


clsCap.dbCmact.BeginTrans
clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
nMovNro = clsCap.GetnMovNro(sMovNro)

'**CTI3 (ferimoro) 02102018
Call clsCap.dInsertDetExtMov(nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1))

While Not rsCtas.EOF
    sCuenta = rsCtas!cCtaCod
    nMonto = rsCtas!nMonto
    nITF = rsCtas!ITF
    sOpeCodITF = rsCtas!cOpeCodITF
    clsCap.ActualizaEstadoCuenta sCuenta, gCapEstAnulada, dFecSis, sMovNro
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, 0, 0
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    
    If nITF > 0 Then
        clsCap.AgregaMovCap nMovNro, gITFCobroCargoExt, sCuenta, nITF, 0, 0
        clsCap.AgregaMovCapDet nMovNro, gITFCobroCargoExt, sCuenta, gConcITFCliente, nITF
    End If
    
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
    rsCtas.MoveNext
Wend

If bDocumento Then
    If nTipoDoc = TpoDocCheque Then
        clsCap.ActualizaEstadoDocRecEst TpoDocCheque, sNroDoc, sCodIF, sMovNro, gsChqEstExtornado
    End If
End If

clsCap.dbCmact.CommitTrans

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
Dim lsBoletas As String

'Do
  rsCtas.MoveFirst
  While Not rsCtas.EOF
    sCuenta = rsCtas!cCtaCod
    nMonto = rsCtas!nMonto
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = "Extorno Apertura Lote"
    sTipApe = sMsgProd
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
    If bDocumento Then
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", 0, 0, "", 1, 0, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbTMU)
    Else
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", 0, 0, "", 1, 0, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbTMU)
    End If
    rsCtas.MoveNext
  Wend
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

End Function
Public Function GetITFMOV(ByVal nMovNroBus As Long) As Double
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
 GetITFMOV = clsCap.GetITFMOV(nMovNroBus)
Set clsCap = Nothing
End Function
'ALPA 20091117**********************************************
'Public Function CapExtornoCargoAho(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
'            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
'            Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
'            Optional sCodIF As String = "", Optional sNomAge As String = "", Optional sLpt As String = "", _
'            Optional ByVal psCodCmac As String, Optional ByVal pnITFValor As Double = 0, _
'            Optional ByVal nITFOperacion As CaptacOperacion, Optional ByVal nITFConcepto As CaptacConcepto, _
'            Optional ByVal psCodAge As String = "", _
'            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
'            Optional ByVal pnComiRetOtraAge As Double = 0, Optional ByVal pnComiRetxMaxOpe As Double = 0, _
'            Optional ByVal pbImpTMU As Boolean = False) As Double
Public Function CapExtornoCargoAho(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
            Optional sCodIF As String = "", Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional ByVal psCodCmac As String, Optional ByVal pnITFValor As Double = 0, _
            Optional ByVal nITFOperacion As CaptacOperacion, Optional ByVal nITFConcepto As CaptacConcepto, _
            Optional ByVal psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pnComiRetOtraAge As Double = 0, Optional ByVal pnComiRetxMaxOpe As Double = 0, _
            Optional ByVal pbImpTMU As Boolean = False, _
            Optional ByVal rsAbono As ADODB.Recordset, Optional ByRef psBoletaAbono As String, Optional ByVal pnComiRetSinTarj As Double = 0, _
            Optional pCon As ADODB.Connection = Nothing, Optional ByVal pnComiTransf As Double = 0, _
            Optional ByRef pnMovNro As Long, _
            Optional ByVal psMotExtorno As Variant, _
            Optional ByVal pnComEmiCheque As Double = 0, Optional ByVal psComEmiChequeOperacion As CaptacOperacion = 0, Optional ByVal pbComiDebito As Boolean = False) As Double
            'ALPA 20091117
            'JUEZ 20131226 Se agregó pCon
            'CTI4 ERS0112020 Add: pnComEmiCheque, psComEmiChequeOperacion,pbComiDebito

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim rsOrdPag As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long, nExtracto As Long
    Dim nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim nITFMonto As Double
    Dim bTransaccion As Boolean 'JUEZ 20131226
    Dim rsMovRef As ADODB.Recordset 'RIRO20131212 ERS137
    Dim nMovNroRef, lnMovNro As Long 'RIRO20131212 ERS137
    Dim sMovNroCom As String 'RIRO20131212 ERS137
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim rsConcepto As New ADODB.Recordset 'FRHU 20141203 ERS048-2014
    Dim sConceptoDesc As String 'FRHU 20141203 ERS048-2014
    
    Dim nTipPago As Integer
    
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    Dim sNomTit2 As String
    Dim clsTit As NCOMCaptaGenerales
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = "": sCodUserBus = ""
    If pCon Is Nothing Then  'JUEZ 20131226
        sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    Else
        sMovNroBus = sMovNro
    End If
    sCodUserBus = Right(sMovNroBus, 4)

    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    
    'RIRO20131212 ERS137 *************
    'Sleep 1000
    sMovNroCom = ClsMov.GeneraMovNro(dFecSis, Mid(sMovNro, 18, 2), Right(sMovNro, 4))
    'END RIRO ************************
    'FRHU 20141203 ERS048-2014
    If nOperacion = gCapExtNotaDeCargo Then   '330001
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsConcepto = clsMant.GetMovProductoConcepto(nMovNroBus)
        sConceptoDesc = rsConcepto("cDescripcion")
        Set clsMant = Nothing
    End If
    'FIN FRHU 20141203
    bTrans = False
    bTransaccion = False 'JUEZ 20131226
    'Obtiene los datos para el calculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 1, True, False)
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    'JUEZ 20131226 ****************************
    If Not pCon Is Nothing Then
        clsCap.SetConexion pCon
        clsCap.bTransaccion = True
        bTransaccion = True
    End If
    'clsCap.dbCmact.BeginTrans
    If Not bTransaccion Then clsCap.dbCmact.BeginTrans
    'END JUEZ *********************************
    bTrans = True
    
    If sGlosa = "" Then sGlosa = "Extorno Cargo Cuenta = " & sCuenta
    
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nDiasTranscurridos < 0 Then
        nDiasTranscurridos = 0
    End If

    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMonto
    nSaldoDisp = nSaldoDisp + nMonto
    'If nOperacion <> gAhoExtRetComOrdPagDev Then
    
    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
    nITFMonto = GetITFMOV(nMovNroBus)
    If pnITFValor > 0 And nITFConcepto = gConcITFCliente Then
        nITFMonto = pnITFValor
    End If
    
    If nITFOperacion = gITFCobroCargo Then
        'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + nITFMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj + pnComiTransf, nMonto + nITFMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj + pnComiTransf, nIntGanado, dUltMov, sMovNro, True 'Comentado CTI4 ERS0112020
        clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + nITFMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj, nMonto + nITFMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj, nIntGanado, dUltMov, sMovNro, True    'CTI4 ERS0112020
    Else
        'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj + pnComiTransf, nMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj + pnComiTransf, nIntGanado, dUltMov, sMovNro, True 'Comentado CTI4 ERS0112020
        clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj, nMonto + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj, nIntGanado, dUltMov, sMovNro, True  'CTI4 ERS0112020
    End If
    'End If
    
    '***BRGO 20110114 Comentado por declararse PENDIENTE  ***********************************
    '    If nOperacion = gAhoExtDctoEmiOP Then
    '        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    '        Set rsOrdPag = clsMant.GetCapOrdPagEmision_Cuenta(gCapTalOrdPagEstEntregado, sCuenta)
    '        If Not rsCta Is Nothing Then
    '            clsMant.ActualizaCapOrdPagEmision sCuenta, sMovNroBus, gCapTalOrdPagEstSolicitado, rsOrdPag("cMovNro"), gCapTalOrdPagEstEntregado
    '            clsMant.AgregaCapOrdPagEstado sCuenta, sMovNro, gCapTalOrdPagEstExtornado, rsOrdPag("nInicio")
    '        End If
    '        Set clsMant = Nothing
    '        rsOrdPag.Close
    '        Set rsOrdPag = Nothing
    '    End If
   
    '**** End BRGO **************************************************************
    
    If sNroDoc = "" Then
        If nOperacion = gAhoExtRetEfec Then '230301
            sMsgOpe = "Ext. Retiro Efectivo"
        ElseIf nOperacion = gAhoExtRetConsultaSaldos Then '230326
            sMsgOpe = "Ext. Ret.Cons.Saldos"
        ElseIf nOperacion = gAhoExtRetPorteCargoCuenta Then '230327
            sMsgOpe = "Ext. Ret.Porte N/C"
        ElseIf nOperacion = gAhoExtRetComVentaBases Then '230328
            sMsgOpe = "Ext. Ret. Com.Venta Bases"
        ElseIf nOperacion = gAhoExtTransCargo Then  '230902
            sMsgOpe = "Ext. Ret.Transferencia"
        ElseIf nOperacion = gAhoExtDctoEmiExt Then  '230601
            sMsgOpe = "Ext. Ret.Emi.Ext."
        ElseIf nOperacion = gAhoExtDctoEmiOP Then  '230602
            sMsgOpe = "Ext. Ret.Emi.OP"
        ElseIf nOperacion = gAhoExtCargoComDivAho Then 'JUEZ 20130906    230366
            sMsgOpe = "Ext. Cargo por cobro de comisiones diversas de ahorros"
        ElseIf nOperacion = gCapExtCargoAfilSegTarjeta Then 'JUEZ 20130523   290001
            sMsgOpe = "EXT. CARGO AFIL. SEGURO TARJ."
            
        ElseIf nOperacion = gAhoExtRetComOrdPagDev Then  '230318
            sMsgOpe = "Ext. Retiro Com. OP Dev."
        ElseIf nOperacion = gAhoExtRetComServEdelnor Then  '230324
            sMsgOpe = "Ext. Ret.Com.Edelnor"
        ElseIf nOperacion = gAhoExtRetComServEdelnor Then '230324
            sMsgOpe = "Ext. Ret. Otros Conc."
        ElseIf nOperacion = gAhoExtTransCargoL Then  '230905
            sMsgOpe = "Ext. Ret.Transf. Lote"
        ElseIf nOperacion = gCapExtNotaDeCargo Then 'FRHU 20150128 ERS048-2014 330001
            sMsgOpe = sConceptoDesc
        ElseIf nOperacion = "290005" Then
            sMsgOpe = "Ext. Cargo Afil. Sepel."
        ElseIf nOperacion = "950001" Then
            sMsgOpe = "Ext. Cargo conversión de dinero"
        End If
    Else
        If nTipoDoc = TpoDocOrdenPago Then
            If nOperacion = gAhoExtRetOPCanje Then '230304
                sMsgOpe = "Ext. Retiro OP Canje"
            ElseIf nOperacion = gAhoExtRetComOrdPagDev Then '230318
                sMsgOpe = "Ext. Retiro Com. OP Dev."
            ElseIf nOperacion = gAhoExtRetFondoFijo Then  '230307
                sMsgOpe = "Ext. Retiro Fondo Fijo OP "
            Else
                sMsgOpe = "Ext. Retiro OP"
            End If
           ' clsCap.AgregaOrdenPago sCuenta, sNroDoc, sMovNro, nMonto, gCapOPEstExtornada
           clsCap.EliminaOrdenPago sCuenta, sNroDoc
        ElseIf nTipoDoc = TpoDocNotaCargo Then
            sMsgOpe = " Ext. Retiro NC"
        End If
    End If

    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    'JUEZ 20131226 **********************************************************
    'clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    If Not bTransaccion Then
    
        clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    
    End If
    'END JUEZ ***************************************************************
    nMovNro = clsCap.GetnMovNro(sMovNro)
    '**CTI3 (ferimoro) 02102018
    If clsCap.ExisteNroMov(nMovNro) = False Then clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    
    pnMovNro = nMovNro 'RECO20160209 ERS073-2015
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    If sModDep = "" Then sModDep = clsCap.GetCaptaOperacion(Trim(Str(gAhoExtTransAbono)))

    'ALPA 20091109*****************************************
    If Not rsAbono Is Nothing And nOperacion <> "230905" Then
    If Not (rsAbono.BOF Or rsAbono.EOF) Then
    Do While Not (rsAbono.BOF Or rsAbono.EOF)
        If rsAbono!cCtaCod <> "" Then
            clsCap.ActualizaSaldoAnteriorAho rsAbono!cCtaCod, rsAbono!nSaldoDisp
        End If
        If nITFOperacion = gITFCobroCargo Then
            If rsAbono!cCtaCod <> "" Then
                clsCap.ActualizaAbonoCaptacion rsAbono!cCtaCod, -rsAbono!nMontoAbono, -rsAbono!nMontoAbono, 0, dUltMov, sMovNro, True
            End If
        Else
            If rsAbono!cCtaCod <> "" Then
                clsCap.ActualizaAbonoCaptacion rsAbono!cCtaCod, -rsAbono!nMontoAbono, -rsAbono!nMontoAbono, 0, dUltMov, sMovNro, True
            End If
        End If
        If rsAbono!cCtaCod <> "" Then
            clsCap.AgregaMovCap nMovNro, "230901", rsAbono!cCtaCod, rsAbono!nMontoAbono, rsAbono!nSaldoDisp - rsAbono!nMontoAbono, rsAbono!nSaldoCnt - rsAbono!nMontoAbono
            clsCap.AgregaMovCapDet nMovNro, "230901", rsAbono!cCtaCod, gConcCapital, rsAbono!nMontoAbono
            clsCap.AgregaMovCap nMovNro, gITFCobroCargoExt, rsAbono!cCtaCod, rsAbono!nMontoITF, rsAbono!nSaldoDisp - rsAbono!nMontoAbono, rsAbono!nSaldoCnt - rsAbono!nMontoAbono
            clsCap.AgregaMovCapDet nMovNro, gITFCobroCargoExt, rsAbono!cCtaCod, gConcITFCliente, rsAbono!nMontoITF
        End If
        Set clsTit = New NCOMCaptaGenerales
        sNomTit2 = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(rsAbono!cCtaCod))
        Set clsTit = Nothing
        If sNroDoc <> "" Then
            psBoletaAbono = psBoletaAbono & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(rsAbono!nMontoAbono), sNomTit2, rsAbono!cCtaCod, "", rsAbono!nSaldoDisp - rsAbono!nMontoAbono, 0, "", nExtracto, rsAbono!nSaldoCnt - rsAbono!nMontoAbono, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , "230901", sCodUserBus, True, , , , , , , 3, rsAbono!nMontoITF, True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU)
        Else
            psBoletaAbono = psBoletaAbono & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(rsAbono!nMontoAbono), sNomTit2, rsAbono!cCtaCod, "", rsAbono!nSaldoDisp - rsAbono!nMontoAbono, 0, "", 1, rsAbono!nSaldoCnt - rsAbono!nMontoAbono, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , "230901", sCodUserBus, True, , , , , , , 3, rsAbono!nMontoITF, True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU)
        End If
    rsAbono.MoveNext
    Loop
    End If
    sModDep = ""
    End If
    '******************************************************
    
    If pnITFValor > 0 And nITFConcepto = gConcITFCliente And (nITFOperacion = gITFCobroCargo Or nITFOperacion = gITFCobroCMACCargo) Then
        clsCap.AgregaMovCap nMovNro, gITFCobroCargoExt, sCuenta, pnITFValor, nSaldoDisp + pnITFValor, nSaldoCnt + pnITFValor
        clsCap.AgregaMovCapDet nMovNro, gITFCobroCargoExt, sCuenta, gConcITFCliente, pnITFValor
    End If
    
'COMENTADO POR APRI20190109 ERS077-2018
'    If pnComiRetOtraAge > 0 Then
'        clsCap.AgregaMovCap nMovNro, gAhoExtretComision, sCuenta, pnComiRetOtraAge, nSaldoDisp + pnITFValor + pnComiRetOtraAge, nSaldoCnt + pnITFValor + pnComiRetOtraAge
'        clsCap.AgregaMovCapDet nMovNro, gAhoExtretComision, sCuenta, gConcOpeRetOtraAge, pnComiRetOtraAge
'    End If
'
'    If pnComiRetxMaxOpe > 0 Then
'        clsCap.AgregaMovCap nMovNro, gAhoExtretComision, sCuenta, pnComiRetxMaxOpe, nSaldoDisp + pnITFValor + pnComiRetxMaxOpe, nSaldoCnt + pnITFValor + pnComiRetxMaxOpe
'        clsCap.AgregaMovCapDet nMovNro, gAhoExtretComision, sCuenta, gConcOpeRetxMaxOpe, pnComiRetxMaxOpe
'    End If
'APRI20190109 ERS077-2018
    Dim nComisionDepositos As Double
    nComisionDepositos = pnComiRetOtraAge + pnComiRetxMaxOpe
    If nComisionDepositos > 0 Then
        clsCap.AgregaMovCap nMovNro, gAhoExtretComision, sCuenta, nComisionDepositos, nSaldoDisp + pnITFValor + nComisionDepositos, nSaldoCnt + pnITFValor + nComisionDepositos
        If pnComiRetOtraAge > 0 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoExtretComision, sCuenta, gConcOpeRetOtraAge, pnComiRetOtraAge
        End If
        If pnComiRetxMaxOpe > 0 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoExtretComision, sCuenta, gConcOpeRetxMaxOpe, pnComiRetxMaxOpe
        End If
    End If
'END APRI
    
    'Add By Gitu 12/12/2013
    If pnComiRetSinTarj > 0 Then
        clsCap.AgregaMovCap nMovNro, gAhoExtComiRetSinTarj, sCuenta, pnComiRetSinTarj, nSaldoDisp + pnITFValor + pnComiRetSinTarj, nSaldoCnt + pnITFValor + pnComiRetSinTarj
        clsCap.AgregaMovCapDet nMovNro, gAhoExtComiRetSinTarj, sCuenta, gConcRetSinTarj, pnComiRetSinTarj
    End If
    'End GITU
    
    ' RIRO20131212 ERS137 *****
    If nOperacion = gAhoExtRetTransf Or nOperacion = gAhoExtRetEmiChq Then  '230303 ,CTI4 ERS0112020 Add:gAhoExtRetEmiChq
        Set rsMovRef = clsCap.MovAsociados(nMovNroBus)
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        If Not rsMovRef Is Nothing Then
            If Not rsMovRef.EOF And Not rsMovRef.BOF Then
                nMovNroRef = (rsMovRef!nMovNroRef)
            End If
        End If
        If nMovNroRef > 0 Then
            clsCap.AgregaMov sMovNroCom, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagVigente
            lnMovNro = clsCap.GetnMovNro(sMovNroCom)
            clsCap.AgregaMovRef lnMovNro, nMovNroRef
            clsCap.ActualizaEstadoMov nMovNroRef, gMovFlagEliminado
            
            '**CTI3 (ferimoro) 02102018
            clsCap.dInsertDetExtMov lnMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
            
        Else
            'Comentado x CTI4 ERS0112020
            'clsCap.AgregaMovCap nMovNro, "200371", sCuenta, pnComiTransf, nSaldoDisp + pnComiRetxMaxOpe + pnComiTransf + pnITFValor, _
                                                                          nSaldoCnt + pnComiRetxMaxOpe + pnComiTransf + pnITFValor
            'clsCap.AgregaMovCapDet nMovNro, "200371", sCuenta, 27, pnComiTransf
            
            'CTI4 ERS0112020
            If nOperacion = gAhoExtRetEmiChq Then
                clsCap.ActualizaAbonoCaptacion sCuenta, pnComEmiCheque, pnComEmiCheque, nIntGanado, dUltMov, sMovNro, True
                clsCap.AgregaMovCap nMovNro, gAhoExtComisionCargoCtaEmisionCheque, sCuenta, pnComEmiCheque, nSaldoDisp + IIf(nITFOperacion = gITFCobroCargo, pnITFValor, 0) + pnComEmiCheque, nSaldoCnt + pnITFValor + pnComEmiCheque
                clsCap.AgregaMovCapDet nMovNro, gAhoExtComisionCargoCtaEmisionCheque, sCuenta, gConcComEmisionCheque, pnComEmiCheque
            Else
                clsCap.ActualizaAbonoCaptacion sCuenta, pnComiTransf, pnComiTransf, nIntGanado, dUltMov, sMovNro, True
                clsCap.AgregaMovCap nMovNro, gAhoExtComisionCargoCtaRetTrAboCtaBco, sCuenta, pnComiTransf, nSaldoDisp + pnComiRetxMaxOpe + pnComiTransf + IIf(nITFOperacion = gITFCobroCargo, pnITFValor, 0), _
                                                                          nSaldoCnt + pnComiRetxMaxOpe + pnComiTransf + pnITFValor
                clsCap.AgregaMovCapDet nMovNro, gAhoExtComisionCargoCtaRetTrAboCtaBco, sCuenta, 27, pnComiTransf
            End If
            'CTI4 end
        End If
        Set rsMovRef = Nothing
        Set clsMant = Nothing
    End If
    ' FIN RIRO ****************

    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
    'JUEZ 20131226 **************************************
    'clsCap.dbCmact.CommitTrans
    If Not bTransaccion Then clsCap.dbCmact.CommitTrans
    'END JUEZ *******************************************
    
    'CTI3 ERS082-2018
    'If bTransaccion Then clsCap.dbCmact.CommitTrans: clsCap.dbCmact.BeginTrans
    '----------------------
    
    CapExtornoCargoAho = nSaldoCnt
   
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "EXTORNO AHORROS"
    If nOperacion = gCapExtNotaDeCargo Then sTipApe = "EXTORNO NOTA DE CARGO" 'FRHU 20150128 ERS048-2014
    If nOperacion = "290005" Then sTipApe = "EXTORNO CARGO AFIL. SEPEL." 'RECO20160209 ERS073-2015
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing

    If sModDep = "" Then sModDep = clsCap.GetCaptaOperacion(Trim(Str(nOperacion)))

    If pnITFValor > 0 Then
        If nITFOperacion = gITFCobroEfectivo Then
           nTipPago = 1
        Else
           nTipPago = 2
        End If
    End If
    'Comentado CTI4 ERS0112020
    'nSaldoCnt = nSaldoCnt + pnITFValor + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj
    'nSaldoDisp = nSaldoDisp + pnITFValor + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj
    
    'CTI4 ERS0112020
    nSaldoCnt = nSaldoCnt + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj
    nSaldoDisp = nSaldoDisp + pnComiRetOtraAge + pnComiRetxMaxOpe + pnComiRetSinTarj
    If nOperacion = gAhoExtRetEmiChq Then
        nSaldoCnt = nSaldoCnt + IIf(nITFOperacion = gITFCobroCargo, pnITFValor, 0) + IIf(psComEmiChequeOperacion = gComisionEmisionChequeCargoCta, pnComEmiCheque, 0)
        nSaldoDisp = nSaldoDisp + IIf(nITFOperacion = gITFCobroCargo, pnITFValor, 0) + IIf(psComEmiChequeOperacion = gComisionEmisionChequeCargoCta, pnComEmiCheque, 0)
    ElseIf nOperacion = gAhoExtRetTransf Then
        nSaldoCnt = nSaldoCnt + IIf(nITFOperacion = gITFCobroCargo, pnITFValor, 0) + IIf(pbComiDebito, pnComiTransf, 0)
        nSaldoDisp = nSaldoDisp + IIf(nITFOperacion = gITFCobroCargo, pnITFValor, 0) + IIf(pbComiDebito, pnComiTransf, 0)
    Else
        nSaldoCnt = nSaldoCnt + pnITFValor
        nSaldoDisp = nSaldoDisp + pnITFValor
    End If
    'CTI4 end
    
    If sNroDoc <> "" Then
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU)
    Else
        'Comentado CTI4 ERS0112020
        'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, , , , , , pnComiRetSinTarj, , , , pnComiTransf) 'RIRO20131212 ERS137 - Se agregó "pnComiTransf"
        
        'CTI4 ERS0112020 *******
        If nOperacion = gAhoExtRetEmiChq Then
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, , , , , , pnComEmiCheque, psComEmiChequeOperacion, , , pnComiTransf) 'RIRO20131212 ERS137 - Se agregó "pnComiTransf"
        Else
            psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, pnITFValor, True, pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, , , , , , pnComiRetSinTarj, , , , pnComiTransf) 'RIRO20131212 ERS137 - Se agregó "pnComiTransf"
        End If
        'CTI4 end
    End If
    
    
    
    ' COMENTADO TEMPORALMENTE
    '    If pnITFValor > 0 Then
    '        If nITFConcepto = gConcITFAsumido Then
    '            If nITFOperacion = gITFCobroEfectivo Then
    '                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Cargo Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
    '            Else
    '                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Cargo Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
    '            End If
    '        Else
    '            If nITFOperacion = gITFCobroEfectivo Then
    '                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Cargo Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
    '            Else
    '                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, "Extorno Cargo Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
    '            End If
    '        End If
    '    End If
    
    'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Exit Function
ErrGraba:
    'If bTrans Then clsCap.dbCmact.RollbackTrans
    If bTrans And Not bTransaccion Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
    End If
    Err.Raise Err.Number, "CapExtornoCargoAho", Err.Description
    CapExtornoCargoAho = 0
End Function

'OJO 07-11
Public Function CapExtornoCargoAhoOPCertificada(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            ByVal sNroDoc As String, Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String = "", _
            Optional ByVal psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False) As Double

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset, rsPers As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean
    Dim nExtracto As Long, nDiasTranscurridos As Long, i As Long
    Dim nMovNro As Long
    Dim sMsgOpe As String, sNombreIF As String, sCodUser As String
    Dim dFecSis As Date
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    
    Dim oImpre As New COMFunciones.FCOMImpresion

    'Obtiene los datos para el calculo
    
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = "": sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)



    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    nIntAcum = rsCta("nIntAcum")
    nExtracto = rsCta("nTransacc")
    rsCta.Close
    Set rsCta = Nothing
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    clsCap.AgregaOrdenPago sCuenta, sNroDoc, sMovNro, nMonto, gCapOPEstExtornada
    If nOperacion = gAhoRetOPCert Then
        sMsgOpe = "Ext.Ret.OP Cert."
    ElseIf nOperacion = gAhoRetOPCertCanje Then
        sMsgOpe = "Ext.Ret.OP Cert.Canje"
    End If
    If sGlosa <> "" Then
        sGlosa = sGlosa & ". Extorno OP Certificada Cuenta = " & sCuenta
    Else
        sGlosa = "Extorno OP Certificada Cuenta = " & sCuenta
    End If
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
    clsCap.dbCmact.CommitTrans
    CapExtornoCargoAhoOPCertificada = nSaldoCnt
    
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "EXTORNO AHORROS"
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing

'Do
    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapExtornoCargoAhoOPCertificada = 0
End Function

Public Function CapExtornoCargoCTS(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
            Optional ByVal pnComiRetSinTarj As Double, Optional ByVal pnComiTransf As Double = 0, _
            Optional ByVal psMotExtorno As Variant, Optional ByVal pnComiRetOtraAge As Double = 0, Optional ByVal pnComiRetxMaxOpe As Double = 0) As Double
'APRI20190109 ERS077-2018 Add pnComiRetOtraAge, pnComiRetxMaxOpe
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim nSaldRetiro As Double, nIntGanadoRet As Double
    Dim dUltMov As Date
    Dim bTrans As Boolean
    Dim nDiasTranscurridos As Long, nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim oGen As New COMDConstSistema.DCOMGeneral '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim rsCtaSueldos As ADODB.Recordset '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nTotalSaldos As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nTotalSueldos As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nExcedente As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nPorDisp As Double '***Agregado por ELRO el 20130118, según TI-ERS031-2013
    Dim nMontoMN As Double 'JUEZ 20130731
    Dim nTpoPrograma As Integer 'JUEZ 20130816
    Dim rsMovRef As ADODB.Recordset 'RIRO20131212 ERS137
    Dim nMovNroRef As Long 'RIRO20131212 ERS137
    Dim sMovNroCom As String 'RIRO20131212 ERS137
    Dim bCeseLaboral As Boolean 'JUEZ 20140319
    Dim ClsMov As COMDMov.DCOMMov
    Dim nSaldRetiro1 As Double, nDU01 As Double 'APRI20200415 POR COVID-19
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    
    'RIRO20131212 ERS137 *************
    Sleep 1000
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroCom = ClsMov.GeneraMovNro(dFecSis, Mid(sMovNro, 18, 2), Right(sMovNro, 4))
    'END RIRO ************************
    
    bTrans = False
    'Obtiene los datos para el calculo
    Dim sCodUserBus As String, sMovNroBus As String
    sMovNroBus = "": sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)

    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    nSaldRetiro = rsCta("nSaldRetiro")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    nIntSaldo = rsCta("nIntSaldo")
    nExtracto = rsCta("nTransacc") + 1
    '***Agregado por ELRO el 20130118, según TI-ERS031-2013****
    nPorDisp = rsCta("nPorDisp")
    '***FinAgregado por ELRO el 20130118, según TI-ERS031-2013
    nTpoPrograma = rsCta("nTpoPrograma") 'JUEZ 20130816
    bCeseLaboral = rsCta("bCeseLaboral") 'JUEZ 20140319
    'APRI20200415 POR COVID-19
    nSaldRetiro1 = Round(rsCta("nSaldRetiro1"), 2)
    nDU01 = Round(rsCta("nDU01"), 2)
    'END APRI
    rsCta.Close
    Set rsCta = Nothing

    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True

    If sGlosa = "" Then
        sGlosa = "Extorno Cargo Cuenta = " & sCuenta
    Else
        sGlosa = sGlosa & Chr$(13) & ".Extorno Cargo Cuenta = " & sCuenta
    End If

    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nDiasTranscurridos < 0 Then
        nDiasTranscurridos = 0
    End If
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)
    nIntGanadoRet = GetInteres(nSaldRetiro, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)
    
    'nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    'nIntGanadoRet = GetInteres(nSaldoRetiro, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMonto + pnComiRetSinTarj
    nSaldoDisp = nSaldoDisp + nMonto + pnComiRetSinTarj
    
    '***Agregado por ELRO el 20130118, según TI-ERS031-2013****
    Set rsCtaSueldos = New ADODB.Recordset
    Set rsCtaSueldos = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'Obtiene valores en Soles
    nTotalSaldos = rsCtaSueldos!TotalSaldos
    nTotalSueldos = rsCtaSueldos!TotalSueldos
    Set rsCtaSueldos = Nothing
    
    'nMontoMN = (nMonto + pnComiTransf) * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'JUEZ 20130731 Saldo Retiro por Institucion y Persona
    'nMontoMN = (nMonto + pnComiRetSinTarj) * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'JUEZ 20140730 Se cambió pnComiTransf x pnComiRetSinTarj
    nMontoMN = (nMonto + pnComiRetSinTarj + pnComiRetOtraAge + pnComiRetxMaxOpe) * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'APRI20190109 ERS077-2018
    'nExcedente = (nTotalSaldos + nMonto) - nTotalSueldos
    'nExcedente = (nTotalSaldos + IIf(nTpoPrograma = 2, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20130731 Si nTpoPrograma es NO ACTIVO (2) No restaura saldo retiro
    nExcedente = (nTotalSaldos + IIf(nTpoPrograma = 2 And bCeseLaboral, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20140319 Si tiene Cese Laboral no restaura saldo retiro
    If nExcedente > 0 Then
       nSaldRetiro = nExcedente * (nPorDisp / 100)
    Else
       nSaldRetiro = 0
    End If
    '***Fin Agregado por ELRO el 20130118, según TI-ERS031-2013

    If nOperacion <> "250303" Then
        'nSaldRetiro = nSaldRetiro + nMonto'***comentado por ELRO el 20130118, según TI-ERS031-2013****
    Else
    
      Dim nIntaRet As Double
        nIntaRet = clsCap.GetIntaRetMov(nMovNroBus)
        '***Modificado por ELRO el 20130118, según TI-ERS031-2013****
        'nSaldRetiro = nSaldRetiro + (nMonto - nIntaRet)
        nSaldRetiro = nSaldRetiro - nIntaRet
        '***Fin Modificado por ELRO el 20130118, según TI-ERS031-2013
    End If
    'APRI20200415 POR COVID-19
     nDU01 = nDU01 + IIf((nMontoMN - nSaldRetiro) < 0, 0, (nMontoMN - nSaldRetiro))
    'END APRI
    
    'clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + pnComiRetSinTarj + pnComiTransf, nMonto + pnComiRetSinTarj + pnComiTransf, nIntGanado, dUltMov, sMovNro, True
    clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + pnComiRetSinTarj + pnComiTransf + pnComiRetOtraAge + pnComiRetxMaxOpe, nMonto + pnComiRetSinTarj + pnComiTransf + pnComiRetOtraAge + pnComiRetxMaxOpe, nIntGanado, dUltMov, sMovNro, True 'APRI20190109 ERS077-2018
    'clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo + nIntGanadoRet
    clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo + nIntGanadoRet, nDU01 'APRI20200415 POR COVID-19
    
    If sNroDoc = "" Then
        'JUEZ 20130906 ***********************************
        If nOperacion = gCTSExtCargoComDivAho Then
            sMsgOpe = "Ext. Cargo por cobro de comisiones diversas de ahorros"
        Else
            sMsgOpe = "Ext. Retiro Efectivo"
        End If
        'END JUEZ ****************************************
    Else
        If nTipoDoc = TpoDocNotaCargo Then
            sMsgOpe = " Ext. Retiro NC"
        End If
    End If
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
    '**CTI3 (ferimoro) 02102018
    clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp - pnComiRetSinTarj, nSaldoCnt - pnComiRetSinTarj
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    
    ' RIRO20131212 ERS137 *****
    Dim lnMovNro As Double
    If nOperacion = gCTSExtRetTransf Then
        Set rsMovRef = clsCap.MovAsociados(nMovNroBus)
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        If Not rsMovRef Is Nothing Then
            If Not rsMovRef.EOF And Not rsMovRef.BOF Then
                nMovNroRef = (rsMovRef!nMovNroRef)
            End If
        End If
        If nMovNroRef > 0 Then
            clsCap.AgregaMov sMovNroCom, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagVigente
            lnMovNro = clsCap.GetnMovNro(sMovNroCom)
            '**CTI3 (ferimoro) 02102018
            clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
            
            clsCap.AgregaMovRef lnMovNro, nMovNroRef
            clsCap.ActualizaEstadoMov nMovNroRef, gMovFlagEliminado
        Else
            clsCap.AgregaMovCap nMovNro, "220307", sCuenta, pnComiTransf, nSaldoDisp + pnComiTransf, _
                                                                           nSaldoCnt + pnComiTransf
            clsCap.AgregaMovCapDet nMovNro, "220307", sCuenta, 27, pnComiTransf
        End If
        Set rsMovRef = Nothing
        Set clsMant = Nothing
    End If
    ' FIN RIRO ****************
    
    'Add By Gitu 12/12/2013
    If pnComiRetSinTarj > 0 Then
        clsCap.AgregaMovCap nMovNro, gAhoExtComiRetSinTarj, sCuenta, pnComiRetSinTarj, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, gAhoExtComiRetSinTarj, sCuenta, gConcRetSinTarj, pnComiRetSinTarj
    End If
    'End GITU
    'APRI20190109 ERS077-2018
    Dim nComisionRetiro As Double
    nComisionRetiro = pnComiRetOtraAge + pnComiRetxMaxOpe
    If nComisionRetiro > 0 Then
        clsCap.AgregaMovCap nMovNro, "250404", sCuenta, nComisionRetiro, nSaldoDisp + nComisionRetiro, nSaldoCnt + nComisionRetiro
        If pnComiRetOtraAge > 0 Then
            clsCap.AgregaMovCapDet nMovNro, "250404", sCuenta, gConcOpeRetOtraAge, pnComiRetOtraAge
        End If
        If pnComiRetxMaxOpe > 0 Then
            clsCap.AgregaMovCapDet nMovNro, "250404", sCuenta, gConcOpeRetxMaxOpe, pnComiRetxMaxOpe
        End If
    End If
    nSaldoCnt = nSaldoCnt + nComisionRetiro
    nSaldoDisp = nSaldoDisp + nComisionRetiro
    'END APRI
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
    clsCap.dbCmact.CommitTrans
    CapExtornoCargoCTS = nSaldoCnt

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "EXTORNO CTS"
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
'Do
    If sNroDoc <> "" Then
        'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU) 'APRI20190109 ERS077-2018
    Else
        'psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU, , , , , , , , , , pnComiTransf)   'RIRO20131212 ERS137
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , pnComiRetOtraAge, pnComiRetxMaxOpe, pbImpTMU, , , , , , , , , , pnComiTransf)   'APRI20190109 ERS077-2018
    End If
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "CapExtornoCargoAho", Err.Description
    CapExtornoCargoCTS = 0
End Function

Public Function CapExtornoCancelacion(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional nTipoDoc As TpoDoc = TpoDocNotaCargo, Optional sNroDoc As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional ByVal nITFValor As Double = 0, Optional ByVal nITFOperacion As CaptacOperacion, _
            Optional ByVal nITFConcepto As CaptacConcepto, _
            Optional ByVal psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional pbImpTMU As Boolean, _
            Optional ByVal pnComiRetSinTarj As Double, Optional ByVal pnComiTransf As Double = 0, _
            Optional ByVal psMotExtorno As Variant) As Double

Dim nMovNro As Long
Dim sMsgOpe As String, sCodUser As String
Dim clsMant As NCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento

Dim oImpre As New COMFunciones.FCOMImpresion

Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim dFecSis As Date
Dim bTrans As Boolean
Dim rsCta As New ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nExtracto, lnMovNro As Long
Dim nTipPago As Integer

Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
Set ClsMov = New COMDMov.DCOMMov
sMovNroBus = "": sCodUserBus = ""
sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
sCodUserBus = Right(sMovNroBus, 4)

'JUEZ 20130726 *******************************************************
Dim oGen As New COMDConstSistema.DCOMGeneral
Dim clsDef As New NCOMCaptaDefinicion
Dim nTipoCamb As Double
Dim nPorcDisp As Double, nExcedente As Double, nSaldoRetiro As Double
'END JUEZ ************************************************************

'RIRO20131212 ERS137 ********************
Dim rsMovRef As ADODB.Recordset
Dim nMovNroRef As Long
Dim sMovNroCom As String
Dim sCodOperacionCom As String
'END RIRO *******************************

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)

'RIRO20131212 ERS137 *************
Sleep 1000
sMovNroCom = ClsMov.GeneraMovNro(dFecSis, Mid(sMovNro, 18, 2), Right(sMovNro, 4))
'END RIRO ************************

bTrans = False
'nPorcDisp = clsDef.GetCapParametro(gPorRetCTS) 'JUEZ 20130726
nTipoCamb = oGen.GetTipCambio(dFecSis, TCFijoMes) 'JUEZ 20130726
'Obtiene los datos para el calculo
Set clsMant = New NCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuenta(sCuenta)
Set clsMant = Nothing
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
nEstado = rsCta("nPrdEstado")
nIntAcum = rsCta("nIntAcum")
nExtracto = rsCta("nTransacc")
If Mid(sCuenta, 6, 3) = gCapCTS Then 'JUEZ 20141017
    nPorcDisp = rsCta("nPorDisp")
End If
rsCta.Close
Set rsCta = Nothing
Set clsMant = Nothing

'Inicia la transaccion
On Error GoTo ErrGraba
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
clsCap.dbCmact.BeginTrans
bTrans = True

If sGlosa = "" Then
    sGlosa = "Extorno Cancelacion Cuenta = " & sCuenta
Else
    sGlosa = sGlosa & Chr$(13) & "Extorno Cancelación Cuenta = " & sCuenta
End If

clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
If sNroDoc = "" Then
    sMsgOpe = "Ext. Canc. Efectivo"
Else
    If nTipoDoc = TpoDocNotaCargo Then
        sMsgOpe = " Ext. Canc. NC"
    End If
End If

clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
nMovNro = clsCap.GetnMovNro(sMovNro)

'***CTI3 (ferimoro) 17102018
clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)

clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

'***Agregado por ELRO el 20120328, según OYP-RFC023-2012
If nOperacion = gPFExtCancEfec Then
    Call clsCap.actualizarAfectacion(nMovNroBus, False)
End If
'***Fin Agregado por ELRO*******************************

    'Add By Gitu 12/12/2013
    'If pnComiRetSinTarj > 0 And Mid(sCuenta, 6, 3) <> "234" Then
    If pnComiRetSinTarj > 0 Then 'JUEZ 20141006
    '    clsCap.AgregaMovCap nMovNro, gAhoExtComiRetSinTarj, sCuenta, pnComiRetSinTarj, nSaldoDisp + pnComiRetSinTarj, nSaldoCnt + pnComiRetSinTarj
    '    clsCap.AgregaMovCapDet nMovNro, gAhoExtComiRetSinTarj, sCuenta, gConcRetSinTarj, pnComiRetSinTarj
    'Else
        clsCap.AgregaMovCap nMovNro, gAhoExtComiRetSinTarj, sCuenta, pnComiRetSinTarj, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, gAhoExtComiRetSinTarj, sCuenta, gConcRetSinTarj, pnComiRetSinTarj
    End If
    'End GITU
    
    ' RIRO20131212 ERS137 *****
    If nOperacion = gAhoExtCanctransf Or nOperacion = gPFExtCancTransf Or nOperacion = gCTSExtCancTransfAbCta Then
        Set rsMovRef = clsCap.MovAsociados(nMovNroBus)
        If Not rsMovRef Is Nothing Then
            If Not rsMovRef.EOF And Not rsMovRef.BOF Then
                nMovNroRef = (rsMovRef!nMovNroRef)
            End If
        End If
        If nOperacion = gPFExtCancTransf Then
            sCodOperacionCom = "210213"
        ElseIf nOperacion = gCTSExtCancTransfAbCta Then
            sCodOperacionCom = "220308"
        ElseIf nOperacion = gAhoExtCanctransf Then
            sCodOperacionCom = "200372"
        End If
        If nMovNroRef > 0 Then
            clsCap.AgregaMov sMovNroCom, sCodOperacionCom, sGlosa, gMovEstContabNoContable, gMovFlagVigente
            lnMovNro = clsCap.GetnMovNro(sMovNroCom)
            '***CTI3 (ferimoro) 17102018
            clsCap.dInsertDetExtMov lnMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
            
            clsCap.AgregaMovRef lnMovNro, nMovNroRef
            clsCap.ActualizaEstadoMov nMovNroRef, gMovFlagEliminado
        Else
            If nOperacion = gPFExtCancTransf Then
                sCodOperacionCom = "210214"
            ElseIf nOperacion = gCTSExtCancTransfAbCta Then
                sCodOperacionCom = "220309"
            ElseIf nOperacion = gAhoExtCanctransf Then
                sCodOperacionCom = "200373"
            End If
            clsCap.AgregaMovCap nMovNro, sCodOperacionCom, sCuenta, pnComiTransf, nSaldoDisp + pnComiTransf, _
                                                                           nSaldoCnt + pnComiTransf
            clsCap.AgregaMovCapDet nMovNro, sCodOperacionCom, sCuenta, 27, pnComiTransf
        End If
        Set rsMovRef = Nothing
        Set clsMant = Nothing
    End If
    ' FIN RIRO ****************
        
clsCap.dbCmact.CommitTrans

'JUEZ 20130726 Recalcula saldo autorizado retiro Institucion - Persona *****
If Mid(sCuenta, 6, 3) = gCapCTS Then
    Set rsCta = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, nTipoCamb)
    nExcedente = rsCta!TotalSaldos - rsCta!TotalSueldos
    If nExcedente > 0 Then
        nSaldoRetiro = nExcedente * nPorcDisp / 100
    Else
        nSaldoRetiro = 0
    End If
    clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldoRetiro, 0 'JUEZ 20130726
End If
'END JUEZ ******************************************************************

'AMDO 20150331 Extorno Tarjetas Canceladas y relación de Tarjeta - Cuenta
 'COMENTADO POR CTI3: 08022018 -No ubica el Procedimiento
  'clsCap.ExtornoTarjetasCuentaCancelada nMovNroBus 'AMDO 20150331
'END AMDO ******************************************************************

bTrans = False
CapExtornoCancelacion = nSaldoCnt
Set clsCap = Nothing

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe

If CLng(Mid(sCuenta, 6, 3)) = gCapAhorros Then
    sTipApe = "EXTORNO AHORROS"
ElseIf CLng(Mid(sCuenta, 6, 3)) = gCapPlazoFijo Then
    sTipApe = "EXTORNO PLAZO FIJO"
ElseIf CLng(Mid(sCuenta, 6, 3)) = gCapCTS Then
    sTipApe = "EXTORNO CTS"
End If

Dim clsTit As NCOMCaptaGenerales
Set clsTit = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsTit = Nothing
'Do
    If nITFValor > 0 Then
        If nITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
           nTipPago = 2
        End If
    End If

    If sNroDoc <> "" Then
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, nITFValor, True, , , pbImpTMU)
    Else
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, nITFValor, True, , , pbImpTMU, , , , , , pnComiRetSinTarj, , , , pnComiTransf)
    End If
    
'COMENTADO TEMPORALMENTE
'    If nITFValor > 0 Then
'        If nITFConcepto = gConcITFAsumido Then
'            If nITFOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, sTipApe & " Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, sTipApe & " Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            End If
'        Else
'            If nITFOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, sTipApe & " Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, sTipApe & " Cuenta = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            End If
'        End If
'    End If
    
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Set clsTit = Nothing
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "CapExtornoCancelacionAho", Err.Description
    CapExtornoCancelacion = 0
End Function
'ALPA 20091119***************************************************************************
'Public Sub CapExtornoTransferenciaAho(ByVal nMovNroBus As Long, ByVal sMovNro As String, _
'            ByVal sGlosa As String, Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, Optional ByRef psMensaje As String, Optional ByVal psCtaCod As String, Optional ByRef psBoleta As String, Optional ByRef psBoletaITF As String)
Public Sub CapExtornoTransferenciaAho(ByVal nMovNroBus As Long, ByVal sMovNro As String, _
            ByVal sGlosa As String, Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional ByVal psCodCmac As String, Optional ByRef psMensaje As String, _
            Optional ByVal psCtaCod As String, Optional ByRef psBoleta As String, _
            Optional ByRef psBoletaITF As String, Optional ByRef psBoletaAbono As String, _
            Optional ByVal psMotExtorno As Variant)
'****************************************************************************************
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsOpe As New ADODB.Recordset, rsItf As New ADODB.Recordset
Dim nOperacion As CaptacOperacion, nOpeExt As CaptacOperacion
Dim nSaldo As Double
Dim sCuenta As String
Dim nMonto As Double
Dim nMovNro As Long
'ALPA 20091117*****************************************
'Dim nSumAbono As Currency
'Dim sCtaCodAbono As String
'Dim nSaldoDispAbono As Currency
'Dim nSaldoCnt As Currency
'******************************************************
Dim nITFValor As Double, nITFOP As String, nITFConcepto As Integer
On Error GoTo ErrGraba

Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
Set ClsMov = New COMDMov.DCOMMov
sMovNroBus = "": sCodUserBus = ""
sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
'ALPA 20091117*****************************************
Dim rsAbon As ADODB.Recordset
Set rsAbon = New ADODB.Recordset
Set rsAbon = ClsMov.GetCtaAbono(nMovNroBus, psCtaCod)
'******************************************************
sCodUserBus = Right(sMovNroBus, 4)

Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set rsOpe = clsCap.GetMovTransferencia(nMovNroBus, psCtaCod)
Set clsCap = Nothing
'*******validar saldos de cuenta a extornar abonos
If TransValidaSaldos(rsOpe, psMensaje) = False Then Exit Sub
rsOpe.MoveFirst
If Not (rsOpe.EOF And rsOpe.BOF) Then
If rsOpe.RecordCount > 0 Then
End If
    Do While Not rsOpe.EOF
        nOperacion = CLng(rsOpe("cOpeCod"))
        nMonto = rsOpe("nMonto")
        sCuenta = rsOpe("cCtaCod")
        nMovNro = rsOpe("nMovNro")
        nITFValor = 0
        nITFOP = ""
        nITFConcepto = 0
        Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
        Set rsItf = clsCap.GetMovTransferenciaITF(nMovNro, sCuenta)
            If Not rsItf.EOF Then
                nITFValor = rsItf("nMonto")
                nITFOP = rsItf("copecod")
                nITFConcepto = rsItf("nconceptocod")
            End If
        
        If nOperacion = gAhoTransCargo Or nOperacion = gAhoTransCargoL Then
            If Abs(nITFValor) > 0 Then
                If nOperacion = gAhoTransCargoL Then
                    nSaldo = CapExtornoCargoAho(nMovNro, gAhoExtTransCargoL, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, nITFValor, nITFOP, nITFConcepto, , psBoleta, psBoletaITF, , , , rsAbon, psBoletaAbono, , , , , psMotExtorno)
                Else
                    nSaldo = CapExtornoCargoAho(nMovNro, gAhoExtTransCargo, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, nITFValor, nITFOP, nITFConcepto, , psBoleta, psBoletaITF, , , , rsAbon, psBoletaAbono, , , , , psMotExtorno)
                End If
            Else
                If nOperacion = gAhoTransCargoL Then
                    nSaldo = CapExtornoCargoAho(nMovNro, gAhoExtTransCargoL, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, , , , , psBoleta, psBoletaITF, , , , rsAbon, psBoletaAbono)
                Else
                    nSaldo = CapExtornoCargoAho(nMovNro, gAhoExtTransCargo, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, , , , , psBoleta, psBoletaITF, , , , rsAbon, psBoletaAbono, , , , , psMotExtorno)
                End If
            End If
        Else
            If Abs(nITFValor) > 0 Then
                If nOperacion = gAhoTransAbonoL Then
                    nSaldo = CapExtornoAbonoAho(nMovNro, gAhoExtTransAbonoL, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, nITFValor, nITFOP, nITFConcepto, , , psBoleta, psBoletaITF, , , , , psMotExtorno)
                Else
                    nSaldo = CapExtornoAbonoAho(nMovNro, gAhoExtTransAbono, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, nITFValor, nITFOP, nITFConcepto, , , psBoleta, psBoletaITF, , , , , psMotExtorno)
                End If
            Else
                If nOperacion = gAhoTransAbonoL Then
                    nSaldo = CapExtornoAbonoAho(nMovNro, gAhoExtTransAbonoL, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, , , , , , psBoleta, psBoletaITF, , , , , psMotExtorno)
                Else
                    nSaldo = CapExtornoAbonoAho(nMovNro, gAhoExtTransAbono, sCuenta, sMovNro, sGlosa, nMonto, , , , sNomAge, sLpt, psCodCmac, , , , , , psBoleta, psBoletaITF, , , , , psMotExtorno)
                End If
            End If
            
        End If
        rsOpe.MoveNext
    Loop
End If
Exit Sub
ErrGraba:
    Err.Raise Err.Number, "CapExtornoTransferenciaAho", Err.Description
End Sub

Public Function TransValidaSaldos(ByVal rs As ADODB.Recordset, _
                                Optional ByRef psMensajeValidacion As String = "") As Boolean

Dim nITFDescuento As Double, pnITFValor As Double, nITFConcepto As Integer, nITFOperacion As String
Dim nMonto As Double, nMovNro As Long, sCuenta As String, sCopecod As String
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

Dim rsItf As New ADODB.Recordset

TransValidaSaldos = True
rs.MoveFirst
While Not rs.EOF

        nMovNro = rs!nMovNro
        sCuenta = rs!cCtaCod
        sCopecod = rs!copecod

        pnITFValor = 0
        nITFConcepto = 0
        nITFOperacion = ""
        
        

        Set rsItf = clsCap.GetMovTransferenciaITF(nMovNro, sCuenta)
        If Not rsItf.EOF Then
                pnITFValor = rsItf("nMonto")
                nITFOperacion = rsItf("copecod")
                nITFConcepto = rsItf("nconceptocod")
        End If
        sCuenta = rs!cCtaCod
        nMonto = rs!nMonto

        nITFDescuento = 0
        
        If pnITFValor > 0 Then
          If nITFConcepto = gConcITFCliente And (nITFOperacion = gITFCobroCargo Or nITFOperacion = gITFCobroCMACCargo) Then
            nITFDescuento = pnITFValor
          End If
        End If
                
        If sCopecod = "200901" Or sCopecod = "200904" Then
            If Not ValidaSaldoCuenta(sCuenta, nMonto - nITFDescuento) Then
                Set clsCap = Nothing
                Set rs = Nothing
                Set rsItf = Nothing
                'MsgBox "Cuenta " & sCuenta & " NO POSEE SALDO SUFICIENTE PARA EXTORNAR ", vbInformation, "Aviso"
                psMensajeValidacion = "Cuenta " & sCuenta & " NO POSEE SALDO SUFICIENTE PARA EXTORNAR "
                TransValidaSaldos = False
                Exit Function
            End If
        End If
        rs.MoveNext
Wend

Set clsCap = Nothing
Set rs = Nothing
Set rsItf = Nothing

End Function


Public Function CapRetiroInteresPF(ByVal sCuenta As String, ByVal sMovNro As String, _
        ByVal nMonto As Double, ByVal nDias As Long, ByVal sGlosa As String, _
        ByVal nOperacion As CaptacOperacion, Optional sCuentaAho As String = "", _
        Optional nTipoCambio As Double, Optional sCodCmac As String = "", _
        Optional sNomCmac As String, Optional sNomAge As String = "", Optional sLpt As String = "", _
        Optional sPersLavDinero As String = "", Optional ByVal psCodCmac As String = "", _
        Optional pbITFAplica As Boolean = True, Optional pnITFValor As Double = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", _
        Optional ByRef psImBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
        Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
        Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", _
        Optional pnMovNro As Long = 0, Optional ByVal pnMedioRetiro As Integer = 0, Optional ByVal psRegla As String = "", _
        Optional pnComision As Double = 0, Optional sCodIF As String = "", Optional ByVal sMovNroCom As String = "", Optional ByVal sCuentaTrans As String = "", _
        Optional ByVal sNomTitular As String = "", Optional ByVal nComRetTransVB As Integer = 0, Optional pcTexto As String) As Double
        'ALPA 20081009 se Agrego los nTipoREU,nMontoAcu,sOrigen
        '***Parametro pnMedioRetiro agregado por ELRO el 20130723, según TI-ERS079-2013
        'RIRO20131102 "AHORROS - PODERES", Se agregó parámetro "psRegla"
        'RIRO20131212 ERS137 - Se Agregaron:pnComision, sCodIF, sMovNroCom, sCuentaTrans, sNomTitular
         'ande ers021-2018 agregú pcTexto 20180430
                
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim dUltMov As Date, dAuxiliar As Date, dFechaProx As Date, sMenProx As String * 38
    Dim bTrans As Boolean
    Dim nDiasTranscurridos As Long, i As Long, nDiasAux As Long
    Dim nExtracto As Long, nPlazo As Long, nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date, nFormaRetiro As Integer, dRenov As Date, dApertura As Date
    Dim clsTit As NCOMCaptaGenerales
    Dim sTipDep As String
    Dim sCodOpe As String
    Dim sModDep As String
    Dim sTipApe As String
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim sNomTit As String
    Dim dFechaRenovacionPFM As Date '***Agregado por ELRO el 20121030, según OYP-RFC098-2012
    Dim lsMenProx2 As String * 38 '***Agregado por ELRO el 20121030, según OYP-RFC098-2012

    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    'Obtiene los datos para el calculo del retiro de intereses
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
    Set clsMant = Nothing
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    dAuxiliar = rsCta("dAuxiliar")
    nExtracto = rsCta("nTransacc") + 1
    nFormaRetiro = rsCta("nFormaRetiro")
    dRenov = rsCta("dRenovacion")
    dApertura = rsCta("dApertura")
    nPlazo = rsCta("nPlazo")
    
    rsCta.Close
    Set rsCta = Nothing

    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    nDiasAux = 30 * Int(DateDiff("d", dAuxiliar, dFecSis) / 30)
    If nOperacion = gPFRetIntAboAho Then
        If sGlosa = "" Then
            sGlosa = "Retiro Intereses PF Cuenta = " & sCuenta & ". Abono Cuenta Ahorros = " & sCuentaAho
        Else
            sGlosa = sGlosa & Chr$(13) & "Retiro Intereses PF Cuenta = " & sCuenta & ". Abono Cuenta Ahorros = " & sCuentaAho
        End If
    ElseIf nOperacion = gPFRetInt Then
        If sGlosa = "" Then
            sGlosa = "Retiro Intereses Efectivo PF Cuenta = " & sCuenta
        Else
            sGlosa = sGlosa & Chr$(13) & "Retiro Intereses Efectivo PF Cuenta = " & sCuenta
        End If
    
    End If

    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nOperacion = gPFRetIntAdelantado Then
        nIntGanado = GetInteres(nSaldoDisp, nTasa, nPlazo, TpoCalcIntAdelantado)
    Else
        nIntGanado = GetInteres(nSaldoDisp + nIntAcum, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)
    End If
    dUltMov = DateAdd("d", -1, dFecSis)
    dAuxiliar = DateAdd("d", nDiasAux, dAuxiliar)
    
    sMenProx = ""
    Select Case nFormaRetiro
        Case 1
            '***Modificado por ELRO el 20121030, según OYP-RFC098-2012
            'dFechaProx = DateAdd("d", 30, dFecSis)
            'sMenProx = "RET. MENSUAL PROX RETIRO:"
            'sMenProx = Trim(sMenProx) & " " & Format(dFechaProx, "dd/MM/yyyy")
            dFechaRenovacionPFM = DateAdd("d", nPlazo, dRenov)
            dFechaProx = DateAdd("d", 30, dFecSis)
            
            If dFechaRenovacionPFM > dFechaProx Then
               sMenProx = "RET. MENSUAL PROX RETIRO:"
               sMenProx = Trim(sMenProx) & " " & Format(dFechaProx, "dd/MM/yyyy")
            Else
                If DateDiff("d", dFechaRenovacionPFM, dFechaProx) < 30 Then
                    dFechaProx = DateAdd("d", 30, dFechaRenovacionPFM)
                    lsMenProx2 = "FECHA RENOVACIÓN:"
                    lsMenProx2 = Trim(lsMenProx2) & " " & Format(dFechaRenovacionPFM, "dd/MM/yyyy")
                    sMenProx = "RET. MENSUAL PROX RETIRO:"
                    sMenProx = Trim(sMenProx) & " " & Format(dFechaProx, "dd/MM/yyyy")
                End If
                
            End If
            '***Fin Modificado por ELRO el 20121030*******************
        Case 2
            dFechaProx = DateAdd("d", nPlazo, dRenov)
            sMenProx = "RET. FIN PLAZO PROX RENOV:"
            sMenProx = Trim(sMenProx) & " " & Format(dFechaProx, "dd/MM/yyyy")
    End Select
    
    clsCap.ActualizaRetiroInteresPF sCuenta, nMonto + pnComision, nIntGanado, dUltMov, sMovNro, dAuxiliar, True
    sMsgOpe = "Retiro Int. PF"
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010******************************************
    pnMovNro = nMovNro
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
    
    If nIntGanado > 0 Then
        If nOperacion <> gPFRetIntAdelantado Then
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvision, nIntGanado
        End If
    End If
    
    If nOperacion = gPFRetIntAdelantado Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvIntAdela, nMonto
    Else
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nMonto
    End If

    If sCodCmac <> "" Then
        clsCap.AgregaMovCMAC nMovNro, sCodCmac, CLng(Mid(sCuenta, 9, 1)), nOperacion, nMonto
    End If
    
    If pbITFAplica And pnITFValor > 0 Then
        If pbITFAsumido Then
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFAsumido, pnITFValor
        Else
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
        End If
    End If
    'If sPersLavDinero <> "" Then
''    If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
''    'by capi 18022008
''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''    'ALPA 20081009********************************************************************
''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero
''    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
''    End If
    
    Dim nTipoPag As Integer
    
    If psITFOperacion = gITFCobroEfectivo Then
        nTipoPag = 1
    Else
        nTipoPag = 2
    End If
    
'***Agregado por ELRO el 20130723, según TI-ERS079-2013****
If nOperacion = gPFRetInt Or nOperacion = gPFRetIntAboAho Then
    clsCap.registrarMedioRetiro pnMedioRetiro, nMovNro
End If
'***Fin Agregado por ELRO el 20130723, según TI-ERS079-2013

' *** RIRO201311230 ERS137
If nOperacion = gPFRetIntAboCtaBanco Then
    clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, pnComision, _
    nSaldoDisp - pnComision, nSaldoCnt - pnComision, dUltMov, nComRetTransVB
    clsCap.AgregaMovTranferBanco nMovNro, sCodIF, sCuentaTrans, Mid(sCuenta, 9, 1), sNomTitular
End If
' *** END RIRO

If sCuentaAho <> "" Then
    'Obtiene los datos para el calculo del abono a la cuenta de ahorros
    Dim nEstado As CaptacEstado
    Dim bInactiva As Boolean, bInmovilizada As Boolean
    Dim nSaldoInac As Double
    Dim oCon As COMDConstSistema.NCOMConstSistema
    Set oCon = New COMDConstSistema.NCOMConstSistema
    
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuentaAho)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 1, True, False)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
    
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    
    If nTipoCambio <> 0 Then
        If CLng(Mid(sCuentaAho, 9, 1)) = gMonedaExtranjera Then
            nMonto = Round(nMonto / nTipoCambio, 2)
        Else
            nMonto = Round(nMonto * nTipoCambio, 2)
        End If
    End If
    
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMonto
    clsCap.ActualizaSaldoAnteriorAho sCuentaAho, nSaldoDisp
    nSaldoDisp = nSaldoDisp + nMonto
    clsCap.ActualizaAbonoCaptacion sCuentaAho, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
    sMsgOpe = "Depósito Int. PF"
    
    clsCap.AgregaMovCap nMovNro, gAhoDepAboIntPF, sCuentaAho, nMonto, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
    clsCap.ActualizadUltContactoAho sCuentaAho, dFecSis
            
    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuentaAho, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCuentaAho, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCuentaAho
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuentaAho, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCuentaAho, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInactivaAct sCuentaAho
    End If
    
    clsCap.AgregaMovCapDet nMovNro, gAhoDepAboIntPF, sCuentaAho, gConcCapital, nMonto
    clsCap.UltimaActualizacionCuenta sCuentaAho, sMovNro

    clsCap.dbCmact.CommitTrans
    
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "DEPOSITO AHORRO"
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
    psImBoleta = psImBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuentaAho, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , pcTexto, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , , , , , , , , , , True, nTipoPag, pnITFValor, True, , , pbImpTMU, , , , , , , , , , pnComision) 'RIRO20131212 ERS137
Else
    clsCap.dbCmact.CommitTrans
End If


'''sTipDep = IIf(Mid(sCuenta, 9, 1) = Moneda.gMonedaNacional, "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = Moneda.gMonedaNacional, StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016

sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe
sTipApe = "RETIRO PLAZO FIJO"

Set clsTit = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsTit = Nothing

psImBoleta = psImBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto - pnITFValor), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , Trim(nDias), , , , , , pcTexto, dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , , , , , sMenProx, , , , , True, nTipoPag, pnITFValor, True, , , pbImpTMU, , , , , , , , , , CStr(pnComision), lsMenProx2) 'RIRO20131212 ERS137
    
'COMENTADO TEMPORALMENTE
'    If pbITFAplica And pnITFValor > 0 Then
'        If pbITFAsumido Then
'            If psItfOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, , nSaldoDisp, nSaldoCnt, CStr(nOperacion))
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser, , nSaldoDisp, nSaldoCnt, CStr(nOperacion))
'            End If
'        Else
'            If psItfOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser, , nSaldoDisp, nSaldoCnt, CStr(nOperacion))
'
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, pnITFValor, sGlosa, dFecSis, sLpt, nExtracto, , 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser, , nSaldoDisp, nSaldoCnt, CStr(nOperacion))
'            End If
'        End If
'    End If

    
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

bTrans = False

CapRetiroInteresPF = nSaldoCnt

Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapRetiroInteresPF = 0
End Function

Public Function GetMontoRetiroIntPF(ByVal nCapital As Double, ByVal dUltMov As Date, _
        ByVal nTasa As Double, ByVal dFecha As Date, ByVal nIntAcum As Double, _
        Optional ByRef psMensajeValidacion As String = "", _
        Optional ByVal bAdelantado As Boolean = False, Optional ByVal nPlazo As Long = 0) As Double

Dim nDiasTranscurridos As Long
Dim nIntGanado  As Double


nDiasTranscurridos = DateDiff("d", dUltMov, dFecha) - 1
If nDiasTranscurridos < -1 Then psMensajeValidacion = "INFORME A SISTEMAS"
If nDiasTranscurridos < 0 Then nDiasTranscurridos = 0
 
If bAdelantado Then
    nIntGanado = GetInteres(nCapital, nTasa, nPlazo, TpoCalcIntAdelantado)
Else
    nIntGanado = GetInteres(nCapital + nIntAcum, nTasa, nDiasTranscurridos, TpoCalcIntCompuesto)
End If
GetMontoRetiroIntPF = nIntAcum + nIntGanado
End Function

Public Function GetFechaUltimoRetiroIntPF(ByVal sCuenta As String) As Date
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
GetFechaUltimoRetiroIntPF = clsCap.GetFechaUltimoRetiroIntPF(sCuenta)
Set clsCap = Nothing
End Function

Public Function GetFechaPenultimoRetiroIntPF(ByVal sCuenta As String) As Date
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
GetFechaPenultimoRetiroIntPF = clsCap.GetFechaPenultimoRetiroIntPF(sCuenta)
Set clsCap = Nothing
End Function

Public Function CapCancelacionPF(ByVal sCuenta As String, ByVal sMovNro As String, ByVal nOperacion As CaptacOperacion, _
            ByVal sGlosa As String, ByVal nCapital As Double, ByVal nIntGanado As Double, _
            Optional sNroDoc As String = "", Optional nTipoDoc As TpoDoc = TpoDocNotaCargo, _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional ByVal psCodCmac As String = "", _
            Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional sBenPersLavDinero As String = "", _
            Optional bTransFERENCIA As Boolean = False, Optional sCodIF As String = "", Optional psCtaBanco As String = "", Optional pnMoneda As Moneda = gMonedaNacional, Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional ByVal pbTasaPactada As Boolean = False, _
            Optional pnMovNro As Long = 0, _
            Optional ByVal bPorAfectacion As Boolean = False, Optional ByVal pnMedioRetiro As Integer = 0, Optional ByVal psRegla As String = "", _
            Optional ByVal nComision As Double, Optional ByVal sMovNroCom As String = "", Optional ByVal sNomTitular As String, _
            Optional ByVal nComRetTransVB As Integer = 0, Optional psTexto As String, Optional ByVal psNombreBanco As String = "") As Double
        'ALPA 20081009 se Agrego los nTipoREU,nMontoAcu,sOrigen
        '***Se agrego la variable bPorAfectacion por ELRO el 20120327, según OYP-RFC023-2012
        '***Parametro pnMedioRetiro agregado por ELRO el 20130724, según TI-ERS079-2013
        'By Capi 18082008 se adiciono parametro opcional pbTasaPactada
        'RIRO20131102 se agregó el parámetro "psRegla"
        'ande  20180430 ers021-2018 agregué psTexto

Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nTasa As Double, nSaldoCanc As Double
Dim dUltMov As Date, dAuxiliar As Date
Dim bTrans As Boolean
Dim nDiasTranscurridos As Long, i As Long, nDiasAux As Long
Dim nExtracto As Long, nPlazo As Long, nMovNro As Long
Dim sMsgOpe As String, sCodUser As String, sCodAge As String
Dim dFecSis As Date
Dim nTipoRetiro As CaptacPFFormaRetiro
Dim nIntAdelRev As Double, nIntPagado As Double
Dim oImpre As New COMFunciones.FCOMImpresion

Dim oGen As New COMDConstSistema.DCOMGeneral

'Para el manejo del Tipo de Cambio
Dim lnTipCambio As Currency
Dim lnTipCambioV As Currency
Dim lnTipCambioC As Currency


dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
sCodAge = Mid(sCuenta, 4, 2)
bTrans = False
'Obtiene los datos para el calculo
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")
dAuxiliar = rsCta("dAuxiliar")
nExtracto = rsCta("nTransacc") + 1
nTipoRetiro = rsCta("nFormaRetiro")
nIntAdelRev = rsCta("nIntAdelRev")
nIntPagado = rsCta("nIntPag")

rsCta.Close
Set rsCta = Nothing

'Verifica el estado de la cuenta por si acaso, no vaya a haber algun chistoso que haya
'hecho algo con la cuenta
If nEstado <> gCapEstActiva Then
    Select Case nEstado = gCapEstCancelada
        Case gCapEstCancelada, gCapEstAnulada
            psMensajeValidacion = "Cuenta Cancelada o Anulada"
        Case gCapEstBloqTotal, gCapEstBloqRetiro
            psMensajeValidacion = "Cuenta Bloqueada"
    End Select
    CapCancelacionPF = 0
    Exit Function
End If

Randomize
For i = 0 To Rnd(2000) * 1000
Next i

'Verifica si en alguna parte de la Caja se retiraron intereses antes de grabar
'By Capi 19082008 se modifico para enviar parametro pbTasaPactada
'nSaldoCanc = GetSaldoCancelacion(sCuenta, dFecSis, sCodAge)
nSaldoCanc = GetSaldoCancelacion(sCuenta, dFecSis, sCodAge, , , , pbTasaPactada)
If Round(nSaldoCanc, 2) <> Round(nSaldoDisp + nIntGanado, 2) Then
    psMensajeValidacion = "Se retiraron intereses antes de efectuar la cancelación. Por favor consulte nuevamente el saldo de la cuenta"
    
    CapCancelacionPF = 0
    Exit Function
End If

If TieneChequesValorizacion(sCuenta) Then
    psMensajeValidacion = "La Cuenta Tiene cheques en valorizacion"
    CapCancelacionPF = 0
    Exit Function
End If

'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
On Error GoTo ErrGraba
clsCap.dbCmact.BeginTrans
bTrans = True

If sGlosa = "" Then
    sGlosa = "Cancelación PF Cuenta = " & sCuenta
Else
    sGlosa = sGlosa & Chr$(13) & "Cancelación PF Cuenta = " & sCuenta
End If

clsCap.ActualizaEstadoCuenta sCuenta, gCapEstCancelada, dFecSis, sMovNro
clsCap.AgregaMov sMovNro, nOperacion, sGlosa
nMovNro = clsCap.GetnMovNro(sMovNro)
'ALPA 20081010*********************
pnMovNro = nMovNro
'clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldoDisp + nIntGanado, 0, 0, psRegla:=psRegla 'Comentado CTI4 ERS0112020
'CTI4 ERS0112020
If nOperacion = gPFCancTransf Then
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nCapital + nIntGanado - IIf(nComRetTransVB = 1, 0, nComision), 0, 0, psRegla:=psRegla
Else
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nSaldoDisp + nIntGanado, 0, 0, psRegla:=psRegla
End If
'CTI4 end

'Valida si se debe provisionar o revertir alguna provision
If nIntGanado - nIntAcum > 0 Then
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvision, Abs(nIntGanado - nIntAcum)
Else
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcRevProvision, Abs(nIntGanado - nIntAcum)
End If

If bTransFERENCIA = True Then

    Dim lnMontoCV As Double, nMonto As Double
    nMonto = (nSaldoDisp + nIntGanado)
    clsCap.AgregaMovTranferBanco nMovNro, sCodIF, psCtaBanco, Mid(sCuenta, 9, 1), sNomTitular ' RIRO20131212 ERS137 Agregado
    'clsCap.AgregaMovTranferBanco nMovNro, sCodIF, psCtaBanco, pnMoneda 20131212 ERS137 - Comentado

    If pnMoneda <> Mid(sCuenta, 9, 1) Then
        'GetTipCambio dFecSis
        lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
        lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
        lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
                
        If Mid(sCuenta, 9, 1) = gMonedaNacional Then
            lnMontoCV = Round((nMonto / lnTipCambioV) * lnTipCambio, 2)
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
            If lnTipCambioV > lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
            End If
        Else
            lnMontoCV = Round(nMonto * lnTipCambio, 2)
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeVenta, lnMontoCV
            clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
            If lnTipCambioC < lnTipCambio Then
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioC, 2))
            Else
                clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioC, 2))
            End If
        End If
    End If
End If

If pbITFAplica And pnITFValor > 0 Then
    If pbITFAsumido Then
        'clsCap.AgregaMovCap nMovNro, psItfOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
        clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, 0, 0, psRegla:=psRegla 'JUEZ 20131209
        clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFAsumido, pnITFValor
    Else
        'clsCap.AgregaMovCap nMovNro, psItfOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt, psRegla:=psRegla
        clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, 0, 0, psRegla:=psRegla 'JUEZ 20131209
        clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
    End If
End If

'Agrega el detalle de la parte de capital
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp 'Comentado CTI4 ERS0112020
'CTI4 ERS0112020
If nOperacion = gPFCancTransf Then
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nCapital + nIntGanado - IIf(nComRetTransVB = 1, 0, nComision)
Else
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nSaldoDisp
End If
'CTI4 end

If nIntGanado < 0 Then 'Revierte el interes que se tiene que descontar del efectivo
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvisionNeg, Abs(nIntGanado)
    If nTipoRetiro = gCapPFFormRetAdelantado Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcRevProvIntAdela, nIntPagado - nIntAdelRev
    End If
ElseIf nIntGanado > 0 Then
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nIntGanado
End If
    
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
'If sPersLavDinero <> "" Then
''If psOrdPersLavDinero <> "" And psOrdPersLavDinero <> "Exit" Then
''    'by capi 18022008
''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''    'ALPA 20081009*********************************************************************************************
''    'clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
''    clsCap.AgregaMovLavDinero nmovnro, sPersLavDinero, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero, nTipoREU, nMontoAcu, sOrigen
''    '**********************************************************************************************************
''End If
If bPorAfectacion = True And nOperacion = gPFCancEfec Then
    Call clsCap.registrarAfectacion(nMovNro, False)
End If
'***Agregado por ELRO el 20130724, según TI-ERS079-2013****
If nOperacion = gPFCancEfec Then
    clsCap.registrarMedioRetiro pnMedioRetiro, nMovNro
End If
'***Fin Agregado por ELRO el 20130724, según TI-ERS079-2013

' *** RIRO20131226 ERS137
If nOperacion = gPFCancTransf Then
    clsCap.RegistrarTransferencia sCuenta, Mid(sCuenta, 9, 1), nOperacion, sMovNro, sMovNroCom, nComision, _
    nSaldoDisp - nComision, nSaldoCnt - nComision, dUltMov, nComRetTransVB
End If
' *** FIN RIRO

clsCap.dbCmact.CommitTrans
bTrans = False
CapCancelacionPF = nSaldoCnt

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe
sTipApe = "CANCELACION PLAZO FIJO"
Dim clsTit As NCOMCaptaGenerales
Set clsTit = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsTit = Nothing
Dim nTipoPag As Integer
nTipoPag = 1

If nOperacion = gPFCancTransf Then
    sTipApe = "TRANSFERENCIA POR CANCELACIÓN DPF"
    sModDep = "Monto Cancelaciòn"
Else
    sTipApe = "CANCELACION PLAZO FIJO"
End If

'Do
    If sNroDoc <> "" Then
        psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nSaldoDisp), sNomTit, sCuenta, sNroDoc, 0, Trim(0), "Nota Cargo", nExtracto, "Interes Retirado", Trim(nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, True, nTipoPag, pnITFValor, True, pbImpTMU, , , , IIf(nComRetTransVB = 1, False, True))
    Else
        psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nSaldoDisp), sNomTit, sCuenta, "", 0, Trim(0), "", nExtracto, "Interes Retirado", Trim(nIntGanado), , , , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, True, nTipoPag, pnITFValor, True, pbImpTMU, , nComision, psTexto, IIf(nComRetTransVB = 1, False, True), psNombreBanco, psCtaBanco)  'RIRO20131212 ERS137 'ande ers021-2018 psTexto
    End If

'COMENTADO TEMPORALMENTE
'    If pbITFAplica And pnITFValor > 0 Then
'        If pbITFAsumido Then
'            psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(fgITFGetTitular(sCuenta), pnITFValor, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'        Else
'            psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(fgITFGetTitular(sCuenta), pnITFValor, sGlosa, CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4)), sLpt, nExtracto, , 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'        End If
'    End If
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
'    MsgBox Err.Description, vbExclamation, "Error"
    Err.Raise Err.Number, "Error", Err.Description
    CapCancelacionPF = 0
End Function


Public Function CapAumDismCapPF(ByVal sCuenta As String, ByVal sMovNro As String, ByVal nOperacion As CaptacOperacion, _
        ByVal sGlosa As String, ByVal nMonto As Double, ByVal nCapital As Double, ByVal nIntGanado As Double, _
        ByVal nPlazo As Long, ByVal nNuevaTasa As Double, Optional ByVal sNroDoc As String = "", _
        Optional ByVal sCodIF As String = "", Optional ByVal sIFCuenta As String = "", _
        Optional ByVal sNomAge As String = "", Optional ByVal sLpt As String = "", Optional ByVal psCodCmac As String = "", _
        Optional ByVal sPersLavDinero As String = "", Optional ByVal pbITFAplica As Boolean = True, _
        Optional ByVal pnITFValor As Currency = 0, Optional ByVal pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional sBenPersLavDinero As String = "", _
        Optional ByVal pnMoneda As Moneda = gMonedaNacional, Optional ByRef psMensajeValidacion As String = "", _
        Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
        Optional pnMovNro As Long = 0, _
        Optional ByVal pnMovNroTransfer As Long = -1, _
        Optional ByVal pnMonedaTrans As Moneda = gMonedaNacional, _
        Optional ByVal pnMovNroRVD As Long = 0, _
        Optional ByVal pnMontoRVD As Currency = 0#, Optional ByVal psCtaCodCargo As String = "", Optional ByVal sRegla As String = "", _
        Optional ByVal sOrdPersLavDinero As String = "", Optional ByVal sReaPersLavDinero As String = "", Optional ByVal VisPersLavDinero As String = "", _
        Optional ByVal pnTpoDoc As Integer = 47, Optional ByVal psIFTpo As String = "01", Optional ByVal pcTexto As String = "") As Double
        'ALPA 20081009 se Agrego los nTipoREU,nMontoAcu,sOrigen
        '*** Parametros: pnMovNroTransfer, pnMonedaTrans, pnMovNroRVD, pnMontoRVD agregado por ELRO el 20120717, según OYP-RFC024-2012
        'JUEZ 20131218 Se agregó psCtaCodCargo,sRegla,sOrdPersLavDinero,sReaPersLavDinero,VisPersLavDinero
        'EJVG20140408 Se agregó pnTpoDoc,psIFTpo
        'APRI Agrego pcTexto 20191128


Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nTasa As Double, nSaldoCanc As Double
Dim dUltMov As Date, dAuxiliar As Date
Dim bTrans As Boolean
Dim nDiasTranscurridos As Long, i As Long, nDiasAux As Long
Dim nExtracto As Long, nMovNro As Long
Dim sMsgOpe As String, sCodUser As String, sCodAge As String
Dim dFecSis As Date
Dim oImpre As New COMFunciones.FCOMImpresion
Dim sGlosaMsg As String, sTipApe As String
Dim nIntProv As Double, nIntDevChq As Double
Dim nIntPag As Double, nIntDevPag As Double
'Dim nPlazo As Integer
Dim sUltActualizacion As String
Dim dRenovacion As Date

Dim oGen As New COMDConstSistema.DCOMGeneral

Dim nTpoPrograma As Integer 'BRGO 20111226
'***Agregado por ELRO el 20120308, según Acta N° 039-2012/TI-D
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsBlqRetiro As ADODB.Recordset
Set rsBlqRetiro = New ADODB.Recordset
Dim MotBlqRetiro As Integer
'***Fin Agregado por ELRO*************************************

'***Agregado por ELRO el 20120810, según OYP-RFC024-2012
Dim lnMontoCV As Currency
Dim lnTipCambio As Currency
Dim lnTipCambioV As Currency
Dim lnTipCambioC As Currency
'***Fin Agregado por ELRO el 20120810*******************
Dim nSaldoCtaCargo As Double 'JUEZ 20131218
Dim psBoletaCargo As String 'JUEZ 20131218

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
sCodAge = Mid(sCuenta, 4, 2)
bTrans = False

'Obtiene los datos para el calculo
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")
dAuxiliar = rsCta("dAuxiliar")
nExtracto = rsCta("nTransacc") + 1
nIntPag = rsCta("nIntPag")
nIntDevChq = IIf(IsNull(rsCta("nIntDevChq")), 0, rsCta("nIntDevChq"))
nPlazo = rsCta("nPlazo")
sUltActualizacion = rsCta("cUltimaActualizacion")
dRenovacion = rsCta("dRenovacion")
nTpoPrograma = rsCta("nTpoPrograma") 'BRGO 20111226

rsCta.Close
Set rsCta = Nothing


'Verifica el estado de la cuenta por si acaso, no vaya a haber algun chistoso que haya
'hecho algo con la cuenta
If nEstado <> gCapEstActiva Then
    '***Modificado por ELRO 20120307, según Acta N° 039-2012/TI-D
    'Select Case nEstado = gCapEstCancelada
    '    Case gCapEstCancelada, gCapEstAnulada
    '        psMensajeValidacion = "Cuenta Cancelada o Anulada"
    '    Case gCapEstBloqTotal, gCapEstBloqRetiro
    '        psMensajeValidacion = "Cuenta Bloqueada"
    'End Select
    'CapAumDismCapPF = 0
    'Exit Function
    
    Set rsBlqRetiro = oDCOMCaptaMovimiento.GetCuentaBloqueos(sCuenta, gCapTpoBlqRetiro)
    
    If Not rsBlqRetiro.BOF And Not rsBlqRetiro.EOF Then
        Do
            If rsBlqRetiro("nBlqMotivo") = gCapMotBlqRetGarantia Then
                MotBlqRetiro = rsBlqRetiro("nBlqMotivo")
                Exit Do
            End If
            rsBlqRetiro.MoveNext
        Loop
    Else
        MotBlqRetiro = -1
    End If
        
    If (Not MotBlqRetiro = gCapMotBlqRetGarantia) And _
        (Not nOperacion = 210801) Then
        Select Case nEstado = gCapEstCancelada
            Case gCapEstCancelada, gCapEstAnulada
                psMensajeValidacion = "Cuenta Cancelada o Anulada"
            Case gCapEstBloqTotal, gCapEstBloqRetiro
                psMensajeValidacion = "Cuenta Bloqueada"
        End Select
        CapAumDismCapPF = 0
        Exit Function
    End If
    
    Set rsBlqRetiro = Nothing
    '***Modificado por ELRO**************************************
End If

If nOperacion = gPFDismCapEfec Then 'Si es disminucion realiza el retardo para la concurrencia
    Randomize
    For i = 0 To Rnd(2000) * 1000
    Next i
End If

'Verifica si en alguna parte de la Caja se retiraron intereses antes de grabar
If nOperacion = gPFAumCapTasaPactEfec Or nOperacion = gPFAumCapTasaPactChq Or nOperacion = gPFAumCapTasaPactTrans Then
    nSaldoCanc = GetSaldoCancelacion(sCuenta, dFecSis, sCodAge, , , , True)
Else
    nSaldoCanc = GetSaldoCancelacion(sCuenta, dFecSis, sCodAge, , , , , , True)
End If

If Round(nSaldoCanc, 2) <> Round(nSaldoDisp + nIntGanado, 2) Then
    psMensajeValidacion = "Se retiraron intereses antes de efectuar la cancelación. Por favor consulte nuevamente el saldo de la cuenta"
    CapAumDismCapPF = 0
    Exit Function
End If

If TieneChequesValorizacion(sCuenta) Then
    psMensajeValidacion = "La Cuenta Tiene cheques en valorizacion"
    CapAumDismCapPF = 0
    Exit Function
End If

'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
On Error GoTo ErrGraba
clsCap.dbCmact.BeginTrans
bTrans = True
clsCap.AgregaMov sMovNro, nOperacion, sGlosa
nMovNro = clsCap.GetnMovNro(sMovNro)
'ALPA 20081010*****************
pnMovNro = nMovNro

nIntProv = Abs(nIntGanado - nIntAcum)

'Primero sumamos o restamos el interes ganado, provisionando o revirtiendo los intereses
If nIntGanado >= 0 Then
    clsCap.AgregaMovCap nMovNro, gPFAumDismCapInt, sCuenta, nIntGanado, nSaldoDisp, nSaldoCnt '+ nIntGanado
    'clsCap.AgregaMovCapDet nMovNro, gPFAumDismCapInt, sCuenta, gConcCapital, nIntGanado
    If nIntGanado >= nIntAcum Then
        clsCap.AgregaMovCapDet nMovNro, gPFAumDismCapInt, sCuenta, gConcProvision, nIntProv
    Else
        clsCap.AgregaMovCapDet nMovNro, gPFAumDismCapInt, sCuenta, gConcRevProvision, nIntProv
    End If
Else
    clsCap.AgregaMovCap nMovNro, gPFRetRegCapital, sCuenta, Abs(nIntGanado), nSaldoDisp + nIntGanado, nSaldoCnt + nIntGanado
    'clsCap.AgregaMovCapDet nMovNro, gPFRetRegCapital, sCuenta, gConcCapital, nIntGanado
    If nIntGanado >= nIntAcum Then
        clsCap.AgregaMovCapDet nMovNro, gPFRetRegCapital, sCuenta, gConcProvision, nIntProv
    Else
        clsCap.AgregaMovCapDet nMovNro, gPFRetRegCapital, sCuenta, gConcRevProvision, nIntProv
    End If
End If

' Agregar Campos a la Tabla Temporal que se utilizara para realizar el Extorno
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
clsMant.AgregaExtornoCapAumDisPF sCuenta, nSaldoDisp, nSaldoCnt, dUltMov, nTasa, nIntAcum, dAuxiliar, nExtracto - 1, nIntPag, nIntDevChq, nPlazo, sUltActualizacion, dRenovacion, nMovNro
'-------------------------------------------------------------------------------
            
'Ahora si vamos al asunto de la referencia, como decia mi compare cantinflas
Select Case nOperacion
    Case gPFAumCapEfec, gPFAumCapTrans 'Aumento de Capital en Efectivo
        '***Modificado por ELRO el 20120908, según OYP-RFC024-2012
        'sGlosaMsg = "Aumento Cap Efec. Cuenta = "
        sGlosaMsg = IIf(nOperacion = gPFAumCapEfec, "Aumento Cap Efec. Cuenta = ", "Aumento Cap Tran. Cuenta = ")
        
        'sTipApe = "AUM CAP PF EFECT"
        sTipApe = IIf(nOperacion = gPFAumCapEfec, "AUM CAP PF EFECT", "AUM CAP PF TRANF")
        
        'clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        If nOperacion = gPFAumCapEfec Then
            clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        Else
            clsCap.ActualizaAumentoCapitalPF sCuenta, IIf(psITFOperacion = gITFCobroCargoPF, nMonto - pnITFValor, nMonto), IIf(psITFOperacion = gITFCobroCargoPF, nMonto - pnITFValor, nMonto), nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        End If
        '***Fin Modificado por ELRO el 20120908*******************
        
        nSaldoDisp = nSaldoDisp + nMonto '+ nIntGanado
        nSaldoCnt = nSaldoCnt + nMonto '+ nIntGanado
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    Case gPFAumCapchq 'Aumento de Capital con Cheque
        sGlosaMsg = "Aumento Cap Chq. Cuenta = "
        sTipApe = "AUM CAP PF CHQ"
        'clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, 0, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma 'EJVG20140408 Xq el cheque ya estará valorizado
        'nSaldoDisp = nSaldoDisp '+ nIntGanado
        nSaldoDisp = nSaldoDisp + nMonto 'EJVG20140408
        nSaldoCnt = nSaldoCnt + nMonto '+ nIntGanado
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
        'clsCap.AgregaCuentaDocumento sCuenta, TpoDocCheque, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , sIFCuenta
        clsCap.AgregaCuentaDocumento sCuenta, pnTpoDoc, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , sIFCuenta, psIFTpo 'EJVG20140408
        clsCap.AgregaMovDocRec nMovNro, pnTpoDoc, sNroDoc, sCodIF, psIFTpo, sIFCuenta 'EJVG20140408
    Case gPFAumCapTasaPactEfec, gPFAumCapTasaPactTrans 'Aumento de Capital Efectivo con Tasa Pactada
        sGlosaMsg = "Aumento Cap Efec Tasa Pactada. Cuenta = "
        sTipApe = "AUM CAP PF EFECT"
        clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        nSaldoDisp = nSaldoDisp + nMonto  '+ nIntGanado
        nSaldoCnt = nSaldoCnt + nMonto '+ nIntGanado
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    Case gPFAumCapTasaPactChq
        sGlosaMsg = "Aumento Cap Chq Tasa Pactada. Cuenta = "
        sTipApe = "AUM CAP PF CHQ"
        'clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, 0, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma 'EJVG20140408 Xq el cheque ya estará valorizado
        'nSaldoDisp = nSaldoDisp '+ nIntGanado
        nSaldoDisp = nSaldoDisp + nMonto 'EJVG20140408
        nSaldoCnt = nSaldoCnt + nMonto '+ nIntGanado
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
        'clsCap.AgregaCuentaDocumento sCuenta, TpoDocCheque, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , sIFCuenta
        clsCap.AgregaCuentaDocumento sCuenta, pnTpoDoc, sNroDoc, sCodIF, sMovNro, nMovNro, nMonto, , sIFCuenta, psIFTpo 'EJVG20140408
        clsCap.AgregaMovDocRec nMovNro, pnTpoDoc, sNroDoc, sCodIF, psIFTpo, sIFCuenta 'EJVG20140408
    Case gPFDismCapEfec
        sGlosaMsg = "Disminucion Cap Efec. Cuenta = "
        sTipApe = "DISM CAP PF EFECT"
        clsCap.ActualizaDisminucionCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis
        nSaldoDisp = nSaldoDisp - nMonto '+ nIntGanado
        nSaldoCnt = nSaldoCnt - nMonto '+ nIntGanado
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    Case gPFAumCapCargoCta 'JUEZ 20131218 Aumento de Capital Cargo Cuenta
        sGlosaMsg = "Aumento Cap Cargo Cta Cuenta = "
        sTipApe = "AUM CAP PF CARGO CTA"
        clsCap.ActualizaAumentoCapitalPF sCuenta, nMonto, nMonto, nIntGanado, DateAdd("d", -1, dFecSis), sMovNro, dFecSis, nPlazo, nNuevaTasa, dFecSis, , nTpoPrograma
        nSaldoDisp = nSaldoDisp + nMonto
        nSaldoCnt = nSaldoCnt + nMonto
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
        nSaldoCtaCargo = CapCargoCuentaAho(psCtaCodCargo, nMonto, gAhoCargoCtaAumCapPF, sMovNro, sGlosa, , , , , , , "", "", sNomAge, sLpt, sPersLavDinero, True, , , , clsCap.dbCmact, Mid(sMovNro, 18, 2), , pbITFAplica, pnITFValor, pbITFAsumido, psITFOperacion, , sBenPersLavDinero, , psBoletaCargo, , , , pbImpTMU, sPersLavDinero, sOrdPersLavDinero, sReaPersLavDinero, sBenPersLavDinero, VisPersLavDinero, , , , , , sRegla)
        clsCap.AgregaMovDoc nMovNro, TpoDocCtaCargoAumCap, psCtaCodCargo, dFecSis
End Select
'***Modificado por ELRO el 20120717, según OYP-RFC024-2012
'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
If nOperacion <> gPFAumCapTrans Then
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
ElseIf nOperacion = gPFAumCapTrans Then
    If pnMovNroTransfer <> -1 Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcPenTran, nMonto
    Else
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    End If
    
End If
'***Fin Modificado por ELRO el 20120717*******************

 '***Agregado por ELRO el 20120717, según OYP-RFC024-2012
If nOperacion = gPFAumCapTrans Then
    If pnMovNroTransfer <> -1 Then
        clsCap.AgregaMovRef nMovNro, pnMovNroTransfer
        clsCap.ActualizaMovPendientesRend pnMovNroTransfer, pnMontoRVD
        If pnMonedaTrans <> Mid(sCuenta, 9, 1) Then
            lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
            lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
            lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
            
            If Mid(sCuenta, 9, 1) = gMonedaNacional Then
                lnMontoCV = Round((nMonto / lnTipCambioC) * lnTipCambio, 2)
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
                End If
            Else
                lnMontoCV = Round(nMonto * lnTipCambio, 2)
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                End If
            End If
        End If
    ElseIf pnMovNroTransfer = -1 Then
        If pnMonedaTrans <> Mid(sCuenta, 9, 1) Then
            lnTipCambio = oGen.GetTipCambio(dFecSis, TCFijoMes)
            lnTipCambioC = oGen.GetTipCambio(dFecSis, TCCompra)
            lnTipCambioV = oGen.GetTipCambio(dFecSis, TCVenta)
            
            If Mid(sCuenta, 9, 1) = gMonedaNacional Then
                lnMontoCV = Round((nMonto / lnTipCambioC) * lnTipCambio, 2)
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - nMonto)
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - nMonto)
                End If
            Else
                lnMontoCV = Round(nMonto * lnTipCambio, 2)
                clsCap.AgregaMovTipoCambio nMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedeUtilidad, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                Else
                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcOpedePerdida, Abs(lnMontoCV - Round(nMonto * lnTipCambioV, 2))
                End If
            End If
        End If
    End If

    'Para relacionar el Registro de Voucher con la Operación
    If pnMovNroRVD > 0 Then
    clsCap.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
    End If
End If
'***Fin Agregado por ELRO el 20120717********************


sGlosa = sGlosa & IIf(sGlosa = "", "", Chr$(13)) & sGlosaMsg & sCuenta

clsCap.UltimaActualizacionCuenta sCuenta, sMovNro

If pbITFAplica And pnITFValor > 0 Then
    If pbITFAsumido Then
        clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFAsumido, pnITFValor
    Else
        '***Modificado por ELRO el 20120624, según OYP-RFC024-2012
        'clsCap.AgregaMovCap nMovNro, psItfOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
        'clsCap.AgregaMovCapDet nMovNro, psItfOperacion, sCuenta, gConcITFCliente, pnITFValor
        If nOperacion = gPFAumCapTrans Then
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, IIf(psITFOperacion = gITFCobroCargoPF, nSaldoDisp - pnITFValor, nSaldoDisp), IIf(psITFOperacion = gITFCobroCargoPF, nSaldoCnt - pnITFValor, nSaldoCnt)
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
        Else
            clsCap.AgregaMovCap nMovNro, psITFOperacion, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
            clsCap.AgregaMovCapDet nMovNro, psITFOperacion, sCuenta, gConcITFCliente, pnITFValor
        End If
        '***Fin Modificado por ELRO el 20120624*******************
    End If
End If


'''ALPA 20081009*********************************************************************
''If sPersLavDinero <> "" Then
''    clsCap.AgregaMovLavDinero nMovNro, sPersLavDinero, sBenPersLavDinero
''End If
'''**********************************************************************************
clsCap.dbCmact.CommitTrans
bTrans = False
CapAumDismCapPF = nSaldoCnt

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String
Dim sNomTit As String
'''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
sCodOpe = Trim(nOperacion)
sModDep = sMsgOpe

Dim clsTit As NCOMCaptaGenerales
Set clsTit = New NCOMCaptaGenerales
sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
Set clsTit = Nothing
Dim nTipoPag As Integer
nTipoPag = 1

If sNroDoc <> "" Then
    '***Modificado por ELRO el 20120125, según Acta N° 009-2012/TI-D
    'psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nMonto), sNomTit, sCuenta, sNroDoc, nSaldoDisp, Trim(0), "Cheque N°", nExtracto, "Interes Ganado", Trim(nIntGanado), True, Trim(nSaldoCnt), , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, True, nTipoPag, pnITFValor, True, pbImpTMU)
    'psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nMonto), sNomTit, sCuenta, sNroDoc, nSaldoDisp, Trim(0), "Cheque N°", nExtracto, "Interes Ganado", Trim(nIntGanado), True, Trim(nSaldoCnt), , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, False, nTipoPag, pnITFValor, True, pbImpTMU)
    psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nMonto), sNomTit, sCuenta, sNroDoc, nSaldoDisp, Trim(0), "Cheque N°", nExtracto, "Interes Ganado", Trim(nIntGanado), True, Trim(nSaldoCnt), , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, False, nTipoPag, pnITFValor, True, pbImpTMU, , , pcTexto) 'APRI20191128
    '***Fin Modificado por ELRO*************************************
Else
    '***Modificado por ELRO el 20120125, según Acta N° 009-2012/TI-D
    'psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, Trim(0), "", nExtracto, "Interes Ganado", Trim(nIntGanado), True, Trim(nSaldoCnt), , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, True, nTipoPag, pnITFValor, True, pbImpTMU)
    'psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, Trim(0), "", nExtracto, "Interes Ganado", Trim(nIntGanado), True, Trim(nSaldoCnt), , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, False, nTipoPag, pnITFValor, True, pbImpTMU)
    psImpBoleta = psImpBoleta & ImprimeBoletaInteres(sTipApe, "Capital", sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, Trim(0), "", nExtracto, "Interes Ganado", Trim(nIntGanado), True, Trim(nSaldoCnt), , sNomAge, dFecSis, sCodUser, sLpt, psCodCmac, False, nTipoPag, pnITFValor, True, pbImpTMU, , , pcTexto) 'APRI20191128
    '***Fin Modificado por ELRO*************************************
End If

If nOperacion = gPFAumCapCargoCta Then psImpBoleta = psImpBoleta + psBoletaCargo 'JUEZ 20131218

Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "Error", Err.Description
    CapAumDismCapPF = 0
End Function

Public Sub EmiteDuplicadoCertPF(ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String)
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim nMovNro As Long
Dim bTrans As Boolean
Dim nSaldoDisp As Double, nSaldoCnt As Double
Dim rsCta As New ADODB.Recordset

bTrans = False
'Obtiene los datos de la Cuenta
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
Set clsMant = Nothing
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
On Error GoTo ErrGraba
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
clsCap.dbCmact.BeginTrans
bTrans = True
If sGlosa = "" Then
    sGlosa = "Emisión Duplicado de Plazo Fijo Cuenta = " & sCuenta
Else
    sGlosa = sGlosa & Chr$(13) & "Emisión Duplicado de Plazo Fijo Cuenta = " & sCuenta
End If
clsCap.AgregaMov sMovNro, gPFDupCert, sGlosa, gMovEstContabNoContable
nMovNro = clsCap.GetnMovNro(sMovNro)
clsCap.AgregaMovCap nMovNro, gPFDupCert, sCuenta, 0, nSaldoDisp, nSaldoCnt
clsCap.ActualizaDuplicadoCertPF sCuenta
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
clsCap.dbCmact.CommitTrans
bTrans = False
Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
End Sub

Public Function CapExtornoRetiroIntPF(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional ByVal sNomAge As String = "", Optional ByVal sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional ByVal nITFValor As Double = 0, Optional ByVal nITFOperacion As CaptacOperacion, _
            Optional ByVal nITFConcepto As CaptacConcepto, _
            Optional ByVal psCodAge As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pbImpTMU As Boolean = False, Optional ByVal pnComiTransf As Double = 0, _
            Optional ByVal psMotExtorno As Variant) As Double

    Dim nMovNro As Long, nExtracto As Long, i As Long
    Dim sMsgOpe As String
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntGanado As Double
    Dim nTasa As Double, nIntAcum As Double
    Dim dAuxiliarAnt As Date, dUltMovAnt As Date
    Dim dUltMov As Date
    Dim nEstado As CaptacEstado
    Dim bTrans As Boolean
    Dim rsCta As New ADODB.Recordset
    Dim nSaldoInac As Double, nMontoAho As Double
    Dim bInactiva As Boolean
    Dim sCuentaAho As String, sCodUser As String
    Dim nDiasTranscurridos As Long
    Dim dFecSis As Date
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    Dim clsTit As NCOMCaptaGenerales
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim nTipPago As Integer
    Dim rsMovRef As ADODB.Recordset 'RIRO20131212 ERS137
    Dim nMovNroRef As Long 'RIRO20131212 ERS137
    Dim sMovNroCom, lnMovNro As String 'RIRO20131212 ERS137

    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    
    bTrans = False
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = "": sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)

    'RIRO20131212 ERS137 *************
    Sleep 1000
    sMovNroCom = ClsMov.GeneraMovNro(dFecSis, Mid(sMovNro, 18, 2), Right(sMovNro, 4))
    'END RIRO ************************

    clsCap.dbCmact.BeginTrans
    bTrans = True

    If sGlosa = "" Then
        If nOperacion = gPFRetIntAboAho Then
            sGlosa = "Extorno Retiro Interes PF. Cuenta = " & sCuenta & ". Abono Cuenta Ahorros = " & sCuentaAho
        ElseIf nOperacion = gPFRetInt Then
            sGlosa = "Extorno Retiro Interes PF. Cuenta = " & sCuenta
        Else
            sGlosa = "Extorno Retiro Interes PF. Cash. Cuenta = " & sCuenta
        End If
    Else
        If nOperacion = gPFRetIntAboAho Then
            sGlosa = sGlosa & Chr$(13) & "Extorno Retiro Interes PF. Cuenta = " & sCuenta & ". Abono Cuenta Ahorros = " & sCuentaAho
        ElseIf nOperacion = gPFRetInt Then
            sGlosa = sGlosa & Chr$(13) & "Extorno Retiro Interes PF. Cuenta = " & sCuenta
        Else
            sGlosa = sGlosa & Chr$(13) & "Extorno Retiro Interes PF. Cash. Cuenta = " & sCuenta
        End If
    End If
       
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
    '***CTI3 (ferimoro) 17102018
    clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    
    If nITFValor > 0 Then
        If nITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
    End If

    If nOperacion = gPFExtRetIntAboAho Then 'Si el extorno es con abono a cuenta de ahorros
        Set rsCta = clsCap.GetCapMov(nMovNroBus, gConcCapital, gCapAhorros)
        sCuentaAho = rsCta("cCtaCod")
        nMontoAho = rsCta("nMonto")
        'Obtiene los datos para el calculo
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsCta = clsMant.GetDatosCuentaAho(sCuentaAho)
        Set clsMant = Nothing
        nEstado = rsCta("nPrdEstado")
        nSaldoDisp = rsCta("nSaldoDisp")
        nSaldoCnt = rsCta("nSaldo")
        dUltMov = rsCta("dUltCierre")
        nTasa = rsCta("nTasaInteres")
        nIntAcum = rsCta("nIntAcum")
        bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
        nExtracto = rsCta("nTransacc") + 1
        rsCta.Close
        Set rsCta = Nothing
        Randomize
        For i = 0 To Rnd(2000) * 1000
        Next i
        If Not ValidaSaldoCuenta(sCuentaAho, nMontoAho) Then
            clsCap.dbCmact.RollbackTrans
            Set clsCap = Nothing
            Err.Raise 1000, "CapExtornoRetiroIntPF", "Cuenta NO Posee Saldo Suficiente"
            CapExtornoRetiroIntPF = 0
            Exit Function
        End If
        nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
        nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
        dUltMov = DateAdd("d", -1, dFecSis)
        nSaldoCnt = nSaldoCnt - nMonto
        clsCap.ActualizaSaldoAnteriorAho sCuentaAho, nSaldoDisp
        nSaldoDisp = nSaldoDisp - nMonto
        clsCap.ActualizaCargoCaptacion sCuentaAho, nMontoAho, nMontoAho, nIntGanado, dUltMov, sMovNro, True
        clsCap.AgregaMovCap nMovNro, "230221", sCuentaAho, nMontoAho, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, "230221", sCuentaAho, gConcCapital, nMontoAho
        clsCap.UltimaActualizacionCuenta sCuentaAho, sMovNro
        sMsgOpe = "Ext.Ret.Int.PF Abo.Cta.Aho"
       
        '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
        sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        sCodOpe = Trim(nOperacion)
        sModDep = sMsgOpe
        sTipApe = "EXTORNO AHORROS"
        
        Set clsTit = New NCOMCaptaGenerales
        sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuentaAho))
        Set clsTit = Nothing
       
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAho), sNomTit, sCuentaAho, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, nITFValor, True, , , pbImpTMU)
        
        'APRI20190117 MEJORA PROCESO
        'Obtiene los datos para el cálculo
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
        Set clsMant = Nothing
        nSaldoDisp = rsCta("nSaldoDisp")
        nSaldoCnt = rsCta("nSaldo")
        nEstado = rsCta("nPrdEstado")
        dAuxiliarAnt = rsCta("dAuxiliarAnt")
        dUltMovAnt = rsCta("dUltCierreAnt")
        nExtracto = rsCta("nTransacc")
        nIntAcum = rsCta("nIntAcum")
        rsCta.Close
        Set rsCta = Nothing
        Set rsCta = clsCap.GetCapMov(nMovNroBus, gConcProvision, gCapPlazoFijo)
        If Not (rsCta.EOF And rsCta.BOF) Then
            nIntGanado = rsCta("nMontoConcepto")
        Else
            nIntGanado = 0
        End If
    
        clsCap.ActualizaExtornoRetiroInteresPF sCuenta, nMonto, nIntGanado, dUltMovAnt, sMovNro, dAuxiliarAnt
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nMonto
        clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
        clsCap.dbCmact.CommitTrans
        CapExtornoRetiroIntPF = nSaldoCnt
                
        sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        sCodOpe = Trim(nOperacion)
        sModDep = sMsgOpe
        sTipApe = "EXTORNO PLAZO FIJO"
        Set clsTit = New NCOMCaptaGenerales
        sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
        Set clsTit = Nothing
        
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum - nIntGanado + nMonto, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, , , , , , , , nTipPago, nITFValor, True, , , pbImpTMU)
        'END APRI
    ElseIf nOperacion = gPFExtRetInt Then  ' SI EL EXTORNO ES RETIRO DE INT PF EFECTIVO O MENSUAL
        sMsgOpe = "Ext. Retiro Interes PF"
        
        'Obtiene los datos para el cálculo
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
        Set clsMant = Nothing
        nSaldoDisp = rsCta("nSaldoDisp")
        nSaldoCnt = rsCta("nSaldo")
        nEstado = rsCta("nPrdEstado")
        dAuxiliarAnt = rsCta("dAuxiliarAnt")
        dUltMovAnt = rsCta("dUltCierreAnt")
        nExtracto = rsCta("nTransacc")
        nIntAcum = rsCta("nIntAcum")
        rsCta.Close
        Set rsCta = Nothing
        Set rsCta = clsCap.GetCapMov(nMovNroBus, gConcProvision, gCapPlazoFijo)
        If Not (rsCta.EOF And rsCta.BOF) Then
            nIntGanado = rsCta("nMontoConcepto")
        Else
            nIntGanado = 0
        End If
    
        clsCap.ActualizaExtornoRetiroInteresPF sCuenta, nMonto, nIntGanado, dUltMovAnt, sMovNro, dAuxiliarAnt
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nMonto
        clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
        clsCap.dbCmact.CommitTrans
        CapExtornoRetiroIntPF = nSaldoCnt
        
        '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
        sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        sCodOpe = Trim(nOperacion)
        sModDep = sMsgOpe
        sTipApe = "EXTORNO PLAZO FIJO"
        Set clsTit = New NCOMCaptaGenerales
        sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
        Set clsTit = Nothing
        
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum - nIntGanado + nMonto, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, , , , , , , , nTipPago, nITFValor, True, , , pbImpTMU)
    Else '*** PEAC 20100104 - EXTORNO RETIRO INT PLAZO FIJO CASH
        sMsgOpe = "Ext. Retiro Interes PF Cash"
    
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
        Set clsMant = Nothing
        nSaldoDisp = rsCta("nSaldoDisp")
        nSaldoCnt = rsCta("nSaldo")
        nEstado = rsCta("nPrdEstado")
        dAuxiliarAnt = rsCta("dAuxiliarAnt")
        dUltMovAnt = rsCta("dUltCierreAnt")
        nExtracto = rsCta("nTransacc")
        nIntAcum = rsCta("nIntAcum")
        rsCta.Close
        Set rsCta = Nothing
        Set rsCta = clsCap.GetCapMov(nMovNroBus, gConcProvision, gCapPlazoFijo)
        If Not (rsCta.EOF And rsCta.BOF) Then
            nIntGanado = rsCta("nMontoConcepto")
        Else
            'nIntGanado = 0
            nIntGanado = nMonto 'JUEZ 20150316
        End If

        'RIRO20131212 ERS137 - Se agregó "pnComiTransf"
        clsCap.ActualizaExtornoRetiroInteresPF sCuenta, nMonto + pnComiTransf, nIntGanado, dUltMovAnt, sMovNro, dAuxiliarAnt
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcProvIntAdela, nMonto
        clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
        
    ' RIRO20131212 ERS137 *****
    If nOperacion = gPFExtRetIntAboCtaTransf Then
        Set rsMovRef = clsCap.MovAsociados(nMovNroBus)
        Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
        If Not rsMovRef Is Nothing Then
            If Not rsMovRef.EOF And Not rsMovRef.BOF Then
                nMovNroRef = (rsMovRef!nMovNroRef)
            End If
        End If
        If nMovNroRef > 0 Then
            clsCap.AgregaMov sMovNroCom, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagVigente
            lnMovNro = clsCap.GetnMovNro(sMovNroCom)
            '***CTI3 (ferimoro)  17102018
            clsCap.dInsertDetExtMov lnMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
            
            clsCap.AgregaMovRef lnMovNro, nMovNroRef
            clsCap.ActualizaEstadoMov nMovNroRef, gMovFlagEliminado
        Else
            clsCap.AgregaMovCap nMovNro, "210212", sCuenta, pnComiTransf, nSaldoDisp + pnComiTransf, _
                                                                           nSaldoCnt + pnComiTransf
            clsCap.AgregaMovCapDet nMovNro, "210212", sCuenta, 27, pnComiTransf
        End If
        Set rsMovRef = Nothing
        Set clsMant = Nothing
    End If
    ' FIN RIRO ****************
        
        clsCap.dbCmact.CommitTrans
        CapExtornoRetiroIntPF = nSaldoCnt
        
        '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
        sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        sCodOpe = Trim(nOperacion)
        sModDep = sMsgOpe
        sTipApe = "EXTORNO PLAZO FIJO"
        Set clsTit = New NCOMCaptaGenerales
        sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
        Set clsTit = Nothing
        
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum - nIntGanado + nMonto, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, , , , , , , , nTipPago, nITFValor, True, , , pbImpTMU, , , , , , , , , , pnComiTransf) 'RIRO20131212 ERS137

    End If

'*** PEAC 20100104 - SE TRASLADÓ AL PRIMER ELSEIF DE ARRIBA

'    'Obtiene los datos para el cálculo
'    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
'    Set rsCta = clsMant.GetDatosCuentaPF(sCuenta)
'    Set clsMant = Nothing
'    nSaldoDisp = rsCta("nSaldoDisp")
'    nSaldoCnt = rsCta("nSaldo")
'    nEstado = rsCta("nPrdEstado")
'    dAuxiliarAnt = rsCta("dAuxiliarAnt")
'    dUltMovAnt = rsCta("dUltCierreAnt")
'    nExtracto = rsCta("nTransacc")
'    nIntAcum = rsCta("nIntAcum")
'    rsCta.Close
'    Set rsCta = Nothing
'    Set rsCta = clsCap.GetCapMov(nMovNroBus, gConcProvision, gCapPlazoFijo)
'    If Not (rsCta.EOF And rsCta.BOF) Then
'        nIntGanado = rsCta("nMontoConcepto")
'    Else
'        nIntGanado = 0
'    End If
'
'    clsCap.ActualizaExtornoRetiroInteresPF sCuenta, nMonto, nIntGanado, dUltMovAnt, sMovNro, dAuxiliarAnt
'    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcInteres, nMonto
'    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
'    clsCap.dbCmact.CommitTrans
'    CapExtornoRetiroIntPF = nSaldoCnt
'
'    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES")
'    sCodOpe = Trim(nOperacion)
'    sModDep = sMsgOpe
'    sTipApe = "EXTORNO PLAZO FIJO"
'    Set clsTit = New NCOMCaptaGenerales
'    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
'    Set clsTit = Nothing
''Do
'    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum - nIntGanado + nMonto, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, , , , , , , , , nITFValor, True, , , pbImpTMU)

'*** FIN PEAC
  
'comentado temporalmente
'    If nITFValor > 0 Then
'        If nITFConcepto = gConcITFAsumido Then
'            If nITFOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, "Ext. Retiro Int PF = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 1, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, "Ext. Retiro Int PF = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 2, Mid(sCuenta, 9, 1), sCuenta, "ASUMIDO POR LA CMAC-ICA", False, sNomAge, sCodUser)
'            End If
'        Else
'            If nITFOperacion = gITFCobroEfectivo Then
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, "Ext. Retiro Int PF = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 1, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            Else
'                psITFImpBoleta = psITFImpBoleta & fgITFImprimeBoleta(sNomTit, nITFValor, "Ext. Retiro Int PF = " & sCuenta, dFecSis, sLpt, nExtracto, "EXT.IMP.TRANSAC.FINANC.", 2, Mid(sCuenta, 9, 1), sCuenta, , False, sNomAge, sCodUser)
'            End If
'        End If
'    End If
    
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo

Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "CapExtornoCancelacionAho", Err.Description
    CapExtornoRetiroIntPF = 0
End Function

Public Sub CapConsultaSaldosMovimiento(ByVal sCuenta As String, ByVal sMovNro As String, _
        ByVal nOperacion As CaptacOperacion, ByVal nSaldoDisp As Double, ByVal nSaldoCnt As Double, _
        Optional ByVal psNumTarj As String)

Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim nMovNro As Long
Dim bTrans As Boolean
Dim rsCta As New ADODB.Recordset
Dim sGlosa As String
bTrans = False
'Obtiene los datos de la Cuenta
On Error GoTo ErrGraba
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
clsCap.dbCmact.BeginTrans
bTrans = True
Select Case nOperacion
    Case gAhoConsSaldo, gPFConsSaldo, gCTSConsSaldo
        sGlosa = "Consulta de Saldo Cuenta = " & sCuenta
    Case gAhoConsMovimiento, gPFConsMovimiento, gCTSConsMovimiento
        sGlosa = "Consulta Movimientos Cuenta = " & sCuenta
End Select
clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable
nMovNro = clsCap.GetnMovNro(sMovNro)
clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, 0, nSaldoDisp, nSaldoCnt, , psNumTarj
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
clsCap.dbCmact.CommitTrans
bTrans = False
Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
End Sub

Public Function GetCuentaAbonoIntPF(ByVal sCuenta As String) As String
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
GetCuentaAbonoIntPF = clsCap.GetCuentaAbonoIntPF(sCuenta)
Set clsCap = Nothing
End Function

Public Function EsOrdenPagoEmitida(ByVal sCuenta As String, ByVal nNumOP As Long) As Boolean
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
EsOrdenPagoEmitida = clsCap.EsOrdenPagoEmitida(sCuenta, nNumOP)
Set clsCap = Nothing
End Function

Public Function CapExtornoAbonoCTS(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", _
            Optional sCodIF As String = "", Optional sNomAge As String = "", _
            Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional ByVal psCodAge As String = "", _
            Optional ByRef psImBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
            Optional ByVal psMotExtorno As Variant) As Double

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim oGen As New COMDConstSistema.DCOMGeneral
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim nPorcDisp As Double, nSaldRetiro As Double, nIntGanadoRet As Double
    Dim nTotalSaldos As Double, nTotalSueldos As Double, nExcedente As Double 'BRGO 20110428
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long, i As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim nMontoMN As Double 'JUEZ 20130731
    Dim nTpoPrograma As Integer 'JUEZ 20130816
    Dim bCeseLaboral As Boolean 'JUEZ 20140319
    Dim nDU01 As Double 'APRI20200415 POR COVID-19
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    'Obtiene los datos para el calculo
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = "": sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)
    
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")

    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    nIntSaldo = rsCta("nIntSaldo")
    nExtracto = rsCta("nTransacc") + 1
    nSaldRetiro = rsCta("nSaldRetiro")
    nTpoPrograma = rsCta("nTpoPrograma") 'JUEZ 20130816
    bCeseLaboral = rsCta("bCeseLaboral") 'JUEZ 20140319
    nDU01 = rsCta("nDU01") 'APRI20200415 POR COVID-19
    rsCta.Close
    Set rsCta = Nothing
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    nPorcDisp = clsCap.GetCapMovParamCTS(nMovNroBus)
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    Randomize
    For i = 0 To Rnd(2000) * 1000
    Next i
    'If Not ValidaSaldoCuenta(sCuenta, nMonto, nOperacion) Then
    '    clsCap.dbCmact.RollbackTrans
    '    Set clsCap = Nothing
    '    Err.Raise 1000, "CapExtornoAbonoCTS", "Cuenta NO Posee Saldo Suficiente"
    '    CapExtornoAbonoCTS = 0
    '    Exit Function
    'End If
    If sGlosa = "" Then
        sGlosa = "Extorno Abono CTS Cuenta = " & sCuenta
    Else
        sGlosa = sGlosa & Chr$(13) & "Extorno Abono CTS Cuenta = " & sCuenta
    End If
    
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    
    If nDiasTranscurridos < 0 Then
        nDiasTranscurridos = 0
    End If
    
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    nIntGanadoRet = GetInteres(nSaldRetiro, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt - nMonto
    
    '** BRGO 20110427 ****************************************
    Set rsCta = clsCap.ObtenerCapSaldosCuentasCTS(sCuenta, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'Obtiene valores en Soles
    nTotalSaldos = rsCta!TotalSaldos
    nTotalSueldos = rsCta!TotalSueldos
    rsCta.Close
    nMontoMN = nMonto * IIf(Mid(sCuenta, 9, 1) = "1", 1, oGen.GetTipCambio(dFecSis, TCFijoMes)) 'JUEZ 20130731 Saldo Retiro por Institucion y Persona
    'nExcedente = (nTotalSaldos - nMonto) - nTotalSueldos
    'nExcedente = (nTotalSaldos - IIf(nTpoPrograma = 2, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20130731
    nExcedente = (nTotalSaldos - IIf(nTpoPrograma = 2 And bCeseLaboral, 0, nMontoMN)) - nTotalSueldos 'JUEZ 20140319
    '*** END BRGO **********************************************
    
    If sNroDoc <> "" Then
        If nTipoDoc = TpoDocCheque Then
            'nSaldoDisp = nSaldoDisp - 0
            'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, 0, nIntGanado, dUltMov, sMovNro, True
            clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True 'PASI20140618 cambios EJVG
            clsCap.ActualizaEstadoDocRecEst TpoDocCheque, sNroDoc, sCodIF, sMovNro, gsChqEstExtornado
            sMsgOpe = "Ext. Depósito Chq."
        ElseIf nTipoDoc = TpoDocNotaCargo Then
            'nSaldRetiro = nSaldRetiro - (nMonto * nPorcDisp / 100)
            If nExcedente > 0 Then '**** BRGO 20110428
                nSaldRetiro = nExcedente * nPorcDisp / 100
            Else
                nSaldRetiro = 0
            End If
            nSaldoDisp = nSaldoDisp - nMonto
            nIntSaldo = nIntSaldo + nIntGanadoRet
            'clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo
            clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo, nDU01 'APRI20200415 POR COVID-19
            clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
            sMsgOpe = "Ext. Depósito NC"
        End If
    Else
        'nSaldRetiro = nSaldRetiro - (nMonto * nPorcDisp / 100)
        If nExcedente > 0 Then '**** BRGO 20110428
           nSaldRetiro = nExcedente * nPorcDisp / 100
        Else
           nSaldRetiro = 0
        End If
        nSaldoDisp = nSaldoDisp - nMonto
        nIntSaldo = nIntSaldo - nIntGanado
        'clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo
        clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo, nDU01 'APRI20200415 POR COVID-19
        clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
        sMsgOpe = "Ext. Depósito Efectivo"
    End If

    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
    '**CTI3 (ferimoro) 02102018
    clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
    'EJVG20130916 ***
    If nOperacion = gCTSExtDepTransf Then
        clsCap.actualizarRelacionExtornoVoucherCaptacion nMovNroBus
    End If
    'END EJVG *******
    clsCap.dbCmact.CommitTrans
    CapExtornoAbonoCTS = nSaldoCnt
    'APRI20200512 POR COVID-19
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaCTS(sCuenta)
    Set clsMant = Nothing
    nDU01 = rsCta("nDU01New")
    rsCta.Close
    Set rsCta = Nothing
    clsCap.ActualizaSaldoRetiroCTS sCuenta, nSaldRetiro, nIntSaldo, nDU01
    'END APRI
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "EXTORNO CTS"
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
'Do
    If sNroDoc <> "" Then
        psImBoleta = psImBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep) & " No. " & sNroDoc, sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", nExtracto, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
    Else
        psImBoleta = psImBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
    End If
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapExtornoAbonoCTS = 0
End Function

Public Sub CapOpeAhoCMACLlamada(ByVal sMovNro As String, ByVal nMoneda As Moneda, _
            ByVal sGlosa As String, ByVal nOperacion As CaptacOperacion, ByVal nExtracto As Integer, _
            ByVal sDescOperacion As String, ByVal nMonto As Double, ByVal sCuenta As String, _
            ByVal nSaldo As Double, ByVal sCodCmac As String, ByVal sNomCmac As String, _
            ByVal sCliente As String, Optional nTpoDoc As TpoDoc = TpoDocOrdenPago, _
            Optional sDocumento As String = "NULL", Optional sCuentaAho As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional nComision As Double = 0, Optional nMonedaComision As Moneda = gMonedaNacional, Optional psPersLavDinero As String = "", Optional pnITFValorCom As Currency = 0, Optional psPersBenLavDinero As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByVal psCuentaPers As String, Optional ByVal pbImpTMU As Boolean = False, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", _
            Optional pnMovNro As Long = 0, Optional ByRef psMensajeValidacion As String = "")
            'ALPA 20081009 se Agrego pnMovNro
            'By capi 23022009 se agrego parametro psMensajeValidacion
    
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim sMsgOpe As String, sCodUser As String, sCodAge As String
    Dim dFecSis As Date
    Dim bTrans As Boolean
    Dim nMovNro As Long
    Dim oCont As COMNContabilidad.NCOMContFunciones
    Dim nTempo As Double
    
    Dim sMovNroComITF As String
    Dim nMovNroComITF As String
    
    Dim nBan As Boolean
    Dim oVarImpre As New COMFunciones.FCOMVarImpresion
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    sCodAge = Mid(sMovNro, 18, 2)
    bTrans = False
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    clsCap.bTransaccion = True
    
    bTrans = True
    If sGlosa = "" Then
        sGlosa = sDescOperacion & ", " & sNomCmac & ", Cuenta = " & sCuenta
    Else
        sGlosa = sGlosa & Chr$(13) & sDescOperacion & ", " & sNomCmac & ", Cuenta = " & sCuenta
    End If
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010*************
    pnMovNro = nMovNro
    clsCap.AgregaMovCMAC nMovNro, sCodCmac, nMoneda, nOperacion, nMonto, sDocumento, sCuenta, sCliente
    If Len(Trim(sDocumento)) > 0 And nTpoDoc = TpoDocOrdenPago And nOperacion = gCMACOTAhoRetOP Then
        clsCap.AgregaMovDoc nMovNro, nTpoDoc, sDocumento, dFecSis
    End If
    'xxx eliminado una transacc clsCap.dbCmact.CommitTrans
    'Fin transaccion
    
    'bTrans = False
    Dim bSaldo As Boolean


    If nComision > 0 Then
        Dim sMovNroCom As String
        Dim nMovNroCom As Long
        Set oCont = New COMNContabilidad.NCOMContFunciones
        
        'xxx Agregado
        sMovNroCom = oCont.IncrementaMovNro(sMovNro)
            
        'xxx eliminado sMovNroCom = oCont.GeneraMovNro(dFecSis, sCodAge, sCodUser)
        Set oCont = Nothing
        
        'Inicio Transaccion
        'xxx eliminado clsCap.dbCmact.BeginTrans
        
        clsCap.AgregaMov sMovNroCom, gOtrOpeComisionCMACLlam, sGlosa
        nMovNroCom = clsCap.GetnMovNro(sMovNroCom)
        clsCap.AgregaMovOpeVarias nMovNroCom, nComision, sCuenta, sCodCmac, nMonedaComision
        clsCap.AgregaMovRef nMovNro, nMovNroCom
        
        If pnITFValorCom > 0 Then
            sMovNroComITF = Left(nMovNroCom, 2) & "2" & Right(nMovNroCom, 4)
            clsCap.AgregaMov sMovNroComITF, gITFCobroEfectivo, sGlosa
            nMovNroComITF = clsCap.GetnMovNro(sMovNroComITF)
            clsCap.AgregaMovOpeVarias nMovNroComITF, pnITFValorCom, sCuenta, sCodCmac, nMonedaComision
            clsCap.AgregaMovRef nMovNroCom, nMovNroComITF
        End If
    
    End If

    If sCuentaAho <> "" And nOperacion <> gCMACOTAhoDepChq Then
        Dim sMovNroReg As String
        Dim nMovNroReg As Long
        Set oCont = New COMNContabilidad.NCOMContFunciones
        
        'xxx agregado
        If Len(Trim(sMovNroCom)) > 0 Then
            sMovNroReg = oCont.IncrementaMovNro(sMovNroCom)
        Else
            sMovNroReg = oCont.IncrementaMovNro(sMovNro)
        End If
        
        Set oCont = Nothing
        Select Case nOperacion
            Case gCMACOTAhoDepEfec
                'ALPA 20081009***************************************************
                nTempo = CapAbonoCuentaAho(sCuentaAho, nMonto, gAhoDepRegCMACLlam, sMovNroReg, sGlosa, , , , , , , , , sNomAge, sLpt, psPersLavDinero, True, , , , , clsCap.dbCmact, , , , , , , psPersBenLavDinero, , , , False, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero)
                If nTempo = 0 Then
                  ' If clsCap.bTransaccion = False Then clsCap.dbCmact.RollbackTrans
                    clsCap.dbCmact.RollbackTrans
                    Set clsCap = Nothing
                    Exit Sub
                End If
            Case gCMACOTAhoRetEfec, gCMACOTAhoRetOP
                'ALPA 20081009***************************************************
                'By capi 23022009 se agrego paramerto lsMensajeValidacion
                'nTempo = CapCargoCuentaAho(sCuentaAho, nMonto, gAhoRetRegCMACLlam, sMovNroReg, sGlosa, , , , , , , , , sNomAge, sLpt, psPersLavDinero, True, , , , clsCap.dbCmact, , , , , , , , psPersBenLavDinero, , , , , , False, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero)
                nTempo = CapCargoCuentaAho(sCuentaAho, nMonto, gAhoRetRegCMACLlam, sMovNroReg, sGlosa, , , , , , , , , sNomAge, sLpt, psPersLavDinero, True, , , , clsCap.dbCmact, , , , , , , , psPersBenLavDinero, psMensajeValidacion, , , , , False, psTitPersLavDinero, psOrdPersLavDinero, psReaPersLavDinero, psBenPersLavDinero, psVisPersLavDinero)
                
                If nTempo = 0 Then
                    'If clsCap.bTransaccion = False Then clsCap.dbCmact.RollbackTrans
                    'clsCap.dbCmact.RollbackTrans Comentado Por MAVM Porq sale error
                    Set clsCap = Nothing
                    Exit Sub
                End If
        End Select
        nMovNroReg = clsCap.GetnMovNro(sMovNroReg)
        clsCap.AgregaMovRef nMovNro, nMovNroReg
    End If

    clsCap.dbCmact.CommitTrans
    clsCap.bTransaccion = False
    
    'Imprime Documentos
    'MsgBox "Se imprimirán las boletas de regularización", vbInformation, "Aviso"
    Dim vVez As Integer
    
    vVez = 1
    nBan = True
    
    If nOperacion = gCMACOTAhoDepEfec Or nOperacion = gCMACOTAhoDepChq Then
        bSaldo = False
    Else
        bSaldo = True
    End If
    
    psImpBoleta = psImpBoleta & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    If sDocumento = "NULL" Then
        psImpBoleta = psImpBoleta & ImprimeBoletaCMAC("OPERACION CMAC LLAMADA", sDescOperacion, Trim(nMonto), sCliente, sCuenta, "", nSaldo, nMoneda, "", nExtracto, nSaldo, True, True, , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, True, sCodAge, bSaldo) & oImp.gPrnSaltoLinea
    Else
        psImpBoleta = psImpBoleta & ImprimeBoletaCMAC("OPERACION CMAC LLAMADA", sDescOperacion & " N° " & sDocumento, Trim(nMonto), sCliente, sCuenta, "", nSaldo, nMoneda, "", nExtracto, nSaldo, True, True, , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, True, sCodAge, bSaldo) & oImp.gPrnSaltoLinea
    End If
    
    psImpBoleta = psImpBoleta & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    psImpBoleta = psImpBoleta & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    psImpBoleta = psImpBoleta & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    psImpBoleta = psImpBoleta & ImprimeBoletaCMAC("OPERACION CMAC LLAMADA", "Comision Ope Llam", Trim(nComision), sCliente, sCuenta, "", 0, nMonedaComision, "", 0, 0, True, True, , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, True, sCodAge, False) & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    psImpBoleta = psImpBoleta & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    'Impresion de Boleta de Regulariazacion
    psImpBoleta = psImpBoleta & ImprimeBoletaCMACRegula("OPERACION CMAC LLAMADA ", sDescOperacion, Trim(nMonto), sCliente, sCuenta, "", 0, nMoneda, "", 0, 0, True, True, , , sNomCmac, , dFecSis, sNomAge, sCodUser, sLpt, True, sCodAge, bSaldo, psCuentaPers) & oImp.gPrnSaltoLinea
   
    
Set clsCap = Nothing

Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
'    MsgBox Err.Description, vbExclamation, "Error"
    Err.Raise Err.Number, "Error", Err.Description
    
End Sub


Public Sub CapExtornoCapAumDisPF(ByVal sCuenta As String, ByVal nMovNroAnt As Long, ByVal nOperacion As Long, ByVal sMovNro As String, _
                                 ByVal nMonto As Double, Optional ByVal nITFOperacion As Long = 0, Optional ByVal nITFValor As Double = 0, _
                                 Optional ByVal sNomAge As String = "", Optional ByVal sCodCmac As String = "", Optional ByVal sCodAge As String = "", _
                                 Optional nTipoDoc As TpoDoc = TpoDocCheque, Optional sNroDoc As String = "", Optional sCodIF As String = "", Optional ByRef sImpBoleta As String = "", _
                                 Optional ByVal pbImpTMU As Boolean = False, _
                                 Optional ByVal psMotExtorno As Variant)

    Dim sSql As String
    Dim rsCta As ADODB.Recordset
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim nMovNro As Long
    Dim dFecSis As Date
    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String, sCodUserBus As String, sMovNroBus As String
    Dim clsTit As NCOMCaptaGenerales
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim nTipPago As Integer
    Dim dbCmact As COMConecta.DCOMConecta
    Dim sLpt As String
    'JUEZ 20131209 ********************
    Dim nSaldoDisp As Double
    Dim nSaldoCnt As Double
    Dim rsCtaSaldo As ADODB.Recordset
    'END JUEZ *************************
    'JUEZ 20131226 ********************
    Dim bTrans As Boolean
    Dim lsBoletaExtCargo As String
    Dim nTpoPrograma As Integer
    'END JUEZ *************************
    
    If nITFValor > 0 Then
        If nITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
    End If
    
    bTrans = False
    sTipApe = "EXTORNO DE PLAZO FIJO"
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    Dim ClsMov As COMDMov.DCOMMov
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = ClsMov.GetcMovNro(nMovNroAnt)
    sCodUserBus = Right(sMovNroBus, 4)
    
    If nOperacion = gPFExtAumCapEfec Then
        sModDep = " Extorno Acum. Cap. Efec."
    ElseIf nOperacion = gPFExtAumCapTasaPactEfec Then
        sModDep = " Extorno Acum. Cap. Efec. Tasa. Pac."
    ElseIf nOperacion = gPFExtAumCapchq Then
        sModDep = " Extorno Acum. Cap. Cheque."
    ElseIf nOperacion = gPFExtAumCapTasaPactChq Then
        sModDep = " Extorno Acum. Cap. Cheque. Tasa. Pac."
    ElseIf nOperacion = gPFExtAumCapTrans Then
        sModDep = " Extorno Acum. Cap. Trans."
    ElseIf nOperacion = gPFExtAumCapTasaPactTrans Then
        sModDep = " Extorno Acum. Cap. Trans. Tasa. Pac."
    ElseIf nOperacion = gPFExtAumCapCargoCta Then 'JUEZ 20131226
        sModDep = " Extorno Acum. Cap. Cargo Cta."
    ElseIf nOperacion = gPFExtDismCapEfec Then
        sModDep = " Extorno Dism. Cap."
    End If

    sCodOpe = Trim(nOperacion)
    
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
    
    Set dbCmact = New COMConecta.DCOMConecta
    dbCmact.AbreConexion
    Set rsCta = New ADODB.Recordset
    
    'JUEZ 20131209 ****************************************************************
    'sSql = "SELECT cCtacod,nSaldoDisp,nSaldoCnt,dUltimoCierre,nTasaInteres,nIntAcum,dAuxiliar,nTransacc,nIntPag,nIntDevChq,nPlazo,cUltActualizacion,dRenovacion,nMovNro " _
    '       & " FROM CaptacExtornoCapAumDisPF WHERE cCtaCod ='" & sCuenta & "' AND nMovNro ='" & nMovNroAnt & "' "
    sSql = "SELECT cCtacod,nSaldoDisp,nSaldoCnt,dUltimoCierre,nTasaInteres,nIntAcum,dAuxiliar,nTransacc,nIntPag,nIntDevChq,nPlazo,cUltActualizacion,dRenovacion,C.nMovNro " _
            & " FROM CaptacExtornoCapAumDisPF C " _
            & " INNER JOIN Mov M ON M.nMovNro=C.nMovNro" _
            & " WHERE C.cCtaCod ='" & sCuenta & "' AND C.nMovNro <> " & nMovNroAnt & " AND LEFT(cMovNro,8) = LEFT('" & sMovNro & "',8)" _
            & " AND C.nMovNro = (SELECT MAX(CX.nMovNro) FROM CaptacExtornoCapAumDisPF CX " _
            & "                  INNER JOIN Mov MX ON MX.nMovNro=CX.nMovNro " _
            & " WHERE MX.nMovFlag = 0 AND CX.cCtaCod = '" & sCuenta & "' AND CX.nMovNro <> " & nMovNroAnt & " AND LEFT(cMovNro,8) = LEFT('" & sMovNro & "',8))"
    Set rsCta = dbCmact.CargaRecordSet(sSql)
    
    If rsCta.EOF And rsCta.BOF Then
        sSql = "SELECT cCtacod,nSaldoDisp,nSaldoCnt,dUltimoCierre,nTasaInteres,nIntAcum,dAuxiliar,nTransacc,nIntPag,nIntDevChq,nPlazo,cUltActualizacion,dRenovacion,nMovNro " _
                & " FROM CaptacExtornoCapAumDisPF WHERE cCtaCod ='" & sCuenta & "' AND nMovNro ='" & nMovNroAnt & "' "
        Set rsCta = dbCmact.CargaRecordSet(sSql)
    End If
    'END JUEZ *********************************************************************
    
    If Not (rsCta.EOF And rsCta.BOF) Then
        'JUEZ 20131209 ************************************************************
        sSql = "SELECT P.nSaldo nSaldoCnt,nSaldoDisp,nTpoPrograma FROM PRODUCTO P INNER JOIN Captaciones C ON P.cCtaCod=C.cCtaCod AND P.cCtaCod = '" & sCuenta & " '"
        Set rsCtaSaldo = dbCmact.CargaRecordSet(sSql)
        nSaldoDisp = rsCtaSaldo("nSaldoDisp") - nMonto
        nSaldoCnt = rsCtaSaldo("nSaldoCnt") - nMonto
        nTpoPrograma = rsCtaSaldo("nTpoPrograma")
        
        On Error GoTo ErrGraba
        Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
        clsCap.dbCmact.BeginTrans
        bTrans = True
        'sSql = "Update Producto Set nSaldo =  " & rsCta("nSaldoCnt") & ", nTransacc = " & rsCta("nTransacc") & ", " _
        '        & "nTasaInteres = " & rsCta("nTasaInteres") & " WHERE cCtaCod = '" & sCuenta & "'"
        'dbCmact.Ejecutar sSql

        'sSql = "Update Captaciones Set nSaldoDisp =  " & rsCta("nSaldoDisp") & ", nIntAcum = " & rsCta("nIntAcum") & ", " _
        '       & "dUltCierre = '" & Format$(rsCta("dUltimoCierre"), "yyyy/mm/dd") & "', cUltimaActualizacion = '" & rsCta("cUltActualizacion") & "' " _
        '       & "WHERE cCtaCod = '" & sCuenta & "'"
        'dbCmact.Ejecutar sSql
  
        'sSql = "Update CaptacPlazoFijo Set nPlazo = " & rsCta("nPlazo") & " , nIntPag = " & rsCta("nIntPag") & ", " _
        '    & "dRenovacion = '" & Format$(rsCta("dRenovacion"), "yyyy/mm/dd") & "', nIntDevChq = " & rsCta("nIntDevChq") & ", " _
        '    & "dAuxiliar = '" & Format$(rsCta("dAuxiliar"), "yyyy/mm/dd") & "' WHERE cCtaCod = '" & sCuenta & "'"
        'dbCmact.Ejecutar sSql
        
        'clsCap.ActualizaAumentoCapitalPF sCuenta, -nMonto, -nMonto, rsCta("nIntAcum"), Format$(rsCta("dUltimoCierre"), "yyyy/mm/dd"), rsCta("cUltActualizacion"), Format$(rsCta("dRenovacion"), "yyyy/mm/dd"), rsCta("nPlazo"), rsCta("nTasaInteres"), Format$(rsCta("dAuxiliar"), "yyyy/mm/dd")
        clsCap.ActualizaAumentoCapitalPF sCuenta, -nMonto, -nMonto, rsCta("nIntAcum"), Format$(rsCta("dUltimoCierre"), "yyyy/mm/dd"), rsCta("cUltActualizacion"), Format$(rsCta("dRenovacion"), "yyyy/mm/dd"), rsCta("nPlazo"), rsCta("nTasaInteres"), Format$(rsCta("dAuxiliar"), "yyyy/mm/dd"), , , True 'APRI20171227 TIC1712200001
        
        'sSql = "Update Mov Set nMovFlag='" & gMovFlagExtornado & "'  where nMovNro=" & nMovNroAnt & ""
        'dbCmact.Ejecutar sSql
        
        clsCap.ActualizaEstadoMov nMovNroAnt, gMovFlagExtornado
        'Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
        'END JUEZ *****************************************************************
        If sNroDoc <> "" And nTipoDoc <> TpoDocCtaCargoAumCap Then 'JUEZ 20131226
            clsCap.ActualizaEstadoDocRecEst TpoDocCheque, sNroDoc, sCodIF, sMovNro, gsChqEstExtornado, , sCuenta
        End If
    
        clsCap.AgregaMov sMovNro, nOperacion, sModDep, gMovEstContabNoContable, gMovFlagDeExtorno
        nMovNro = clsCap.GetnMovNro(sMovNro)
        '***CTI3 (ferimoro) 17102018
        clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
        'clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, rsCta("nSaldoDisp"), rsCta("nSaldoCnt")
        clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt 'JUEZ 20131209
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
        
        '***Agregado por ELRO el 20120717, según OYP-RFC024-2012
        If nOperacion = gPFExtAumCapTrans Then
            clsCap.actualizarRelacionExtornoVoucherCaptacion nMovNroAnt
        End If
        '***Fin Agregado por ELRO el 20120717*******************
        
        If nOperacion = gPFExtAumCapCargoCta Then
            CapExtornoCargoAho nMovNroAnt, gAhoExtCargoCtaAumCapPF, sNroDoc, sMovNro, sModDep, nMonto, , , , sNomAge, sLpt, sCodCmac, nITFValor, nITFOperacion, 0, , lsBoletaExtCargo, , , , pbImpTMU, , , , clsCap.dbCmact
        End If
        clsCap.dbCmact.CommitTrans 'JUEZ 20131226
        Set clsCap = Nothing
        bTrans = False
    
        sImpBoleta = sImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", rsCta("nSaldoDisp"), rsCta("nIntAcum"), "", 1, rsCta("nSaldoCnt"), , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , sCodCmac, sCodAge, , , CStr(nOperacion), sCodUserBus, , , , , , , , nTipPago, nITFValor, True, , , pbImpTMU)
        
        If nOperacion = gPFExtAumCapCargoCta Then sImpBoleta = sImpBoleta & lsBoletaExtCargo 'JUEZ 20131226
    End If
    
    Exit Sub
ErrGraba:
    If bTrans Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
    End If
    Err.Raise Err.Number, "CapExtornoCapAumDisPF", Err.Description
End Sub

Public Sub CapExtornoOpeAhoCMACLlamada(ByVal nMovNroBus As Long, ByVal sMovNro As String, _
            ByVal nOperacion As CaptacOperacion, ByVal sGlosa As String, ByVal sCuenta As String, _
            ByVal sDescOperacion As String, ByVal nMonto As Double, _
            Optional sDocumento As String = "NULL", Optional sNomAge As String, _
            Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional ByVal psCodAge As String = "", Optional ByRef psImpBoleta As String, _
            Optional ByVal pbImpTMU As Boolean = False, _
            Optional ByVal psMotExtorno As Variant)

'*****************************
'Optional ByVal psMotExtorno As Variant agregado por CTI3 03102018
'*****************************
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim bTrans As Boolean
    Dim nMovNro As Long
    Dim rsTemp As New ADODB.Recordset
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = "": sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)

    clsCap.dbCmact.BeginTrans
    bTrans = True
    sDocumento = IIf(sDocumento = "NULL", "''", sDocumento)
    
    Set rsTemp = clsCap.MovAsociados(nMovNroBus)
    Select Case nOperacion
     Case gCMACOTAhoExtDepEfec, gCMACOTAhoExtDepChq, "137000"
        ActualizaDepCMACLLAMADA nMovNroBus, gAhoDepRegCMACLlam, sDocumento, sMovNro
     Case gCMACOTAhoExtRetEfec, gCMACOTAhoExtRetOP
        ActualizaRetCMACLLAMADA nMovNroBus, gAhoRetRegCMACLlam, sDocumento, sMovNro
    End Select
    
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    While Not rsTemp.EOF
        clsCap.ActualizaEstadoMov rsTemp!nMovNroRef, gMovFlagExtornado
        rsTemp.MoveNext
    Wend
    If rsTemp.State = 1 Then rsTemp.Close
    Set rsTemp = Nothing

    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
     
    clsCap.dbCmact.CommitTrans
    If sDocumento = "" Then
        psImpBoleta = psImpBoleta & ImprimeBoleta("EXT.OPE CMAC LLAMADA", sDescOperacion, Trim(nOperacion), Trim(nMonto), "", sCuenta, "", 0, "", "", 0, 0, True, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
    Else
        psImpBoleta = psImpBoleta & ImprimeBoleta("EXT.OPE CMAC LLAMADA", sDescOperacion & " N° " & sDocumento, Trim(nOperacion), Trim(nMonto), "", sCuenta, "", 0, "", "", 0, 0, True, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
    End If
    'Exit Sub
    'ErrGraba:
    '    If bTrans Then clsCap.dbCmact.RollbackTrans
    '   Set clsCap = Nothing
     '   Err.Raise Err.Number, "", Err.Description
End Sub
Public Sub ActualizaRetCMACLLAMADA(ByVal nMovNro As Long, ByVal nTipoOpe As CaptacOperacion, ByVal cDocumento As String, ByVal sMovNro As String)
 
 Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
Dim dUltMov As Date
Dim nDiasTranscurridos As Long
Dim dFecSis As Date
Dim bTrans As Boolean
Dim rsTemp As New ADODB.Recordset
Dim sCuenta As String
Dim nMonto As Double
Dim bInactiva As Boolean
Dim nExtracto As Double
Dim nITFMonto As Double
Dim sNroDoc As String
Dim nTipoDoc As Double

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
bTrans = False
'Obtiene los datos para el calculo

Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set rsTemp = clsMant.GetDatosOpeLLamada(nMovNro, CStr(nTipoOpe))
    sCuenta = rsTemp("cctacod")
    nMonto = rsTemp("nmonto")

Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")
bInactiva = IIf(rsCta("bInactiva") = 1, True, False)
nExtracto = rsCta("nTransacc") + 1
rsCta.Close
Set rsCta = Nothing

'Inicia la transaccion

On Error GoTo ErrGraba
clsCap.dbCmact.BeginTrans
bTrans = True

nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
dUltMov = DateAdd("d", -1, dFecSis)
nSaldoCnt = nSaldoCnt + nMonto
nSaldoDisp = nSaldoDisp + nMonto
clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp


clsCap.ActualizaAbonoCaptacion sCuenta, nMonto + nITFMonto, nMonto + nITFMonto, nIntGanado, dUltMov, sMovNro, True

If sNroDoc <> "''" Then
    If nTipoDoc = TpoDocOrdenPago Then
         clsCap.EliminaOrdenPago sCuenta, sNroDoc
    End If
End If

clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
clsCap.dbCmact.CommitTrans
'CapExtornoCargoAho = nSaldoCnt



Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "ACTUALIZA EXTORNO RETIRO CMAC LLAMADA", Err.Description
    'CapExtornoCargoAho = 0

End Sub


Public Sub ActualizaDepCMACLLAMADA(ByVal nMovNro As Long, ByVal nTipoOpe As CaptacOperacion, ByVal cDocumento As String, ByVal sMovNro As String, _
                                    Optional ByRef psMensajeValidacion As String = "")

Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset, rsTemp As ADODB.Recordset
Dim nEstado As CaptacEstado
Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
Dim dUltMov As Date
Dim bTrans As Boolean
Dim nDiasTranscurridos As Long
Dim dFecSis As Date
Dim sCuenta As String, nMonto As Double
Dim sNroDoc As String
Dim nTipoDoc As Double


dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))

bTrans = False
'Obtiene los datos para el calculo
Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

Set rsTemp = clsMant.GetDatosOpeLLamada(nMovNro, CStr(nTipoOpe))


    sCuenta = rsTemp("cctacod")
    nMonto = rsTemp("nmonto")


Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
Set clsMant = Nothing
nEstado = rsCta("nPrdEstado")
nSaldoDisp = rsCta("nSaldoDisp")
nSaldoCnt = rsCta("nSaldo")
dUltMov = rsCta("dUltCierre")
nTasa = rsCta("nTasaInteres")
nIntAcum = rsCta("nIntAcum")

rsCta.Close
Set rsCta = Nothing
'Inicia la transaccion

On Error GoTo ErrGraba
bTrans = True

If sNroDoc = "" Then
    If Not ValidaSaldoCuenta(sCuenta, nMonto) Then
        Set clsCap = Nothing
'        MsgBox "Cuenta NO Posee Saldo Suficiente", vbInformation, "Aviso"
        psMensajeValidacion = "Cuenta NO Posee Saldo Suficiente"
        'ActualizaDepCMACLLAMADA = 0
        Exit Sub
    End If
End If
'sGlosa = sGlosa & ". Extorno Abono Cuenta = " & sCuenta
nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
dUltMov = DateAdd("d", -1, dFecSis)
nSaldoCnt = nSaldoCnt - nMonto
clsCap.dbCmact.BeginTrans
bTrans = True
clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp


If sNroDoc <> "" Then
    If nTipoDoc = TpoDocCheque Then
        nSaldoDisp = nSaldoDisp - 0
        clsCap.ActualizaCargoCaptacion sCuenta, nMonto, 0, nIntGanado, dUltMov, sMovNro, True
        'clsCap.ActualizaEstadoDocRecEst TpoDocCheque, sNroDoc, sCodIF, smovnro, gsChqEstExtornado
      
    End If
Else
    nSaldoDisp = nSaldoDisp - nMonto
    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
End If
clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
clsCap.dbCmact.CommitTrans
bTrans = False


Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox Err.Description, vbExclamation, "Error"
    Err.Raise Err.Number, "Error", Err.Description

End Sub
'*******************************

Public Sub CapCargoFondoFijo(ByVal sNroDoc As String, ByVal nMonto As Double, ByVal nMovNroRef As Long, _
            ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal dFecDoc As Date, _
            ByVal sGlosa As String, Optional sNomAge As String = "", Optional sLpt As String = "", Optional pnMoneda As Moneda = Moneda.gMonedaNacional, _
            Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False)

    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim bTrans As Boolean
    Dim nMovNro As Long
    Dim nMoneda As Integer
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, , gMovFlagVigente  'DeExtorno
    
    nMovNro = clsCap.GetnMovNro(sMovNro)
    clsCap.AgregaMovDoc nMovNro, TpoDocOrdenPago, sNroDoc, dFecDoc
    clsCap.AgregaMovRef nMovNro, nMovNroRef
    clsCap.AgregaMovOpeVarias nMovNro, nMonto, sNroDoc, sGlosa, pnMoneda, nOperacion
    
    clsCap.dbCmact.CommitTrans

    Dim sMensaje As String
    Select Case nOperacion
        Case gAhoRetFondoFijo
            sMensaje = "Ord. Pag. N° " & sNroDoc
        Case gAhoRetFondoFijoCanje
            sMensaje = "OP Cert. N° " & sNroDoc
    End Select
    nMoneda = CInt(pnMoneda)
    psImpBoleta = psImpBoleta & ImprimeBoleta("RETIRO FONDO FIJO", sMensaje, Trim(nOperacion), Trim(nMonto), "", "", sNroDoc, 0, "", "", 0, 0, False, False, , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , , , nMoneda, , , , , , , , , , False, , , , , , pbImpTMU)
    Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox Err.Description, vbCritical, "Error"
    Err.Raise Err.Number, "Error", Err.Description
End Sub

Public Function CtaConFirmas(psCtaCod As String) As Boolean
    Dim oCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set oCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    CtaConFirmas = oCapMov.CtaConFirmas(psCtaCod)
    
    Set oCapMov = Nothing
End Function
'ALPA
''Public Function OtrasOperaciones(psMovNro As String, pnOperacion As CaptacOperacion, pnMovImporte As Currency, psNroDoc As String, psReferencia As String, pnMoneda As Moneda, psPersCod As String, Optional pnMovNroRef As Long = 0, _
''                                    Optional psTitLavDinero As String = "", _
''                                    Optional psOrdLavDinero As String = "", _
''                                    Optional psReaLavDinero As String = "", _
''                                    Optional psBenLavDinero As String = "", _
''                                    Optional psVisLavDinero As String = "") As Long

Public Function OtrasOperaciones(psMovNro As String, pnOperacion As CaptacOperacion, _
        pnMovImporte As Currency, psNroDoc As String, psReferencia As String, _
        pnMoneda As Moneda, psPersCod As String, Optional pnMovNroRef As Long = 0, _
        Optional psTitLavDinero As String = "", Optional psOrdLavDinero As String = "", _
        Optional psReaLavDinero As String = "", Optional psBenLavDinero As String = "", _
        Optional psVisLavDinero As String = "", Optional pnMovNro As Long = 0, _
        Optional pnMovNroRef2 As Long = 0, Optional pnConnBase As ADODB.Connection = Nothing, _
        Optional ByVal pnConcepto As Integer = 0, Optional ByVal psCtaCodCargo As String = "", _
        Optional ByRef pMatAho As Variant = "", Optional pnTipoPago As Integer, _
        Optional psFechaHora As String, Optional ByVal pnCertifSepelio As String = "", _
        Optional ByVal psAsegurado As String = "", Optional ByVal psPrimaAnualSS As String = "", Optional ByVal gdFecSis As String, _
        Optional ByVal gsCodAge As String, _
        Optional ByVal pnMovNroTransfer As Long = -1, _
        Optional ByVal pnMonedaTrans As Moneda = gMonedaNacional, _
        Optional ByVal pnMovNroRVD As Long = 0, _
        Optional ByVal pnMontoRVD As Currency = 0, _
        Optional ByVal psNomAge As String, _
        Optional ByRef psImpBoleta As String, _
        Optional pbImpTMU As Boolean, _
        Optional ByVal psLpt As String = "", _
        Optional ByVal psPersNombre As String) As Long
        'By Capi 05032008 se agrego parametros de lavado de dinero.
        'PASI20150414 agrego pnMovNroRef2
        'RIRO20150530 ERS162-2014 Add "pnConnBase" Se agregó para incluir proceso actual dentro de una transaccion.
        'JUEZ 20151019 Se agregó pnConcepto
        'NDX ERS0112020 ADD pnTipoPago, psFechaHora
        'Añadió variables PAVA20210625
                                    
Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim lnMovNro As Long
Dim bTran As Boolean
Dim oSeg As New COMNCaptaGenerales.NCOMSeguros 'PAVA20210625
'ALPA20130930****************************
Dim nResult As Long
On Error GoTo ErrorOtrasOperaciones

    'RIRO20150530 ERS162-2014, Comentado ****
    'bTran = True
    'clsCapMov.dBeginTrans
    'END RIRO *******************************
            
    'RIRO20150530 ERS162-2014 ***************
    If Not pnConnBase Is Nothing Then
        clsCapMov.SetConexion pnConnBase
        clsCapMov.bTransaccion = True
        bTran = False
    Else
        bTran = True
        clsCapMov.dBeginTrans
    End If
    'END RIRO *******************************

                                         
        clsCapMov.AgregaMov psMovNro, pnOperacion, psReferencia, gMovEstContabNoContable, gMovFlagVigente
        lnMovNro = clsCapMov.GetnMovNro(psMovNro)
        'ALPA 20081010
        pnMovNro = lnMovNro
        'clsCapMov.AgregaMovOpeVarias lnMovNro, pnMovImporte, psNroDoc, psReferencia, pnMoneda, pnOperacion
        clsCapMov.AgregaMovOpeVarias lnMovNro, pnMovImporte, psNroDoc, psReferencia, pnMoneda, pnOperacion, pnConcepto 'JUEZ 20151019
        clsCapMov.AgregaMovGasto lnMovNro, psPersCod, ""
        
        'MADM 20110104
        If pnMovNroRef <> 0 Then
            clsCapMov.AgregaMovRef lnMovNro, pnMovNroRef
        End If
        'END MADM
        'PASI20150414
        If pnMovNroRef2 <> 0 Then
            clsCapMov.AgregaMovRef lnMovNro, pnMovNroRef2
        End If
        'end PASI
        
        'CTI5 ERS0112020
'        If pnTipoPago = gColocTipoPagoVoucher Then
'            loRegAho.actualizarRelacionVoucherCaptacion lnMovNro, pnMovNroRVD
'            If pnMovNroPend <> -1 Then loRegPig.ActualizaMovPendientesRend pnMovNroPend, pnMontoTransac + pnMontoITF
'        End If
        Dim psGlosa As String
        Dim pnMontoITF As Double

        'Dim nMovNro As String        If pnTipoPago = gColocTipoPagoCargoCta Then
        If pnOperacion = gComiDiversasAhoCredCom And pnTipoPago = gColocTipoPagoCargoCta Then
            clsCapMov.CapCargoCuentaAho pMatAho, psCtaCodCargo, pnMovImporte, gComiDiversasAhoCredCom, psMovNro, "Cargo a Cuenta Const. No Adeudo: " & psCtaCodCargo, psFechaHora
        ElseIf pnOperacion = gCargoCtaComiCredConstNoAdeudo Or pnOperacion = 322008 And pnTipoPago = gColocTipoPagoCargoCta Then
            clsCapMov.CapCargoCuentaAho pMatAho, psCtaCodCargo, pnMovImporte, gCargoCtaComiCredConstNoAdeudo, psMovNro, "Cargo a Cuenta Const. No Adeudo: " & psCtaCodCargo, psFechaHora
        ElseIf pnOperacion = gOpeTransferenciaCargo Then
            pnMontoITF = 0#
            psGlosa = "CONVERSIÓN DE DINERO FÍSICO A ELECTRÓNICO CON CARGO A CUENTA"
            clsCapMov.CapCargoCuentaAho pMatAho, psCtaCodCargo, pnMovImporte, gOpeTransferenciaCargo, psMovNro, "Cargo a Cuenta Const. Conversión de dinero físico a electrónico: " & psCtaCodCargo, psFechaHora
            psImpBoleta = ImprimeBoleta("Cargo-Dinero físico a electrónico", "Cargo-Conversión de dinero", gotropeDepUtilidadesTrans, Str(pnMovImporte), _
                         psPersNombre, psCtaCodCargo, "", 0, "0", IIf(Len(psNroDoc) = 0, "", "Nro Documento"), 0, 0, False, False, _
                         , , , True, , "Nro Ope. : " & Str(pnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                         psNomAge, Right(psMovNro, 4), psLpt, , , , , False, , , , , , , , , False, 2, pnMontoITF, True, , , pbImpTMU)
        ElseIf pnTipoPago = gColocTipoPagoVoucher And pnOperacion = gComiDiversasAhoCredComVoucher Then
            clsCapMov.actualizarRelacionVoucherCaptacion lnMovNro, pnMovNroRVD
            If pnMovNroTransfer <> -1 Then clsCapMov.AgregaMovRef lnMovNro, pnMovNroTransfer
            If pnMovNroTransfer <> -1 Then clsCapMov.ActualizaMovPendientesRend pnMovNroTransfer, pnMovImporte
        ElseIf pnTipoPago = gColocTipoPagoDeposito And pnOperacion = gOpeTransferenciaDeposito Then
                pnMontoITF = 0#
                psGlosa = "CONVERSIÓN DE DINERO ELECTRÓNICO A FÍSICO CON DEPOSITO"
                nResult = clsCapMov.CapAbonoCuentaAho(psCtaCodCargo, pnMovImporte, gOpeTransferenciaDeposito, _
                                     psMovNro, psGlosa, , , , , , , , , psNomAge, , , True, , , , , clsCapMov.dbCmact, , pnMontoITF, , "990101", _
                                      , , , , psImpBoleta, , pbImpTMU, , , , , , pnMovNro)
            
                If Trim(psImpBoleta) = "" Then
                    psImpBoleta = ImprimeBoleta("Abono-Dinero electrónico a físico", "Abono-Conversión de dinero", gOpeTransferenciaDeposito, Str(pnMovImporte), _
                         psPersNombre, psCtaCodCargo, "", 0, "0", IIf(Len(psNroDoc) = 0, "", "Nro Documento"), 0, 0, False, False, _
                         , , , True, , "Nro Ope. : " & Str(pnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                         psNomAge, Right(psMovNro, 4), psLpt, , , , , False, , , , , , , , , False, 2, pnMontoITF, True, , , pbImpTMU)
                End If
        End If
        'CTI5 ERS0112020 END
        
        'AGREGADO POR PAVA20210625
        If pnOperacion = "300151" Then 'afiliciacion de seguro
            'clsCapMov.AgregaSegSepelioAfiliacion pnCertifSepelio, "", gdFecSis, psMovNro, lnMovNro, psAsegurado, gsCodAge, psPrimaAnualSS
            clsCapMov.AgregaSegSepelioAfiliacionHis pnCertifSepelio, "", gdFecSis, psMovNro, lnMovNro, psAsegurado, gsCodAge, 501
            
        ElseIf pnOperacion = "300150" Then 'cobro de seguro
            clsCapMov.AgregaSegSepelioAfiliacionHis psNroDoc, "", gdFecSis, psMovNro, lnMovNro, psPersCod, gsCodAge, 501
            'Dim oSeg As New COMNCaptaGenerales.NCOMSeguros
            clsCapMov.ActualizaEstadoSeguroSepelio psNroDoc, gdFecSis, psMovNro, lnMovNro, 501 'APRI20171027 ERS028-2017 CAMBIÒ ESTADO 1 POR 501
            
        End If
        'FIN DEL AGREGADO

    'clsCapMov.dCommitTrans RIRO20150530 ERS162-2014
    If bTran Then clsCapMov.dCommitTrans 'RIRO20150530 ERS162-2014
    Set clsCapMov = Nothing
    OtrasOperaciones = lnMovNro
    Exit Function
'ALPA20130930****************************
ErrorOtrasOperaciones:
    If bTran Then
        Call clsCapMov.dRollbackTrans
        Set clsCapMov = Nothing
        pnMovNro = 0
        Err.Raise Err.Number, "Error En Proceso", Err.Description
        bTran = False
    End If
    
'****************************************
End Function

Public Function GetTarifa(psOpeCod As CaptacOperacion, pnMoneda As Moneda) As Currency
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    GetTarifa = clsCapMov.GetTarifa(psOpeCod, pnMoneda)
    
    Set clsCapMov = Nothing
End Function

Public Function GetOtrasOperaciones(ByVal pdFecha As Date, Optional cUser As String, Optional ByVal psOpeCod As String) As ADODB.Recordset
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rs As ADODB.Recordset
    Set rs = New ADODB.Recordset
    
    Set rs = clsCapMov.GetOtrasOperaciones(pdFecha, cUser, psOpeCod)
    
    Set GetOtrasOperaciones = rs
    
    Set clsCapMov = Nothing
End Function

Public Function GetOtrasOperacionesDet(psMovNro As Long) As ADODB.Recordset
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    Set GetOtrasOperacionesDet = clsCapMov.GetOtrasOperacionesDet(psMovNro)
    
    Set clsCapMov = Nothing
End Function
Public Function SacarFechaHoraGrab(ByVal psMovNro As String) As String
    SacarFechaHoraGrab = Mid(psMovNro, 1, 4) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 7, 2) & " " & Mid(psMovNro, 9, 2) & ":" & Mid(psMovNro, 11, 2) & ":" & Mid(psMovNro, 13, 2)
End Function
Public Function OtrasOperacionesExtorno(psMovNro As String, pnMovNro As Long, _
                    pnOperacion As CaptacOperacion, psReferencia As String, _
                    Optional ByVal psMotExtorno As Variant, Optional ByVal pnOperacionAExtornar As CaptacOperacion, _
                    Optional ByRef psBoleta As String = "", Optional ByVal psNomAge As String = "", _
                    Optional ByVal pbImpTMU As Boolean = True) As Long
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim lnMovNro As Long
    Dim rs As ADODB.Recordset

    clsCapMov.AgregaMov psMovNro, pnOperacion, psReferencia, gMovEstContabNoContable, gMovFlagVigente
    lnMovNro = clsCapMov.GetnMovNro(psMovNro)
    '**CTI3 (ferimoro) 02102018
    clsCapMov.dInsertDetExtMov lnMovNro, pnOperacion, psMotExtorno(0), psMotExtorno(1)
    
    clsCapMov.AgregaMovRef lnMovNro, pnMovNro
    clsCapMov.ActualizaEstadoMov pnMovNro, gMovFlagEliminado
    'JUEZ 20130906 ****************************
    Set rs = clsCapMov.GetMovxMovRef(pnMovNro, lnMovNro)
    If rs.RecordCount > 0 Then
        clsCapMov.ActualizaEstadoMov rs!nMovNro, gMovFlagEliminado
    End If
    'END JUEZ *********************************
    clsCapMov.ExtornarSobrante pnMovNro 'RIRO20140530 ERS017 ***
    
    Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim RCapMov As ADODB.Recordset
    Dim lsFechaHoraGrab As String
    Dim pnITFMonto As Double
    lsFechaHoraGrab = SacarFechaHoraGrab(psMovNro)
    If pnOperacion = gOtrOpeExtorno Then
        If pnOperacionAExtornar = gComiDiversasAhoCredComVoucher Then
         'CTI7 ERSOpeV2
           clsCapMov.actualizarRelacionExtornoVoucherCaptacion (pnMovNro)
         '************************
        End If
        
        If pnOperacionAExtornar = gOpeTransferenciaCargo Then
            Dim nSaldo As Integer
            pnITFMonto = 0
            Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
            Set RCapMov = New ADODB.Recordset
            Set RCapMov = oDCOMCaptaMovimiento.RecuperaMovimientoCapataciones(pnMovNro, gOpeTransferenciaCargo)
            nSaldo = CapExtornoCargoAho(pnMovNro, gAhoExtornoElectronicoCargo, RCapMov!cCtaCod, oDCOMCaptaMovimiento.GeneraMovNro(CDate(lsFechaHoraGrab), , , psMovNro), "Extorno conversión de dinero con cargo a cuenta", RCapMov!nMonto, , , , , , , , , , , psBoleta, , , , pbImpTMU, , , , , , , psMotExtorno)
            If Trim(psBoleta) = "" Then
            psBoleta = ImprimeBoleta("Extorno conversión de dinero con cargo a cuenta", "Extorno cargo a cuenta", gOpeTransferenciaCargo, Str(RCapMov!nMonto), _
                                  RCapMov!cCliente, RCapMov!cCtaCod, "", 0, "0", IIf(Len(RCapMov!cDNI) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                  , , , True, , "Nro Ope. : " & Str(lnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                 psNomAge, Right(psMovNro, 4), , , , , , False, , , , , , , , , False, 2, pnITFMonto, True, , , pbImpTMU)
            End If
            Set RCapMov = Nothing
           

        End If
        
        If pnOperacionAExtornar = gOpeTransferenciaDeposito Then
            pnITFMonto = 0
            Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
            Set RCapMov = New ADODB.Recordset
            Set RCapMov = oDCOMCaptaMovimiento.RecuperaMovimientoCapataciones(pnMovNro, gOpeTransferenciaDeposito)
            
            CapExtornoAbonoAho pnMovNro, gAhoExtornoElectronicoDeposito, RCapMov!cCtaCod, oDCOMCaptaMovimiento.GeneraMovNro(CDate(lsFechaHoraGrab), , , psMovNro), "Extorno conversión de dinero con cargo de a cuenta", _
                       RCapMov!nMonto, , , , psNomAge, , , pnITFMonto, _
                        gITFCobroCargo, gConcITFCliente, , "", psBoleta, , pbImpTMU, , , _
                       clsCapMov.dbCmact, psMotExtorno
            If Trim(psBoleta) = "" Then
                    psBoleta = ImprimeBoleta("Extorno conversión de dinero con depósito", "Extorno depósito ", gOpeTransferenciaDeposito, Str(RCapMov!nMonto), _
                                             RCapMov!cCliente, RCapMov!cCtaCod, "", 0, "0", IIf(Len(RCapMov!cDNI) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                              , , , True, , "Nro Ope. : " & Str(lnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                             psNomAge, Right(psMovNro, 4), , , , , , False, , , , , , , , , False, 2, pnITFMonto, True, , , pbImpTMU)
            End If
            Set RCapMov = Nothing
            

        End If
    End If
    
    Set clsCapMov = Nothing
    OtrasOperacionesExtorno = lnMovNro
End Function


'TODOCOMPLETA

Public Function GetCreditosPendientes(ByVal sPersona As String, pgdFecSis As Date, Optional ByVal pbBusqCred As Boolean = True, _
        Optional pbBusqPrend As Boolean = True, Optional pbBusqJud As Boolean = True) As ADODB.Recordset
    Dim rsCred As ADODB.Recordset
    Set rsCred = New ADODB.Recordset
    Dim rsCta As ADODB.Recordset
    Set rsCta = New ADODB.Recordset
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim nCuentasCre As Integer
    Dim nCuentasPrd As Integer
    Dim nCuentasJud As Integer

    nCuentasCre = 0
    nCuentasPrd = 0
    nCuentasJud = 0

    GeneraRecordsetCred rsCred
    rsCred.Open

    ReDim Preserve CuentasPersonaCre(0)
    If pbBusqCred = True Then
        Set rsCta = clsCapMov.CargaCuentas(sPersona, "CRE")
         If rsCta.EOF Then
            Set GetCreditosPendientes = Nothing
         Else
            Set GetCreditosPendientes = rsCta
         End If
'        If Not (rsCta.EOF And rsCta.BOF) Then
'            Do While Not rsCta.EOF
'                nCuentasCre = nCuentasCre + 1
'                ReDim Preserve CuentasPersonaCre(nCuentasCre)
'                CuentasPersonaCre(nCuentasCre) = rsCta("cCtaCod")
'                rsCta.MoveNext
'            Loop
'        End If
    End If

    'ReDim Preserve CuentasPersonaPrd(0)
    If pbBusqPrend = True Then
        Set rsCta = clsCapMov.CargaCuentas(sPersona, "PRD")
         If rsCta.EOF Then
            Set GetCreditosPendientes = Nothing
         Else
            Set GetCreditosPendientes = rsCta
         End If
        
'        If Not (rsCta.EOF And rsCta.BOF) Then
'            Do While Not rsCta.EOF
'                nCuentasPrd = nCuentasPrd + 1
'                ReDim Preserve CuentasPersonaPrd(nCuentasPrd)
'                CuentasPersonaPrd(nCuentasPrd) = rsCta("cCtaCod")
'                rsCta.MoveNext
'            Loop
'        End If
    End If

    'ReDim Preserve CuentasPersonaJud(0)
    If pbBusqJud = True Then
        Set rsCta = clsCapMov.CargaCuentas(sPersona, "JUD")
         If rsCta.EOF Then
            Set GetCreditosPendientes = Nothing
         Else
            Set GetCreditosPendientes = rsCta
         End If
        
'        If Not (rsCta.EOF And rsCta.BOF) Then
'            Do While Not rsCta.EOF
'                nCuentasJud = nCuentasJud + 1
'                ReDim Preserve CuentasPersonaJud(nCuentasJud)
'                CuentasPersonaJud(nCuentasJud) = rsCta("cCtaCod")
'                rsCta.MoveNext
'            Loop
'        End If
    End If
   
 '   Set GetCreditosPendientes = rsCred
End Function

Public Sub GeneraRecordsetCred(ByRef rsCred As ADODB.Recordset)
    rsCred.Fields.Append "Cuenta", adVarChar, 18, adFldMayBeNull
    rsCred.Fields.Append "Estado", adVarChar, 2, adFldMayBeNull
    rsCred.Fields.Append "Vencimiento", adDate, , adFldMayBeNull
    rsCred.Fields.Append "CuoVenc", adInteger, , adFldMayBeNull
    rsCred.Fields.Append "Cuota", adCurrency, , adFldMayBeNull
    rsCred.Fields.Append "Mora", adCurrency, , adFldMayBeNull
    rsCred.Fields.Append "Gastos", adCurrency, , adFldMayBeNull
    rsCred.Fields.Append "MinPagar", adCurrency, , adFldMayBeNull
End Sub

'OJO 07-11-2005

'Public Function CreditosPendientes(ByVal sPersona As String, ByRef rsCred As ADODB.Recordset, pgdFecSis As Date) As Boolean
'    Dim rsCta As ADODB.Recordset
'    Dim nAgencias As Long, nLen As Long, nCuentasCre As Long, nCuentasPrd As Long, nCuentasJud As Long
'    Dim sBuffer As String, sAgencia As String, sTipo As String
'    Dim sSimbMoneda As String, sCuentas As String, sVencidos As String
'    Dim i As Integer, J As Integer, nDiasAtraso As Integer
'    Dim nDeudaPrend As Double, nMinimoPagar As Double
'    Dim bVencidos As Boolean
'    Dim nValor1 As Double, nValor2 As Double
'    Dim clsCapDef As NCOMCaptaDefinicion
'    Set clsCapDef = New NCOMCaptaDefinicion
'
'    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
'    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
'
'    sAgencia = ""
'    sBuffer = ""
'    nCuentasCre = 0
'
'    nValor1 = clsCapDef.GetCapParametro(2027)
'    nValor2 = clsCapDef.GetCapParametro(2028)
'
'    If nValor1 = 1 Then
'        bVencidos = True
'        nDiasAtraso = Int(nValor2)
'    Else
'        bVencidos = False
'    End If
'    Set rsCta = New ADODB.Recordset
'    rsCta.CursorLocation = adUseClient
'
'    For i = 1 To UBound(CuentasPersonaCre, 1)
'        sCuentas = "("
'        sAgencia = Left(CuentasPersonaCre(i), 2)
'        For J = i To UBound(CuentasPersonaCre, 1)
'            sBuffer = Left(CuentasPersonaCre(J), 2)
'            If sBuffer = sAgencia Then
'                sCuentas = sCuentas & "'" & CuentasPersonaCre(J) & "',"
'            Else
'                Exit For
'            End If
'        Next J
'        sCuentas = Left(sCuentas, Len(sCuentas) - 1)
'        sCuentas = sCuentas & ")"
'        i = J - 1
'
'        Set rsCta = clsCapMov.GetDatosCrePendiente("CRE", bVencidos, sCuentas, nDiasAtraso, pgdFecSis)
'        If Not (rsCta.EOF And rsCta.BOF) Then
'            Do While Not rsCta.EOF
'                nCuentasCre = nCuentasCre + 1
'                rsCred.AddNew
'                rsCred("Cuenta") = Trim(rsCta("cCtaCod"))
'                rsCred("Estado") = IIf(rsCta("cRefinan") = 1, "RF", "")
'                rsCred("Vencimiento") = CDate(rsCta("dFecVenc"))
'                rsCred("CuoVenc") = Trim(rsCta("nNroCuo"))
'                rsCred("Cuota") = rsCta("nCuota")
'                rsCred("Mora") = rsCta("nMora")
'                rsCred("Gastos") = rsCta("nGastos")
'                rsCred("MinPagar") = rsCta("nCuota") + rsCta("nGastos") + rsCta("nMora")
'                rsCred.Update
'                rsCta.MoveNext
'            Loop
'        End If
'        rsCta.Close
'    Next i
'
'    'Verifica los Créditos Prendarios
'    sAgencia = ""
'    sBuffer = ""
'    nCuentasPrd = 0
'    For i = 1 To UBound(CuentasPersonaPrd, 1)
'        sCuentas = "("
'        sAgencia = Left(CuentasPersonaPrd(i), 2)
'        For J = i To UBound(CuentasPersonaPrd, 1)
'            sBuffer = Left(CuentasPersonaPrd(J), 2)
'            If sBuffer = sAgencia Then
'                sCuentas = sCuentas & "'" & CuentasPersonaPrd(J) & "',"
'            Else
'                Exit For
'            End If
'        Next J
'        sCuentas = Left(sCuentas, Len(sCuentas) - 1)
'        sCuentas = sCuentas & ")"
'        i = J - 1
'
'    Set rsCta = clsCapMov.GetDatosCrePendiente("CRE", bVencidos, sCuentas, nDiasAtraso, pgdFecSis)
'    If Not (rsCta.EOF And rsCta.BOF) Then
'            Do While Not rsCta.EOF
'                nCuentasPrd = nCuentasPrd + 1
'                nDeudaPrend = CalculaDeudaPrendario(rsCta("nSaldoCap"), rsCta("dFecVenc"), rsCta("nValTasac"), rsCta("nTasaIntVenc"), _
'                                    rsCta("nCostCusto"), rsCta("nTasaImpuesto"), rsCta("nPRDEstado"), rsCta("nCostoPrepRemate"), pgdFecSis)
'                nMinimoPagar = CalculaMinimoPagar(rsCta("nTasaInt"), rsCta("nPlazo"), rsCta("nValTasac"), rsCta("nTasaCustodia"), _
'                                    rsCta("nSaldoCap"), rsCta("nPRDEstado"), rsCta("dFecVenc"), rsCta("nTasaIntVenc"), rsCta("nTasaCustodia"), _
'                                    rsCta("nTasaImpuesto"), rsCta("nCostoPrepRemate"), pgdFecSis)
'                rsCred.AddNew
'                rsCred("Cuenta") = Trim(rsCta("cCtaCod"))
'                rsCred("Estado") = IIf(rsCta("nPrdEstado") = ColocEstado.gColPEstPRema, "RE", "")
'                rsCred("Vencimiento") = rsCta("dFecVenc")
'                rsCred("CuoVenc") = 1
'                rsCred("Cuota") = rsCta("nSaldoCap")
'                rsCred("Mora") = nDeudaPrend - rsCta("nSaldoCap")
'                rsCred("Gastos") = 0
'                rsCred("MinPagar") = nMinimoPagar
'                rsCred.Update
'                rsCta.MoveNext
'            Loop
'        End If
'        rsCta.Close
'
'    Next i
'
'    nCuentasJud = 0
'
'    If UBound(CuentasPersonaJud, 1) > 0 Then
'        sCuentas = "("
'        For i = 1 To UBound(CuentasPersonaJud, 1)
'            sCuentas = sCuentas & "'" & CuentasPersonaJud(i) & "',"
'        Next i
'        sCuentas = Left(sCuentas, Len(sCuentas) - 1)
'        sCuentas = sCuentas & ")"
'        'Verificamos los Creditos Judiciales concentrados en la agencia principal
'
'        Set rsCta = clsCapMov.GetDatosCrePendiente("PRD", bVencidos, sCuentas, nDiasAtraso, pgdFecSis)
'        If Not (rsCta.EOF And rsCta.BOF) Then
'            Do While Not rsCta.EOF
'                nCuentasJud = nCuentasJud + 1
'                rsCred.AddNew
'                rsCred("Cuenta") = Trim(rsCta("cCtaCod"))
'                rsCred("Estado") = "JU"
'                rsCred("Vencimiento") = Null
'                rsCred("CuoVenc") = 0
'                rsCred("Cuota") = 0
'                rsCred("Mora") = 0
'                rsCred("Gastos") = 0
'                rsCred("MinPagar") = 0
'                rsCred.Update
'                rsCta.MoveNext
'            Loop
'        End If
'        rsCta.Close
'    End If
'
'    If (nCuentasCre + nCuentasPrd + nCuentasJud) = 0 Then
'        CreditosPendientes = False
'    Else
'        CreditosPendientes = True
'    End If
'End Function

Public Function BuscaCreditosPendientesPago(ByVal psCuenta As String) As Boolean
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento

    BuscaCreditosPendientesPago = clsCapMov.BuscaCreditosPendientesPago(psCuenta)
    
    Set clsCapMov = Nothing
End Function

Public Function GetFirma(psPersCod As String, Optional ByVal psCodAge As String = "") As ADODB.Recordset
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
        
    Set GetFirma = clsCapMov.GetFirma(psPersCod, psCodAge)

    Set clsCapMov = Nothing
End Function

Public Function GetVerificaRetiro(ByVal sCuenta As String) As Boolean
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
        
     GetVerificaRetiro = clsCapMov.GetVerificaRetiro(sCuenta)
    Set clsCapMov = Nothing


End Function

Public Function TieneMovDespuesApertura(ByVal sCuenta As String) As Boolean
Dim oCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
TieneMovDespuesApertura = oCapMov.TieneMovDespuesApertura(sCuenta)
Set oCapMov = Nothing
End Function

Public Function ServGiroExtornoApertura(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
        ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
        Optional sNomAge As String = "", Optional sLpt As String = "", _
        Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean, _
        Optional ByVal psMotExtorno As Variant, Optional ByVal nOperacionInicial As CaptacOperacion, _
        Optional ByRef psBoletaCargo As String = "", Optional ByVal psNomAge As String = "")

    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim sMsgProd As String, sCodUser As String
    Dim nProd As Producto
    Dim nMovNro As Long
    Dim dFecSis As Date
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    
    sMsgProd = "EXTORNO GIRO"
    
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    clsCap.dbCmact.BeginTrans
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    '**CTI3 (ferimoro) 02102018
    nMovNro = clsCap.GetnMovNro(sMovNro)
    clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    '******
    clsCap.ActualizaEstadoGiro sCuenta, gCapEstAnulada, dFecSis
    Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim lsFechaHoraGrab As String
    Dim pnITFMonto As Double
    lsFechaHoraGrab = SacarFechaHoraGrab(sMovNro)
    If nOperacionInicial = gServGiroApertCargoCta Then
           Dim nSaldo As Currency
            pnITFMonto = 0
            Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
            Dim RCapMov As ADODB.Recordset
            Dim RCapMovITF As ADODB.Recordset
            Dim RCapMovITFCargo As ADODB.Recordset
            Set RCapMov = New ADODB.Recordset
            Set RCapMovITF = New ADODB.Recordset
            Set RCapMovITFCargo = New ADODB.Recordset
            Set RCapMov = clsCap.RecuperaMovimientoCapatacionesOperaciones(nMovNroBus, gServGiroApertCargoCta)
            Set RCapMovITF = clsCap.RecuperaMovimientoCapatacionesOperaciones(nMovNroBus, gITFCobroEfectivo)
            Set RCapMovITFCargo = clsCap.RecuperaMovimientoCapatacionesOperaciones(nMovNroBus, gITFCobroCargo)
            If Not (RCapMovITF.BOF Or RCapMovITF.EOF) Then
                pnITFMonto = RCapMovITF!nMonto
            ElseIf Not (RCapMovITFCargo.BOF Or RCapMovITFCargo.EOF) Then
                 pnITFMonto = RCapMovITFCargo!nMonto
            End If
            nSaldo = clsCap.CapExtornoCargoAho(nMovNro, nMovNroBus, gServGiroApertCargoCta, RCapMov!cCtaCod, clsCap.GeneraMovNro(CDate(lsFechaHoraGrab), , , sMovNro), "Extorno apertura de giro con cargo a cuenta", RCapMov!nMonto)
            If Trim(psBoletaCargo) = "" Then
            psBoletaCargo = ImprimeBoleta("Extorno de apertura de giro con cargo a cuenta", "Extorno cargo a cuenta", gOpeTransferenciaCargo, Str(RCapMov!nMonto), _
                                  RCapMov!cCliente, RCapMov!cCtaCod, "", 0, "0", IIf(Len(RCapMov!cDNI) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                  , , , True, , "Nro Ope. : " & Str(nMovNro), , CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Mid(sMovNro, 1, 4)), _
                                 psNomAge, Right(sMovNro, 4), , , , , , False, , , , , , , , , False, 2, pnITFMonto, True, , , pbImpTMU)
            End If
            Set RCapMov = Nothing
            Set RCapMovITF = Nothing
        
    ElseIf nOperacionInicial = gServGiroApertVoucher Then
            clsCap.actualizarRelacionExtornoVoucherCaptacion (nMovNroBus)
    End If
    
    clsCap.dbCmact.CommitTrans

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = "Ext. Apert. Giro"
    sTipApe = sMsgProd
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
'Do
    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", 0, 0, "", 1, 0, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , , , , , , , , , , , , , , , , , , , pbImpTMU)
'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
End Function

Public Sub ServGiroExtornoCancelacion(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
            ByVal sCuenta As String, ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
            Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
            Optional ByRef psImpBoleta As String, Optional ByVal pbImpTMU As Boolean = False, _
            Optional ByVal psMotExtorno As Variant)

    Dim nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    'By Capi 06122007
    Dim MntCap As COMDCaptaGenerales.DCOMCaptaGenerales
    '
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim dFecSis As Date
    Dim bTrans As Boolean
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nExtracto As Long
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False

    'Inicia la transaccion
    On Error GoTo ErrGraba
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    'By Capi 06122007
    Set MntCap = New COMDCaptaGenerales.DCOMCaptaGenerales
    '
    clsCap.dbCmact.BeginTrans
    bTrans = True

    If sGlosa = "" Then
        sGlosa = "Extorno Cancelacion Giro = " & sCuenta
    Else
        sGlosa = sGlosa & ". Extorno Cancelación Giro = " & sCuenta
    End If
    
    clsCap.ActualizaEstadoGiro sCuenta, gCapEstActiva, dFecSis
    'By Capi 06122007 para que elimine los destinatarios cuando se extorna
    MntCap.EliminaProductoPersona sCuenta, gCapRelPersTitular
    '
    sMsgOpe = "Ext. Canc. Efectivo"
    
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    '***CTI3 (ferimoro) 17102018
    nMovNro = clsCap.GetnMovNro(sMovNro)
    clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    
    clsCap.dbCmact.CommitTrans
    bTrans = False
    Set clsCap = Nothing

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    
    sTipApe = "EXTORNO GIRO"
    
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
    'Do
    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntAcum, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , , , , , , , , , , , , , , , , pbImpTMU)
    'Loop Until MsgBox("Desea reimprimir ?? ", vbQuestion + vbYesNo, "Aviso") = vbNo
    Set clsTit = Nothing
    Exit Sub
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    'MsgBox Err.Description, vbCritical, "Error"
    Err.Raise Err.Number, "Error", Err.Description
End Sub

Public Function ValidaEstadoCuenta(ByVal sCuenta As String, Optional pbParaRetiro As Boolean = True) As Boolean
Dim clsMant As NCOMCaptaGenerales
Set clsMant = New NCOMCaptaGenerales
Dim rsCta As ADODB.Recordset
Set rsCta = New ADODB.Recordset
Dim nEstado As CaptacEstado

Set rsCta = clsMant.GetDatosCuenta(sCuenta)

nEstado = rsCta("nPrdEstado")

rsCta.Close
Set rsCta = Nothing
Set clsMant = Nothing

If pbParaRetiro Then
      If nEstado = gCapEstActiva Or nEstado = gCapEstBloqRetiro Then 'GIPO 04-03-2017
        ValidaEstadoCuenta = True
    Else
        ValidaEstadoCuenta = False
    End If
Else
    If nEstado = gCapEstActiva Or nEstado = gCapEstBloqRetiro Or nEstado = gCapEstBloqTotal Then
        ValidaEstadoCuenta = True
    Else
        ValidaEstadoCuenta = False
    End If
End If
End Function

Public Function ValidaChequesEnValorizacion(ByVal sCuenta As String) As Boolean
Dim clsMant As NCOMCaptaGenerales
Set clsMant = New NCOMCaptaGenerales
Dim rsCta As ADODB.Recordset
Set rsCta = New ADODB.Recordset
Dim nNum As Integer
Dim nMonto As Integer

Set rsCta = clsMant.GetChequesEnValorizados(sCuenta)

nNum = rsCta.Fields(0)
nMonto = rsCta.Fields(1)

rsCta.Close
Set rsCta = Nothing
Set clsMant = Nothing

If nNum = 0 Then
    ValidaChequesEnValorizacion = False
Else
    ValidaChequesEnValorizacion = True
End If

End Function

Public Function ValidaSaldoCuenta(ByVal sCuenta As String, ByVal nMonto As Double, Optional nOperacion As CaptacOperacion, _
                                  Optional pnComiRetOtraAge As Double, Optional pnComix31Ope As Double, _
                                  Optional pnComRetSintarj As Double, Optional ByVal pnComTransf As Double = 0, _
                                  Optional ByVal pbExtornoAbono As Boolean = False, Optional nMontoDep As Double = 0) As Boolean
                                  'RIRO20131212 ERS137 - Se agregó pnComTransf
                                  'FRHU CORREO 20150414 Se agrego pbExtornoAbono
                                  'APRI20190109 ERS077-2018 Add nMontoDep
Dim nMoneda As Moneda
Dim nProducto As Producto
Dim clsMant As NCOMCaptaGenerales
Dim clsPar As NCOMCaptaDefinicion
Dim rsCta As New ADODB.Recordset
Dim nSaldo As Double, nMontoMinimo As Double
Dim bOrdPag As Boolean
Dim nPersoneria As PersPersoneria
Dim nEstado As CaptacEstado
Dim nBloqueoParcial As Double
Set clsMant = New NCOMCaptaGenerales
Set rsCta = clsMant.GetDatosCuenta(sCuenta)
nProducto = CLng(Mid(sCuenta, 6, 3))
bOrdPag = False
If nProducto = gCapAhorros Then
    nSaldo = rsCta("nSaldoDisp")
    bOrdPag = rsCta("bOrdPag")
ElseIf nProducto = gCapCTS Then
    If nOperacion = gCTSDepChq Or nOperacion = gCTSDepEfec Or nOperacion = gCTSDepPlanRRHH Or nOperacion = gCTSDepTransf Or nOperacion = "220303" Then
        nSaldo = rsCta("nSaldo")
    Else
        nSaldo = rsCta("nSaldRetiro")
    End If
End If

nPersoneria = rsCta("nPersoneria")
nEstado = rsCta("nPrdEstado")
'nBloqueoParcial = rsCta("nBloqueoParcial")
nBloqueoParcial = IIf(nMontoDep > 0, 0, rsCta("nBloqueoParcial")) 'APRI20200113 INC2001130013

rsCta.Close
Set rsCta = Nothing
Set clsMant = Nothing
nMoneda = CLng(Mid(sCuenta, 9, 1))

'If nEstado <> gCapEstActiva then
    'ValidaSaldoCuenta = False
'Else
'If nEstado = gCapEstActiva Or (nEstado = gCapEstBloqRetiro And pbExtornoAbono) Then     'FRHU CORREO 20150414
If nEstado = gCapEstActiva Or (nEstado = gCapEstBloqRetiro And pbExtornoAbono) Or nMontoDep > 0 Then  'APRI20191107 MEJORA
    If CLng(Mid(sCuenta, 6, 3)) = gCapAhorros Then
        Set clsPar = New NCOMCaptaDefinicion
        nMontoMinimo = clsPar.GetSaldoMinimoPersoneria(nProducto, nMoneda, nPersoneria, bOrdPag)
        Set clsPar = Nothing
    Else
        nMontoMinimo = 0
    End If
    ' Agrego montos de Comision AVMM -- 03-06-2006
    ' RIRO20131212 ERS13 - Se agregó pnComTransf
    'If nSaldo - nBloqueoParcial - nMontoMinimo - nMonto - pnComiRetOtraAge - pnComix31Ope - pnComRetSintarj - pnComTransf >= 0 Then
    'If Round(nSaldo - nBloqueoParcial - nMontoMinimo - nMonto - pnComiRetOtraAge - pnComix31Ope - pnComRetSintarj - pnComTransf, 4) >= 0 Then 'JUEZ 20141021 Para corregir casos de decimales
    If Round((nSaldo + nMontoDep) - nBloqueoParcial - nMontoMinimo - nMonto - pnComiRetOtraAge - pnComix31Ope - pnComRetSintarj - pnComTransf, 4) >= 0 Then 'APRI20190109 ERS077-2018
        ValidaSaldoCuenta = True
    Else
        ValidaSaldoCuenta = False
    End If
'End If
Else
    ValidaSaldoCuenta = False
End If

End Function

Public Function GetChequesEnValorizados(sCuenta) As ADODB.Recordset
Dim oCap As COMDCaptaGenerales.DCOMCaptaGenerales
Set oCap = New COMDCaptaGenerales.DCOMCaptaGenerales
Set GetChequesEnValorizados = oCap.GetChequesEnValorizacion(sCuenta)
Set oCap = Nothing
End Function

Private Function ObtieneCargosPermitido(ByVal nOperacion As CaptacOperacion, ByVal pnMoneda As Integer, ByVal nMonto As Double) As ADODB.Recordset
                                

Dim lrst As New ADODB.Recordset
Dim lsConn As COMConecta.DCOMConecta

Dim lsql As String


Set lsConn = New COMConecta.DCOMConecta

lsConn.AbreConexion


lsql = "select Cg.*,Ct.cRHCargoDescripcion from  CapAutorizacionRango Cg left join rhcargostabla Ct on Cg.cRhCargoCod =  Ct.cRhCargoCod" & _
       " where Cg.cOpecod =" & nOperacion & " and  ((" & nMonto & "<= Cg.nMontoIniSol) or (" & nMonto & " between Cg.nMontoIniSol and  Cg.nMontoFinSol ) " & _
       "or 1<>" & pnMoneda & ") and  ((" & nMonto & " <= Cg.nMontoIniDol) or (" & nMonto & "  between Cg.nMontoIniDol and  Cg.nMontoFinDol) or 2<>" & pnMoneda & ")" & _
       "order by Cg.cOpeCod, Cg.nMontoIniSol"

Set lrst = lsConn.CargaRecordSet(lsql)
Set ObtieneCargosPermitido = lrst

End Function

Private Function OpePorAutorizar(ByVal psCuenta As String, ByVal nOperacion As CaptacOperacion) As Boolean
    
Dim lsOperacion As CaptacOperacion
Dim lrst As New ADODB.Recordset
Dim lsConn As COMConecta.DCOMConecta

Dim lsql As String
Dim lnNumReg As Integer


Set lsConn = New COMConecta.DCOMConecta

lsConn.AbreConexion


lsql = "Select count(*)%3 as NumReg from MovCapAutorizacionOpe mcao where mcao.cCtaCod = '" & psCuenta & _
       "' and  mcao.cOpeCodOri = '" & nOperacion & "'"
       
'       and  mcao.cOpeCod = '" & gAhoSolAprobOperacion & _
'       "' or  mcao.cOpeCod = '" & gAhoAutorizaOperacion & "' or  mcao.cOpeCod = '" & gAhoRechazaOperacion & _
'       "' or  mcao.cOpeCod = '" & gAhoAnulaOperacion & "'"

Set lrst = lsConn.CargaRecordSet(lsql)

lnNumReg = lrst("NumReg")

Select Case lnNumReg
    Case 0
        OpePorAutorizar = False
    Case 1
        OpePorAutorizar = True
    Case 2
        OpePorAutorizar = True
        'MsgBox "Ud. ha sido Autorizado para Relizar esta Operación", vbInformation, "Atención"
    Case 3
        OpePorAutorizar = False
End Select

End Function

Public Function fgITFImprimeBoletaTrans(ByVal sNomCli As String, ByVal nMonITF As Double, ByVal psDesOpeOrigen As String, _
        ByVal pdFecha As Date, ByVal sLpt As String, Optional nNumTran As Long = 1, _
        Optional sTitBol As String = "IMP. TRANSAC. FINANCIERAS", Optional pnTipoPago As Integer = 1, _
        Optional nMonedaITF As Integer = 1, Optional sCodCta As String = "", Optional sGlosa As String, _
        Optional pCancelaImp As Boolean = True, Optional sNomAge As String = "", Optional sCodUser As String = "" _
        , Optional bSaldos As Boolean = False, Optional nSaldoDisp As Double, Optional nSaldoCont As Double, Optional nVeces As Integer = 0, _
        Optional ByVal psNomAge As String) As String

If pCancelaImp Then
    Exit Function 'cancela impresion de itf
End If


Dim oImpre As New COMFunciones.FCOMImpresion
Dim oVarImpre As New COMFunciones.FCOMVarImpresion

Dim psTit As String
Dim sMonto As String
Dim psDesOpe As String
Dim sFecha As String
Dim sHora As String
Dim sSep As Integer
Dim sIni As Integer
Dim sMax  As Integer
Dim saux As Integer
Dim lsNegritaOn As String
Dim lsNegritaOff As String
Dim lnTope As Integer
Dim lsNroExt As String
Dim lnCliAux As Integer
Dim lsNomAge As String
Dim lnSaldoDisp As Double
Dim lnSaldoCnt As Double


Dim lnNumLinCmac As Integer

Dim lsMensaje As String * 39
Dim lsCliAux1 As String
Dim lsCliAux2 As String
Dim psTexto As String

Dim psTextoTC1 As String
Dim psTextoTC2 As String
Dim psMontoSoles As String
Dim sPonderadoSoles As String

Dim lscad As String

'Moneda y Cuenta porque en algunos casos no se manda la moneda... JHVP
If Len(sCodCta) = 18 Then
    nMonedaITF = Mid(sCodCta, 9, 1)
End If

If Len(psNomAge) > 15 Then
    sNomAge = Mid(sNomAge, 1, 15)
End If

If nMonedaITF = 1 Then
    If pnTipoPago = 1 Then
        psTexto = "ITF Efectivo"
        lnSaldoDisp = nSaldoDisp
        lnSaldoCnt = nSaldoCont
        
    ElseIf pnTipoPago = 2 Then
        psTexto = "ITF Cargo a Cuenta"
        lnSaldoDisp = nSaldoDisp - nMonITF
        lnSaldoCnt = nSaldoCont - nMonITF
        
        
    End If
ElseIf nMonedaITF = 2 Then
    If pnTipoPago = 1 Then
        psTexto = "ITF Efectivo Dolares"
        lnSaldoDisp = nSaldoDisp
        lnSaldoCnt = nSaldoCont
        
        
    ElseIf pnTipoPago = 2 Then
        psTexto = "ITF Cargo a Cuenta Dolares"
        lnSaldoDisp = nSaldoDisp - nMonITF
        lnSaldoCnt = nSaldoCont - nMonITF
        
    End If
End If

lsNroExt = Str(nNumTran)

ETIQ:

On Error GoTo Error

lnTope = 0 '6 'Tope de lineas en Boleta

lsNegritaOn = oVarImpre.gPrnNegritaON
lsNegritaOff = oVarImpre.gPrnNegritaOFF
  

sSep = 15
sIni = 1
sMax = 33
saux = 5

sFecha = Format$(pdFecha, "dd/mm/yyyy")
sHora = Format$(Time, "hh:mm:ss")
sMonto = Format$(nMonITF, "#,##0.00")
 
lsNomAge = psNomAge

'Print #nFicSal, gPrnSaltoLinea;
lscad = lscad & ""
lscad = lscad & ""
lscad = lscad & ""
If (nVeces Mod 2) = 0 Then
    lscad = lscad & ""
    lscad = lscad & ""
End If
lscad = lscad & lsNegritaOn  'Activa Negrita
lscad = lscad & Space(sIni) & lsNegritaOn & "CMACMAYNAS" & Space(26 + sSep + saux) & "CMACMAYNAS" & lsNegritaOff & oImp.gPrnSaltoLinea

If nMonedaITF = 1 Then
    '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
    lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
Else
    lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
End If
 
lscad = lscad & ""
 
lscad = lscad & lsNegritaOff 'Desactiva Negrita
lnNumLinCmac = 0

lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea

lnCliAux = InStr(1, sNomCli, "*", vbTextCompare)

If lnCliAux = 0 Then
    If saux + sMax - Len(sNomCli) < 0 Then sNomCli = Mid(sNomCli, 1, sMax + saux)
    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sNomCli) & Space(saux + sMax + sSep - Len(sNomCli)) & oImpre.ImpreCarEsp(sNomCli) & oImp.gPrnSaltoLinea
Else
    lsCliAux1 = (Mid(sNomCli, 1, lnCliAux - 1))
    lsCliAux2 = (Mid(sNomCli, lnCliAux + 1))

    If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
    If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)

    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea

    lnCliAux = 1
End If

If Len(Trim(sCodCta)) > 0 Then
    sCodCta = Right("                       " & sCodCta, 18)
   lscad = lscad & Space(sIni) & "Cuenta:" & sCodCta & Space(8 + sSep + saux) & "Cuenta:" & sCodCta & oImp.gPrnSaltoLinea
Else
   lscad = lscad & ""
End If

psTit = Trim(sTitBol)
psTit = oImpre.CentrarCadena(psTit, 28)
lscad = lscad & lsNegritaOn 'Activa Negrita
lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
 
lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
 
If nMonedaITF = 1 Then
    lscad = lscad & ""   'JVP1
ElseIf nMonedaITF = 2 Then
    
    
    psTextoTC1 = "** Tipo de Cambio SBS"
    If pnTipoPago = 1 Then
        '''psTextoTC2 = "** ITF Efectivo Soles" 'marg ers044-2016
        psTextoTC2 = "** ITF Efectivo " & StrConv(gcPEN.gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
    ElseIf pnTipoPago = 2 Then
        '''psTextoTC2 = "** ITF Cargo a Cuenta Soles" 'marg ers044-2016
        psTextoTC2 = "** ITF Cargo a Cuenta " & StrConv(gcPEN.gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
    End If
    
    Dim oTC As COMDConstSistema.NCOMTipoCambio
    Set oTC = New COMDConstSistema.NCOMTipoCambio
    Dim pnTCPonderadoSBS As Currency
    
    pnTCPonderadoSBS = oTC.EmiteTipoCambio(pdFecha, TCPonderado)
    If pnTCPonderadoSBS = 0 Then
        psMontoSoles = "0.00"
        sPonderadoSoles = "0.00"
    Else
        psMontoSoles = Format(nMonITF * pnTCPonderadoSBS, "0.00")
        sPonderadoSoles = Format(pnTCPonderadoSBS, "0.0000")
    End If
     
    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)) & sPonderadoSoles & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)) & sPonderadoSoles & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)) & psMontoSoles & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)) & psMontoSoles & oImp.gPrnSaltoLinea
     
    lnCliAux = lnCliAux + 1
End If
 

lscad = lscad & lsNegritaOff 'Desactiva Negrita 'JVP2 JVP3

lsMensaje = "Operacion Origen:"
lscad = lscad & Space(sIni) & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff & oImp.gPrnSaltoLinea
lsMensaje = psDesOpeOrigen
lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnSaltoLinea 'JVP4

lscad = lscad & ""  'JVP5 JVP6
lscad = lscad & sGlosa & Space(sMax + 5 - Len(sGlosa) + sSep) & sGlosa & oImp.gPrnSaltoLinea  ''JVP6 JVP7

lnTope = 7 - lnCliAux 'JVP 3-0=3 3-1=2

lscad = lscad & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea

Dim clsGen As COMDConstSistema.DCOMGeneral
Set clsGen = New COMDConstSistema.DCOMGeneral
lsMensaje = clsGen.GetMensajeBoletas(sCodCta)
lscad = lscad & Space(sIni) & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff & oImp.gPrnSaltoLinea

lnNumLinCmac = lnNumLinCmac + 1

For saux = 1 To (lnTope - lnNumLinCmac) 'JVP DE 1 A 3-1=2 DE 1 A 2-1=1
    lscad = lscad & ""
Next saux

fgITFImprimeBoletaTrans = lscad

Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora...", Err.Description
End Function

'Se volvio Funcion para pasar la CADENA al Cliente

Public Function fgITFImprimeBoleta(ByVal sNomCli As String, ByVal nMonITF As Double, ByVal psDesOpeOrigen As String, _
        ByVal pdFecha As Date, ByVal sLpt As String, Optional nNumTran As Long = 1, _
        Optional sTitBol As String = "IMP. TRANSAC. FINANCIERAS", Optional pnTipoPago As Integer = 1, _
        Optional nMonedaITF As Integer = 1, Optional sCodCta As String = "", Optional sGlosa As String, _
        Optional pCancelaImp As Boolean = True, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional bSaldos As Boolean = False, Optional nSaldoDisp As Double, Optional nSaldoCont As Double, _
        Optional psOpeOrigen As String = "", Optional psAgeDestino As String = "", Optional pbImpTMU As Boolean = False) As String

If pCancelaImp Then
    Exit Function 'cancela impresion de itf
End If

Dim oVarImpre As New COMFunciones.FCOMVarImpresion
Dim oImpre As New COMFunciones.FCOMImpresion

Dim psTit As String
Dim sMonto As String
Dim psDesOpe As String
Dim sFecha As String
Dim sHora As String
Dim sSep As Integer
Dim sIni As Integer
Dim sMax  As Integer
Dim saux As Integer
Dim lsNegritaOn As String
Dim lsNegritaOff As String
Dim lnTope As Integer
Dim lsNroExt As String
Dim lnCliAux As Integer
Dim lsNomAge As String
Dim lnSaldoDisp As Double
Dim lnSaldoCnt As Double


Dim lnNumLinCmac As Integer

Dim lsMensaje As String * 39
Dim lsCliAux1 As String
Dim lsCliAux2 As String
Dim psTexto As String

Dim psTextoTC1 As String
Dim psTextoTC2 As String
Dim psMontoSoles As String
Dim sPonderadoSoles As String

Dim sCadImpresion As String

'Moneda y Cuenta porque en algunos casos no se manda la moneda... JHVP
If Len(sCodCta) = 18 Then
    nMonedaITF = Mid(sCodCta, 9, 1)
End If

If Len(sNomAge) > 15 Then
    sNomAge = Mid(sNomAge, 1, 15)
End If

If nMonedaITF = 1 Then
    If pnTipoPago = 1 Then
        psTexto = "ITF Efectivo"
        lnSaldoDisp = nSaldoDisp
        lnSaldoCnt = nSaldoCont
        
    ElseIf pnTipoPago = 2 Then
        psTexto = "ITF Cargo a Cuenta"
        lnSaldoDisp = nSaldoDisp - nMonITF
        lnSaldoCnt = nSaldoCont - nMonITF
        
        
    End If
ElseIf nMonedaITF = 2 Then
    If pnTipoPago = 1 Then
        psTexto = "ITF Efectivo Dolares"
        lnSaldoDisp = nSaldoDisp
        lnSaldoCnt = nSaldoCont
        
        
    ElseIf pnTipoPago = 2 Then
        psTexto = "ITF Cargo a Cuenta Dolares"
        lnSaldoDisp = nSaldoDisp - nMonITF
        lnSaldoCnt = nSaldoCont - nMonITF
        
    End If
End If

lsNroExt = Str(nNumTran)

ETIQ:

On Error GoTo Error

lnTope = 0 '6 'Tope de lineas en Boleta

lsNegritaOn = oVarImpre.gPrnNegritaON
lsNegritaOff = oVarImpre.gPrnNegritaOFF
sCadImpresion = oVarImpre.gPrnInicializa

sSep = 15
sIni = 0
sMax = 33
saux = 5

sFecha = Format$(pdFecha, "dd/mm/yyyy")
sHora = Format$(Time, "hh:mm:ss")
sMonto = Format$(nMonITF, "#,##0.00")
 
lsNomAge = sNomAge

sCadImpresion = sCadImpresion & ""
sCadImpresion = sCadImpresion & lsNegritaOn

'   Print #nFicSal, Chr$(27) & Chr$(64);
sCadImpresion = sCadImpresion & Chr$(27) & Chr$(64)

'Print #nFicSal, Chr$(27) & Chr$(50);   'espaciamiento lineas 1/6 pulg.
'Print #nFicSal, Chr$(27) & Chr$(67) & Chr$(22);  'Longitud de página a 22 líneas'
'Print #nFicSal, Chr$(27) & Chr$(77);   'Tamaño 10 cpi
'Print #nFicSal, Chr$(27) + Chr$(107) + Chr$(0);     'Tipo de Letra Sans Serif
'Print #nFicSal, Chr$(27) + Chr$(18) ' cancela condensada
'Print #nFicSal, Chr$(27) + Chr$(72) ' desactiva negrita

sCadImpresion = sCadImpresion & Chr$(27) & Chr$(50)
sCadImpresion = sCadImpresion & Chr$(27) & Chr$(67) & Chr$(22)
sCadImpresion = sCadImpresion & Chr$(27) & Chr$(77)
sCadImpresion = sCadImpresion & Chr$(27) + Chr$(107) + Chr$(0)
sCadImpresion = sCadImpresion & Chr$(27) + Chr$(18)
sCadImpresion = sCadImpresion & Chr$(27) + Chr$(72)

'Print #nFicSal, Tab(sIni); lsNegritaOn & "CMACMAYNAS"; Space(26 + sSep + saux); "CMACMAYNAS" & lsNegritaOff
sCadImpresion = sCadImpresion & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
sCadImpresion = sCadImpresion & lsNegritaOn & "CMAC-MAYNAS" & Space(23 + sSep + saux) & "CMAC-MAYNAS" & lsNegritaOff & oImp.gPrnSaltoLinea

If nMonedaITF = 1 Then
'    Print #nFicSal, Tab(sIni); Trim(sNomAge) & "-SOLES"; Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt; Space(sSep); Trim(sNomAge) & "-SOLES"; Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt;
    '''sCadImpresion = sCadImpresion & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt 'marg ers044-2016
    sCadImpresion = sCadImpresion & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt 'marg ers044-2016
Else
'    Print #nFicSal, Tab(sIni); Trim(sNomAge) & "-DOLARES"; Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt; Space(sSep); Trim(sNomAge) & "-DOLARES"; Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt;
    sCadImpresion = sCadImpresion & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt
End If
 
'   Print #nFicSal, ""
sCadImpresion = sCadImpresion & ""

'   Print #nFicSal, lsNegritaOff; 'Desactiva Negrita
sCadImpresion = sCadImpresion & lsNegritaOff & oImp.gPrnSaltoLinea
lnNumLinCmac = 0

'   Print #nFicSal, Tab(sIni); "Fecha:" & sFecha; Space(10); "Hora:" & sHora; Space(saux + sSep - 6); "Fecha:" & sFecha; Space(10); "Hora:" & sHora
sCadImpresion = sCadImpresion & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea

lnCliAux = InStr(1, sNomCli, "*", vbTextCompare)

If lnCliAux = 0 Then
    If saux + sMax - Len(sNomCli) < 0 Then sNomCli = Mid(sNomCli, 1, sMax + saux)
'    Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(sNomCli); Space(saux + sMax + sSep - Len(sNomCli)); oImpre.ImpreCarEsp(sNomCli)
    sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(sNomCli) & Space(saux + sMax + sSep - Len(sNomCli)) & oImpre.ImpreCarEsp(sNomCli) & oImp.gPrnSaltoLinea
Else
    lsCliAux1 = (Mid(sNomCli, 1, lnCliAux - 1))
    lsCliAux2 = (Mid(sNomCli, lnCliAux + 1))

    If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
    If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)

'    Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(lsCliAux1); Space(saux + sMax + sSep - Len(lsCliAux1)); oImpre.ImpreCarEsp(lsCliAux1)
'    Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(lsCliAux2); Space(saux + sMax + sSep - Len(lsCliAux2)); oImpre.ImpreCarEsp(lsCliAux2)
    
    sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
    sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
    
    lnCliAux = 1
End If

If Len(Trim(sCodCta)) > 0 Then
    sCodCta = Right("                       " & sCodCta, 18)
'    Print #nFicSal, Tab(sIni); "Cuenta:" & sCodCta; Space(8 + sSep + saux); "Cuenta:" & sCodCta
    sCadImpresion = sCadImpresion & "Cuenta:" & sCodCta & Space(8 + sSep + saux) & "Cuenta:" & sCodCta & oImp.gPrnSaltoLinea
Else
'    Print #nFicSal, ""
    sCadImpresion = sCadImpresion & ""
End If

psTit = Trim(sTitBol)
psTit = oImpre.CentrarCadena(psTit, 28)
'   Print #nFicSal, lsNegritaOn; 'Activa Negrita
'   Print #nFicSal, Tab(sIni + 1); "-----" & psTit & "-----"; Space(-1 + sSep); "-----" & psTit & "-----"
sCadImpresion = sCadImpresion & lsNegritaOn 'Activa Negrita
sCadImpresion = sCadImpresion & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
  
'Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))); Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)); sMonto; Space(-1 + sSep); oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))); Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)); sMonto
sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea

If nMonedaITF = 1 Then
'    Print #nFicSal, ""  'JVP1
    sCadImpresion = sCadImpresion & ""  'JVP1

ElseIf nMonedaITF = 2 Then
    
    
    psTextoTC1 = "** Tipo de Cambio SBS"
    If pnTipoPago = 1 Then
        '''psTextoTC2 = "** ITF Efectivo Soles" 'marg ers044-2016
        psTextoTC2 = "** ITF Efectivo " & StrConv(gcPEN.gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
    ElseIf pnTipoPago = 2 Then
        '''psTextoTC2 = "** ITF Cargo a Cuenta Soles" 'marg ers044-2016
        psTextoTC2 = "** ITF Cargo a Cuenta " & StrConv(gcPEN.gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
    End If
    
    Dim oTC As COMDConstSistema.NCOMTipoCambio
    Set oTC = New COMDConstSistema.NCOMTipoCambio
    Dim pnTCPonderadoSBS As Currency
    
    pnTCPonderadoSBS = oTC.EmiteTipoCambio(pdFecha, TCPonderado)
    If pnTCPonderadoSBS = 0 Then
        psMontoSoles = "0.00"
        sPonderadoSoles = "0.00"
    Else
        psMontoSoles = Format(nMonITF * pnTCPonderadoSBS, "0.00")
        sPonderadoSoles = Format(pnTCPonderadoSBS, "0.0000")
    End If
     
'    Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))); Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)); sPonderadoSoles; Space(-1 + sSep); oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))); Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)); sPonderadoSoles
'    Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))); Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)); psMontoSoles; Space(-1 + sSep); oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))); Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)); psMontoSoles
    
    sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)) & sPonderadoSoles & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)) & sPonderadoSoles & oImp.gPrnSaltoLinea
    sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)) & psMontoSoles & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)) & psMontoSoles & oImp.gPrnSaltoLinea
     
    lnCliAux = lnCliAux + 1
End If

'****PIDIERON MODIFICACION DE SALDO QUE SE PRESENTE DESCONTADO DEL ITF EN LA PRIMERA BOLETA 22/11/2004 mpbr
'If bSaldos = True Then
'         Dim psSaldoDisp As String, psSaldoCont As String
'
'         psSaldoDisp = Format(lnSaldoDisp, "#0.00")
'         psSaldoCont = Format(lnSaldoCnt, "#0.00")
'
'         Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(Trim(Mid("Saldo Diponible ", 1, 28))); Space(sMax + 6 - Len(Trim(Mid("Saldo Diponible ", 1, 28))) - Len(psSaldoDisp)); psSaldoDisp; Space(-1 + sSep); oImpre.ImpreCarEsp(Trim(Mid("Saldo Disponible ", 1, 28))); Space(sMax + 6 - Len(Trim(Mid("Saldo Disponible ", 1, 28))) - Len(psSaldoDisp)); psSaldoDisp
'         Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(Trim(Mid("Saldo Contable ", 1, 28))); Space(sMax + 6 - Len(Trim(Mid("Saldo Contable ", 1, 28))) - Len(psSaldoCont)); psSaldoCont; Space(-1 + sSep); oImpre.ImpreCarEsp(Trim(Mid("Saldo Contable ", 1, 28))); Space(sMax + 6 - Len(Trim(Mid("Saldo Contable ", 1, 28))) - Len(psSaldoCont)); psSaldoCont
'
'End If
     

'   Print #nFicSal, lsNegritaOff; 'Desactiva Negrita 'JVP2 JVP3
sCadImpresion = sCadImpresion & lsNegritaOff

lsMensaje = "Operacion Origen:"
'   Print #nFicSal, Tab(sIni); lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje); Space(-1 + sSep); oImpre.ImpreCarEsp(lsMensaje); lsNegritaOff
sCadImpresion = sCadImpresion & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff & oImp.gPrnSaltoLinea
lsMensaje = psDesOpeOrigen
'Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(lsMensaje); Space(-1 + sSep); oImpre.ImpreCarEsp(lsMensaje) 'JVP4
sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnSaltoLinea 'JVP4

'Print #nFicSal, "" 'JVP5 JVP6
'Print #nFicSal, sGlosa & Space(sMax + 5 - Len(sGlosa) + sSep) & sGlosa ''JVP6 JVP7

sCadImpresion = sCadImpresion & "" 'JVP5 JVP6
sCadImpresion = sCadImpresion & sGlosa & Space(sMax + 5 - Len(sGlosa) + sSep) & sGlosa & oImp.gPrnSaltoLinea ''JVP6 JVP7

If psAgeDestino <> "" Then
'    Print #nFicSal, "Destino: " & psAgeDestino & Space(sMax + 5 - Len("Destino: " & psAgeDestino) + sSep) & "Destino: " & psAgeDestino ''JVP6 JVP7
sCadImpresion = sCadImpresion & "Destino: " & psAgeDestino & Space(sMax + 5 - Len("Destino: " & psAgeDestino) + sSep) & "Destino: " & psAgeDestino & oImp.gPrnSaltoLinea ''JVP6 JVP7
End If

lnTope = 7 - lnCliAux 'JVP 3-0=3 3-1=2

'   Print #nFicSal, Tab(sIni); "---------------------------------------"; Space(-1 + sSep); "---------------------------------------"
'   Print #nFicSal, Tab(sIni); oImpre.ImpreCarEsp(sCodUser); Space(29 + sSep + saux); oImpre.ImpreCarEsp(sCodUser)
sCadImpresion = sCadImpresion & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
sCadImpresion = sCadImpresion & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea

Dim clsGen As COMDConstSistema.DCOMGeneral
Set clsGen = New COMDConstSistema.DCOMGeneral
lsMensaje = clsGen.GetMensajeBoletas(sCodCta)
'   Print #nFicSal, Tab(sIni); lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje); Space(-1 + sSep); oImpre.ImpreCarEsp(lsMensaje); lsNegritaOff
sCadImpresion = sCadImpresion & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff & oImp.gPrnSaltoLinea

lnNumLinCmac = lnNumLinCmac + 1

If psOpeOrigen = "2601" Or psOpeOrigen = "2602" Or psOpeOrigen = "2603" Then
'    Print #nFicSal, ""
sCadImpresion = sCadImpresion & ""
Else
    For saux = 1 To (lnTope - lnNumLinCmac - 3) 'JVP DE 1 A 3-1=2 DE 1 A 2-1=1
'       Print #nFicSal, ""
        sCadImpresion = sCadImpresion & ""
    Next saux
End If


fgITFImprimeBoleta = sCadImpresion & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea

'   Close nFicSal
Exit Function
Error:
'    Close nFicSal
    
    'If MsgBox("Comprueba la conexion de su impresora, " + Err.Description & " Desea Reintentar?", vbCritical + vbYesNo, "Aviso") = vbYes Then
    '    GoTo ETIQ
    'End If
    Err.Raise Err.Number, "Comprueba la conexion de su impresora...", Err.Description
    
End Function

Public Function fgITFGetTitular(psCtaCod As String) As String
    Dim sql As String
    Dim oCon As COMConecta.DCOMConecta
    Set oCon = New COMConecta.DCOMConecta
    Dim rs As ADODB.Recordset
    Set rs = New ADODB.Recordset
    
    oCon.AbreConexion
    sql = " Select Top 1 dbo.PstaNombre(cPersNombre,1) Nombre From ProductoPersona PP" _
        & " Inner Join Persona PE ON PP.cPersCod = PE.cPersCod" _
        & " Where PP.cCtaCod = '" & psCtaCod & "' Order By cPersNombre"
    Set rs = oCon.CargaRecordSet(sql)
    
    If rs.EOF And rs.BOF Then
        fgITFGetTitular = ""
    Else
        fgITFGetTitular = rs!NOMBRE
    End If
    
    rs.Close
    Set rs = Nothing
    oCon.CierraConexion
    Set oCon = Nothing
End Function


Public Function fgITFImprimeBoletaCadena(ByVal sNomCli As String, ByVal nMonITF As Double, psDesOpeOrigen As String, pdFecha As Date, sLpt As String, Optional nNumTran As Long = 1, Optional sTitBol As String = "IMP. TRANSAC. FINANCIERAS", Optional pnTipoPago As Integer = 1, Optional nMonedaITF As Integer = 1, Optional sCodCta As String = "", Optional sGlosa As String, Optional pCancelaImp As Boolean = True, Optional ByVal sNomAge As String = "", Optional ByVal sCodUser As String = "", _
                                        Optional ByVal psNomAge As String = "") As String

If pCancelaImp Then
    Exit Function 'cancela impresion de itf
End If

Dim oVarImpre As New COMFunciones.FCOMVarImpresion
Dim oImpre As New COMFunciones.FCOMImpresion

Dim psTit As String
Dim sMonto As String
Dim psDesOpe As String
Dim nFicSal As Integer
Dim sFecha As String
Dim sHora As String
Dim sSep As Integer
Dim sIni As Integer
Dim sMax  As Integer
Dim saux As Integer
Dim lsNegritaOn As String
Dim lsNegritaOff As String
Dim lnTope As Integer
Dim lsNroExt As String
Dim lnCliAux As Integer
Dim lsNomAge As String

Dim lnNumLinCmac As Integer

Dim lsMensaje As String * 39
Dim lsCliAux1 As String
Dim lsCliAux2 As String
Dim psTexto As String

Dim psTextoTC1 As String
Dim psTextoTC2 As String
Dim psMontoSoles As String
Dim sPonderadoSoles As String

Dim lsBoleta As String

'Moneda y Cuenta porque en algunos casos no se manda la moneda... JHVP
If Len(sCodCta) = 18 Then
    nMonedaITF = Mid(sCodCta, 9, 1)
End If

If Len(psNomAge) > 15 Then
    psNomAge = Mid(psNomAge, 1, 15)
End If

If nMonedaITF = 1 Then
    If pnTipoPago = 1 Then
        psTexto = "ITF Efectivo"
    ElseIf pnTipoPago = 2 Then
        psTexto = "ITF Cargo a Cuenta"
    End If
ElseIf nMonedaITF = 2 Then
    If pnTipoPago = 1 Then
        psTexto = "ITF Efectivo Dolares"
    ElseIf pnTipoPago = 2 Then
        psTexto = "ITF Cargo a Cuenta Dolares"
    End If
End If

lsNroExt = Str(nNumTran)

ETIQ:

On Error GoTo Error

lnTope = 0 '6 'Tope de lineas en Boleta

lsNegritaOn = oVarImpre.gPrnNegritaON
lsNegritaOff = oVarImpre.gPrnNegritaOFF
  
lsBoleta = ""
'lsBoleta = lsBoleta & ""
'lsBoleta = lsBoleta & gPrnInicializa & Chr(10)

lsBoleta = lsBoleta & Chr$(27) & Chr$(64)

lsBoleta = lsBoleta & Chr$(27) & Chr$(50)   'espaciamiento lineas 1/6 pulg.
lsBoleta = lsBoleta & Chr$(27) & Chr$(67) & Chr$(22)  'Longitud de página a 22 líneas'
lsBoleta = lsBoleta & Chr$(27) & Chr$(77)   'Tamaño 10 cpi
lsBoleta = lsBoleta & Chr$(27) + Chr$(107) + Chr$(0)     'Tipo de Letra Sans Serif
lsBoleta = lsBoleta & Chr$(27) + Chr$(18) ' cancela condensada
lsBoleta = lsBoleta & Chr$(27) + Chr$(72) ' desactiva negrita

sSep = 15
sIni = 1
sMax = 33
saux = 5


sFecha = Format$(pdFecha, "dd/mm/yyyy")
sHora = Format$(Time, "hh:mm:ss")
sMonto = Format$(nMonITF, "#,##0.00")
 
lsNomAge = psNomAge

'lsBoleta = lsBoleta &  gPrnSaltoLinea;
'lsBoleta = lsBoleta & "." & Chr(10)
'lsBoleta = lsBoleta & "." & Chr(10)
lsBoleta = lsBoleta & lsNegritaOn & Chr(10)  'Activa Negrita
lsBoleta = lsBoleta & Space(sIni) & lsNegritaOn & "CMACMAYNAS" & Space(28 + sSep + saux) & "CMACMAYNAS" & lsNegritaOff & Chr(10)

If nMonedaITF = 1 Then
    '''lsBoleta = lsBoleta & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Chr(10) 'marg ers044-2016
    lsBoleta = lsBoleta & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Chr(10) 'marg ers044-2016
Else
    lsBoleta = lsBoleta & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & Chr(10)
End If
lsBoleta = lsBoleta & Chr$(27) & Chr$(67) & Chr$(22)
lsBoleta = lsBoleta & "" & Chr(10)
 
lsBoleta = lsBoleta & lsNegritaOff & Chr(10)  'Desactiva Negrita
lnNumLinCmac = 0

lsBoleta = lsBoleta & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Chr(10)

lnCliAux = InStr(1, sNomCli, "*", vbTextCompare)

If lnCliAux = 0 Then
    If saux + sMax - Len(sNomCli) < 0 Then sNomCli = Mid(sNomCli, 1, sMax + saux)
    lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(sNomCli) & Space(saux + sMax + sSep - Len(sNomCli)) & oImpre.ImpreCarEsp(sNomCli) & Chr(10)
Else
    lsCliAux1 = (Mid(sNomCli, 1, lnCliAux - 1))
    lsCliAux2 = (Mid(sNomCli, lnCliAux + 1))

    If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
    If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)

    lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & Chr(10)
    lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & Chr(10)

    lnCliAux = 1
End If

If Len(Trim(sCodCta)) > 0 Then
    sCodCta = Right("                       " & sCodCta, 18)
    lsBoleta = lsBoleta & Space(sIni) & "Cuenta:" & sCodCta & Space(14 + sSep + saux) & "Cuenta:" & sCodCta & Chr(10)
Else
    lsBoleta = lsBoleta & "" & Chr(10)
End If

psTit = Trim(sTitBol)
psTit = oImpre.CentrarCadena(psTit, 28)
lsBoleta = lsBoleta & lsNegritaOn & Chr(10)  'Activa Negrita
lsBoleta = lsBoleta & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & Chr(10)
 
lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(sMonto)) & sMonto & Chr(10)
 
If nMonedaITF = 1 Then
    lsBoleta = lsBoleta & "" & Chr(10)   'JVP1
ElseIf nMonedaITF = 2 Then
    psTextoTC1 = "** Tipo de Cambio SBS"
    If pnTipoPago = 1 Then
        '''psTextoTC2 = "** ITF Efectivo Soles" 'marg ers044-2016
        psTextoTC2 = "** ITF Efectivo " & StrConv(gcPEN.gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
    ElseIf pnTipoPago = 2 Then
        '''psTextoTC2 = "** ITF Cargo a Cuenta Soles" 'marg ers044-2016
        psTextoTC2 = "** ITF Cargo a Cuenta " & StrConv(gcPEN.gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
    End If
    
    Dim oTC As COMDConstSistema.NCOMTipoCambio
    Set oTC = New COMDConstSistema.NCOMTipoCambio
    Dim pnTCPonderadoSBS As Currency
    
    pnTCPonderadoSBS = oTC.EmiteTipoCambio(pdFecha, TCPonderado)
    If pnTCPonderadoSBS = 0 Then
        psMontoSoles = "0.00"
        sPonderadoSoles = "0.00"
    Else
        psMontoSoles = Format(nMonITF * pnTCPonderadoSBS, "0.00")
        sPonderadoSoles = Format(pnTCPonderadoSBS, "0.0000")
    End If
     
    lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)) & sPonderadoSoles & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC1, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC1, 1, 28))) - Len(sPonderadoSoles)) & sPonderadoSoles & Chr(10)
    lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)) & psMontoSoles & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psTextoTC2, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psTextoTC2, 1, 28))) - Len(psMontoSoles)) & psMontoSoles & Chr(10)
     
    lnCliAux = lnCliAux + 1
End If

lsBoleta = lsBoleta & lsNegritaOff & Chr(10)  'Desactiva Negrita 'JVP2 JVP3

lsMensaje = "Operacion Origen:"
lsBoleta = lsBoleta & Space(sIni) & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff & Chr(10)
lsMensaje = psDesOpeOrigen
lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & Chr(10) 'JVP4

lsBoleta = lsBoleta & "" & Chr(10)  'JVP5 JVP6
 
lsBoleta = lsBoleta & sGlosa & Space(sMax + 5 - Len(sGlosa) + sSep) & sGlosa & Chr(10)  ''JVP6 JVP7
     
lnTope = 7 - lnCliAux 'JVP 3-0=3 3-1=2

lsBoleta = lsBoleta & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & Chr(10)
lsBoleta = lsBoleta & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & Chr(10)

Dim clsGen As COMDConstSistema.DCOMGeneral
Set clsGen = New COMDConstSistema.DCOMGeneral
lsMensaje = clsGen.GetMensajeBoletas(sCodCta)
lsBoleta = lsBoleta & Space(sIni) & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff & Chr(10)

lnNumLinCmac = lnNumLinCmac + 1

'For saux = 1 To (lnTope - lnNumLinCmac) 'JVP DE 1 A 3-1=2 DE 1 A 2-1=1
For saux = 1 To 4
    lsBoleta = lsBoleta & "" & Chr(10)
Next saux

fgITFImprimeBoletaCadena = lsBoleta

Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora...", Err.Description
End Function

Public Function ImprimeBoletaCMACRegula(ByVal psTit As String, ByVal psText As String, ByVal pnMonto As String, _
        ByVal psCliente As String, ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal nMoneda As Moneda, NomDoc As String, ByVal pnNumExt As Long, ByVal pnSaldoC As Double, _
        Optional pbOpSaldoC As Boolean = True, Optional pbSaldoInt As Boolean = True, Optional psNumDias As String = "----", _
        Optional psComCmac As String = "XXX", Optional psLin3 As String = "XXX", Optional psTexto As String = "XXX", _
        Optional pdFecSis As Date, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional sLpt As String = "", Optional bPregImpSaldos As Boolean = True, Optional sCodAge As String = "", _
        Optional pbImprimeSaldos As Boolean = True, Optional ByVal psCuentaPers As String, Optional ByVal pbImpTMU As Boolean = False) As String

    'Dim nFicSal As Integer
    Dim sFecha As String
    Dim sHora As String
    Dim sSep As Integer
    Dim sIni As Integer
    Dim sMonto As String
    Dim sSDisp As String
    Dim sIntAcum As String
    Dim sMax As Integer
    Dim saux As Integer
    Dim lsNroExt As String
    Dim lnTope As Integer
    Dim lsSaldoC As String
    Dim lsCadArg As String
    Dim lsInteres As String
    Dim sCad As String
    Dim lnCliAux As Long
    Dim lsCliAux1 As String
    Dim lsCliAux2 As String
    
    Dim lnChq As Long
    Dim lsChqAux1 As String
    Dim lsChqAux2 As String
    Dim lsNomAge As String
    
    Dim lnNumLinCmac As Integer
    
    Dim lsMensaje As String * 39
    
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim lscad As String
    
ETIQ:
    
    On Error GoTo Error

    lnTope = 0 '6 'Tope de lineas en Boleta
    
    lsNroExt = Str(pnNumExt)
    
    lscad = lscad & oImp.gPrnInicializa
    lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
    lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita
    
    sSep = 15
    sIni = 0
    sMax = 33
    saux = 5
    
    sFecha = Format$(pdFecSis, "dd/mm/yyyy")
    sHora = Format$(Time, "hh:mm:ss")
    sMonto = Format$(pnMonto, "#,##0.00")
    sSDisp = Format$(pnSaldo, "#,##0.00")
    lsSaldoC = Format$(pnSaldoC, "#,##0.00")

    lsNomAge = sNomAge
    
    ' Declaracion para los mensajes
    Dim clsGen As COMDConstSistema.DCOMGeneral
    Set clsGen = New COMDConstSistema.DCOMGeneral
    
    If pbImpTMU = False Then
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 - 2 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        
        If nMoneda = gMonedaNacional Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
        End If
                
        lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea   'Desactiva Negrita
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
                
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Cuenta-CMAC:" & psCuentaPers & Space(saux + sMax + sSep - Len(psCodCta) - 5) & "Cuenta-CMAC:" & psCuentaPers & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
                    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
                
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
            lscad = lscad & Space(sIni) & "Cuenta-CMAC:" & psCuentaPers & Space(saux + sMax + sSep - Len(psCodCta) - 5) & "Cuenta-CMAC:" & psCuentaPers & oImp.gPrnSaltoLinea
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep - 2) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
                
                
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnSaltoLinea
            lscad = lscad & ""
        End If

        lscad = lscad & ""
        
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita

        If pbSaldoInt Then
            If bPregImpSaldos Then
                'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
                If pbImprimeSaldos Then
                     lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                    If pbOpSaldoC Then
                       lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                    Else
                       lscad = lscad & ""
                    End If
                Else
                    lscad = lscad & ""
                    lscad = lscad & ""
                    pbSaldoInt = False
                End If
            Else
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbOpSaldoC Then
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & ""
                End If
            End If
        Else
            lscad = lscad & ""
            lscad = lscad & ""
            lscad = lscad & ""
        End If

        lscad = lscad & ""
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
        
        lnTope = 3 - lnCliAux
        
        lscad = lscad & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
        
        'lsMensaje = clsGen.GetMensajeBoletas("XXXXX" & gCapAhorros, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
    Else
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        
        If nMoneda = gMonedaNacional Then
            '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & oImp.gPrnSaltoLinea 'marg ers044-2016
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & oImp.gPrnSaltoLinea 'marg ers044-2016
        Else
            lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & oImp.gPrnSaltoLinea
        End If
                
        lscad = lscad & Space(sIni) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea    'Desactiva Negrita
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(5) & "Hora:" & sHora & oImp.gPrnSaltoLinea
                
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Cuenta-CMAC:" & psCuentaPers & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
                    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
                
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            lnCliAux = 1
            lscad = lscad & Space(sIni) & "Cuenta-CMAC:" & psCuentaPers & oImp.gPrnSaltoLinea
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
                
                
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnSaltoLinea
            lscad = lscad & ""
        End If

        lscad = lscad & ""
        
        lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita

        If pbSaldoInt Then
            If bPregImpSaldos Then
                'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
                If pbImprimeSaldos Then
                     lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                    If pbOpSaldoC Then
                       lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                    Else
                       lscad = lscad & ""
                    End If
                Else
                    lscad = lscad & ""
                    lscad = lscad & ""
                    pbSaldoInt = False
                End If
            Else
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbOpSaldoC Then
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & ""
                End If
            End If
        Else
            lscad = lscad & ""
            lscad = lscad & ""
            lscad = lscad & ""
        End If

        lscad = lscad & ""
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & ""
        End If
        
        lnTope = 3 - lnCliAux
        
        lscad = lscad & Space(sIni) & "---------------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
        
        'lsMensaje = clsGen.GetMensajeBoletas("XXXXX" & gCapAhorros, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
    End If
         
        ImprimeBoletaCMACRegula = lscad

Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora...", Err.Description
    
End Function


Public Sub IniciaImpresora(Optional ByVal nImpresora As COMFunciones.Impresoras = gEPSON)
Set oImp = New COMFunciones.FCOMVarImpresion
oImp.Inicia nImpresora
End Sub

Private Sub Class_Initialize()
IniciaImpresora
End Sub

Private Sub Class_Terminate()
Set oImp = Nothing
End Sub
'ALPA 20081010
Public Sub InsertarClienteWesterDeposito(Optional bTransaccion As Boolean = False, Optional pCon As ADODB.Connection = Nothing, Optional nMovNro As Long = 0, Optional sPerCodWesterUnion As String = "", Optional bCtaWester As Boolean = False)
            
            Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
            Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
            
            If Not pCon Is Nothing Then
                    clsCap.SetConexion pCon
                    clsCap.bTransaccion = True
                    bTransaccion = True
            End If
            'ALPA 20081007*****************************************************
            If bCtaWester = True Then
                clsCap.AgregaMovWesterUnion nMovNro, sPerCodWesterUnion
            End If
            '******************************************************************
            Set clsCap = Nothing
End Sub

Public Function CapAbonoLote(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal sMovNro As String, ByVal rsCtaAbo As ADODB.Recordset, ByVal sGlosa As String, _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional pnTCC As Double = 0, Optional pnTCV As Double = 0, _
            Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional ByVal sBenPersLavDinero As String = "", _
            Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pbImpTMU As Boolean, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0, Optional nOperacion As CaptacOperacion, Optional sNroDoc As String, Optional sCodIF As String, _
            Optional ByVal pnTpoDoc As Integer = 47, Optional ByVal psIFTpo As String = "01", Optional ByVal psIFCta As String = "") As Boolean
    'sCuenta
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double, nMontoAbo As Double
    'ALPA 20091123***********************
    Dim nTpoAbono As Integer
    '************************************
    Dim dUltMov As Date
    Dim nSaldoInac As Double
    Dim bInactiva As Boolean, bTrans As Boolean, bActivaCta As Boolean, bInmovilizada As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCtaAbo As String, sCodUser As String
    Dim nMoneda As Moneda
    'Dim nOperacion As CaptacOperacion
    Dim dFecSis As Date
    Dim oCon As COMDConstSistema.NCOMConstSistema
    Set oCon = New COMDConstSistema.NCOMConstSistema

    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim i As Integer
    
    
    Dim lnTCC As Double
    Dim lnTCV As Double
    
    Dim clsGen As COMDConstSistema.NCOMTipoCambio
    Set clsGen = New COMDConstSistema.NCOMTipoCambio
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    
    If pnTCC = 0 Then
        lnTCC = clsGen.EmiteTipoCambio(dFecSis, TCCompra)
    Else
        lnTCC = pnTCC
    End If
    
    If pnTCV = 0 Then
        lnTCV = clsGen.EmiteTipoCambio(dFecSis, TCVenta)
    Else
        lnTCV = pnTCV
    End If

    sCodUser = Right(sMovNro, 4)
    bTrans = False
    bActivaCta = False
    'nMoneda = CLng(Mid(sCuenta, 9, 1))
    'Obtiene los datos para el calculo
'    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
'    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
'    Set clsMant = Nothing
'    nEstado = rsCta("nPrdEstado")
'    nSaldoDisp = rsCta("nSaldoDisp")
'    nSaldoCnt = rsCta("nSaldo")
'    dUltMov = rsCta("dUltCierre")
'    nTasa = rsCta("nTasaInteres")
'    nIntAcum = rsCta("nIntAcum")
'    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
'    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
'
'    nExtracto = rsCta("nTransacc") + 1
'    rsCta.Close
'    Set rsCta = Nothing
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
'    If Not ValidaSaldoCuenta(sCuenta, nMonto) Then
'        clsCap.dbCmact.RollbackTrans
'        Set clsCap = Nothing
'        psMensajeValidacion = "Cuenta NO Posee SALDO SUFICIENTE"
'        CapTransferenciaAho = False
'        Exit Function
'    End If
'    sGlosa = sGlosa & "Cargo Transferencia Cuenta = " & sCuenta
'    nOperacion = gAhoTransCargo
'    If bInactiva Then
'        nSaldoInac = nSaldoCnt
'    End If
'    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
'    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
'    dUltMov = DateAdd("d", -1, dFecSis)
'    nSaldoCnt = nSaldoCnt - nMonto
'    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
'    nSaldoDisp = nSaldoDisp - nMonto
'    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
'
'    sMsgOpe = "Cargo Transferencia"
    
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010**********************************************************
    
    pnMovNro = nMovNro
    If nOperacion = gAhoDepositoEnLoteCheq Then
        'clsCap.AgregaMovDoc nMovNro, TpoDocCheque, sNroDoc, dFecSis
        clsCap.AgregaMovDoc nMovNro, pnTpoDoc, sNroDoc, dFecSis 'EJVG20140408
    End If
'    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'    clsCap.ActualizadUltContactoAho sCuenta, dFecSis

'    If bInmovilizada Then
'        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
'            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
'            clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
'            clsCap.ActualizaInmovilizadaAct sCuenta
'        End If
'    End If
    
'    If bInactiva And Not bInmovilizada Then
'
'        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
'
'        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
'
'        clsCap.ActualizaInactivaAct sCuenta
'
'    End If

'    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    
    '**********PARA AGREGAR ITF***********
'    If pbITFAplica And pnITFValor > 0 Then
'        If pbITFAsumido Then
'            'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
'            clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, 0, 0
'            clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFAsumido, pnITFValor
'
'        Else
'            If psItfOperacion = gITFCobroEfectivo Then
'               ' clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
'                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
'                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFCliente, pnITFValor
'            Else
'                clsCap.ActualizaCargoCaptacion sCuenta, pnITFValor, pnITFValor, nIntGanado, dUltMov, sMovNro, True
'                clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor
'                clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCuenta, gConcITFCliente, pnITFValor
'                nSaldoDisp = nSaldoDisp - pnITFValor
'                nSaldoCnt = nSaldoCnt - pnITFValor
'            End If
'
'        End If
'    End If
    '**********FIN ITF*************
    
'    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro


    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
'    Dim sBoletas As String
'    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES")
'    sCodOpe = Trim(nOperacion)
'    sModDep = sMsgOpe
'    sTipApe = "RETIRO AHORROS"
    Dim clsTit As NCOMCaptaGenerales
    Dim oImp As NCOMCaptaImpresion
    Dim nTipPago As Integer
    Set clsTit = New NCOMCaptaGenerales
    'sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
'    Set clsMant = Nothing
'    Set clsTit = Nothing
    Set oImp = New NCOMCaptaImpresion
'
'    If pbITFAplica And pnITFValor > 0 Then
'
'        If psItfOperacion = gITFCobroEfectivo Then
'            nTipPago = 1
'        Else
'            nTipPago = 2
'        End If
'
'    End If
'
'    sBoletas = ""
'    psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
'
'    'Inicio de los abonos de cuenta
    Dim CANTABO As Integer
    CANTABO = 0

Do While Not rsCtaAbo.EOF

    Dim nMonITF As Double, sAboOpeITF As String

    sCtaAbo = rsCtaAbo("Cuenta")
    
    If CLng(Mid(sCtaAbo, 9, 1)) = gMonedaNacional Then
        If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120*****************************************
            'nMontoAbo = rsCtaAbo("Monto S/.")
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            '******************************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroCargo
            
        ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120***************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto S/.")
            '****************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroEfectivo
            
        ElseIf rsCtaAbo("fItf") = "N" Then
            nMontoAbo = rsCtaAbo("Monto S/.")
            nMonITF = 0
            sAboOpeITF = gITFCobroEfectivo
            
        End If
    Else
        If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120********************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '**********************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroCargo
        ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120************************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '*************************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroEfectivo
        ElseIf rsCtaAbo("fItf") = "N" Then
            nMontoAbo = rsCtaAbo("Monto $")
            nMonITF = 0
            sAboOpeITF = gITFCobroEfectivo
        End If
    End If
    
    'nOperacion = gAhoTransAbono
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCtaAbo)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
    
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMontoAbo
    clsCap.ActualizaSaldoAnteriorAho sCtaAbo, nSaldoDisp
    nSaldoDisp = nSaldoDisp + nMontoAbo
    'ALPA 20091123
    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
    '********************************************
    sMsgOpe = "Abono Lote"
    If sGlosa = "" Then sGlosa = "Abono en Lote = " & sCtaAbo
    If nTpoAbono = 1 Then
        clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    Else
        clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo - nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
    End If
    clsCap.ActualizadUltContactoAho sCtaAbo, dFecSis
    
    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCtaAbo, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCtaAbo
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaAbo, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInactivaAct sCtaAbo
    End If
    If nTpoAbono = 1 Then
      clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    Else
      clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo - nMonITF
    End If
    If nOperacion = gAhoDepositoEnLoteCheq Then
        'clsCap.AgregaDocRecCapta sCtaAbo, TpoDocCheque, sNroDoc, sCodIF, nMovNro, nMontoAbo
        clsCap.AgregaDocRecCapta sCtaAbo, pnTpoDoc, sNroDoc, sCodIF, nMovNro, nMontoAbo, psIFTpo, psIFCta 'EJVG20140220
    End If
    If pbITFAplica And nMonITF > 0 Then
            If rsCtaAbo("TipoItf") = "A" Then
                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, 0, 0
                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFAsumido, nMonITF
            Else
                If rsCtaAbo("TipoItf") = "E" Then
                    clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, nSaldoDisp, nSaldoCnt
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFCliente, nMonITF
                Else
                    clsCap.ActualizaAbonoCaptacion sCtaAbo, -nMonITF, -nMonITF, nIntGanado, dUltMov, sMovNro, True
                    clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCtaAbo, nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCtaAbo, gConcITFCliente, nMonITF
                    
                    nSaldoDisp = nSaldoDisp - nMonITF
                    nSaldoCnt = nSaldoCnt - nMonITF
                    
                End If
            End If

    End If

    clsCap.UltimaActualizacionCuenta sCtaAbo, sMovNro
    
    
    CANTABO = CANTABO + 1
    
    
    '''sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "DEPOSITO EN LOTE"
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCtaAbo))
    Set clsTit = Nothing
 
    If pbITFAplica And pnITFValor > 0 Then

        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
        
    End If
    
    If Mid(sCuenta, 9, 1) = Mid(sCtaAbo, 9, 1) Then
        psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
        
    Else
        If Mid(sCtaAbo, 9, 1) = "1" Then
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , "Imp U$. " & Format(rsCtaAbo.Fields(3), "#,##0.00") & " A TCC:" & Format(lnTCC, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
        Else
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , "Imp S/. " & Format(rsCtaAbo.Fields(2), "#,##0.00") & " A TCV:" & Format(lnTCV, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
        End If
    End If
              
    rsCtaAbo.MoveNext
Loop
If nOperacion = gAhoDepositoEnLoteCheq Then 'EJVG20140408
    clsCap.AgregaMovDocRec nMovNro, pnTpoDoc, sNroDoc, sCodIF, psIFTpo, psIFCta
End If

clsCap.dbCmact.CommitTrans
CapAbonoLote = True
Set clsCap = Nothing

Set oImp = Nothing
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsMant = Nothing
    Set oImp = Nothing
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapAbonoLote = False
End Function
Public Function CapAbonoConCargoLoteAho(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal sMovNro As String, ByVal rsCtaAbo As ADODB.Recordset, ByVal sGlosa As String, _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional sPersLavDinero As String = "", Optional pnTCC As Double = 0, Optional pnTCV As Double = 0, _
            Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, Optional psITFOperacion As String = "", Optional ByVal sBenPersLavDinero As String = "", _
            Optional ByRef psMensajeValidacion As String = "", _
            Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
            Optional ByVal pbImpTMU As Boolean, _
            Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
            Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0) As Boolean

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double, nMontoAbo As Double
    Dim nTpoAbono As Integer
    Dim dUltMov As Date
    Dim nSaldoInac As Double
    Dim bInactiva As Boolean, bTrans As Boolean, bActivaCta As Boolean, bInmovilizada As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCtaAbo As String, sCodUser As String
    Dim nMoneda As Moneda
    Dim nOperacion As CaptacOperacion
    Dim dFecSis As Date
    Dim oCon As COMDConstSistema.NCOMConstSistema
    Set oCon = New COMDConstSistema.NCOMConstSistema

    Dim oImpre As New COMFunciones.FCOMImpresion
    
    Dim i As Integer
    
    
    Dim lnTCC As Double
    Dim lnTCV As Double
    
    Dim clsGen As COMDConstSistema.NCOMTipoCambio
    Set clsGen = New COMDConstSistema.NCOMTipoCambio
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    
    If pnTCC = 0 Then
        lnTCC = clsGen.EmiteTipoCambio(dFecSis, TCCompra)
    Else
        lnTCC = pnTCC
    End If
    
    If pnTCV = 0 Then
        lnTCV = clsGen.EmiteTipoCambio(dFecSis, TCVenta)
    Else
        lnTCV = pnTCV
    End If

    sCodUser = Right(sMovNro, 4)
    bTrans = False
    bActivaCta = False
    nMoneda = CLng(Mid(sCuenta, 9, 1))
    'Obtiene los datos para el calculo
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)

    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    
    'Inicia la transaccion
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    If Not ValidaSaldoCuenta(sCuenta, nMonto) Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        'MsgBox "Cuenta NO Posee SALDO SUFICIENTE", vbInformation, "Aviso"
        psMensajeValidacion = "Cuenta NO Posee SALDO SUFICIENTE"
        CapAbonoConCargoLoteAho = False
        Exit Function
    End If
    sGlosa = sGlosa & "Cargo Transferencia Cuenta = " & sCuenta
    nOperacion = gAhoDepositoEnLoteCarg
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt - nMonto
    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
    nSaldoDisp = nSaldoDisp - nMonto
    clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovNro, True
    
    sMsgOpe = "Cargo Transferencia"
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    'ALPA 20081010**********************************************************
    pnMovNro = nMovNro
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
    clsCap.ActualizadUltContactoAho sCuenta, dFecSis

    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCuenta, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCuenta
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
    
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCuenta, gConcCapital, nSaldoInac
        
        clsCap.ActualizaEstadoCuenta sCuenta, gCapEstActiva, dFecSis, sMovNro
        
        clsCap.ActualizaInactivaAct sCuenta
        
    End If

    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    
    '**********PARA AGREGAR ITF***********
    If pbITFAplica And pnITFValor > 0 Then
        If pbITFAsumido Then
            'clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
            clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, 0, 0
            clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFAsumido, pnITFValor
            
        Else
            If psITFOperacion = gITFCobroEfectivo Then
               ' clsCap.ActualizaCargoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, sMovnro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCuenta, pnITFValor, nSaldoDisp, nSaldoCnt
                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCuenta, gConcITFCliente, pnITFValor
            Else
                clsCap.ActualizaCargoCaptacion sCuenta, pnITFValor, pnITFValor, nIntGanado, dUltMov, sMovNro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCuenta, pnITFValor, nSaldoDisp - pnITFValor, nSaldoCnt - pnITFValor
                clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCuenta, gConcITFCliente, pnITFValor
                nSaldoDisp = nSaldoDisp - pnITFValor
                nSaldoCnt = nSaldoCnt - pnITFValor
            End If
        
        End If
    End If
    '**********FIN ITF*************
    
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro


    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String
    Dim sBoletas As String
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "RETIRO AHORROS EN LOTE"
    Dim clsTit As NCOMCaptaGenerales
    Dim oImp As NCOMCaptaImpresion
    Dim nTipPago As Integer
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsMant = Nothing
    Set clsTit = Nothing
    Set oImp = New NCOMCaptaImpresion
    
    If pbITFAplica And pnITFValor > 0 Then
    
        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
            
    End If

    sBoletas = ""
    psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sMsgOpe), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
    
    'Inicio de los abonos de cuenta
    Dim CANTABO As Integer
    CANTABO = 0

Do While Not rsCtaAbo.EOF

    Dim nMonITF As Double, sAboOpeITF As String

    sCtaAbo = rsCtaAbo("Cuenta")
    
    If CLng(Mid(sCtaAbo, 9, 1)) = gMonedaNacional Then
        If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120*****************************************
            'nMontoAbo = rsCtaAbo("Monto S/.")
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            '******************************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroCargo
            
        ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120***************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF S/.")), CDbl(rsCtaAbo("Monto S/.")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto S/.")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto S/.")
            '****************************************
            nMonITF = rsCtaAbo("ITF S/.")
            sAboOpeITF = gITFCobroEfectivo
            
        ElseIf rsCtaAbo("fItf") = "N" Then
            nMontoAbo = rsCtaAbo("Monto S/.")
            nMonITF = 0
            sAboOpeITF = gITFCobroEfectivo
            
        End If
    Else
        If rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "C" Then
            'ALPA 20091120********************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '**********************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroCargo
        ElseIf (rsCtaAbo("fItf") = "S" And rsCtaAbo("TipoItf") = "E") Or rsCtaAbo("TipoItf") = "A" Then
            'ALPA 20091120************************************************
            nMontoAbo = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), CDbl(rsCtaAbo("Total")) - CDbl(rsCtaAbo("ITF $")), CDbl(rsCtaAbo("Monto $")))
            nTpoAbono = IIf(CDbl(rsCtaAbo("Total")) > CDbl(rsCtaAbo("Monto $")), 1, 2)
            'nMontoAbo = rsCtaAbo("Monto $")
            '*************************************************************
            nMonITF = rsCtaAbo("ITF $")
            sAboOpeITF = gITFCobroEfectivo
        ElseIf rsCtaAbo("fItf") = "N" Then
            nMontoAbo = rsCtaAbo("Monto $")
            nMonITF = 0
            sAboOpeITF = gITFCobroEfectivo
        End If
    End If
    
    nOperacion = gAhoTransAbono
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCtaAbo)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
    
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMontoAbo
    clsCap.ActualizaSaldoAnteriorAho sCtaAbo, nSaldoDisp
    nSaldoDisp = nSaldoDisp + nMontoAbo
    'ALPA 20091123
    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
    '********************************************
    sMsgOpe = "Abono Transferencia"
    If sGlosa = "" Then sGlosa = "Abono Transferencia Cuenta = " & sCtaAbo
    If nTpoAbono = 1 Then
        clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    Else
        clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo - nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
    End If
    clsCap.ActualizadUltContactoAho sCtaAbo, dFecSis

    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCtaAbo, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCtaAbo
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaAbo, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInactivaAct sCtaAbo
    End If
    'ALPA 20091123
    If nTpoAbono = 1 Then
      clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    Else
      clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo - nMonITF
    End If
    '***********************
    '**********PARA AGREGAR ITF***********
    If pbITFAplica And nMonITF > 0 Then
            If rsCtaAbo("TipoItf") = "A" Then
                'clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovnro, True
                clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, 0, 0
                clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFAsumido, nMonITF
            Else
                If rsCtaAbo("TipoItf") = "E" Then
                    'clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovnro, True
                    clsCap.AgregaMovCap nMovNro, gITFCobroEfectivo, sCtaAbo, nMonITF, nSaldoDisp, nSaldoCnt
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroEfectivo, sCtaAbo, gConcITFCliente, nMonITF
                Else
                    clsCap.ActualizaAbonoCaptacion sCtaAbo, -nMonITF, -nMonITF, nIntGanado, dUltMov, sMovNro, True
                    clsCap.AgregaMovCap nMovNro, gITFCobroCargo, sCtaAbo, nMonITF, nSaldoDisp - nMonITF, nSaldoCnt - nMonITF
                    clsCap.AgregaMovCapDet nMovNro, gITFCobroCargo, sCtaAbo, gConcITFCliente, nMonITF
                    
                    nSaldoDisp = nSaldoDisp - nMonITF
                    nSaldoCnt = nSaldoCnt - nMonITF
                    
                End If
            End If

    End If


    '**********FIN ITF*************
    
    
    clsCap.UltimaActualizacionCuenta sCtaAbo, sMovNro
    
    
    CANTABO = CANTABO + 1
    
    
    'Impresión de la boleta
    '''sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    sTipApe = "TRANSFERENCIA AHORROS EN LOTE"
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCtaAbo))
    Set clsTit = Nothing
 
    If pbITFAplica And pnITFValor > 0 Then

        If psITFOperacion = gITFCobroEfectivo Then
            nTipPago = 1
        Else
            nTipPago = 2
        End If
        
    End If
    
    If Mid(sCuenta, 9, 1) = Mid(sCtaAbo, 9, 1) Then
        psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
        
    Else
        If Mid(sCtaAbo, 9, 1) = "1" Then
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , "Imp U$. " & Format(rsCtaAbo.Fields(3), "#,##0.00") & " A TCC:" & Format(lnTCC, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
        Else
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , "Imp S/. " & Format(rsCtaAbo.Fields(2), "#,##0.00") & " A TCV:" & Format(lnTCV, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor)
        End If
    End If
              
    rsCtaAbo.MoveNext
Loop

clsCap.dbCmact.CommitTrans
CapAbonoConCargoLoteAho = True
Set clsCap = Nothing
Set oImp = Nothing
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsMant = Nothing
    Set oImp = Nothing
    Set clsCap = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapAbonoConCargoLoteAho = False
End Function

'JACA 16032011===============================================
Public Function getCapAbonoAgeParamListar() As ADODB.Recordset
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    Set getCapAbonoAgeParamListar = clsCapMov.obtenerCapAbonoAgeParamListar
    
    Set clsCapMov = Nothing
End Function
Public Function getCapAbonoAgeParam(ByVal sCodAgencia As String) As ADODB.Recordset
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    Set getCapAbonoAgeParam = clsCapMov.obtenerCapAbonoAgeParam(sCodAgencia)
    
    Set clsCapMov = Nothing
End Function
Public Sub insertarCapAbonoAgeParam(ByVal sAgecod As String, ByVal nMontoMin As Double, ByVal nMontoMax As Double, ByVal sUltimaActualizacion As String)

    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.registrarCapAbonoAgeParam sAgecod, nMontoMin, nMontoMax, sUltimaActualizacion
    
    Set clsCapMov = Nothing
End Sub
Public Sub insertarCapAbonoPersRea(ByVal nNroMov As Long, ByVal sPersCod As String, ByVal nPersDNI As String, ByVal sPerNombre As String)

    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.registrarCapAbonoPersRea nNroMov, sPersCod, nPersDNI, sPerNombre
    
    Set clsCapMov = Nothing
End Sub

Public Sub actualizaCapAbonoAgeParam()
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.modificaCapAbonoAgeParam
    
    Set clsCapMov = Nothing
End Sub
'END JACA======================================================

Public Function CapCobroComisionEfec(ByVal sCuenta As String, ByVal nMonto As Double, _
            ByVal nOperacion As CaptacOperacion, ByVal sMovNro As String, ByVal sGlosa As String, _
            Optional sCodCmac As String = "", Optional sNomCmac As String = "", _
            Optional sNomAge As String = "", Optional sLpt As String = "", _
            Optional pnMoneda As Moneda = gMonedaNacional, _
            Optional ByVal psCodCmac As String, Optional pCon As ADODB.Connection = Nothing, _
            Optional ByVal psCodAge As String, Optional ByVal sOPedesc As String = "", _
            Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoleta As String, _
            Optional pbImpTMU As Boolean = False, Optional pnMovNro As Long = 0) As Double
            
Dim lnOperacion As CaptacOperacion
Dim lnMonto As Double

Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim nEstado As CaptacEstado
Dim dUltMov As Date
Dim sMsgOpe As String, sCodUser As String
Dim dFecSis As Date
Dim oCon As COMDConstSistema.NCOMConstSistema
Set oCon = New COMDConstSistema.NCOMConstSistema
Dim nMovNro As Long

Dim lsCodCliente As String

Dim oImpre As New COMFunciones.FCOMImpresion

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)

'Inicia la transaccion
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento


On Error GoTo ErrGraba

If Not pCon Is Nothing Then
    clsCap.SetConexion pCon
    clsCap.bTransaccion = True
    'bTransaccion = True
End If

'Add By Gitu 2011-08-29 cobro de comision por operacion sin Tarjeta
If nMonto <> 0 Then
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    pnMovNro = nMovNro
    
    clsCap.AgregaMovOpeVarias nMovNro, nMonto, "", "", pnMoneda, nOperacion
    clsCap.AgregaMovRef nMovNro, pnMovNro
End If
'End Gitu

psImpBoleta = psImpBoleta & ImprimeBoleta("Comision sin Tarjeta Efect", oImpre.ImpreCarEsp(sMsgOpe), "", Trim(nMonto), "", "", "", 0, 0, "", 0, 0, False, False, , , , False, , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, , , False, CStr(nOperacion), , , , , , , , False, 0, 0, False, , , pbImpTMU)

Exit Function
ErrGraba:
    'If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION", "Error"
    'MsgBox "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ERROR:" & Err.Description, vbOKOnly + vbInformation, "AVISO"
    CapCobroComisionEfec = 0
End Function

'***Modificado por ELRO el 20110915, según Acta 252-2011/TI-D
Private Function EmiteCalendarioRetiroIntPFMensual(ByVal nCapital As Double, ByVal nTasa As Double, ByVal nPlazo As Long, _
            ByVal dApertura As Date, ByVal nMoneda As Moneda, Optional ByVal nDiasVal As Integer = 0, Optional sCuenta As String = "", Optional nCostoMan As Currency = 0, Optional ByVal nTotIntMes As Double = 0)

Dim clsMant As COMNCaptaGenerales.NCOMCaptaGenerales
Dim nIntMens As Double, nIntFinal As Double
Dim dFecVenc As Date, dFecVal As Date
Dim sCalendario As String
    
Set clsMant = New COMNCaptaGenerales.NCOMCaptaGenerales
dFecVenc = DateAdd("d", nPlazo + nDiasVal, dApertura)
dFecVal = DateAdd("d", nDiasVal, dApertura)
nIntMens = clsMant.GetInteresPF(nTasa, nCapital, 30)
nIntFinal = clsMant.GetInteresPF(nTasa, nCapital, nPlazo)
Set clsMant = Nothing

Set clsMant = New COMNCaptaGenerales.NCOMCaptaGenerales
sCalendario = clsMant.GetPFPlanRetInt(dApertura, Round(nIntMens, 2), nPlazo, nMoneda, Round(nIntFinal, 2), nCapital, nTasa, nDiasVal, dFecVal, nTotIntMes, sCuenta, nCostoMan)
Set clsMant = Nothing
EmiteCalendarioRetiroIntPFMensual = sCalendario

End Function
'***Fin Modificado por ELRO**********************************
'***Agregado por ELRO el 20120417, según OYP-RFC005-2012
Public Sub registrarDesembolsoParaViatico(ByVal pnMonto As Double, _
                                          ByVal pnMovNroRef As Long, _
                                          ByVal pnOperacion As CaptacOperacion, _
                                          ByVal psMovNro As String, _
                                          ByVal pdFecDoc As Date, _
                                          ByVal psGlosa As String, _
                                          ByVal psColaborador As String, _
                                          ByVal psNomAge As String, _
                                          ByVal pnMoneda As Moneda, _
                                          ByRef psBoleta As String, _
                                          ByRef psDJ As String, _
                                          ByRef sLpt As String, _
                                          ByRef pbImpTMU As Boolean)
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oFCOMImpresion As COMFunciones.FCOMImpresion
Set oFCOMImpresion = New COMFunciones.FCOMImpresion
Dim lsMsgOpe As String, lsCodUser As String, lsMensaje As String, lsNomTit As String
Dim ldFecSis As Date
Dim lbTrans As Boolean
Dim lnMovNro As Long
    
On Error GoTo ErrregistrarDesembolsoParaViatico

    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsCodUser = Right(psMovNro, 4)
    
    

    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True
    
    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa, , gMovFlagVigente
    lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    oDCOMCaptaMovimiento.AgregaMovRef lnMovNro, pnMovNroRef
    oDCOMCaptaMovimiento.AgregaMovOpeVarias lnMovNro, pnMonto, "", psGlosa, pnMoneda, pnOperacion
    
    oDCOMCaptaMovimiento.dbCmact.CommitTrans

    lsMensaje = "Monto Desembolsado " & IIf(pnMoneda = gMonedaNacional, "S/.", "$.")
    lsNomTit = oFCOMImpresion.ImpreCarEsp(psColaborador)
    psBoleta = psBoleta & ImprimeBoleta("DESEMBOLSO PARA VIATICOS", oFCOMImpresion.ImpreCarEsp(lsMensaje), CStr(Trim(pnOperacion)), Trim(pnMonto), lsNomTit, "", "", 0, "", "", lnMovNro, 0, False, False, , , , , , , , ldFecSis, psNomAge, sCodUser, sLpt, , , , CInt(pnMoneda), , , , , , , , , , False, , , , , , pbImpTMU)
    psDJ = psDJ & imprimirDJ(lnMovNro, sLpt, pbImpTMU)
    
    lsMsgOpe = ""
    lsCodUser = ""
    lsMensaje = ""
    lsNomTit = ""
    ldFecSis = "01/01/1900"
    lnMovNro = 0
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Exit Sub
ErrregistrarDesembolsoParaViatico:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "NCOMCaptaMovimiento:registrarDesembolsoParaViatico", Err.Description
End Sub

Public Sub registrarDesembolsoParaARendirCuentas(ByVal pnMonto As Double, _
                                                 ByVal pnMovNroRef As Long, _
                                                 ByVal pnOperacion As CaptacOperacion, _
                                                 ByVal psMovNro As String, _
                                                 ByVal pdFecDoc As Date, _
                                                 ByVal psGlosa As String, _
                                                 ByVal psColaborador As String, _
                                                 ByVal psNomAge As String, _
                                                 ByVal pnMoneda As Moneda, _
                                                 ByRef psBoleta As String, _
                                                 ByRef psDJ As String, _
                                                 ByRef sLpt As String, _
                                                 ByRef pbImpTMU As Boolean)
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oFCOMImpresion As COMFunciones.FCOMImpresion
Set oFCOMImpresion = New COMFunciones.FCOMImpresion
Dim lsMsgOpe As String, lsCodUser As String, lsMensaje As String, lsNomTit As String
Dim ldFecSis As Date
Dim lbTrans As Boolean
Dim lnMovNro As Long
    
On Error GoTo ErrregistrarDesembolsoParaARendirCuentas

    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsCodUser = Right(psMovNro, 4)
    
    

    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True
    
    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa, , gMovFlagVigente
    lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    oDCOMCaptaMovimiento.AgregaMovRef lnMovNro, pnMovNroRef
    oDCOMCaptaMovimiento.AgregaMovOpeVarias lnMovNro, pnMonto, "", psGlosa, pnMoneda, pnOperacion
    
    oDCOMCaptaMovimiento.dbCmact.CommitTrans

    lsMensaje = "Monto Desembolsado " & IIf(pnMoneda = gMonedaNacional, "S/.", "$.")
    lsNomTit = oFCOMImpresion.ImpreCarEsp(psColaborador)
    psBoleta = psBoleta & ImprimeBoleta("DESEMBOLSO POR A RENDIR CUENTAS", oFCOMImpresion.ImpreCarEsp(lsMensaje), CStr(Trim(pnOperacion)), Trim(pnMonto), lsNomTit, "", "", 0, "", "", lnMovNro, 0, False, False, , , , , , , , ldFecSis, psNomAge, sCodUser, sLpt, , , , CInt(pnMoneda), , , , , , , , , , False, , , , , , pbImpTMU)
    psDJ = psDJ & imprimirDJ(lnMovNro, sLpt, pbImpTMU)
    
    lsMsgOpe = ""
    lsCodUser = ""
    lsMensaje = ""
    lsNomTit = ""
    ldFecSis = "01/01/1900"
    lnMovNro = 0
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Exit Sub
ErrregistrarDesembolsoParaARendirCuentas:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "NCOMCaptaMovimiento:registrarDesembolsoParaARendirCuentas", Err.Description
End Sub

Public Function devolverDesembolsoAprobacionARendirViaticos(ByVal pnMovNro As Long, _
                                                            ByVal psUsuario As String, _
                                                            ByVal psFecha As String, _
                                                            ByVal psAgeCod As String) As ADODB.Recordset
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrdevolverDesembolsoAprobacionARendirViaticos

Set devolverDesembolsoAprobacionARendirViaticos = oDCOMCaptaMovimiento.obtenerDesembolsoAprobacionARendirViaticos(pnMovNro, psUsuario, psFecha, psAgeCod)
Set oDCOMCaptaMovimiento = Nothing
Exit Function

ErrdevolverDesembolsoAprobacionARendirViaticos:
Set oDCOMCaptaMovimiento = Nothing
Err.Raise Err.Number, "NCOMCaptaMovimiento :devolverDesembolsoAprobacionARendirViaticos", Err.Description

End Function

Public Function devolverDesembolsoAprobacionARendirCuentas(ByVal pnMovNro As Long, _
                                                           ByVal psUsuario As String, _
                                                           ByVal psFecha As String, _
                                                           ByVal psAgeCod As String) As ADODB.Recordset
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrdevolverDesembolsoAprobacionARendirCuentas

Set devolverDesembolsoAprobacionARendirCuentas = oDCOMCaptaMovimiento.ObtenerDesembolsoAprobacionARendirCuentas(pnMovNro, psUsuario, psFecha, psAgeCod)
Set oDCOMCaptaMovimiento = Nothing
Exit Function

ErrdevolverDesembolsoAprobacionARendirCuentas:
Set oDCOMCaptaMovimiento = Nothing
Err.Raise Err.Number, "NCOMCaptaMovimiento :devolverDesembolsoAprobacionARendirCuentas", Err.Description

End Function

Public Sub extornarDesembolsoAprobadoViatico(ByVal pnMovNro As Long, _
                                             ByVal psMovNro As String, _
                                             ByVal pnOperacion As CaptacOperacion, _
                                             ByVal psGlosa As String, _
                                             ByVal pnMoneda As Moneda, _
                                             ByVal psImporte As String, _
                                             ByVal psColaborador As String, _
                                             ByVal psNomAge As String, _
                                             ByVal psCodCmac As String, _
                                             ByRef psBoleta As String, _
                                             ByRef sLpt As String, _
                                             ByRef pbImpTMU As Boolean, _
                                             Optional ByVal psMotExtorno As Variant)

Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oFCOMImpresion As COMFunciones.FCOMImpresion
Set oFCOMImpresion = New COMFunciones.FCOMImpresion
Dim oDCOMMov As COMDMov.DCOMMov
Set oDCOMMov = New COMDMov.DCOMMov
Dim lsCodOpe As String
Dim lsModDep As String, lsNomTit As String
Dim lsMovNroParaExto As String
Dim lnMovNroDeExto As Long
Dim ldFecSis As Date
Dim lbTrans As Boolean

On Error GoTo ErrextornarDesembolsoAprobadoViatico

    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsMovNroParaExto = oDCOMMov.GetcMovNro(pnMovNro)
    
    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True
    oDCOMCaptaMovimiento.ActualizaEstadoMov pnMovNro, gMovFlagExtornado
    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    lnMovNroDeExto = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    '**CTI3 (ferimoro) 02102018
    oDCOMCaptaMovimiento.dInsertDetExtMov lnMovNroDeExto, pnOperacion, psMotExtorno(0), psMotExtorno(1)
    
    oDCOMCaptaMovimiento.dbCmact.CommitTrans
        
    lsModDep = "Monto Extornado " & IIf(pnMoneda = gMonedaNacional, "S/.", "$.")
    lsNomTit = oFCOMImpresion.ImpreCarEsp(psColaborador)
      
    psBoleta = psBoleta & ImprimeBoleta("EXTORNO DESEMBOLSO PARA VIATICOS", oFCOMImpresion.ImpreCarEsp(lsModDep), CStr(pnOperacion), psImporte, lsNomTit, "", "", 0, "", "", lnMovNroDeExto, 0, False, False, , , , , , , , ldFecSis, psNomAge, Right(psMovNro, 4), sLpt, False, psCodCmac, , CInt(pnMoneda), , CStr(pnOperacion), Right(lsMovNroParaExto, 4), True, , , , , , False, 0, 0, , , , pbImpTMU)
     
    lsCodOpe = ""
    lsModDep = ""
    lsNomTit = ""
    lsMovNroParaExto = ""
    lnMovNroDeExto = 0
    ldFecSis = "01/01/1900"
    Set oDCOMMov = Nothing
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Exit Sub
ErrextornarDesembolsoAprobadoViatico:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "NCOMCaptaMovimiento:extornarDesembolsoAprobadoViatico", Err.Description
        
End Sub

Public Sub extornarDesembolsoAprobadoGastos(ByVal pnMovNro As Long, _
                                             ByVal psMovNro As String, _
                                             ByVal pnOperacion As CaptacOperacion, _
                                             ByVal psGlosa As String, _
                                             ByVal pnMoneda As Moneda, _
                                             ByVal psImporte As String, _
                                             ByVal psColaborador As String, _
                                             ByVal psNomAge As String, _
                                             ByVal psCodCmac As String, _
                                             ByRef psBoleta As String, _
                                             ByRef sLpt As String, _
                                             ByRef pbImpTMU As Boolean, _
                                             Optional ByVal psMotExtorno As Variant)

Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oFCOMImpresion As COMFunciones.FCOMImpresion
Set oFCOMImpresion = New COMFunciones.FCOMImpresion
Dim oDCOMMov As COMDMov.DCOMMov
Set oDCOMMov = New COMDMov.DCOMMov
Dim lsCodOpe As String
Dim lsModDep As String, lsNomTit As String
Dim lsMovNroParaExto As String
Dim lnMovNroDeExto As Long
Dim ldFecSis As Date
Dim lbTrans As Boolean

On Error GoTo extornarDesembolsoAprobadoGastosErr

    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsMovNroParaExto = oDCOMMov.GetcMovNro(pnMovNro)
    
    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True
    oDCOMCaptaMovimiento.ActualizaEstadoMov pnMovNro, gMovFlagExtornado
    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    lnMovNroDeExto = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    '**CTI3 (ferimoro) 02102018
    oDCOMCaptaMovimiento.dInsertDetExtMov lnMovNroDeExto, pnOperacion, psMotExtorno(0), psMotExtorno(1)
      
    oDCOMCaptaMovimiento.dbCmact.CommitTrans
        
    lsModDep = "Monto Extornado " & IIf(pnMoneda = gMonedaNacional, "S/.", "$.")
    lsNomTit = oFCOMImpresion.ImpreCarEsp(psColaborador)
      
    psBoleta = psBoleta & ImprimeBoleta("EXTORNO DESEM. PARA OTROS GASTOS", oFCOMImpresion.ImpreCarEsp(lsModDep), CStr(pnOperacion), psImporte, lsNomTit, "", "", 0, "", "", lnMovNroDeExto, 0, False, False, , , , , , , , ldFecSis, psNomAge, Right(psMovNro, 4), sLpt, False, psCodCmac, , CInt(pnMoneda), , CStr(pnOperacion), Right(lsMovNroParaExto, 4), True, , , , , , False, 0, 0, , , , pbImpTMU)
     
    lsCodOpe = ""
    lsModDep = ""
    lsNomTit = ""
    lsMovNroParaExto = ""
    lnMovNroDeExto = 0
    ldFecSis = "01/01/1900"
    Set oDCOMMov = Nothing
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Exit Sub
extornarDesembolsoAprobadoGastosErr:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "NCOMCaptaMovimiento:extornarDesembolsoAprobadoGastos", Err.Description
End Sub

Public Function imprimirDJ(ByVal pnMovNro As Long, ByRef sLpt As String, ByRef pbImpTMU As Boolean) As String

    Dim sSep As Integer
    Dim sIni As Integer
    Dim sMax As Integer
    Dim saux As Integer
    Dim sCad As String
    Dim lnTope As Integer
    Dim oFCOMImpresion As New COMFunciones.FCOMImpresion
    Dim lscad As String


ETIQ:

    On Error GoTo Error

    lnTope = 0 '6 'Tope de lineas en Boleta

    lscad = lscad & oImp.gPrnInicializa
    lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    lscad = lscad & oImp.gPrnTamPagina22   'Longitud de página a 22 líneas'
    lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
    lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita

    sSep = 15
    sIni = 0
    sMax = 33
    saux = 5

    If pbImpTMU = False Then
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & "COMPROMISO DE RENDICION  - " & CStr(pnMovNro) & Space(19) & "COMPROMISO DE RENDICION  - " & CStr(pnMovNro) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        '''''''''''''''''''''''''''''''--------------------------------------
        lscad = lscad & Space(sIni) & "Dado que los fondos asignados consti- " & Space(16) & "Dado que los fondos asignados consti- " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "tuyen  una  entrega  a  rendir cuenta," & Space(16) & "tuyen  una  entrega  a  rendir cuenta," & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "el  suscrito  se obliga a lo siguien- " & Space(16) & "el  suscrito  se obliga a lo siguien- " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "te:                                   " & Space(16) & "te:                                   " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "- Utilizar los fondos para los  fines " & Space(16) & "- Utilizar los fondos para los  fines " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "solicitados.                          " & Space(16) & "solicitados.                          " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "- Realizar la rendicion de los fondos " & Space(16) & "- Realizar la rendicion de los fondos " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "entregados dentro del plazo estipulado" & Space(16) & "entregados dentro del plazo estipulado" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "en el Reglamento de Entregas a Rendir." & Space(16) & "en el Reglamento de Entregas a Rendir." & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "En caso de incumplimiento, autorizo a " & Space(16) & "En caso de incumplimiento, autorizo a " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "que el importe total sea descontado de" & Space(16) & "que el importe total sea descontado de" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "mis remuneraciones que deba cancelarme" & Space(16) & "mis remuneraciones que deba cancelarme" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "la  Caja  Maynas  S.A.,  tal  como lo " & Space(16) & "la  Caja  Maynas  S.A.,  tal  como lo " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "establece el citado Reglamento.       " & Space(16) & "establece el citado Reglamento.       " & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Firma:--------------------------------" & Space(16) & "Firma:--------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Nombre:                               " & Space(16) & "Nombre:                               " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "DNI:                                  " & Space(16) & "DNI:                                  " & oImp.gPrnSaltoLinea
        lscad = lscad & oFCOMImpresion.ImpreCarEsp(sCad)
        imprimirDJ = lscad & oImp.gPrnSaltoLinea
    Else 'TMU
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & "COMPROMISO DE RENDICION - " & CStr(pnMovNro) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        '''''''''''''''''''''''''''''''--------------------------------------
        lscad = lscad & Space(sIni) & "Dado que los fondos asignados consti- " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "tuyen  una  entrega  a  rendir cuenta," & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "el  suscrito  se obliga a lo siguien- " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "te:                                   " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "- Utilizar los fondos para los  fines " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "solicitados.                          " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "- Realizar la rendicion de los fondos " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "entregados dentro del plazo estipulado" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "en el Reglamento de Entregas a Rendir." & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "En caso de incumplimiento, autorizo a " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "que el importe total sea descontado de" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "mis remuneraciones que deba cancelarme" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "la  Caja  Maynas  S.A.,  tal  como lo " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "establece el citado Reglamento.       " & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Firma:--------------------------------" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "Nombre:                               " & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "DNI:                                  " & oImp.gPrnSaltoLinea
        lscad = lscad & oFCOMImpresion.ImpreCarEsp(sCad)
        'Linea que corta el ticket en TMU
        imprimirDJ = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
    End If
    
Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora... ", Err.Description
'    If MsgBox("Comprueba la conexion de su impresora, " + Err.Description & " Desea Reintentar?", vbCritical + vbYesNo, "Aviso") = vbYes Then
'        GoTo ETIQ
'    End If
End Function
'***Fin Agregado por ELRO*******************************
'***Agregado por ELRO el 20120607, según OYP-RFC047-2012
Public Sub registrarDesembolsoParaCajaChica(ByVal pnMonto As Double, _
                                            ByVal pnMovNroRef As Long, _
                                            ByVal pnOperacion As CaptacOperacion, _
                                            ByVal psMovNro As String, _
                                            ByVal psGlosa As String, _
                                            ByVal psColaborador As String, _
                                            ByVal psNomAge As String, _
                                            ByVal pnMoneda As Moneda, _
                                            ByVal pnProcNro As Integer, _
                                            ByRef psBoleta As String, _
                                            ByRef sLpt As String, _
                                            ByRef pbImpTMU As Boolean)
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oFCOMImpresion As COMFunciones.FCOMImpresion
Set oFCOMImpresion = New COMFunciones.FCOMImpresion
Dim lsMsgOpe As String, lsCodUser As String, lsMensaje As String, lsNomTit As String
Dim ldFecSis As Date
Dim lbTrans As Boolean
Dim lnMovNro As Long

On Error GoTo registrarDesembolsoParaCajaChicaErr

    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsCodUser = Right(psMovNro, 4)

    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True

    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, "Proceso: " & pnProcNro & " - " & psColaborador, , gMovFlagVigente
    lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    oDCOMCaptaMovimiento.AgregaMovRef lnMovNro, pnMovNroRef
    oDCOMCaptaMovimiento.AgregaMovOpeVarias lnMovNro, pnMonto, "", "Proceso: " & pnProcNro & " - " & pnProcNro & psColaborador, pnMoneda, pnOperacion

    oDCOMCaptaMovimiento.dbCmact.CommitTrans

    lsMensaje = "Monto Desembolsado " & IIf(pnMoneda = gMonedaNacional, "S/.", "$.")
    lsNomTit = oFCOMImpresion.ImpreCarEsp(psColaborador)
    psBoleta = psBoleta & ImprimeBoleta("DESEM. PARA CAJA CHICA " & pnProcNro, oFCOMImpresion.ImpreCarEsp(lsMensaje), CStr(Trim(pnOperacion)), Trim(pnMonto), lsNomTit, "", "", 0, "", "", lnMovNro, 0, False, False, , , , , , , , ldFecSis, psNomAge, sCodUser, sLpt, , , , CInt(pnMoneda), , , , , , , , , , False, , , , , , pbImpTMU)

    lsMsgOpe = ""
    lsCodUser = ""
    lsMensaje = ""
    lsNomTit = ""
    ldFecSis = "01/01/1900"
    lnMovNro = 0
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Exit Sub
registrarDesembolsoParaCajaChicaErr:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "NCOMCaptaMovimiento:registrarDesembolsoParaCajaChica", Err.Description
End Sub

Public Function devolverDesembolsoAprobacionCH(ByVal pnMovNro As Long, _
                                               ByVal psUsuario As String, _
                                               ByVal psFecha As String, _
                                               ByVal psAgeCod As String) As ADODB.Recordset
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo devolverDesembolsoAprobacionCHErr

Set devolverDesembolsoAprobacionCH = oDCOMCaptaMovimiento.ObtenerDesembolsoAprobacionCH(pnMovNro, psUsuario, psFecha, psAgeCod)
Set oDCOMCaptaMovimiento = Nothing
Exit Function

devolverDesembolsoAprobacionCHErr:
Set oDCOMCaptaMovimiento = Nothing
Err.Raise Err.Number, "NCOMCaptaMovimiento :devolverDesembolsoAprobacionCH", Err.Description

End Function

Public Sub extornarDesembolsoAprobadoCH(ByVal pnMovNro As Long, _
                                        ByVal psMovNro As String, _
                                        ByVal pnOperacion As CaptacOperacion, _
                                        ByVal psGlosa As String, _
                                        ByVal pnMoneda As Moneda, _
                                        ByVal psImporte As String, _
                                        ByVal psColaborador As String, _
                                        ByVal psNomAge As String, _
                                        ByVal psCodCmac As String, _
                                        ByRef psBoleta As String, _
                                        ByRef sLpt As String, _
                                        ByRef pbImpTMU As Boolean, _
                                        Optional ByVal psMotExtorno As Variant)

Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oFCOMImpresion As COMFunciones.FCOMImpresion
Set oFCOMImpresion = New COMFunciones.FCOMImpresion
Dim oDCOMMov As COMDMov.DCOMMov
Set oDCOMMov = New COMDMov.DCOMMov
Dim lsCodOpe As String
Dim lsModDep As String, lsNomTit As String
Dim lsMovNroParaExto As String
Dim lnMovNroDeExto As Long
Dim ldFecSis As Date
Dim lbTrans As Boolean

On Error GoTo extornarDesembolsoAprobadoCHErr

    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsMovNroParaExto = oDCOMMov.GetcMovNro(pnMovNro)

    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True
    oDCOMCaptaMovimiento.ActualizaEstadoMov pnMovNro, gMovFlagExtornado
    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    lnMovNroDeExto = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    '**CTI3 (ferimoro) 02102018
    oDCOMCaptaMovimiento.dInsertDetExtMov lnMovNroDeExto, pnOperacion, psMotExtorno(0), psMotExtorno(1)
    
    
    oDCOMCaptaMovimiento.dbCmact.CommitTrans

    lsModDep = "Monto Extornado " & IIf(pnMoneda = gMonedaNacional, "S/.", "$.")
    lsNomTit = oFCOMImpresion.ImpreCarEsp(psColaborador)

    psBoleta = psBoleta & ImprimeBoleta("EXTORNO DESEM. PARA CAJA CHICA", oFCOMImpresion.ImpreCarEsp(lsModDep), CStr(pnOperacion), psImporte, lsNomTit, "", "", 0, "", "", lnMovNroDeExto, 0, False, False, , , , , , , , ldFecSis, psNomAge, Right(psMovNro, 4), sLpt, False, psCodCmac, , CInt(pnMoneda), , CStr(pnOperacion), Right(lsMovNroParaExto, 4), True, , , , , , False, 0, 0, , , , pbImpTMU)

    lsCodOpe = ""
    lsModDep = ""
    lsNomTit = ""
    lsMovNroParaExto = ""
    lnMovNroDeExto = 0
    ldFecSis = "01/01/1900"
    Set oDCOMMov = Nothing
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Exit Sub
extornarDesembolsoAprobadoCHErr:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "NCOMCaptaMovimiento:extornarDesembolsoAprobadoCH", Err.Description
End Sub
'***Fin Agregado por ELRO*******************************

'** Juez 20120803 ********************************************
Public Function ObtieneDatosReimprAperturaCaptac(pnMovNro) As ADODB.Recordset
    
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

sSql = "stp_sel_ObtieneDatosReimprAperturaCaptac " & pnMovNro & ""

Set oConecta = New COMConecta.DCOMConecta
oConecta.AbreConexion
Set ObtieneDatosReimprAperturaCaptac = oConecta.CargaRecordSet(sSql)
oConecta.CierraConexion
Set oConecta = Nothing

End Function

Public Function ObtieneDatosReimprDepositoCaptac(pnMovNro) As ADODB.Recordset
    
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

sSql = "stp_sel_ObtieneDatosReimprDepositoCaptac " & pnMovNro & ""

Set oConecta = New COMConecta.DCOMConecta
oConecta.AbreConexion
Set ObtieneDatosReimprDepositoCaptac = oConecta.CargaRecordSet(sSql)
oConecta.CierraConexion
Set oConecta = Nothing

End Function

Public Function ObtieneDatosReimprRetiroCaptac(pnMovNro) As ADODB.Recordset
    
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

sSql = "stp_sel_ObtieneDatosReimprRetiroCaptac " & pnMovNro & ""

Set oConecta = New COMConecta.DCOMConecta
oConecta.AbreConexion
Set ObtieneDatosReimprRetiroCaptac = oConecta.CargaRecordSet(sSql)
oConecta.CierraConexion
Set oConecta = Nothing

End Function

'** End Juez *************************************************
'***Agregado por ELRO el 20120919, según OYP-RFC087-2012
Public Sub devolverIndicadorCliente(ByVal psPersCod As String, _
                                    ByVal pnTipoCambio As Currency, _
                                    ByVal psFecha As String, _
                                    ByVal pnMontoApertura As Currency, _
                                    ByVal psAgeCod As String, _
                                    ByVal psTpoProducto As String, _
                                    ByVal pnTasaInteres As Currency, _
                                    ByVal psMov As String, _
                                    ByRef pnIndicadorInterno As Currency, _
                                    ByRef pnIndicadorPrimerCliente As Currency, _
                                    ByRef pnIndicadorDiezCliente As Currency, _
                                    ByRef pnIndicadorVeinteCliente As Currency, _
                                    ByRef pnSaldoTotalDepositos As Currency, _
                                    ByRef pnIdVoBoConCli As Long)
                                                     
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo verificarIndicadorPrimerClienteMayorErr

oDCOMCaptaMovimiento.devolverIndicadorCliente psPersCod, pnTipoCambio, psFecha, pnMontoApertura, psAgeCod, psTpoProducto, pnTasaInteres, psMov, pnIndicadorInterno, pnIndicadorPrimerCliente, pnIndicadorDiezCliente, pnIndicadorVeinteCliente, pnSaldoTotalDepositos, pnIdVoBoConCli
Set oDCOMCaptaMovimiento = Nothing
Exit Sub

verificarIndicadorPrimerClienteMayorErr:
Set oDCOMCaptaMovimiento = Nothing
Err.Raise Err.Number, "NCOMCaptaMovimiento :verificarIndicadorPrimerClienteMayor", Err.Description
End Sub


Public Function devolverVoBoConcentracionCliente(ByVal pnId_VoBoConCli As Long) As Integer
                                                     
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo devolverVoBoConcentracionClienteErr

devolverVoBoConcentracionCliente = oDCOMCaptaMovimiento.devolverVoBoConcentracionCliente(pnId_VoBoConCli)
Set oDCOMCaptaMovimiento = Nothing
Exit Function

devolverVoBoConcentracionClienteErr:
Set oDCOMCaptaMovimiento = Nothing
Err.Raise Err.Number, "NCOMCaptaMovimiento : devolverVoBoConcentracionCliente", Err.Description
End Function
'***Fin Agregado por ELRO el 20120919*******************

'Add By GITU 16-10-2012
Public Function DevuelveCtasPorCodPers(ByVal psCodPers As String) As ADODB.Recordset
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

    sSql = "stp_sel_ObtieneCtasAhoPorCodPers " & psCodPers & ""
    
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set DevuelveCtasPorCodPers = oConecta.CargaRecordSet(sSql)
    oConecta.CierraConexion
    Set oConecta = Nothing

End Function

Public Function InsertaOperacionFrecuente(ByVal psDescrip As String, ByVal pdFecha As String, ByVal psCodUser As String, ByVal pnEstado As Integer, _
                                          ByVal prsCtas As ADODB.Recordset)
Dim nCodOpeFre As Integer
Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento

    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.registraOpeFrecuentes psDescrip, Format(pdFecha, "yyyy-MM-dd"), psCodUser, pnEstado, nCodOpeFre
    prsCtas.MoveFirst
    
    Do While Not prsCtas.EOF
        Call InsertaDetalleOperacionFrecuente(nCodOpeFre, prsCtas("Cuenta"))
        prsCtas.MoveNext
    Loop
    
    Set clsCapMov = Nothing
End Function

Public Function InsertaDetalleOperacionFrecuente(ByVal pnCodOpeFre As Integer, ByVal psCtaCod As String)
Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento

    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.registraDetalleOpeFrecuentes pnCodOpeFre, psCtaCod
    
    Set clsCapMov = Nothing
End Function

Public Function ActualizaCodigoPersConvenioAho(ByVal psCtaCod As String, ByVal psCodPersConv As String)
Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento

    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.ActualizaCodPersConv psCtaCod, psCodPersConv
    
    Set clsCapMov = Nothing
End Function

Public Function ImprimeBoletaRes(ByVal psTit As String, ByVal psText As String, ByVal psCodOpe As String, ByVal pnMonto As String, _
        ByVal psCliente As String, ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal pnInteresA As String, NomDoc As String, ByVal pnNumExt As Long, ByVal pnSaldoC As Double, _
        Optional pbOpSaldoC As Boolean = True, Optional pbSaldoInt As Boolean = True, Optional psNumDias As String = "----", _
        Optional psNomAgeRem As String = "", Optional psCodUsuRem As String = "", Optional pbCuenta As Boolean = False, _
        Optional psComCmac As String = "XXX", Optional psLin3 As String = "XXX", Optional psTexto As String = "XXX", _
        Optional pdFecSis As Date, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional sLpt As String = "", Optional bPregImpSaldos As Boolean = True, Optional ByVal psCodCmac As String, _
        Optional sCodAge As String = "", Optional pnMonedaCMAC As Integer = 1, Optional ByRef bImpreSaldos As Boolean = False, Optional psOpeCod As String = "", _
        Optional sUserBus As String = "", Optional bExtorno As Boolean = False, Optional ByVal sProxReno As String = "", Optional psDisponible As String = "", Optional psIntangible As String = "", _
        Optional psDispCta As String = "", Optional psIntaCta As String = "", Optional ByVal pbImprimeSaldos As Boolean = True, Optional pnTipoPago As Integer, Optional pnMontoIFT As Double, _
        Optional pbImpItf As Boolean = False, Optional pnComixRetOtraAge As Double = 0, Optional pnComixMaxRet As Double = 0, Optional pbImpTMU As Boolean = False, Optional psNumTarj As String = "", _
        Optional pbPagoServicio As Boolean = False, Optional pcPersNomInst As String = "", Optional pnComisionPServiciox As Double = 0, Optional pcImrimePerx As String = "", _
        Optional ByVal pnComiVB As Double = 0, Optional ByVal psCodOpeVB As String = "", Optional ByVal pnConceptoSer As String = "", Optional ByVal psNomCliServ As String = "", _
        Optional ByVal pnMontoSer As String = "", Optional ByVal pnMovNro As Long) As String
        'madm 20111213 - 20111207 - 20110613 - 20110318 pnConceptoSer bPagoServiciom, pcPersNomInst - pcImrimePerx PAGO DE SERVICIOS
    Dim sFecha As String
    Dim sHora As String
    Dim sSep As Integer
    Dim sIni As Integer
    Dim sMonto As String
    Dim sSDisp As String
    Dim sIntAcum As String
    Dim sMax As Integer
    Dim saux As Integer
    Dim lsNroExt As String
    Dim lnTope As Integer
    Dim lsSaldoC As String
    Dim lsCadArg As String
    Dim lsInteres As String
    Dim sCad As String
    Dim lnCliAux As Long
    Dim lsCliAux1 As String
    Dim lsCliAux2 As String

    Dim lnChq As Long
    Dim lsChqAux1 As String
    Dim lsChqAux2 As String
    Dim lsNomAge As String

    Dim lnNumLinCmac As Integer

    Dim lsMensaje As String * 39

    Dim oVarImpre As New COMFunciones.FCOMVarImpresion

    '** Para la Impresion del Codigo Antiguo en las Boletas
    Dim lsCodAntiguo As String
    Dim lscad As String

    Dim nComiTotal As Double
    Dim nComiTotalServicio As Double
    Dim nTotalServicio As Double '20110701
    Dim pcImrimePer As String

    Dim loConstSistema As COMDConstSistema.NCOMConstSistema
    Set loConstSistema = New COMDConstSistema.NCOMConstSistema
    If loConstSistema.LeeConstSistema(122) = "1" Then
        Dim loGeneral As COMDConstSistema.DCOMGeneral
        Set loGeneral = New COMDConstSistema.DCOMGeneral
        lsCodAntiguo = loGeneral.GetCuentaAntigua(psCodCta)
    Else
        lsCodAntiguo = ""
    End If
    Set loConstSistema = Nothing

ETIQ:

    On Error GoTo Error

    lnTope = 0 '6 'Tope de lineas en Boleta

    lsNroExt = Str(pnNumExt)

    lscad = lscad & oImp.gPrnInicializa
    lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
    lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita

    sSep = 15
    sIni = 0
    sMax = 33
    saux = 5

    sFecha = Format$(pdFecSis, "dd/mm/yyyy")
    sHora = Format$(Time, "hh:mm:ss")
    sMonto = Format$(pnMonto, "#,##0.00")
    sSDisp = Format$(pnSaldo, "#,##0.00")
    lsSaldoC = Format$(pnSaldoC, "#,##0.00")

    lsNomAge = sNomAge

    '' Declaracion para los mensajes
    Dim clsGen As COMDConstSistema.DCOMGeneral
    Set clsGen = New COMDConstSistema.DCOMGeneral
    Dim oImpre As New COMFunciones.FCOMImpresion
        
    '' liquidacion Trujillo
    If pbImpTMU = False Then
        lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
        lscad = lscad & oImp.gPrnSaltoLinea
        nComiTotalServicio = 0
        nTotalServicio = 0
        If pbPagoServicio Then
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - SERVICIOS" & Space(16 + sSep + saux) & "CMAC-MAYNAS - SERVICIOS" & oImp.gPrnSaltoLinea
            psCliente = pcPersNomInst
            nComiTotalServicio = pnComisionPServiciox
            pcImrimePer = Trim(pcImrimePerx)
        Else
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(13 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        End If

        If Len(Trim(psCodCta)) < 18 Then
            If pnMonedaCMAC = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
            End If
        Else
            If Mid(psCodCta, 9, 1) = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
            End If
        End If

        If psNomAgeRem = "" Then
            lscad = lscad & ""
        Else
            lscad = lscad & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & "Ag.Rem: " & Trim(psNomAgeRem) & oImp.gPrnSaltoLinea
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & "NroDocCmac:" & psComCmac & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
        
        lscad = lscad & Space(sIni) & Space(21) & "Nro. Mov.:" & CStr(pnMovNro) & Space(saux + sSep - 6) & Space(21) & "Nro. Mov.:" & CStr(pnMovNro) & oImp.gPrnSaltoLinea
        
        lnCliAux = InStr(1, pcPersNomInst, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            
            lnCliAux = 1
        End If
        
        If pbSaldoInt Or pbCuenta Then
            If lsCodAntiguo <> "" Then  ' Para Codigo Antiguo - LAYG
                lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & Space(8 + sSep + saux) & "Cuenta:" & lsCodAntiguo & oImp.gPrnSaltoLinea
                'lsCadImp = lsCadImp & " Contrato  : " & lsCodAntiguo & Space(10) & Space(1 + vEspacio) _
                                            & " Contrato  : " & lsCodAntiguo & Space(10) & Chr(10)
            Else
                lscad = lscad & Space(sIni) & "Nro. de Cuentas:" & psCodCta & Space(14 + sSep + saux) & "Nro. de Cuentas:" & psCodCta & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                'MADM 20111209
                If pbPagoServicio Then
                     Dim xx1 As Integer
                     Dim psConceptoSerTemp As String
                     Dim psMontoSerTemp As String
                     psConceptoSerTemp = pnConceptoSer
                     psMontoSerTemp = pnMontoSer
                     pnConceptoSer = Trim(pnConceptoSer)
                     pnMontoSer = Trim(pnMontoSer)
                     pnConceptoSer = Mid(pnConceptoSer, 1, Len(pnConceptoSer) - 5)
                     If Int(Right(psConceptoSerTemp, 5)) = 1 Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                            pnMontoSer = pnMontoSer & " XXX"
                     End If
                     lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & Space(sMax + 6 - Len(Trim(Mid(psNomCliServ, 1, 30)))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & Space(sMax + 6 - Len(Trim(Mid(psNomCliServ, 1, 30)))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                     For xx1 = 1 To Int(Right(psConceptoSerTemp, 5))
                        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                        pnConceptoSer = Trim(Mid(pnConceptoSer, InStr(5, pnConceptoSer, "XXX", vbTextCompare), Len(pnConceptoSer) - 6))
                        If Right(Trim(pnConceptoSer), 3) <> "XXX" Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                        End If
                        If Right(Trim(pnMontoSer), 3) <> "XXX" Then
                            pnMontoSer = pnMontoSer & " XXX"
                        End If
                     Next xx1
                End If
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            If psDisponible = "" And psIntangible = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If psDisponible <> "" And psIntangible <> "" Then
           'psDispCta psIntaCta
           'gPrnCondensadaOFF
           'gPrnCondensadaON
           lscad = lscad & oVarImpre.gPrnCondensadaON & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDispCta)) & Space(saux + sSep + sMax - Len(Trim(psDispCta))) & oImpre.ImpreCarEsp(Trim(psDispCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & Space(saux + sSep + sMax - Len(Trim(psIntaCta))) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDisponible)) & Space(saux + sSep + sMax - Len(Trim(psDisponible))) & oImpre.ImpreCarEsp(Trim(psDisponible)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntangible)) & Space(saux + sSep + sMax - Len(Trim(psIntangible))) & oImpre.ImpreCarEsp(Trim(psIntangible)) & oVarImpre.gPrnCondensadaOFF & oImp.gPrnSaltoLinea

        End If
        'Insertar ITF
        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                 
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                'ALPA 20091120************************************************
                ElseIf pnTipoPago = 3 Then
                    psTexto = "ITF Abono a Cuenta"
                End If
                '*************************************************************
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & oImp.gPrnSaltoLinea
            End If
        End If
        '***    IMPRIMIR COMISON DE RETIRO -- AVMM 10-08-2006  ***
        'nComiTotal = pnComixRetOtraAge + pnComixMaxRet'Comentado by JACA 20111025
        'If nComiTotal <> 0 Then'Comentado by JACA 20111025
            If pnComixRetOtraAge <> 0 Then
               psTexto = "Comisión Operación Otra Age."
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & oImp.gPrnSaltoLinea
            End If
            If pnComixMaxRet <> 0 Then
               psTexto = "Comisión x Max Nro Ope."
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & oImp.gPrnSaltoLinea
            End If
        'End If
        '*********************************************************
        'MADM 20110815 - 20110318
        If nComiTotalServicio <> 0 Then
           nTotalServicio = nComiTotalServicio + pnMontoIFT + sMonto 'Format(nComiTotalServicio + pnMontoIFT + sMonto, "#,###,##0.00")
           psTexto = "Comision Pago de Servicios:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nComiTotalServicio, "0.00"))) & Format(nComiTotalServicio, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nComiTotalServicio, "0.00"))) & Format(nComiTotalServicio, "0.00") & oImp.gPrnSaltoLinea
           psTexto = "Total Pagado              :"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nTotalServicio, "#,###,##0.00"))) & Format(nTotalServicio, "#,###,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nTotalServicio, "#,###,##0.00"))) & Format(nTotalServicio, "#,###,##0.00") & oImp.gPrnSaltoLinea
        End If
       '*********************************************************
       
       'Add by GITU 30-09-2011
       If pnComiVB <> 0 And psCodOpeVB = "300627" Then
           psTexto = "Comision Ope. Sin Tarjeta:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComiVB, "0.00"))) & Format(pnComiVB, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComiVB, "0.00"))) & Format(pnComiVB, "0.00") & oImp.gPrnSaltoLinea
       End If
       'END GITU
        
        'If pbSaldoInt Then
        If bPregImpSaldos Then
            'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                If psCodOpe <> "200399" Then 'MADM 20101115
                    bImpreSaldos = True
                    lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                    If pbOpSaldoC Then
                        lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                    Else
                        lscad = lscad & ""
                    End If
                End If
            Else
                bImpreSaldos = False
                lscad = lscad & ""
                lscad = lscad & ""
                pbSaldoInt = False
            End If
        Else
            lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
            If pbOpSaldoC Then
               lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
            Else
                lscad = lscad & ""
            End If
        End If
        'Else
        '   lscad = lscad & ""
        'End If

        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If

        If Trim(sProxReno) <> "" Then
              lscad = lscad & Space(sIni) & sProxReno & Space(sMax + 20 - Len(sProxReno)) & sProxReno & oImp.gPrnSaltoLinea
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            If Trim(psDisponible) = "" And Trim(psIntangible) = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If Not psNumDias = "----" Then
            lscad = lscad & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & Space(-1 + sSep) & "Nro Dias Interes" & Space(sMax + 6 - Len(psNumDias) - Len("Nro Dias Interes")) & psNumDias & oImp.gPrnSaltoLinea
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If

        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        If psCodUsuRem = "" Then
            If bExtorno Then
                lscad = lscad & Space(sIni) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & Space(11 + sSep + saux) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & Space(11 + sSep + saux) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & oImp.gPrnSaltoLinea
            Else
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & Space(sSep) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & oImp.gPrnSaltoLinea
        End If

        lsMensaje = clsGen.GetMensajeBoletas(psCodCta, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        
        If Left(psOpeCod, 4) = "2605" Or Left(psOpeCod, 4) = "1270" Or Left(psOpeCod, 4) = "1070" Then
            lscad = lscad & ""
        ElseIf bExtorno = True Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf sProxReno <> "" Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf Trim(psDisponible) <> "" And Trim(psIntangible) <> "" Then
           lscad = lscad & ""
        Else
            For saux = 1 To (lnTope - lnNumLinCmac)
                lscad = lscad & ""
            Next saux
        End If
        If psNumTarj <> "" Then
            lscad = lscad & "Operacion realizada con Tarjeta Electronica" & Space(14) & "Operacion realizada con Tarjeta Electronica" & oImp.gPrnSaltoLinea
        End If
        ImprimeBoletaRes = lscad & oImp.gPrnSaltoLinea
    Else 'TMU
        lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
        '***Modificado por ELRO el 20120524, según OYP-RFC005-2012 y OYP-RFC016-2012
        'lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea '& oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        If psCodOpe <> gOtrOpeDesParGas And psCodOpe <> gOtrOpeDesParVia And psCodOpe <> gOtrOpeDesParCaj Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea '& oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        End If
        '***Fin Modificado por ELRO
        nComiTotalServicio = 0 'MADM 20111209
        nTotalServicio = 0 'MADM 20111209
        If pbPagoServicio Then
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - SERVICIOS" & Space(16 + sSep + saux) & oImp.gPrnSaltoLinea
            psCliente = pcPersNomInst
            nComiTotalServicio = pnComisionPServiciox
            pcImrimePer = Trim(pcImrimePerx)
        Else
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - AHORRO" & Space(16 + sSep + saux) & oImp.gPrnSaltoLinea
        End If
        
        If Len(Trim(psCodCta)) < 18 Then
            If pnMonedaCMAC = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & oImp.gPrnSaltoLinea
            End If
        Else
            If Mid(psCodCta, 9, 1) = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & oImp.gPrnSaltoLinea
            End If
        End If

        If psNomAgeRem = "" Then
            lscad = lscad & ""
        Else
            lscad = lscad & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & oImp.gPrnSaltoLinea
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & oImp.gPrnSaltoLinea

        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)

        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            'Space(saux + sMax + sSep - Len(lsCliAux2))
            lnCliAux = 1
        End If
        
        If pbSaldoInt Or pbCuenta Then
            If lsCodAntiguo <> "" Then  ' Para Codigo Antiguo - LAYG
                lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & oImp.gPrnSaltoLinea
                'lsCadImp = lsCadImp & " Contrato  : " & lsCodAntiguo & Space(10) & Space(1 + vEspacio) _
                                            & " Contrato  : " & lsCodAntiguo & Space(10) & Chr(10)
            Else
                lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                'lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                psText = Left(psText, 28) 'GEMO-JAOR 20210313 Correción al imprimir por tmu
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space((sMax + 6 - (Len(psText) + Len(Format(sMonto, "0.00"))))) & Format(sMonto, "0.00") & oImp.gPrnSaltoLinea
                 'MADM 20111209
                If pbPagoServicio Then
                     Dim xxx1 As Integer
                     Dim psConceptoSerTemp1 As String
                     psConceptoSerTemp1 = pnConceptoSer
                     pnConceptoSer = Trim(pnConceptoSer)
                     pnMontoSer = Trim(pnMontoSer)
                     pnConceptoSer = Mid(pnConceptoSer, 1, Len(pnConceptoSer) - 5)
                     If Int(Right(psConceptoSerTemp1, 5)) = 1 Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                            pnMontoSer = pnMontoSer & " XXX"
                     End If
                     lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & oImp.gPrnSaltoLinea
                     For xxx1 = 1 To Int(Right(psConceptoSerTemp1, 5))
                        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & oImp.gPrnSaltoLinea
                        pnConceptoSer = Trim(Mid(pnConceptoSer, InStr(5, pnConceptoSer, "XXX", vbTextCompare), Len(pnConceptoSer) - 6))
                        If Right(Trim(pnConceptoSer), 3) <> "XXX" Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                        End If
                         If Right(Trim(pnMontoSer), 3) <> "XXX" Then
                            pnMontoSer = pnMontoSer & " XXX"
                        End If
                     Next xxx1
                End If
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            If psDisponible = "" And psIntangible = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If psDisponible <> "" And psIntangible <> "" Then
           'psDispCta psIntaCta
           'gPrnCondensadaOFF
           'gPrnCondensadaON
           lscad = lscad & oVarImpre.gPrnCondensadaON & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDispCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDisponible)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntangible)) & Space(saux + sSep + sMax - Len(Trim(psIntangible))) & oImpre.ImpreCarEsp(Trim(psIntangible)) & oVarImpre.gPrnCondensadaOFF & oImp.gPrnSaltoLinea

        End If
        'Insertar ITF
        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                 
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                End If
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & oImp.gPrnSaltoLinea
            End If
        End If
        '***    IMPRIMIR COMISON DE RETIRO -- AVMM 10-08-2006  ***
        'nComiTotal = pnComixRetOtraAge + pnComixMaxRet 'Comentado by JACA 20111129
        'If nComiTotal <> 0 Then'Comentado by JACA 20111129
            If pnComixRetOtraAge <> 0 Then
               psTexto = "Comisión Retiro Otra Age."
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & oImp.gPrnSaltoLinea
            End If
            If pnComixMaxRet <> 0 Then
               psTexto = "Comisión x Max Nro Ope."
               lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & oImp.gPrnSaltoLinea
            End If
        'End If
        '*********************************************************
        
        'Add by GITU 30-09-2011
        If pnComiVB <> 0 And psCodOpeVB = "300627" Then
            psTexto = "Comision Ope. Sin Tarjeta:"
            lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComiVB)) & Format(pnComiVB, "0.00") & oImp.gPrnSaltoLinea
        End If
       'END GITU
       
       'MADM 20111209
        If nComiTotalServicio <> 0 Then
           nTotalServicio = nComiTotalServicio + pnMontoIFT + sMonto 'Format(nComiTotalServicio + pnMontoIFT + sMonto, "#,###,##0.00")
           psTexto = "Comision Pago Servicios"
           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(sMax + 6 - (Len(Trim(Mid(psTexto, 1, 27)))) + Len(Format(nComiTotalServicio, "#,###,##0.00"))) & oImpre.ImpreCarEsp(Trim(Format(nComiTotalServicio, "#,###,##0.00"))) & oImp.gPrnSaltoLinea
           lscad = lscad & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(sMax + 6 - (Len(psTexto) + Len(Format(nComiTotalServicio, "0.00")))) & Format(nComiTotalServicio, "0.00") & oImp.gPrnSaltoLinea
           psTexto = "Total Pagado"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(sMax + 6 - (Len(psTexto) + Len(Format(nTotalServicio, "#,###,##0.00")))) & Format(nTotalServicio, "#,###,##0.00") & oImp.gPrnSaltoLinea
           'lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(sMax + 6 - (Len(Mid(psTexto, 1, 27))) + Len(Format(nComiTotalServicio, "#,###,##0.00"))) & oImpre.ImpreCarEsp(Trim(Format(nComiTotalServicio, "#,###,##0.00"))) & oImp.gPrnSaltoLinea
        End If
       'END MADM
        'If pbSaldoInt Then
        If bPregImpSaldos Then
            'If MsgBox("Desea Imprimir los Saldos?", vbQuestion + vbYesNo, "Aviso") = vbYes Then
            If pbImprimeSaldos Then
                bImpreSaldos = True
                lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
                If pbOpSaldoC Then
                    lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
                Else
                    lscad = lscad & ""
                End If
            Else
                bImpreSaldos = False
                lscad = lscad & ""
                lscad = lscad & ""
                pbSaldoInt = False
            End If
        Else
            lscad = lscad & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & oImp.gPrnSaltoLinea
            If pbOpSaldoC Then
               lscad = lscad & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & oImp.gPrnSaltoLinea
            Else
                lscad = lscad & ""
            End If
        End If
        'Else
        '   lscad = lscad & ""
        'End If

        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If

        If Trim(sProxReno) <> "" Then
              lscad = lscad & Space(sIni) & sProxReno & Space(sMax + 20 - Len(sProxReno)) & sProxReno & oImp.gPrnSaltoLinea
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            If Trim(psDisponible) = "" And Trim(psIntangible) = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If Not psNumDias = "----" Then
            lscad = lscad & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & oImp.gPrnSaltoLinea
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If


        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        If psCodUsuRem = "" Then
            If bExtorno Then
                lscad = lscad & Space(sIni) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & oImp.gPrnSaltoLinea
            Else
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & oImp.gPrnSaltoLinea
        End If

        lsMensaje = clsGen.GetMensajeBoletas(psCodCta, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        
        If Left(psOpeCod, 4) = "2605" Or Left(psOpeCod, 4) = "1270" Or Left(psOpeCod, 4) = "1070" Then
            lscad = lscad & ""
        ElseIf bExtorno = True Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf sProxReno <> "" Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf Trim(psDisponible) <> "" And Trim(psIntangible) <> "" Then
           lscad = lscad & ""
        Else
            For saux = 1 To (lnTope - lnNumLinCmac)
                lscad = lscad & ""
            Next saux
        End If
        If psNumTarj <> "" Then
            lscad = lscad & "Operacion realizada con Tarjeta Electronica"
        End If
        '***Modificado por ELRO el 20120503, según OYP-RFC005-2012
        'lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        If psCodOpe <> gOtrOpeDesParGas And psCodOpe <> gOtrOpeDesParVia And psCodOpe <> gOtrOpeDesParCaj Then
            'Linea que corta el ticket en TMU
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        ElseIf psCodOpe = gOtrOpeDesParCaj Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        End If
        '***Fin Modificado por ELRO*******************************
        ImprimeBoletaRes = lscad
    End If
Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora... ", Err.Description
'    If MsgBox("Comprueba la conexion de su impresora, " + Err.Description & " Desea Reintentar?", vbCritical + vbYesNo, "Aviso") = vbYes Then
'        GoTo ETIQ
'    End If
End Function
'End GITU
'***Modificado por ELRO el 20121221, según OYP-RFC024-2012
Public Function verificarConciliacionBancos(ByVal pnMovNro As Long) As Integer
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta
Dim rsConciliacion As New ADODB.Recordset

    sSql = "stp_sel_VerificarConciliacionBancos " & pnMovNro & ""
    
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set rsConciliacion = oConecta.CargaRecordSet(sSql)
    If Not rsConciliacion.BOF And Not rsConciliacion.EOF Then
        verificarConciliacionBancos = rsConciliacion!nNroRegistros
    Else
        verificarConciliacionBancos = 0
    End If
    Set rsConciliacion = Nothing
    oConecta.CierraConexion
    Set oConecta = Nothing

End Function
'***Fin Modificado por ELRO el 20121221*******************
'***Agregado por ELRO el 20121023, según OYP-RFC101-2012
Public Function CapAbonoCuentaCTSLote(ByVal rsCuentas As ADODB.Recordset, ByVal pnOperacion As CaptacOperacion, _
                                      ByVal psMovNro As String, ByVal psGlosa As String, _
                                      Optional pnPorcDisp As Double = 0, Optional pnTipoDoc As TpoDoc = TpoDocCheque, _
                                      Optional psNroDoc As String = "", Optional psCodIF As String = "", _
                                      Optional pdFechaValor As Date, Optional psNomAge As String = "", _
                                      Optional sLpt As String = "", Optional pnMovNroTransfer As Long = -1, _
                                      Optional pnMonedaTrans As Moneda = gMonedaNacional, Optional ByVal psCodCmac As String, _
                                      Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoletas As String, _
                                      Optional ByRef pbImpTMU As Boolean = False, Optional ByVal pnMovNroRVD As Long = 0, _
                                      Optional ByVal pnMontoRVD As Long = 0, Optional ByVal pnMonedaEfec As Moneda = gMonedaNacional, _
                                      Optional pnMonedaChq As Moneda = gMonedaNacional, _
                                      Optional psIFTpo As String = "01", Optional ByVal psIFCta As String = "", _
                                      Optional ByVal pnMonedaCargoCta As Moneda = gMonedaNacional, Optional ByVal psCtaCodCargo As String = "", Optional ByRef pMatAho As Variant = "") As Long

'EJVG20140408 Se agregó psIFTpo, psIFCta
'CTI4 ERS0112020 Add: psCtaCodCargo,pMatAho
Dim oDCOMCaptaGenerales As COMDCaptaGenerales.DCOMCaptaGenerales
Dim oNCOMCaptaGenerales As COMNCaptaGenerales.NCOMCaptaGenerales
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oImpre As New COMFunciones.FCOMImpresion

Dim rsTipoCambio As ADODB.Recordset
Dim rsCta As New ADODB.Recordset
Dim lnEstado As CaptacEstado
Dim lnSaldoDisp As Double, lnSaldoCnt As Double, lnIntAcum As Double
Dim lnSaldoRetiro As Double
Dim lnIntSaldo As Double, lnIntGanado As Double, lnTasa As Double
Dim ldUltMov As Date
Dim lbTrans As Boolean
Dim lnDiasTranscurridos As Long, lnExtracto As Long
Dim lnMovNro As Long
Dim lsMsgOpe As String, lsCodUser As String
Dim ldFecSis As Date
Dim lnMontoCV As Currency
Dim lnTotalSaldos As Double
Dim lnTotalSueldos As Double
Dim lnExcedente As Double
Dim rsCuentasClone As ADODB.Recordset 'APRI20200522 POR COVID-19
Dim oDCOMGeneral As COMDConstSistema.DCOMGeneral
Dim oDCOMTipoCambioEsp As New COMDConstSistema.DCOMTipoCambioEsp
Dim oConst As COMDConstSistema.NCOMConstSistema 'CTI4 ERS0112020
Dim lnMontoCargoACuenta As Double 'CTI4 ERS0112020



'Para el manejo del Tipo de Cambio
Dim lnTipCambio As Currency
Dim lnTipCambioV As Currency
Dim lnTipCambioC As Currency
Dim lnTipCambioVAlt As Currency 'CTI4 ERS0112020
Dim lnTipCambioCAlt As Currency 'CTI4 ERS0112020

Dim lsTipDep As String
Dim lsCodOpe As String
Dim lsTipApe As String
Dim lsNomTit As String

Dim lnMoneda As Moneda
Dim nMontoMN As Double 'JUEZ 20130726
Dim nTpoPrograma As Integer 'JUEZ 20130816
Dim bCeseLaboral As Boolean 'JUEZ 20140319
Dim pbValor As Boolean 'PASI 20140602
Dim nCV As Integer 'JUEZ 20150922
Dim lsPersCodInst As String 'JUEZ 20150922
Dim nDU01 As Double 'APRI20200415 POR COVID-19
pbValor = True

ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
lsCodUser = Right(psMovNro, 4)
lbTrans = False

Set oDCOMGeneral = New COMDConstSistema.DCOMGeneral
lnTipCambio = oDCOMGeneral.GetTipCambio(ldFecSis, TCFijoMes)
Set oDCOMGeneral = Nothing

lnMontoCargoACuenta = 0

On Error GoTo ErrGraba

Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

Set rsCuentasClone = rsCuentas.Clone 'APRI20200512 POR COVID-19

'Inicia la transaccion
oDCOMCaptaMovimiento.dbCmact.BeginTrans
lbTrans = True

If psGlosa = "" Then psGlosa = "Deposito Lote"
oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa
lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)

oDCOMCaptaMovimiento.AgregaMovParamCTS lnMovNro, pnPorcDisp

Do While Not rsCuentas.EOF

    '***Obtiene los datos de la cuenta para el calculo
    Set oDCOMCaptaGenerales = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = New ADODB.Recordset
    Set rsCta = oDCOMCaptaGenerales.GetDatosCuentaCTS(rsCuentas!cts)
    Set oDCOMCaptaGenerales = Nothing
    lnEstado = rsCta("nPrdEstado")
    lnSaldoDisp = rsCta("nSaldoDisp")
    lnSaldoCnt = rsCta("nSaldo")
    ldUltMov = rsCta("dUltCierre")
    lnTasa = rsCta("nTasaInteres")
    lnIntAcum = rsCta("nIntAcum")
    lnSaldoRetiro = rsCta("nSaldRetiro")
    lnExtracto = rsCta("nTransacc") + 1
    nTpoPrograma = rsCta("nTpoPrograma")
    bCeseLaboral = rsCta("bCeseLaboral") 'JUEZ 20140319
    pnPorcDisp = rsCta("nPorDisp") 'JUEZ 20141017
    lsPersCodInst = rsCta("cCodInst") 'JUEZ 20150922
    nDU01 = rsCta("nDU01") 'APRI20200415 POR COVID-19
    rsCta.Close
    Set rsCta = Nothing
    lnMoneda = CInt(Mid(rsCuentas!cts, 9, 1))
  
    'If pnPorcDisp = 0 Then 'Comentado x JUEZ 20141017
    '    Dim clsDef As NCOMCaptaDefinicion
    '    Set clsDef = New NCOMCaptaDefinicion
    '    pnPorcDisp = clsDef.GetCapParametro(gPorRetCTS)
    '    Set clsDef = Nothing
    'End If
    '***Fin obtiene los datos de la cuenta para el calculo
    
    '***Valida el estado de la cuenta nuevamente
    If Not ValidaEstadoCuenta(rsCuentas!cts, False) Then
        oDCOMCaptaMovimiento.dbCmact.RollbackTrans
        Set oDCOMCaptaMovimiento = Nothing
        psMensajeValidacion = "Cuenta NO Tiene un estado valido para la Operacion, consulte con el Asistente de Agencia."
        CapAbonoCuentaCTSLote = 0
        Exit Function
    End If
    '***Fin valida el estado de la cuenta nuevamente

    '***Calcula intereses desde ultimo movimiento
    lnDiasTranscurridos = DateDiff("d", ldUltMov, ldFecSis) - 1
    If lnDiasTranscurridos < 0 Then
        lnDiasTranscurridos = 0
    End If
    
    lnIntGanado = GetInteres(lnSaldoDisp, lnTasa, lnDiasTranscurridos, TpoCalcIntCompuesto)
    
    lnIntSaldo = GetInteres(lnSaldoRetiro, lnTasa, lnDiasTranscurridos, TpoCalcIntSimple)
    lnSaldoCnt = lnSaldoCnt + IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))
    ldUltMov = DateAdd("d", -1, ldFecSis)
    '***Fin Calcula intereses desde ultimo movimiento

    '***Nueva Ley Nº 29352*******************************************

    Set rsCta = oDCOMCaptaMovimiento.ObtenerCapSaldosCuentasCTS(rsCuentas!cts, CDbl(lnTipCambio)) 'Obtiene valores en Soles

    lnTotalSaldos = rsCta!TotalSaldos
    lnTotalSueldos = rsCta!TotalSueldos
    rsCta.Close
    
    nMontoMN = IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $") * CDbl(lnTipCambio)) 'JUEZ 20130726 Saldo Retiro por Institucion y Persona
    
    'JUEZ 20141118 Eliminamos condición para que cuando sea con cheque también actualice saldo de retiro, ya que la operacion con cheque ahora suma al saldo disponiblesegún ultimo cambio EJVG
    'If psNroDoc = "" Then 'Si es abono en efectivo o por transferencia banco
        lnSaldoDisp = lnSaldoDisp + IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))
        'lnExcedente = (lnTotalSaldos + IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))) - lnTotalSueldos
        'lnExcedente = (lnTotalSaldos + IIf(nTpoPrograma = 2, 0, nMontoMN)) - lnTotalSueldos 'JUEZ 20130726
        lnExcedente = (lnTotalSaldos + IIf(nTpoPrograma = 2 And bCeseLaboral, 0, nMontoMN)) - lnTotalSueldos 'JUEZ 20140319 Si tiene Cese Laboral no suma saldo retiro
        If lnExcedente > 0 Then
            lnSaldoRetiro = lnExcedente * pnPorcDisp / 100
        Else
            lnSaldoRetiro = 0
        End If
    'Else
    '    If pnTipoDoc = TpoDocCheque Then 'Si es abono con cheque
            'lnSaldoDisp = lnSaldoDisp + 0
    '        lnSaldoDisp = lnSaldoDisp + IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) 'EJVG20140408 Xq cheque ya estará valorizado
    '    End If
    'End If
    '***Fin Nueva Ley Nº 29352***************************************
    
    oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, pnOperacion, rsCuentas!cts, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), lnSaldoDisp, lnSaldoCnt
        
    If pnOperacion = gCTSDepLotTransf Then  '***Si el abono es por transferencia banco
        If pnMovNroTransfer <> -1 Then
            oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcPenTran, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))
        ElseIf pnMovNroTransfer = -1 Then
            oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcCapital, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))
        End If
        
    Else '***Si es abono en efectivo o con cheque
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcCapital, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))
    End If

    'oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcProvision, lnIntGanado 'COMENTADO POR APRI20180926 MEJORA CORREO-MARI 21/09/2018

    If psNroDoc = "" Then  '***Si es abono en efectivo o por transferencia banco
        'oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentas!cts, lnSaldoRetiro, lnIntSaldo
        oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentas!cts, lnSaldoRetiro, lnIntSaldo, nDU01 'APRI20200415 POR COVID
        oDCOMCaptaMovimiento.ActualizaAbonoCaptacion rsCuentas!cts, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), lnIntGanado, ldUltMov, psMovNro, True
        If pnOperacion = gCTSDepLotEfec Then
            lsMsgOpe = "Dep. Lot. Efec."
        ElseIf pnOperacion = gCTSDepLotTransf Then
            lsMsgOpe = "Dep. Lot. Tranf."
        ElseIf pnOperacion = gCTSDepLotCargoCta Then 'CTI4 ERS0112020
            lsMsgOpe = "Dep. Lot. Cargo. Cta."
        End If
        
        
    Else
        If pnTipoDoc = TpoDocCheque Then '***Si es con cheque
            'oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentas!cts, lnSaldoRetiro, lnIntSaldo 'JUEZ 20141118
            oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentas!cts, lnSaldoRetiro, lnIntSaldo, nDU01 'APRI20200415 POR COVID-19
            'EJVG20140408 ***
            'oDCOMCaptaMovimiento.ActualizaAbonoCaptacion rsCuentas!CTS, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), 0, lnIntGanado, ldUltMov, psMovNro, True
            oDCOMCaptaMovimiento.ActualizaAbonoCaptacion rsCuentas!cts, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), lnIntGanado, ldUltMov, psMovNro, True
            'Dim rstemp1 As New ADODB.Recordset
            'Set rstemp1 = oDCOMCaptaMovimiento.GetDatosCheque(psNroDoc, psCodIF, "01")
            'oDCOMCaptaMovimiento.AgregaCuentaDocumento rsCuentas!cts, pnTipoDoc, psNroDoc, psCodIF, psMovNro, lnMovNro, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), , rstemp1!cIFCta
            'PASI20140602
                oDCOMCaptaMovimiento.AgregaCuentaDocumento rsCuentas!cts, pnTipoDoc, psNroDoc, psCodIF, psMovNro, lnMovNro, IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")), , psIFCta, psIFTpo, pbValor
                pbValor = False
            'end PASI
            'END EJVG *******
            lsMsgOpe = "Depo. Lot. Cheq."
        End If
    End If
    
    If pnOperacion = gCTSDepLotEfec And pnMonedaEfec <> lnMoneda Then
        Set rsTipoCambio = New ADODB.Recordset
        Set rsTipoCambio = oDCOMTipoCambioEsp.GetTipoCambioCV(IIf(pnMonedaEfec = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
        
        Do While Not rsTipoCambio.EOF
            If IIf(pnMonedaEfec = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) <= Val(rsTipoCambio!nHasta) Then
                lnTipCambioC = rsTipoCambio!nCompra
                lnTipCambioV = rsTipoCambio!nVenta
            End If
            rsTipoCambio.MoveNext
        Loop
        Set rsTipoCambio = Nothing
        
        'JUEZ 20150922 Compra - Venta *************************
        If pnMonedaEfec = gMonedaNacional Then
            If lnMoneda <> pnMonedaEfec Then
                nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMEVenta, "VENTA DE ME", Round(CDbl(rsCuentas("Monto $")), 2), CDbl(lnTipCambioV), lsPersCodInst, oDCOMCaptaMovimiento)
            End If
        ElseIf pnMonedaEfec = gMonedaExtranjera Then
            If lnMoneda <> pnMonedaEfec Then
                nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMECompra, "COMPRA DE ME", Round(CDbl(rsCuentas("Monto S/.")) / CDbl(lnTipCambioC), 2), CDbl(lnTipCambioC), lsPersCodInst, oDCOMCaptaMovimiento)
            End If
        End If
        'END JUEZ *********************************************
        
        If lnMoneda = gMonedaNacional Then
            lnMontoCV = Round((IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) / lnTipCambioC) * lnTipCambio, 2)
            oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioC
            If lnTipCambioC < lnTipCambio Then
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
            Else
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
            End If
        Else
            lnMontoCV = Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambio, 2)
            oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioV
            If lnTipCambioV > lnTipCambio Then
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
            Else
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
            End If
        End If
    End If
    
    If pnOperacion = gCTSDepLotChq And pnMonedaChq <> lnMoneda Then
        Set rsTipoCambio = New ADODB.Recordset
        Set rsTipoCambio = oDCOMTipoCambioEsp.GetTipoCambioCV(IIf(pnMonedaChq = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
        
        Do While Not rsTipoCambio.EOF
            If IIf(pnMonedaChq = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) <= Val(rsTipoCambio!nHasta) Then
                lnTipCambioC = rsTipoCambio!nCompra
                lnTipCambioV = rsTipoCambio!nVenta
            End If
            rsTipoCambio.MoveNext
        Loop
        Set rsTipoCambio = Nothing
        
        'JUEZ 20150922 Compra - Venta *************************
        If pnMonedaChq = gMonedaNacional Then
            If lnMoneda <> pnMonedaChq Then
                nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMEVentaCheque, "VENTA DE ME CHEQUE", Round(CDbl(rsCuentas("Monto $")), 2), CDbl(lnTipCambioV), lsPersCodInst, oDCOMCaptaMovimiento) 'APRI20170619 RFC1705220001 ADD gOpeCajeroMEVentaCheque
            End If
        ElseIf pnMonedaChq = gMonedaExtranjera Then
            If lnMoneda <> pnMonedaChq Then
                nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMECompraCheque, "COMPRA DE ME CHEQUE", Round(CDbl(rsCuentas("Monto S/.")) / CDbl(lnTipCambioC), 2), CDbl(lnTipCambioC), lsPersCodInst, oDCOMCaptaMovimiento) 'APRI20170619 RFC1705220001 ADD gOpeCajeroMECompraCheque
            End If
        End If
        'END JUEZ *********************************************
        
        If lnMoneda = gMonedaNacional Then
            lnMontoCV = Round((IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) / lnTipCambioC) * lnTipCambio, 2)
            oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioC
            If lnTipCambioC < lnTipCambio Then
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
            Else
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
            End If
        Else
            lnMontoCV = Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambio, 2)
            oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioV
            If lnTipCambioV > lnTipCambio Then
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
            Else
                oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
            End If
        End If
    End If
    
    If pnOperacion = gCTSDepLotCargoCta Then  'CTI4 ERS0112020
        Dim bBitAplicaTC As Boolean
        Set oConst = New COMDConstSistema.NCOMConstSistema
        Set rsTipoCambio = New ADODB.Recordset
        Set rsTipoCambio = oDCOMTipoCambioEsp.GetTipoCambioCV(IIf(pnMonedaCargoCta = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
        
        Do While Not rsTipoCambio.EOF
            If IIf(pnMonedaCargoCta = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) <= Val(rsTipoCambio!nHasta) Then
                lnTipCambioC = rsTipoCambio!nCompra
                lnTipCambioV = rsTipoCambio!nVenta
            End If
            rsTipoCambio.MoveNext
        Loop
        Set rsTipoCambio = Nothing
        
        bBitAplicaTC = oConst.LeeConstSistema(760)
        If Not pnMonedaCargoCta <> lnMoneda Then
            lnMontoCargoACuenta = lnMontoCargoACuenta + IIf(pnMonedaCargoCta = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))
        Else
            If lnMoneda = gMonedaExtranjera Then
                lnMontoCargoACuenta = lnMontoCargoACuenta + (Round(rsCuentas("Monto $") * (IIf(Not bBitAplicaTC, lnTipCambioV, lnTipCambioVAlt)), 2))
            Else
                lnMontoCargoACuenta = lnMontoCargoACuenta + (Round(rsCuentas("Monto S/.") / (IIf(Not bBitAplicaTC, lnTipCambioC, lnTipCambioCAlt)), 2))
            End If
        End If
        
        If pnMonedaCargoCta <> lnMoneda Then
            
            'JUEZ 20150922 Compra - Venta *************************
            If pnMonedaCargoCta = gMonedaNacional Then
                If lnMoneda <> pnMonedaCargoCta Then
                    nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMEVentaCargoCta, "VENTA DE ME CARGO A CUENTA", Round(CDbl(rsCuentas("Monto $")), 2), CDbl(lnTipCambioV), lsPersCodInst, oDCOMCaptaMovimiento) 'APRI20170619 RFC1705220001 ADD gOpeCajeroMEVentaCheque
                End If
            ElseIf pnMonedaCargoCta = gMonedaExtranjera Then
                If lnMoneda <> pnMonedaChq Then
                    nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMECompraCargoCta, "COMPRA DE ME CARGO A CUENTA", Round(CDbl(rsCuentas("Monto S/.")) / CDbl(lnTipCambioC), 2), CDbl(lnTipCambioC), lsPersCodInst, oDCOMCaptaMovimiento) 'APRI20170619 RFC1705220001 ADD gOpeCajeroMECompraCheque
                End If
            End If
            'END JUEZ *********************************************
            
            If lnMoneda = gMonedaNacional Then
                lnMontoCV = Round((IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) / lnTipCambioC) * lnTipCambio, 2)
                oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
                Else
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
                End If
            Else
                lnMontoCV = Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambio, 2)
                oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
                Else
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
                End If
            End If
        End If
    End If

    '***Si el abono es por transferencia banco
    If pnMovNroTransfer <> -1 And pnOperacion = gCTSDepLotTransf Then
           
        oDCOMCaptaMovimiento.AgregaMovRef lnMovNro, pnMovNroTransfer
    
        oDCOMCaptaMovimiento.ActualizaMovPendientesRend pnMovNroTransfer, pnMontoRVD
    
        If pnMonedaTrans <> lnMoneda Then
            Set rsTipoCambio = New ADODB.Recordset
            Set rsTipoCambio = oDCOMTipoCambioEsp.GetTipoCambioCV(IIf(pnMonedaTrans = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
            
            Do While Not rsTipoCambio.EOF
                If IIf(pnMonedaTrans = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) <= Val(rsTipoCambio!nHasta) Then
                    lnTipCambioC = rsTipoCambio!nCompra
                    lnTipCambioV = rsTipoCambio!nVenta
                End If
                rsTipoCambio.MoveNext
            Loop
            Set rsTipoCambio = Nothing
               
            'JUEZ 20150922 Compra - Venta *************************
            If pnMonedaTrans = gMonedaNacional Then
                If lnMoneda <> pnMonedaTrans Then
                    nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMEVenta, "VENTA DE ME", Round(CDbl(rsCuentas("Monto $")), 2), CDbl(lnTipCambioV), lsPersCodInst, oDCOMCaptaMovimiento)
                End If
            ElseIf pnMonedaTrans = gMonedaExtranjera Then
                If lnMoneda <> pnMonedaTrans Then
                    nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMECompra, "COMPRA DE ME", Round(CDbl(rsCuentas("Monto S/.")) / CDbl(lnTipCambioC), 2), CDbl(lnTipCambioC), lsPersCodInst, oDCOMCaptaMovimiento)
                End If
            End If
            'END JUEZ *********************************************
               
            If lnMoneda = gMonedaNacional Then
                lnMontoCV = Round((IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) / lnTipCambioC) * lnTipCambio, 2)
                oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
                Else
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
                End If
            Else
                lnMontoCV = Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambio, 2)
                oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
                Else
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
                End If
            End If
        End If
    
    ElseIf pnMovNroTransfer = -1 And pnOperacion = gCTSDepLotTransf Then
    
        If pnMonedaTrans <> lnMoneda Then
            Set rsTipoCambio = New ADODB.Recordset
            Set rsTipoCambio = oDCOMTipoCambioEsp.GetTipoCambioCV(IIf(pnMonedaTrans = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
            
            Do While Not rsTipoCambio.EOF
                If IIf(pnMonedaTrans = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) <= Val(rsTipoCambio!nHasta) Then
                    lnTipCambioC = rsTipoCambio!nCompra
                    lnTipCambioV = rsTipoCambio!nVenta
                End If
                rsTipoCambio.MoveNext
            Loop
            Set rsTipoCambio = Nothing
           
            'JUEZ 20150922 Compra - Venta *************************
            If pnMonedaTrans = gMonedaNacional Then
                If lnMoneda <> pnMonedaTrans Then
                    nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMEVenta, "VENTA DE ME", Round(CDbl(rsCuentas("Monto $")), 2), CDbl(lnTipCambioV), lsPersCodInst, oDCOMCaptaMovimiento)
                End If
            ElseIf pnMonedaTrans = gMonedaExtranjera Then
                If lnMoneda <> pnMonedaTrans Then
                    nCV = GrabaCompraVenta(lnMovNro, psMovNro, gOpeCajeroMECompra, "COMPRA DE ME", Round(CDbl(rsCuentas("Monto S/.")) / CDbl(lnTipCambioC), 2), CDbl(lnTipCambioC), lsPersCodInst, oDCOMCaptaMovimiento)
                End If
            End If
            'END JUEZ *********************************************
           
            If lnMoneda = gMonedaNacional Then
                lnMontoCV = Round((IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) / lnTipCambioC) * lnTipCambio, 2)
                oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioC
                If lnTipCambioC < lnTipCambio Then
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
                Else
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")))
                End If
            Else
                lnMontoCV = Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambio, 2)
                oDCOMCaptaMovimiento.AgregaMovTipoCambio lnMovNro, lnTipCambioV
                If lnTipCambioV > lnTipCambio Then
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedeUtilidad, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
                Else
                    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cts, gConcOpedePerdida, Abs(lnMontoCV - Round(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $")) * lnTipCambioV, 2))
                End If
            End If
        End If
    End If
    
    If pnOperacion = gCTSDepLotTransf And pnMovNroRVD > 0 Then
        oDCOMCaptaMovimiento.actualizarRelacionVoucherCaptacion lnMovNro, pnMovNroRVD
    End If
    '***Fin si el abono es por transferencia banco

    oDCOMCaptaMovimiento.UltimaActualizacionCuenta rsCuentas!cts, psMovNro

    '''lsTipDep = IIf(lnMoneda = gMonedaNacional, "SOLES", "DOLARES") 'marg ers044-2016
    lsTipDep = IIf(lnMoneda = gMonedaNacional, StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    lsCodOpe = Trim(pnOperacion)
    lsTipApe = "DEPOSITO CTS"
    Set oNCOMCaptaGenerales = New COMNCaptaGenerales.NCOMCaptaGenerales
    lsNomTit = oImpre.ImpreCarEsp(oNCOMCaptaGenerales.GetNombreTitulares(rsCuentas!cts))
    Set oNCOMCaptaGenerales = Nothing
    
    If psNroDoc <> "" Then
        Select Case pnTipoDoc
            Case TpoDocCheque
                psImpBoletas = psImpBoletas & ImprimeBoleta(lsTipApe, oImpre.ImpreCarEsp(lsMsgOpe) & " No. " & psNroDoc, lsCodOpe, Trim(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))), lsNomTit, rsCuentas!cts, Format$(pdFechaValor, "dd/mm/yyyy"), lnSaldoDisp, lnIntGanado, "Fecha Valor", lnExtracto, lnSaldoCnt, True, , , , , , , , , ldFecSis, psNomAge, lsCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU, , , , , , , , , , , , IIf(pnMonedaChq <> lnMoneda And lnMoneda = gMonedaNacional, "Imp U$. " & Format(rsCuentas("Monto $"), "#,##0.00") & " A TCC:" & Format(lnTipCambioC, "#,##0.000"), "Imp S/. " & Format(rsCuentas("Monto S/."), "#,##0.00") & " A TCV:" & Format(lnTipCambioV, "#,##0.000")))
        End Select
    ElseIf pnOperacion = gCTSDepLotEfec Then
        psImpBoletas = psImpBoletas & ImprimeBoleta(lsTipApe, oImpre.ImpreCarEsp(lsMsgOpe), lsCodOpe, Trim(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))), lsNomTit, rsCuentas!cts, "", lnSaldoDisp, lnIntGanado, "", 1, lnSaldoCnt, True, , , , , , , , , ldFecSis, psNomAge, lsCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU, , , , , , , , , , , , IIf(pnMonedaEfec = lnMoneda, "XXX", IIf(pnMonedaEfec <> lnMoneda And lnMoneda = gMonedaNacional, "Imp U$. " & Format(rsCuentas("Monto $"), "#,##0.00") & " A TCC:" & Format(lnTipCambioC, "#,##0.000"), "Imp S/. " & Format(rsCuentas("Monto S/."), "#,##0.00") & " A TCV:" & Format(lnTipCambioV, "#,##0.000"))))
    ElseIf pnOperacion = gCTSDepLotCargoCta Then ' CTI4 ERS0112020
        psImpBoletas = psImpBoletas & ImprimeBoleta(lsTipApe, oImpre.ImpreCarEsp(lsMsgOpe), lsCodOpe, Trim(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))), lsNomTit, rsCuentas!cts, "", lnSaldoDisp, lnIntGanado, "", 1, lnSaldoCnt, True, , , , , , , , , ldFecSis, psNomAge, lsCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU, , , , , , , , , , , , IIf(pnMonedaCargoCta = lnMoneda, "XXX", IIf(pnMonedaCargoCta <> lnMoneda And lnMoneda = gMonedaNacional, "Imp U$. " & Format(rsCuentas("Monto $"), "#,##0.00") & " A TCC:" & Format(lnTipCambioC, "#,##0.000"), "Imp S/. " & Format(rsCuentas("Monto S/."), "#,##0.00") & " A TCV:" & Format(lnTipCambioV, "#,##0.000"))))
    ElseIf pnOperacion = gCTSDepLotTransf Then
        psImpBoletas = psImpBoletas & ImprimeBoleta(lsTipApe, oImpre.ImpreCarEsp(lsMsgOpe), lsCodOpe, Trim(IIf(lnMoneda = gMonedaNacional, rsCuentas("Monto S/."), rsCuentas("Monto $"))), lsNomTit, rsCuentas!cts, "", lnSaldoDisp, lnIntGanado, "", 1, lnSaldoCnt, True, , , , , , , , , ldFecSis, psNomAge, lsCodUser, sLpt, , psCodCmac, , , , , , , , , , , , False, , , , , , pbImpTMU, , , , , , , , , , , , IIf(pnMonedaTrans = lnMoneda, "XXX", IIf(pnMonedaTrans <> lnMoneda And lnMoneda = gMonedaNacional, "Imp U$. " & Format(rsCuentas("Monto $"), "#,##0.00") & " A TCC:" & Format(lnTipCambioC, "#,##0.000"), "Imp S/. " & Format(rsCuentas("Monto S/."), "#,##0.00") & " A TCV:" & Format(lnTipCambioV, "#,##0.000"))))
    End If
    
    
rsCuentas.MoveNext
Loop
If pnOperacion = gCTSDepLotChq Then 'EJVG20140408
    oDCOMCaptaMovimiento.AgregaMovDocRec lnMovNro, pnTipoDoc, psNroDoc, psCodIF, psIFTpo, psIFCta
End If
If pnOperacion = gCTSDepLotCargoCta Then 'CTI4 ERS0112020
    oDCOMCaptaMovimiento.CapCargoCuentaAho pMatAho, psCtaCodCargo, lnMontoCargoACuenta, gAhoCargoCtaDepositoLoteCTS, psMovNro, "Cargo a Cuenta Deposito Lote CTS", ldFecSis
End If

oDCOMCaptaMovimiento.dbCmact.CommitTrans
lbTrans = False
CapAbonoCuentaCTSLote = lnMovNro

'APRI20200512 POR COVID-19
Do While Not rsCuentasClone.EOF
    Set oDCOMCaptaGenerales = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = oDCOMCaptaGenerales.GetDatosCuentaCTS(rsCuentasClone!cts)
    Set oDCOMCaptaGenerales = Nothing
    nDU01 = rsCta("nDU01New")
    lnSaldoRetiro = rsCta("nSaldRetiro1")
    lnTasa = rsCta("nTasaInteres")
    ldUltMov = rsCta("dUltCierre")
    rsCta.Close
    Set rsCta = Nothing
    
    lnDiasTranscurridos = DateDiff("d", ldUltMov, ldFecSis) - 1
    If lnDiasTranscurridos < 0 Then
        lnDiasTranscurridos = 0
    End If
    
    lnIntSaldo = GetInteres(lnSaldoRetiro, lnTasa, lnDiasTranscurridos, TpoCalcIntSimple)
    
    oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentasClone!cts, lnSaldoRetiro, lnIntSaldo, nDU01
rsCuentasClone.MoveNext
Loop
'END APRI


Exit Function
ErrGraba:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION", Err.Description

    
End Function

' *** RIRO20140430 ERS017
Public Function CapAbonoLoteCtaSueldo(ByVal sCuenta As String, ByVal nMonto As Double, _
                                      ByVal sMovNro As String, ByVal rsCtaAbo As ADODB.Recordset, _
                                      ByVal sGlosa As String, Optional sNomAge As String = "", Optional sLpt As String = "", _
                                      Optional sPersLavDinero As String = "", Optional pnTCC As Double = 0, Optional pnTCV As Double = 0, _
                                      Optional pbITFAplica As Boolean = True, Optional pnITFValor As Currency = 0, Optional pbITFAsumido As Boolean = False, _
                                      Optional psITFOperacion As String = "", Optional ByVal sBenPersLavDinero As String = "", _
                                      Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoleta As String, Optional ByRef psITFImpBoleta As String, _
                                      Optional ByVal pbImpTMU As Boolean, Optional psTitPersLavDinero As String = "", Optional psOrdPersLavDinero As String = "", Optional psReaPersLavDinero As String = "", _
                                      Optional psBenPersLavDinero As String = "", Optional psVisPersLavDinero As String = "", Optional pnMovNro As Long = 0, _
                                      Optional nOperacion As CaptacOperacion, Optional sNroDoc As String, Optional sCodIF As String, _
                                      Optional ByVal pnTpoDoc As Integer = 47, Optional ByVal psIFTpo As String = "01", Optional ByVal psIFCta As String = "", _
                                      Optional ByVal pnMovNroTransfer As Long = -1, Optional ByVal pnMovNroRVD As Long = 0, Optional ByVal psMovNroV As String = 0, _
                                      Optional ByVal pnDetalle As Integer = 0, Optional ByRef poDocRec As Variant = "") As Boolean
    'sCuenta
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim rsCta As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double, nMontoAbo As Double
    'ALPA 20091123***********************
    Dim nTpoAbono As Integer
    '************************************
    Dim dUltMov As Date
    Dim nSaldoInac As Double
    Dim bInactiva As Boolean, bTrans As Boolean, bActivaCta As Boolean, bInmovilizada As Boolean
    Dim nNumExtracto As Long, nDiasTranscurridos As Long
    Dim nExtracto As Long, nMovNro As Long, nMovNroV As Long
    Dim sMsgOpe As String, sCtaAbo As String, sCodUser As String
    Dim nMoneda As Moneda
    'Dim nOperacion As CaptacOperacion
    Dim dFecSis As Date
    Dim oCon As COMDConstSistema.NCOMConstSistema
    Dim oImpre As New COMFunciones.FCOMImpresion
    Dim nDetalle As Integer
    
    Set oCon = New COMDConstSistema.NCOMConstSistema
    nDetalle = pnDetalle
        
    Dim i As Integer
    Dim lnTCC As Double
    Dim lnTCV As Double
    
    Dim clsGen As COMDConstSistema.NCOMTipoCambio
    Set clsGen = New COMDConstSistema.NCOMTipoCambio
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    
    If pnTCC = 0 Then
        lnTCC = clsGen.EmiteTipoCambio(dFecSis, TCCompra)
    Else
        lnTCC = pnTCC
    End If
    
    If pnTCV = 0 Then
        lnTCV = clsGen.EmiteTipoCambio(dFecSis, TCVenta)
    Else
        lnTCV = pnTCV
    End If

    sCodUser = Right(sMovNro, 4)
    bTrans = False
    bActivaCta = False
    
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa
    nMovNro = clsCap.GetnMovNro(sMovNro)
    
    pnMovNro = nMovNro
    
    If nOperacion = gAhoDepositoHaberesEnLoteChq Then
        clsCap.AgregaMovDocRec nMovNro, poDocRec(3), poDocRec(4), poDocRec(2), poDocRec(0), poDocRec(1)
    End If

    clsCap.dbCmact.CommitTrans
    bTrans = False

    Dim sTipDep As String, sCodOpe As String
    Dim sModDep As String, sTipApe As String
    Dim sNomTit As String

    Dim clsTit As NCOMCaptaGenerales
    Dim oImp As NCOMCaptaImpresion
    Dim nTipPago As Integer
    Set clsTit = New NCOMCaptaGenerales
    Set oImp = New NCOMCaptaImpresion

    Dim CANTABO As Integer
    CANTABO = 0
    i = 1
    Dim nMonITF As Double, sAboOpeITF As String

Do While Not rsCtaAbo.EOF And Not rsCtaAbo.BOF
    
    clsCap.dbCmact.BeginTrans
    bTrans = True
    
    sCtaAbo = rsCtaAbo("Cuenta")
    nMontoAbo = CDbl(rsCtaAbo("monto"))
    
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(sCtaAbo)
    Set clsMant = Nothing
    nEstado = rsCta("nPrdEstado")
    nSaldoDisp = rsCta("nSaldoDisp")
    nSaldoCnt = rsCta("nSaldo")
    dUltMov = rsCta("dUltCierre")
    nTasa = rsCta("nTasaInteres")
    nIntAcum = rsCta("nIntAcum")
    bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
    bInmovilizada = IIf(rsCta("bInmovilizada") = 1, True, False)
    nExtracto = rsCta("nTransacc") + 1
    rsCta.Close
    Set rsCta = Nothing
    If bInactiva Then
        nSaldoInac = nSaldoCnt
    End If
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    nSaldoCnt = nSaldoCnt + nMontoAbo
    clsCap.ActualizaSaldoAnteriorAho sCtaAbo, nSaldoDisp
    nSaldoDisp = nSaldoDisp + nMontoAbo
    clsCap.ActualizaAbonoCaptacion sCtaAbo, nMontoAbo, nMontoAbo, nIntGanado, dUltMov, sMovNro, True
    
    sMsgOpe = "Abono Lote Cta Sueldo"
    If sGlosa = "" Then sGlosa = "Abono en Lote = " & sCtaAbo
    
    clsCap.AgregaMovCap nMovNro, nOperacion, sCtaAbo, nMontoAbo, nSaldoDisp, nSaldoCnt
    clsCap.ActualizadUltContactoAho sCtaAbo, dFecSis
    
    If bInmovilizada Then
        If oCon.LeeConstSistema(gConstSistBitCtrCtasInmovil) = 1 Then
            clsCap.AgregaMovCapDet nMovNro, gAhoEstInmovAct, sCtaAbo, gConcCapital, nSaldoInac
            clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
            clsCap.ActualizaInmovilizadaAct sCtaAbo
        End If
    End If
    
    If bInactiva And Not bInmovilizada Then
        clsCap.AgregaMovCapDet nMovNro, gAhoEstInacAct, sCtaAbo, gConcCapital, nSaldoInac
        clsCap.ActualizaEstadoCuenta sCtaAbo, gCapEstActiva, dFecSis, sMovNro
        clsCap.ActualizaInactivaAct sCtaAbo
    End If
    'clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    clsCap.UltimaActualizacionCuenta sCtaAbo, sMovNro
    
    CANTABO = CANTABO + 1
    '''sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCtaAbo, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = sMsgOpe
    'sTipApe = "DEPOSITO EN LOTE" ''YIHU 20150108 ERS160
    'YIHU 20150108 ERS160
    If nOperacion = gAhoDepositoHaberesEnLoteTransf Then
        sTipApe = "DEP. EN LOTE TRANSFERENCIA"
    ElseIf nOperacion = gAhoDepositoHaberesEnLoteChq Then
        sTipApe = "DEP. EN LOTE CHEQUE"
    Else
        sTipApe = "DEP. EN LOTE EFECTIVO"
    End If
    'END YIHU
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCtaAbo))
    Set clsTit = Nothing
    If Mid(sCuenta, 9, 1) = Mid(sCtaAbo, 9, 1) Then
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, True, pnITFValor, False, , , , pbImpTMU) 'YIHU20141205ERS1602014-Se modificó bPreguntaSaldo, bImprimeSaldo
    Else
        If Mid(sCtaAbo, 9, 1) = "1" Then
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, True, pnITFValor, False, , , , pbImpTMU) 'RIRO20140904 Add/'YIHU20141205ERS1602014-Se modificó bPreguntaSaldo, bImprimeSaldo
            'psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , "Imp U$. " & Format(rsCtaAbo.Fields(3), "#,##0.00") & " A TCC:" & Format(lnTCC, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor) 'RIRO20140904 Comentado
        Else
            psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, True, True, pnITFValor, False, , , , pbImpTMU) 'RIRO20140904 Add/'YIHU20141205ERS1602014-Se modificó bPreguntaSaldo, bImprimeSaldo
            'psImpBoleta = psImpBoleta & oImp.ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMontoAbo), sNomTit, sCtaAbo, "", nSaldoDisp, nIntGanado + nIntAcum, "", nExtracto, nSaldoCnt, True, , , , , , , "Imp S/. " & Format(rsCtaAbo.Fields(2), "#,##0.00") & " A TCV:" & Format(lnTCV, "#,##0.000"), , dFecSis, sNomAge, sCodUser, sLpt, True, False, pnITFValor) 'RIRO20140904 Comentado
        End If
    End If
    If nOperacion = gAhoDepositoHaberesEnLoteTransf Then
        If pnMovNroTransfer <> -1 Then
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcPenTran, nMontoAbo
        ElseIf pnMovNroTransfer = -1 Then
            clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
        End If
        If i = 1 Then
           If rsCtaAbo.RecordCount <> i Then ' cuando solo hay un registro
            nMovNroV = clsCap.registrarVoucherErr(psMovNroV, 9, pnMovNroRVD, pnMovNroTransfer, nDetalle - 1, nMontoAbo)
           End If
           clsCap.actualizarRelacionVoucherCaptacion nMovNro, pnMovNroRVD
           If pnMovNroTransfer <> -1 Then
                clsCap.AgregaMovRef nMovNro, pnMovNroTransfer
                clsCap.ActualizaMovPendientesRend pnMovNroTransfer, nMontoAbo
           End If
        Else
            If rsCtaAbo.RecordCount = i Then
                If pnMovNroTransfer <> -1 Then
                    clsCap.ActualizaMovPendientesRend pnMovNroTransfer, nMontoAbo
                End If
                clsCap.ActualizarVoucherErr pnMovNroRVD, nMovNroV, nMontoAbo
                clsCap.EliminarVoucherErr pnMovNroRVD, nMovNroV, nMovNro, pnDetalle, nMonto
            Else
                clsCap.ActualizarVoucherErr pnMovNroRVD, nMovNroV, nMontoAbo
                If pnMovNroTransfer <> -1 Then
                    clsCap.ActualizaMovPendientesRend pnMovNroTransfer, nMontoAbo
                End If
            End If
        End If
    ElseIf nOperacion = gAhoDepositoHaberesEnLoteChq Then
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
        clsCap.AgregaDocRecCapta sCtaAbo, poDocRec(3), poDocRec(4), poDocRec(2), nMovNro, nMontoAbo, poDocRec(0), poDocRec(1)
    Else
        clsCap.AgregaMovCapDet nMovNro, nOperacion, sCtaAbo, gConcCapital, nMontoAbo
    End If
    i = i + 1
    clsCap.dbCmact.CommitTrans
    bTrans = False
    rsCtaAbo.MoveNext
Loop
CapAbonoLoteCtaSueldo = True
Set clsCap = Nothing

Set oImp = Nothing
Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsMant = Nothing
    Set oImp = Nothing
    Set clsCap = Nothing
    'Err.Raise Err.Number, "", Err.Description
    psMensajeValidacion = "Error en el proceso de deposito"
    CapAbonoLoteCtaSueldo = False
End Function
' *** END RIRO

Public Function CapExtornoAbonoCTSLote(ByVal pnMovNroBus As Long, ByVal pnOperacion As CaptacOperacion, _
                                       ByVal psMovNro As String, ByVal psGlosa As String, _
                                       ByVal pnMonto As Double, ByVal pnOperacionPorExtornar As CaptacOperacion, _
                                       Optional ByVal pnTipoDoc As TpoDoc = TpoDocCheque, _
                                       Optional ByVal psNroDoc As String = "", Optional ByVal psCodIF As String = "", _
                                       Optional ByVal psNomAge As String = "", Optional ByVal psLpt As String = "", _
                                       Optional ByVal psCodCmac As String, _
                                       Optional ByVal psCodAge As String = "", _
                                       Optional ByRef psImBoleta As String, _
                                       Optional ByVal pbImpTMU As Boolean = False, _
                                       Optional ByVal psMotExtorno As Variant, _
                                       Optional ByRef psCtaAhoExt As String = "", _
                                       Optional ByRef psClienteExt As String = "", _
                                       Optional ByRef pnMontoExt As Currency = 0) As Long
                                       'CTI4 ERS0112020 Add:psCtaAhoExt,psClienteExt,pnMontoExt

    Dim oDCOMCaptaGenerales As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim oDCOMGeneral As New COMDConstSistema.DCOMGeneral
    Dim oFCOMImpresion As New COMFunciones.FCOMImpresion
    Dim oDCOMMov As New COMDMov.DCOMMov
    Dim rsCta As New ADODB.Recordset
    Dim rsCuentas As New ADODB.Recordset
    Dim RCapMov As ADODB.Recordset 'CTI4 ERS0112020
    
    Dim lnEstado As CaptacEstado
    Dim lnSaldoDisp As Double, lnSaldoCnt As Double, lnIntAcum As Double
    Dim lnIntSaldo As Double, lnIntGanado As Double, lnTasa As Double
    Dim lnPorcDisp As Double, lnSaldRetiro As Double, lnIntGanadoRet As Double
    Dim lnTotalSaldos As Double, lnTotalSueldos As Double, lnExcedente As Double
    Dim ldUltMov As Date
    Dim lbTrans As Boolean
    Dim lnDiasTranscurridos As Long, i As Long
    Dim lnExtracto As Long, lnMovNro As Long
    Dim lsMsgOpe As String, lsCodUser As String
    Dim ldFecSis As Date
    Dim lsCodUserBus As String, lsMovNroBus As String
    Dim nMontoMN As Double 'JUEZ 20130816
    Dim nTpoPrograma As Integer 'JUEZ 20130816
    Dim oGen As New COMDConstSistema.DCOMGeneral 'JUEZ 20130816
    Dim bCeseLaboral As Boolean 'JUEZ 20140319
    Dim nDU01 As Double 'APRI20200415 POR COVID-19
    Dim rsCuentasClone As ADODB.Recordset 'APRI20200522 POR COVID-19
    ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
    lsCodUser = Right(psMovNro, 4)
    lbTrans = False
    
    
    '**Obtiene el usuario de la operación****
    lsMovNroBus = "": lsCodUserBus = ""
    lsMovNroBus = oDCOMMov.GetcMovNro(pnMovNroBus)
    lsCodUserBus = Right(lsMovNroBus, 4)
    '**Fin Obtiene el usuario de la operación
    
    'Inicia la transaccion
    Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
    lnPorcDisp = oDCOMCaptaMovimiento.GetCapMovParamCTS(pnMovNroBus)
    
    On Error GoTo ErrGraba
    
    oDCOMCaptaMovimiento.dbCmact.BeginTrans
    lbTrans = True
    
    oDCOMCaptaMovimiento.ActualizaEstadoMov pnMovNroBus, gMovFlagExtornado
    oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, psGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
    
    '**CTI3 (ferimoro) 02102018
    oDCOMCaptaMovimiento.dInsertDetExtMov lnMovNro, pnOperacion, psMotExtorno(0), psMotExtorno(1)
    
    Set rsCuentas = oDCOMCaptaMovimiento.devolverCuentasPorExtornarLote(pnMovNroBus, pnOperacionPorExtornar)
    Set rsCuentasClone = rsCuentas.Clone 'APRI20200522 POR COVID-19
    Do While Not rsCuentas.EOF
    
        '***Obtiene los datos para el calculo
        Set oDCOMCaptaGenerales = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsCta = oDCOMCaptaGenerales.GetDatosCuentaCTS(rsCuentas!cCtaCod)
        Set oDCOMCaptaGenerales = Nothing
        
        lnEstado = rsCta("nPrdEstado")
        lnSaldoDisp = rsCta("nSaldoDisp")
        lnSaldoCnt = rsCta("nSaldo")
    
        ldUltMov = rsCta("dUltCierre")
        lnTasa = rsCta("nTasaInteres")
        lnIntAcum = rsCta("nIntAcum")
        lnIntSaldo = rsCta("nIntSaldo")
        lnExtracto = rsCta("nTransacc") + 1
        lnSaldRetiro = rsCta("nSaldRetiro")
        nTpoPrograma = rsCta("nTpoPrograma")
        bCeseLaboral = rsCta("bCeseLaboral") 'JUEZ 20140319
        nDU01 = rsCta("nDU01") 'APRI20200415 POR COVID-19
        rsCta.Close
        Set rsCta = Nothing
        
        If psGlosa = "" Then
            psGlosa = "Extorno Abono CTS Cuenta = " & rsCuentas!cCtaCod
        Else
            psGlosa = psGlosa & Chr$(13) & "Extorno Abono CTS Cuenta = " & rsCuentas!cCtaCod
        End If

        lnDiasTranscurridos = DateDiff("d", ldUltMov, ldFecSis) - 1
        
        If lnDiasTranscurridos < 0 Then
            lnDiasTranscurridos = 0
        End If
        
        lnIntGanado = GetInteres(lnSaldoDisp, lnTasa, lnDiasTranscurridos, TpoCalcIntSimple)
        lnIntGanadoRet = GetInteres(lnSaldRetiro, lnTasa, lnDiasTranscurridos, TpoCalcIntSimple)
        ldUltMov = DateAdd("d", -1, ldFecSis)
        lnSaldoCnt = lnSaldoCnt - rsCuentas!nMonto
        
        Set rsCta = oDCOMCaptaMovimiento.ObtenerCapSaldosCuentasCTS(rsCuentas!cCtaCod, oDCOMGeneral.GetTipCambio(ldFecSis, TCFijoMes))
        lnTotalSaldos = rsCta!TotalSaldos
        lnTotalSueldos = rsCta!TotalSueldos
        rsCta.Close
        'JUEZ 20130816 ****************************************************************
        nMontoMN = rsCuentas!nMonto * IIf(Mid(rsCuentas!cCtaCod, 9, 1) = "1", 1, oGen.GetTipCambio(ldFecSis, TCFijoMes))
        'lnExcedente = (lnTotalSaldos - rsCuentas!nMonto) - lnTotalSueldos
        'lnExcedente = (lnTotalSaldos - IIf(nTpoPrograma = 2, 0, nMontoMN)) - lnTotalSueldos
        lnExcedente = (lnTotalSaldos - IIf(nTpoPrograma = 2 And bCeseLaboral, 0, nMontoMN)) - lnTotalSueldos 'JUEZ 20140319
        'END JUEZ *********************************************************************
        
        If psNroDoc <> "" Then
            If pnTipoDoc = TpoDocCheque Then
                lnSaldoDisp = lnSaldoDisp - 0
                'oDCOMCaptaMovimiento.ActualizaCargoCaptacion rsCuentas!cCtaCod, rsCuentas!nMonto, 0, lnIntGanado, ldUltMov, psMovNro, True
                oDCOMCaptaMovimiento.ActualizaCargoCaptacion rsCuentas!cCtaCod, rsCuentas!nMonto, rsCuentas!nMonto, lnIntGanado, ldUltMov, psMovNro, True 'PASI20140618 cambio EJVG
                oDCOMCaptaMovimiento.ActualizaEstadoDocRecEst TpoDocCheque, psNroDoc, psCodIF, psMovNro, gsChqEstExtornado, , rsCuentas!cCtaCod 'rsCuentas!cCtaCod agregado x PASI20140617
                lsMsgOpe = "Ext. Dep. Chq. Lot."
            End If
        Else
            If lnExcedente > 0 Then
               lnSaldRetiro = lnExcedente * lnPorcDisp / 100
            Else
               lnSaldRetiro = 0
            End If
            lnSaldoDisp = lnSaldoDisp - rsCuentas!nMonto
            lnIntSaldo = lnIntSaldo - lnIntGanado
            'oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentas!cCtaCod, lnSaldRetiro, lnIntSaldo
            oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentas!cCtaCod, lnSaldRetiro, lnIntSaldo, nDU01 'APRI20200415 POR COVID-19
            oDCOMCaptaMovimiento.ActualizaCargoCaptacion rsCuentas!cCtaCod, rsCuentas!nMonto, rsCuentas!nMonto, lnIntGanado, ldUltMov, psMovNro, True
            'lsMsgOpe = IIf(pnOperacion = gCTSExtDepLotEfec, "Ext. Dep. Efe. Lot.", "Ext. Dep. Tra. Lot.") 'Comentado ERS0112020
            lsMsgOpe = IIf(pnOperacion = gCTSExtDepLotEfec, "Ext. Dep. Efe. Lot.", IIf(pnOperacion = gCTSExtDepLotCargoCta, "Ext. Dep. Cargo Cta. Lot.", "Ext. Dep. Tra. Lot.")) 'CTI4 ERS0112020
        End If
    
       
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, pnOperacion, rsCuentas!cCtaCod, rsCuentas!nMonto, lnSaldoDisp, lnSaldoCnt
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, pnOperacion, rsCuentas!cCtaCod, gConcCapital, rsCuentas!nMonto
        oDCOMCaptaMovimiento.UltimaActualizacionCuenta rsCuentas!cCtaCod, psMovNro
        

        
       
        
        Dim sTipDep As String, sCodOpe As String
        Dim sModDep As String, sTipApe As String
        Dim sNomTit As String
        '''sTipDep = IIf(Mid(rsCuentas!cCtaCod, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
        sTipDep = IIf(Mid(rsCuentas!cCtaCod, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        sCodOpe = Trim(pnOperacion)
        sModDep = lsMsgOpe
        sTipApe = "EXTORNO CTS"
        Dim clsTit As NCOMCaptaGenerales
        Set clsTit = New NCOMCaptaGenerales
        sNomTit = oFCOMImpresion.ImpreCarEsp(clsTit.GetNombreTitulares(rsCuentas!cCtaCod))
        Set clsTit = Nothing
    
        If psNroDoc <> "" Then
            psImBoleta = psImBoleta & ImprimeBoleta(sTipApe, oFCOMImpresion.ImpreCarEsp(sModDep) & " No. " & psNroDoc, sCodOpe, Trim(rsCuentas!nMonto), sNomTit, rsCuentas!cCtaCod, "", lnSaldoDisp, lnIntGanado, "", lnExtracto, lnSaldoCnt, , , , , , , , , , ldFecSis, psNomAge, lsCodUser, psLpt, , psCodCmac, psCodAge, , , CStr(pnOperacion), lsCodUserBus, True, , , , , , , , , , , , pbImpTMU)
        Else
            psImBoleta = psImBoleta & ImprimeBoleta(sTipApe, oFCOMImpresion.ImpreCarEsp(sModDep), sCodOpe, Trim(rsCuentas!nMonto), sNomTit, rsCuentas!cCtaCod, "", lnSaldoDisp, lnIntGanado, "", 1, lnSaldoCnt, , , , , , , , , , ldFecSis, psNomAge, lsCodUser, psLpt, , psCodCmac, psCodAge, , , CStr(pnOperacion), lsCodUserBus, True, , , , , , , , , , , , pbImpTMU)
        End If
        
        
    
    rsCuentas.MoveNext
    Loop
    If pnOperacion = gCTSExtDepLotCargoCta Then  'CTI4 ERS0112020
        Set RCapMov = oDCOMCaptaMovimiento.RecuperaMovimientoCapataciones(pnMovNroBus, gAhoCargoCtaDepositoLoteCTS)
        Call oDCOMCaptaMovimiento.CapExtornoCargoAho(pnMovNroBus, 0, gAhoExtCargoCtaCTSDepLot, RCapMov!cCtaCod, oDCOMCaptaMovimiento.GeneraMovNro(CDate("01/01/1900"), , , psMovNro), "Extorno Cargo a Cta Por Dep. Lote CTS", RCapMov!nMonto)
        psCtaAhoExt = RCapMov!cCtaCod
        psClienteExt = RCapMov!cCliente
        pnMontoExt = RCapMov!nMonto
    End If
    If pnOperacion = gCTSExtDepLotTransf Then
    'CTI7 ERSOpeV2
       oDCOMCaptaMovimiento.actualizarRelacionExtornoVoucherCaptacion (pnMovNroBus)
        '************************
    End If
    oDCOMCaptaMovimiento.dbCmact.CommitTrans
    
    CapExtornoAbonoCTSLote = lnMovNro
    
    
    'APRI20200512 POR COVID-19
    Do While Not rsCuentasClone.EOF
        Set oDCOMCaptaGenerales = New COMDCaptaGenerales.DCOMCaptaGenerales
        Set rsCta = oDCOMCaptaGenerales.GetDatosCuentaCTS(rsCuentasClone!cCtaCod)
        Set oDCOMCaptaGenerales = Nothing
        nDU01 = rsCta("nDU01New")
        lnSaldRetiro = rsCta("nSaldRetiro1")
        lnTasa = rsCta("nTasaInteres")
        ldUltMov = rsCta("dUltCierre")
        rsCta.Close
        Set rsCta = Nothing
        
        lnDiasTranscurridos = DateDiff("d", ldUltMov, ldFecSis) - 1
        If lnDiasTranscurridos < 0 Then
            lnDiasTranscurridos = 0
        End If
        
        lnIntSaldo = GetInteres(lnSaldRetiro, lnTasa, lnDiasTranscurridos, TpoCalcIntSimple)
        
        'oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentasClone!cts, lnSaldRetiro, lnIntSaldo, nDU01 'Comentado CTI4 ERS0112020
        oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS rsCuentasClone!cCtaCod, lnSaldRetiro, lnIntSaldo, nDU01 'CTI4 ERS0112020
        
    rsCuentasClone.MoveNext
    Loop
    'END APRI
    
    Set oDCOMCaptaMovimiento = Nothing
    Set oFCOMImpresion = Nothing
Exit Function
ErrGraba:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "", Err.Description
    CapExtornoAbonoCTSLote = 0
End Function

'RIRO20140620 ERS017 *****
Public Function CapExtornoAperturaLoteTransf(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, ByVal sCuenta As String, _
                                             ByVal sMovNro As String, ByVal sGlosa As String, ByVal nMonto As Double, _
                                             Optional sNomAge As String = "", Optional sLpt As String = "", Optional ByVal psCodCmac As String, _
                                             Optional psCodAge As String = "", Optional ByRef psImpBoleta As String, _
                                             Optional ByVal psMotExtorno As Variant, _
                                             Optional ByVal pbImpTMU As Boolean = False) As String

Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oImpre As New COMFunciones.FCOMImpresion
Dim sMsgProd As String, sCodUser As String
Dim nProd As Producto
Dim nMovNro As Long
Dim dFecSis As Date
Dim rsCtas As ADODB.Recordset
Set rsCtas = New ADODB.Recordset
Dim nTipPago As Integer
Dim nITF As Currency
Dim sOpeCodITF As String

dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
sCodUser = Right(sMovNro, 4)
If nOperacion = gCTSExtApeLoteEfec Or nOperacion = gCTSExtApeLoteTransf Then
    nProd = gCapCTS
ElseIf nOperacion = gPFExtApeLoteTransf Then
    nProd = gCapPlazoFijo
Else
    nProd = CLng(Mid(sCuenta, 6, 3))
End If
If nProd = gCapAhorros Then
    sMsgProd = "EXTORNO AHORROS"
ElseIf nProd = gCapPlazoFijo Then
    sMsgProd = "EXTORNO PLAZO FIJO"
ElseIf nProd = gCapCTS Then
    sMsgProd = "EXTORNO CTS"
End If
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
Set rsCtas = clsCap.GetApeLoteCuentas(nMovNroBus)
rsCtas.MoveFirst
Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
Set ClsMov = New COMDMov.DCOMMov
sMovNroBus = "": sCodUserBus = ""
sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
sCodUserBus = Right(sMovNroBus, 4)
clsCap.dbCmact.BeginTrans
clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
nMovNro = clsCap.GetnMovNro(sMovNro)
'**CTI3 (ferimoro) 02102018
Call clsCap.dInsertDetExtMov(nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1))

While Not rsCtas.EOF
    sCuenta = rsCtas!cCtaCod
    nMonto = rsCtas!nMonto
    nITF = rsCtas!ITF
    sOpeCodITF = rsCtas!cOpeCodITF
    clsCap.ActualizaEstadoCuenta sCuenta, gCapEstAnulada, dFecSis, sMovNro
    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, 0, 0
    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, gConcCapital, nMonto
    If nITF > 0 Then
        clsCap.AgregaMovCap nMovNro, gITFCobroCargoExt, sCuenta, nITF, 0, 0
        clsCap.AgregaMovCapDet nMovNro, gITFCobroCargoExt, sCuenta, gConcITFCliente, nITF
    End If
    clsCap.UltimaActualizacionCuenta sCuenta, sMovNro
    rsCtas.MoveNext
Wend


clsCap.actualizarRelacionExtornoVoucherCaptacion nMovNroBus
clsCap.ActualizaMovPendientesOpe nMovNroBus, nMonto


clsCap.dbCmact.CommitTrans

Dim sTipDep As String, sCodOpe As String
Dim sModDep As String, sTipApe As String
Dim sNomTit As String
Dim lsBoletas As String
  
rsCtas.MoveFirst
  While Not rsCtas.EOF
    sCuenta = rsCtas!cCtaCod
    nMonto = rsCtas!nMonto
    '''sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
    sTipDep = IIf(Mid(sCuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
    sCodOpe = Trim(nOperacion)
    sModDep = "Extorno Apertura Lote"
    sTipApe = sMsgProd
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(sCuenta))
    Set clsTit = Nothing
    psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(nMonto), sNomTit, sCuenta, "", 0, 0, "", 1, 0, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , , , , , , pbImpTMU)
    rsCtas.MoveNext
  Wend
End Function
Public Function CapExtornoAbonoLote(ByVal nMovNroBus As Long, ByVal nOperacion As CaptacOperacion, _
                                        ByVal sMovNro As String, ByVal sGlosa As String, _
                                        Optional sNomAge As String, Optional sLpt As String = "", _
                                        Optional ByVal psCodCmac As String, Optional ByVal psCodAge As String = "", _
                                        Optional ByRef psMensajeValidacion As String = "", Optional ByRef psImpBoleta As String, _
                                        Optional pbImpTMU As Boolean = False, _
                                        Optional ByVal psMotExtorno As Variant) As Double

    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim nOperacionAextornar As CaptacOperacion
    Dim rsCta As New ADODB.Recordset
    Dim rsCuentas As New ADODB.Recordset
    Dim nEstado As CaptacEstado
    Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
    Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
    Dim dUltMov As Date
    Dim bInactiva As Boolean, bTrans As Boolean
    Dim nDiasTranscurridos As Long, i As Long
    Dim nExtracto As Long, nMovNro As Long
    Dim sMsgOpe As String, sCodUser As String
    Dim dFecSis As Date
    Dim nITFDescuento As Double
    Dim nTipPago As Integer
    Dim nMonto As Double
    Dim oImpre As New COMFunciones.FCOMImpresion
    
    dFecSis = CDate(Mid(sMovNro, 7, 2) & "/" & Mid(sMovNro, 5, 2) & "/" & Left(sMovNro, 4))
    sCodUser = Right(sMovNro, 4)
    bTrans = False
    
    Dim ClsMov As COMDMov.DCOMMov, sCodUserBus As String, sMovNroBus As String
    
    On Error GoTo ErrGraba

    Set ClsMov = New COMDMov.DCOMMov
    sMovNroBus = ""
    sCodUserBus = ""
    sMovNroBus = ClsMov.GetcMovNro(nMovNroBus)
    sCodUserBus = Right(sMovNroBus, 4)
    Set ClsMov = Nothing
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    If nOperacion = gAhoExtDepositoHaberesEnLoteEfec Then
        nOperacionAextornar = gAhoDepositoHaberesEnLoteEfec
    ElseIf nOperacion = gAhoExtDepositoHaberesEnLoteTransf Then
        nOperacionAextornar = gAhoDepositoHaberesEnLoteTransf
    ElseIf nOperacion = gAhoExtDepositoHaberesEnLoteChq Then
        nOperacionAextornar = gAhoDepositoHaberesEnLoteChq
    End If

    clsCap.dbCmact.BeginTrans
    bTrans = True
    
    clsCap.ActualizaEstadoMov nMovNroBus, gMovFlagExtornado
    clsCap.AgregaMov sMovNro, nOperacion, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = clsCap.GetnMovNro(sMovNro)
    
    '***CTI3 (ferimoro) 17102018
    clsCap.dInsertDetExtMov nMovNro, nOperacion, psMotExtorno(0), psMotExtorno(1)
    
    Set rsCuentas = clsCap.devolverCuentasPorExtornarLote(nMovNroBus, nOperacionAextornar)
    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    
    Do While Not rsCuentas.EOF
    
        'Obtiene datos para el Calculo
        Set rsCta = clsMant.GetDatosCuentaAho(rsCuentas!cCtaCod)
        'Set clsMant = Nothing
        nEstado = rsCta("nPrdEstado")
        nSaldoDisp = rsCta("nSaldoDisp")
        nSaldoCnt = rsCta("nSaldo")
        dUltMov = rsCta("dUltCierre")
        nTasa = rsCta("nTasaInteres")
        nIntAcum = rsCta("nIntAcum")
        bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
        nExtracto = rsCta("nTransacc") + 1
        rsCta.Close
        Set rsCta = Nothing
        nMonto = nMonto + rsCuentas!nMonto
                
        'CTI2 20190409 VALIDA EL SALDO DISPONIBLE
        If Not clsCap.ValidaExtornoLote(nMovNroBus, rsCuentas!cCtaCod) Then
            If bTrans Then clsCap.dbCmact.RollbackTrans
            Set clsCap = Nothing
            CapExtornoAbonoLote = -1
            Exit Function
        End If
        'CTI2 END
        
        sGlosa = sGlosa & ". Extorno Abono Cuenta = " & rsCuentas!cCtaCod
        nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
        If nDiasTranscurridos < 0 Then
            nDiasTranscurridos = 0
        End If
        nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
        dUltMov = DateAdd("d", -1, dFecSis)
        nSaldoCnt = nSaldoCnt - rsCuentas!nMonto
        clsCap.ActualizaSaldoAnteriorAho rsCuentas!cCtaCod, nSaldoDisp
        nSaldoDisp = nSaldoDisp - rsCuentas!nMonto
        clsCap.ActualizaCargoCaptacion rsCuentas!cCtaCod, rsCuentas!nMonto, rsCuentas!nMonto, nIntGanado, dUltMov, sMovNro, True
        If nOperacion = gAhoDepositoHaberesEnLoteEfec Then
            sMsgOpe = "Ext. Depósito de Haberes Lote Efectivo"
        ElseIf nOperacion = gAhoDepositoHaberesEnLoteTransf Then
            sMsgOpe = "Ext. Depósito de Haberes Lote Transferencia Banco"
        ElseIf nOperacion = gAhoExtDepositoHaberesEnLoteChq Then
            sMsgOpe = "Ext. Depósito de Haberes Lote Cheque"
        End If
        clsCap.AgregaMovCap nMovNro, nOperacion, rsCuentas!cCtaCod, rsCuentas!nMonto, nSaldoDisp, nSaldoCnt
        clsCap.AgregaMovCapDet nMovNro, nOperacion, rsCuentas!cCtaCod, gConcCapital, rsCuentas!nMonto
        clsCap.UltimaActualizacionCuenta rsCuentas!cCtaCod, sMovNro
    
        Dim sTipDep As String, sCodOpe As String
        Dim sModDep As String, sTipApe As String
        Dim sNomTit As String
        '''sTipDep = IIf(Mid(rsCuentas!cCtaCod, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
        sTipDep = IIf(Mid(rsCuentas!cCtaCod, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        sCodOpe = Trim(nOperacion)
        sModDep = sMsgOpe
        sTipApe = "EXTORNO AHORROS"
        Dim clsTit As NCOMCaptaGenerales
        Set clsTit = New NCOMCaptaGenerales
        sNomTit = oImpre.ImpreCarEsp(clsTit.GetNombreTitulares(rsCuentas!cCtaCod))
        Set clsTit = Nothing
        psImpBoleta = psImpBoleta & ImprimeBoleta(sTipApe, oImpre.ImpreCarEsp(sModDep), sCodOpe, Trim(rsCuentas!nMonto), sNomTit, rsCuentas!cCtaCod, "", nSaldoDisp, nIntGanado, "", 1, nSaldoCnt, , , , , , , , , , dFecSis, sNomAge, sCodUser, sLpt, , psCodCmac, psCodAge, , , CStr(nOperacion), sCodUserBus, True, , , , , , , nTipPago, , True, , , pbImpTMU)
        rsCuentas.MoveNext
    Loop
    If nOperacion = gAhoExtDepositoHaberesEnLoteTransf Then
        clsCap.ActualizaMovPendientesOpe nMovNroBus, nMonto
        clsCap.actualizarRelacionExtornoVoucherCaptacion nMovNroBus
    End If
    clsCap.dbCmact.CommitTrans
    bTrans = False
    Set clsMant = Nothing
    
    Exit Function
ErrGraba:
        If bTrans Then clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        Err.Raise Err.Number, "Error", Err.Description
        CapExtornoAbonoLote = 0
        
End Function
'END RIRO ****************

Public Function pasarCTSNoActiva(ByVal psCuenta As String, ByVal psMovNro As String, ByVal pnOperacion As CaptacOperacion, ByVal pnTasaCTSNoActiva As Currency) As Long
Dim oDCOMCaptaGenerales As COMDCaptaGenerales.DCOMCaptaGenerales
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rsCta As New ADODB.Recordset

Dim lnSaldoDisp As Double, lnSaldoCnt As Double, lnSaldoRetiro As Double
Dim lnIntSaldo As Double, lnIntGanado As Double, lnTasa As Double
Dim ldUltMov As Date
Dim lbTrans As Boolean
Dim lnDiasTranscurridos As Long, nExtracto As Long
Dim pnMovNro As Long
Dim ldFecSis As Date
Dim lsGlosa As String
Dim lnMonto As Double
'JUEZ 20130816 ****************************************
Dim oGen As New COMDConstSistema.DCOMGeneral
Dim clsDef As New NCOMCaptaDefinicion
Dim nTipoCamb As Double
Dim nPorcDisp As Double, nExcedente As Double
'nPorcDisp = clsDef.GetCapParametro(gPorRetCTS) 'JUEZ 20141017
'END JUEZ *********************************************

ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
lbTrans = False
nTipoCamb = oGen.GetTipCambio(ldFecSis, TCFijoMes) 'JUEZ 20130816
'Obtiene los datos para el calculo
Set oDCOMCaptaGenerales = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rsCta = oDCOMCaptaGenerales.GetDatosCuentaCTS(psCuenta)
Set oDCOMCaptaGenerales = Nothing
lnSaldoDisp = rsCta("nSaldoDisp")
lnSaldoCnt = rsCta("nSaldo")
ldUltMov = rsCta("dUltCierre")
lnTasa = rsCta("nTasaInteres")
lnSaldoRetiro = rsCta("nSaldRetiro")
nPorcDisp = rsCta("nPorDisp") 'JUEZ 20141017
rsCta.Close
Set rsCta = Nothing

'Inicia la transaccion
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrGraba

oDCOMCaptaMovimiento.dbCmact.BeginTrans
lbTrans = True

lnMonto = 0

lnDiasTranscurridos = DateDiff("d", ldUltMov, ldFecSis) - 1
If lnDiasTranscurridos < 0 Then
    lnDiasTranscurridos = 0
End If

lnIntGanado = GetInteres(lnSaldoDisp, lnTasa, lnDiasTranscurridos, TpoCalcIntCompuesto)
lnIntSaldo = GetInteres(lnSaldoRetiro, lnTasa, lnDiasTranscurridos, TpoCalcIntSimple)
lnSaldoCnt = lnSaldoCnt + lnMonto
ldUltMov = DateAdd("d", -1, ldFecSis)

'lnSaldoRetiro = lnSaldoDisp

lsGlosa = "Trasladado a CTS No Activo = " & psCuenta
oDCOMCaptaMovimiento.AgregaMov psMovNro, pnOperacion, lsGlosa
pnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
oDCOMCaptaMovimiento.AgregaMovCap pnMovNro, pnOperacion, psCuenta, lnMonto, lnSaldoDisp, lnSaldoCnt
oDCOMCaptaMovimiento.AgregaMovCapDet pnMovNro, pnOperacion, psCuenta, gConcCapital, lnMonto
oDCOMCaptaMovimiento.AgregaMovCapDet pnMovNro, pnOperacion, psCuenta, gConcProvision, lnIntGanado
'oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS psCuenta, lnSaldoRetiro, lnIntSaldo
oDCOMCaptaMovimiento.ActualizaAbonoCaptacion psCuenta, lnMonto, lnMonto, lnIntGanado, ldUltMov, psMovNro, True
oDCOMCaptaMovimiento.UltimaActualizacionCuenta psCuenta, psMovNro
oDCOMCaptaMovimiento.actualizarCTSNoActivo psCuenta, pnTasaCTSNoActiva, 2
oDCOMCaptaMovimiento.dbCmact.CommitTrans
lbTrans = False
'JUEZ 20130816 Recalcula saldo autorizado retiro Institucion - Persona *****
Set rsCta = oDCOMCaptaMovimiento.ObtenerCapSaldosCuentasCTS(psCuenta, nTipoCamb)
nExcedente = rsCta!TotalSaldos - rsCta!TotalSueldos
lnSaldoRetiro = IIf(nExcedente > 0, nExcedente * nPorcDisp / 100, 0)
oDCOMCaptaMovimiento.ActualizaSaldoRetiroCTS psCuenta, lnSaldoRetiro, lnIntSaldo
'END JUEZ ******************************************************************
pasarCTSNoActiva = pnMovNro

Exit Function
ErrGraba:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION", Err.Description
    
End Function
'***Fin Agregado por ELRO el 20121023*******************
'***Agregado por ELRO el 20130325, según TI-ERS011-2013***
Public Function migrarCuentasAhorros(ByVal psMovNro As String, ByVal psOpeCod As String, _
                                     ByVal psGlosa As String, ByRef prsCuentas As ADODB.Recordset, _
                                     ByVal pnSubProductoDestino As Integer, ByVal psPersCod As String, _
                                     ByVal psNomAge As String, ByRef psImpFirmas As String) As Long
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim lbTrans As Boolean
Dim ldUltCierre, ldFecSis As Date
Dim lnDiasTranscurridos As Integer
Dim lnMovNro As Long
Dim lnIntGanado As Double
Dim lsCodUser As String
Dim lsImpFirmas As String
Dim lsImpBoleta As String
Dim rsTitular As ADODB.Recordset
Dim oNCOMCaptaGenerales As NCOMCaptaGenerales
Set oNCOMCaptaGenerales = New NCOMCaptaGenerales
Dim lbOrdPag As Boolean
Dim lnTotalIntereses As Double

ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
lsCodUser = Right(psMovNro, 4)
lbTrans = False

On Error GoTo ErrMigrar

'Inicia la transaccion
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
oDCOMCaptaMovimiento.dbCmact.BeginTrans
lbTrans = True

oDCOMCaptaMovimiento.AgregaMov psMovNro, psOpeCod, psGlosa
lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)


Do While Not prsCuentas.EOF
    '***Registramos historial de la cuenta antes de la migración****
    oDCOMCaptaMovimiento.registrarHistorialCuentasMigradas lnMovNro, prsCuentas!cuenta
    '***Fin Registramos historial de la cuenta antes de la migración
    
    '***Calculamos los intereses ganados****
    lnDiasTranscurridos = DateDiff("d", prsCuentas!dUltCierre, ldFecSis) - 1
    If lnDiasTranscurridos < 0 Then
       lnDiasTranscurridos = 0
    End If
    lnIntGanado = GetInteres(prsCuentas!Monto, prsCuentas!TasaNominalOrigen, lnDiasTranscurridos, TpoCalcIntSimple)
    '***Fin Calculamos los interesesganados
    
    lnTotalIntereses = lnIntGanado + IIf(prsCuentas!nIntAcum < 0, 0, prsCuentas!nIntAcum)
    
    ldUltCierre = DateAdd("d", -1, ldFecSis)
    
    oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gAhoCapIntMig, prsCuentas!cuenta, lnTotalIntereses, (prsCuentas!Monto + lnTotalIntereses), (prsCuentas!nSaldoDisp + lnTotalIntereses)
    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gAhoCapIntMig, prsCuentas!cuenta, gConcCapital, lnTotalIntereses
    oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gAhoMigracion, prsCuentas!cuenta, 0, (prsCuentas!Monto + lnTotalIntereses), (prsCuentas!nSaldoDisp + lnTotalIntereses)
    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gAhoMigracion, prsCuentas!cuenta, gConcCapital, 0
    
    oDCOMCaptaMovimiento.migrarCuenta prsCuentas!cuenta, (prsCuentas!Monto + lnTotalIntereses), ldUltCierre, pnSubProductoDestino, prsCuentas!TasaNominalDestino, psPersCod
    
    prsCuentas!Monto = prsCuentas!Monto + lnTotalIntereses
    prsCuentas.MoveNext
Loop

oDCOMCaptaMovimiento.dbCmact.CommitTrans
lbTrans = False

lsImpFirmas = ""
prsCuentas.MoveFirst
'***Imprime registro de firmas****
Do While Not prsCuentas.EOF
    If lsImpFirmas <> "" Then lsImpFirmas = lsImpFirmas & oImp.gPrnSaltoPagina
    lbOrdPag = False
    Set rsTitular = New ADODB.Recordset
    Set rsTitular = oNCOMCaptaGenerales.obtenerTitularCuenta(prsCuentas!cuenta)
    lsImpFirmas = lsImpFirmas & oNCOMCaptaGenerales.GeneraRegistroFirmas(prsCuentas!cuenta, prsCuentas!cTipoCuenta, ldFecSis, lbOrdPag, rsTitular, psNomAge, ldFecSis, Trim(Right(psMovNro, 4)), pnSubProductoDestino) & Chr(10)
    Set rsTitular = Nothing
    prsCuentas.MoveNext
Loop

psImpFirmas = lsImpFirmas
'***Fin Imprime registro de firmas

migrarCuentasAhorros = lnMovNro
Set oDCOMCaptaMovimiento = Nothing
Set oNCOMCaptaGenerales = Nothing
Exit Function

ErrMigrar:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    Set oDCOMCaptaMovimiento = Nothing
    migrarCuentasAhorros = 0
End Function

Public Function extornarMigracionCuentasAhorros(ByVal psMovNro As String, ByVal pnMovNro, _
                                                ByVal psOpeCod As String, ByVal psGlosa As String, _
                                                ByVal prsCuentas As ADODB.Recordset, ByVal psNomAge As String, _
                                                ByVal psCodCmac As String, ByVal pbImpTMU As Boolean, _
                                                ByRef psLpt As String, ByRef psImBoleta As String, _
                                                Optional ByVal psMotExtorno As Variant) As Long
                                                
Dim oDCOMCaptaMovimiento As DCOMCaptaMovimiento
Dim lbTrans As Boolean
Dim ldFecSis As Date
Dim lsCodUser As String
Dim lsCodAge As String
Dim lnMovNroExt As Long
Dim lsTipDep As String, lsModDep As String, lsTipApe As String, lsNomTit As String
Dim oNCOMCaptaGenerales As NCOMCaptaGenerales
Dim lsCodUserBus As String
Dim oFCOMImpresion As COMFunciones.FCOMImpresion

ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
lsCodUser = Right(psMovNro, 4)
lsCodAge = Mid(psMovNro, 18, 2)
lbTrans = False

On Error GoTo ErrMigrar

'***CTI3 (ferimoro)    04102018
'If Trim(psGlosa) = "" Then psGlosa = "Extorno  Migración " & CStr(pnMovNro)
If Trim(psMotExtorno(1)) = "" Then psMotExtorno(1) = "Extorno  Migración " & CStr(pnMovNro)
'Inicia la transaccion
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
oDCOMCaptaMovimiento.dbCmact.BeginTrans
lbTrans = True

oDCOMCaptaMovimiento.AgregaMov psMovNro, psOpeCod, psGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
lnMovNroExt = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)
'**CTI3 (ferimoro) 02102018
oDCOMCaptaMovimiento.dInsertDetExtMov lnMovNroExt, psOpeCod, psMotExtorno(0), psMotExtorno(1)

oDCOMCaptaMovimiento.extornarMigracionCuentas pnMovNro

oDCOMCaptaMovimiento.AgregaMovRef lnMovNroExt, pnMovNro



prsCuentas.MoveFirst
Do While Not prsCuentas.EOF
    If CLng(prsCuentas!nMovNro) = pnMovNro Then

        '''lsTipDep = IIf(Mid(prsCuentas!Cuenta, 9, 1) = "1", "SOLES", "DOLARES") 'marg ers044-2016
        lsTipDep = IIf(Mid(prsCuentas!cuenta, 9, 1) = "1", StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase), "DOLARES") 'marg ers044-2016
        lsModDep = "EXTORNO MIGRACIÓN"
        lsTipApe = "EXTORNO MIGRACIÓN"
        lsCodUserBus = Right(prsCuentas!mov, 4)
        
        Set oNCOMCaptaGenerales = New NCOMCaptaGenerales
        Set oFCOMImpresion = New COMFunciones.FCOMImpresion
        lsNomTit = oFCOMImpresion.ImpreCarEsp(oNCOMCaptaGenerales.GetNombreTitulares(prsCuentas!cuenta))
        psImBoleta = psImBoleta & ImprimeBoleta(lsTipApe, oFCOMImpresion.ImpreCarEsp(lsModDep), psOpeCod, Trim(prsCuentas!Monto), lsNomTit, prsCuentas!cuenta, "", prsCuentas!Monto, 0, "", 1, 0, , , , , , , , , , ldFecSis, psNomAge, lsCodUser, psLpt, , psCodCmac, lsCodAge, , , CStr(psOpeCod), lsCodUserBus, True, , , , , , , , , , , , pbImpTMU)
    End If
    prsCuentas.MoveNext
Loop

oDCOMCaptaMovimiento.dbCmact.CommitTrans
lbTrans = False
extornarMigracionCuentasAhorros = lnMovNroExt
Set oFCOMImpresion = Nothing
Set oDCOMCaptaMovimiento = Nothing
Set prsCuentas = Nothing
Exit Function

ErrMigrar:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    Set oFCOMImpresion = Nothing
    Set oDCOMCaptaMovimiento = Nothing
    Set prsCuentas = Nothing
    extornarMigracionCuentasAhorros = 0
End Function
'***Fin Agregado por ELRO el 20130325, según TI-ERS011-2013


' *** Agregado por RIRO 20130411 - Proyecto Ahorro - Recaudos ***

Public Function registraComisionEmpresa(ByVal cMovi As String, ByVal nMonto As Double, ByVal nMonedaComision As Integer)

    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

    On Error GoTo ErrGraba

    clsCap.AgregaMovOpeVarias cMovi, nMonto, "", "COMISIÓN SERVICIO RECAUDO - CLIENTE", nMonedaComision
    registraComisionEmpresa = True
    Exit Function

ErrGraba:

 Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    registraComisionEmpresa = False

End Function

Public Function registraComisionCliente(ByVal cMovi As String, ByVal nMonto As Double, ByVal nMonedaComision As Integer, strMovNro2 As String)
    
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim nMovNroCom As Long
    
    On Error GoTo ErrGraba
    
    clsCap.AgregaMov strMovNro2, gCargoClienteRecaudo, "COMISIÓN SERVICIO RECAUDO - CLIENTE", gMovEstContabMovContable, gMovFlagVigente
    nMovNroCom = clsCap.GetnMovNro(strMovNro2)
    
    clsCap.AgregaMovOpeVarias nMovNroCom, nMonto, "", "COMISIÓN SERVICIO RECAUDO - CLIENTE", nMonedaComision, 0
    
    clsCap.AgregaMovRef cMovi, nMovNroCom
    
    registraComisionCliente = True
    Exit Function

ErrGraba:

    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    registraComisionCliente = False
    
End Function

Public Function ExtornoPagoServicioRecaudo( _
                                            ByVal nComiEmp As Double, _
                                            ByVal nMoneda As Integer, _
                                            ByVal cCuenta As String, _
                                            ByVal nITF As Double, _
                                            ByVal nMovNro As Double, _
                                            ByVal strMovNro As String, _
                                            ByVal strMovNro2 As String, _
                                            ByVal nMonto As Double, _
                                            ByVal sGlosa As String, _
                                            Optional ByVal sCodConvenio As String, _
                                            Optional ByVal sCodCliente As String, _
                                            Optional ByVal bTieneWS As Boolean = False, _
                                            Optional ByVal cUrlSimaynas As String, Optional ByVal copecod As String, Optional ByVal psMovNroCap As String = "", _
                                            Optional ByRef psOpeCodExtornoCap As String = "", Optional ByRef psCtaAhoExt As String = "", _
                                            Optional ByRef pnMontoAhorroExt As Double = 0#, Optional ByRef psOperacionDescExt As String, _
                                            Optional ByRef pnITFAhoExt As Double, Optional ByRef psMovNroAExt As String = "", Optional ByRef psClienteExt As String = "") As Boolean
                                            'CTI1 ERS027-2019 add sCodConvenio, bTieneWS, cUrlSimaynas

    Dim sSql As String
'    Dim oConecta As COMConecta.DCOMConecta
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim reRef As ADODB.Recordset
    Dim nMovNro2 As Long
    Dim bValida As Boolean
    
    On Error GoTo errorRegistrarCobroServicioConvenio
    
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    bValida = clsCap.ExtornoRegistroServicioRecaudo(nComiEmp, nMoneda, cCuenta, nITF, nMovNro, strMovNro, strMovNro2, nMonto, sGlosa, _
                                                     sCodConvenio, sCodCliente, bTieneWS, cUrlSimaynas, copecod, psMovNroCap, _
                                                     psOpeCodExtornoCap, psCtaAhoExt, pnMontoAhorroExt, _
                                                     psOperacionDescExt, pnITFAhoExt, psMovNroAExt, psClienteExt) 'CTI1 ERS027-2019
    
    '    Set oConecta = New COMConecta.DCOMConecta
    '    oConecta.AbreConexion
    '    oConecta.BeginTrans
    '
    '    sSql = "exec stp_upd_ExtornarCobroServRecaudo " & nMovNro & ", " & nMonto
    '
    '    oConecta.Ejecutar sSql
    '    sSql = ""
                
    '        'Genera Mov =======================================================================
    '        Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    '        'INSERTA REGISTRO MOV
    '        clsCap.ActualizaEstadoMov nMovNro, gMovFlagExtornado
    '
    '        clsCap.AgregaMov strMovNro, gExtornoDepositoRecaudo, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    '
    '        nMovNro2 = clsCap.GetnMovNro(strMovNro)
    '
    '        'INSERTA REGISTRO POR PAGO DEL SERVICIO DE RECAUDO
    '        registrarMovimiento strMovNro, nMonto, gExtornoDepositoRecaudo, cCuenta, _
    '                            CaptacConcepto.gConcCapital, , nMovNro2
    '
    '        'INSERTA REGISTRO POR COMISION DE PARTE DE LA EMPRESA
    '        If nComiEmp > 0 Then registrarMovimiento strMovNro, nComiEmp, gExtornoComisionEmpresa, cCuenta, _
    '                             cComiServRecaudoEmpresa, nComiEmp, nMovNro2
    '
    '        'INSERTA REGISTRO POR PARTE DEL ITF
    '        If nITF > 0 Then registrarMovimiento strMovNro, nITF, gExtornoITF, cCuenta, _
    '                             gConcITFCliente, nITF, nMovNro2
    '
    '        'Extorno comision de cliente
    '        Set reRef = clsCap.MovAsociados(nMovNro)
    '
    '        If Not reRef.EOF And Not reRef.BOF Then
    '            clsCap.ActualizaEstadoMov reRef!nMovNroRef, gMovFlagExtornado
    '            clsCap.AgregaMov strMovNro2, gExtornoComisionCliente, sGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
    '        End If
    '    oConecta.CommitTrans
    
    ExtornoPagoServicioRecaudo = bValida
    '    oConecta.CierraConexion
    Exit Function
    
errorRegistrarCobroServicioConvenio:

    ExtornoPagoServicioRecaudo = False
    '    oConecta.RollbackTrans
    '    oConecta.CierraConexion
    '    Err.Raise Err.Number, "Error en << registrarCobroServicioConvenio >>  ", Err.Description

End Function

Public Function RegistrarCobroServicioConvenio(ByVal arrDetalleCobro As Variant, _
                                               ByVal strCodigoConvenio As String, _
                                               ByVal strCodigoCliente As String, _
                                               ByVal intTipoDoi As Integer, _
                                               ByVal strDOI As String, _
                                               ByVal strNomCliente As String, _
                                               ByVal dtFechaCobro As Date, _
                                               ByVal strMovNro As String, _
                                               ByVal strMovNro2 As String, _
                                               ByVal nComiEmp As Double, _
                                               ByVal nComiCli As Double, _
                                               ByVal nMoneda As Integer, _
                                               ByVal cCuenta As String, _
                                               ByVal nITF As Double, _
                                               Optional ByVal pnConnBase As ADODB.Connection = Nothing, _
                                               Optional ByVal pnTipoPagoRecaudo As TipoPagoRecaudo = gPagoNormal, _
                                               Optional ByVal pbTieneWS As Boolean = False, _
                                               Optional ByVal cUrlSimaynas As String = "", Optional ByVal pnTipoPago As Integer = 1, Optional ByVal psCtaCodCargo As String = "", _
                                               Optional ByRef pMatAho As Variant = "", _
                                               Optional ByVal pbITFAplica As Boolean, _
                                               Optional ByVal pnMontoITF As Currency, _
                                               Optional ByVal pnMontoCargoCta As Currency = 0#, _
                                               Optional ByVal pnMovNroTransfer As Long = -1, Optional pnMonedaTrans As Moneda = gMonedaNacional, _
                                               Optional ByVal pnMovNroRVD As Long = 0, _
                                               Optional ByVal pnMontoRVD As Currency = 0) As Boolean 'CTI1 ERS027-2019 add pbTieneWS, cUrlSimaynas
                                               'JUEZ 20150217 pnConnBase y pnTipoPagoRecaudo

    Dim sSql As String
    Dim bRespuesta As Boolean
    Dim v As Variant
    Dim arrCadena() As String
    Dim nMonto As Double
    Dim bValida As Boolean
    Dim oConecta As COMConecta.DCOMConecta
    'RIRO20141202 ***********
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
    Dim rsCta As ADODB.Recordset
    Dim sGlosa As String
    Dim nMovNro As String
    Dim dFecSis As Date
    Dim dUltMov As Date
    Dim nDiasTranscurridos As Long
    Dim nIntGanado As Double, nSaldoDisp As Double, nTasa As Double
    'END RIRO ***************

    On Error GoTo Error

    Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rsCta = clsMant.GetDatosCuentaAho(cCuenta)
    Set clsMant = Nothing
    
    dFecSis = CDate(Mid(strMovNro, 7, 2) & "/" & Mid(strMovNro, 5, 2) & "/" & Left(strMovNro, 4))
    dUltMov = rsCta("dUltCierre")
    nSaldoDisp = rsCta("nSaldoDisp")
    nTasa = rsCta("nTasaInteres")
    
    ' Calcula Interes
    nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
    If nDiasTranscurridos < 0 Then
        nDiasTranscurridos = 0
    End If
    nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
    dUltMov = DateAdd("d", -1, dFecSis)
    
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
'    clsCap.dBeginTrans
    bValida = clsCap.RegistroServicioRecaudo(arrDetalleCobro, strCodigoConvenio, strCodigoCliente, intTipoDoi, strDOI, strNomCliente, _
                                         dtFechaCobro, strMovNro, strMovNro2, nComiEmp, nComiCli, nITF, nIntGanado, cCuenta, pnConnBase, pnTipoPagoRecaudo, _
                                         pbTieneWS, cUrlSimaynas, pnTipoPago, psCtaCodCargo, pMatAho, pbITFAplica, pnMontoITF, pnMontoCargoCta, pnMovNroTransfer, pnMonedaTrans, _
                                         pnMovNroRVD, pnMontoRVD) 'CTI1 ERS027-2019
                                         'JUEZ 20150217 Se agregó pnConnBase y pnTipoPagoRecaudo
    
'    If bValida = False Then
'        clsCap.dRollbackTrans
'        RegistrarCobroServicioConvenio = False
'        Exit Function
'    End If
'    sGlosa = "Abono Cuenta = " & cCuenta
'    clsCap.AgregaMov strMovNro, gDepositoRecaudo, sGlosa
'    nMovNro = clsCap.GetnMovNro(strMovNro)
        
'    bValida = clsCap.RegistrarMovimientoServRecaudo(strMovNro, nMonto, gDepositoRecaudo, cCuenta, gConcCapital, nIntGanado)
'    If nComiEmp > 0 And bValida Then
'        bValida = clsCap.RegistrarMovimientoServRecaudo(strMovNro, nComiEmp, gCargoEmpresaRecaudo, cCuenta, cComiServRecaudoEmpresa, nIntGanado)
'    End If
'    If nITF > 0 And bValida Then
'        bValida = clsCap.RegistrarMovimientoServRecaudo(strMovNro, nMonto, gIFTRecaudo, cCuenta,   , nIntGanado)
'    End If
'    If nComiCli > 0 And bValida Then
'        bValida = clsCap.registraComisionCliente(nMovNro, nComiCli, CInt(Mid(cCuenta, 9, 1)), strMovNro2)
'    End If
'
'    If bValida Then
'        bValida = clsCap.registraOperacion(strCodigoConvenio)
'    End If
'
'    If bValida = False Then
'        clsCap.dRollbackTrans
'        RegistrarCobroServicioConvenio = False
'        Exit Function
'    End If
    
'    clsCap.dCommitTrans
    RegistrarCobroServicioConvenio = bValida
    Set clsCap = Nothing
    Exit Function
Error:
'    clsCap.dRollbackTrans
    RegistrarCobroServicioConvenio = False
End Function

'Public Function registrarMovimiento(ByVal cMovi As String, _
'                                    ByVal nMonto As Double, _
'                                    ByVal nOperacion As CaptacOperacion, _
'                                    ByVal sCuenta As String, _
'                                    ByVal nConcepto As CaptacConcepto, _
'                                    Optional ByVal nCargo As Double = 0, _
'                                    Optional ByVal nMovNro As String) As Boolean
'
'         Dim clsMant As COMDCaptaGenerales.DCOMCaptaGenerales
'         Dim rsCta As New ADODB.Recordset
'         Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
'         Dim nEstado As CaptacEstado
'         Dim nSaldoDisp As Double, nSaldoCnt As Double, nIntAcum As Double
'         Dim nIntSaldo As Double, nIntGanado As Double, nTasa As Double
'         Dim nSaldoInac As Double
'         Dim dUltMov As Date
'         Dim bInactiva As Boolean
'         Dim bInamovilizada As Boolean
'         Dim nExtracto As Long
'         Dim dFecSis As Date
'         Dim lnSaldoDisp As Double
'         Dim lnSaldoCont As Double
'         Dim bTrans As Boolean
'         Dim bTransaccion As Boolean
'         Dim nDiasTranscurridos As Long
'
'    On Error GoTo ErrGraba
'
'         dFecSis = CDate(Mid(cMovi, 7, 2) & "/" & Mid(cMovi, 5, 2) & "/" & Left(cMovi, 4))
'
'         Set clsMant = New COMDCaptaGenerales.DCOMCaptaGenerales
'         Set rsCta = clsMant.GetDatosCuentaAho(sCuenta)
'         Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
'         Set clsMant = Nothing
'
'         nEstado = rsCta("nPrdEstado")
'         nSaldoDisp = rsCta("nSaldoDisp")
'         nSaldoCnt = rsCta("nSaldo")
'         dUltMov = rsCta("dUltCierre")
'         nTasa = rsCta("nTasaInteres")
'         nIntAcum = rsCta("nIntAcum")
'         bInactiva = IIf(rsCta("bInactiva") = 0, False, True)
'         bInamovilizada = IIf(rsCta("bInmovilizada") = 0, False, True)
'         nExtracto = rsCta("nTransacc") + 1
'
'         'Calcula intereses
'        nDiasTranscurridos = DateDiff("d", dUltMov, dFecSis) - 1
'        If nDiasTranscurridos < 0 Then
'            nDiasTranscurridos = 0
'        End If
'        nIntGanado = GetInteres(nSaldoDisp, nTasa, nDiasTranscurridos, TpoCalcIntSimple)
'        dUltMov = DateAdd("d", -1, dFecSis)
'        Select Case nOperacion
'
'            'Efectua Deposito a Cuenta de la Empresa, incluyendo la comision de la empresa
'            Case operacionesrecaudo.gDepositoRecaudo
'
'                    nSaldoCnt = nSaldoCnt + nMonto
'                    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
'                    nSaldoDisp = nSaldoDisp + nMonto
'                    clsCap.ActualizadUltContactoAho sCuenta, dFecSis
'                    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, nConcepto, nMonto
'                    clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, cMovi, True
'                    clsCap.UltimaActualizacionCuenta sCuenta, nMovNro
'
'            'Efectua retiro de la cuenta de la empresa, por concepto de comision de empresa
'            Case operacionesrecaudo.gCargoEmpresaRecaudo, operacionesrecaudo.gIFTRecaudo
'
'                    nSaldoCnt = nSaldoCnt - nMonto
'                    nSaldoDisp = nSaldoDisp - nMonto
'                    clsCap.ActualizadUltContactoAho sCuenta, dFecSis
'                    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, nConcepto, nMonto
'                    clsCap.ActualizaAbonoCaptacion sCuenta, -nMonto, -nMonto, nIntGanado, dUltMov, cMovi, True
'                    clsCap.UltimaActualizacionCuenta sCuenta, nMovNro
'
'            Case operacionesrecaudo.gExtornoDepositoRecaudo
'
'                    nSaldoCnt = nSaldoCnt - nMonto
'                    clsCap.ActualizaSaldoAnteriorAho sCuenta, nSaldoDisp
'                    nSaldoDisp = nSaldoDisp - nMonto
'                    clsCap.ActualizadUltContactoAho sCuenta, dFecSis
'                    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, nConcepto, nMonto
'                    clsCap.ActualizaAbonoCaptacion sCuenta, -nMonto, -nMonto, nIntGanado, dUltMov, cMovi, True
'                    clsCap.UltimaActualizacionCuenta sCuenta, nMovNro
'
'            Case operacionesrecaudo.gExtornoComisionEmpresa, operacionesrecaudo.gExtornoITF
'
'                    nSaldoCnt = nSaldoCnt + nMonto
'                    nSaldoDisp = nSaldoDisp + nMonto
'                    clsCap.ActualizadUltContactoAho sCuenta, dFecSis
'                    clsCap.AgregaMovCap nMovNro, nOperacion, sCuenta, nMonto, nSaldoDisp, nSaldoCnt
'                    clsCap.AgregaMovCapDet nMovNro, nOperacion, sCuenta, nConcepto, nMonto
'                    clsCap.ActualizaAbonoCaptacion sCuenta, nMonto, nMonto, nIntGanado, dUltMov, cMovi, True
'                    clsCap.UltimaActualizacionCuenta sCuenta, nMovNro
'
'        End Select
'
'    registrarMovimiento = True
'    Exit Function
'
'ErrGraba:
'
'Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
'    registrarMovimiento = False
'
'End Function

Public Function ImprimeVaucherRecaudo(ByVal rsVaucher As ADODB.Recordset, ByVal impTMU As Boolean, ByVal cUser As String) As String
    
    Dim oImp As COMFunciones.FCOMVarImpresion
    Dim sTexto As String
    Dim nEspacio As Integer
    Dim nEspacioMora As Integer
    Dim nAncho As Integer
    Dim nTemporal As Integer
    Dim sMoneda As String
    '*************APRI20170426*****************************
    Dim cMonedaSimbolo As COMDConstantes.DCOMConstantes
    Set cMonedaSimbolo = New COMDConstantes.DCOMConstantes
    Dim cSimbolo As String
    cSimbolo = cMonedaSimbolo.gcPEN_SIMBOLO()
    '******************************************************
    If rsVaucher.EOF Or rsVaucher.BOF Then
        ImprimeVaucherRecaudo = ""
        Exit Function
    End If
    
    Set oImp = New COMFunciones.FCOMVarImpresion
    oImp.Inicia gEPSON
    sTexto = ""
    sTexto = sTexto & oImp.gPrnInicializa
    sTexto = sTexto & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    sTexto = sTexto & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    sTexto = sTexto & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    sTexto = sTexto & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    sTexto = sTexto & oImp.gPrnCondensadaOFF ' cancela condensada
    sTexto = sTexto & oImp.gPrnNegritaOFF
    sTexto = sTexto & vbNewLine
    
    If impTMU Then
            
            sTexto = sTexto & Left("CMAC MAYNAS" & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(19), 19) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & vbNewLine
            sTexto = sTexto & Left("Fecha: " & Left(rsVaucher!fecha, 10) & Space(4) & "Hora: " & Right(rsVaucher!fecha, 8) & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!cPersNombre & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!cNombreConvenio & Space(35), 35) & vbNewLine
            
            If rsVaucher!nTipoConvenio = Convenio_VCM Then
                sTexto = sTexto & Left("Usuario: " & rsVaucher!cCodCliente & Space(35), 35) & vbNewLine
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(35), 35) & vbNewLine
            ElseIf rsVaucher!nTipoConvenio = Convenio_VC Or rsVaucher!nTipoConvenio = Convenio_VI Then
                sTexto = sTexto & Left("Usuario: " & rsVaucher!cCodCliente & Space(35), 35) & vbNewLine
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(35), 35) & vbNewLine
                
            ElseIf rsVaucher!nTipoConvenio = Convenio_SV Then
                sTexto = sTexto & Left(rsVaucher!cTipoDoi & ": " & rsVaucher!cDOI & Space(35), 35) & vbNewLine
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(35), 35) & vbNewLine
            
            ElseIf rsVaucher!nTipoConvenio = Convenio_VP Then
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(35), 35) & vbNewLine
            End If
            sTexto = sTexto & vbNewLine
            sTexto = sTexto & String(7, "-") & AlinearTexto("SERVICIO DE RECAUDO", 21, Centro) & String(7, "-") & vbNewLine
            Do While (Not rsVaucher.EOF And Not rsVaucher.BOF)
                 'Espacio de importe Pago ==== /*
                If rsVaucher!importepago >= 100000 Then
                    nEspacio = 5
                ElseIf rsVaucher!importepago >= 10000 Then
                    nEspacio = 6
                ElseIf rsVaucher!importepago >= 1000 Then
                    nEspacio = 7
                ElseIf rsVaucher!importepago >= 100 Then
                    nEspacio = 9
                ElseIf rsVaucher!importepago >= 10 Then
                    nEspacio = 10
                Else
                    nEspacio = 11
                End If
                ' Fin de espacio importe pago *\
                
                'Espacio de Mora
                If rsVaucher!nMora >= 100000 Then
                    nEspacioMora = 5
                ElseIf rsVaucher!nMora >= 10000 Then
                    nEspacioMora = 6
                ElseIf rsVaucher!nMora >= 1000 Then
                    nEspacioMora = 7
                ElseIf rsVaucher!nMora >= 100 Then
                    nEspacioMora = 9
                ElseIf rsVaucher!nMora >= 10 Then
                    nEspacioMora = 10
                Else
                    nEspacioMora = 11
                End If
                'Fin de espacio de mora
                
                Select Case rsVaucher!nTipoConvenio
                    Case Convenio_VC, Convenio_VI
                        'Insertando valor del importe pagado
                        sTexto = sTexto & Left(Left(Left(rsVaucher!cServicio & Space(5), 5) & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, "", "-") & rsVaucher!cConcepto & Space(20), 20) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(35), 35) & vbNewLine
                        'Insertando valor de la mora
                        If rsVaucher!nMora > 0 Then
                            sTexto = sTexto & Left(Left(Left("Mora " & Space(5), 5) & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, " ", "-") & rsVaucher!cConcepto & Space(20), 20) & Space(nEspacioMora) & Format$(rsVaucher!nMora, "#,##0.00") & Space(35), 35) & vbNewLine
                        End If
                    Case Convenio_VCM
                        'Insertando valor del importe pagado
                        'sTexto = sTexto & Left(Left(Left(rsVaucher!cServicio & Space(5), 5) & IIf(Len(Trim(rsVaucher!dFechaVencimiento)) = 0, "", "-") & Format(CDate(rsVaucher!dFechaVencimiento), "mmm yyyy") & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, " ", "-" & Right(Space(5) & rsVaucher!cConcepto, 5)) & Space(20), 20) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(35), 35) & vbNewLine
                        sTexto = sTexto & LTrim(RTrim(Left(rsVaucher!cConcepto, 25))) & "-" & LTrim(RTrim(Right(rsVaucher!cConcepto, 5))) & Space(35 - Len(LTrim(RTrim(Left(rsVaucher!cConcepto, 25))) & "-" & LTrim(RTrim(Right(rsVaucher!cConcepto, 5))) & Format$(rsVaucher!importepago, "#,##0.00"))) & Format$(rsVaucher!importepago, "#,##0.00") & vbNewLine 'APRI 20170426
                        'Insertando valor de la mora
                        If rsVaucher!nMora > 0 Then
                            sTexto = sTexto & Left(Left(Left("Mora " & Space(5), 5) & Space(20), 20) & Space(nEspacioMora) & Format$(rsVaucher!nMora, "#,##0.00") & Space(35), 35) & vbNewLine
                        End If
                    Case Convenio_VP
                        sTexto = sTexto & Left(Left(Format$(rsVaucher!cId, "##00") & "-" & Left(rsVaucher!cConcepto, 25) & Space(20), 20) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(35), 35) & vbNewLine
                    Case Convenio_SV
                        sTexto = sTexto & Left(Left(rsVaucher!cConcepto & Space(20), 20) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(35), 35) & vbNewLine
                End Select
                rsVaucher.MoveNext
            Loop
            rsVaucher.MoveFirst
            'Espacio de importe subtotal == /*
            If rsVaucher!SubTotal >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!SubTotal >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!SubTotal >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!SubTotal >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!SubTotal >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            'Fin de espacio de subtotal == *\
            If rsVaucher.RecordCount > 1 Then
                sTexto = sTexto & Left(Left(Space(4) & "Sub Total" & Space(25), 20) & Space(nEspacio) & Format$(rsVaucher!SubTotal, "#,##0.00") & Space(35), 35) & vbNewLine
            End If
            'Espacio de importe Comision ====== /*
            If rsVaucher!Comision >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!Comision >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!Comision >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!Comision >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!Comision >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            'Fin de espacio de Comision======= *\
            sTexto = sTexto & Left(Left("Comisión" & Space(25), 20) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(35), 35) & vbNewLine

            'Espacio de importe Comision ====== /*
           If rsVaucher!pagototal >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!pagototal >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!pagototal >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!pagototal >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!pagototal >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            'Fin de espacio de Comision======= *\
            sMoneda = IIf(rsVaucher!Moneda = "SOLES", cSimbolo, IIf(rsVaucher!Moneda = "DOLAR", "  $ ", "Otr "))  'APRI 20170426 INCLUYO cSimbolo
            sTexto = sTexto & Left(Left("Total Pagado: " & Space(18), 18) & Space(nEspacio) & sMoneda & Format$(rsVaucher!pagototal, "#,##0.00") & Space(35), 35) & vbNewLine 'MODIFICO APRI 20170426
           
                If Len(Trim(rsVaucher!cCtaCodCargo)) = 18 Then
                    sTexto = sTexto & "===================================" & vbNewLine
                    sTexto = sTexto & "Datos de cuenta origen:" & vbNewLine
                    sTexto = sTexto & Left("Nro. de cuenta" & Space(25), 15) & Right(Space(35) & Trim(rsVaucher!cCtaCodCargo), 20) & vbNewLine
                    sTexto = sTexto & Left(Left("Monto cargado: " & Space(18), 18) & Space(nEspacio) & sMoneda & Format$(rsVaucher!pagototal, "#,##0.00") & Space(35), 35) & vbNewLine 'MODIFICO APRI 20170426
                End If
      
            sTexto = sTexto & "===================================" & vbNewLine
        
            sTexto = sTexto & "***ESTIMADO CLIENTE, ANTES DE RETIR" & vbNewLine
            sTexto = sTexto & "ARSE DE LA VENTANILLA VERIFIQUE QUE" & vbNewLine
            sTexto = sTexto & "LOS DATOS  CONSIGNADOS CORRESPONDAN" & vbNewLine
            sTexto = sTexto & "A LA OPERACION SOLICITADA POR USTED" & vbNewLine
             sTexto = sTexto & "***" & vbNewLine
            sTexto = sTexto & cUser & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine
            sTexto = sTexto & Chr(27) & "m" & Chr(10)
    Else
    
            nAncho = 40
            'Dim nTemporal As Integer
            sTexto = sTexto & Left("CMAC MAYNAS" & Space(40), 40) & _
                  Space(15) & Left("CMAC MAYNAS" & Space(40), 40) & vbNewLine
                  
            sTexto = sTexto & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(24), 24) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & _
                  Space(15) & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(24), 24) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & vbNewLine
                                            
            sTexto = sTexto & Left("Fecha: " & Left(rsVaucher!fecha, 10) & Space(9) & "Hora: " & Right(rsVaucher!fecha, 8) & Space(40), 40) & _
                  Space(15) & Left("Fecha: " & Left(rsVaucher!fecha, 10) & Space(9) & "Hora: " & Right(rsVaucher!fecha, 8) & Space(40), 40) & vbNewLine
                                                        
            sTexto = sTexto & Left(rsVaucher!cPersNombre & Space(40), 40) & _
                  Space(15) & Left(rsVaucher!cPersNombre & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(rsVaucher!cNombreConvenio & Space(40), 40) & _
                  Space(15) & Left(rsVaucher!cNombreConvenio & Space(40), 40) & vbNewLine
                                                                                     
            If rsVaucher!nTipoConvenio = Convenio_VC Or rsVaucher!nTipoConvenio = Convenio_VI Or rsVaucher!nTipoConvenio = Convenio_VCM Then
                
                sTexto = sTexto & Left("Usuario: " & rsVaucher!cCodCliente & Space(40), 40) & _
                      Space(15) & Left("Usuario : " & rsVaucher!cCodCliente & Space(40), 40) & vbNewLine
                      
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(40), 40) & _
                  Space(15) & Left(rsVaucher!cNomCliente & Space(40), 40) & vbNewLine

            ElseIf rsVaucher!nTipoConvenio = Convenio_SV Then
                               
                sTexto = sTexto & Left(rsVaucher!cTipoDoi & ": " & rsVaucher!cDOI & Space(40), 40) & _
                      Space(15) & Left(rsVaucher!cTipoDoi & ": " & rsVaucher!cDOI & Space(40), 40) & vbNewLine
                      
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(40), 40) & _
                  Space(15) & Left(rsVaucher!cNomCliente & Space(40), 40) & vbNewLine
                
            ElseIf rsVaucher!nTipoConvenio = Convenio_VP Then
                
                sTexto = sTexto & Left(rsVaucher!cNomCliente & Space(40), 40) & _
                  Space(15) & Left(rsVaucher!cNomCliente & Space(40), 40) & vbNewLine
                
            End If
                        
            sTexto = sTexto & vbNewLine
            
            sTexto = sTexto & String(8, "-") & AlinearTexto("SERVICIO DE RECAUDO", 22, Centro) & String(9, "-") & _
                  Space(15) & String(8, "-") & AlinearTexto("SERVICIO DE RECAUDO", 22, Centro) & String(9, "-") & vbNewLine & vbNewLine
            
            Do While (Not rsVaucher.EOF And Not rsVaucher.BOF)
                'Espacio de importe Pago ==== /*
                If rsVaucher!importepago >= 100000 Then
                    nEspacio = 5
                ElseIf rsVaucher!importepago >= 10000 Then
                    nEspacio = 6
                ElseIf rsVaucher!importepago >= 1000 Then
                    nEspacio = 7
                ElseIf rsVaucher!importepago >= 100 Then
                    nEspacio = 9
                ElseIf rsVaucher!importepago >= 10 Then
                    nEspacio = 10
                Else
                    nEspacio = 11
                End If
                'Fin de espacio importe pago *\
                'Espacio de Mora
                If rsVaucher!nMora >= 100000 Then
                    nEspacioMora = 5
                ElseIf rsVaucher!nMora >= 10000 Then
                    nEspacioMora = 6
                ElseIf rsVaucher!nMora >= 1000 Then
                    nEspacioMora = 7
                ElseIf rsVaucher!nMora >= 100 Then
                    nEspacioMora = 9
                ElseIf rsVaucher!nMora >= 10 Then
                    nEspacioMora = 10
                Else
                    nEspacioMora = 11
                End If
                'Fin de espacio de mora
                
                Select Case rsVaucher!nTipoConvenio
                    Case Convenio_VC, Convenio_VI
                        sTexto = sTexto & Left(Left(Left(rsVaucher!cServicio & Space(7), 7) & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, "", " - ") & rsVaucher!cConcepto & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & _
                              Space(15) & Left(Left(Left(rsVaucher!cServicio & Space(7), 7) & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, "", " - ") & rsVaucher!cConcepto & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & vbNewLine
                              
                        If rsVaucher!nMora > 0 Then
                            sTexto = sTexto & Left(Left("Mora " & rsVaucher!cConcepto & Space(50), 25) & Space(nEspacioMora) & Format$(rsVaucher!nMora, "#,##0.00") & Space(40), 40) & _
                                  Space(15) & Left(Left("Mora " & rsVaucher!cConcepto & Space(50), 25) & Space(nEspacioMora) & Format$(rsVaucher!nMora, "#,##0.00") & Space(40), 40) & vbNewLine
                        End If
                        
                    Case Convenio_VCM
'                        sTexto = sTexto & Left(Left(Left(rsVaucher!cServicio & Space(7), 7) & IIf(Len(Trim(rsVaucher!dFechaVencimiento)) = 0, "", "-") & Format(CDate(rsVaucher!dFechaVencimiento), "mmm yyyy") & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, " ", "-" & Right(Space(5) & rsVaucher!cConcepto, 5)) & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & _
'                              Space(15) & Left(Left(Left(rsVaucher!cServicio & Space(7), 7) & IIf(Len(Trim(rsVaucher!dFechaVencimiento)) = 0, "", "-") & Format(CDate(rsVaucher!dFechaVencimiento), "mmm yyyy") & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, " ", "-" & Right(Space(5) & rsVaucher!cConcepto, 5)) & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & vbNewLine
                                                             
                        sTexto = sTexto & LTrim(RTrim(Left(rsVaucher!cConcepto, 25))) & "-" & LTrim(RTrim(Right(rsVaucher!cConcepto, 5))) & Space(40 - Len(LTrim(RTrim(Left(rsVaucher!cConcepto, 25))) & "-" & LTrim(RTrim(Right(rsVaucher!cConcepto, 5))) & Format$(rsVaucher!importepago, "#,##0.00"))) & Format$(rsVaucher!importepago, "#,##0.00") & Space(15) & _
                                          LTrim(RTrim(Left(rsVaucher!cConcepto, 25))) & "-" & LTrim(RTrim(Right(rsVaucher!cConcepto, 5))) & Space(40 - Len(LTrim(RTrim(Left(rsVaucher!cConcepto, 25))) & "-" & LTrim(RTrim(Right(rsVaucher!cConcepto, 5))) & Format$(rsVaucher!importepago, "#,##0.00"))) & Format$(rsVaucher!importepago, "#,##0.00") & vbNewLine 'APRI 20170426
                              
                        If rsVaucher!nMora > 0 Then
                            sTexto = sTexto & Left(Left("Mora " & Space(50), 25) & Space(nEspacioMora) & Format$(rsVaucher!nMora, "#,##0.00") & Space(40), 40) & _
                                  Space(15) & Left(Left("Mora " & Space(50), 25) & Space(nEspacioMora) & Format$(rsVaucher!nMora, "#,##0.00") & Space(40), 40) & vbNewLine
                        End If
                    Case Convenio_VP
                        sTexto = sTexto & Left(Left(Format$(rsVaucher!cId, "##00") & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, "", "-") & Left(rsVaucher!cConcepto, 25) & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & _
                              Space(15) & Left(Left(Format$(rsVaucher!cId, "##00") & IIf(Len(Trim(rsVaucher!cConcepto)) = 0, "", "-") & Left(rsVaucher!cConcepto, 25) & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & vbNewLine
                    
                    Case Convenio_SV
                        sTexto = sTexto & Left(Left(rsVaucher!cConcepto & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & _
                              Space(15) & Left(Left(rsVaucher!cConcepto & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!importepago, "#,##0.00") & Space(40), 40) & vbNewLine
                End Select
               
                rsVaucher.MoveNext
              
            Loop
            
            rsVaucher.MoveFirst
            
            'Espacio de importe subtotal == /*
            
            If rsVaucher!SubTotal >= 100000 Then
                    nEspacio = 5
            ElseIf rsVaucher!SubTotal >= 10000 Then
                    nEspacio = 6
            ElseIf rsVaucher!SubTotal >= 1000 Then
                    nEspacio = 7
            ElseIf rsVaucher!SubTotal >= 100 Then
                    nEspacio = 9
            ElseIf rsVaucher!SubTotal >= 10 Then
                    nEspacio = 10
            Else
                    nEspacio = 11
            End If
            
            'Fin de espacio de subtotal == *\
            
            If rsVaucher.RecordCount > 1 Then
                
                sTexto = sTexto & Left(Left(Space(4) & "Sub Total" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!SubTotal, "#,##0.00") & Space(40), 40) & _
                      Space(15) & Left(Left(Space(4) & "Sub Total" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!SubTotal, "#,##0.00") & Space(40), 40) & vbNewLine
                
            End If
            
            'Espacio de importe Comision ====== /*
            
            If rsVaucher!Comision >= 100000 Then
                    nEspacio = 5
            ElseIf rsVaucher!Comision >= 10000 Then
                    nEspacio = 6
            ElseIf rsVaucher!Comision >= 1000 Then
                    nEspacio = 7
            ElseIf rsVaucher!Comision >= 100 Then
                    nEspacio = 9
            ElseIf rsVaucher!Comision >= 10 Then
                    nEspacio = 10
            Else
                    nEspacio = 11
            End If
            
            'Fin de espacio de Comision======= *\
            
            sTexto = sTexto & Left(Left("Comisión" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(40), 40) & _
                  Space(15) & Left(Left("Comisión" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(40), 40) & vbNewLine
            
            'Espacio de importe Comision ====== /*
            
           If rsVaucher!pagototal >= 100000 Then
                    nEspacio = 5
            ElseIf rsVaucher!pagototal >= 10000 Then
                    nEspacio = 6
            ElseIf rsVaucher!pagototal >= 1000 Then
                    nEspacio = 7
            ElseIf rsVaucher!pagototal >= 100 Then
                    nEspacio = 9
            ElseIf rsVaucher!pagototal >= 10 Then
                    nEspacio = 10
            Else
                    nEspacio = 11
            End If
            
            'Fin de espacio de Comision======= *\
            
            
            sMoneda = IIf(rsVaucher!Moneda = "SOLES", cSimbolo, IIf(rsVaucher!Moneda = "DOLAR", "  $ ", "Otr ")) 'APRI 20170426 INCLUYO cSimbolo
            
            sTexto = sTexto & Left(Left("Total Pagado: " & Space(52), 23) & Space(nEspacio) & sMoneda & Format$(rsVaucher!pagototal, "#,##0.00") & Space(40), 40) & _
            Space(15) & Left(Left("Total Pagado: " & Space(52), 23) & Space(nEspacio) & sMoneda & Format$(rsVaucher!pagototal, "#,##0.00") & Space(40), 40) & vbNewLine & vbNewLine 'MODIFICO APRI 20170426
            
            If Len(Trim(rsVaucher!cCtaCodCargo)) = 18 Then
                sTexto = sTexto & "========================================" & Space(15) & "========================================" & vbNewLine
                sTexto = sTexto & Left("Datos de cuenta origen:" & Space(52), 40) & Space(15) & Left("Datos de cuenta origen:" & Space(52), 40) & vbNewLine
                sTexto = sTexto & Left("Nro. de cuenta" & Space(25), 20) & Right(Space(35) & Trim(rsVaucher!cCtaCodCargo), 20) & Space(15) & Left("Nro. de cuenta" & Space(25), 20) & Right(Space(35) & Trim(rsVaucher!cCtaCodCargo), 20) & vbNewLine
                sTexto = sTexto & Left(Left("Monto cargado: " & Space(52), 23) & Space(nEspacio) & sMoneda & Format$(rsVaucher!pagototal, "#,##0.00") & Space(40), 40) & _
                Space(15) & Left(Left("Monto cargado: " & Space(52), 23) & Space(nEspacio) & sMoneda & Format$(rsVaucher!pagototal, "#,##0.00") & Space(40), 40) & vbNewLine
             End If
            
            sTexto = sTexto & "========================================" & Space(15) & "========================================" & vbNewLine
            sTexto = sTexto & "***ESTIMADO CLIENTE,  ANTES DE RETIRARSE" & Space(15) & "***ESTIMADO CLIENTE,  ANTES DE RETIRARSE" & vbNewLine & _
                              "DE LA VENTANILLA VERIFIQUE QUE LOS DATOS" & Space(15) & "DE LA VENTANILLA VERIFIQUE QUE LOS DATOS" & vbNewLine & _
                              "CONSIGNADOS CORRESPONDAN A LA OPERACION " & Space(15) & "CONSIGNADOS CORRESPONDAN A LA OPERACION " & vbNewLine & _
                              Left("SOLICITADA POR USTED***" & Space(40), 40) & Space(15) & Left("SOLICITADA POR USTED***" & Space(40), 40) & vbNewLine
        
            sTexto = sTexto & Left(cUser & Space(40), 40) & Space(15) & cUser & vbNewLine & vbNewLine & vbNewLine & vbNewLine
    End If
    
    sTexto = Replace(sTexto, "k", "")
    sTexto = Replace(sTexto, "H", "")
    sTexto = Replace(sTexto, "B", "")
    sTexto = Replace(sTexto, "M", "")
    sTexto = Replace(sTexto, "@", "")
    sTexto = Replace(sTexto, "2", "")
    
    ImprimeVaucherRecaudo = sTexto
    
    Exit Function


End Function

Public Function getDatosVaucherRecaudo(ByVal nMovNro As Double) As ADODB.Recordset

    Dim sSql As String
    Dim oConecta As COMConecta.DCOMConecta
    
    On Error GoTo Error
        sSql = "exec stp_sel_datosVaucherRecaudo "
        sSql = sSql & " " & nMovNro
        
        Set oConecta = New COMConecta.DCOMConecta
        oConecta.AbreConexion
        Set getDatosVaucherRecaudo = oConecta.CargaRecordSet(sSql)
        oConecta.CierraConexion
        Set oConecta = Nothing
        Exit Function
Error:
    Set getDatosVaucherRecaudo = Nothing
    Set oConecta = Nothing
    Err.Raise Err.Number, "Buscar Usuario ", Err.Description
    
End Function

'Public Function registraOperacion(ByVal cCodConvenio As String)
'
'    Dim sSql As String
'    Dim oConecta As COMConecta.DCOMConecta
'
'    On Error GoTo registraOperacion
'
'        sSql = "exec stp_upd_IngresarOperacionConvenio '"
'        sSql = sSql & cCodConvenio & "'"
'
'        Set oConecta = New COMConecta.DCOMConecta
'        oConecta.AbreConexion
'        oConecta.CargaRecordSet (sSql)
'        oConecta.CierraConexion
'        Set oConecta = Nothing
'        Exit Function
'
'registraOperacion:
'    Err.Raise Err.Number, "Agregar Convenio", "Error al registrar nuevo convenio, contactarse con el area de TI"
'
'End Function

Public Function AlinearTexto(ByVal psTexto As String, ByVal pnTamano As Integer, Optional ByVal pnAlineamiento As Alineamiento = izquierda, Optional ByVal psCaracterDeRelleno As String = " ") As String
    Dim lsTemp As String
    Dim lnPosIni As Long
    Select Case pnAlineamiento
    Case 0
        AlinearTexto = Left(psTexto & String(pnTamano, psCaracterDeRelleno), pnTamano)
    Case 1
        AlinearTexto = Right(String(pnTamano, psCaracterDeRelleno) & psTexto, pnTamano)
    Case 2
        psTexto = Trim(psTexto)
        If Len(psTexto) > pnTamano Then
            psTexto = Left(psTexto, pnTamano)
        Else
            lnPosIni = Int(pnTamano / 2) - Int(Len(psTexto) / 2)
            psTexto = String(lnPosIni, psCaracterDeRelleno) & psTexto & String(lnPosIni, psCaracterDeRelleno)
            AlinearTexto = psTexto
        End If
    End Select
    
End Function

' *** Fin RIRO ***
'WIOR 20130419 ****************************************************
Public Function EsDepositoGarantia(ByVal psCtaCod As String) As Boolean
Dim oCapGen As COMDCaptaGenerales.DCOMCaptaMovimiento
Set oCapGen = New COMDCaptaGenerales.DCOMCaptaMovimiento

EsDepositoGarantia = oCapGen.EsDepositoGarantia(psCtaCod)

End Function
'WIOR FIN *********************************************************

'Add by GITU 2013-05-28
Public Function EsOficialOAuxiliardeCumplimiento(ByVal psCodCargo As String) As Boolean
Dim oCapGen As COMDCaptaGenerales.DCOMCaptaMovimiento

    Set oCapGen = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    EsOficialOAuxiliardeCumplimiento = oCapGen.ValidaEsOficialoAuxiliardeCumplimiento(psCodCargo)

End Function
'End GITU
'***Agregado por ELRO el 20130710, según RFC1306270002
Public Function debitarCuentaConvenioServicioPago(ByVal psMovNro As String, ByVal psOpeCod As String, _
                                                  ByVal pnIdSerPag As Long, ByVal pnDebito As Currency, ByVal pnITF As Currency, _
                                                  ByVal prsDebitos As ADODB.Recordset, ByVal psNombreCMAC As String, ByVal psNomAge As String, _
                                                  ByVal psEmpresa As String, ByVal psDOI As String, ByVal psBeneficiario As String, _
                                                  ByVal psNombreConvenio As String, ByRef psBoleta As String, _
                                                  ByRef psLpt As String, Optional ByRef pbImpTMU As Boolean = False) As Long
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oNCOMCaptaGenerales As NCOMCaptaGenerales
Set oNCOMCaptaGenerales = New NCOMCaptaGenerales
Dim oNCOMCaptaImpresion As NCOMCaptaImpresion
Set oNCOMCaptaImpresion = New NCOMCaptaImpresion
Dim rsTitular As ADODB.Recordset
Dim rsCuenta As ADODB.Recordset
Dim lbTrans As Boolean
Dim ldUltCierre, ldFecSis As Date
Dim lnDiasTranscurridos As Integer
Dim lnMovNro As Long
Dim lnIntGanado As Double
Dim lsCodUser As String
Dim lsImpFirmas As String
Dim lsImpBoleta As String
Dim lbOrdPag As Boolean
Dim lnConfirmar, lnConfirmar2 As Long
Dim lsFecha, lsHora, lsGlosa, lsMoneda As String
Dim lnComision, lnPenalidad As Currency
Dim i As Long
Dim lnNroOpe As Long

lsFecha = Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4)
lsHora = Mid(psMovNro, 9, 2) & ":" & Mid(psMovNro, 11, 2) & ":" & Mid(psMovNro, 13, 2)
ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
lsCodUser = Right(psMovNro, 4)
lbTrans = False

lsGlosa = "Se debito " & pnDebito & " al beneficiario: " & psDOI & "-" & psBeneficiario
On Error GoTo ErrDebito

'Inicia la transaccion
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
oDCOMCaptaMovimiento.dbCmact.BeginTrans
lbTrans = True

Randomize

For i = 0 To Rnd(2000) * 1000
Next i

oDCOMCaptaMovimiento.AgregaMov psMovNro, psOpeCod, lsGlosa
lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)

Set rsCuenta = New ADODB.Recordset
Set rsCuenta = oDCOMCaptaMovimiento.devolverDatosCuentaConvenioServicioPago(pnIdSerPag)

If Not (rsCuenta.BOF And rsCuenta.EOF) Then
    
    If CInt(rsCuenta!nPrdEstado) = gCapEstAnulada Or CInt(rsCuenta!nPrdEstado) = gCapEstCancelada Then
        If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
        Set oDCOMCaptaMovimiento = Nothing
        Set oNCOMCaptaGenerales = Nothing
        Set rsCuenta = Nothing
        debitarCuentaConvenioServicioPago = -2
        Exit Function
    End If
    
    If Mid(rsCuenta!cCtaCod, 9, 1) = "1" Then
        '''lsMoneda = "SOLES" 'marg ers044-2016
        lsMoneda = StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) 'marg ers044-2016
    Else
        lsMoneda = "DÓLARES"
    End If
    
    '***Calculamos los intereses ganados****
    lnDiasTranscurridos = DateDiff("d", CDate(rsCuenta!dUltCierre), ldFecSis) - 1
    If lnDiasTranscurridos < 0 Then
       lnDiasTranscurridos = 0
    End If
    lnIntGanado = GetInteres(rsCuenta!nSaldoDisp, rsCuenta!ntasainteres, lnDiasTranscurridos, TpoCalcIntSimple)
    '***Fin Calculamos los interesesganados
 
    ldUltCierre = DateAdd("d", -1, ldFecSis)
    
    '***Para establecer el monto de comisión y la penalidad****
    lnComision = 0: lnPenalidad = 0: lnNroOpe = rsCuenta!nNroOpe:
    prsDebitos.MoveFirst
    Do While Not prsDebitos.EOF
        If prsDebitos!Pagar = "1" Then
            '***Se cobra la comisión del convenio a la cuenta si es mayor a cero****
            If rsCuenta!nComision > 0 Then
                lnComision = lnComision + CCur(rsCuenta!nComision)
            End If
            '***Fin Se cobra la comisión del convenio a la cuenta si es mayor a cero
            '***Se cobra la penalidad a la cuenta si supera el límite máximo de operaciones****
            If lnNroOpe >= rsCuenta!nLimMaxOpeDia Then
                lnPenalidad = lnPenalidad + CCur(rsCuenta!nPenalidad)
             End If
            '***Fin Se cobra la penalidad a la cuenta si supera el límite máximo de operaciones
            lnNroOpe = lnNroOpe + 1
        End If
        prsDebitos.MoveNext
    Loop
    '***Fin Para establecer el monto de comisión y la penalidad
    
    '***Verifica si tiene saldo suficiente para el debito****
    If CCur(rsCuenta!nSaldoDisp) < (pnDebito + lnComision + lnPenalidad + pnITF) Then
        If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
        Set oDCOMCaptaMovimiento = Nothing
        Set oNCOMCaptaGenerales = Nothing
        Set rsCuenta = Nothing
        debitarCuentaConvenioServicioPago = -1
        Exit Function
    End If
    '***Fin verifica si tiene saldo suficiente para el debito
    
    '***Se debita de la cuenta convenio****
    oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gCapConSerPagDeb, rsCuenta!cCtaCod, pnDebito, CCur(rsCuenta!nSaldoDisp) - pnDebito, CCur(rsCuenta!nSaldo) - pnDebito
    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gCapConSerPagDeb, rsCuenta!cCtaCod, gConcCapital, pnDebito
    '***Fin Se debita de la cuenta convenio
    
    '***Se cobra la comisión del convenio a la cuenta si es mayor a cero****
    If lnComision > 0 Then
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gCapConSerPagDebCom, rsCuenta!cCtaCod, lnComision, CCur(rsCuenta!nSaldoDisp) - (pnDebito + lnComision), CCur(rsCuenta!nSaldo) - (pnDebito + lnComision)
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gCapConSerPagDebCom, rsCuenta!cCtaCod, gComConSerPag, lnComision
    End If
    '***Fin Se cobra la comisión del convenio a la cuenta si es mayor a cero
    '***Se cobra la penalidad a la cuenta si supera el límite máximo de operaciones****
    If lnPenalidad > 0 Then
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gCapConSerPagDebPen, rsCuenta!cCtaCod, lnPenalidad, CCur(rsCuenta!nSaldoDisp) - (pnDebito + lnComision + lnPenalidad), CCur(rsCuenta!nSaldo) - (pnDebito + lnComision + lnPenalidad)
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gCapConSerPagDebPen, rsCuenta!cCtaCod, gPenConSerPag, lnPenalidad
     End If
    '***Fin Se cobra la penalidad a la cuenta si supera el límite máximo de operaciones
   
    '***Se cobra el ITF a la cuenta****
    If pnITF > 0 Then
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gITFCobroCargo, rsCuenta!cCtaCod, pnITF, CCur(rsCuenta!nSaldoDisp) - (pnDebito + lnComision + lnPenalidad + pnITF), CCur(rsCuenta!nSaldo) - (pnDebito + lnComision + lnPenalidad + pnITF)
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gITFCobroCargo, rsCuenta!cCtaCod, gConcITFCliente, pnITF
    End If
    '***Fin Se cobra el ITF a la cuenta
    
    lnConfirmar = oDCOMCaptaMovimiento.actualizarCuentaConvenioServicioPago(pnIdSerPag, lnNroOpe, rsCuenta!cCtaCod, pnDebito, lnComision, lnPenalidad, pnITF, lnIntGanado, Format(ldUltCierre, "yyyyMMdd"), CCur(rsCuenta!nSaldoDisp))
    
    If lnConfirmar > 0 Then
        prsDebitos.MoveFirst
        Do While Not prsDebitos.EOF
            If prsDebitos!Pagar = "1" Then
                lnConfirmar2 = oDCOMCaptaMovimiento.actualizarServicioPagoDebito(CLng(prsDebitos!IdSerPagDeb), lnMovNro)
                
                If lnConfirmar2 <= 0 Then
                    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
                    Set oDCOMCaptaMovimiento = Nothing
                    Set oNCOMCaptaGenerales = Nothing
                    Set rsCuenta = Nothing
                    debitarCuentaConvenioServicioPago = 0
                    Exit Function
                End If
                
            End If
            prsDebitos.MoveNext
        Loop
    Else
        If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
        Set oDCOMCaptaMovimiento = Nothing
        Set oNCOMCaptaGenerales = Nothing
        Set rsCuenta = Nothing
        debitarCuentaConvenioServicioPago = 0
        Exit Function
    End If

Else
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Set oNCOMCaptaGenerales = Nothing
    Set rsCuenta = Nothing
    debitarCuentaConvenioServicioPago = 0
    Exit Function
End If


oDCOMCaptaMovimiento.dbCmact.CommitTrans
lbTrans = False
'***Imprime la boleta****
psBoleta = psBoleta & oNCOMCaptaImpresion.imprimirBoletaServicioPago(psNombreCMAC, psNomAge, lsMoneda, lnMovNro, _
                                                                     lsFecha, lsHora, psEmpresa, psDOI, _
                                                                     psBeneficiario, pnDebito, lsCodUser, psLpt, pbImpTMU, , , psNombreConvenio)
'***Fin Imprime la boleta

debitarCuentaConvenioServicioPago = lnConfirmar2
Set oDCOMCaptaMovimiento = Nothing
Set oNCOMCaptaGenerales = Nothing
Set rsCuenta = Nothing
Exit Function

ErrDebito:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    Set oDCOMCaptaMovimiento = Nothing
    Set oNCOMCaptaGenerales = Nothing
    debitarCuentaConvenioServicioPago = 0
End Function

Public Function obtenerConvenioServicioPagoDebitoParaExtornar(ByVal psDatoBusqueda As String, ByVal psFecha As String, _
                                                              ByVal psOpeCod As String, ByVal psAgeCod As String, _
                                                              ByVal pnTipoBusqueda As Integer, ByVal pnMovNro As Long) As ADODB.Recordset
Dim oDCOMCaptaMovimiento As DCOMCaptaMovimiento
Set oDCOMCaptaMovimiento = New DCOMCaptaMovimiento
Set obtenerConvenioServicioPagoDebitoParaExtornar = oDCOMCaptaMovimiento.devolverConvenioServicioPagoDebitoParaExtornar(psDatoBusqueda, psFecha, psOpeCod, psAgeCod, pnTipoBusqueda, pnMovNro)
Set oDCOMCaptaMovimiento = Nothing
End Function

Public Function extornarDebitarCuentaConvenioServicioPago(ByVal psMovNro As String, ByVal psOpeCod As String, _
                                                          ByVal pnIdSerPag As Long, ByVal pnDebito As Currency, _
                                                          ByVal pnITF As Currency, ByVal pnComSerPag As Currency, _
                                                          ByVal pnPenSerPag As Currency, ByVal psNombreCMAC As String, _
                                                          ByVal psNomAge As String, ByVal psEmpresa As String, _
                                                          ByVal psDOI As String, ByVal psBeneficiario As String, _
                                                          ByRef psBoleta As String, ByRef psLpt As String, _
                                                          ByVal psMovNroExt As String, _
                                                          ByVal pnMovNroExt As Long, _
                                                          Optional ByRef pbImpTMU As Boolean = False) As Long
Dim oDCOMCaptaMovimiento As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oNCOMCaptaGenerales As NCOMCaptaGenerales
Set oNCOMCaptaGenerales = New NCOMCaptaGenerales
Dim oNCOMCaptaImpresion As NCOMCaptaImpresion
Set oNCOMCaptaImpresion = New NCOMCaptaImpresion
Dim rsTitular As ADODB.Recordset
Dim rsCuenta As ADODB.Recordset
Dim lbTrans As Boolean
Dim ldUltCierre, ldFecSis As Date
Dim lnDiasTranscurridos As Integer
Dim lnMovNro As Long
Dim lnIntGanado As Double
Dim lsCodUser As String
Dim lsImpFirmas As String
Dim lsImpBoleta As String
Dim lbOrdPag As Boolean
Dim lnConfirmar, lnConfirmar2 As Long
Dim lsFecha, lsHora, lsGlosa, lsMoneda As String
Dim i As Long

lsFecha = Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4)
lsHora = Mid(psMovNro, 9, 2) & ":" & Mid(psMovNro, 11, 2) & ":" & Mid(psMovNro, 13, 2)
ldFecSis = CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4))
lsCodUser = Right(psMovNro, 4)
lbTrans = False

lsGlosa = "Extorno del débito " & pnDebito & " al beneficiario: " & psDOI & "-" & psBeneficiario
On Error GoTo ErrExornoDebito

'Inicia la transaccion
Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
oDCOMCaptaMovimiento.dbCmact.BeginTrans
lbTrans = True

Randomize

For i = 0 To Rnd(2000) * 1000
Next i

oDCOMCaptaMovimiento.AgregaMov psMovNro, psOpeCod, lsGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
lnMovNro = oDCOMCaptaMovimiento.GetnMovNro(psMovNro)

Set rsCuenta = New ADODB.Recordset
Set rsCuenta = oDCOMCaptaMovimiento.devolverDatosCuentaConvenioServicioPago(pnIdSerPag)

If Not (rsCuenta.BOF And rsCuenta.EOF) Then
    
    If Mid(rsCuenta!cCtaCod, 9, 1) = "1" Then
        '''lsMoneda = "SOLES" 'marg ers044-2016
        lsMoneda = StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) 'marg ers044-2016
    Else
        lsMoneda = "DÓLARES"
    End If
    
    '***Calculamos los intereses ganados****
    lnDiasTranscurridos = DateDiff("d", CDate(rsCuenta!dUltCierre), ldFecSis) - 1
    If lnDiasTranscurridos < 0 Then
       lnDiasTranscurridos = 0
    End If
    lnIntGanado = GetInteres(rsCuenta!nSaldoDisp, rsCuenta!ntasainteres, lnDiasTranscurridos, TpoCalcIntSimple)
    '***Fin Calculamos los interesesganados
 
    ldUltCierre = DateAdd("d", -1, ldFecSis)
    
    '***Extorno del debita de la cuenta convenio****
    oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gCapExtConSerPagDeb, rsCuenta!cCtaCod, pnDebito, rsCuenta!nSaldoDisp + pnDebito, rsCuenta!nSaldo + pnDebito
    oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gCapExtConSerPagDeb, rsCuenta!cCtaCod, gConcCapital, pnDebito
    '***Fin extorno del debita de la cuenta convenio
    '***Se cobra la comisión del convenio a la cuenta si es mayor a cero****
    If rsCuenta!nComision > 0 Then
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gCapExtConSerPagDebCom, rsCuenta!cCtaCod, pnComSerPag, rsCuenta!nSaldoDisp + pnDebito + pnComSerPag, rsCuenta!nSaldo + pnDebito + pnComSerPag
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gCapExtConSerPagDebCom, rsCuenta!cCtaCod, gComConSerPag, pnComSerPag
    End If
    '***Fin Se cobra la comisión del convenio a la cuenta si es mayor a cero
    '***Se cobra la penalidad a la cuenta si supera el límite máximo de operaciones****
    If rsCuenta!nNroOpe >= rsCuenta!nLimMaxOpeDia Then
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gCapExtConSerPagDebPen, rsCuenta!cCtaCod, pnPenSerPag, rsCuenta!nSaldoDisp + pnDebito + pnComSerPag + pnPenSerPag, rsCuenta!nSaldo + pnDebito + pnComSerPag + pnPenSerPag
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gCapExtConSerPagDebPen, rsCuenta!cCtaCod, gPenConSerPag, pnPenSerPag
    End If
    '***Fin Se cobra la penalidad a la cuenta si supera el límite máximo de operaciones
    '***Se cobra el ITF a la cuenta****
    If pnITF > 0 Then
        oDCOMCaptaMovimiento.AgregaMovCap lnMovNro, gITFCobroCargoExt, rsCuenta!cCtaCod, pnITF, rsCuenta!nSaldoDisp + pnDebito + pnComSerPag + pnPenSerPag + pnITF, rsCuenta!nSaldo + pnDebito + rsCuenta!nComision + pnPenSerPag + pnITF
        oDCOMCaptaMovimiento.AgregaMovCapDet lnMovNro, gITFCobroCargoExt, rsCuenta!cCtaCod, gConcITFCliente, pnITF
    End If
    '***Fin Se cobra el ITF a la cuenta
    
    lnConfirmar = oDCOMCaptaMovimiento.extornarCuentaConvenioServicioPagoDebito(pnIdSerPag, rsCuenta!nNroOpe, _
                                                                                 rsCuenta!cCtaCod, pnDebito, _
                                                                                 pnComSerPag, pnPenSerPag, _
                                                                                 pnITF, lnIntGanado, _
                                                                                 Format(ldUltCierre, "yyyyMMdd"), rsCuenta!nSaldoDisp, _
                                                                                 pnMovNroExt)
    
    If lnConfirmar = 0 Then
        If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
        Set oDCOMCaptaMovimiento = Nothing
        Set oNCOMCaptaGenerales = Nothing
        Set rsCuenta = Nothing
        extornarDebitarCuentaConvenioServicioPago = 0
        Exit Function
    End If
Else
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Set oDCOMCaptaMovimiento = Nothing
    Set oNCOMCaptaGenerales = Nothing
    Set rsCuenta = Nothing
    extornarDebitarCuentaConvenioServicioPago = 0
    Exit Function
End If


oDCOMCaptaMovimiento.dbCmact.CommitTrans
lbTrans = False
'***Imprime la boleta****
psBoleta = psBoleta & oNCOMCaptaImpresion.imprimirBoletaServicioPago(psNombreCMAC, psNomAge, lsMoneda, lnMovNro, _
                                                                     lsFecha, lsHora, psEmpresa, psDOI, _
                                                                     psBeneficiario, pnDebito, lsCodUser, psLpt, _
                                                                     pbImpTMU, True, psMovNroExt)
'***Fin Imprime la boleta

extornarDebitarCuentaConvenioServicioPago = lnConfirmar
Set oDCOMCaptaMovimiento = Nothing
Set oNCOMCaptaGenerales = Nothing
Set rsCuenta = Nothing
Exit Function

ErrExornoDebito:
    If lbTrans Then oDCOMCaptaMovimiento.dbCmact.RollbackTrans
    Err.Raise Err.Number, "OCURRIO UN ERROR, VERIFIQUE ESTA OPERACION ", Err.Description
    Set oDCOMCaptaMovimiento = Nothing
    Set oNCOMCaptaGenerales = Nothing
    Set rsCuenta = Nothing
    extornarDebitarCuentaConvenioServicioPago = 0
End Function
'***Fin Agregado por ELRO el 20130710, según RFC1306270002
'JUEZ 20130902 *********************************************************
Public Sub InsertaCapComisiones(ByVal pnMovNro As Long, ByVal psCodCom As String, ByVal psPersCod As String, ByVal pnTipoPago As Integer, ByVal psCtaCod As String)
    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
        clsCapMov.InsertaCapComisiones pnMovNro, psCodCom, psPersCod, pnTipoPago, psCtaCod
    Set clsCapMov = Nothing
End Sub
Public Function ObtieneDatosReimprOtrasOperaciones(pnMovNro) As ADODB.Recordset
    
Dim sSql As String
Dim oConecta As COMConecta.DCOMConecta

sSql = "stp_sel_ObtieneDatosReimprOtrasOperaciones " & pnMovNro & ""

Set oConecta = New COMConecta.DCOMConecta
oConecta.AbreConexion
Set ObtieneDatosReimprOtrasOperaciones = oConecta.CargaRecordSet(sSql)
oConecta.CierraConexion
Set oConecta = Nothing

End Function
'END JUEZ **************************************************************
'***************************RECO 20131104 ERS-141**********************
Public Sub RegistraDevFonfoGarantEcotaxi(ByVal nMovNro As Integer, ByVal sCtaCod As String, ByVal sdFechaDev As String, ByVal nMontoDev As Double _
        , ByVal copecod As String, ByVal sCtaCodAbono As String, ByVal nFormaDev As Integer, ByVal sGlosa As String)
       Dim oDCOMCaptaMovimiento As New COMDCaptaGenerales.DCOMCaptaMovimiento
       Set oDCOMCaptaMovimiento = New COMDCaptaGenerales.DCOMCaptaMovimiento
       oDCOMCaptaMovimiento.RegistraDevFonfoGarantEcotaxi nMovNro, sCtaCod, sdFechaDev, nMontoDev, copecod, sCtaCodAbono, nFormaDev, sGlosa
End Sub
'***************************END RECO**********************

' *** RIRO 20131023 SEGUN TI-ERS145-2013
Public Sub RegistrarMovDepositoClub(ByVal nMovNro As Long, ByVal sOpeCod As CaptacOperacion, ByVal sDocReferencia As String)

    Dim sSql As String
    Dim oConecta As COMConecta.DCOMConecta
    
    On Error GoTo Error
    
        sSql = "exec stp_ins_MovDepositoClub " & _
                nMovNro & ", '" & _
                sOpeCod & "', '" & _
                sDocReferencia & "'"
        
        Set oConecta = New COMConecta.DCOMConecta
        oConecta.AbreConexion
        oConecta.CargaRecordSet (sSql)
        oConecta.CierraConexion
        Set oConecta = Nothing
        Exit Sub
Error:
    
    Set oConecta = Nothing
    Err.Raise Err.Number, "Buscar Usuario ", Err.Description

End Sub
' *** FIN RIRO
'PASI 20140530
Public Function ObtenerFechaValorizaCheque(ByVal psNroDoc As String, ByVal psPersCod As String, ByVal psIFTpo As String, ByVal psIFCta As String) As Date
    Dim sSql As String
    Dim oConecta As COMConecta.DCOMConecta
    Dim rs As ADODB.Recordset
    Set rs = New ADODB.Recordset
    
    sSql = "ObtenerFechaValorizaCheque '" & psNroDoc & "','" & psPersCod & "','" & psIFTpo & "','" & psIFCta & "'"
    
    Set oConecta = New COMConecta.DCOMConecta
    oConecta.AbreConexion
    Set rs = oConecta.CargaRecordSet(sSql)
    If rs.EOF And rs.BOF Then
        ObtenerFechaValorizaCheque = CDate("01/01/1990")
    Else
        ObtenerFechaValorizaCheque = CDate(rs!fecha)
    End If
    oConecta.CierraConexion
    Set oConecta = Nothing
End Function
'end PASI
'JUEZ 20140710 ********************************************************
Public Function CapCargoCuentaSegTarjeta(ByVal psCuenta As String, ByVal pnMonto As Double, ByVal psCodOpe As String, psMovNro As String, ByVal psMovDesc As String, _
                                        ByVal psNomAge As String, ByVal psLpt As String, ByVal psCodCmac As String, ByVal psCodAge As String, ByVal psMensaje As String, _
                                        ByVal pbImpTMU As Boolean, ByVal psNumCert As String, ByVal psNumTarj As String, ByVal pdFecSis As String, ByVal psPersCod As String, _
                                        ByRef psBoletaImp As String, ByVal pbPrimaAnual As Integer, _
                                        Optional ByVal pcUser As String = "", Optional ByVal pcUserVenta As String = "") As Double
                                        'APRI20181023 ERS071-2018 ADD pbPrimaAnual
                                        'CTI2 FERIMORO ERS034-2019   31082020 Optional ByVal pcUser As String = "", Optional ByVal pcUserVenta As String = ""
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oNSegTar As COMNCaptaGenerales.NCOMSeguros
Dim bTrans As Boolean
Dim nMovNro As Long
Dim nSaldo As Double

Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrGraba
    clsCap.dbCmact.BeginTrans
    bTrans = True
    
    clsCap.AgregaMov psMovNro, psCodOpe, psMovDesc
    nMovNro = clsCap.GetnMovNro(psMovNro)
    
    If Mid(psCuenta, 6, 3) = gCapAhorros Then
        nSaldo = CapCargoCuentaAho(psCuenta, pnMonto, psCodOpe, psMovNro, psMovDesc, , , , , , , , , psNomAge, psLpt, , bTrans, , , psCodCmac, clsCap.dbCmact, psCodAge, , , , , , "", , psMensaje, , , , , pbImpTMU)
    Else
        nSaldo = CapCargoCuentaCTS(psCuenta, pnMonto, psCodOpe, psMovNro, psMovDesc, , , , , , , psNomAge, psLpt, , , , , , , , , , , psMensaje, , pbImpTMU, , , , , , , , , , , , , , , bTrans, clsCap.dbCmact)
    End If
    
    'clscap.AgregaSegTarjetaAfiliacion psNumCert, psNumTarj, psCuenta, pdFecSis, psMovNro, nMovNro, psPersCod, pbPrimaAnual
    clsCap.AgregaSegTarjetaAfiliacion psNumCert, psNumTarj, psCuenta, pdFecSis, psMovNro, nMovNro, psPersCod, pbPrimaAnual, pcUser, pcUserVenta 'CTI2 FERIMORO ERS034-2019 31082020  :pcUser, pcUserVenta
    
    clsCap.dbCmact.CommitTrans
    
    Set oNSegTar = New COMNCaptaGenerales.NCOMSeguros
        psBoletaImp = oNSegTar.ImprimeBoletaAfilicacionSeguroTarjeta(nMovNro, psMovNro, psNomAge, pbImpTMU)
    Set oNSegTar = Nothing
    
    CapCargoCuentaSegTarjeta = nSaldo

Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    CapCargoCuentaSegTarjeta = -1
    Err.Raise Err.Number, "CapCargoCuentaSegTarjeta", Err.Description
End Function
'END JUEZ *************************************************************
'JUEZ 20150209 ***************************************************************
Public Function RegistrarServCobDebitoAuto(ByVal pdFecSis As Date, ByVal psCodAge As String, ByVal psCodUser As String, ByVal psCtaCod As String, ByVal pnComision As String, _
                                           ByVal psOpeCod As String, ByVal prsServ As ADODB.Recordset, ByVal prsCred As ADODB.Recordset, ByVal psMsjErr As String, _
                                           ByVal psNomAge As String, ByVal pbImpTMU As Boolean, ByRef psBoleta As String) As Boolean
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oDMov As COMDMov.DCOMMov
Dim sMovNro As String
Dim nMovNro As Long
Dim bTrans As Boolean
Dim nCodId As Long
Dim i As Integer

Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrGraba
    RegistrarServCobDebitoAuto = False
    
    Set oDMov = New COMDMov.DCOMMov
    sMovNro = oDMov.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
    Set oDMov = Nothing
    
    oDCapMov.dbCmact.BeginTrans
    bTrans = True
    
    oDCapMov.AgregaMov sMovNro, psOpeCod, "Afiliacion Servicio Debito Automatico " & psCtaCod, gMovEstContabNoContable
    nMovNro = oDCapMov.GetnMovNro(sMovNro)
    
    nCodId = oDCapMov.RegistrarServCobDebitoAuto(psCtaCod, pnComision, nMovNro, sMovNro)
    If nCodId = 0 Then
        RegistrarServCobDebitoAuto = False
        If bTrans Then oDCapMov.dbCmact.RollbackTrans
        Set oDCapMov = Nothing
        Exit Function
    End If
    
    If Not prsServ Is Nothing Then
        For i = 0 To prsServ.RecordCount - 1
            oDCapMov.RegistrarServCobDebitoAutoDetServ nCodId, CStr(prsServ(1)), CStr(prsServ(2)), CInt(prsServ(3)), CInt(prsServ(4)), CDbl(prsServ(5)), sMovNro
            prsServ.MoveNext
        Next i
        prsServ.MoveFirst
    End If
    
    If Not prsCred Is Nothing Then
        For i = 0 To prsCred.RecordCount - 1
            oDCapMov.RegistrarServCobDebitoAutoDetCred nCodId, prsCred(0), prsCred(3), sMovNro
            prsCred.MoveNext
        Next i
        prsCred.MoveFirst
    End If
    
    bTrans = False
    oDCapMov.dbCmact.CommitTrans
    Set oDCapMov = Nothing
    
    psBoleta = ImprimeBoletaServCobDebitoAuto(nMovNro, sMovNro, psCodUser, Format(pdFecSis, "yyyyMMdd"), psCodAge, psNomAge, prsServ, prsCred, 0, pbImpTMU)
    
    RegistrarServCobDebitoAuto = True

Exit Function
ErrGraba:
    RegistrarServCobDebitoAuto = False
    If bTrans Then oDCapMov.dbCmact.RollbackTrans
    Set oDCapMov = Nothing
    Err.Raise Err.Number, "RegistrarServCobDebitoAuto", Err.Description
End Function
Public Function ImprimeBoletaServCobDebitoAuto(ByVal pnMovNro As Long, ByVal psMovNro As String, ByVal psCodUserReg As String, ByVal pdFechaReg As String, ByVal psCodAgeReg As String, _
                                               ByVal psNomAge As String, ByVal prsServ As ADODB.Recordset, ByVal prsCred As ADODB.Recordset, ByVal pnOperacion As Integer, _
                                               ByVal pbImpTMU As Boolean) As String
Dim oDCapGen As COMDCaptaGenerales.DCOMCaptaGenerales
Dim rs As ADODB.Recordset
Dim lscad As String
Dim sSep As Integer
Dim sIni As Integer
Dim sMax As Integer
Dim sFecha As String
Dim sHora As String
Dim sOperacion As String
Dim sCtaCod As String
Dim sNumServ As String
Dim i As Integer

Set oDCapGen = New COMDCaptaGenerales.DCOMCaptaGenerales
Set rs = oDCapGen.ObtenerServCobDebitoAuto(pnMovNro, psCodUserReg, pdFechaReg, psCodAgeReg, True)
Set oDCapGen = Nothing

lscad = ""
lscad = lscad & oImp.gPrnInicializa
lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita

sSep = 14
sIni = 0
sMax = 39

sFecha = Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4)
sHora = Mid(psMovNro, 9, 2) & ":" + Mid(psMovNro, 11, 2) & ":" + Mid(psMovNro, 13, 2)
If pnOperacion = 0 Then
    sOperacion = "Afiliacion"
ElseIf pnOperacion = 1 Then
    sOperacion = "Edicion"
ElseIf pnOperacion = 2 Then
    sOperacion = "Extorno"
End If
sCtaCod = rs!cCtaCod
sCtaCod = Left(sCtaCod, 3) & "-" & Mid(sCtaCod, 4, 2) & "-" & Mid(sCtaCod, 6, 3) & "-" & Mid(sCtaCod, 9, 10)
sNumServ = IIf(Len(CStr(rs!nNumServ)) = 1, "0", "") & CStr(rs!nNumServ)

If Not pbImpTMU Then
    lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
    lscad = lscad & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "CMAC MAYNAS - AHORRO" & Space(sMax - Len("CMAC MAYNAS - AHORRO") + sSep) & "CMAC MAYNAS - AHORRO" & Space(sMax - Len("CMAC MAYNAS - AHORRO")) & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & psNomAge & "-" & rs!cMoneda & Space(sMax - Len(psNomAge & "-" & rs!cMoneda)) & Space(sSep) & psNomAge & "-" & rs!cMoneda & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(sSep) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & rs!cPersNombre & Space(sMax - Len(rs!cPersNombre) + sSep) & rs!cPersNombre & Space(sMax - Len(rs!cPersNombre)) & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & rs!cPersIdNro & Space(sMax - Len(rs!cPersIdNro) + sSep) & rs!cPersIdNro & Space(sMax - Len(rs!cPersIdNro)) & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "Operacion: " & sOperacion & Space(sMax - Len("Operacion: " & sOperacion) + sSep) & "Operacion: " & sOperacion & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "----- SERVICIOS DEBITO AUTOMATICO -----" & Space(sSep) & "----- SERVICIOS DEBITO AUTOMATICO -----" & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
    lscad = lscad & Space(sIni) & "CUENTA DEBITO:" & Space(sMax - Len("CUENTA DEBITO:" & sCtaCod)) & sCtaCod & Space(sSep) & "CUENTA DEBITO:" & Space(sMax - Len("CUENTA DEBITO:" & sCtaCod)) & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "PRODUCTO" & Space(sMax - Len("PRODUCTO") - Len("N* SERVICIOS")) & "N* SERVICIOS" & Space(sSep) & "PRODUCTO" & Space(sMax - Len("PRODUCTO") - Len("N* SERVICIOS")) & "N* SERVICIOS" & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    If Not prsCred Is Nothing Then
        For i = 0 To prsCred.RecordCount - 1
            lscad = lscad & Space(sIni) & "CREDITO/CUOTA" & Space(sMax - Len("CREDITO/CUOTA") - Len(prsCred(0))) & prsCred(0) & Space(sSep) & "CREDITO/CUOTA" & Space(sMax - Len("CREDITO/CUOTA") - Len(prsCred(0))) & prsCred(0) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Prox Fecha Pago: " & prsCred(4) & Space(sMax - Len("Prox Fecha Pago: " & prsCred(4)) + sSep) & "Prox Fecha Pago: " & prsCred(4) & oImp.gPrnSaltoLinea
            prsCred.MoveNext
        Next i
    End If
    If Not prsServ Is Nothing Then
        For i = 0 To prsServ.RecordCount - 1
            lscad = lscad & Space(sIni) & Left(CStr(prsServ(0)), 25) & Space(sMax - Len(Left(CStr(prsServ(0)), 25) & CStr(prsServ(2)))) & CStr(prsServ(2)) & Space(sSep) & Left(CStr(prsServ(0)), 25) & Space(sMax - Len(Left(CStr(prsServ(0)), 25) & CStr(prsServ(2)))) & CStr(prsServ(2)) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Fecha Pagos: " & prsServ(3) & " o " & prsServ(4) & " de cada mes" & Space(sMax - Len("Fecha Pagos: " & prsServ(3) & " o " & prsServ(4) & " de cada mes") + sSep) & "Fecha Pagos: " & prsServ(3) & " o " & prsServ(4) & " de cada mes" & oImp.gPrnSaltoLinea
            prsServ.MoveNext
        Next i
    End If
    lscad = lscad & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
    lscad = lscad & "Total de Servicios Afiliados:" & String((sMax - Len("Total de Servicios Afiliados:") - Len(sNumServ)), "*") & sNumServ & Space(sSep) & "Total de Servicios Afiliados:" & String((sMax - Len("Total de Servicios Afiliados:") - Len(sNumServ)), "*") & sNumServ & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    If pnOperacion <> 2 Then
        lscad = lscad & "DECLARACION Y FIRMA" & Space(sMax - Len("DECLARACION Y FIRMA") + sSep) & "DECLARACION Y FIRMA" & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "Autorizo el cargo  a traves  del DEBITO" & Space(sSep) & "Autorizo el cargo  a traves  del DEBITO" & oImp.gPrnSaltoLinea
        lscad = lscad & "AUTOMATICO  para el  pago de  servicios" & Space(sSep) & "AUTOMATICO  para el  pago de  servicios" & oImp.gPrnSaltoLinea
        lscad = lscad & "afiliados" & Space(sMax - Len("afiliados") + sSep) & "afiliados" & Space(sMax - Len("afiliados")) & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "FIRMA  : " & String((sMax - Len("FIRMA  : ")), "_") + Space(sSep) & "FIRMA  : " & String((sMax - Len("FIRMA  : ")), "_") & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "NOMBRE : " & rs!cPersNombre & Space(sMax - Len("NOMBRE : " & rs!cPersNombre) + sSep) & "NOMBRE : " & rs!cPersNombre & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "DOI    : " & rs!cPersIdNro & Space(sMax - Len("DOI    : " & rs!cPersIdNro) + sSep) & "DOI    : " & rs!cPersIdNro & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    End If
    lscad = lscad & Space(sIni) & String(sMax, "-") & Space(sSep) & String(sMax, "-") & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
    lscad = lscad & Space(sIni) & Right(psMovNro, 4) & Space(sMax - Len(Right(psMovNro, 4)) + sSep) & Right(psMovNro, 4) & oImp.gPrnSaltoLinea
Else
    lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
    lscad = lscad & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "CMAC MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & psNomAge & "-" & rs!cMoneda & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & rs!cPersNombre & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & rs!cPersIdNro & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "Operacion: " & sOperacion & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "----- SERVICIOS DEBITO AUTOMATICO -----" & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
    lscad = lscad & Space(sIni) & "CUENTA DEBITO:" & Space(sMax - Len("CUENTA DEBITO:" & sCtaCod)) & sCtaCod & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    lscad = lscad & Space(sIni) & "PRODUCTO" & Space(sMax - Len("PRODUCTO") - Len("N* SERVICIOS")) & "N* SERVICIOS" & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    If Not prsCred Is Nothing Then
        For i = 0 To prsCred.RecordCount - 1
            lscad = lscad & Space(sIni) & "CREDITO/CUOTA" & Space(sMax - Len("CREDITO/CUOTA") - Len(prsCred(0))) & prsCred(0) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Prox Fecha Pago: " & prsCred(4) & oImp.gPrnSaltoLinea
            prsCred.MoveNext
        Next i
    End If
    If Not prsServ Is Nothing Then
        For i = 0 To prsServ.RecordCount - 1
            lscad = lscad & Space(sIni) & Left(CStr(prsServ(0)), 25) & Space(sMax - Len(Left(CStr(prsServ(0)), 25) & CStr(prsServ(2)))) & CStr(prsServ(2)) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & "Prox Fecha Pago: " & prsServ(3) & " o " & prsServ(4) & " de cada mes" & oImp.gPrnSaltoLinea
            prsServ.MoveNext
        Next i
    End If
    lscad = lscad & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
    lscad = lscad & "TTotal de Servicios Afiliados:" & String((sMax - Len("Total de Servicios Afiliados:") - Len(sNumServ)), "*") & sNumServ & oImp.gPrnSaltoLinea
    If pnOperacion <> 2 Then
        lscad = lscad & "DECLARACION Y FIRMA" & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "Autorizo el cargo  a traves  del DEBITO" & oImp.gPrnSaltoLinea
        lscad = lscad & "AUTOMATICO  para el  pago de  servicios" & oImp.gPrnSaltoLinea
        lscad = lscad & "afiliados" & Space(sMax - Len("afiliados") + sSep) & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "FIRMA  : " & String((sMax - Len("FIRMA  : ")), "_") & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "NOMBRE : " & rs!cPersNombre & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        lscad = lscad & "DOI    : " & rs!cPersIdNro & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
    End If
    lscad = lscad & Space(sIni) & String(sMax, "-") & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
    lscad = lscad & Space(sIni) & Right(psMovNro, 4) & oImp.gPrnSaltoLinea
    lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
End If

ImprimeBoletaServCobDebitoAuto = lscad

End Function
Public Function ActualizarServCobDebitoAuto(ByVal pdFecSis As Date, ByVal psCodAge As String, ByVal psCodUser As String, ByVal psCtaCod As String, _
                                            ByVal psOpeCod As String, ByVal prsServ As ADODB.Recordset, ByVal prsCred As ADODB.Recordset, ByVal psMsjErr As String, _
                                            ByVal psNomAge As String, ByVal pbImpTMU As Boolean, ByRef psBoleta As String) As Boolean
Dim oDCapGen As COMDCaptaGenerales.DCOMCaptaGenerales
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oDMov As COMDMov.DCOMMov
Dim rs As ADODB.Recordset
Dim sMovNro As String
Dim nMovNro As Long
Dim nMovNroReg As Long
Dim sCodUserReg As String, sFechaReg As String, sCodAgeReg As String
Dim bTrans As Boolean
Dim nCodId As Long
Dim i As Integer

Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrGraba
    ActualizarServCobDebitoAuto = False
    
    Set oDMov = New COMDMov.DCOMMov
    sMovNro = oDMov.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
    Set oDMov = Nothing
    
    Set oDCapGen = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rs = oDCapGen.ValidaServCobDebitoAuto(psCtaCod)
    Set oDCapGen = Nothing
    If Not rs.BOF And Not rs.EOF Then
        nCodId = rs!nCodId
        nMovNroReg = rs!nMovNro
        sCodUserReg = Right(rs!cMovNro, 4)
        sFechaReg = Left(rs!cMovNro, 8)
        sCodAgeReg = Mid(rs!cMovNro, 18, 2)
    Else
        Exit Function
    End If
    
    oDCapMov.dbCmact.BeginTrans
    bTrans = True
    
    oDCapMov.AgregaMov sMovNro, psOpeCod, "Actualización Servicio Debito Automatico " & psCtaCod, gMovEstContabNoContable
    nMovNro = oDCapMov.GetnMovNro(sMovNro)
    
    oDCapMov.EliminarServCobDebitoAutoDet nCodId
    
    If Not prsServ Is Nothing Then
        For i = 0 To prsServ.RecordCount - 1
            oDCapMov.RegistrarServCobDebitoAutoDetServ nCodId, CStr(prsServ(1)), CStr(prsServ(2)), CInt(prsServ(3)), CInt(prsServ(4)), CDbl(prsServ(5)), sMovNro
            prsServ.MoveNext
        Next i
        prsServ.MoveFirst
    End If
    
    If Not prsCred Is Nothing Then
        For i = 0 To prsCred.RecordCount - 1
            oDCapMov.RegistrarServCobDebitoAutoDetCred nCodId, prsCred(0), prsCred(3), sMovNro
            prsCred.MoveNext
        Next i
        prsCred.MoveFirst
    End If
    
    bTrans = False
    oDCapMov.dbCmact.CommitTrans
    Set oDCapMov = Nothing
    
    psBoleta = ImprimeBoletaServCobDebitoAuto(nMovNroReg, sMovNro, sCodUserReg, sFechaReg, sCodAgeReg, psNomAge, prsServ, prsCred, 1, pbImpTMU)
    
    ActualizarServCobDebitoAuto = True

Exit Function
ErrGraba:
    ActualizarServCobDebitoAuto = False
    If bTrans Then oDCapMov.dbCmact.RollbackTrans
    Set oDCapMov = Nothing
    Err.Raise Err.Number, "ActualizarServCobDebitoAuto", Err.Description
End Function
Public Sub EliminarServCobDebitoAuto(ByVal pdFecSis As Date, ByVal psCodAge As String, ByVal psCodUser As String, ByVal psCtaCod As String, ByVal psOpeCod As String, ByVal pnCodId As Long)
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim oDMov As COMDMov.DCOMMov
Dim sMovNro As String
    Set oDMov = New COMDMov.DCOMMov
    sMovNro = oDMov.GeneraMovNro(pdFecSis, psCodAge, psCodUser)
    Set oDMov = Nothing
    Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    oDCapMov.AgregaMov sMovNro, psOpeCod, "Anulación Servicio Debito Automatico " & psCtaCod, gMovEstContabNoContable
    oDCapMov.EliminarServCobDebitoAuto psCtaCod
    oDCapMov.EliminarServCobDebitoAutoDet pnCodId
    Set oDCapMov = Nothing
End Sub
Public Function ExtornarServCobDebitoAuto(ByVal pnMovNro As Long, ByVal psMovNro As String, ByVal psOpeCod As String, ByVal psCtaCod As String, ByVal psGlosa As String, _
                                            ByVal psCodAge As String, ByVal psNomAge As String, ByVal psCodCmac As String, ByRef psBoleta As String, ByVal sLpt As String, _
                                            ByVal pbImpTMU As Boolean)
Dim oDCapGen As COMDCaptaGenerales.DCOMCaptaGenerales
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim rs As ADODB.Recordset, rsServ As ADODB.Recordset, rsCred As ADODB.Recordset
Dim nMovNro As Long, sMovNro As String
Dim nMovNroReg As Long
Dim sCodUserReg As String, sFechaReg As String, sCodAgeReg As String
Dim bTrans As Boolean
Dim nCodId As Long

Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento

On Error GoTo ErrGraba
    Set oDCapGen = New COMDCaptaGenerales.DCOMCaptaGenerales
    Set rs = oDCapGen.ValidaServCobDebitoAuto(psCtaCod)
    Set rsServ = oDCapGen.ObtenerServCobDebitoAutoDet(pnMovNro, gServConvenio)
    Set rsCred = oDCapGen.ObtenerServCobDebitoAutoDet(pnMovNro, gServCredito)
    Set oDCapGen = Nothing
    If Not rs.BOF And Not rs.EOF Then
        nCodId = rs!nCodId
        nMovNroReg = rs!nMovNro
        sCodUserReg = Right(rs!cMovNro, 4)
        sFechaReg = Left(rs!cMovNro, 8)
        sCodAgeReg = Mid(rs!cMovNro, 18, 2)
    Else
        Exit Function
    End If
    
    oDCapMov.dbCmact.BeginTrans
    bTrans = True
    
    oDCapMov.AgregaMov psMovNro, psOpeCod, "Extorno Servicio Debito Automatico " & psCtaCod, gMovEstContabNoContable, gMovFlagDeExtorno
    nMovNro = oDCapMov.GetnMovNro(psMovNro)
    
    oDCapMov.ActualizaEstadoMov nMovNroReg, gMovFlagExtornado
    oDCapMov.AgregaMovRef nMovNro, nMovNroReg
    
    oDCapMov.EliminarServCobDebitoAuto psCtaCod
    oDCapMov.EliminarServCobDebitoAutoDet nCodId
    
    bTrans = False
    oDCapMov.dbCmact.CommitTrans
    Set oDCapMov = Nothing
    
    psBoleta = ImprimeBoletaServCobDebitoAuto(nMovNroReg, psMovNro, sCodUserReg, sFechaReg, sCodAgeReg, psNomAge, rsServ, rsCred, 2, pbImpTMU)
    
    ExtornarServCobDebitoAuto = True

Exit Function
ErrGraba:
    ExtornarServCobDebitoAuto = False
    If bTrans Then oDCapMov.dbCmact.RollbackTrans
    Set oDCapMov = Nothing
    Err.Raise Err.Number, "ExtornarServCobDebitoAuto", Err.Description
End Function
Public Function ValidaComisionExtractoServCobDebitoAuto(ByVal psCtaCod As String, ByVal pdFecSis As Date) As Boolean
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    ValidaComisionExtractoServCobDebitoAuto = oDCapMov.ValidaComisionExtractoServCobDebitoAuto(psCtaCod, pdFecSis)
    Set oDCapMov = Nothing
End Function
Public Function GrabarPagoServicioDebitoAutomatico(ByVal psCtaCodAho As String, ByVal pnMontoPago As Double, ByVal pnComision As Double, ByVal vMatCobro As Variant, _
                                                   ByVal psCodConvenio As String, ByVal psCodCliente As String, ByVal pnTipoDOI As Integer, ByVal psDOI As String, _
                                                   ByVal psNombreCliente As String, ByVal pnComiEmp As Double, ByVal pnComiCli As Double, ByVal psCtaCodEmp As String, _
                                                   ByVal pnITF As Double, ByVal pdFecSis As Date, ByVal psMovNroDeb As String, ByVal psMovNroPago As String, _
                                                   ByVal pbImpTMU As Boolean, ByVal psImpreBoleta As String) As String
Dim oBase As COMDCaptaGenerales.DCOMCaptaMovimiento
Dim bTransac As Boolean, bExitoPagoServicio As Boolean
Dim nMovNro As Long
Dim lsImpreBoletaServ As String

On Error GoTo ErrGrabarPagoServicioDebitoAutomatico
    
    GrabarPagoServicioDebitoAutomatico = ""
    
    Set oBase = New COMDCaptaGenerales.DCOMCaptaMovimiento
    oBase.dbCmact.BeginTrans
    bTransac = True

    Call oBase.AgregaMov(psMovNroDeb, gDepositoRecaudoDebitoAuto, "Pago Automático Servicio " & psCodConvenio & " - " & psCodCliente, gMovEstContabMovContable, gMovFlagVigente)
    nMovNro = oBase.GetnMovNro(psMovNroDeb)

    'Pago de Servicio ************************************
    bExitoPagoServicio = RegistrarCobroServicioConvenio(vMatCobro, psCodConvenio, psCodCliente, pnTipoDOI, psDOI, psNombreCliente, pdFecSis, psMovNroPago, _
                         psMovNroPago, pnComiEmp, 0, Mid(psCtaCodAho, 9, 1), psCtaCodEmp, pnITF, oBase.dbCmact, gPagoDebitoAutomatico)
    
    'FInalizacion Debito Automático **********************
    If bExitoPagoServicio Then
        If Mid(psCtaCodAho, 6, 3) = gCapAhorros Then
            CapCargoCuentaAho psCtaCodAho, pnMontoPago, gAhoCargoCtaPagoServ, psMovNroDeb, "", , , , , , , , , , , , True, , , , oBase.dbCmact, , , _
                              True, CCur(pnITF), , , , , , psImpreBoleta, , , , pbImpTMU, , , , , , , , , , , , , , , , , , pnComision, pnComiCli
        Else
            CapCargoCuentaCTS psCtaCodAho, pnMontoPago, "220313", psMovNroDeb, "", , , , , , , , , , , , , , , , , _
                              , , , psImpreBoleta, pbImpTMU, , , , , , , , , , , , , , , True, oBase.dbCmact, , pnComision, pnComiCli
        End If
        oBase.InsertaMovCapServDebitoAuto nMovNro, psCtaCodAho, pnMontoPago + pnITF, pnComision, gServConvenio, , psCodConvenio, psCodCliente
        oBase.AgregaMovRef nMovNro, oBase.GetnMovNro(psMovNroPago)
        oBase.dbCmact.CommitTrans
        bTransac = False
        lsImpreBoletaServ = ImprimeVaucherRecaudo(getDatosVaucherRecaudo(oBase.GetnMovNro(psMovNroPago)), pbImpTMU, Right(psMovNroPago, 4))
        psImpreBoleta = psImpreBoleta & lsImpreBoletaServ
    Else
        If bTransac Then
            GrabarPagoServicioDebitoAutomatico = "Ocurrió un error al procesar el Pago del servicio " & psCtaCodAho
            oBase.dbCmact.RollbackTrans
            Set oBase = Nothing
        End If
    End If

    Set oBase = Nothing
    Exit Function
ErrGrabarPagoServicioDebitoAutomatico:
    GrabarPagoServicioDebitoAutomatico = "Ocurrió un error al procesar los Pagos de servicio " & psCodConvenio & " - " & psCodCliente & ". Error " & Err.Number & " - " & Err.Description
    If bTransac Then
        Call oBase.dbCmact.RollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Pago Automatico de Créditos", Err.Description
End Function

Public Sub RegistrarCaptacServDebitoAutoLog(ByVal psCtaCod As String, ByVal psCodServPago As String, ByVal nMonto As Double, ByVal pnMontoMax As Double, _
                                                   ByVal pnComision As Double, ByVal pbPago As Boolean, ByVal psPagoDesc As String, ByVal pdFecSis As Date)
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
        oDCapMov.RegistrarCaptacServDebitoAutoLog psCtaCod, psCodServPago, nMonto, pnMontoMax, pnComision, pbPago, psPagoDesc, pdFecSis
    Set oDCapMov = Nothing
End Sub
'END JUEZ ********************************************************************

'RIRO20150529 ERS162-2014 ****************************************************
Public Function GrabarPagoUtilidades(ByVal psCtaCodAho As String, ByVal pnUtilidades As Integer, _
                                     ByVal pnMontoPago As Double, ByVal pnMontoITF As Double, _
                                     ByVal bEfectivo As Boolean, ByVal psMovNro As String, _
                                     ByVal psGlosa As String, ByRef psBoleta As String, _
                                     ByVal psNroDoc As String, ByVal psPersCod As String, _
                                     ByVal psPersNombre As String, ByVal psNomAge As String, _
                                     ByVal pbImpTMU As Boolean, ByVal psLpt As String, _
                                     ByRef pnMovNro As Long, ByVal pnPeriodo As Integer) As String

    Dim oBase As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim oBol As COMNCaptaGenerales.NCOMCaptaImpresion
    Dim bTransac As Boolean, bExitoPagoServicio As Boolean
    Dim sTit As String, lsBoleta As String
    Dim nMovNro As Long
    Dim nResult As Long
    
On Error GoTo ErrPagoUtilidades
    
    GrabarPagoUtilidades = ""
    nMovNro = 0
    pnMovNro = 0
    Set oBase = New COMDCaptaGenerales.DCOMCaptaMovimiento
    oBase.dbCmact.BeginTrans
    bTransac = True
    If bEfectivo Then
        nResult = OtrasOperaciones(psMovNro, gotrOpeDepUtilidadesEfect, CCur(pnMontoPago), psNroDoc, "Pago de Utilidades en Efectivo por S/. " & Format(pnMontoPago, "#,###0.00"), gMonedaNacional, psPersCod, , , , , , , , , oBase.dbCmact)
        nMovNro = oBase.GetnMovNro(psMovNro)
        
        psBoleta = ImprimeBoleta("Pago Utilidades Efectivo", "Pago Utilid. Periodo " & pnPeriodo, gotrOpeDepUtilidadesEfect, Str(pnMontoPago), _
                                     psPersNombre, "________1", "", 0, "0", IIf(Len(psNroDoc) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                     , , , , , "Nro Ope. : " & Str(nMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                     psNomAge, Right(psMovNro, 4), psLpt, , , , , False, , , , , , , , , False, , 0, , , , pbImpTMU)
        
    Else
        nResult = CapAbonoCuentaAho(psCtaCodAho, pnMontoPago, IIf(bEfectivo, gotrOpeDepUtilidadesEfect, gotropeDepUtilidadesTrans), _
                                     psMovNro, psGlosa, , , , , , , , , psNomAge, , , True, , , , , oBase.dbCmact, , pnMontoITF, , "990101", _
                                      , , , , psBoleta, , pbImpTMU)
        If nMovNro = 0 Then nMovNro = oBase.GetnMovNro(psMovNro)
        psBoleta = ImprimeBoleta("Pago Utilidades Abono Cuenta", "Pago Utilid. Periodo " & pnPeriodo, gotropeDepUtilidadesTrans, Str(pnMontoPago), _
                                     psPersNombre, psCtaCodAho, "", 0, "0", IIf(Len(psNroDoc) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                     , , , True, , "Nro Ope. : " & Str(nMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                     psNomAge, Right(psMovNro, 4), psLpt, , , , , False, , , , , , , , , False, 2, pnMontoITF, True, , , pbImpTMU)
                                      
    End If
    If nResult > 0 Then
        If nMovNro = 0 Then nMovNro = oBase.GetnMovNro(psMovNro)
        pnMovNro = nMovNro
        oBase.dbCmact.Execute ("STP_UPD_PAGO_UTILIDAD_EXTRABAJADOR " & nMovNro & ", " & psPersCod & ", '1', " & pnUtilidades)
        oBase.dbCmact.CommitTrans
        Set oBase = Nothing
        Exit Function
    Else
        oBase.dbCmact.RollbackTrans
        Set oBase = Nothing
        GrabarPagoUtilidades = "Ocurrió un error al procesar el pago de utilidades"
        pnMovNro = 0
        Exit Function
    End If
    Exit Function
ErrPagoUtilidades:
    GrabarPagoUtilidades = "Ocurrió un error al procesar el pago de utilidades" & ". Error " & Err.Number & " - " & Err.Description
    pnMovNro = 0
    If bTransac Then
        Call oBase.dbCmact.RollbackTrans
        Set oBase = Nothing
    End If
    Err.Raise Err.Number, "Error En Pago de Utilidades", Err.Description
End Function
Public Function ExtornoGrabarPagoUtilidades(ByVal psMovNro As String, ByVal psOperacion As String, _
                                            ByVal psOperacionExt As String, ByVal pnMovNro As Long, _
                                            ByVal psGlosa As String, ByVal pnMonto As Double, _
                                            ByVal psNroDoc As String, ByVal psNomAge As String, _
                                            ByVal pnITFMonto As Double, ByVal psITFOperacion As String, _
                                            ByRef psBoleta As String, ByVal pbImpTMU As Boolean, _
                                            ByVal pnPeriodo As Integer, ByVal psNombre As String, _
                                            Optional ByVal psMotExtorno As Variant) As Long

    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim clsCapMovO As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim lnMovNro As Long
    Dim rs As ADODB.Recordset
    Dim bTran As Boolean
    Dim sCuenta As String
    Dim sMensajeVal As String
        
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    
    clsCapMov.dBeginTrans
        
    'Extorno del pago en efectivo
    If psOperacion = gotrOpeDepUtilidadesEfect Then
    
        clsCapMov.AgregaMov psMovNro, Trim(psOperacionExt), psGlosa, gMovEstContabNoContable, gMovFlagDeExtorno
        lnMovNro = clsCapMov.GetnMovNro(psMovNro)
        '**CTI3 (ferimoro) 02102018
        clsCapMov.dInsertDetExtMov lnMovNro, Trim(psOperacionExt), psMotExtorno(0), psMotExtorno(1)
        
        clsCapMov.AgregaMovRef lnMovNro, pnMovNro
        clsCapMov.ActualizaEstadoMov pnMovNro, gMovFlagEliminado
    
        psBoleta = ImprimeBoleta("Ext. Pag. Utilidades Efectivo", "Ext. Utilid. Periodo " & pnPeriodo, gotrOpeDepUtilidadesEfect, Str(pnMonto), _
                                 psNombre, sCuenta, "", 0, "0", IIf(Len(psNroDoc) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                  , , , , , "Nro Ope. : " & Str(lnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                 psNomAge, Right(psMovNro, 4), , , , , , False, , , , , , , , , False, 3, pnITFMonto, True, , , pbImpTMU)

    'Extorno del pago con abono en cuenta
    ElseIf psOperacion = gotropeDepUtilidadesTrans Then
        
        ' Obteniendo la cuenta del mov
        Set rs = clsCapMov.GetCapMov(pnMovNro, gConcCapital, gCapAhorros)
        sCuenta = rs("cCtaCod")
        
        'obteniendo el monto del ITF del mov
        Set rs = Nothing
        Set rs = clsCapMov.GetMovTransferenciaITF(pnMovNro, sCuenta)
        If Not rs Is Nothing Then
            If Not rs.EOF And Not rs.BOF Then
                pnITFMonto = rs("nMonto")
            End If
        End If
        Set rs = Nothing
        
        'CapExtornoAbonoAho pnMovNro, psOperacionExt, sCuenta, psMovNro, psGlosa, _
                           pnMonto, , , , psNomAge, , , pnITFMonto, _
                            gITFCobroCargo, gConcITFCliente, , sMensajeVal, psBoleta, , pbImpTMU, , , _
                           clsCapMov.dbCmact
        '***cti3
        CapExtornoAbonoAho pnMovNro, psOperacionExt, sCuenta, psMovNro, psGlosa, _
                           pnMonto, , , , psNomAge, , , pnITFMonto, _
                            gITFCobroCargo, gConcITFCliente, , sMensajeVal, psBoleta, , pbImpTMU, , , _
                           clsCapMov.dbCmact, psMotExtorno
                           
        lnMovNro = clsCapMov.GetnMovNro(psMovNro)
        psBoleta = ImprimeBoleta("Ext. Pag. Utilidades Abono Cta", "Periodo " & pnPeriodo, gotropeDepUtilidadesTrans, Str(pnMonto), _
                                 psNombre, sCuenta, "", 0, "0", IIf(Len(psNroDoc) = 0, "", "Nro Documento"), 0, 0, False, False, _
                                  , , , True, , "Nro Ope. : " & Str(lnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                 psNomAge, Right(psMovNro, 4), , , , , , False, , , , , , , , , False, 2, pnITFMonto, True, , , pbImpTMU)
        
    End If
    clsCapMov.dbCmact.Execute ("STP_UPD_EXTORNO_PAGO_UTILIDAD_EXTRABAJADOR " & pnMovNro)
    clsCapMov.dCommitTrans

    Set clsCapMov = Nothing
    ExtornoGrabarPagoUtilidades = lnMovNro

End Function
Public Function VerificaEstadoTrama(ByVal pnMovNro As Long) As Integer
    
Dim sSql As String
Dim nResult As Integer
Dim oConecta As COMConecta.DCOMConecta
Dim rsCuenta As ADODB.Recordset
nResult = -1
sSql = " STP_SEL_VERIFICA_ESTADO_TRAMA " & pnMovNro
Set oConecta = New COMConecta.DCOMConecta
oConecta.AbreConexion
Set rsCuenta = oConecta.CargaRecordSet(sSql)
oConecta.CierraConexion
If Not rsCuenta Is Nothing Then
    If Not rsCuenta.EOF And Not rsCuenta.BOF Then
        nResult = rsCuenta("nEstado")
    End If
End If
Set rsCuenta = Nothing
Set oConecta = Nothing
 VerificaEstadoTrama = nResult

End Function
'END RIRO ********************************************************************

'RIRO20150515 ERS146-2014 ****************************************************
Public Function ValidaCuentaTransferenciaConvenio(ByVal psCtaCod As String, ByVal psCtaConvenio As String) As ADODB.Recordset

Dim sSql As String, sMensaje As String
Dim oConecta As COMConecta.DCOMConecta
Dim rsCuenta As ADODB.Recordset
sSql = "stp_sel_ValidaCtaTransferencia '" & psCtaCod & "', '" & psCtaConvenio & "'"
Set oConecta = New COMConecta.DCOMConecta
oConecta.AbreConexion
Set rsCuenta = oConecta.CargaRecordSet(sSql)
oConecta.CierraConexion
Set oConecta = Nothing
Set ValidaCuentaTransferenciaConvenio = rsCuenta

End Function
'END RIRO ********************************************************************
'EJVG20151016 ***
Public Function RealizoInteresCash(ByVal psCtaCod As String) As Boolean
    Dim oDCapMov As New COMDCaptaGenerales.DCOMCaptaMovimiento
    RealizoInteresCash = oDCapMov.RealizoInteresCash(psCtaCod)
    Set oDCapMov = Nothing
End Function
'END EJVG *******
'JUEZ 20150922 ***********************************************************************
Public Function GrabaCompraVenta(ByVal pnMovNro As Long, ByVal psMovNro As String, ByVal psOpeCod As String, ByVal psMovDesc As String, _
                                 ByVal pnImporte As Double, ByVal pnTipoCambio As Double, ByVal psCodPers As String, _
                                 ByVal oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento) As Integer
                                 
Dim objTC As COMDConstSistema.DCOMTipoCambio
Dim lbTrans As Boolean
Dim lnMovNro As Long
Dim nI As Integer

Dim oRsTCambio As ADODB.Recordset
Set oRsTCambio = New ADODB.Recordset

Dim lnValVent As Currency
Dim lnValComp As Currency
Dim lnValFijo As Currency
Dim lnValFijoDia As Currency
Dim lnValVentEsp As Currency
Dim lnValCompEsp As Currency
Dim lnValPond As Currency
Dim lnValPondVenta As Currency
Dim lnValPondREU As Currency
Dim lnValSBSDia As Currency
Dim lnValCompTr As Currency
Dim lnValVentTr As Currency

On Error GoTo GrabaCompraVentaErr

Set objTC = New COMDConstSistema.DCOMTipoCambio

Set oRsTCambio = objTC.ObtenerTipoCambioDiario(CDate(Mid(psMovNro, 1, 4) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 7, 2)))
If Not (oRsTCambio.BOF Or oRsTCambio.EOF) Then
    Do While Not oRsTCambio.EOF
        lnValVent = oRsTCambio!nValVent
        lnValComp = oRsTCambio!nValComp
        lnValFijo = oRsTCambio!nValFijo
        lnValFijoDia = oRsTCambio!nValFijoDia
        lnValVentEsp = oRsTCambio!nValVentEsp
        lnValCompEsp = oRsTCambio!nValCompEsp
        lnValPond = oRsTCambio!nValPond
        lnValPondVenta = oRsTCambio!nValPondVenta
        lnValPondREU = oRsTCambio!nValPondREU
        lnValSBSDia = oRsTCambio!nValSBSDia
        lnValCompTr = oRsTCambio!nValCompTr
        lnValVentTr = oRsTCambio!nValVentTr
        oRsTCambio.MoveNext
    Loop
End If

lbTrans = True
GrabaCompraVenta = 1

psMovNro = oDCapMov.GeneraMovNro(CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4)), Mid(psMovNro, 18, 2), Right(psMovNro, 4), psMovNro)

oDCapMov.AgregaMov psMovNro, psOpeCod, psMovDesc, gMovEstContabMovContable, gMovFlagVigente
lnMovNro = oDCapMov.GetnMovNro(psMovNro)

oDCapMov.AgregaMovCompraVenta lnMovNro, psCodPers, pnImporte

oDCapMov.AgregaMovTpoCambio lnMovNro, pnTipoCambio, lnValVent, lnValComp, lnValFijo, lnValFijoDia, lnValVentEsp, lnValCompEsp, lnValPond, lnValPondVenta, lnValPondREU, lnValSBSDia, lnValCompTr, lnValVentTr

lbTrans = False
GrabaCompraVenta = 0
Set oDCapMov = Nothing
Exit Function
GrabaCompraVentaErr:
    If lbTrans Then
        oDCapMov.dbCmact.RollbackTrans
        lbTrans = False
    End If
    Err.Raise Err.Number, Err.Source, Err.Description
End Function
'END JUEZ ****************************************************************************
'RECO20151123 ERS073-2015 *****************************************************
Public Function CapCargoCuentaSegSepelio(ByVal psCuenta As String, ByVal pnMonto As Double, ByVal psCodOpe As String, psMovNro As String, ByVal psMovDesc As String, _
                                        ByVal psNomAge As String, ByVal psLpt As String, ByVal psCodCmac As String, ByVal psCodAge As String, ByVal psMensaje As String, _
                                        ByVal pbImpTMU As Boolean, ByVal psNumCert As String, ByVal psNumTarj As String, ByVal pdFecSis As String, ByVal psPersCod As String, _
                                        ByRef psBoletaImp As String, ByVal psAgeCod As String, ByRef pnMovNro As Long, Optional ByVal pConn As ADODB.Connection = Nothing, Optional ByVal pbPrimaAnual As Integer = 0, _
                                        Optional ByVal pcUser As String = "", Optional ByVal pcUserVenta As String = "") As Double
    'add pConn - RIRO 20170505 ***
    'APRI20181023 ERS071-2018 ADD pbPrimaAnual
    'CTI2 FERIMORO ERS034-019 : Optional ByVal cUser As String = "", Optional ByVal cUserVenta As String = ""
    Dim clsCap As New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim oNSegSep As New COMNCaptaGenerales.NCOMSeguros
    Dim bTrans As Boolean
    Dim nMovNro As Long
    Dim index As Integer
    Dim nSaldo As Double

    On Error GoTo ErrGraba
    
    'RIRO 20170505 ***
    If Not pConn Is Nothing Then
        Set clsCap.dbCmact = pConn
        clsCap.bTransaccion = True
        bTrans = False
    Else
        clsCap.dbCmact.BeginTrans
        bTrans = True
    End If
    'RIRO ************
    
    clsCap.AgregaMov psMovNro, psCodOpe, psMovDesc
    nMovNro = clsCap.GetnMovNro(psMovNro)
    pnMovNro = nMovNro
    If Mid(psCuenta, 6, 3) = gCapAhorros Then
        nSaldo = CapCargoCuentaAho(psCuenta, pnMonto, psCodOpe, psMovNro, psMovDesc, , , , , , , , , psNomAge, psLpt, , bTrans, , , psCodCmac, clsCap.dbCmact, psCodAge, , , , , , "", , psMensaje, , , , , pbImpTMU)
    Else
        nSaldo = CapCargoCuentaCTS(psCuenta, pnMonto, psCodOpe, psMovNro, psMovDesc, , , , , , , psNomAge, psLpt, , , , , , , , , , , psMensaje, , pbImpTMU, , , , , , , , , , , , , , , bTrans, clsCap.dbCmact)
    End If
    
    'CTI2 FERIMORO: ERS034-2019 : 31082020
    'clsCap.AgregaSegSepelioAfiliacion psNumCert, psCuenta, pdFecSis, psMovNro, nMovNro, psPersCod, psAgeCod, pbPrimaAnual
    clsCap.AgregaSegSepelioAfiliacion psNumCert, psCuenta, pdFecSis, psMovNro, nMovNro, psPersCod, psAgeCod, pbPrimaAnual, pcUser, pcUserVenta
    clsCap.AgregaSegSepelioAfiliacionHis psNumCert, psCuenta, pdFecSis, psMovNro, nMovNro, psPersCod, psAgeCod, 501 'APRI20171024 ERS028-2017 501
    
    'CTI2 FERIMORO: ERS034-2019 : 25082020
    clsCap.SeguroCronogramaAfiliacion 0, pdFecSis, pbPrimaAnual, psNumCert, nMovNro
    
    'clsCap.dbCmact.CommitTrans 'comentado por RIRO 20170505
    If pConn Is Nothing Then clsCap.dbCmact.CommitTrans  ' ADD RIRO 20170505
    
    'psBoletaImp = oNSegSep.ImprimeBoletaAfilicacionSeguroSepelio(nMovNro, psMovNro, psNomAge, pbImpTMU)
    Set oNSegSep = Nothing
    CapCargoCuentaSegSepelio = nSaldo

    Exit Function
ErrGraba:
    If bTrans Then clsCap.dbCmact.RollbackTrans
    Set clsCap = Nothing
    CapCargoCuentaSegSepelio = -1
    Err.Raise Err.Number, "CapCargoCuentaSegSepelio", Err.Description
End Function
'RECO FIN *********************************************************************
'RIRO20160108 *************
Public Function ExtornoPagoCC(ByVal psMovNro As String, _
                              ByVal pnMovNro As Long, _
                              ByVal pnOperacion As CaptacOperacion, _
                              ByVal psGlosa As String, _
                              ByVal psNomAge As String, _
                              ByVal pbImpTMU As Boolean, _
                              ByRef psBoleta As String, _
                              Optional ByVal psMotExtorno As Variant) As Boolean

    Dim clsCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim lnMovNro As Long
    Dim rs As ADODB.Recordset
    Dim bResult As Boolean
    Dim bTrans As Boolean
    
    Dim sTitulo As String
    Dim sOperador As String
    Dim sCdOperador As String
    Dim nMonto As Currency
    Dim nMoneda As Integer

On Error GoTo ErrGraba
    
    clsCapMov.dBeginTrans
    bTrans = True
    
    clsCapMov.AgregaMov psMovNro, pnOperacion, psGlosa, gMovEstContabNoContable, gMovFlagVigente
    lnMovNro = clsCapMov.GetnMovNro(psMovNro)
    clsCapMov.AgregaMovRef lnMovNro, pnMovNro
    clsCapMov.ActualizaEstadoMov pnMovNro, gMovFlagEliminado
    bResult = clsCapMov.ExtornoPagoCC(pnMovNro)
    
    If Not bResult And bTrans Then
        clsCapMov.dbCmact.RollbackTrans
        Set clsCapMov = Nothing
        ExtornoPagoCC = True
        Exit Function
    End If
    
    'Boleta de Extorno de pago
    clsCapMov.ObtieneDatosVoucherCajeroCorresponsal pnMovNro, sTitulo, sOperador, sCdOperador, nMonto, nMoneda
    psBoleta = ImprimeBoleta("Extorno Pago Caj. Corresponsal", "Cajero Corresponsal", gOtrOpePagoRecaudoCajeroCorresponsal, Str(Format(nMonto, "#0.00")), _
                                 sOperador, "________" & nMoneda, sCdOperador, 0, "0", "Cod. Cajero", 0, 0, False, False, _
                                 , , , , , "Nro Ope. : " & Str(lnMovNro), , CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 1, 4)), _
                                 psNomAge, Right(psMovNro, 4), , , , , , , , , , , , , , , False, , 0, , , , pbImpTMU, , , sOperador)
    'end boleta de extorno
    
    clsCapMov.dCommitTrans
    bTrans = False
        
    Set clsCapMov = Nothing
    ExtornoPagoCC = True
    
    Exit Function
    
ErrGraba:
    ExtornoPagoCC = False
    If bTrans Then
        clsCapMov.dbCmact.RollbackTrans
        Set clsCapMov = Nothing
    End If
    
End Function
Public Sub ObtieneDatosVoucherCajeroCorresponsal(ByVal pnMovNro As Long, _
                                                 ByRef psTituloOpe As String, _
                                                 ByRef psOperador As String, _
                                                 ByRef psCodOperador As String, _
                                                 ByRef pnMonto As Currency, _
                                                 ByRef pnMoneda As Integer)

    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    clsCap.ObtieneDatosVoucherCajeroCorresponsal pnMovNro, psTituloOpe, psOperador, psCodOperador, pnMonto, pnMoneda
    Set clsCap = Nothing
    Exit Sub

End Sub
Public Function ObtieneDatosCajeroCorresponsal(ByVal sCodigoCC As String) As ADODB.Recordset

    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    Set ObtieneDatosCajeroCorresponsal = clsCap.ObtieneDatosCajeroCorresponsal(sCodigoCC)
    Set clsCap = Nothing
    Exit Function

End Function
Public Function PagoRecaudoCajeroCorresponsal(ByVal psMovNro As String, _
                                              ByVal pnOperacion As CaptacOperacion, _
                                              ByVal pnCodigoCC As Long, _
                                              ByVal psPersCod As String, _
                                              ByVal pnMonto As Currency, _
                                              ByVal pnMoneda As Integer, _
                                              ByVal psGlosa As String, _
                                              ByRef sMensaje As String, _
                                              ByRef lnMovNro As Long) As Boolean

    Dim clsCap As New COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim bTrans As Boolean
    Dim rsPagoRecaudo As ADODB.Recordset
    Dim gMoneda As Moneda
    
    Dim nResp As Integer
    Dim sDescipcion As String
    Dim nMontoRest As Currency
    Dim bResult As Boolean
    
    On Error GoTo ErrGraba
    
    If pnMoneda = 1 Then
        gMoneda = gMonedaNacional
    ElseIf pnMoneda = 2 Then
        gMoneda = gMonedaExtranjera
    End If
    
    bResult = False
    clsCap.dbCmact.BeginTrans
    bTrans = True
    Set rsPagoRecaudo = clsCap.PagoRecaudoCajeroCorresponsal(pnCodigoCC, pnMonto)
    If Not rsPagoRecaudo Is Nothing Then
        If Not rsPagoRecaudo.BOF And Not rsPagoRecaudo.EOF Then
            If rsPagoRecaudo.RecordCount > 0 Then
                nResp = rsPagoRecaudo!nResp
                sDescipcion = rsPagoRecaudo!cDescrip
                nMontoRest = rsPagoRecaudo!nMonto
                If nResp = 1 Then
                    bResult = True
                End If
            End If
        End If
    End If
    If nResp <> 1 And Not bResult And bTrans Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
        Set rsPagoRecaudo = Nothing
        sMensaje = sDescipcion
        Exit Function
    End If
    Call OtrasOperaciones(psMovNro, pnOperacion, pnMonto, CStr(pnCodigoCC), psGlosa, gMoneda, psPersCod, , , , , , , , , clsCap.dbCmact)
    lnMovNro = clsCap.GetnMovNro(psMovNro)
    clsCap.dbCmact.CommitTrans
    bTrans = False
    PagoRecaudoCajeroCorresponsal = True
    Exit Function
ErrGraba:
    PagoRecaudoCajeroCorresponsal = False
    If bTrans Then
        clsCap.dbCmact.RollbackTrans
        Set clsCap = Nothing
    End If
End Function
'END RIRO *****************
'JUEZ 20151229 ************************************************************************
Public Sub GrabarOpeComisionConteoMoneda(ByVal pnMovNro As Long, ByVal prsMonedas As ADODB.Recordset)
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento

    Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
        prsMonedas.MoveFirst
        Do While Not prsMonedas.EOF
            oDCapMov.GrabarOpeComisionConteoMoneda pnMovNro, prsMonedas!cEfectivoCod, prsMonedas!Monto
            prsMonedas.MoveNext
        Loop
    Set oDCapMov = Nothing
End Sub
'END JUEZ *****************************************************************************

'PASI20161129 CCE**********************************************************************

Public Function ImprimeVoucherTransferencia(ByVal rsVaucher As ADODB.Recordset, ByVal impTMU As Boolean, ByVal cUser As String, psCodOpe As String) As String
Dim oImp As COMFunciones.FCOMVarImpresion
Dim sTexto As String
Dim nEspacio As Integer
Dim nEspacioMora As Integer
Dim nAncho As Integer
Dim nTemporal As Integer
Dim sMoneda As String
Dim sTitulo As String

    If rsVaucher.EOF Or rsVaucher.BOF Then
        ImprimeVoucherTransferencia = ""
        Exit Function
    End If
        
    Set oImp = New COMFunciones.FCOMVarImpresion
    oImp.Inicia gEPSON
    sTexto = ""
    sTexto = sTexto & oImp.gPrnInicializa
    sTexto = sTexto & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    sTexto = sTexto & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    sTexto = sTexto & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    sTexto = sTexto & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    sTexto = sTexto & oImp.gPrnCondensadaOFF ' cancela condensada
    sTexto = sTexto & oImp.gPrnNegritaOFF
    sTexto = sTexto & vbNewLine
    
    Select Case psCodOpe
        Case gCMCCETransfOrdinaria
            sTitulo = "TRANSF. ORDINARIA"
        Case gCMCCETransfPagoHaberes
            sTitulo = "TRANSF. PAGO HAB."
        Case gCMCCETransfPagoProveedor
            sTitulo = "TRANSF. PAGO PROV."
        Case gCMCCETransfPagoCTS
            sTitulo = "TRANSF. PAGO CTS"
        Case gCMCCETransfPagoTarjCred
            sTitulo = "TRANSF. PAGO TARJ."
    End Select
    
    If impTMU Then
            sTexto = sTexto & Left("CMAC MAYNAS" & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(19), 19) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & vbNewLine
            sTexto = sTexto & Left("Fecha: " & rsVaucher!fecha & Space(4) & "Hora: " & rsVaucher!Hora & Space(35), 35) & vbNewLine 'ANDE 20180210 se modificó la hora de rsVaucher!fecha a rsVaucher!Hora
            sTexto = sTexto & Left(rsVaucher!Cliente & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!TpoDOI & ": " & rsVaucher!NroDOI & Space(35), 35) & vbNewLine
            sTexto = sTexto & vbNewLine
            sTexto = sTexto & String(7, "-") & AlinearTexto(sTitulo, 21, Centro) & String(7, "-") & vbNewLine
            sTexto = sTexto & Left(rsVaucher!BcoDest & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(IIf(Not psCodOpe = gCMCCETransfPagoTarjCred, rsVaucher!cNumCCI, rsVaucher!cNumTarj) & Space(35), 35) & vbNewLine
            If rsVaucher!MontoTransf >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!MontoTransf >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!MontoTransf >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!MontoTransf >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!MontoTransf >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Monto a Transf." & Space(20), 20) & Space(nEspacio) & Format$(rsVaucher!MontoTransf, "#,##0.00") & Space(35), 35) & vbNewLine
            If rsVaucher!Comision >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!Comision >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!Comision >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!Comision >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!Comision >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Comisión" & Space(25), 20) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(35), 35) & vbNewLine
            
            If rsVaucher!nITF >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!nITF >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!nITF >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!nITF >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!nITF >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("ITF" & Space(25), 20) & Space(nEspacio) & Format$(rsVaucher!nITF, "#,##0.00") & Space(35), 35) & vbNewLine
            sMoneda = IIf(rsVaucher!Moneda = "SOLES", " S/ ", IIf(rsVaucher!Moneda = "DOLARES", "  $ ", "Otr "))
            
            If (rsVaucher!TotalPagado) >= 100000 Then
                nEspacio = 5
            ElseIf (rsVaucher!TotalPagado) >= 10000 Then
                nEspacio = 6
            ElseIf (rsVaucher!TotalPagado) >= 1000 Then
                nEspacio = 7
            ElseIf (rsVaucher!TotalPagado) >= 100 Then
                nEspacio = 9
            ElseIf (rsVaucher!TotalPagado) >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Total Pagado:  " & Space(16), 16) & Space(nEspacio) & sMoneda & Format$(rsVaucher!TotalPagado, "#,##0.00") & Space(35), 35) & vbNewLine
            sTexto = sTexto & "===================================" & vbNewLine
            sTexto = sTexto & "***ESTIMADO CLIENTE, ANTES DE RETIR" & vbNewLine
            sTexto = sTexto & "ARSE DE LA VENTANILLA VERIFIQUE QUE" & vbNewLine
            sTexto = sTexto & "LOS DATOS  CONSIGNADOS CORRESPONDAN" & vbNewLine
            sTexto = sTexto & "A LA OPERACION SOLICITADA POR USTED" & vbNewLine
             sTexto = sTexto & "***" & vbNewLine
            sTexto = sTexto & cUser & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine
            sTexto = sTexto & Chr(27) & "m" & Chr(10)
    Else
            nAncho = 40
            sTexto = sTexto & Left("CMAC MAYNAS" & Space(40), 40) & _
                      Space(15) & Left("CMAC MAYNAS" & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(24), 24) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & _
                      Space(15) & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(24), 24) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & vbNewLine
                      
            sTexto = sTexto & Left("Fecha: " & rsVaucher!fecha & Space(9) & "Hora: " & rsVaucher!Hora & Space(40), 40) & _
                      Space(15) & Left("Fecha: " & rsVaucher!fecha & Space(9) & "Hora: " & rsVaucher!Hora & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(rsVaucher!Cliente & Space(40), 40) & _
                      Space(15) & Left(rsVaucher!Cliente & Space(40), 40) & vbNewLine
                              
            sTexto = sTexto & Left(rsVaucher!TpoDOI & ": " & rsVaucher!NroDOI & Space(40), 40) & _
                    Space(15) & Left(rsVaucher!TpoDOI & ": " & rsVaucher!NroDOI & Space(40), 40) & vbNewLine
                    
            sTexto = sTexto & vbNewLine
            
            sTexto = sTexto & String(8, "-") & AlinearTexto(sTitulo, 22, Centro) & String(9, "-") & _
                      Space(15) & String(8, "-") & AlinearTexto(sTitulo, 22, Centro) & String(9, "-") & vbNewLine & vbNewLine
                      
            sTexto = sTexto & Left(rsVaucher!BcoDest & Space(40), 40) & _
                      Space(15) & Left(rsVaucher!BcoDest & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(IIf(Not psCodOpe = gCMCCETransfPagoTarjCred, rsVaucher!cNumCCI, rsVaucher!cNumTarj) & Space(40), 40) & _
                      Space(15) & Left(IIf(Not psCodOpe = gCMCCETransfPagoTarjCred, rsVaucher!cNumCCI, rsVaucher!cNumTarj) & Space(40), 40) & vbNewLine
            
            If rsVaucher!MontoTransf >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!MontoTransf >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!MontoTransf >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!MontoTransf >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!MontoTransf >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Monto a Transf." & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!MontoTransf, "#,##0.00") & Space(40), 40) & _
                                  Space(15) & Left(Left("Monto a Transf." & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!MontoTransf, "#,##0.00") & Space(40), 40) & vbNewLine
            
            If rsVaucher!Comision >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!Comision >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!Comision >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!Comision >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!Comision >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Comisión" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(40), 40) & _
                                  Space(15) & Left(Left("Comisión" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(40), 40) & vbNewLine
                                  
            If rsVaucher!nITF >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!nITF >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!nITF >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!nITF >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!nITF >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("ITF" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!nITF, "#,##0.00") & Space(40), 40) & _
                                  Space(15) & Left(Left("ITF" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!nITF, "#,##0.00") & Space(40), 40) & vbNewLine
                                                  
            If (rsVaucher!TotalPagado) >= 100000 Then
                nEspacio = 5
            ElseIf (rsVaucher!TotalPagado) >= 10000 Then
                nEspacio = 6
            ElseIf (rsVaucher!TotalPagado) >= 1000 Then
                nEspacio = 7
            ElseIf (rsVaucher!TotalPagado) >= 100 Then
                nEspacio = 9
            ElseIf (rsVaucher!TotalPagado) >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sMoneda = IIf(rsVaucher!Moneda = "SOLES", " S/ ", IIf(rsVaucher!Moneda = "DOLARES", "  $ ", "Otr "))
            sTexto = sTexto & Left(Left("Total Pagado: " & Space(50), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!TotalPagado, "#,##0.00") & Space(40), 40) & _
                Space(15) & Left(Left("Total Pagado: " & Space(50), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!TotalPagado, "#,##0.00") & Space(40), 40) & vbNewLine & vbNewLine
            
            sTexto = sTexto & "========================================" & Space(15) & "========================================" & vbNewLine
            sTexto = sTexto & "***ESTIMADO CLIENTE,  ANTES DE RETIRARSE" & Space(15) & "***ESTIMADO CLIENTE,  ANTES DE RETIRARSE" & vbNewLine & _
                                  "DE LA VENTANILLA VERIFIQUE QUE LOS DATOS" & Space(15) & "DE LA VENTANILLA VERIFIQUE QUE LOS DATOS" & vbNewLine & _
                                  "CONSIGNADOS CORRESPONDAN A LA OPERACION " & Space(15) & "CONSIGNADOS CORRESPONDAN A LA OPERACION " & vbNewLine & _
                                  Left("SOLICITADA POR USTED***" & Space(40), 40) & Space(15) & Left("SOLICITADA POR USTED***" & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(cUser & Space(40), 40) & Space(15) & cUser & vbNewLine & vbNewLine & vbNewLine & vbNewLine
    End If
    sTexto = Replace(sTexto, "k", "")
    sTexto = Replace(sTexto, "H", "")
    sTexto = Replace(sTexto, "B", "")
    sTexto = Replace(sTexto, "M", "")
    sTexto = Replace(sTexto, "@", "")
    sTexto = Replace(sTexto, "2", "")
    
    ImprimeVoucherTransferencia = sTexto
    
    Exit Function
End Function
'PASI END******************************************************************************
'VAPA20170708
Public Function ImprimeVoucherExtornoTransf(ByVal rsVaucher As ADODB.Recordset, ByVal impTMU As Boolean, ByVal cUser As String, psCodOpe As String) As String
Dim oImp As COMFunciones.FCOMVarImpresion
Dim sTexto As String
Dim nEspacio As Integer
Dim nEspacioMora As Integer
Dim nAncho As Integer
Dim nTemporal As Integer
Dim sMoneda As String
Dim sTitulo As String

    If rsVaucher.EOF Or rsVaucher.BOF Then
        ImprimeVoucherExtornoTransf = ""
        Exit Function
    End If
        
    Set oImp = New COMFunciones.FCOMVarImpresion
    oImp.Inicia gEPSON
    sTexto = ""
    sTexto = sTexto & oImp.gPrnInicializa
    sTexto = sTexto & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    sTexto = sTexto & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    sTexto = sTexto & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    sTexto = sTexto & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    sTexto = sTexto & oImp.gPrnCondensadaOFF ' cancela condensada
    sTexto = sTexto & oImp.gPrnNegritaOFF
    sTexto = sTexto & vbNewLine
    
    Select Case psCodOpe
        Case "940001"
            sTitulo = " EXTORNO DE TRANSF ORDINARIA CCE"
       
    End Select
    
    If impTMU Then
            sTexto = sTexto & Left("CMAC MAYNAS" & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(19), 19) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & vbNewLine
            sTexto = sTexto & Left("Fecha: " & rsVaucher!fecha & Space(4) & "Hora: " & rsVaucher!Hora & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!Cliente & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(IIf(Not psCodOpe = gCMCCETransfPagoTarjCred, rsVaucher!cCtaCod, rsVaucher!cNumTarj) & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(rsVaucher!TpoDOI & ": " & rsVaucher!NroDOI & Space(35), 35) & vbNewLine
            sTexto = sTexto & vbNewLine
            sTexto = sTexto & String(2, "-") & AlinearTexto(sTitulo, 31, Centro) & String(2, "-") & vbNewLine
            sTexto = sTexto & Left(rsVaucher!BcoDest & Space(35), 35) & vbNewLine
            If rsVaucher!MontoTransf >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!MontoTransf >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!MontoTransf >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!MontoTransf >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!MontoTransf >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext .Monto a Transf." & Space(20), 20) & Space(nEspacio) & Format$(rsVaucher!MontoTransf, "#,##0.00") & Space(35), 35) & vbNewLine
            If rsVaucher!Comision >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!Comision >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!Comision >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!Comision >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!Comision >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext. Comisión" & Space(25), 20) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(35), 35) & vbNewLine
            
            If rsVaucher!nITF >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!nITF >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!nITF >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!nITF >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!nITF >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext. ITF" & Space(25), 20) & Space(nEspacio) & Format$(rsVaucher!nITF, "#,##0.00") & Space(35), 35) & vbNewLine
            sMoneda = IIf(rsVaucher!Moneda = "SOLES", "S/ ", IIf(rsVaucher!Moneda = "DOLARES", "  $ ", "Otr "))
            
            If (rsVaucher!TotalPagado) >= 100000 Then
                nEspacio = 5
            ElseIf (rsVaucher!TotalPagado) >= 10000 Then
                nEspacio = 6
            ElseIf (rsVaucher!TotalPagado) >= 1000 Then
                nEspacio = 7
            ElseIf (rsVaucher!TotalPagado) >= 100 Then
                nEspacio = 9
            ElseIf (rsVaucher!TotalPagado) >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext Total Pagado: " & Space(12), 16) & Space(nEspacio) & sMoneda & Format$(rsVaucher!TotalPagado, "#,##0.00") & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(Left("Saldo Disponible: " & Space(12), 16) & Space(nEspacio) & sMoneda & Format$(rsVaucher!nSaldoDisp, "#,##0.00") & Space(35), 35) & vbNewLine
            sTexto = sTexto & Left(Left("Saldo Contable: " & Space(12), 16) & Space(nEspacio) & sMoneda & Format$(rsVaucher!nSaldo, "#,##0.00") & Space(35), 35) & vbNewLine
            
            sTexto = sTexto & "" & vbNewLine
            sTexto = sTexto & "" & vbNewLine
            sTexto = sTexto & "" & vbNewLine
            sTexto = sTexto & "" & vbNewLine
            sTexto = sTexto & "" & vbNewLine
             sTexto = sTexto & "***" & vbNewLine
            sTexto = sTexto & cUser & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine & vbNewLine
            sTexto = sTexto & Chr(27) & "m" & Chr(10)
    Else
            nAncho = 40
            sTexto = sTexto & Left("CMAC MAYNAS" & Space(40), 40) & _
                      Space(4) & Left("CMAC MAYNAS" & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(24), 24) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & _
                      Space(4) & Left(rsVaucher!Agencia & "-" & rsVaucher!Moneda & Space(24), 24) & Space(3) & Left("Mov: " & Trim(rsVaucher!nMovNro) & Space(13), 13) & vbNewLine
                      
            sTexto = sTexto & Left("Fecha: " & rsVaucher!fecha & Space(9) & "Hora: " & rsVaucher!Hora & Space(40), 40) & _
                      Space(4) & Left("Fecha: " & rsVaucher!fecha & Space(9) & "Hora: " & rsVaucher!Hora & Space(40), 40) & vbNewLine
            
            sTexto = sTexto & Left(rsVaucher!Cliente & Space(40), 40) & _
                      Space(4) & Left(rsVaucher!Cliente & Space(40), 40) & vbNewLine
                      
             sTexto = sTexto & Left(IIf(Not psCodOpe = gCMCCETransfPagoTarjCred, rsVaucher!cCtaCod, rsVaucher!cNumTarj) & Space(40), 40) & _
                      Space(4) & Left(IIf(Not psCodOpe = gCMCCETransfPagoTarjCred, rsVaucher!cCtaCod, rsVaucher!cNumTarj) & Space(40), 40) & vbNewLine
                              
            sTexto = sTexto & Left(rsVaucher!TpoDOI & ": " & rsVaucher!NroDOI & Space(40), 40) & _
                    Space(4) & Left(rsVaucher!TpoDOI & ": " & rsVaucher!NroDOI & Space(40), 40) & vbNewLine
                    
            sTexto = sTexto & vbNewLine
            
            sTexto = sTexto & String(4, "-") & AlinearTexto(sTitulo, 31, Centro) & String(4, "-") & _
                      Space(4) & String(4, "-") & AlinearTexto(sTitulo, 31, Centro) & String(4, "-") & vbNewLine & vbNewLine
                      
            sTexto = sTexto & Left(rsVaucher!BcoDest & Space(40), 40) & _
                      Space(4) & Left(rsVaucher!BcoDest & Space(40), 40) & vbNewLine
            
           
            
            If rsVaucher!MontoTransf >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!MontoTransf >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!MontoTransf >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!MontoTransf >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!MontoTransf >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext. Monto a Transf." & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!MontoTransf, "#,##0.00") & Space(40), 40) & _
                                  Space(4) & Left(Left("Ext. Monto a Transf." & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!MontoTransf, "#,##0.00") & Space(40), 40) & vbNewLine
            
            If rsVaucher!Comision >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!Comision >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!Comision >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!Comision >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!Comision >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext. Comisión" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(40), 40) & _
                                  Space(4) & Left(Left("Comisión" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!Comision, "#,##0.00") & Space(40), 40) & vbNewLine
                                  
            If rsVaucher!nITF >= 100000 Then
                nEspacio = 5
            ElseIf rsVaucher!nITF >= 10000 Then
                nEspacio = 6
            ElseIf rsVaucher!nITF >= 1000 Then
                nEspacio = 7
            ElseIf rsVaucher!nITF >= 100 Then
                nEspacio = 9
            ElseIf rsVaucher!nITF >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sTexto = sTexto & Left(Left("Ext. ITF" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!nITF, "#,##0.00") & Space(40), 40) & _
                                  Space(4) & Left(Left("ITF" & Space(50), 25) & Space(nEspacio) & Format$(rsVaucher!nITF, "#,##0.00") & Space(40), 40) & vbNewLine
                                                  
            If (rsVaucher!TotalPagado) >= 100000 Then
                nEspacio = 5
            ElseIf (rsVaucher!TotalPagado) >= 10000 Then
                nEspacio = 6
            ElseIf (rsVaucher!TotalPagado) >= 1000 Then
                nEspacio = 7
            ElseIf (rsVaucher!TotalPagado) >= 100 Then
                nEspacio = 9
            ElseIf (rsVaucher!TotalPagado) >= 10 Then
                nEspacio = 10
            Else
                nEspacio = 11
            End If
            sMoneda = IIf(rsVaucher!Moneda = "SOLES", " S/ ", IIf(rsVaucher!Moneda = "DOLARES", "  $ ", "Otr "))
            
            sTexto = sTexto & Left(Left("Ext. Total Pagado: " & Space(40), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!TotalPagado, "#,##0.00") & Space(40), 40) & _
                Space(4) & Left(Left("Ext. Total Pagado: " & Space(40), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!TotalPagado, "#,##0.00") & Space(40), 40) & vbNewLine & vbNewLine
                
            sTexto = sTexto & Left(Left("Saldo Disponible: " & Space(40), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!nSaldoDisp, "#,##0.00") & Space(40), 40) & _
                Space(4) & Left(Left("Saldo Disponible: " & Space(40), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!nSaldoDisp, "#,##0.00") & Space(40), 40) & vbNewLine & vbNewLine
                
            sTexto = sTexto & Left(Left("Saldo Contable: " & Space(40), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!nSaldo, "#,##0.00") & Space(40), 40) & _
                Space(4) & Left(Left("Saldo Contable: " & Space(40), 21) & Space(nEspacio) & sMoneda & Format$(rsVaucher!nSaldo, "#,##0.00") & Space(40), 40) & vbNewLine & vbNewLine
                
            sTexto = sTexto & "========================================" & Space(4) & "========================================" & vbNewLine
            sTexto = sTexto & Left(cUser & Space(40), 40) & Space(4) & Left(cUser & Space(40), 40) & vbNewLine & vbNewLine & vbNewLine
            
    End If
    sTexto = Replace(sTexto, "k", "")
    sTexto = Replace(sTexto, "H", "")
    sTexto = Replace(sTexto, "B", "")
    sTexto = Replace(sTexto, "M", "")
    sTexto = Replace(sTexto, "@", "")
    sTexto = Replace(sTexto, "2", "")
    
    ImprimeVoucherExtornoTransf = sTexto
    
    Exit Function
End Function
'*********************add pti1 23-01-19 ERS081-2018 ACTA 06-2019 **********************
Public Function ValidaCuentaOperacionCCI(ByVal sCuenta As String) As Boolean
    Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
    Dim bEstado As Boolean
    
    Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento
    bEstado = clsCap.GetEstadoCuentaCCI(sCuenta)

    ValidaCuentaOperacionCCI = bEstado
    
End Function
'*********************END pti1 23-01-19 ERS081-2018 ACTA 06-2019 **********************
'VAPA20170708
'*************************APRI20170619 RFC1705220001*******************************************
'Public Function GrabaCompraVentaCheque(ByVal pnMovNro As Long, ByVal psMovNro As String, ByVal psOpeCod As String, ByVal psMovDesc As String, _
'                                 ByVal pnImporte As Double, ByVal pnTipoCambio As Double, _
'                                 ByVal oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento) As Integer
'
'
'Dim objTC As COMDConstSistema.DCOMTipoCambio
'Dim lbTrans As Boolean
'Dim lnMovNro As Long
'Dim nI As Integer
'
'Dim oRsTCambio As ADODB.Recordset
'Set oRsTCambio = New ADODB.Recordset
'
'Dim lnValVent As Currency
'Dim lnValComp As Currency
'Dim lnValFijo As Currency
'Dim lnValFijoDia As Currency
'Dim lnValVentEsp As Currency
'Dim lnValCompEsp As Currency
'Dim lnValPond As Currency
'Dim lnValPondVenta As Currency
'Dim lnValPondREU As Currency
'Dim lnValSBSDia As Currency
'Dim lnValCompTr As Currency
'Dim lnValVentTr As Currency
'
'On Error GoTo GrabaCompraVentaChequeErr
'
'Set objTC = New COMDConstSistema.DCOMTipoCambio
'
'Set oRsTCambio = objTC.ObtenerTipoCambioDiario(CDate(Mid(psMovNro, 1, 4) & "/" & Mid(psMovNro, 5, 2) & "/" & Mid(psMovNro, 7, 2)))
'If Not (oRsTCambio.BOF Or oRsTCambio.EOF) Then
'    Do While Not oRsTCambio.EOF
'        lnValVent = oRsTCambio!nValVent
'        lnValComp = oRsTCambio!nValComp
'        lnValFijo = oRsTCambio!nValFijo
'        lnValFijoDia = oRsTCambio!nValFijoDia
'        lnValVentEsp = oRsTCambio!nValVentEsp
'        lnValCompEsp = oRsTCambio!nValCompEsp
'        lnValPond = oRsTCambio!nValPond
'        lnValPondVenta = oRsTCambio!nValPondVenta
'        lnValPondREU = oRsTCambio!nValPondREU
'        lnValSBSDia = oRsTCambio!nValSBSDia
'        lnValCompTr = oRsTCambio!nValCompTr
'        lnValVentTr = oRsTCambio!nValVentTr
'        oRsTCambio.MoveNext
'    Loop
'End If
'
'lbTrans = True
'GrabaCompraVentaCheque = 1
'
'psMovNro = oDCapMov.GeneraMovNro(CDate(Mid(psMovNro, 7, 2) & "/" & Mid(psMovNro, 5, 2) & "/" & Left(psMovNro, 4)), Mid(psMovNro, 18, 2), Right(psMovNro, 4), psMovNro)
'
'oDCapMov.AgregaMov psMovNro, psOpeCod, psMovDesc, gMovEstContabMovContable, gMovFlagVigente
'lnMovNro = oDCapMov.GetnMovNro(psMovNro)
'
'oDCapMov.AgregaMovOpeVarias lnMovNro, pnImporte, Null, Null, Null, psOpeCod
'
'oDCapMov.AgregaMovTpoCambio lnMovNro, pnTipoCambio, lnValVent, lnValComp, lnValFijo, lnValFijoDia, lnValVentEsp, lnValCompEsp, lnValPond, lnValPondVenta, lnValPondREU, lnValSBSDia, lnValCompTr, lnValVentTr
'
'lbTrans = False
'GrabaCompraVentaCheque = 0
'Set oDCapMov = Nothing
'Exit Function
'GrabaCompraVentaChequeErr:
'    If lbTrans Then
'        oDCapMov.dbCmact.RollbackTrans
'        lbTrans = False
'    End If
'    Err.Raise Err.Number, Err.Source, Err.Description
'End Function
'*************************END APRI20170619***************************************
'CTI4 ERS0112020**********************
Public Function ImprimeBoletaAhorro(ByVal psTit As String, ByVal psText As String, ByVal psCodOpe As String, ByVal pnMonto As String, _
        ByVal psCliente As String, ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal pnInteresA As String, NomDoc As String, ByVal pnNumExt As Long, ByVal pnSaldoC As Double, _
        Optional pbOpSaldoC As Boolean = True, Optional pbSaldoInt As Boolean = True, Optional psNumDias As String = "----", _
        Optional psNomAgeRem As String = "", Optional psCodUsuRem As String = "", Optional pbCuenta As Boolean = False, _
        Optional psComCmac As String = "XXX", Optional psLin3 As String = "XXX", Optional psTexto As String = "XXX", _
        Optional pdFecSis As Date, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional sLpt As String = "", Optional ByVal psCodCmac As String, Optional ByVal pnMontoIFT As Double, Optional ByVal psCtaCodCred As String = "", Optional ByVal psNombreTitularEco As String = "") As String

Dim nFicSal As Integer
Dim sFecha As String
Dim sHora As String
Dim sSep As Integer
Dim sIni As Integer
Dim sMonto As String
Dim sSDisp As String
Dim sIntAcum As String
Dim sMax As Integer
Dim saux As Integer
Dim lsNegritaOn As String
Dim lsNegritaOff As String
Dim lsNroExt As String
Dim lnTope As Integer
Dim lsSaldoC As String
Dim lsCadArg As String
Dim lsInteres As String
Dim sCad As String
Dim lnCliAux As Long
Dim lsCliAux1 As String
Dim lsCliAux2 As String

Dim lnChq As Long
Dim lsChqAux1 As String
Dim lsChqAux2 As String
Dim lsNomAge As String

Dim lnNumLinCmac As Integer

Dim lsMensaje As String * 39
Dim sText As String

Dim oImpre As COMFunciones.FCOMImpresion ' CTI4 ERS0112020***


''  quitar este comentario

        Dim clsGen As COMDConstSistema.DCOMGeneral
        Set clsGen = New COMDConstSistema.DCOMGeneral
        
        Set oImpre = New COMFunciones.FCOMImpresion 'CTI4 ERS0112020***
 

ETIQ:

'On Error GoTo Error

lnTope = 0 '6 'Tope de lineas en Boleta

lsNegritaOn = Chr$(27) + Chr$(71)
lsNegritaOff = Chr$(27) + Chr$(72)

lsNroExt = Str(pnNumExt)


 ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) & Chr$(64)

ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) & Chr$(50)    'espaciamiento lineas 1/6 pulg.
ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) & Chr$(67) & Chr$(22)   'Longitud de página a 22 líneas'
ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) & Chr$(77)    'Tamaño 10 cpi
ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) + Chr$(107) + Chr$(0)      'Tipo de Letra Sans Serif
ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) + Chr$(18)  ' cancela condensada
ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(27) + Chr$(72)  ' desactiva negrita

sSep = 15
sIni = 1
sMax = 33
saux = 5

sFecha = Format$(pdFecSis, "dd/mm/yyyy")
sHora = Format$(Time, "hh:mm:ss")
sMonto = Format$(pnMonto, "#,##0.00")
sSDisp = Format$(pnSaldo, "#,##0.00")
lsSaldoC = Format$(pnSaldoC, "#,##0.00")

lsNomAge = sNomAge

ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(10)
ImprimeBoletaAhorro = ImprimeBoletaAhorro & Chr$(10)

'Print #nFicSal, Chr$(10);
If psCodCmac = "102" Then  ' CAJA LIMA
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOn  'Activa Negrita
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "CM - AHORRO" & Chr$(10)
        
        If Mid(psCodCta, 9, 1) = 1 Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Chr$(10)
        End If
        
        If psNomAgeRem = "" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & Chr$(10)
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOff 'Desactiva Negrita
            Else
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & lsNegritaOff   'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & lsNegritaOff & Chr$(10)   'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & Chr$(10)
        
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & Chr$(10)
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
            
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & Chr$(10)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & Chr$(10)
            
            lnCliAux = 1
        End If
        
        If pbSaldoInt Or pbCuenta Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Cuenta:" & psCodCta & Space(8 + sSep + saux) & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOn  'Activa Negrita & chr$(10)
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni + 1) & "-----" & psTit & "-----" & Chr$(10)
        
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & Chr$(10)
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))

                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Chr$(10)
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Chr$(10)
            End If
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & Chr$(10)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOff  'Desactiva Negrita
   
        If pbSaldoInt Then
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & Chr$(10)
                If pbOpSaldoC Then
                    ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & Chr$(10)
                Else
                    ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
                End If
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & Chr$(10)
            End If
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        If Not psNumDoc = "" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        If Not psNumDias = "----" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & Space(-1 + sSep) & Chr$(10)
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If
        
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & Chr$(10)
        If psCodUsuRem = "" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Chr$(10)  ''& Space(29 + sSep + sAux)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & Space(sSep) & Chr$(10)
        End If
        'Dim clsGen As COMDConstSistema.DCOMGeneral
        'Set clsGen = New COMDConstSistema.DCOMGeneral
        lsMensaje = clsGen.GetMensajeBoletas(psCodCta)
        Set clsGen = Nothing
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff
        
        lnNumLinCmac = lnNumLinCmac + 1
        
        For saux = 1 To (lnTope - lnNumLinCmac)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        Next saux

Else   '' Caja Trujillo
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOn  'Activa Negrita
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "CMAC-MAYNAS - AHORROS" & Space(19 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & Chr$(10)
        
        If Mid(psCodCta, 9, 1) = 1 Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & Chr$(10)
        End If
        
        If psNomAgeRem = "" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & "Ag.Rem: " & Trim(psNomAgeRem) & Chr$(10)
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOff 'Desactiva Negrita
            Else
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & lsNegritaOff  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & "NroDocCmac:" & psComCmac & lsNegritaOff & Chr$(10)   'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Fecha:" & Format(sFecha, "dd-mm-yyyy") & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & Format(sFecha, "dd-mm-yyyy") & Space(10) & "Hora:" & sHora & Chr$(10)
        
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)
        
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & Chr$(10)
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
            
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & Chr$(10)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & Chr$(10)
            
            lnCliAux = 1
        End If
        
        If pbSaldoInt Or pbCuenta Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Cuenta:" & psCodCta & Space(8 + sSep + saux) & "Cuenta:" & psCodCta & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOn  'Activa Negrita & chr$(10)
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & Chr$(10)
        
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Chr$(10)
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Chr$(10)
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Chr$(10)
            End If
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & oImpre.ImpreCarEsp(Trim(psTexto)) & Chr$(10)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & lsNegritaOff  'Desactiva Negrita
        
        If pnMontoIFT > 0 Then
            sText = "ITF Efectivo"
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & (Trim(Mid(sText, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(sText, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & Space(-1 + 15) & (Trim(Mid(sText, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(sText, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & Chr$(10)
        End If
        If pbSaldoInt Then
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Space(-1 + sSep) & "Saldo Disponible" & Space(sMax + 6 - Len("Saldo Disponible") - Len(sSDisp)) & sSDisp & Chr$(10)
                If pbOpSaldoC Then
                    ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Space(-1 + sSep) & "Saldo Contable" & Space(sMax + 6 - Len("Saldo Contable") - Len(lsSaldoC)) & lsSaldoC & Chr$(10)
                Else
                    ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
                End If
 
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Chr$(10)
            End If
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        If Not psNumDoc = "" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        End If
        
        If Not psNumDias = "----" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & Space(-1 + sSep) & "Nro Dias Interes" & Space(sMax + 6 - Len(psNumDias) - Len("Nro Dias Interes")) & psNumDias & Chr$(10)
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If
        
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & Chr$(10)
        If psCodUsuRem = "" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & Space(29 + sSep + saux) & oImpre.ImpreCarEsp(sCodUser) & Chr$(10)
        Else
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & Space(sSep) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & Chr$(10)
        End If

        If Mid(Trim(psCtaCodCred), 6, 3) = "517" Then
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & oImpre.ImpreCarEsp("Cliente : " & Left(Trim(psNombreTitularEco) & Space(40), 29)) & Space(14) & oImpre.ImpreCarEsp("Cliente : " & Trim(psNombreTitularEco)) & Chr$(10)
        End If
        '*************************************************
        lsMensaje = clsGen.GetMensajeBoletas(psCodCta)
        Set clsGen = Nothing
        ImprimeBoletaAhorro = ImprimeBoletaAhorro & Space(sIni) & lsNegritaOn & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & lsNegritaOff
        
        lnNumLinCmac = lnNumLinCmac + 1
        
        For saux = 1 To (lnTope - lnNumLinCmac)
            ImprimeBoletaAhorro = ImprimeBoletaAhorro & "" & Chr$(10)
        Next saux
        
End If
    Exit Function
End Function
                                    
Public Function nPrintReciboExtorCargoCta(ByVal psNomAgencia As String, ByVal psFecTransac As String, _
        ByVal psCodCta As String, ByVal psCtaAhoExt As String, ByVal pnITFAho As Currency, ByVal psNombCliente As String, ByVal psOperacion As String, _
        ByVal pnMonto As Currency, ByVal pnSaldoCapAnt As Currency, ByVal pnMovExtornado As Long, _
        ByVal psCodUser As String, ByVal psVarPersCMAC As String, _
        Optional ByVal psMensaje As String = "", Optional ByVal psUsuOri As String, _
        Optional ByVal psImpresora As Impresoras = gEPSON, Optional ByVal pbImpTMU As Boolean = False) As String
        
    Dim lsCadImp As String
    Dim oFun As New COMFunciones.FCOMImpresion
    '** Para la Impresion del Codigo Antiguo en las Boletas
    Dim lsCodAntiguo As String
    Dim loConstSistema As New COMDConstSistema.NCOMConstSistema
    If loConstSistema.LeeConstSistema(122) = "1" Then
        Dim loGeneral As COMDConstSistema.DCOMGeneral
        Set loGeneral = New COMDConstSistema.DCOMGeneral
        lsCodAntiguo = loGeneral.GetCuentaAntigua(psCodCta)
    Else
        lsCodAntiguo = ""
    End If
    Set loConstSistema = Nothing
        
    Dim vEspacio As Integer
    vEspacio = 28
        
    Dim ofuni As New COMFunciones.FCOMVarImpresion
    ofuni.Inicia psImpresora

    If pbImpTMU = False Then
        lsCadImp = "" & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea
        
'        lsCadImp = lsCadImp & Chr$(27) & Chr$(69)      'Activa Negrita
'        lsCadImp = lsCadImp & Chr$(27) & Chr$(70)     'Desactiva Negrita
        
        lsCadImp = lsCadImp & " " & oFun.ImpreFormat(psNomAgencia, 30, 0) & Space(12) & Space(vEspacio + 4) _
                            & " " & oFun.ImpreFormat(psNomAgencia, 30, 0) & ofuni.gPrnSaltoLinea
                            
        lsCadImp = lsCadImp & " " & Format(psFecTransac, "dd/mm/yyyy hh:mm:ss") & Space(28 + vEspacio) & Format(psFecTransac, "dd/mm/yyyy hh:mm:ss") & ofuni.gPrnSaltoLinea
        
        If psVarPersCMAC <> "" Then
             lsCadImp = lsCadImp & " " & oFun.ImpreFormat(psVarPersCMAC, 41, 0) & Space(5 + vEspacio) _
                                 & " " & oFun.ImpreFormat(psVarPersCMAC, 41, 0) & ofuni.gPrnSaltoLinea
        Else
            lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea
        End If
        
        lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & Chr$(27) & Chr$(69)    'Activa Negrita
        
        lsCadImp = lsCadImp & " CLIENTE   : " & oFun.ImpreFormat(psNombCliente, 28) & Space(vEspacio + 4) _
                            & " CLIENTE   : " & oFun.ImpreFormat(psNombCliente, 28) & ofuni.gPrnSaltoLinea
        
        lsCadImp = lsCadImp & " Cuenta    : " & Mid(psCtaAhoExt, 1, 5) & "-" & Mid(psCtaAhoExt, 6) & Space(10) & Space(5 + vEspacio) _
                            & " Cuenta    : " & Mid(psCtaAhoExt, 1, 5) & "-" & Mid(psCtaAhoExt, 6) & Space(10) & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & Chr$(27) & Chr$(70)    'Desactiva Negrita
                
        lsCadImp = lsCadImp & " ---- " & oFun.ImpreFormat("EXTORNO CARGO CTA", 25) & " ---- " & Space(9 + vEspacio) _
                            & " ---- " & oFun.ImpreFormat("EXTORNO CARGO CTA", 25) & " ---- " & ofuni.gPrnSaltoLinea

        lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " MONTO     :" & oFun.ImpreFormat(pnMonto, 21, , True) & Space(11 + vEspacio) _
                            & " MONTO     :" & oFun.ImpreFormat(pnMonto, 21, , True) & ofuni.gPrnSaltoLinea
        
        lsCadImp = lsCadImp & " I.T.F.    :" & oFun.ImpreFormat(pnITFAho, 21, , True) & Space(11 + vEspacio) _
                            & " I.T.F.    :" & oFun.ImpreFormat(pnITFAho, 21, , True) & ofuni.gPrnSaltoLinea
                            
        lsCadImp = lsCadImp & " -------------------------------------" & Space(10 + vEspacio) _
                            & " -------------------------------------" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & Space(15) & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & oFun.ImpreCarEsp("Trans. Extornada : ") & pnMovExtornado & Space(10) & Space(10 + vEspacio) _
                            & " " & oFun.ImpreCarEsp("Trans. Extornada : ") & pnMovExtornado & Space(10) & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & "USUARIO EXTORNA : " & Format(psCodUser, "@@@@") & Space(24 + vEspacio) & "  " & "USUARIO EXTORNA : " & Format(psCodUser, "@@@@") & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & "USUARIO OPERADOR: " & Format(psUsuOri, "@@@@") & Space(24 + vEspacio) & "  " & "USUARIO OPERADOR: " & Format(psUsuOri, "@@@@") & ofuni.gPrnSaltoLinea
        
        lsCadImp = lsCadImp & Space(15) & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea
    Else
        lsCadImp = "" & ofuni.gPrnSaltoLinea
'        lsCadImp = lsCadImp & Chr$(27) & Chr$(69)      'Activa Negrita
'        lsCadImp = lsCadImp & Chr$(27) & Chr$(70)     'Desactiva Negrita
        
        lsCadImp = lsCadImp & " " & oFun.ImpreFormat(psNomAgencia, 30, 0) & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & Format(psFecTransac, "dd/mm/yyyy hh:mm:ss") & ofuni.gPrnSaltoLinea
        
        If psVarPersCMAC <> "" Then
             lsCadImp = lsCadImp & " " & oFun.ImpreFormat(psVarPersCMAC, 41, 0) & ofuni.gPrnSaltoLinea
        Else
            lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea
        End If
        lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea
        
        lsCadImp = lsCadImp & Chr$(27) & Chr$(69)    'Activa Negrita
        lsCadImp = lsCadImp & " CLIENTE   : " & oFun.ImpreFormat(psNombCliente, 28) & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " Cuenta    : " & Mid(psCtaAhoExt, 1, 5) & "-" & Mid(psCtaAhoExt, 6) & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & Chr$(27) & Chr$(70)    'Desactiva Negrita
        lsCadImp = lsCadImp & " ---- " & oFun.ImpreFormat("EXTORNO CARGO CTA", 25) & " ---- " & ofuni.gPrnSaltoLinea

        lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " MONTO     :" & oFun.ImpreFormat(pnMonto, 21, , True) & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " I.T.F.    :" & oFun.ImpreFormat(pnITFAho, 21, , True) & ofuni.gPrnSaltoLinea
                            
        lsCadImp = lsCadImp & " -------------------------------------" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & Space(15) & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & oFun.ImpreCarEsp("Trans. Extornada : ") & pnMovExtornado & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & "USUARIO EXTORNA : " & Format(psCodUser, "@@@@") & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & " " & "USUARIO OPERADOR: " & Format(psUsuOri, "@@@@") & ofuni.gPrnSaltoLinea
        
        lsCadImp = lsCadImp & Space(15) & "" & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & "" & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea
        lsCadImp = lsCadImp & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea & ofuni.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)

    End If
    nPrintReciboExtorCargoCta = lsCadImp
    Set ofuni = Nothing
End Function
Public Function ImprimeBoletaNew(ByVal psTit As String, ByVal psText As String, ByVal psCodOpe As String, ByVal pnMonto As String, _
        ByVal psCliente As String, ByVal psCodCta As String, ByVal psNumDoc As String, ByVal pnSaldo As Double, _
        ByVal pnInteresA As String, NomDoc As String, ByVal pnNumExt As Long, ByVal pnSaldoC As Double, _
        Optional pbOpSaldoC As Boolean = True, Optional pbSaldoInt As Boolean = True, Optional psNumDias As String = "----", _
        Optional psNomAgeRem As String = "", Optional psCodUsuRem As String = "", Optional pbCuenta As Boolean = False, _
        Optional psComCmac As String = "XXX", Optional psLin3 As String = "XXX", Optional psTexto As String = "XXX", _
        Optional pdFecSis As Date, Optional sNomAge As String = "", Optional sCodUser As String = "", _
        Optional sLpt As String = "", Optional bPregImpSaldos As Boolean = True, Optional ByVal psCodCmac As String, _
        Optional sCodAge As String = "", Optional pnMonedaCMAC As Integer = 1, Optional ByRef bImpreSaldos As Boolean = False, Optional psOpeCod As String = "", _
        Optional sUserBus As String = "", Optional bExtorno As Boolean = False, Optional ByVal sProxReno As String = "", Optional psDisponible As String = "", Optional psIntangible As String = "", _
        Optional psDispCta As String = "", Optional psIntaCta As String = "", Optional ByVal pbImprimeSaldos As Boolean = True, Optional pnTipoPago As Integer, Optional pnMontoIFT As Double, _
        Optional pbImpItf As Boolean = False, Optional pnComixRetOtraAge As Double = 0, Optional pnComixMaxRet As Double = 0, Optional pbImpTMU As Boolean = False, Optional psNumTarj As String = "", _
        Optional pbPagoServicio As Boolean = False, Optional pcPersNomInst As String = "", Optional pnComisionPServiciox As Double = 0, Optional pcImrimePerx As String = "", _
        Optional ByVal pnComiVB As Double = 0, Optional ByVal psCodOpeVB As String = "", Optional ByVal pnConceptoSer As String = "", Optional ByVal psNomCliServ As String = "", Optional ByVal pnMontoSer As String = "0", _
        Optional ByVal pnMovNro As Long = 0) As String


Dim sFecha As String
    Dim sHora As String
    Dim sSep As Integer
    Dim sIni As Integer
    Dim sMonto As String
    Dim sSDisp As String
    Dim sIntAcum As String
    Dim sMax As Integer
    Dim saux As Integer
    Dim lsNroExt As String
    Dim lnTope As Integer
    Dim lsSaldoC As String
    Dim lsCadArg As String
    Dim lsInteres As String
    Dim sCad As String
    Dim lnCliAux As Long
    Dim lsCliAux1 As String
    Dim lsCliAux2 As String

    Dim lnChq As Long
    Dim lsChqAux1 As String
    Dim lsChqAux2 As String
    Dim lsNomAge As String

    Dim lnNumLinCmac As Integer

    Dim lsMensaje As String * 39

    Dim oVarImpre As New COMFunciones.FCOMVarImpresion

    '** Para la Impresion del Codigo Antiguo en las Boletas
    Dim lsCodAntiguo As String
    Dim lscad As String

    Dim nComiTotal As Double
    Dim nComiTotalServicio As Double
    Dim nTotalServicio As Double '20110701
    Dim pcImrimePer As String
    
    'CTI4 ERS0112020
    Dim lsDOI_Tit, lsBancoTr, lsCtaBco, lsTitular As String
    Dim rsTrBco As ADODB.Recordset
    Dim clsTit As NCOMCaptaGenerales
    Set clsTit = New NCOMCaptaGenerales
    lsDOI_Tit = clsTit.ObtieneDOI_Titular(psCodCta)
    If pnMovNro <> 0 Then
        Set rsTrBco = clsTit.ObtieneDatosTrBanco(pnMovNro)
        If Not (rsTrBco.EOF And rsTrBco.BOF) Then
            lsBancoTr = rsTrBco!Banco
            lsCtaBco = rsTrBco!Cci
            lsTitular = rsTrBco!Titular
        End If
    End If
    'end CTI4
    

    Dim loConstSistema As COMDConstSistema.NCOMConstSistema
    Set loConstSistema = New COMDConstSistema.NCOMConstSistema
    If loConstSistema.LeeConstSistema(122) = "1" Then
        Dim loGeneral As COMDConstSistema.DCOMGeneral
        Set loGeneral = New COMDConstSistema.DCOMGeneral
        lsCodAntiguo = loGeneral.GetCuentaAntigua(psCodCta)
    Else
        lsCodAntiguo = ""
    End If
    Set loConstSistema = Nothing
    Dim nComisionTrans As String 'RIRO20131212 ERS137
    
    'ande ERS021-2018
    Dim bPartipaCamp As Boolean, nPunto As Integer, nCondicion As Integer, nPTotalAcumulado As Integer, cNombreCliente As String, cTexto As String, cadenita As String
    If Left(psTexto, 1) = "#" And Right(psTexto, 1) = "&" Then
        cTexto = Trim(Replace(Replace(psTexto, "#", ""), "&", ""))
        bPartipaCamp = IIf(Mid(cTexto, 1, InStr(cTexto, ".") - 1) = "1", True, False)
        nPunto = CInt(Mid(cTexto, InStr(cTexto, ".") + 1, InStr(cTexto, "$") - InStr(cTexto, ".") - 1))
        nCondicion = CInt(Mid(cTexto, InStr(cTexto, "$") + 1, InStr(cTexto, "_") - InStr(cTexto, "$") - 1))
        nPTotalAcumulado = CInt(Right(cTexto, Len(cTexto) - InStr(cTexto, "_")))
        psTexto = "XXX"
    ElseIf psTexto = "" Then
        psTexto = "XXX"
    End If
    
ETIQ:

    On Error GoTo Error

    lnTope = 0 '6 'Tope de lineas en Boleta

    lsNroExt = Str(pnNumExt)
    

    lscad = lscad & oImp.gPrnInicializa
    lscad = lscad & oImp.gPrnEspaLineaN   'espaciamiento lineas 1/6 pulg.
    lscad = lscad & oImp.gPrnTamPagina22  'Longitud de página a 22 líneas'
    lscad = lscad & oImp.gPrnTamLetra10CPI   'Tamaño 10 cpi
    lscad = lscad & oImp.gPrnTpoLetraRoman     'Tipo de Letra Sans Serif
    lscad = lscad & oImp.gPrnCondensadaOFF ' cancela condensada
    lscad = lscad & oImp.gPrnNegritaOFF ' desactiva negrita

    sSep = 15
    sIni = 0
    sMax = 33
    saux = 5

    sFecha = Format$(pdFecSis, "dd/mm/yyyy")
    sHora = Format$(Time, "hh:mm:ss")
    sMonto = Format$(pnMonto, "#,##0.00")
    sSDisp = Format$(pnSaldo, "#,##0.00")
    lsSaldoC = Format$(pnSaldoC, "#,##0.00")

    lsNomAge = sNomAge

    '' Declaracion para los mensajes
    Dim clsGen As COMDConstSistema.DCOMGeneral
    Set clsGen = New COMDConstSistema.DCOMGeneral
    Dim oImpre As New COMFunciones.FCOMImpresion
    
       'CTI3 04122018 ERS082-2018 ********************************
        Dim TpoCta As String
        'TpoCta = Space(4)
     '       If psCodOpe = gAhoApeEfec Or psCodOpe = gAhoApeLoteEfec Or psCodOpe = gAhoApeTransf Or psCodOpe = gAhoApeCargoCta Or psCodOpe = gAhoApeLoteTransfBanco _
            Or psCodOpe = gAhoRetEfec Or psCodOpe = gAhoRetOP Or psCodOpe = gAhoRetTransf Or psCodOpe = gAhoRetOPCanje Or psCodOpe = gPFApeEfec Then

                Dim clsTpoCta As COMNCaptaGenerales.NCOMCaptaGenerales
                Set clsTpoCta = New COMNCaptaGenerales.NCOMCaptaGenerales
                
                  TpoCta = "(" & clsTpoCta.GetTpoCta(psCodCta) & ")"
                
                Set clsTpoCta = Nothing
     '       End If
        '*********************************************************
    
    
    'JUEZ 20131021 *******************************************************************************
    Dim oGen As New COMDConstSistema.DCOMGeneral, nEstadoCampDatos As Integer
    nEstadoCampDatos = oGen.LeeConstSistema(gConstSistEstadoCampActualizaDatos)
    If nEstadoCampDatos = 1 Then
        If pbImpTMU = False Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnNegritaON
            lscad = lscad & "                            * *         " & Space(sSep - 2) & "                            * *         " & oImp.gPrnSaltoLinea
            lscad = lscad & "                         *      *       " & Space(sSep - 2) & "                         *      *       " & oImp.gPrnSaltoLinea
            lscad = lscad & "                        *               " & Space(sSep - 2) & "                        *               " & oImp.gPrnSaltoLinea
            lscad = lscad & "      * *              *          *     " & Space(sSep - 2) & "      * *              *          *     " & oImp.gPrnSaltoLinea
            lscad = lscad & "    *     *      *   *             *    " & Space(sSep - 2) & "    *     *      *   *             *    " & oImp.gPrnSaltoLinea
            lscad = lscad & "   *        *  *   *                    " & Space(sSep - 2) & "   *        *  *   *                    " & oImp.gPrnSaltoLinea
            lscad = lscad & "  *           *                     *   " & Space(sSep - 2) & "  *           *                     *   " & oImp.gPrnSaltoLinea
            lscad = lscad & " *                                   *  " & Space(sSep - 2) & " *                                   *  " & oImp.gPrnSaltoLinea
            lscad = lscad & "*                                     * " & Space(sSep - 2) & "*                                     * " & oImp.gPrnSaltoLinea
            lscad = lscad & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & Space(sSep - 2) & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            lscad = lscad & oImp.gPrnSaltoLinea
        Else
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnNegritaON & "C"
            lscad = lscad & "                            * *" & oImp.gPrnSaltoLinea
            lscad = lscad & "                         *      *" & oImp.gPrnSaltoLinea
            lscad = lscad & "                        *         " & oImp.gPrnSaltoLinea
            lscad = lscad & "      * *              *          *" & oImp.gPrnSaltoLinea
            lscad = lscad & "    *     *      *   *             *" & oImp.gPrnSaltoLinea
            lscad = lscad & "   *        *  *   *                " & oImp.gPrnSaltoLinea
            lscad = lscad & "  *           *                     *" & oImp.gPrnSaltoLinea
            lscad = lscad & " *                                   *" & oImp.gPrnSaltoLinea
            lscad = lscad & "*                                     *" & oImp.gPrnSaltoLinea
            lscad = lscad & "ACTUALIZA Y GANA UN PASAJE DOBLE A CUSCO" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            lscad = lscad & oImp.gPrnSaltoLinea
        End If
    End If
    'END JUEZ ************************************************************************************
    
    'RIRO20131212 ERS137 *******
    If InStr(1, "200303,200411,230303,230411,210209,210302,240204,240304,220302,220403,250302,250403", psCodOpe) > 0 And Not pbPagoServicio Then
        nComisionTrans = Trim(pnMontoSer)
    End If
    'END RIRO            *******
        
    '' liquidacion Trujillo
    If pbImpTMU = False Then
        lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
        lscad = lscad & oImp.gPrnSaltoLinea
        nComiTotalServicio = 0
        nTotalServicio = 0
        'CTI5 ERS0112020
        If psCodOpe = "" Then
            psCodOpe = 0
        End If
        'CTI5 ERS0112020 FIN
        'RIRO20160111 ADD gOtrOpePagoRecaudoCajeroCorresponsal
        If pbPagoServicio Or psCodOpe = gOtrOpePagoRecaudoCajeroCorresponsal Then
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS - SERVICIOS" & Space(16 + sSep + saux) & "CMAC-MAYNAS - SERVICIOS" & oImp.gPrnSaltoLinea
            psCliente = pcPersNomInst
            nComiTotalServicio = pnComisionPServiciox
            pcImrimePer = Trim(pcImrimePerx)
        Else
            lscad = lscad & Space(sIni) & "CMAC-MAYNAS" & Space(16 + sSep + saux) & "CMAC-MAYNAS - AHORRO" & oImp.gPrnSaltoLinea
        End If

        If Len(Trim(psCodCta)) < 18 Then
            If pnMonedaCMAC = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
            End If
        Else
            If Mid(psCodCta, 9, 1) = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & Space(sSep) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & Space(sSep) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) + lsNroExt & oImp.gPrnSaltoLinea
            End If
        End If

        If psNomAgeRem = "" Then
            lscad = lscad & ""
        Else
            lscad = lscad & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & "Ag.Rem: " & Trim(psNomAgeRem) & oImp.gPrnSaltoLinea
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & "NroDocCmac:" & psComCmac & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & oImp.gPrnSaltoLinea
        
        'lscad = lscad & Space(sIni) & "Cliente:" & psCodCta & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & psCodCta & Space(2) & TpoCta & oImp.gPrnSaltoLinea
        psCliente = "Cliente: " & psCliente
        lnCliAux = InStr(1, pcPersNomInst, "*", vbTextCompare)
        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImpre.ImpreCarEsp(psCliente) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & Space(saux + sMax + sSep - Len(lsCliAux1)) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & Space(saux + sMax + sSep - Len(lsCliAux2)) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            
            lnCliAux = 1
        End If
        
        'DOI*********************************************************************************************************************
        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp("DOI:" & lsDOI_Tit) & Space(saux + sMax + sSep - Len("DOI:" & lsDOI_Tit)) & oImpre.ImpreCarEsp("DOI:" & lsDOI_Tit) & oImp.gPrnSaltoLinea
        '************************************************************************************************************************
        
        If pbSaldoInt Or pbCuenta Then
            If lsCodAntiguo <> "" Then  ' Para Codigo Antiguo - LAYG
                lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & lsCodAntiguo & Space(2) & TpoCta & oImp.gPrnSaltoLinea
            Else
                If Left(psCodOpe, 4) = "2001" Or Left(psCodOpe, 4) = "2003" Or Left(psCodOpe, 4) = "2004" _
                Or Left(psCodOpe, 4) = "2101" Or Left(psCodOpe, 4) = "2102" Or Left(psCodOpe, 4) = "2103" Then
                  lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(2) & TpoCta & Space(2 + sSep + saux) & "Cuenta:" & psCodCta & Space(2) & TpoCta & oImp.gPrnSaltoLinea
                Else ' EN CASO SEAN EXTORNOS
                  lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & Space(8 + sSep + saux) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
                End If
            End If
        Else
            lscad = lscad & ""
        End If
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & Space(-1 + sSep) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax + 6 - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                'MADM 20111209
                If pbPagoServicio Then
                     Dim xx1 As Integer
                     Dim psConceptoSerTemp As String
                     Dim psMontoSerTemp As String
                     psConceptoSerTemp = pnConceptoSer
                     psMontoSerTemp = pnMontoSer
                     pnConceptoSer = Trim(pnConceptoSer)
                     pnMontoSer = Trim(pnMontoSer)
                     pnConceptoSer = Mid(pnConceptoSer, 1, Len(pnConceptoSer) - 5)
                     If Int(Right(psConceptoSerTemp, 5)) = 1 Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                            pnMontoSer = pnMontoSer & " XXX"
                     End If
                     lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & Space(sMax + 6 - Len(Trim(Mid(psNomCliServ, 1, 30)))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & Space(sMax + 6 - Len(Trim(Mid(psNomCliServ, 1, 30)))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                     For xx1 = 1 To Int(Right(psConceptoSerTemp, 5))
                        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                        pnConceptoSer = Trim(Mid(pnConceptoSer, InStr(5, pnConceptoSer, "XXX", vbTextCompare), Len(pnConceptoSer) - 6))
                        If Right(Trim(pnConceptoSer), 3) <> "XXX" Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                        End If
                        If Right(Trim(pnMontoSer), 3) <> "XXX" Then
                            pnMontoSer = pnMontoSer & " XXX"
                        End If
                     Next xx1
                End If
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(saux + sSep + sMax - Len(Trim(psTexto))) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            If psDisponible = "" And psIntangible = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If psDisponible <> "" And psIntangible <> "" Then
           lscad = lscad & oVarImpre.gPrnCondensadaON & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDispCta)) & Space(saux + sSep + sMax - Len(Trim(psDispCta))) & oImpre.ImpreCarEsp(Trim(psDispCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & Space(saux + sSep + sMax - Len(Trim(psIntaCta))) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDisponible)) & Space(saux + sSep + sMax - Len(Trim(psDisponible))) & oImpre.ImpreCarEsp(Trim(psDisponible)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntangible)) & Space(saux + sSep + sMax - Len(Trim(psIntangible))) & oImpre.ImpreCarEsp(Trim(psIntangible)) & oVarImpre.gPrnCondensadaOFF & oImp.gPrnSaltoLinea

        End If
        If pnComixRetOtraAge <> 0 Then
           psTexto = "Comisión " & IIf(Left(psCodOpe, 4) = "2002", "Dep.", IIf(Left(psCodOpe, 4) = "2003", "Ret.", "Ope.")) & " Otra Loc." 'JUEZ 20150930
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(33 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnComixRetOtraAge, "#,##0.00"))) & Format(pnComixRetOtraAge, "#,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(33 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(Format(pnComixRetOtraAge, "#,##0.00"))) & Format(pnComixRetOtraAge, "#,##0.00") & oImp.gPrnSaltoLinea 'APRI20190109 MEJORA SUGERENCIA CALIDAD
        End If
        If pnComixMaxRet <> 0 Then
           psTexto = "Comisión x Max Nro Ope."
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & oImp.gPrnSaltoLinea
        End If
       
       If pnComiVB <> 0 Then
         Select Case psCodOpeVB
             Case "300627"
                 psTexto = "Comisión Ope Sin Tarjeta"
             Case gComisionEmisionChequeCargoCta, gComisionEmisionChequeEfectivo
                 psTexto = "Comision"
         End Select
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComiVB, "0.00"))) & Format(pnComiVB, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(pnComiVB, "0.00"))) & Format(pnComiVB, "0.00") & oImp.gPrnSaltoLinea
       End If
       
       If Len(Trim(nComisionTrans)) <> 0 Then
           psTexto = "Comision Transf:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(nComisionTrans, "0.00"))) & Format(nComisionTrans, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(nComisionTrans, "0.00"))) & Format(nComisionTrans, "0.00") & oImp.gPrnSaltoLinea
       End If
       'Insertar ITF
        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                 
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                'ALPA 20091120************************************************
                ElseIf pnTipoPago = 3 Then
                    psTexto = "ITF Abono a Cuenta"
                End If
                '*************************************************************
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & oImp.gPrnSaltoLinea
            End If
        End If
        
        If nComiTotalServicio <> 0 Then
           nTotalServicio = nComiTotalServicio + pnMontoIFT + sMonto
           psTexto = "Comision Pago de Servicios:"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nComiTotalServicio, "0.00"))) & Format(nComiTotalServicio, "0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nComiTotalServicio, "0.00"))) & Format(nComiTotalServicio, "0.00") & oImp.gPrnSaltoLinea
           psTexto = "Total Pagado              :"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nTotalServicio, "#,###,##0.00"))) & Format(nTotalServicio, "#,###,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 27))) & Space(39 - Len(psTexto) - Len(Format(nTotalServicio, "#,###,##0.00"))) & Format(nTotalServicio, "#,###,##0.00") & oImp.gPrnSaltoLinea
        End If
        
        'TOTALES************************************************************************************
        Dim lnMontoTotal As Currency
        Dim lsTextoTotal As String
        lsTextoTotal = "Total"
        lnMontoTotal = CCur(pnMontoIFT) + CCur(IIf(Len(nComisionTrans) = 0, "0", nComisionTrans)) + CCur(pnComiVB) + CCur(pnComixMaxRet) + CCur(pnComixRetOtraAge) + CCur(pnMonto)
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(lsTextoTotal, 1, 26))) & Space(39 - Len(lsTextoTotal) - Len(Format$(CStr(lnMontoTotal), "#,##0.00"))) & Format$(CStr(lnMontoTotal), "#,##0.00") & Space(-1 + 15) & oImpre.ImpreCarEsp(Trim(Mid(lsTextoTotal, 1, 26))) & Space(39 - Len(lsTextoTotal) - Len(Format$(CStr(lnMontoTotal), "#,##0.00"))) & Format$(CStr(lnMontoTotal), "#,##0.00") & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        '*******************************************************************************************
        
        If psCodOpe = "200303" Then
            'BANCO DESTINO******************************************************************************
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp("Cuenta Destino:") & Space(saux + sMax + sSep - Len("Cuenta Destino:")) & oImpre.ImpreCarEsp("Cuenta Destino:") & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsBancoTr) & Space(saux + sMax + sSep - Len(lsBancoTr)) & oImpre.ImpreCarEsp(lsBancoTr) & oImp.gPrnSaltoLinea
            '*******************************************************************************************
            'CCI****************************************************************************************
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp("CCI:" & lsCtaBco) & Space(saux + sMax + sSep - Len("CCI:" & lsCtaBco)) & oImpre.ImpreCarEsp("CCI:" & lsCtaBco) & oImp.gPrnSaltoLinea
            '*******************************************************************************************
        ElseIf psCodOpe = "200310" Then
            'BENEFICIARIO******************************************************************************
            'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp("BENEFICIARIO (S)") & Space(saux + sMax + sSep - Len("BENEFICIARIO (S)")) & oImpre.ImpreCarEsp("BENEFICIARIO (S)") & oImp.gPrnSaltoLinea
            'lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsTitular) & Space(saux + sMax + sSep - Len(lsTitular)) & oImpre.ImpreCarEsp(lsTitular) & oImp.gPrnSaltoLinea
            '*******************************************************************************************
        End If
        
        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & Space(-1 + sSep) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If
    
        If Trim(sProxReno) <> "" Then
              lscad = lscad & Space(sIni) & sProxReno & Space(sMax + 20 - Len(sProxReno)) & sProxReno & oImp.gPrnSaltoLinea
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & Space(-1 + sSep) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            If Trim(psDisponible) = "" And Trim(psIntangible) = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If Not psNumDias = "----" Then
            lscad = lscad & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & Space(-1 + sSep) & "Nro Dias Interes" & Space(sMax + 6 - Len(psNumDias) - Len("Nro Dias Interes")) & psNumDias & oImp.gPrnSaltoLinea
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If
        
        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & Space(-1 + sSep) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        'ESTIMADO CLIENTE*****************************************************
        lscad = lscad & "***ESTIMADO CLIENTE,  ANTES DE RETIRARSE" & Space(15) & "***ESTIMADO CLIENTE,  ANTES DE RETIRARSE" & oImp.gPrnSaltoLinea
        lscad = lscad & "DE LA VENTANILLA VERIFIQUE QUE LOS DATOS" & Space(15) & "DE LA VENTANILLA VERIFIQUE QUE LOS DATOS" & oImp.gPrnSaltoLinea
        lscad = lscad & "CONSIGNADOS CORRESPONDAN A LA OPERACION " & Space(15) & "CONSIGNADOS CORRESPONDAN A LA OPERACION " & oImp.gPrnSaltoLinea
        lscad = lscad & Left("SOLICITADA POR USTED***" & Space(40), 40) & Space(15) & Left("SOLICITADA POR USTED***" & Space(40), 40) & oImp.gPrnSaltoLinea
        '*********************************************************************
        If psCodUsuRem = "" Then
            If bExtorno Then
                lscad = lscad & Space(sIni) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & Space(11 + sSep + saux) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & Space(11 + sSep + saux) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & oImp.gPrnSaltoLinea
            Else
                'WIOR 20130419 *******************************************
                If psCodOpe = gPFApeEfec Or psCodOpe = gPFApeChq Or psCodOpe = gPFApeTransf Then
                   If EsDepositoGarantia(psCodCta) Then
                        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & oImpre.ImpreCarEsp("Depósito en Garantía ------------------") & Space(-1 + sSep) & oImpre.ImpreCarEsp("Depósito en Garantía ------------------") & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                   End If
                End If
                'WIOR FIN ************************************************
            End If
        Else
            lscad = lscad & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & Space(sSep) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & oImp.gPrnSaltoLinea
        End If

        lsMensaje = clsGen.GetMensajeBoletas(psCodCta, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & Space(-1 + sSep) & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        
        If Left(psOpeCod, 4) = "2605" Or Left(psOpeCod, 4) = "1270" Or Left(psOpeCod, 4) = "1070" Then
            lscad = lscad & ""
        ElseIf bExtorno = True Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf sProxReno <> "" Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf Trim(psDisponible) <> "" And Trim(psIntangible) <> "" Then
           lscad = lscad & ""
        Else
            For saux = 1 To (lnTope - lnNumLinCmac)
                lscad = lscad & ""
            Next saux
        End If
        If psNumTarj <> "" Then
            lscad = lscad & "Operacion realizada con Tarjeta Electronica" & Space(14) & "Operacion realizada con Tarjeta Electronica" & oImp.gPrnSaltoLinea
        End If
        
        'ande ers021-2018
               
        ImprimeBoletaNew = lscad & oImp.gPrnSaltoLinea
    Else 'TMU
        lscad = lscad & oImp.gPrnNegritaON  'Activa Negrita
        If psCodOpe <> gOtrOpeDesParGas And psCodOpe <> gOtrOpeDesParVia And psCodOpe <> gOtrOpeDesParCaj Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea '& oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea
        End If
        
        nComiTotalServicio = 0
        nTotalServicio = 0
        
        lscad = lscad & Space(sIni) & "CMAC-MAYNAS" & Space(16 + sSep + saux) & oImp.gPrnSaltoLinea
        
        If Len(Trim(psCodCta)) < 18 Then
            If pnMonedaCMAC = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & oImp.gPrnSaltoLinea
            End If
        Else
            If Mid(psCodCta, 9, 1) = 1 Then
                '''lscad = lscad & Space(sIni) & Trim(sNomAge) & "-SOLES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-SOLES")) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase) & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-" & StrConv(gcPEN.gcPEN_PLURAL, vbUpperCase))) + lsNroExt & oImp.gPrnSaltoLinea 'marg ers044-2016
            Else
                lscad = lscad & Space(sIni) & Trim(sNomAge) & "-DOLARES" & Space(saux + sMax - Len(Trim(sNomAge)) - Len(lsNroExt) - Len("-DOLARES")) & lsNroExt & oImp.gPrnSaltoLinea
            End If
        End If

        If psNomAgeRem = "" Then
            lscad = lscad & ""
        Else
            lscad = lscad & Space(sIni) & "Ag.Rem: " & Trim(psNomAgeRem) & Space(saux + sMax + sSep - Len("Ag.Rem:") - Len(Trim(psNomAgeRem))) & oImp.gPrnSaltoLinea
        End If
        
        If psComCmac = "XXX" Then
            If psLin3 = "XXX" Then
                lscad = lscad & oImp.gPrnNegritaOFF 'Desactiva Negrita
            Else
                lscad = lscad & Space(sIni) & psLin3 & Space(saux + sSep + sMax - Len(psLin3)) & psLin3 & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea  'Desactiva Negrita
                lnNumLinCmac = 1
            End If
            lnNumLinCmac = 0
        Else
            lscad = lscad & Space(sIni) & "NroDocCmac:" & psComCmac & Space(saux + sSep + sMax - Len("NroDocCmac:" & psComCmac)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea 'Desactiva Negrita
            lnNumLinCmac = 1
        End If
        
        lscad = lscad & Space(sIni) & "Fecha:" & sFecha & Space(10) & "Hora:" & sHora & Space(saux + sSep - 6) & oImp.gPrnSaltoLinea

        lscad = lscad & Space(sIni) & "Cliente: "
        lnCliAux = InStr(1, psCliente, "*", vbTextCompare)

        If lnCliAux = 0 Then
            If saux + sMax - Len(psCliente) < 0 Then psCliente = Mid(psCliente, 1, sMax + saux)
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(psCliente) & Space(saux + sMax + sSep - Len(psCliente)) & oImp.gPrnSaltoLinea
        Else
            lsCliAux1 = (Mid(psCliente, 1, lnCliAux - 1))
            lsCliAux2 = (Mid(psCliente, lnCliAux + 1))
    
            If sMax - Len(lsCliAux1) < 2 Then lsCliAux1 = Mid(lsCliAux1, 1, sMax + saux)
            If sMax - Len(lsCliAux2) < 2 Then lsCliAux2 = Mid(lsCliAux2, 1, sMax + saux)
            
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux1) & oImpre.ImpreCarEsp(lsCliAux1) & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(lsCliAux2) & oImpre.ImpreCarEsp(lsCliAux2) & oImp.gPrnSaltoLinea
            'Space(saux + sMax + sSep - Len(lsCliAux2))
            lnCliAux = 1
        End If
        
        'DOI******************************************************************
        lscad = lscad & Space(sIni) & "DOI:" & lsDOI_Tit & oImp.gPrnSaltoLinea
        '*********************************************************************
        
        'NRO CUENTA***********************************************************
        If pbSaldoInt Or pbCuenta Then
            If lsCodAntiguo <> "" Then  ' Para Codigo Antiguo - LAYG
                lscad = lscad & Space(sIni) & "Cuenta:" & lsCodAntiguo & oImp.gPrnSaltoLinea
                'lsCadImp = lsCadImp & " Contrato  : " & lsCodAntiguo & Space(10) & Space(1 + vEspacio) _
                                            & " Contrato  : " & lsCodAntiguo & Space(10) & Chr(10)
            Else
                lscad = lscad & Space(sIni) & "Cuenta:" & psCodCta & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If
        '********************************
        
        psTit = Trim(psTit)
        psTit = oImpre.CentrarCadena(psTit, 28)
        lscad = lscad & oImp.gPrnNegritaON 'Activa Negrita
        lscad = lscad & Space(sIni + 1) & "-----" & psTit & "-----" & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaOFF
        lnChq = InStr(1, psText, "*", vbTextCompare)
        
        If psTexto = "XXX" Then
            If lnChq = 0 Then
                'lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space(sMax - Len(Trim(Mid(psText, 1, 28))) - Len(sMonto)) & sMonto & Space(-1 + sSep) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psText, 1, 28))) & Space((sMax + 6 - (Len(psText) + Len(Format(sMonto, "0.00"))))) & Format(sMonto, "0.00") & oImp.gPrnSaltoLinea
                 'MADM 20111209
                If pbPagoServicio Then
                     Dim xxx1 As Integer
                     Dim psConceptoSerTemp1 As String
                     psConceptoSerTemp1 = pnConceptoSer
                     pnConceptoSer = Trim(pnConceptoSer)
                     pnMontoSer = Trim(pnMontoSer)
                     pnConceptoSer = Mid(pnConceptoSer, 1, Len(pnConceptoSer) - 5)
                     If Int(Right(psConceptoSerTemp1, 5)) = 1 Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                            pnMontoSer = pnMontoSer & " XXX"
                     End If
                     lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psNomCliServ, 1, 30))) & oImp.gPrnSaltoLinea
                     For xxx1 = 1 To Int(Right(psConceptoSerTemp1, 5))
                        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) & Space(sMax + 6 - (Len(Trim(Mid(Mid(pnConceptoSer, 4, InStr(4, pnConceptoSer, "XXX", vbTextCompare) - 4), 1, 31))) + Len(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))))) & oImpre.ImpreCarEsp(Trim(Mid(Mid(pnMontoSer, 4, InStr(4, pnMontoSer, "XXX", vbTextCompare) - 4), 1, 8))) & oImp.gPrnSaltoLinea
                        pnConceptoSer = Trim(Mid(pnConceptoSer, InStr(5, pnConceptoSer, "XXX", vbTextCompare), Len(pnConceptoSer) - 6))
                        If Right(Trim(pnConceptoSer), 3) <> "XXX" Then
                            pnConceptoSer = pnConceptoSer & " XXX"
                        End If
                         If Right(Trim(pnMontoSer), 3) <> "XXX" Then
                            pnMontoSer = pnMontoSer & " XXX"
                        End If
                     Next xxx1
                End If
                lscad = lscad & ""
            Else
                lsChqAux1 = (Mid(psText, 1, lnChq - 1))
                lsChqAux2 = (Mid(psText, lnChq + 1))
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux1)) & Space(sMax + 6 - Len(Trim(lsChqAux1)) - Len(sMonto)) & sMonto & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(Trim(lsChqAux2)) & Space(sMax + 6 - Len(Trim(lsChqAux2))) & Space(-1 + sSep) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psTexto)) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
            If psDisponible = "" And psIntangible = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If psDisponible <> "" And psIntangible <> "" Then
           lscad = lscad & oVarImpre.gPrnCondensadaON & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDispCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntaCta)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psDisponible)) & oImp.gPrnSaltoLinea
           lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(Trim(psIntangible)) & Space(saux + sSep + sMax - Len(Trim(psIntangible))) & oImpre.ImpreCarEsp(Trim(psIntangible)) & oVarImpre.gPrnCondensadaOFF & oImp.gPrnSaltoLinea
        End If
        
        If pnComixRetOtraAge <> 0 Then
           psTexto = "Comisión " & IIf(Left(psCodOpe, 4) = "2002", "Dep.", IIf(Left(psCodOpe, 4) = "2003", "Ret.", "Ope.")) & " Otra Loc." 'JUEZ 20150930
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixRetOtraAge)) & Format(pnComixRetOtraAge, "0.00") & oImp.gPrnSaltoLinea
        End If
        If pnComixMaxRet <> 0 Then
           psTexto = "Comisión x Max Nro Ope."
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComixMaxRet)) & Format(pnComixMaxRet, "0.00") & oImp.gPrnSaltoLinea
        End If
                
        If pnComiVB <> 0 Then
            Select Case psCodOpeVB
                Case "300627"
                    psTexto = "Comisión Ope Sin Tarjeta"
                Case gComisionEmisionChequeCargoCta, gComisionEmisionChequeEfectivo
                    psTexto = "Comision"
            End Select
            lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnComiVB)) & Format(pnComiVB, "0.00") & oImp.gPrnSaltoLinea
        End If
       
       If Len(Trim(nComisionTrans)) <> 0 Then
           psTexto = "Comisión"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 26))) & Space(39 - Len(psTexto) - Len(Format(nComisionTrans, "0.00"))) & Format(nComisionTrans, "0.00") & oImp.gPrnSaltoLinea
       End If
       
       'Insertar ITF
        If pbImpItf = True Then
            If pnMontoIFT <> 0 Then
                If pnTipoPago = 1 Then
                    psTexto = "ITF Efectivo"
                 
                ElseIf pnTipoPago = 2 Then
                    psTexto = "ITF Cargo a Cuenta"
                End If
                lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid(psTexto, 1, 28))) & Space(37 + 6 - Len(Trim(Mid(psTexto, 1, 28))) - Len(pnMontoIFT)) & Format(pnMontoIFT, "0.00") & oImp.gPrnSaltoLinea
            End If
        End If
        
        If nComiTotalServicio <> 0 Then
           nTotalServicio = nComiTotalServicio + pnMontoIFT + sMonto
           psTexto = "Comision Pago Servicios"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(sMax + 6 - (Len(psTexto) + Len(Format(nComiTotalServicio, "0.00")))) & Format(nComiTotalServicio, "0.00") & oImp.gPrnSaltoLinea
           psTexto = "Total Pagado"
           lscad = lscad & oImpre.ImpreCarEsp(Trim(psTexto)) & Space(sMax + 6 - (Len(psTexto) + Len(Format(nTotalServicio, "#,###,##0.00")))) & Format(nTotalServicio, "#,###,##0.00") & oImp.gPrnSaltoLinea
        End If
        
        'TOTALES************************************************************************************
        Dim lnMontoTotal_ As Currency
        lnMontoTotal_ = CCur(pnMontoIFT) + CCur(IIf(Len(nComisionTrans) = 0, "0", nComisionTrans)) + CCur(pnComiVB) + CCur(pnComixMaxRet) + CCur(pnComixRetOtraAge) + CCur(pnMonto)
        lscad = lscad & oImpre.ImpreCarEsp(Trim(Mid("Total", 1, 28))) & Space((sMax + 6 - (Len("Total") + Len(Format(CStr(lnMontoTotal_), "0.00"))))) & Format(CStr(lnMontoTotal_), "0.00") & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnSaltoLinea
        '*******************************************************************************************
        If psCodOpe = "200303" Then
            'BANCO DESTINO*******************************************************
            lscad = lscad & Space(sIni) & "Cuenta Destino:" & oImp.gPrnSaltoLinea
            lscad = lscad & Space(sIni) & lsBancoTr & oImp.gPrnSaltoLinea
            '*********************************************************************
            'CCI******************************************************************
            lscad = lscad & Space(sIni) & "CCI: " & lsCtaBco & oImp.gPrnSaltoLinea
            '*********************************************************************
        ElseIf psCodOpe = "200310" Then
            'BENEFICIARIO*********************************************************
            'lscad = lscad & Space(sIni) & "BENEFICIARIO (S)" & oImp.gPrnSaltoLinea
            'lscad = lscad & Space(sIni) & lsTitular & oImp.gPrnSaltoLinea
            '*********************************************************************
        End If
       
        lsInteres = pnInteresA
        
        If pbSaldoInt Then
            If lsInteres <> "No Valido" Then
                lsInteres = Format(lsInteres, "#,##0.00")
                lscad = lscad & Space(sIni) & "Interes del Mes" & Space(sMax + 6 - Len("Interes del Mes") - Len(lsInteres)) & lsInteres & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & ""
        End If

        If Trim(sProxReno) <> "" Then
              lscad = lscad & Space(sIni) & sProxReno & Space(sMax + 20 - Len(sProxReno)) & sProxReno & oImp.gPrnSaltoLinea
        End If
        
        
        If Not psNumDoc = "" Then
            lscad = lscad & Space(sIni) & NomDoc & Space(sMax + 6 - Len(NomDoc) - Len(psNumDoc)) & psNumDoc & oImp.gPrnSaltoLinea
        Else
            If Trim(psDisponible) = "" And Trim(psIntangible) = "" Then
                lscad = lscad & ""
            End If
        End If
        
        If Not psNumDias = "----" Then
            lscad = lscad & Space(sIni) & "Nro Dias Interes" & Space(sMax + 6 - Len("Nro Dias Interes") - Len(psNumDias)) & psNumDias & oImp.gPrnSaltoLinea
            lnTope = 4 - lnCliAux
        Else
            lnTope = 3 - lnCliAux
        End If


        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lscad = lscad & oImp.gPrnNegritaON & Space(sIni) & "---------------------------------------" & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        'ESTIMADO CLIENTE*****************************************************
        lscad = lscad & Space(sIni) & "***ESTIMADO CLIENTE, ANTES DE RETIR" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "ARSE DE LA VENTANILLA VERIFIQUE QUE" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "LOS DATOS  CONSIGNADOS CORRESPONDAN" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "A LA OPERACION SOLICITADA POR USTED" & oImp.gPrnSaltoLinea
        lscad = lscad & Space(sIni) & "***" & oImp.gPrnSaltoLinea
        '*********************************************************************
        If psCodUsuRem = "" Then
            If bExtorno Then
                lscad = lscad & Space(sIni) & "USUARIO EXTORNA : " & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
                lscad = lscad & Space(sIni) & "USUARIO OPERADOR: " & oImpre.ImpreCarEsp(sUserBus) & oImp.gPrnSaltoLinea
            Else
                If psCodOpe = gPFApeEfec Or psCodOpe = gPFApeChq Or psCodOpe = gPFApeTransf Then
                   If EsDepositoGarantia(psCodCta) Then
                        lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp("Depósito en Garantía ------------------") & oImp.gPrnSaltoLinea
                   End If
                End If
                lscad = lscad & Space(sIni) & oImpre.ImpreCarEsp(sCodUser) & oImp.gPrnSaltoLinea
            End If
        Else
            lscad = lscad & Space(sIni) & "Loc/Rem" & Space(sMax + saux - Len("Loc/Rem") - 1 - 8) & oImpre.ImpreCarEsp(sCodUser) & "/" & oImpre.ImpreCarEsp(psCodUsuRem) & oImp.gPrnSaltoLinea
        End If

        lsMensaje = clsGen.GetMensajeBoletas(psCodCta, sCodAge)
        Set clsGen = Nothing
        lscad = lscad & Space(sIni) & oImp.gPrnNegritaON & oImpre.ImpreCarEsp(lsMensaje) & oImp.gPrnNegritaOFF & oImp.gPrnSaltoLinea
        lnNumLinCmac = lnNumLinCmac + 1
        
        If Left(psOpeCod, 4) = "2605" Or Left(psOpeCod, 4) = "1270" Or Left(psOpeCod, 4) = "1070" Then
            lscad = lscad & ""
        ElseIf bExtorno = True Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf sProxReno <> "" Then
            For saux = 1 To (lnTope - lnNumLinCmac - 1)
                lscad = lscad & ""
            Next saux
        ElseIf Trim(psDisponible) <> "" And Trim(psIntangible) <> "" Then
           lscad = lscad & ""
        Else
            For saux = 1 To (lnTope - lnNumLinCmac)
                lscad = lscad & ""
            Next saux
        End If
        If psNumTarj <> "" Then
            lscad = lscad & "Operacion realizada con Tarjeta Electronica"
        End If
        
        If psCodOpe <> gOtrOpeDesParGas And psCodOpe <> gOtrOpeDesParVia And psCodOpe <> gOtrOpeDesParCaj Then
            'Linea que corta el ticket en TMU
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        ElseIf psCodOpe = gOtrOpeDesParCaj Then
            lscad = lscad & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & oImp.gPrnSaltoLinea & Chr(27) & "m" & Chr(10)
        End If
        '***Fin Modificado por ELRO*******************************
        
        ImprimeBoletaNew = lscad
    End If
Exit Function
Error:
    Err.Raise Err.Number, "Comprueba la conexion de su impresora... ", Err.Description
End Function
'END CTI4

'CTI2 FERIMORO: ERS034-2019 25082020
Public Function cnsSeguroCronograma(ByVal cDocumento As String) As String
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

Dim dFecha As String

dFecha = clsCap.cnsFechaSeguroCronograma(cDocumento)

If dFecha = "" Then cnsSeguroCronograma = "" Else cnsSeguroCronograma = dFecha

End Function
'CTI2 FERIMORO: ERS034-2019 25082020
Public Function cnsVeriPagoAnualSeguro(ByVal cDocumento As String, ByVal sFecha As Date) As String
Dim clsCap As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCap = New COMDCaptaGenerales.DCOMCaptaMovimiento

Dim dRespuesta As String

dRespuesta = clsCap.cnsVeriPagoAnualSeg(cDocumento, sFecha)

If dRespuesta = "" Then cnsVeriPagoAnualSeguro = "" Else cnsVeriPagoAnualSeguro = dRespuesta

End Function
'CTI2 FERIMORO: ERS034-2019 25082020
Public Sub veriCroSegSepAnual(ByVal cDocumento As String, ByVal sFecha As Date)
Dim oDCapMov As COMDCaptaGenerales.DCOMCaptaMovimiento
    Set oDCapMov = New COMDCaptaGenerales.DCOMCaptaMovimiento
        oDCapMov.veriCroSegSepAnual cDocumento, sFecha
    Set oDCapMov = Nothing
End Sub
'ADD JHCU 13.04.21
Public Function ValidaCuentaCC(ByVal sCuenta As String, ByVal psOpeCod As String, Optional nMonto As Double, Optional pnMovNro As String, Optional pnMontoComision As Double, Optional pnTipo As Integer) As Boolean
Dim clsCC As COMDCaptaGenerales.DCOMCaptaMovimiento
Set clsCC = New COMDCaptaGenerales.DCOMCaptaMovimiento

Dim rsCta As ADODB.Recordset
Set rsCta = New ADODB.Recordset
Dim nExiste As Integer

Set rsCta = clsCC.getVerificaCC(sCuenta, psOpeCod)

nExiste = rsCta("nExiste")

rsCta.Close
Set rsCta = Nothing

ValidaCuentaCC = False

If nExiste > 0 Then
    If Len(pnMovNro) > 0 Then
        clsCC.setExclusionComisionCC sCuenta, psOpeCod, nMonto, pnMovNro, pnMontoComision, pnTipo
    End If
    ValidaCuentaCC = True
End If
Set clsCC = Nothing
End Function
'CTI7 OPEv2********************************************************************************
Public Function ObtieneEstadoCuenta(ByVal sCuenta As String) As CaptacEstado
Dim clsMant As NCOMCaptaGenerales
Set clsMant = New NCOMCaptaGenerales
Dim rsCta As ADODB.Recordset
Set rsCta = New ADODB.Recordset

Set rsCta = clsMant.GetDatosCuenta(sCuenta)

ObtieneEstadoCuenta = rsCta("nPrdEstado")

rsCta.Close
Set rsCta = Nothing
Set clsMant = Nothing

End Function

'******************************************************************************************


