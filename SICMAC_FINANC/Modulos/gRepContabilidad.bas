Attribute VB_Name = "gRepContabilidad"
Option Explicit
Dim xlAplicacion As Excel.Application
Dim xlLibro As Excel.Workbook
Dim xlHoja1 As Excel.Worksheet
Dim xlHojN As Excel.Worksheet 'NAGL 20190625
Dim oCon As DConecta
Dim oBarra As clsProgressBar
Dim lsRTfImp As String
Dim cpag As Integer


Option Base 0
Private Type TEstBal
    cCodCta  As String
    cDescrip As String
    cFormula As String
    cObserva As String
End Type

Private Type TCuentas
    cCta    As String
    nCOAj   As Double
    nCOHist As Double
    nMNAj   As Double
    nMNHist As Double
    nMes    As Double
    nMED    As Double
End Type
Dim sTipoRepoFormula As String
Dim sTituRepoFormula As String
Dim EstBal() As TEstBal
Dim Cuentas() As TCuentas
Dim nCuentas As Integer
Dim nContBal As Integer

Dim oNBal  As NBalanceCont
Dim oDBal  As DbalanceCont

Private Type TCuentasIMEq
    cCta As String
    nSaldoAnt As Double
    nCompras As Double
    nVentas As Double
    nAjuste As Double
    nSaldoFin As Double
End Type

Dim CuentasIMEq() As TCuentasIMEq

Public Sub EstadisticaIngresoGasto(pnMes As Integer, pnAnio As Integer)
Dim dfecha As Date
Dim dFecha2 As Date
Dim lsArchivo  As String
Dim lsRuta      As String
Dim lbLibroOpen, lbLibroOpen2 As Boolean
On Error GoTo ErrImprime

    Set oBarra = New clsProgressBar
    Set oCon = New DConecta
    oCon.AbreConexion
    
    dfecha = CDate("01/01/" & pnAnio)
    dFecha2 = DateAdd("m", pnMes, dfecha) - 1
    If Year(dfecha) <> Year(dFecha2) Then
        MsgBox "El Año debe ser el mismo", vbInformation, "¡Aviso!"
        Exit Sub
    End If
    
    frmReportes.MousePointer = 11
    lsRuta = App.path & "\Spooler\"
'    lsArchivo = lsRuta & "EstadIngresoGasto_" & Format(Year(dFecha), "0000") & ".xls"
     lsArchivo = lsRuta & "EstadIngresoGasto_" & Format(Year(dfecha), "0000") & ".xlsx" ' agregado por VAPA
    oBarra.Max = 1
    oBarra.CaptionSyle = eCap_CaptionPercent
    oBarra.ShowForm frmReportes
    oBarra.Progress 0, "ESTADISTICA DE INGRESOS Y GASTOS", "Generando Archivo de Trabajo", "", vbBlue
    lbLibroOpen = ExcelBegin(lsArchivo, xlAplicacion, xlLibro)
    oBarra.Progress 1, "ESTADISTICA DE INGRESOS Y GASTOS", "Generando Archivo de Trabajo", "", vbBlue
    
    If lbLibroOpen Then
       Set xlHoja1 = xlLibro.Worksheets.Add 'VAPA20161007
       'Set xlHoja1 = xlLibro.Worksheets(1)
        xlHoja1.Name = "GASTOS"
        ImprimeEstadIngresoGasto "D", dfecha, dFecha2
       'Set xlHoja1 = xlLibro.Worksheets(2)
       Set xlHoja1 = xlLibro.Worksheets.Add  ' VAPA20161007
        xlHoja1.Name = "INGRESOS"
        ImprimeEstadIngresoGasto "A", dfecha, dFecha2
       ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1
       lbLibroOpen = False
       CargaArchivo lsArchivo, lsRuta
       
    End If
    oCon.CierraConexion
    oBarra.CloseForm frmReportes
    Set oBarra = Nothing
    Set oCon = Nothing
    frmReportes.MousePointer = 0
    MsgBox "Reporte Generado Satisfactoriamente", vbInformation, "¡Aviso!"
Exit Sub
ErrImprime:
   MsgBox TextErr(Err.Description), vbInformation, "!Aviso!"
   If lbLibroOpen Then
      ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1, False
      lbLibroOpen = False
   End If
   frmReportes.MousePointer = 0
End Sub

Private Sub ImprimeEstadIngresoGasto(psClase As String, pdFecha As Date, pdFecha2 As Date)
Dim sSql As String
Dim rs   As ADODB.Recordset
Dim nFil As Integer
Dim nCol As Integer
Dim sCol As String
Dim sMeses As String
If gbBitCentral Then
    For nCol = Month(pdFecha) To Month(pdFecha2)
        sMeses = sMeses & "ISNULL(SUM(CASE WHEN cBalanceMes = '" & Format(nCol, "00") & "' and tc.cCtaCaracter = 'D' THEN nDebe - nHaber WHEN cBalanceMes = '" & Format(nCol, "00") & "' and tc.cCtaCaracter = 'A' THEN nHaber - nDebe ELSE 0 END),0) as M" & Format(nCol, "00") & ","
    Next
    If sMeses <> "" Then
        sMeses = Left(sMeses, Len(sMeses) - 1)
    End If
    sSql = "SELECT c.cCtaContCod, c.cCtaContDesc, " & sMeses _
         & " FROM BalanceEstad b JOIN CtaCont c ON b.cCtaContCod = c.cCtaContCod " _
         & "     JOIN CtaContClase tc ON b.cCtaContCod LIKE tc.cCtaContCod + '%' " _
         & "WHERE cBalanceCate = '1' and cBalanceTipo = '0' and cBalanceAnio = '" & Year(pdFecha) & "' and cBalanceMes BETWEEN '" & Format(Month(pdFecha), "00") & "' and '" & Format(Month(pdFecha2), "00") & "' " _
         & "  and c.cCtaContCod LIKE '[456]%' and tc.cCtaCaracter = '" & psClase & "' " _
         & "GROUP BY c.cCtaContCod, c.cCtaContDesc " _
         & "ORDER BY c.cCtaContCod "
Else
    For nCol = Month(pdFecha) To Month(pdFecha2)
        sMeses = sMeses & "ISNULL(SUM(CASE WHEN cBalanceMes = '" & Format(nCol, "00") & "' and tc.cAbrev = 'D' THEN nDebe - nHaber WHEN cBalanceMes = '" & Format(nCol, "00") & "' and tc.cAbrev = 'A' THEN nHaber - nDebe ELSE 0 END),0) as M" & Format(nCol, "00") & ","
    Next
    If sMeses <> "" Then
        sMeses = Left(sMeses, Len(sMeses) - 1)
    End If
    sSql = "SELECT c.cCtaContCod, c.cCtaContDesc, " & sMeses _
         & " FROM BalanceEstad b JOIN DBComunes..CtaCont c ON b.cCtaContCod = c.cCtaContCod " _
         & "     JOIN DBComunes..TablaCod tc ON tc.cCodTab LIKE 'C0__' and RTRIM(tc.cValor) = substring(b.cCtaContCod,1,LEN(tc.cValor)) " _
         & "WHERE cBalanceCate = '1' and cBalanceTipo = '0' and cBalanceAnio = '" & Year(pdFecha) & "' and cBalanceMes BETWEEN '" & Format(Month(pdFecha), "00") & "' and '" & Format(Month(pdFecha2), "00") & "' " _
         & "  and c.cCtaContCod LIKE '[456]%' and tc.cAbrev = '" & psClase & "' " _
         & "GROUP BY c.cCtaContCod, c.cCtaContDesc " _
         & "ORDER BY c.cCtaContCod "
End If
Set rs = oCon.CargaRecordSet(sSql)
nFil = 6
ImprimeEstadIngresoGastoCabe psClase, pdFecha, pdFecha2
oBarra.CloseForm frmReportes
oBarra.ShowForm frmReportes
oBarra.Max = rs.RecordCount

Do While Not rs.EOF
    oBarra.Progress rs.Bookmark, "ESTADISTICA DE INGRESOS Y GASTOS", "Generando Reporte...", "", vbBlue
    nFil = nFil + 1
    For nCol = 1 To rs.Fields.Count
        xlHoja1.Cells(nFil, nCol) = rs.Fields(nCol - 1)
    Next
    sCol = ExcelColumnaString(nCol)
    xlHoja1.Range(sCol & nFil & ":" & sCol & nFil).Formula = "=SUM(C" & nFil & ".." & ExcelColumnaString(nCol - 1) & nFil & ")"
    If Len(rs.Fields(0)) <= 2 Then
        xlHoja1.Range("A" & nFil & ":" & ExcelColumnaString(nCol) & nFil).Font.Bold = True
        xlHoja1.Range("A" & nFil & ":" & ExcelColumnaString(nCol) & nFil).BorderAround xlContinuous, xlThick
        xlHoja1.Range("A" & nFil & ":" & ExcelColumnaString(nCol) & nFil).Interior.Color = RGB(160, 150, 150)
    End If
    rs.MoveNext
Loop
xlHoja1.Range("A7:" & ExcelColumnaString(nCol) & nFil).BorderAround xlContinuous, xlThick
xlHoja1.Range("A7:" & ExcelColumnaString(nCol) & nFil).Borders(xlInsideVertical).LineStyle = xlContinuous
RSClose rs
oBarra.CloseForm frmReportes
End Sub

Private Sub ImprimeEstadIngresoGastoCabe(psClase As String, pdFecha As Date, pdFecha2 As Date)
Dim nCol As Integer
Dim sCol As String
xlHoja1.Cells(1, 1) = gsNomCmac
If psClase = "D" Then
    xlHoja1.Cells(2, 2) = "DETALLE DE GASTOS A VALORES HISTORICOS "
    xlHoja1.Cells(5, 1) = "TOTAL GASTOS"
Else
    xlHoja1.Cells(2, 2) = "DETALLE DE INGRESOS A VALORES HISTORICOS "
    xlHoja1.Cells(5, 1) = "TOTAL INGRESOS"
End If
xlHoja1.Cells(3, 2) = "AÑO " & Year(pdFecha)
xlHoja1.Range("B2:E2").Merge True
xlHoja1.Range("B3:E3").Merge True
xlHoja1.Range("A5:B6").MergeCells = True
xlHoja1.Range("A2:E5").HorizontalAlignment = xlCenter
xlHoja1.Range("A2:E5").VerticalAlignment = xlCenter
xlHoja1.Range("A1:E6").Font.Bold = True
xlHoja1.Range("A1:A1").ColumnWidth = 19
xlHoja1.Range("B1:B1").ColumnWidth = 45

For nCol = Month(pdFecha) To Month(pdFecha2)
     sCol = Switch(nCol = 1, "Ene", nCol = 2, "Feb", nCol = 3, "Mar", nCol = 4, "Abr", nCol = 5, "May", nCol = 6, "Jun", _
                nCol = 7, "Jul", nCol = 8, "Ago", nCol = 9, "Set", nCol = 10, "Oct", nCol = 11, "Nov", nCol = 12, "Dic")
    xlHoja1.Cells(5, nCol + 2) = "'" & sCol & " " & Right(Trim(Str(Year(pdFecha))), 2)
    sCol = ExcelColumnaString(nCol + 2)
    
    xlHoja1.Range(sCol & "5:" & sCol & "5").ColumnWidth = 14
    xlHoja1.Range(sCol & "5:" & sCol & "6").Merge 0
    xlHoja1.Range(sCol & "5:" & sCol & "6").HorizontalAlignment = xlCenter
    xlHoja1.Range(sCol & "5:" & sCol & "6").VerticalAlignment = xlCenter
    xlHoja1.Range(sCol & "6:" & sCol & "6").EntireColumn.NumberFormat = "##,##0.00"
Next
xlHoja1.Cells(1, 6) = "'" & gdFecSis
xlHoja1.Range("F6:F6").NumberFormat = "dd-mmm-yyyy"
sCol = ExcelColumnaString(nCol + 2)
xlHoja1.Cells(5, nCol + 2) = "TOTALES"
xlHoja1.Range(sCol & "5:" & sCol & "5").ColumnWidth = 14
xlHoja1.Range(sCol & "5:" & sCol & "6").Merge 0
xlHoja1.Range(sCol & "5:" & sCol & "6").HorizontalAlignment = xlCenter
xlHoja1.Range(sCol & "5:" & sCol & "6").VerticalAlignment = xlCenter
xlHoja1.Range("A5:" & sCol & "6").BorderAround xlContinuous, xlMedium, xlColorIndexAutomatic
xlHoja1.Range("A5:" & sCol & "6").Borders(xlInsideVertical).LineStyle = xlContinuous
xlHoja1.Range("A5:" & sCol & "6").Font.Bold = True

End Sub

'ALPA 20090725*****************************************************************
'Public Sub ImprimeRep3SBS_PatrimEfectAjustxInfl(ByVal lsRepoCod As String, ByVal lnAnio As Integer, ByVal lnMes As Integer)
Public Sub ImprimeRep3SBS_PatrimEfectAjustxInfl(ByVal lsRepoCod As String, ByVal lsAnio As String, ByVal lsMes As String, ByVal ldFecha As Date)
     
    gsOpeCod = lsRepoCod
    sTipoRepoFormula = Right(gsOpeCod, 1)
    sTituRepoFormula = "PATRIMONIO EFECTIVO AJUSTADO POR INFLACION"
    Dim rs As ADODB.Recordset
    Set rs = New ADODB.Recordset
    Set rs = CargaDatosPatrimonioEfec(lsAnio, lsMes, 0)
   'Call CargaDatos(Rs, ldFecha)
   'Call GeneraReporte780030(CInt(lsAnio), CInt(lsMes), rs)
   Call GeneraReporte780030(CInt(lsAnio), CInt(lsMes), rs, True) 'EJVG2012104
   RSClose rs
   Set rs = Nothing
End Sub
'*******************************************************************************
'ALPA 20090725**************************************************************
Private Sub CargaDatos()
    Dim oRep As New DRepFormula
    Dim R    As New ADODB.Recordset
    Dim nReg As Integer
    nContBal = 0
    ReDim EstBal(0)
         Set R = oRep.CargaRepFormula(, gsOpeCod)
            Do While Not R.EOF
              nContBal = nContBal + 1
              ReDim Preserve EstBal(nContBal)
              EstBal(nContBal - 1).cCodCta = Trim(R!cCodigo)
              EstBal(nContBal - 1).cDescrip = Trim(R!cDescrip)
              EstBal(nContBal - 1).cFormula = DepuraEquivalentes(Trim(R!cFormula))
              EstBal(nContBal - 1).cObserva = Trim(R!cObserva)
              R.MoveNext
           Loop
         RSClose R
        Set oRep = Nothing
    Set R = Nothing
End Sub

Public Function CargaDatosPatrimonioEfec(ByVal lsAnio As String, ByVal lsMes As String, ByVal lsTipoBalance As String) As ADODB.Recordset
    Dim oRep As DCtaCont
    Set oRep = New DCtaCont
    Set CargaDatosPatrimonioEfec = oRep.Reporte3PatrimonioEfec(lsAnio, lsMes, lsTipoBalance)
    Set oRep = Nothing
End Function
Public Function CargaReporte3Patrimonio2D(ByVal psFecha As String) As ADODB.Recordset
    Dim oRep As DCtaCont
    Set oRep = New DCtaCont
    Set CargaReporte3Patrimonio2D = oRep.Reporte3Patrimonio2D(psFecha)
    Set oRep = Nothing
End Function



'****************************************************************************

'Public Sub GeneraReporte780030(ByVal lnAnio_ As Integer, ByVal lnMes_ As Integer, ByVal rsCta As ADODB.Recordset)
Public Function GeneraReporte780030(ByVal lnAnio_ As Integer, ByVal lnMes_ As Integer, ByVal rsCta As ADODB.Recordset, ByVal pbMuestraLibro As Boolean) As Currency 'EJVG20111129
    Dim fs As Scripting.FileSystemObject
    Dim lbExisteHoja As Boolean
    Dim lsArchivo1 As String
    Dim lsNomHoja  As String
    Dim lsNombreAgencia As String
    Dim lsCodAgencia As String
    Dim lsMes As String
    Dim lnContador As Integer
    Dim lsArchivo As String
    Dim xlsAplicacion As Excel.Application
    Dim xlsLibro As Excel.Workbook
    Dim xlHoja1 As Excel.Worksheet
    Dim rs      As ADODB.Recordset
    Dim oClie As New DPersonas
    Dim nSaldo85  As Currency
    Dim nSaldo86  As Currency
    Dim nSaldo87  As Currency
    Dim sTexto As String
    Dim sDocFecha As String
    Dim nSaltoContador As Integer
    Dim sFecha As String
    Dim sMov As String
    Dim sDoc As String
    Dim N As Integer
    Dim I As Integer
    Dim pnLinPage As Integer
    Dim ldFecha As Date
On Error GoTo GeneraExcelErr

    Set fs = New Scripting.FileSystemObject
    Set xlsAplicacion = New Excel.Application
    lsArchivo = "Reporte3Patrimonio"
    lsNomHoja = "Reporte3"

    lsArchivo1 = "\spooler\Reporte3" & gsCodUser & "_" & Format(gdFecha, "YYYYMMDD") & "_" & Format$(Time(), "HHMMSS") & ".xls"
    If fs.FileExists(App.path & "\FormatoCarta\" & lsArchivo & ".xls") Then
        Set xlsLibro = xlsAplicacion.Workbooks.Open(App.path & "\FormatoCarta\" & lsArchivo & ".xls")
    Else
        MsgBox "No Existe Plantilla en Carpeta FormatoCarta, Consulte con el Area de  TI", vbInformation, "Advertencia"
        Exit Function
    End If

    For Each xlHoja1 In xlsLibro.Worksheets
       If xlHoja1.Name = lsNomHoja Then
            xlHoja1.Activate
         lbExisteHoja = True
        Exit For
       End If
    Next
    If lbExisteHoja = False Then
        Set xlHoja1 = xlsLibro.Worksheets
        xlHoja1.Name = lsNomHoja
    End If

    nSaltoContador = 12

    'EJVG20120814 ***
    'If lnMes_ = "01" Or lnMes_ = "03" Or lnMes_ = "05" Or lnMes_ = "07" Or lnMes_ = "08" Or lnMes_ = "10" Or lnMes_ = "12" Then
    '    lnDia_ = "31"
    'ElseIf lnMes_ = "02" Then
    '    If (lnAnio_ Mod 4) = 0 Then
    '        lnDia_ = "29"
    '    Else
    '        lnDia_ = "28"
    '    End If
    'Else
    '    lnDia_ = "30"
    'End If
    'ldFecha = CDate(lnAnio_ & "/" & lnMes_ & "/" & lnDia_)
    ldFecha = obtenerFechaFinMes(lnMes_, lnAnio_)
    'END EJVG *******
    xlHoja1.Range("B6") = "AL " & Format(ldFecha, "DD") & " DE " & UCase(Format(ldFecha, "MMMM")) & " DEL  " & Format(ldFecha, "YYYY")

    Set oClie = Nothing
    I = 1
    Do While Not rsCta.EOF
        DoEvents

        If rsCta!cCtaContCod = "310101" Then
            xlHoja1.Cells(14 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310102" Then
            xlHoja1.Cells(15 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "3201" Then
            xlHoja1.Cells(17 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320201" Then
            xlHoja1.Cells(18 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320202" Then
            xlHoja1.Cells(19 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320301" Then
            xlHoja1.Cells(20 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320302" Then
            xlHoja1.Cells(21 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "3301" Then
            xlHoja1.Cells(22 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "3302" Then
            xlHoja1.Cells(23 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "330301" Then
            xlHoja1.Cells(24 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "380101" Then
            xlHoja1.Cells(27 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "390101" Then
            xlHoja1.Cells(28 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "380104" Then
            xlHoja1.Cells(29 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280202" Then
            xlHoja1.Cells(55 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280203" Then
            xlHoja1.Cells(56 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280204" Then
            xlHoja1.Cells(57 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280601" Then
            xlHoja1.Cells(58 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280602" Then
            xlHoja1.Cells(59 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280603" Then
            xlHoja1.Cells(60 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "380201" Then
            xlHoja1.Cells(62 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "380203" Then
            xlHoja1.Cells(63 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "380204" Then
            xlHoja1.Cells(65 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "380205" Then
            xlHoja1.Cells(76 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "3902" Then
            xlHoja1.Cells(80 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "190407" Then
            nSaldo85 = nSaldo85 + rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "19040907" Then
            nSaldo85 = nSaldo85 - rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "17" Then
            nSaldo85 = nSaldo85 + rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130308" Then
            xlHoja1.Cells(90 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13080308" Then
            xlHoja1.Cells(91 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13090308" Then
            xlHoja1.Cells(92 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13040801" Then
            xlHoja1.Cells(93 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1308040801" Then
            xlHoja1.Cells(94 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1309040801" Then
            xlHoja1.Cells(95 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "330302" Then
            xlHoja1.Cells(105 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310103" Then
            xlHoja1.Cells(107 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310104" Then
            xlHoja1.Cells(109 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310109" Then
            xlHoja1.Cells(110 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320203" Then
            xlHoja1.Cells(111 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320204" Then
            xlHoja1.Cells(113 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320209" Then
            xlHoja1.Cells(114 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320303" Then
            xlHoja1.Cells(115 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320304" Then
            xlHoja1.Cells(117 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320309" Then
            xlHoja1.Cells(118 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "260202010201" Then '119
            xlHoja1.Cells(150 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2602020202" Then
            xlHoja1.Cells(151 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2602020302" Then
            xlHoja1.Cells(152 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2603020102" Then
            xlHoja1.Cells(153 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2603020202" Then
            xlHoja1.Cells(154 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2603020302" Then
            xlHoja1.Cells(155 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2604020102" Then
            xlHoja1.Cells(156 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2604020202" Then
            xlHoja1.Cells(157 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2604020302" Then
            xlHoja1.Cells(158 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2605010102" Then
            xlHoja1.Cells(159 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2605010202" Then
            xlHoja1.Cells(160 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2605010302" Then
            xlHoja1.Cells(161 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2606020102" Then
            xlHoja1.Cells(162 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2606020202" Then
            xlHoja1.Cells(163 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2606020302" Then
            xlHoja1.Cells(164 - I, 5) = rsCta!nSaldoFinImporte
        End If
        'ALPA 20120613
        If rsCta!cCtaContCod = "260701010201" Then
        'If rsCta!cCtaContCod = "2607010102" Then
            xlHoja1.Cells(165 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2607010202" Then
            xlHoja1.Cells(166 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "2607010302" Then
            xlHoja1.Cells(167 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280202" Then
            xlHoja1.Cells(137 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280203" Then
            xlHoja1.Cells(138 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280204" Then
            xlHoja1.Cells(139 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280601" Then
            xlHoja1.Cells(140 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280602" Then
            xlHoja1.Cells(141 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280603" Then
            xlHoja1.Cells(142 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310104" Then
            xlHoja1.Cells(144 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310109" Then
            xlHoja1.Cells(145 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320204" Then
            xlHoja1.Cells(146 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320209" Then
            xlHoja1.Cells(147 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320304" Then
            xlHoja1.Cells(148 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320309" Then
            xlHoja1.Cells(149 - I, 5) = rsCta!nSaldoFinImporte
        End If
'        If rsCta!cCtaContCod = "2607010202" Then
'            xlHoja1.Cells(166 - i, 5) = rsCta!nSaldoFinImporte
'        End If
'        If rsCta!cCtaContCod = "2607010302" Then
'            xlHoja1.Cells(167 - i, 5) = rsCta!nSaldoFinImporte
'        End If
        If rsCta!cCtaContCod = "280202" Then
            xlHoja1.Cells(168 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280203" Then
            xlHoja1.Cells(169 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280204" Then
            xlHoja1.Cells(170 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280601" Then
            xlHoja1.Cells(171 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280602" Then
            xlHoja1.Cells(172 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280603" Then
            xlHoja1.Cells(173 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090202" Then
            xlHoja1.Cells(175 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090203" Then
            xlHoja1.Cells(176 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090206" Then
            xlHoja1.Cells(177 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090302" Then
            xlHoja1.Cells(178 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090303" Then
            xlHoja1.Cells(179 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090306" Then
            xlHoja1.Cells(180 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090402" Then
            xlHoja1.Cells(181 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090403" Then
            xlHoja1.Cells(182 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090502" Then '***** Nuevas cuentas ****************************************
            xlHoja1.Cells(183 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090503" Then
            xlHoja1.Cells(184 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090602" Then
            xlHoja1.Cells(185 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090603" Then
            xlHoja1.Cells(186 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090702" Then
            xlHoja1.Cells(187 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090703" Then
            xlHoja1.Cells(188 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090802" Then
            xlHoja1.Cells(189 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090803" Then
            xlHoja1.Cells(190 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090902" Then
            xlHoja1.Cells(191 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14090903" Then
            xlHoja1.Cells(192 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091002" Then
            xlHoja1.Cells(193 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091003" Then
            xlHoja1.Cells(194 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091102" Then
            xlHoja1.Cells(195 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091103" Then
            xlHoja1.Cells(196 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091202" Then
            xlHoja1.Cells(197 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091203" Then
            xlHoja1.Cells(198 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091302" Then
            xlHoja1.Cells(199 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091303" Then
            xlHoja1.Cells(200 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14091306" Then  '***** Fin Nuevas cuentas ****************************************
            xlHoja1.Cells(201 - I, 5) = rsCta!nSaldoFinImporte * (1.25) / 100
        End If
        If rsCta!cCtaContCod = "1509040101" Then
            xlHoja1.Cells(202 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "270102" Then
            xlHoja1.Cells(204 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "270203" Then
            xlHoja1.Cells(205 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "270204" Then
            xlHoja1.Cells(207 - I, 5) = rsCta!nSaldoFinImporte * (1.25) / 100
        End If
        If rsCta!cCtaContCod = "130308" Then
            xlHoja1.Cells(210 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13080308" Then
            xlHoja1.Cells(211 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13090308" Then
            xlHoja1.Cells(212 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13040801" Then
            xlHoja1.Cells(213 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1308040801" Then
            xlHoja1.Cells(214 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1309040801" Then
            xlHoja1.Cells(215 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310104" Then
            xlHoja1.Cells(222 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "310109" Then
            xlHoja1.Cells(223 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320204" Then
            xlHoja1.Cells(224 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320209" Then
            xlHoja1.Cells(225 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320304" Then
            xlHoja1.Cells(226 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "320309" Then
            xlHoja1.Cells(227 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280203" Then
            xlHoja1.Cells(247 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280204" Then
            xlHoja1.Cells(248 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280601" Then
            xlHoja1.Cells(249 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280602" Then
            xlHoja1.Cells(250 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "280603" Then
            xlHoja1.Cells(251 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130308" Then
            xlHoja1.Cells(253 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13080308" Then
            xlHoja1.Cells(254 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13090308" Then
            xlHoja1.Cells(255 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13040801" Then
            xlHoja1.Cells(256 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1308040801" Then
            xlHoja1.Cells(257 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1309040801" Then
            xlHoja1.Cells(258 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130105" Then
            xlHoja1.Cells(265 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130106" Then
            xlHoja1.Cells(266 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13020510" Then
            xlHoja1.Cells(267 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13020610" Then
            xlHoja1.Cells(268 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130305" Then
            xlHoja1.Cells(269 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130306" Then
            xlHoja1.Cells(270 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "130309" Then
            xlHoja1.Cells(271 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1303180105" Then '******06/09
            xlHoja1.Cells(272 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1303180205" Then '******06/09
            xlHoja1.Cells(273 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13040510" Then
            xlHoja1.Cells(274 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13040610" Then
            xlHoja1.Cells(275 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13040910" Then
            xlHoja1.Cells(276 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1304180105" Then '******06/09
            xlHoja1.Cells(277 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1304180205" Then '******06/09
            xlHoja1.Cells(278 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13050510" Then
            xlHoja1.Cells(279 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "13050610" Then
            xlHoja1.Cells(280 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1305180105" Then
            nSaldo86 = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1305180106" Then
            nSaldo86 = nSaldo86 + rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1305180109" Then
            nSaldo86 = nSaldo86 + rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1305180205" Then
            nSaldo87 = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1305180206" Then
            nSaldo87 = nSaldo87 + rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1305180209" Then
            nSaldo87 = nSaldo87 + rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1701" Then
            xlHoja1.Cells(283 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1702" Then
            xlHoja1.Cells(284 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "170701" Then
            xlHoja1.Cells(285 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "170702" Then
            xlHoja1.Cells(286 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401071801" Then '***************************
            xlHoja1.Cells(288 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401081801" Then
            xlHoja1.Cells(289 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401090606" Then
            xlHoja1.Cells(290 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401091801" Then
            xlHoja1.Cells(291 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14011006" Then
            xlHoja1.Cells(292 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401101801" Then
            xlHoja1.Cells(293 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401111801" Then
            xlHoja1.Cells(294 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401121801" Then
            xlHoja1.Cells(295 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1401131801" Then
            xlHoja1.Cells(296 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404071801" Then
            xlHoja1.Cells(297 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404081801" Then
            xlHoja1.Cells(298 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404090606" Then
            xlHoja1.Cells(299 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404091801" Then
            xlHoja1.Cells(300 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14041006" Then
            xlHoja1.Cells(301 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404101801" Then
            xlHoja1.Cells(302 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404111801" Then
            xlHoja1.Cells(303 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404121801" Then
            xlHoja1.Cells(304 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1404131801" Then
            xlHoja1.Cells(305 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405071801" Then
            xlHoja1.Cells(306 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405071918" Then
            xlHoja1.Cells(307 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405072218" Then
            xlHoja1.Cells(308 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405081801" Then
            xlHoja1.Cells(309 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405081918" Then
            xlHoja1.Cells(310 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405090606" Then
            xlHoja1.Cells(311 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405091801" Then
            xlHoja1.Cells(312 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405091908" Then
            xlHoja1.Cells(313 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14051006" Then
            xlHoja1.Cells(314 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405101801" Then
            xlHoja1.Cells(315 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405101906" Then
            xlHoja1.Cells(316 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405101918" Then
            xlHoja1.Cells(317 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405111801" Then
            xlHoja1.Cells(318 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405111918" Then
            xlHoja1.Cells(319 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405112218" Then
            xlHoja1.Cells(320 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405121801" Then
            xlHoja1.Cells(321 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405121918" Then
            xlHoja1.Cells(322 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405131801" Then
            xlHoja1.Cells(323 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1405131918" Then
            xlHoja1.Cells(324 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406071801" Then
            xlHoja1.Cells(325 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406071918" Then
            xlHoja1.Cells(326 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406072218" Then
            xlHoja1.Cells(327 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406081801" Then
            xlHoja1.Cells(328 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406081918" Then
            xlHoja1.Cells(329 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406090606" Then
            xlHoja1.Cells(330 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406091801" Then
            xlHoja1.Cells(331 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406091918" Then
            xlHoja1.Cells(332 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "14061006" Then
            xlHoja1.Cells(333 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406101801" Then
            xlHoja1.Cells(334 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406101906" Then
            xlHoja1.Cells(335 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406101918" Then
            xlHoja1.Cells(336 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406111801" Then
            xlHoja1.Cells(337 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406111918" Then
            xlHoja1.Cells(338 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406112218" Then
            xlHoja1.Cells(339 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406121801" Then
            xlHoja1.Cells(340 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406121918" Then
            xlHoja1.Cells(341 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406131801" Then
            xlHoja1.Cells(342 - I, 5) = rsCta!nSaldoFinImporte
        End If
        If rsCta!cCtaContCod = "1406131918" Then
            xlHoja1.Cells(343 - I, 5) = rsCta!nSaldoFinImporte
        End If

        rsCta.MoveNext
        If rsCta.EOF Then
           Exit Do
        End If
    Loop
    xlHoja1.Cells(87 - I, 5) = nSaldo85
    xlHoja1.Cells(281 - I, 5) = nSaldo86
    xlHoja1.Cells(282 - I, 5) = nSaldo87
'   rs.Close: Set rs = Nothing
'   rsCta.Close: Set rsCta = Nothing
    GeneraReporte780030 = CCur(xlHoja1.Range("E346")) 'EJVG20121002

    xlHoja1.SaveAs App.path & lsArchivo1
    'xlsAplicacion.Visible = True
    xlsAplicacion.Visible = pbMuestraLibro 'EJVG20121002
    xlsAplicacion.Windows(1).Visible = True
    Set xlsAplicacion = Nothing
    Set xlsLibro = Nothing
    Set xlHoja1 = Nothing
    'Set oImp = Nothing
Exit Function
GeneraExcelErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Function

'   Dim CadSql As String
'   Dim lbLibroOpen As Boolean
'   Dim lsArchivo As String
'   Dim lsRuta As String
'
'   On Error GoTo Error_GeneraReporte
'
'
'   lsRuta = App.path & "\Spooler\"
'   lsArchivo = lsRuta & "PatrimEfecAjustxInfla_" & Format(gdFecSis, "yyyymmdd") & ".xls"
'
'    lbLibroOpen = ExcelBegin(lsArchivo, xlAplicacion, xlLibro)
'
'   If lbLibroOpen Then
'         Set xlHoja1 = xlLibro.Worksheets(1)
'         xlHoja1.Name = "REPORTE 03"
'         GeneraExcel780030 lnMes_, lnAnio_
'
'         ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1
'         lbLibroOpen = False
'         CargaArchivo lsArchivo, lsRuta
'    End If
'     MsgBox "Reporte Generado Satisfactoriamente", vbInformation, "¡Aviso!"
'
'    Exit Sub
'
'Error_GeneraReporte:
'    MsgBox TextErr(Err.Description), vbInformation, "Aviso!"
'    If lbLibroOpen Then
'        ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1, False
'        lbLibroOpen = False
'    End If

End Function

Private Sub GeneraExcel780030(ByVal lnMes As Integer, ByVal lnannio As Integer)
    
    Dim I As Integer
    Dim k As Integer
    Dim j As Integer
    Dim CTemp As String
 
    Dim CoAj As Double

    Dim cadFormula As String
    Dim dfecha As Date
    Dim nFormula As New NInterpreteFormula
    Dim nImporte As Currency
    Dim nTipC As Currency

    Dim lsTempo As String
    Dim nFil As Integer
    Dim nCol As Integer
    Dim sCol As String
    Dim sTotal As String
    Dim sSimboloTempo As String
    Dim CoAjM As Double
    Dim ntempo As Double
    Dim nTotal As Currency
    
    dfecha = DateAdd("m", 1, CDate("01/" & Format(lnMes, "00") & "/" & Format(lnannio, "0000"))) - 1
    sSimboloTempo = "+"
    
    ImprimeExcelInflacionCabecera dfecha
      
    
    Set oNBal = New NBalanceCont
    Set oDBal = New DbalanceCont
    
    oDBal.EliminaBalanceTemp CInt(sTipoRepoFormula), "0"
    oDBal.InsertaBalanceTmpSaldos CInt(sTipoRepoFormula), "0", Format(dfecha, gsFormatoFecha)
        
    nTipC = oNBal.GetTipCambioBalance(Format(dfecha, gsFormatoMovFecha))
     
    nFil = 10
    sTotal = "="
    For I = 0 To nContBal - 1
        'Obtener Cuentas
        CTemp = ""
        nCuentas = 0
        ReDim Cuentas(0)
        For k = 1 To Len(EstBal(I).cFormula)
            If Mid(EstBal(I).cFormula, k, 1) >= "0" And Mid(EstBal(I).cFormula, k, 1) <= "9" Then
                CTemp = CTemp + Mid(EstBal(I).cFormula, k, 1)
            Else
                If Len(CTemp) > 0 Then
                    nCuentas = nCuentas + 1
                    ReDim Preserve Cuentas(nCuentas)
                    Cuentas(nCuentas - 1).cCta = CTemp
                End If
                CTemp = ""
            End If
        Next k
        If Len(CTemp) > 0 Then
            nCuentas = nCuentas + 1
            ReDim Preserve Cuentas(nCuentas)
            Cuentas(nCuentas - 1).cCta = CTemp
        End If
   
        'Carga Valres de las Cuentas
        For k = 0 To nCuentas - 1
           'Consolidado Ajustado
           CoAj = oNBal.CalculaSaldoCuenta(Cuentas(k).cCta, "[126]", sTipoRepoFormula, "0")
  
           Cuentas(k).nCOAj = CoAj
        Next k
        'Genero las 3 formulas para las 3 monedas
        CTemp = ""
        cadFormula = ""
        For k = 1 To Len(EstBal(I).cFormula)
            If (Mid(EstBal(I).cFormula, k, 1) >= "0" And Mid(EstBal(I).cFormula, k, 1) <= "9") Or (Mid(EstBal(I).cFormula, k, 1) = ".") Then
                CTemp = CTemp + Mid(EstBal(I).cFormula, k, 1)
            ElseIf Mid(EstBal(I).cFormula, k, 1) = "$" Then
                j = InStr(k + 1, EstBal(I).cFormula, "$") - 1
                nImporte = Mid(EstBal(I).cFormula, k + 1, j - k)
                cadFormula = cadFormula + Format(nImporte, gsFormatoNumeroDato)
                k = j + 1
            Else
                If Len(CTemp) > 0 Then
                    'busca su equivalente en monto
                    For j = 0 To nCuentas
                        If Cuentas(j).cCta = CTemp Then
                            cadFormula = cadFormula + Format(Cuentas(j).nCOAj, gsFormatoNumeroDato)
                            Exit For
                        End If
                    Next j
                End If
                CTemp = ""
                cadFormula = cadFormula + Mid(EstBal(I).cFormula, k, 1)
            End If
        Next k
        If Len(CTemp) > 0 Then
           'busca su equivalente en monto
           For j = 0 To nCuentas
               If Cuentas(j).cCta = CTemp Then
                   cadFormula = cadFormula + Format(Cuentas(j).nCOAj, gsFormatoNumeroDato)
                   Exit For
               End If
           Next j
        End If
        CoAj = 0
        
        CoAj = nFormula.ExprANum(cadFormula)
        
        'Convierto a miles de nuevos soles
        CoAjM = CoAj
        
        CoAj = Format(CoAj, "0.00")
        
        'Convierto a positivo los negativos
        If CoAj < 0 Then
            CoAj = CoAj * (-1)
            CoAjM = CoAjM * (-1)
        End If
        
        nFil = nFil + 1
 
        xlHoja1.Cells(nFil, 1) = EstBal(I).cFormula
        xlHoja1.Cells(nFil, 2) = EstBal(I).cDescrip
        
        If Trim(Mid(Trim(EstBal(I).cObserva), 1, 1)) = "#" Then
            xlHoja1.Cells(nFil, 3) = Format(0, "0.00")
            xlHoja1.Cells(nFil, 4) = Mid(EstBal(I).cObserva, 2, Len(EstBal(I).cObserva) - 1)
        Else
            ntempo = ntempo + CoAjM
            xlHoja1.Cells(nFil, 3) = Format(CoAj, "#,###,###.00")
            xlHoja1.Cells(nFil, 4) = EstBal(I).cObserva
        End If
          
        xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").HorizontalAlignment = xlLeft
        
        'si es menos entonces no se suma y se agrega raya
        If Trim(EstBal(I).cDescrip) = "-" Then
            For j = 1 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
            With xlHoja1.Range("A" & Trim(Str(nFil)) & ":D" & Trim(Str(nFil)) & "")
                .Borders(xlEdgeBottom).LineStyle = xlContinuous
                .Borders(xlEdgeBottom).Weight = xlThin
            End With
            
        ElseIf Trim(EstBal(I).cDescrip) = "Mas" Then
            sSimboloTempo = "+"
            xlHoja1.Cells(nFil, 1) = "Mas:"
            For j = 2 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
        ElseIf Trim(EstBal(I).cDescrip) = "Menos" Then
            sSimboloTempo = "-"
            xlHoja1.Cells(nFil, 1) = "Menos:"
            For j = 2 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
        ElseIf Len(Trim(EstBal(I).cFormula)) = 0 And Len(Trim(EstBal(I).cDescrip)) = 0 Then
            For j = 1 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
        End If
        sTotal = sTotal & sSimboloTempo & "C" & Trim(Str(nFil))
    Next I
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 2) = "TOTAL"
    xlHoja1.Cells(nFil, 3).Formula = sTotal
    
    nTotal = Val(xlHoja1.Cells(nFil, 3))
    
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "*Aquellos bonos extraordinarios emitidos al ampara de lo dispuesto en el Decreto Legislativo 770, Mantendrán como parte"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "Computable lo determinado por dicho dispositivo(Segunda Dispos. Transitoria Ley General Nro. 26702 modificada por las"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "leyes Nro. 27008 y 27102"
    
    nFil = nFil + 3
    xlHoja1.Cells(nFil, 1) = "GERENTE"
    xlHoja1.Cells(nFil, 3) = "FUNCIONARIO AUTORIZADO"
    
     
    xlHoja1.Cells.Select
    xlHoja1.Cells.Font.Name = "Times New Roman"
    xlHoja1.Cells.Font.Size = 7

    'Columna de Observaciones
    xlHoja1.Range("D11:D" & Trim(Str(nFil - 7)) & "").Font.Size = 6
    
    For I = nFil - 5 To nFil - 3
        xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").HorizontalAlignment = xlLeft
        xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").Font.Bold = True
        xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").Font.Size = 6
    Next
        
    'Firmas
    xlHoja1.Range("A" & Trim(Str(nFil)) & ":D" & Trim(Str(nFil)) & "").HorizontalAlignment = xlCenter
    xlHoja1.Range("A" & Trim(Str(nFil)) & ":D" & Trim(Str(nFil)) & "").Font.Bold = True
 
    
    xlHoja1.Range("A4:A4").Font.Size = 5
    xlHoja1.Range("A7:A7").Font.Size = 5
    xlHoja1.Range("A8:A8").Font.Size = 5
    
        
    'CUADROS GRANDES
    
    With xlHoja1.Range("A10:D10")
        .Borders.LineStyle = xlContinuous
        .Borders.Weight = xlThin
    End With
    
    'TOTALES
    
    With xlHoja1.Range("A" & Trim(Str(nFil - 6)) & ":D" & Trim(Str(nFil - 6)) & "")
        .Borders.LineStyle = xlContinuous
        .Borders.Weight = xlThin
        .Font.Bold = True
    End With
    
    With xlHoja1.Range("A11:D" & Trim(Str(nFil - 7)) & "")
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
        .Borders(xlEdgeLeft).Weight = xlThin
        .Borders(xlEdgeRight).Weight = xlThin
        .Borders(xlEdgeTop).Weight = xlThin
        .Borders(xlInsideVertical).Weight = xlThin
         
    End With
    
    'FIRMAS
    
     xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).LineStyle = xlContinuous
     xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).Weight = xlThin
     xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).LineStyle = xlContinuous
     xlHoja1.Range("C" & Trim(Str(nFil)) & ":C" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).Weight = xlThin
    
    Set nFormula = Nothing
    
    
    Dim oEst As New NEstadisticas
   oEst.EliminaEstadAnexos "01/" & IIf(Len(Trim(lnMes)) = 1, "0" & Trim(Str(lnMes)), Trim(Str(lnMes))) & "/" & Trim(Str(lnannio)), "TOTALREP03", "1"
     
    oEst.InsertaEstadAnexos "01/" & IIf(Len(Trim(lnMes)) = 1, "0" & Trim(Str(lnMes)), Trim(Str(lnMes))) & "/" & Trim(Str(lnannio)), "TOTALREP03", "1", Trim(Str(ntempo))
     
    
End Sub

Private Sub ImprimeExcelInflacionCabecera(ByVal pdFecha As String)
    Dim nCol As Integer
    Dim I As Integer
    Dim nFil As Integer
    xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
    xlHoja1.Cells(1, 4) = "REPORTE NRO 3"
    xlHoja1.Cells(3, 1) = "PATRIMONIO EFECTIVO AJUSTADO POR INFLACION"
    xlHoja1.Cells(4, 1) = "Art. 185º de la ley Nro. 26702"
    xlHoja1.Cells(6, 1) = UCase(gsNomCmac)
    xlHoja1.Cells(7, 1) = "Al " & pdFecha
    '''xlHoja1.Cells(8, 1) = "(EN MILES DE NUEVOS SOLES)" 'marg ers044-2016
    xlHoja1.Cells(8, 1) = "(EN MILES DE " & StrConv(gcPEN_PLURAL, vbUpperCase) & ")" 'marg ers044-2016
    
    xlHoja1.Cells(10, 1) = "CUENTAS DEL MANUAL DE CONTABILIDAD"
    xlHoja1.Cells(10, 2) = "DENOMINACION"
    '''xlHoja1.Cells(10, 3) = "MONTO S/." 'marg ers044-2016
    xlHoja1.Cells(10, 3) = "MONTO " & gcPEN_SIMBOLO 'marg ers044-2016
    xlHoja1.Cells(10, 4) = "OBSERVACIONES"
     
    'COMBINAR CELDAS
    xlHoja1.Range("A1:B1").MergeCells = True
    
    For I = 1 To 10
        If I > 2 And I < 9 Then
            xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").MergeCells = True
            xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").HorizontalAlignment = xlCenter
        End If
        If I <> 9 And I <> 8 Then
            xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").Font.Bold = True
        End If
    Next
    
    'ANCHO DE COLUMNAS
    'Cuentas del manual de contabilidad
    xlHoja1.Range("A1:A1").ColumnWidth = 12
    'Denominacion
    xlHoja1.Range("B1:B1").ColumnWidth = 40
    'Monto en Soles
    xlHoja1.Range("C1:C1").ColumnWidth = 14
    'Observaciones
    xlHoja1.Range("D1:D1").ColumnWidth = 21
    
    'Titulos anchos de Grosor
    xlHoja1.Range("A10:A10").RowHeight = 40
    xlHoja1.Range("A10:A10").WrapText = True
    xlHoja1.Range("A10:D10").HorizontalAlignment = xlCenter
    xlHoja1.Range("A10:D10").VerticalAlignment = xlCenter
     
     
End Sub


Private Function DepuraEquivalentes(psEquival As String) As String
Dim j As Integer
Dim CadTemp As String
   CadTemp = ""
   For j = 1 To Len(psEquival)
       If Mid(psEquival, j, 1) <> "." Then
           CadTemp = CadTemp + Mid(psEquival, j, 1)
       End If
   Next j
   DepuraEquivalentes = CadTemp
End Function

Private Sub GeneraReporte(ByVal lnAnio_ As Integer, ByVal lnMes_ As Integer)
    
   Dim CadSql As String
   Dim lbLibroOpen As Boolean
   Dim lsArchivo As String
   Dim lsRuta As String
   
   On Error GoTo Error_GeneraReporte
   
   
   lsRuta = App.path & "\Spooler\"
   lsArchivo = lsRuta & "PatrimEfecAjustxInfla_" & Format(gdFecSis & " " & Time, "yyyymmddhhmmss") & gsCodUser & ".xls"
   
    lbLibroOpen = ExcelBegin(lsArchivo, xlAplicacion, xlLibro)
    
   If lbLibroOpen Then
         Set xlHoja1 = xlLibro.Worksheets(1)
         xlHoja1.Name = "REPORTE 03"
         GeneraExcelInflacion lnMes_, lnAnio_
         
         ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1
         lbLibroOpen = False
         MsgBox "Reporte Generado Satisfactoriamente", vbInformation, "¡Aviso!"
         CargaArchivo lsArchivo, lsRuta
    End If
    
    Exit Sub
    
Error_GeneraReporte:
    MsgBox TextErr(Err.Description), vbInformation, "Aviso!"
    If lbLibroOpen Then
        ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1, False
        lbLibroOpen = False
    End If
      
End Sub

Private Sub GeneraExcelInflacion(ByVal lnMes As Integer, ByVal lnannio As Integer)
    
    Dim I As Integer
    Dim k As Integer
    Dim j As Integer
    Dim CTemp As String
 
    Dim CoAj As Double

    Dim cadFormula As String
    Dim dfecha As Date
    Dim nFormula As New NInterpreteFormula
    Dim nImporte As Currency
    Dim nTipC As Currency

    Dim lsTempo As String
    Dim nFil As Integer
    Dim nCol As Integer
    Dim sCol As String
    Dim sTotal As String
    Dim sSimboloTempo As String
    
    dfecha = DateAdd("m", 1, CDate("01/" & Format(lnMes, "00") & "/" & Format(lnannio, "0000"))) - 1
    sSimboloTempo = "+"
    
    ImprimeExcelInflacionCabecera dfecha
      
    
    Set oNBal = New NBalanceCont
    Set oDBal = New DbalanceCont
    
    oDBal.EliminaBalanceTemp CInt(sTipoRepoFormula), "0"
    oDBal.InsertaBalanceTmpSaldos CInt(sTipoRepoFormula), "0", Format(dfecha, gsFormatoFecha)
        
    nTipC = oNBal.GetTipCambioBalance(Format(dfecha + 1, gsFormatoMovFecha))
     
    nFil = 10
    sTotal = "="
    For I = 0 To nContBal - 1
        'Obtener Cuentas
        CTemp = ""
        nCuentas = 0
        ReDim Cuentas(0)
        For k = 1 To Len(EstBal(I).cFormula)
            If Mid(EstBal(I).cFormula, k, 1) >= "0" And Mid(EstBal(I).cFormula, k, 1) <= "9" Then
                CTemp = CTemp + Mid(EstBal(I).cFormula, k, 1)
            Else
                If Len(CTemp) > 0 Then
                    nCuentas = nCuentas + 1
                    ReDim Preserve Cuentas(nCuentas)
                    Cuentas(nCuentas - 1).cCta = CTemp
                End If
                CTemp = ""
            End If
        Next k
        If Len(CTemp) > 0 Then
            nCuentas = nCuentas + 1
            ReDim Preserve Cuentas(nCuentas)
            Cuentas(nCuentas - 1).cCta = CTemp
        End If
   
        'Carga Valres de las Cuentas
        For k = 0 To nCuentas - 1
           'Consolidado Ajustado
           CoAj = oNBal.CalculaSaldoCuenta(Cuentas(k).cCta, "[126]", sTipoRepoFormula)
  
           Cuentas(k).nCOAj = CoAj
        Next k
        'Genero las 3 formulas para las 3 monedas
        CTemp = ""
        cadFormula = ""
        For k = 1 To Len(EstBal(I).cFormula)
            If (Mid(EstBal(I).cFormula, k, 1) >= "0" And Mid(EstBal(I).cFormula, k, 1) <= "9") Or (Mid(EstBal(I).cFormula, k, 1) = ".") Then
                CTemp = CTemp + Mid(EstBal(I).cFormula, k, 1)
            ElseIf Mid(EstBal(I).cFormula, k, 1) = "$" Then
                j = InStr(k + 1, EstBal(I).cFormula, "$") - 1
                nImporte = Mid(EstBal(I).cFormula, k + 1, j - k)
                cadFormula = cadFormula + Format(nImporte, gsFormatoNumeroDato)
                k = j + 1
            Else
                If Len(CTemp) > 0 Then
                    'busca su equivalente en monto
                    For j = 0 To nCuentas
                        If Cuentas(j).cCta = CTemp Then
                            cadFormula = cadFormula + Format(Cuentas(j).nCOAj, gsFormatoNumeroDato)
                            Exit For
                        End If
                    Next j
                End If
                CTemp = ""
                cadFormula = cadFormula + Mid(EstBal(I).cFormula, k, 1)
            End If
        Next k
        If Len(CTemp) > 0 Then
           'busca su equivalente en monto
           For j = 0 To nCuentas
               If Cuentas(j).cCta = CTemp Then
                   cadFormula = cadFormula + Format(Cuentas(j).nCOAj, gsFormatoNumeroDato)
                   Exit For
               End If
           Next j
        End If
        CoAj = 0
        
        CoAj = nFormula.ExprANum(cadFormula)
        
        nFil = nFil + 1
 
        xlHoja1.Cells(nFil, 1) = EstBal(I).cFormula
        xlHoja1.Cells(nFil, 2) = EstBal(I).cDescrip
        xlHoja1.Cells(nFil, 3) = Format(CoAj, "#,###,###.00")
        xlHoja1.Cells(nFil, 4) = EstBal(I).cObserva
        
        xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").HorizontalAlignment = xlLeft
        
        'si es menos entonces no se suma y se agrega raya
        If Trim(EstBal(I).cDescrip) = "-" Then
            For j = 1 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
            With xlHoja1.Range("A" & Trim(Str(nFil)) & ":D" & Trim(Str(nFil)) & "")
                .Borders(xlEdgeBottom).LineStyle = xlContinuous
                .Borders(xlEdgeBottom).Weight = xlThin
            End With
            
        ElseIf Trim(EstBal(I).cDescrip) = "Mas" Then
            sSimboloTempo = "+"
            xlHoja1.Cells(nFil, 1) = "Mas:"
            For j = 2 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
        ElseIf Trim(EstBal(I).cDescrip) = "Menos" Then
            sSimboloTempo = "-"
            xlHoja1.Cells(nFil, 1) = "Menos:"
            For j = 2 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
        ElseIf Len(Trim(EstBal(I).cFormula)) = 0 And Len(Trim(EstBal(I).cDescrip)) = 0 Then
            For j = 1 To 4
                xlHoja1.Cells(nFil, j) = ""
            Next
        End If
        sTotal = sTotal & sSimboloTempo & "C" & Trim(Str(nFil))
    Next I
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 2) = "TOTAL"
    xlHoja1.Cells(nFil, 3).Formula = sTotal
    
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "*Aquellos bonos extraordinarios emitidos al ampara de lo dispuesto en el Decreto Legislativo 770, Mantendrán como parte"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "Computable lo determinado por dicho dispositivo(Segunda Dispos. Transitoria Ley General Nro. 26702 modificada por las"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "leyes Nro. 27008 y 27102"
    
    nFil = nFil + 3
    xlHoja1.Cells(nFil, 1) = "GERENTE"
    xlHoja1.Cells(nFil, 3) = "FUNCIONARIO AUTORIZADO"
    
     
    xlHoja1.Cells.Select
    xlHoja1.Cells.Font.Name = "Times New Roman"
    xlHoja1.Cells.Font.Size = 7

    'Columna de Observaciones
    xlHoja1.Range("D11:D" & Trim(Str(nFil - 7)) & "").Font.Size = 6
    
    For I = nFil - 5 To nFil - 3
        xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").HorizontalAlignment = xlLeft
        xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").Font.Bold = True
        xlHoja1.Range("A" & Trim(Str(I)) & ":D" & Trim(Str(I)) & "").Font.Size = 6
    Next
        
    'Firmas
    xlHoja1.Range("A" & Trim(Str(nFil)) & ":D" & Trim(Str(nFil)) & "").HorizontalAlignment = xlCenter
    xlHoja1.Range("A" & Trim(Str(nFil)) & ":D" & Trim(Str(nFil)) & "").Font.Bold = True
 
    
    xlHoja1.Range("A4:A4").Font.Size = 5
    xlHoja1.Range("A7:A7").Font.Size = 5
    xlHoja1.Range("A8:A8").Font.Size = 5
    
        
    'CUADROS GRANDES
    
    With xlHoja1.Range("A10:D10")
        .Borders.LineStyle = xlContinuous
        .Borders.Weight = xlThin
    End With
    
    'TOTALES
    
    With xlHoja1.Range("A" & Trim(Str(nFil - 6)) & ":D" & Trim(Str(nFil - 6)) & "")
        .Borders.LineStyle = xlContinuous
        .Borders.Weight = xlThin
        .Font.Bold = True
    End With
    
    With xlHoja1.Range("A11:D" & Trim(Str(nFil - 7)) & "")
        .Borders(xlEdgeBottom).LineStyle = xlContinuous
        .Borders(xlEdgeLeft).LineStyle = xlContinuous
        .Borders(xlEdgeRight).LineStyle = xlContinuous
        .Borders(xlEdgeTop).LineStyle = xlContinuous
        .Borders(xlInsideVertical).LineStyle = xlContinuous
        .Borders(xlEdgeBottom).Weight = xlThin
        .Borders(xlEdgeLeft).Weight = xlThin
        .Borders(xlEdgeRight).Weight = xlThin
        .Borders(xlEdgeTop).Weight = xlThin
        .Borders(xlInsideVertical).Weight = xlThin
         
    End With
    
    'FIRMAS
    
     xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).LineStyle = xlContinuous
     xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).Weight = xlThin
     xlHoja1.Range("A" & Trim(Str(nFil)) & ":A" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).LineStyle = xlContinuous
     xlHoja1.Range("C" & Trim(Str(nFil)) & ":C" & Trim(Str(nFil)) & "").Borders(xlEdgeTop).Weight = xlThin
    
    Set nFormula = Nothing
End Sub


Public Sub ImprimeAnx18SBS_InmMovEquip(ByVal lsRepoCod As String, ByVal lnAnio As Integer, ByVal lnMes As Integer)
     
    gsOpeCod = lsRepoCod
    sTipoRepoFormula = Right(gsOpeCod, 1)
    sTituRepoFormula = "INMUEBLES MOBILIARIO Y EQUIPO"
   
   Call CargaDatos
   Call GeneraReporte770180(lnAnio, lnMes)
    
End Sub

Private Sub GeneraReporte770180(ByVal lnAnio_ As Integer, ByVal lnMes_ As Integer)
   Dim CadSql As String
   Dim lbLibroOpen As Boolean
   Dim lsArchivo As String
   Dim lsRuta As String
   
   On Error GoTo Error_GeneraReporte
   
   
   lsRuta = App.path & "\Spooler\"
   lsArchivo = lsRuta & "InmMovEquip_" & Format(gdFecSis & " " & Time, "yyyymmddhhmmss") & gsCodUser & ".xls"
   
    lbLibroOpen = ExcelBegin(lsArchivo, xlAplicacion, xlLibro)
    
   If lbLibroOpen Then
         Set xlHoja1 = xlLibro.Worksheets(1)
         xlHoja1.Name = "ANEXO 18"
         GeneraExcel770180 lnMes_, lnAnio_
         
         ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1
         lbLibroOpen = False
         CargaArchivo lsArchivo, lsRuta
    End If
     MsgBox "Reporte Generado Satisfactoriamente", vbInformation, "¡Aviso!"
    
    Exit Sub
    
Error_GeneraReporte:
    MsgBox TextErr(Err.Description), vbInformation, "Aviso!"
    If lbLibroOpen Then
        ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1, False
        lbLibroOpen = False
    End If
      
End Sub


Private Sub GeneraExcel770180(ByVal nMes As Integer, ByVal nanno As Integer)
    
    Dim I As Integer
    Dim k As Integer
    Dim j As Integer
    Dim CTemp As String
 
    Dim nSaldAnt As Double
    Dim nComprMes As Double
    Dim nRetMes As Double
    Dim nAjusInfla As Double
    Dim nSaldFin As Double

    Dim cadFormula As String
    Dim CadFormula1 As String
    Dim CadFormula2 As String
    Dim CadFormula3 As String
    Dim CadFormula4 As String
    Dim CadFormula5 As String
    
    Dim dfecha As Date
    Dim nFormula As New NInterpreteFormula
    Dim nImporte As Currency
    Dim nTipC As Currency

    Dim lsTempo As String
    Dim nFil As Integer
    Dim nCol As Integer
    Dim sCol As String
    Dim sTotal As String
    Dim sSimboloTempo As String
    
    Dim sSql As String
    Dim ntempo As Double
    Dim reg As ADODB.Recordset
    
    Dim dUltimoActual As String
    Dim dPrimeroActual As String
    Dim dUltimoPasado As String
    Dim dConec As DConecta
    
    Dim nTotal1 As Double
    Dim nTotal2 As Double
    Dim nTotal3 As Double
    Dim nTotal4 As Double
    Dim nTotal5 As Double
    Dim nFilaTempo As Integer
    
    Dim bBan As Integer
    
    
    bBan = 1 'se hara dos cuando pase la raya para invertir los totales
    
    dUltimoActual = DateAdd("d", -1, "01/" & IIf(nMes = 12, "01", IIf(Len(Trim(nMes + 1)) = 1, "0" & Trim(Str(nMes + 1)), Trim(Str(nMes + 1))) & "/" & IIf(nMes = 12, Trim(Str(nanno + 1)), Trim(Str(nanno)))))
    
    dPrimeroActual = DateAdd("m", -3, "01/" & IIf(nMes = 12, "01", IIf(Len(Trim(nMes + 1)) = 1, "0" & Trim(Str(nMes + 1)), Trim(Str(nMes + 1))) & "/" & IIf(nMes = 12, Trim(Str(nanno + 1)), Trim(Str(nanno)))))
    
    
    'dPrimeroActual = "01/" & Mid(dUltimoActual, 4, 7)
    dUltimoPasado = DateAdd("d", -1, dPrimeroActual) 'DateAdd("d", -1, "01/" & IIf(Len(Trim(Month(dUltimoActual))) = 1, "0" & Trim(Str(Month(dUltimoActual))), Trim(Str(Month(dUltimoActual)))) & "/" & Trim(Year(dUltimoActual)))

    
    nFil = ImprimeExcelInmMovEquipCabecera(dUltimoActual, nFil, 1)
     
    Set dConec = New DConecta
    dConec.AbreConexion
    nFil = 10
    sTotal = "="
    For I = 0 To nContBal - 1
        'Obtener Cuentas
        CTemp = ""
        nCuentas = 0
        ReDim CuentasIMEq(0)
        For k = 1 To Len(EstBal(I).cFormula)
            If Mid(EstBal(I).cFormula, k, 1) >= "0" And Mid(EstBal(I).cFormula, k, 1) <= "9" Then
                CTemp = CTemp + Mid(EstBal(I).cFormula, k, 1)
            Else
                If Len(CTemp) > 0 Then
                    nCuentas = nCuentas + 1
                    ReDim Preserve CuentasIMEq(nCuentas)
                    CuentasIMEq(nCuentas - 1).cCta = CTemp
                End If
                CTemp = ""
            End If
        Next k
        If Len(CTemp) > 0 Then
            nCuentas = nCuentas + 1
            ReDim Preserve CuentasIMEq(nCuentas)
            CuentasIMEq(nCuentas - 1).cCta = CTemp
        End If
   
        'Carga ValOres de las Cuentas
        For k = 0 To nCuentas - 1
           
           'ACA DEVUELVO LOS VALORES PARA CADA UNA DE LAS CUENTAS
            
            'MsgBox CuentasIMEq(K).cCta
            
            '" & Trim(Trim(Mid(CuentasIMEq(K).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(K).cCta, 4, Len(CuentasIMEq(K).cCta) - 3)) & Trim("%")) & "'
            
            'MsgBox Trim("'" & Trim(Mid(Cad, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(K).cCta, 4, Len(CuentasIMEq(K).cCta) - 3)) & Trim("%'")
            
           'MsgBox "'" & Trim(Trim(Mid(CuentasIMEq(K).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(K).cCta, 4, Len(CuentasIMEq(K).cCta) - 3)) & Trim("%")) & "'"

            
            'Saco el saldo del mes pasado
            'sSql = " SELECT nCtaSaldoImporte, nCtaSaldoImporteME " & _
                    " From dbo.CtaSaldo " & _
                    " WHERE (CONVERT(varchar(8), dCtaSaldoFecha, 112)='" & Format(dUltimoPasado, "yyyymmdd") & "') and (cCtaContCod Like'" & Trim(Trim(Mid(CuentasIMEq(K).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(K).cCta, 4, Len(CuentasIMEq(K).cCta) - 3)) & Trim("%")) & "')"
                                
            sSql = " select ISNULL(sum(nctasaldoimporte),0) as nSaldo from ctasaldo cs " & _
                  " where cctacontcod like '" & Trim(Trim(Mid(CuentasIMEq(k).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(k).cCta, 4, Len(CuentasIMEq(k).cCta) - 3)) & Trim("%")) & "' and " & _
                  " dctasaldofecha = (select max(dctasaldofecha) from ctasaldo " & _
                  " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoPasado, "yyyymmdd") & "'))"
                                
                                
            Set reg = dConec.CargaRecordSet(sSql)
            
            If reg.BOF Then
            Else
            
                CuentasIMEq(k).nSaldoAnt = reg!nSaldo
            End If
            
            reg.Close
            Set reg = Nothing
            
            'Saco el saldo del mes actual
            'sSql = " SELECT nCtaSaldoImporte, nCtaSaldoImporteME " & _
                    " From dbo.CtaSaldo " & _
                    " WHERE (CONVERT(varchar(8), dCtaSaldoFecha, 112)='" & Format(dUltimoActual, "yyyymmdd") & "') and (cCtaContCod Like'" & Trim(Trim(Mid(CuentasIMEq(K).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(K).cCta, 4, Len(CuentasIMEq(K).cCta) - 3)) & Trim("%")) & "')"
                                
            sSql = " select ISNULL(sum(nctasaldoimporte),0) as nSaldo from ctasaldo cs " & _
                  " where cctacontcod like '" & Trim(Trim(Mid(CuentasIMEq(k).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(k).cCta, 4, Len(CuentasIMEq(k).cCta) - 3)) & Trim("%")) & "' and " & _
                  " dctasaldofecha = (select max(dctasaldofecha) from ctasaldo " & _
                  " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoActual, "yyyymmdd") & "'))"
                    
                                
            Set reg = dConec.CargaRecordSet(sSql)
            
            If reg.BOF Then
            Else
                CuentasIMEq(k).nSaldoFin = reg!nSaldo
            End If
            
            reg.Close
            Set reg = Nothing
             
            'Saco las operaciones + - y la inflacion
            'Operaciones +
            
            sSql = " SELECT ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nTotal " & _
                 " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
                 " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('1', '2')) " & _
                 " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
                 " AND (dbo.Mov.nMovEstado = 10) " & _
                 " AND (dbo.Mov.nMovFlag = 0 OR dbo.Mov.nMovFlag = 2 or dbo.Mov.nMovFlag = 3) " & _
                 " AND (dbo.MovCta.nMovImporte > 0) " & _
                 " AND (dbo.MovCta.cCtaContCod Like'" & Trim(Trim(Mid(CuentasIMEq(k).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(k).cCta, 4, Len(CuentasIMEq(k).cCta) - 3)) & Trim("%")) & "') "

            Set reg = dConec.CargaRecordSet(sSql)
              
            If reg.BOF Then
            Else
                CuentasIMEq(k).nCompras = reg!nTotal
            End If
            
            reg.Close
            Set reg = Nothing
            
            'Operaciones -
            
            sSql = " SELECT ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nTotal " & _
                 " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
                 " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('1', '2')) " & _
                 " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
                 " AND (dbo.Mov.nMovEstado = 10) " & _
                 " AND (dbo.Mov.nMovFlag = 0 OR dbo.Mov.nMovFlag = 2 or dbo.Mov.nMovFlag = 3) " & _
                 " AND (dbo.MovCta.nMovImporte < 0) " & _
                 " AND (dbo.MovCta.cCtaContCod Like'" & Trim(Trim(Mid(CuentasIMEq(k).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(k).cCta, 4, Len(CuentasIMEq(k).cCta) - 3)) & Trim("%")) & "') "
            
            Set reg = dConec.CargaRecordSet(sSql)
              
            If reg.BOF Then
            Else
                CuentasIMEq(k).nVentas = reg!nTotal
            End If
            
            reg.Close
            Set reg = Nothing
            
            'Ajuste por inflacion
            sSql = " SELECT ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nTotal " & _
                 " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
                 " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('6')) " & _
                 " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
                 " AND (dbo.Mov.nMovEstado = 10) " & _
                 " AND (dbo.Mov.nMovFlag = 0 OR dbo.Mov.nMovFlag = 2 or dbo.Mov.nMovFlag = 3) " & _
                 " AND (dbo.MovCta.cCtaContCod Like'" & Trim(Trim(Mid(CuentasIMEq(k).cCta, 1, 2)) & Trim("[123456789]") & Trim(Mid(CuentasIMEq(k).cCta, 4, Len(CuentasIMEq(k).cCta) - 3)) & Trim("%")) & "') "
            
            Set reg = dConec.CargaRecordSet(sSql)
              
            If reg.BOF Then
            Else
                CuentasIMEq(k).nAjuste = reg!nTotal
            End If
            reg.Close
            Set reg = Nothing
            
             
        Next k
        'Genero las 3 formulas para las 3 monedas
        CTemp = ""
        CadFormula1 = ""
        CadFormula2 = ""
        CadFormula3 = ""
        CadFormula4 = ""
        CadFormula5 = ""
        For k = 1 To Len(EstBal(I).cFormula)
            If (Mid(EstBal(I).cFormula, k, 1) >= "0" And Mid(EstBal(I).cFormula, k, 1) <= "9") Or (Mid(EstBal(I).cFormula, k, 1) = ".") Then
                CTemp = CTemp + Mid(EstBal(I).cFormula, k, 1)
            ElseIf Mid(EstBal(I).cFormula, k, 1) = "$" Then
                j = InStr(k + 1, EstBal(I).cFormula, "$") - 1
                nImporte = Mid(EstBal(I).cFormula, k + 1, j - k)
                CadFormula1 = CadFormula1 + Format(nImporte, gsFormatoNumeroDato)
                CadFormula2 = CadFormula1 + Format(nImporte, gsFormatoNumeroDato)
                CadFormula3 = CadFormula1 + Format(nImporte, gsFormatoNumeroDato)
                CadFormula4 = CadFormula1 + Format(nImporte, gsFormatoNumeroDato)
                CadFormula5 = CadFormula1 + Format(nImporte, gsFormatoNumeroDato)
                k = j + 1
            Else
                If Len(CTemp) > 0 Then
                    'busca su equivalente en monto
                    For j = 0 To nCuentas
                        If CuentasIMEq(j).cCta = CTemp Then
                            CadFormula1 = CadFormula1 + Format(CuentasIMEq(j).nSaldoAnt, gsFormatoNumeroDato)
                            CadFormula2 = CadFormula2 + Format(CuentasIMEq(j).nCompras, gsFormatoNumeroDato)
                            CadFormula3 = CadFormula3 + Format(CuentasIMEq(j).nVentas, gsFormatoNumeroDato)
                            CadFormula4 = CadFormula4 + Format(CuentasIMEq(j).nAjuste, gsFormatoNumeroDato)
                            CadFormula5 = CadFormula5 + Format(CuentasIMEq(j).nSaldoFin, gsFormatoNumeroDato)
                            Exit For
                        End If
                    Next j
                End If
                CTemp = ""
                CadFormula1 = CadFormula1 + Mid(EstBal(I).cFormula, k, 1)
                CadFormula2 = CadFormula2 + Mid(EstBal(I).cFormula, k, 1)
                CadFormula3 = CadFormula3 + Mid(EstBal(I).cFormula, k, 1)
                CadFormula4 = CadFormula4 + Mid(EstBal(I).cFormula, k, 1)
                CadFormula5 = CadFormula5 + Mid(EstBal(I).cFormula, k, 1)
            End If
        Next k
        
        If Len(CTemp) > 0 Then
           'busca su equivalente en monto
           For j = 0 To nCuentas
               If CuentasIMEq(j).cCta = CTemp Then
                   CadFormula1 = CadFormula1 + Format(CuentasIMEq(j).nSaldoAnt, gsFormatoNumeroDato)
                   CadFormula2 = CadFormula2 + Format(CuentasIMEq(j).nCompras, gsFormatoNumeroDato)
                   CadFormula3 = CadFormula3 + Format(CuentasIMEq(j).nVentas, gsFormatoNumeroDato)
                   CadFormula4 = CadFormula4 + Format(CuentasIMEq(j).nAjuste, gsFormatoNumeroDato)
                   CadFormula5 = CadFormula5 + Format(CuentasIMEq(j).nSaldoFin, gsFormatoNumeroDato)
                   Exit For
               End If
           Next j
        End If
        nSaldAnt = 0
        nComprMes = 0
        nRetMes = 0
        nAjusInfla = 0
        nSaldFin = 0
        
        nSaldAnt = Format(nFormula.ExprANum(CadFormula1) / 1000, "0")
        nComprMes = Format(nFormula.ExprANum(CadFormula2) / 1000, "0")
        nRetMes = Format(nFormula.ExprANum(CadFormula3) * (-1) / 1000, "0")
        nAjusInfla = Format(nFormula.ExprANum(CadFormula4) / 1000, "0")
        nSaldFin = Format(nFormula.ExprANum(CadFormula5) / 1000, "0")
        
        If bBan = 2 Then 'si son depreciaciones entonces se invierten las compras y las ventas
            nSaldAnt = nSaldAnt * (-1)
            ntempo = nComprMes
            nComprMes = nRetMes
            nRetMes = ntempo
            ntempo = 0
            nAjusInfla = nAjusInfla * (-1)
            nSaldFin = nSaldFin * (-1)
        End If
        nFil = nFil + 1
 
        If EstBal(I).cDescrip = "-" Then
            'nFil = nFil + 1
            xlHoja1.Cells(nFil, 2) = "TOTAL"
            xlHoja1.Cells(nFil, 3) = Format(nTotal1, "#,###,###")
            xlHoja1.Cells(nFil, 4) = Format(nTotal2, "#,###,###")
            xlHoja1.Cells(nFil, 5) = Format(nTotal3, "#,###,###")
            xlHoja1.Cells(nFil, 6) = Format(nTotal4, "#,###,###")
            xlHoja1.Cells(nFil, 8) = Format(nTotal5, "#,###,###")
            
            xlHoja1.Range("A" & Trim(Str(nFil)) & ":H" & Trim(Str(nFil))).Font.Bold = True
              
            bBan = 2
            nTotal1 = 0
            nTotal2 = 0
            nTotal3 = 0
            nTotal4 = 0
            nTotal5 = 0
            'ExcelCuadro xlHoja1, 1, 8, 8, nFil
            
            ExcelCuadro xlHoja1, 1, 8, 8, nFil - 1
            ExcelCuadro xlHoja1, 1, CCur(nFil), 8, CCur(nFil)
            
            nFil = nFil + 2
            nFil = ImprimeExcelInmMovEquipCabecera(dUltimoActual, nFil, 2)
            nFilaTempo = nFil
            nFil = nFil + 1
        Else
            If Mid(EstBal(I).cObserva, 1, 8) = "Grupo***" Then
'                nFil = nFil + 1
                xlHoja1.Cells(nFil, 1) = Mid(EstBal(I).cObserva, 9, Len(EstBal(I).cObserva) - 8)
                
                xlHoja1.Cells(nFil, 2) = EstBal(I).cDescrip
                xlHoja1.Cells(nFil, 3) = Format(nSaldAnt, "#,###,###.00")
                xlHoja1.Cells(nFil, 4) = Format(nComprMes, "#,###,###.00")
                xlHoja1.Cells(nFil, 5) = Format(nRetMes, "#,###,###.00")
                xlHoja1.Cells(nFil, 6) = Format(nAjusInfla, "#,###,###.00")
                xlHoja1.Cells(nFil, 8) = Format(nSaldFin, "#,###,###.00")
            Else
                nTotal1 = nTotal1 + nSaldAnt
                nTotal2 = nTotal2 + nComprMes
                nTotal3 = nTotal3 + nRetMes
                nTotal4 = nTotal4 + nAjusInfla
                nTotal5 = nTotal5 + nSaldFin
                
                xlHoja1.Cells(nFil, 1) = EstBal(I).cFormula
                xlHoja1.Cells(nFil, 2) = EstBal(I).cDescrip
                xlHoja1.Cells(nFil, 3) = Format(nSaldAnt, "#,###,###.00")
                xlHoja1.Cells(nFil, 4) = Format(nComprMes, "#,###,###.00")
                xlHoja1.Cells(nFil, 5) = Format(nRetMes, "#,###,###.00")
                xlHoja1.Cells(nFil, 6) = Format(nAjusInfla, "#,###,###.00")
                xlHoja1.Cells(nFil, 8) = Format(nSaldFin, "#,###,###.00")
            End If
        End If
    Next I
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 2) = "TOTAL"
    xlHoja1.Cells(nFil, 3) = Format(nTotal1, "#,###,###.00")
    xlHoja1.Cells(nFil, 4) = Format(nTotal2, "#,###,###.00")
    xlHoja1.Cells(nFil, 5) = Format(nTotal3, "#,###,###.00")
    xlHoja1.Cells(nFil, 6) = Format(nTotal4, "#,###,###.00")
    xlHoja1.Cells(nFil, 8) = Format(nTotal5, "#,###,###.00")
    xlHoja1.Range("A" & Trim(Str(nFil)) & ":H" & Trim(Str(nFil))).Font.Bold = True

    'ExcelCuadro xlHoja1, 1, 8, 8, nFil
    'ExcelCuadro xlHoja1, 1, nFilaTempo - 1, 8, nFil
    
    ExcelCuadro xlHoja1, 1, nFilaTempo - 1, 8, CCur(nFil) - 1
    ExcelCuadro xlHoja1, 1, CCur(nFil), 8, CCur(nFil)
            
    
    Set nFormula = Nothing
     
    nFil = nFil + 1
    '''xlHoja1.Cells(nfil, 2) = "Nota.- Deberá consignarse el movimiento trimestral por rubros. Las variaciones que superen los S/. 500,000.00, deberán detallarse individualmente adjunto al anexo." 'marg ers044-2016
    xlHoja1.Cells(nFil, 2) = "Nota.- Deberá consignarse el movimiento trimestral por rubros. Las variaciones que superen los " & gcPEN_SIMBOLO & " 500,000.00, deberán detallarse individualmente adjunto al anexo." 'marg ers044-2016
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 2) = "           1/Incluye transferencias hacia y de la entidad, respectivamente."
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 2) = "           2/Incluye mejoras y otros cambios extraordinarios."
    
    xlHoja1.Range("A" & Trim(Str(nFil - 2)) & ":A" & Trim(Str(nFil))).Font.Size = 7
    
    nFil = nFil + 5
    xlHoja1.Cells(nFil, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(nFil, 3) = "CONTADOR GENERAL"
     
    xlHoja1.Cells(nFil, 6) = "HECHO POR"
    
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 3) = "MATRICULA NRO. ______"
        
    xlHoja1.Range("A8:A" & Trim(Str(nFil))).HorizontalAlignment = xlCenter
    xlHoja1.PageSetup.Orientation = xlLandscape
    
End Sub
 

Private Function ImprimeExcelInmMovEquipCabecera(ByVal pdFecha As String, ByVal nFila As Integer, ByVal nBan As Integer) As Integer
    Dim nCol As Integer
    Dim I As Integer
    Dim nTempo1 As Integer
    Dim nTempo2 As Integer
    
    If nBan = 1 Then
        xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
        xlHoja1.Cells(1, 8) = "ANEXO NRO 18"
        xlHoja1.Cells(2, 1) = UCase(gsNomCmac)
        xlHoja1.Cells(2, 8) = "Código: " & gsCodCMAC
        xlHoja1.Cells(4, 1) = "INMUEBLES MOBILIARIO Y EQUIPO"
        xlHoja1.Cells(5, 1) = "Al " & Format(pdFecha, "Long Date")
        
        '''xlHoja1.Cells(6, 1) = "(EN MILES DE NUEVOS SOLES)" 'marg ers044-2016
        xlHoja1.Cells(6, 1) = "(EN MILES DE " & StrConv(gcPEN_PLURAL, vbUpperCase) & ")" 'marg ers044-2016
        nFila = nFila + 8
        
        xlHoja1.Range("A4:A6").HorizontalAlignment = xlCenter
        
    End If
    
     'nFila = nFila + 1
     nTempo1 = nFila
     xlHoja1.Cells(nFila, 1) = "CODIGO MANUAL DE CONTABILIDAD"
     If nBan = 1 Then
        xlHoja1.Cells(nFila, 2) = "TIPO DE ACTIVO FIJO"
     ElseIf nBan = 2 Then
        xlHoja1.Cells(nFila, 2) = "DEPRECIACION ACUMULADA POR TIPO DE ACTIVO FIJO"
     End If
     
     If nBan = 1 Then
        xlHoja1.Cells(nFila, 3) = "ACTIVO FIJO BRUTO"
     ElseIf nBan = 2 Then
        xlHoja1.Cells(nFila, 3) = "DEPRECIACION ACUMULADA"
     End If
     
     xlHoja1.Range("C" & Trim(Str(nFila)) & ":H" & Trim(Str(nFila))).MergeCells = True
      
     nFila = nFila + 1
     xlHoja1.Cells(nFila, 3) = "SALDO DEL MES ANTERIOR"
     xlHoja1.Cells(nFila, 4) = "COMPRAS DEL MES 1/"
     xlHoja1.Cells(nFila, 5) = "RETIROS O VENTAS DEL MES 1/"
     xlHoja1.Cells(nFila, 6) = "AJUSTE POR INFLACION"
     xlHoja1.Cells(nFila, 7) = "OTROS CAMBIOS 2/"
     xlHoja1.Cells(nFila, 8) = "SALDO DE FIN DE MES"
     nTempo2 = nFila
     
     xlHoja1.Range("A" & Trim(Str(nFila - 1)) & ":A" & Trim(Str(nFila))).MergeCells = True
     xlHoja1.Range("b" & Trim(Str(nFila - 1)) & ":B" & Trim(Str(nFila))).MergeCells = True
     
       'Titulos anchos de Grosor
    xlHoja1.Range("A" & Trim(Str(nFila)) & ":H" & Trim(Str(nFila))).RowHeight = 40
    xlHoja1.Range("A" & Trim(Str(nFila - 1)) & ":H" & Trim(Str(nFila))).WrapText = True
    xlHoja1.Range("A" & Trim(Str(nFila - 1)) & ":H" & Trim(Str(nFila))).HorizontalAlignment = xlCenter
    xlHoja1.Range("A" & Trim(Str(nFila - 1)) & ":H" & Trim(Str(nFila))).VerticalAlignment = xlCenter
    
    'negrita
    xlHoja1.Range("A" & Trim(Str(nFila - 1)) & ":H" & Trim(Str(nFila))).Font.Bold = True
     
     If nBan = 1 Then
          xlHoja1.Cells.Select
          xlHoja1.Cells.Font.Name = "Arial"
          xlHoja1.Cells.Font.Size = 8
           
         'COMBINAR CELDAS
         xlHoja1.Range("A1:B1").MergeCells = True
         xlHoja1.Range("A4:H4").MergeCells = True
         xlHoja1.Range("A5:H5").MergeCells = True
         xlHoja1.Range("A6:H6").MergeCells = True
         
         'ANCHO DE COLUMNAS
         xlHoja1.Range("A1:A1").ColumnWidth = 13
         xlHoja1.Range("B1:B1").ColumnWidth = 54
         
         'Titulo
         xlHoja1.Range("A4:A4").Font.Bold = True
         xlHoja1.Range("A4:A4").Font.Size = 10
    End If
    
    xlHoja1.Range("A" & Trim(Str(nTempo1)) & ":H" & Trim(Str(nTempo2))).Borders.LineStyle = xlContinuous
    
ImprimeExcelInmMovEquipCabecera = nFila
End Function


Public Sub ImprimeAnx24_CTS(ByVal pnBitCentral As Boolean, ByVal lnMes_ As Integer, ByVal lsAnno_ As Integer, ByVal lnTipCambio_ As Currency)
 
 
   Dim CadSql As String
   Dim lbLibroOpen As Boolean
   Dim lsArchivo As String
   Dim lsRuta As String
   
   On Error GoTo Error_GeneraReporte
   
    If Val(lnTipCambio_) = 0 Then
        MsgBox "Ingrese Tipo de Cambio", vbExclamation, "Aviso"
        Exit Sub
    End If
    
   lsRuta = App.path & "\Spooler\"
   lsArchivo = lsRuta & "CompensacionxTiempodeServicios" & Format(gdFecSis & " " & Time, "yyyymmddhhmmss") & gsCodUser & ".xls"
   
    lbLibroOpen = ExcelBegin(lsArchivo, xlAplicacion, xlLibro)
    
   If lbLibroOpen Then
         Set xlHoja1 = xlLibro.Worksheets(1)
         xlHoja1.Name = "ANEXO 24"
         GeneraExcel770240 gsCodAge, pnBitCentral, lnMes_, lsAnno_, lnTipCambio_
         
         ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1
         lbLibroOpen = False
         CargaArchivo lsArchivo, lsRuta
    End If
     MsgBox "Reporte Generado Satisfactoriamente", vbInformation, "¡Aviso!"
    
    Exit Sub
    
Error_GeneraReporte:
    MsgBox TextErr(Err.Description), vbInformation, "Aviso!"
    If lbLibroOpen Then
        ExcelEnd lsArchivo, xlAplicacion, xlLibro, xlHoja1, False
        lbLibroOpen = False
    End If

End Sub
 
 
Private Sub GeneraExcel770240(ByVal gsCodAge As String, ByVal pnBitCentral As Boolean, ByVal nMes As Integer, ByVal nanno As Integer, nTipoCambio As Currency)
    
    Dim rCargaRuta As New ADODB.Recordset
    Dim oCons As DConecta
    Dim sservidorconsolidada As String
    
    Dim dbConec As DConecta
    Dim reg As ADODB.Recordset

    Dim sSql As String
    Dim I As Integer
    Dim nFila As Integer

    Dim dUltimoActual As String
'    Dim dUltimoPasado As String
'    Dim dPrimeroActual As String
    
    dUltimoActual = DateAdd("d", -1, "01/" & IIf(nMes = 12, "01", IIf(Len(Trim(nMes + 1)) = 1, "0" & Trim(Str(nMes + 1)), Trim(Str(nMes + 1))) & "/" & IIf(nMes = 12, Trim(Str(nanno + 1)), Trim(Str(nanno)))))

    Set oCons = New DConecta
    oCons.AbreConexion
    Set rCargaRuta = oCons.CargaRecordSet("select nconssisvalor from constsistema where nconssiscod=" & gConstSistServCentralRiesgos)
    If rCargaRuta.BOF Then
    Else
        sservidorconsolidada = rCargaRuta!nConsSisValor
    End If
    Set rCargaRuta = Nothing
    oCons.CierraConexion

    xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
    xlHoja1.Cells(1, 16) = "ANEXO NRO 24"
    xlHoja1.Cells(2, 1) = gsNomCmac
    xlHoja1.Cells(2, 16) = "Código: " & gsCodCMAC
    xlHoja1.Cells(4, 1) = "COMPENSACION POR TIEMPO DE SERVICIOS CTS"
    xlHoja1.Cells(5, 1) = "Saldos al " & Format(dUltimoActual, "Long Date")
    '''xlHoja1.Cells(6, 1) = "(En miles de Soles)" 'marg ers044-2016
    xlHoja1.Cells(6, 1) = "(En miles de " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'marg ers044-2016
    
    xlHoja1.Cells(8, 1) = "Código Ubicación"
    xlHoja1.Cells(8, 2) = "DEPOSITOS CTS(2)"
    xlHoja1.Cells(8, 5) = "GARANTIAS CTS(3)"
    xlHoja1.Cells(8, 8) = "COLOCACIONES CTS(4)"
    xlHoja1.Cells(8, 11) = "COLOCACIONES CTS POR TIPO DE CREDITO (4)"
    xlHoja1.Cells(8, 15) = "Número"
    xlHoja1.Cells(8, 16) = "Número de"

    xlHoja1.Cells(9, 1) = "Geográfica (1)"
    xlHoja1.Cells(9, 15) = "de"
    xlHoja1.Cells(9, 16) = "empleadores"

    xlHoja1.Cells(10, 1) = "(por Departamento)"
    xlHoja1.Cells(10, 2) = "MN"
    xlHoja1.Cells(10, 3) = "ME"
    xlHoja1.Cells(10, 4) = "TOTAL"

    xlHoja1.Cells(10, 5) = "MN"
    xlHoja1.Cells(10, 6) = "ME"
    xlHoja1.Cells(10, 7) = "TOTAL"

    xlHoja1.Cells(10, 8) = "MN"
    xlHoja1.Cells(10, 9) = "ME"
    xlHoja1.Cells(10, 10) = "TOTAL"

    xlHoja1.Cells(10, 11) = "Medianas empresas, Pequeñas empresas y MES"
    xlHoja1.Range("K9:K10").ColumnWidth = 23
    xlHoja1.Range("K9:K10").WrapText = True

    xlHoja1.Cells(10, 12) = "Hipotecario"
    xlHoja1.Cells(10, 13) = "Consumo"
    xlHoja1.Cells(10, 14) = "Total"

    xlHoja1.Cells(10, 15) = "Titulares"
    xlHoja1.Cells(10, 16) = "depositantes"

    xlHoja1.Range("A1:E1").MergeCells = True
    xlHoja1.Range("A2:E2").MergeCells = True

    xlHoja1.Range("A4:Q4").MergeCells = True
    xlHoja1.Range("A5:Q5").MergeCells = True
    xlHoja1.Range("A6:Q6").MergeCells = True

    xlHoja1.Range("B8:D8").MergeCells = True
    xlHoja1.Range("E8:G8").MergeCells = True
    xlHoja1.Range("H8:J8").MergeCells = True
    xlHoja1.Range("K8:N8").MergeCells = True

    For I = 98 To 110
        xlHoja1.Range(UCase(Chr(I)) & "9:" & UCase(Chr(I)) & "10").MergeCells = True
    Next

    xlHoja1.Range("A1:Q3").HorizontalAlignment = xlLeft
    xlHoja1.Range("A4:Q10").HorizontalAlignment = xlCenter

    xlHoja1.Range("A1:Q10").Font.Bold = True

    nFila = 11

    

    Set dbConec = New DConecta
    dbConec.AbreConexion
    
    sSql = " Select CU.cUbiGeoCod,CU.cUbiGeoDescripcion, "
    sSql = sSql & " DepCTSMN = Sum(Case When X.Tipo=9 and X.Moneda = '1' Then X.Valor else 0 End), "
    sSql = sSql & " DepCTSME = Sum(Case When X.Tipo=9 and X.Moneda = '2' Then X.Valor else 0 End), "
    sSql = sSql & " GarCTSMN = Sum(Case When X.Tipo in (10) and X.Moneda = '1' Then X.Valor else 0 End), "
    sSql = sSql & " GarCTSME = Sum(Case When X.Tipo in (10) and X.Moneda = '2' Then X.Valor else 0 End), "
    sSql = sSql & " ColCTSMN = Sum(Case When X.Tipo in (3,4,5,6,7,8) and X.Moneda = '1' Then X.Valor else 0 End), "
    sSql = sSql & " ColCTSME = Sum(Case When X.Tipo in (3,4,5,6,7,8) and X.Moneda = '2' Then X.Valor else 0 End), "
    sSql = sSql & " ColCTSEmp = Sum(Case When X.Tipo in (3,4,5) Then X.Valor else 0 End), "
    sSql = sSql & " ColCTSHip = Sum(Case When X.Tipo in (8) Then X.Valor else 0 End), "
    sSql = sSql & " ColCTSCon = Sum(Case When X.Tipo in (6,7) Then X.Valor else 0 End), "
    sSql = sSql & " NumTitul = Sum(Case When X.Tipo in (11) Then X.Valor else 0 End), "
    sSql = sSql & " NumEmpDep = Sum(Case When X.Tipo in (12) Then X.Valor else 0 End) "
    sSql = sSql & " From("
    ' DEPOSITOS CTS
    sSql = sSql & "   Select '9' Tipo, A.cUbiGeoSBS cAgeCod,A.cAgeDescripcion, SUBSTRING(cCtaCod,9,1) Moneda, "
    sSql = sSql & "   Valor = Sum(Case When SUBSTRING(cCtaCod,9,1)=1 Then nSaldCntCTS Else nSaldCntCTS * " & nTipoCambio & " End) "
    sSql = sSql & "   From " & sservidorconsolidada & "CTSConsol CS "
    sSql = sSql & "     Inner Join Agencias A On SUBSTRING(cCtaCod,4,2) = A.cAgeCod "
    sSql = sSql & "   Group by A.cAgeDescripcion,A.cUbiGeoSBS, SUBSTRING(cCtaCod,9,1) "
    sSql = sSql & "   Union "
    ' GARANTIAS CTS
    sSql = sSql & "   SELECT '10' as Tipo, A.cUbiGeoSBS cAgeCod, A.cAgeDescripcion, SUBSTRING(CG.cCtaCod,9,1) Moneda, "
    sSql = sSql & "   SUM(CASE WHEN SUBSTRING(CG.cCtaCod,9,1) = 1 THEN G.nMontoRealiz ELSE G.nMontoRealiz * " & nTipoCambio & " END) As Valor "
    sSql = sSql & "   FROM " & sservidorconsolidada & "GarantiasConsol G "
    sSql = sSql & "     INNER JOIN " & sservidorconsolidada & "GarantCredConsol CG ON G.cNumGarant = CG.cNumGarant "
    sSql = sSql & "     INNER JOIN " & sservidorconsolidada & "CreditoConsol P ON P.cCtaCod = CG.cCtaCod "
    sSql = sSql & "     INNER JOIN Agencias A On SUBSTRING(CG.cCtaCod,4,2) = A.cAgeCod "
    sSql = sSql & "   WHERE P.nPrdEstado IN (2020,2021,2022,2030,2031,2032) AND G.nEstado not in (5) and G.nTipoGarant = 9 "
    sSql = sSql & "   GROUP BY A.cUbiGeoSBS, A.cAgeDescripcion, SUBSTRING(CG.cCtaCod,9,1) "
    sSql = sSql & "   Union "
    '  COLOCACIONES CTS
    sSql = sSql & "   Select SUBSTRING(CT.cTpoCredCod,1,1) Tipo, A.cUbiGeoSBS cAgeCod, A.cAgeDescripcion, SUBSTRING(CC.cCtaCod,9,1) Moneda, "
    sSql = sSql & "   Valor = Sum(Case When SUBSTRING(CC.cCtaCod,9,1)=1 Then CC.nSaldoCap Else CC.nSaldoCap * " & nTipoCambio & " end) "
    sSql = sSql & "   From " & sservidorconsolidada & "CreditoConsol CC "
    sSql = sSql & "     Inner Join " & sservidorconsolidada & "CreditoConsolTotal CT On CT.cCtaCod = CC.cCtaCod and CT.cTpoCredCod in ('753')" ','756') "
    sSql = sSql & "     Inner Join Agencias A On CT.cAgeCodAct = A.cAgeCod "
    sSql = sSql & "   WHERE CC.nPrdEstado >= 2020 and CC.nPrdEstado <= 2032  "
    sSql = sSql & "   Group by SUBSTRING(CT.cTpoCredCod,1,1), A.cAgeDescripcion, A.cUbiGeoSBS, SUBSTRING(CC.cCtaCod,9,1) "
    sSql = sSql & "   Union "
    '  NUMERO DE TITULARES
    sSql = sSql & "   Select '11' as Tipo, A.cUbiGeoSBS cAgeCod, A.cAgeDescripcion, '0' Moneda, "
    sSql = sSql & "   Valor = Count(Distinct(CS.cCtaCod)) "
    sSql = sSql & "   From " & sservidorconsolidada & "CTSConsol CS "
    sSql = sSql & "     Inner Join Agencias A On SUBSTRING(CS.cCtaCod,4,2) = A.cAgeCod "
    sSql = sSql & "   Group by A.cAgeDescripcion,A.cUbiGeoSBS, SUBSTRING(CS.cCtaCod,9,1) "
    sSql = sSql & "   Union"
    '  NUMERO DE EMPLEADORES
    sSql = sSql & "   Select '12' as Tipo, A.cUbiGeoSBS cAgeCod, A.cAgeDescripcion, '0' Moneda, "
    sSql = sSql & "   Valor = Count(Distinct(CS.cCodInst)) "
    sSql = sSql & "   From " & sservidorconsolidada & "CTSConsol CS "
    sSql = sSql & "     Inner Join Agencias A On SUBSTRING(CS.cCtaCod,4,2) = A.cAgeCod "
    sSql = sSql & "   Group by A.cAgeDescripcion,A.cUbiGeoSBS, SUBSTRING(CS.cCtaCod,9,1) "
    sSql = sSql & " )X"
    sSql = sSql & " Inner Join UbicacionGeografica CU On SUBSTRING(X.cAgeCod,1,2) = SUBSTRING(CU.cUbiGeoCod,2,2) And Right(CU.cUbiGeoCod,9) = '000000000' "
    sSql = sSql & " Group By CU.cUbiGeoCod, CU.cUbiGeoDescripcion "
    sSql = sSql & " Order By CU.cUbiGeoCod, CU.cUbiGeoDescripcion "
    
    Set reg = dbConec.CargaRecordSet(sSql)
    
    Do While Not reg.EOF
        xlHoja1.Range("A" & nFila).value = reg!cUbiGeoCod
        xlHoja1.Range("B" & nFila).value = reg!DepCTSMN
        xlHoja1.Range("C" & nFila).value = reg!DepCTSME
        xlHoja1.Range("D" & nFila).value = reg!DepCTSMN + reg!DepCTSME
        xlHoja1.Range("E" & nFila).value = reg!GarCTSMN
        xlHoja1.Range("F" & nFila).value = reg!GarCTSME
        xlHoja1.Range("G" & nFila).value = reg!GarCTSMN + reg!GarCTSME
        xlHoja1.Range("H" & nFila).value = reg!ColCTSMN
        xlHoja1.Range("I" & nFila).value = reg!ColCTSME
        xlHoja1.Range("J" & nFila).value = reg!ColCTSMN + reg!ColCTSME
        xlHoja1.Range("K" & nFila).value = reg!ColCTSEmp
        xlHoja1.Range("L" & nFila).value = reg!ColCTSHip
        xlHoja1.Range("M" & nFila).value = reg!ColCTSCon
        xlHoja1.Range("N" & nFila).value = reg!ColCTSEmp + reg!ColCTSHip + reg!ColCTSCon
        xlHoja1.Range("O" & nFila).value = reg!NumTitul
        xlHoja1.Range("P" & nFila).value = reg!NumEmpDep
        xlHoja1.Range("Q" & nFila).value = reg!cUbiGeoDescripcion
        reg.MoveNext
        nFila = nFila + 1
    Loop
    
    For I = 98 To 112
         xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & "11:" & UCase(Chr(I)) & nFila - 1 & ")"
    Next
    
    ExcelCuadro xlHoja1, 1, 8, 1, 10
    ExcelCuadro xlHoja1, 2, 8, 14, 10, , True
    ExcelCuadro xlHoja1, 15, 8, 15, 10
    ExcelCuadro xlHoja1, 16, 8, 16, 10
    'ExcelCuadro xlHoja1, 17, 8, 17, 10

    ExcelCuadro xlHoja1, 1, 11, 16, nFila - 1
    ExcelCuadro xlHoja1, 1, nFila, 16, nFila

    xlHoja1.Range("B10:N" & nFila).NumberFormat = "##,###,##0.00"
    xlHoja1.Range("O10:P" & nFila).NumberFormat = "##,###,##0"

    xlHoja1.Range("A" & nFila & ":Q" & nFila).Font.Bold = True

    nFila = nFila + 2
    xlHoja1.Cells(nFila, 1) = "Periodicidad: Trimestral"
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "Aplicable a: B, F, CM y CR"
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "Instrucciones"
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(1) Consignar el código de Ubicación geográfica correspondiente, según la ubicación de la oficina donde se realiza el depósito CTS a nivel de departamento"
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(2) Se incluirán los saldos de los depósitos CTS contenidos en la cuenta 2103.05"
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(3) Se incluirán los saldos de los depósitos CTS afectados en garantía"
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(4) Se incluirán los saldos de los créditos otorgados con garantía de la CTS"

    For I = nFila - 6 To nFila
        xlHoja1.Range("A" & I & ":Q" & I).MergeCells = True
    Next

    xlHoja1.Range("A" & nFila - 6 & ":A" & nFila).Font.Size = 6
    '**********************FIRMAS
    'Firmas

    nFila = nFila + 2
    'Contador
    xlHoja1.Range("D" & nFila & ":F" & nFila).MergeCells = True
    xlHoja1.Range("D" & nFila + 1 & ":F" & nFila + 1).MergeCells = True
    xlHoja1.Range("D" & nFila + 2 & ":F" & nFila + 2).MergeCells = True

    'Hecho Por
    xlHoja1.Range("H" & nFila & ":J" & nFila).MergeCells = True
    xlHoja1.Range("H" & nFila + 1 & ":J" & nFila + 1).MergeCells = True

    xlHoja1.Cells(nFila + 1, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(nFila + 1, 4) = "CONTADOR GENERAL"
    xlHoja1.Cells(nFila + 1, 8) = "HECHO POR"
    xlHoja1.Cells(nFila + 2, 4) = "MATRICULA NRO.   "

    xlHoja1.Range("A" & nFila & ":K" & nFila + 2).HorizontalAlignment = xlCenter

    With xlHoja1.Range("B" & nFila & ":B" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

    With xlHoja1.Range("D" & nFila & ":F" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

    With xlHoja1.Range("H" & nFila & ":J" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    xlHoja1.Cells.Font.Name = "Arial"
    xlHoja1.Cells.Font.Size = 8


    'xlHoja1.Cells.EntireColumn.AutoFit


'    Dim nFil As Integer
'
'    Dim nTipCambioAnt As Currency
'    Dim nTipCambioAct As Currency
'
'    Dim oTipCambio As nTipoCambio
'    Set oTipCambio = New nTipoCambio
'
'    Dim nFila As Integer
'
'    Dim cAgencia As String
'
'    Dim cArrUbi() As String
'    Dim cArrDes() As String
'    Dim nArrDepoCTS() As Double
'    Dim nArrGaranCTS() As Double
'    Dim nArrColocCTS() As Double
'    Dim nArrColoCTSTipo() As Double
'    Dim nArrNumTit() As Integer
'    Dim nArrNumDep() As Integer
'
'    Dim cArrAgencias(16, 2) As String
'    Dim nCantAgencias As Integer
'    Dim nCantDeptos As Integer
'    Dim cAgenciaTempo As String
'    Dim nDeptoTempo As Integer
'
'    dUltimoActual = DateAdd("d", -1, "01/" & IIf(nMes = 12, "01", IIf(Len(Trim(nMes + 1)) = 1, "0" & Trim(Str(nMes + 1)), Trim(Str(nMes + 1))) & "/" & IIf(nMes = 12, Trim(Str(nanno + 1)), Trim(Str(nanno)))))
'    dPrimeroActual = DateAdd("m", -2, Trim(Trim("01") & Trim(Mid(dUltimoActual, 3, 8))))  'DateAdd("d", -1, "01/" & IIf(Len(Trim(Month(dUltimoActual))) = 1, "0" & Trim(Str(Month(dUltimoActual))), Trim(Str(Month(dUltimoActual)))) & "/" & Trim(Year(dUltimoActual)))
'    dUltimoPasado = DateAdd("d", -1, dPrimeroActual)
'
'    Set oTipCambio = New nTipoCambio
'        nTipCambioAnt = Format(oTipCambio.EmiteTipoCambio(Format(dPrimeroActual, "dd/MM/YYYY"), TCFijoMes), "0.00")
'        nTipCambioAct = Format(oTipCambio.EmiteTipoCambio(Format(DateAdd("d", 1, dUltimoActual), "dd/MM/YYYY"), TCFijoMes), "0.00")
'    Set oTipCambio = Nothing
'
'    Set dbConec = New DConecta
'
'    dbConec.AbreConexion
'
'    'Obtengo los departamentos
'
'    sSql = "Select C2.cUbiGeoDepto, C1.cUbiGeoDescripcion "
'    sSql = sSql & " From "
'    sSql = sSql & " ( select UG.cUbiGeoCod, UG.cUbiGeoDescripcion FROM UbicacionGeografica UG "
'    sSql = sSql & " Where right(UG.cUbiGeoCod,8)='00000000' "
'    sSql = sSql & " ) C1 "
'    sSql = sSql & " Inner Join "
'    sSql = sSql & " ( "
'    sSql = sSql & " select distinct  cUbiGeoDepto=(  SELECT min( CU.cUbiGeoCod) "
'    sSql = sSql & " from ubicaciongeografica CU "
'    sSql = sSql & " Where substring(a.cUbigeoCod, 2, 2) = substring(CU.cUbigeoCod, 2, 2) "
'    sSql = sSql & " and right(CU.cUbiGeoCod,8)='00000000')  FROM Agencias A "
'    sSql = sSql & " ) C2 "
'    sSql = sSql & " ON C1.cUbigeoCod=C2.cUbiGeoDepto "
'
'    Set reg = dbConec.CargaRecordSet(sSql)
'    If reg.BOF Then
'        MsgBox "No existen Departamentos registrados ", vbInformation, "Aviso"
'        Exit Sub
'    Else
'        nCantDeptos = 0
'
'        ReDim Preserve cArrUbi(reg.RecordCount - 1) As String
'        ReDim Preserve cArrDes(reg.RecordCount - 1) As String
'        ReDim Preserve nArrDepoCTS(reg.RecordCount - 1, 2) As Double
'        ReDim Preserve nArrGaranCTS(reg.RecordCount - 1, 2) As Double
'        ReDim Preserve nArrColocCTS(reg.RecordCount - 1, 2) As Double
'        ReDim Preserve nArrColoCTSTipo(reg.RecordCount - 1, 4) As Double
'        ReDim Preserve nArrNumTit(reg.RecordCount - 1) As Integer
'        ReDim Preserve nArrNumDep(reg.RecordCount - 1) As Integer
'
'        Do While Not reg.EOF
'            cArrUbi(nCantDeptos) = reg!cUbiGeoDepto
'            cArrDes(nCantDeptos) = Trim(reg!cUbiGeoDescripcion)
'            nCantDeptos = nCantDeptos + 1
'            reg.MoveNext
'        Loop
'
'    End If
'
'    reg.Close
'    Set reg = Nothing
'
'    'Obtengo las equivalencias
'
'    sSql = "select A.cAgeCod, A.cUbiGeoCod, "
'    sSql = sSql & " cUbiGeoDepto=( "
'    sSql = sSql & " SELECT isnull(min( CU.cUbiGeoCod),0) from ubicaciongeografica CU "
'    sSql = sSql & " Where substring(a.cUbiGeoCod, 2, 2) = substring(CU.cUbiGeoCod, 2, 2) "
'    sSql = sSql & " And right(CU.cUbiGeoCod,8)='00000000')"
'    sSql = sSql & " FROM Agencias A "
'    sSql = sSql & " Order by cagecod"
'
'    Set reg = dbConec.CargaRecordSet(sSql)
'
'        nCantAgencias = 0
'
'        Do While Not reg.EOF
'            cArrAgencias(nCantAgencias, 1) = reg!cAgecod
'            cArrAgencias(nCantAgencias, 2) = reg!cUbiGeoDepto
'            nCantAgencias = nCantAgencias + 1
'            reg.MoveNext
'        Loop
'
'    reg.Close
'    Set reg = Nothing
'
'    Set oCons = New DConecta
'    oCons.AbreConexion
'    Set rCargaRuta = oCons.CargaRecordSet("select nconssisvalor from constsistema where nconssiscod=" & gConstSistServCentralRiesgos)
'    If rCargaRuta.BOF Then
'    Else
'        sservidorconsolidada = rCargaRuta!nConsSisValor
'    End If
'    Set rCargaRuta = Nothing
'    oCons.CierraConexion
'
'    'A.- COLOCACIONES
'
'    'Obtengo los saldos actuales de colocaciones
'
'    '***** By BRGO Modificado por Basilea II
'    If pnBitCentral = True Then
'        'Centralizado
'        sSql = "select CCT.cAgeCodAct as cAgencia, SUBSTRING(CSC.cCtaCod, 9, 1) as nMoneda, "
'        sSql = sSql & " substring(CCT.cTpoCredCod,1,1) as cTipCred, SUM(CSC.nSaldoCap) As nSaldo "
'        sSql = sSql & " FROM " & sservidorconsolidada & "CreditoSaldoConsol CSC "
'        sSql = sSql & " INNER JOIN " & sservidorconsolidada & "CreditoConsolTotal CCT ON CSC.cCtaCod = CCT.cCtaCod "
'        sSql = sSql & " WHERE (CSC.nPrdEstado IN ('" & gColocEstVigNorm & "', '" & gColocEstVigVenc & "', '" & gColocEstVigMor & "', '" & gColocEstRefNorm & "', '" & gColocEstRefVenc & "', '" & gColocEstRefMor & "')) "
'        sSql = sSql & " AND (SUBSTRING(CSC.cCtaCod, 9, 1) IN ('1', '2')) "
'        sSql = sSql & " AND (CONVERT(VARCHAR(8), CSC.dFecha, 112)='" & Format(dUltimoActual, "YYYYMMdd") & "') "
'        sSql = sSql & " AND (CCT.cTpoCredCod in ('753','756'))"
'        sSql = sSql & " GROUP BY CCT.cAgeCodAct, substring(CCT.cTpoCredCod,1,1), SUBSTRING(CSC.cCtaCod, 9, 1) "
'        sSql = sSql & " ORDER BY CCT.cAgeCodAct, substring(CCT.cTpoCredCod,1,1), SUBSTRING(CSC.cCtaCod, 9, 1) "
'    Else
'        'Distribuido
'        sSql = "select substring(CSC.cCodCta,1,2) as cAgencia, SUBSTRING(CSC.cCodCta, 6, 1) as nMoneda, "
'        sSql = sSql & " substring(CSC.cCodCta,3,1) as cTipCred, SUM(CSC.nSaldoCap) As nSaldo "
'        sSql = sSql & " FROM dbo.CreditoSaldoConsol CSC "
'        sSql = sSql & " WHERE (CSC.cEstado ='F') "
'        sSql = sSql & " AND (SUBSTRING(CSC.cCodCta, 6, 1) IN ('1', '2')) "
'        sSql = sSql & " AND (CONVERT(VARCHAR(8), CSC.dFecha, 112)='" & Format(dUltimoActual, "YYYYMMdd") & "') "
'        sSql = sSql & " AND (SUBSTRING(CSC.cCodCta,3,3)='303') "
'        sSql = sSql & " GROUP BY substring(CSC.cCodCta,1,2), substring(CSC.cCodCta,3,1), SUBSTRING(CSC.cCodCta, 6, 1) "
'        sSql = sSql & " ORDER BY substring(CSC.cCodCta,1,2), substring(CSC.cCodCta,3,1),SUBSTRING(CSC.cCodCta, 6, 1) "
'    End If
'    '**** End By
'
'    Set reg = dbConec.CargaRecordSet(sSql)
'    Do While Not reg.EOF
'
'        For i = 0 To nCantAgencias - 1
'            If reg!cAgencia = cArrAgencias(i, 1) Then
'                cAgenciaTempo = cArrAgencias(i, 2)
'                Exit For
'            End If
'        Next
'
'        For i = 0 To nCantDeptos - 1
'            If cAgenciaTempo = cArrUbi(i) Then
'                nDeptoTempo = i
'                Exit For
'            End If
'        Next
'
'        'ndeptotempo es el i
'        If reg!nMoneda = 1 Then 'nacional
'            nArrColocCTS(nDeptoTempo, 1) = nArrColocCTS(nDeptoTempo, 1) + reg!nSaldo
'            If reg!cTipCred = "3" Or reg!cTipCred = "4" Or reg!cTipCred = "5" Then
'                nArrColoCTSTipo(nDeptoTempo, 1) = nArrColoCTSTipo(nDeptoTempo, 1) + reg!nSaldo
'            ElseIf reg!cTipCred = "6" Or reg!cTipCred = "7" Then
'                nArrColoCTSTipo(nDeptoTempo, 3) = nArrColoCTSTipo(nDeptoTempo, 3) + reg!nSaldo
'            ElseIf reg!cTipCred = "8" Then
'                nArrColoCTSTipo(nDeptoTempo, 2) = nArrColoCTSTipo(nDeptoTempo, 2) + reg!nSaldo
''            ElseIf reg!cTipCred = "4" Then
''                nArrColoCTSTipo(nDeptoTempo, 3) = nArrColoCTSTipo(nDeptoTempo, 3) + reg!nSaldo
'            End If
'        ElseIf reg!nMoneda = 2 Then
'            nArrColocCTS(nDeptoTempo, 2) = nArrColocCTS(nDeptoTempo, 2) + (reg!nSaldo * nTipoCambio)
'            If reg!cTipCred = "3" Or reg!cTipCred = "4" Or reg!cTipCred = "5" Then
'                nArrColoCTSTipo(nDeptoTempo, 1) = nArrColoCTSTipo(nDeptoTempo, 1) + (reg!nSaldo * nTipoCambio)
'            ElseIf reg!cTipCred = "6" Or reg!cTipCred = "7" Then
'                nArrColoCTSTipo(nDeptoTempo, 3) = nArrColoCTSTipo(nDeptoTempo, 3) + (reg!nSaldo * nTipoCambio)
'            ElseIf reg!cTipCred = "8" Then
'                nArrColoCTSTipo(nDeptoTempo, 2) = nArrColoCTSTipo(nDeptoTempo, 2) + (reg!nSaldo * nTipoCambio)
''            ElseIf reg!cTipCred = "4" Then
''                nArrColoCTSTipo(nDeptoTempo, 3) = nArrColoCTSTipo(nDeptoTempo, 3) + (reg!nSaldo * nTipoCambio)
'            End If
'        End If
'
'        reg.MoveNext
'    Loop
'    reg.Close
'    Set reg = Nothing
'
'    'B.- DEPOSITOS CTS
'
'    'Obtengo los saldos actuales
'    If pnBitCentral = True Then
'
'        sSql = " select substring(cctacod,4,2) as cAgencia, substring(cctacod,9,1) as nMoneda,"
'        sSql = sSql & " sum( nsaldcnt) as  nSaldo"
'        sSql = sSql & " From capsaldosdiarios"
'        sSql = sSql & " Where convert(varchar(10), dfecha,112)='" & Format(dUltimoActual, "yyyymmdd") & "'"
'        sSql = sSql & " AND substring(cctacod,6,3)='" & Producto.gCapCTS & "' and ntpobloqueo not in (3,15)"
'        sSql = sSql & " GROUP BY substring(cctacod,4,2), substring(cctacod,9,1)"
'        sSql = sSql & " ORDER BY substring(cctacod,4,2), substring(cctacod,9,1)"
'
'
'    Else
'        'Distribuido
'        sSql = " Select right(ccodage,2) as cAgencia, cMoneda as nMoneda, SUM(nSaldoCTS + nMonChqVal) as nSaldo "
'        sSql = sSql & " From estaddiacts "
'        sSql = sSql & " where convert(varchar(10), destadCTS,112) ='" & Format(dUltimoActual, "yyyymmdd") & "' "
'        sSql = sSql & " GROUP BY right(ccodage,2), cMoneda "
'        sSql = sSql & " ORDER BY right(ccodage,2), cMoneda "
'
'    End If
'
'    Set reg = dbConec.CargaRecordSet(sSql)
'
'    Do While Not reg.EOF
'        For i = 0 To nCantAgencias - 1
'            If reg!cAgencia = cArrAgencias(i, 1) Then
'                cAgenciaTempo = cArrAgencias(i, 2)
'                Exit For
'            End If
'        Next
'
'        For i = 0 To nCantDeptos - 1
'            If cAgenciaTempo = cArrUbi(i) Then
'                nDeptoTempo = i
'                Exit For
'            End If
'        Next
'
'        'ndeptotempo es el i
'        If reg!nMoneda = 1 Then 'nacional
'            nArrDepoCTS(nDeptoTempo, 1) = nArrDepoCTS(nDeptoTempo, 1) + reg!nSaldo
'
'        ElseIf reg!nMoneda = 2 Then
'            nArrDepoCTS(nDeptoTempo, 2) = nArrDepoCTS(nDeptoTempo, 2) + (reg!nSaldo * nTipoCambio)
'        End If
'
'        reg.MoveNext
'    Loop
'
'    reg.Close
'    Set reg = Nothing
'
'    'Totales de Empleadores
'
'    If pnBitCentral = True Then
'        sSql = " select substring(cs.cctacod,4,2) as cAgencia,  "
'        sSql = sSql & " count(distinct cs.cctacod) as nCantTit,  "
'        'sSql = sSql & " sum (case when ct.ccodinst='1089800000272' then 1 else 0 end) as nCantEmp "
'        sSql = sSql & " COUNT(DISTINCT ct.ccodinst)as nCantEmp "
'        sSql = sSql & " From capsaldosdiarios cs "
'        sSql = sSql & " join captaccts ct on  ct.cctacod=cs.cctacod "
'        sSql = sSql & " Where convert(varchar(10), cs.dfecha,112)='" & Format(dUltimoActual, "yyyymmdd") & "' AND substring(cs.cctacod,6,3)='234' "
'        sSql = sSql & " and ntpobloqueo not in (3,15) "
'        sSql = sSql & " group by substring(cs.cctacod,4,2) "
'
'            Set reg = dbConec.CargaRecordSet(sSql)
'
'            Do While Not reg.EOF
'                For j = 0 To nCantAgencias - 1
'                    If reg!cAgencia = cArrAgencias(j, 1) Then
'                        cAgenciaTempo = cArrAgencias(j, 2)
'                        Exit For
'                    End If
'                Next
'
'                For j = 0 To nCantDeptos - 1
'                    If cAgenciaTempo = cArrUbi(j) Then
'                        nDeptoTempo = j
'                        Exit For
'                    End If
'                Next
'
'                'ndeptotempo es el i
'                nArrNumTit(nDeptoTempo) = nArrNumTit(nDeptoTempo) + reg!nCantTit
'                nArrNumDep(nDeptoTempo) = nArrNumDep(nDeptoTempo) + reg!nCantEmp
'
'                reg.MoveNext
'            Loop
'
'    Else
'
'        sSql = "select substring(ccodcta,1,2) as cAgencia,  count(distinct ccodcta) as nCantTit, count(distinct ccodinst) as nCantEmp "
'        sSql = sSql & " From DBConsolidada..ctsconsol"
'        sSql = sSql & " where cestctacts not in ('c','u') and substring(ccodcta,6,1) IN ('1', '2') "
'        sSql = sSql & " group by substring(ccodcta,1,2)"
'
'        Set reg = dbConec.CargaRecordSet(sSql)
'
'            Do While Not reg.EOF
'                For j = 0 To nCantAgencias - 1
'                    If reg!cAgencia = cArrAgencias(j, 1) Then
'                        cAgenciaTempo = cArrAgencias(j, 2)
'                        Exit For
'                    End If
'                Next
'
'                For j = 0 To nCantDeptos - 1
'                    If cAgenciaTempo = cArrUbi(j) Then
'                        nDeptoTempo = j
'                        Exit For
'                    End If
'                Next
'
'                'ndeptotempo es el i
'                nArrNumTit(nDeptoTempo) = nArrNumTit(nDeptoTempo) + reg!nCantTit
'                nArrNumDep(nDeptoTempo) = nArrNumDep(nDeptoTempo) + reg!nCantEmp
'
'                reg.MoveNext
'            Loop
'
'    End If
'
'     '''''''''''''''
'    'C.- GARANTIAS
'    '''''''''''''''
'
'    If pnBitCentral = True Then
'
'        sSql = " select substring(cs.cctacod,4,2) as cAgencia, substring(cs.cctacod,9,1) as nMoneda, "
'        sSql = sSql & " ISNULL(sum(case when substring(CS.cctacod,9,1)=1 then nsaldcnt else nsaldcnt*" & nTipoCambio & "  end),0) as  nSaldo "
'        sSql = sSql & " From capsaldosdiarios cs "
'        sSql = sSql & " join captaccts ct on  ct.cctacod=cs.cctacod "
'        sSql = sSql & " Where convert(varchar(10), cs.dfecha,112)='" & Format(dUltimoActual, "yyyymmdd") & "' AND substring(cs.cctacod,6,3)='234' "
'        sSql = sSql & " and ntpobloqueo  in (3,15) "
'        sSql = sSql & " group by Substring(cs.cctacod,4,2), substring(cs.cctacod,9,1) "
'
'        Set reg = dbConec.CargaRecordSet(sSql)
'
'            Do While Not reg.EOF
'                For j = 0 To nCantAgencias - 1
'                    If reg!cAgencia = cArrAgencias(j, 1) Then
'                        cAgenciaTempo = cArrAgencias(j, 2)
'                        Exit For
'                    End If
'                Next
'
'                For j = 0 To nCantDeptos - 1
'                    If cAgenciaTempo = cArrUbi(j) Then
'                        nDeptoTempo = j
'                        Exit For
'                    End If
'                Next
'
'                'ndeptotempo es el i
'                If reg!nMoneda = 1 Then 'nacional
'                    nArrGaranCTS(nDeptoTempo, 1) = nArrGaranCTS(nDeptoTempo, 1) + reg!nSaldo
'
'                ElseIf reg!nMoneda = 2 Then
'                    nArrGaranCTS(nDeptoTempo, 2) = nArrGaranCTS(nDeptoTempo, 2) + reg!nSaldo
'
'                End If
'                reg.MoveNext
'            Loop
'
'    Else
'        'Distribuido
'
'            dbConec.AbreConexion
'
'            sSql = " select Substring(cctacontcod, 17,2) as cAgencia, substring(cctacontcod,3,1) as nMoneda, "
'            sSql = sSql & " ISNULL(SUM(nctasaldoimporte), 0) As nSaldo "
'            sSql = sSql & " From dbcmactaux..ctasaldo cs "
'            sSql = sSql & " Where ( cctacontcod like '84[12]40901010303%' or cctacontcod like '84[12]40101010303%')"
'            sSql = sSql & " And dctasaldofecha = (select max(dctasaldofecha) from ctasaldo "
'            sSql = sSql & " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoActual, "YYYYmmdd") & "'))"
'            sSql = sSql & " And (len(cctacontcod)=18)"
'            sSql = sSql & " Group by substring(cctacontcod, 17,2), substring(cctacontcod,3,1) "
'            sSql = sSql & " Order By Substring(cctacontcod, 17,2), substring(cctacontcod,3,1) "
'
'            Set reg = dbConec.CargaRecordSet(sSql)
'
'            Do While Not reg.EOF
'                For j = 0 To nCantAgencias - 1
'                    If reg!cAgencia = cArrAgencias(j, 1) Then
'                        cAgenciaTempo = cArrAgencias(j, 2)
'                        Exit For
'                    End If
'                Next
'
'                For j = 0 To nCantDeptos - 1
'                    If cAgenciaTempo = cArrUbi(j) Then
'                        nDeptoTempo = j
'                        Exit For
'                    End If
'                Next
'
'                'ndeptotempo es el i
'                If reg!nMoneda = 1 Then 'nacional
'                    nArrGaranCTS(nDeptoTempo, 1) = nArrGaranCTS(nDeptoTempo, 1) + reg!nSaldo
'
'                ElseIf reg!nMoneda = 2 Then
'                    nArrGaranCTS(nDeptoTempo, 2) = nArrGaranCTS(nDeptoTempo, 2) + reg!nSaldo
'
'                End If
'                reg.MoveNext
'            Loop
'    End If
'
'
'    xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
'    xlHoja1.Cells(1, 16) = "ANEXO NRO 24"
'    xlHoja1.Cells(2, 1) = gsNomCmac
'    xlHoja1.Cells(2, 16) = "Código: " & gsCodCMAC
'    xlHoja1.Cells(4, 1) = "COMPENSACION POR TIEMPO DE SERVICIOS CTS"
'    xlHoja1.Cells(5, 1) = "Saldos al " & Format(dUltimoActual, "Long Date")
'    xlHoja1.Cells(6, 1) = "(En miles de Nuevos Soles)"
'
'    xlHoja1.Cells(8, 1) = "Código Ubicación"
'    xlHoja1.Cells(8, 2) = "DEPOSITOS CTS(2)"
'    xlHoja1.Cells(8, 5) = "GARANTIAS CTS(3)"
'    xlHoja1.Cells(8, 8) = "COLOCACIONES CTS(4)"
'    xlHoja1.Cells(8, 11) = "COLOCACIONES CTS POR TIPO DE CREDITO (4)"
'    xlHoja1.Cells(8, 15) = "Número"
'    xlHoja1.Cells(8, 16) = "Número de"
'
'    xlHoja1.Cells(9, 1) = "Geográfica (1)"
'    xlHoja1.Cells(9, 15) = "de"
'    xlHoja1.Cells(9, 16) = "empleadores"
'
'    xlHoja1.Cells(10, 1) = "(por Departamento)"
'    xlHoja1.Cells(10, 2) = "MN"
'    xlHoja1.Cells(10, 3) = "ME"
'    xlHoja1.Cells(10, 4) = "TOTAL"
'
'    xlHoja1.Cells(10, 5) = "MN"
'    xlHoja1.Cells(10, 6) = "ME"
'    xlHoja1.Cells(10, 7) = "TOTAL"
'
'    xlHoja1.Cells(10, 8) = "MN"
'    xlHoja1.Cells(10, 9) = "ME"
'    xlHoja1.Cells(10, 10) = "TOTAL"
'
'    xlHoja1.Cells(10, 11) = "Medianas empresas, Pequeñas empresas y MES"
'    xlHoja1.Range("K9:K10").ColumnWidth = 23
'    xlHoja1.Range("K9:K10").WrapText = True
'
'    xlHoja1.Cells(10, 12) = "Hipotecario"
'    xlHoja1.Cells(10, 13) = "Consumo"
'    xlHoja1.Cells(10, 14) = "Total"
'
'    xlHoja1.Cells(10, 15) = "Titulares"
'    xlHoja1.Cells(10, 16) = "depositantes"
'
'    xlHoja1.Range("A1:E1").MergeCells = True
'    xlHoja1.Range("A2:E2").MergeCells = True
'
'    xlHoja1.Range("A4:Q4").MergeCells = True
'    xlHoja1.Range("A5:Q5").MergeCells = True
'    xlHoja1.Range("A6:Q6").MergeCells = True
'
'    xlHoja1.Range("B8:D8").MergeCells = True
'    xlHoja1.Range("E8:G8").MergeCells = True
'    xlHoja1.Range("H8:J8").MergeCells = True
'    xlHoja1.Range("K8:N8").MergeCells = True
'
'    For i = 98 To 110
'        xlHoja1.Range(UCase(Chr(i)) & "9:" & UCase(Chr(i)) & "10").MergeCells = True
'    Next
'
'    xlHoja1.Range("A1:Q3").HorizontalAlignment = xlLeft
'    xlHoja1.Range("A4:Q10").HorizontalAlignment = xlCenter
'
'    xlHoja1.Range("A1:Q10").Font.Bold = True
'
'    nFila = 10
'
'    For i = 0 To nCantDeptos - 1
'        nFila = nFila + 1
'        xlHoja1.Cells(nFila, 1) = "'" & cArrUbi(i)
'        xlHoja1.Cells(nFila, 2) = nArrDepoCTS(i, 1)
'        xlHoja1.Cells(nFila, 3) = nArrDepoCTS(i, 2)
'
'        xlHoja1.Range("D" & nFila & ":D" & nFila).Formula = "=+B" & nFila & "+C" & nFila
'
'        xlHoja1.Cells(nFila, 5) = nArrGaranCTS(i, 1)
'        xlHoja1.Cells(nFila, 6) = nArrGaranCTS(i, 2)
'
'        xlHoja1.Range("G" & nFila & ":G" & nFila).Formula = "=+E" & nFila & "+F" & nFila
'
'        xlHoja1.Cells(nFila, 8) = nArrColocCTS(i, 1)
'        xlHoja1.Cells(nFila, 9) = nArrColocCTS(i, 2)
'
'        xlHoja1.Range("J" & nFila & ":J" & nFila).Formula = "=+H" & nFila & "+I" & nFila
'
'        xlHoja1.Cells(nFila, 11) = nArrColoCTSTipo(i, 1)
'        xlHoja1.Cells(nFila, 12) = nArrColoCTSTipo(i, 2)
'        xlHoja1.Cells(nFila, 13) = nArrColoCTSTipo(i, 3)
'        'xlHoja1.Cells(nFila, 14) = nArrColoCTSTipo(i, 4)
'
'        xlHoja1.Range("N" & nFila & ":N" & nFila).Formula = "=+K" & nFila & "+L" & nFila & "+M" & nFila '& "+N" & nFila
'
'        xlHoja1.Cells(nFila, 15) = nArrNumTit(i)
'        xlHoja1.Cells(nFila, 16) = nArrNumDep(i)
'
'        xlHoja1.Cells(nFila, 17) = cArrDes(i)
'
'    Next
'
'    nFila = nFila + 1
'
'    xlHoja1.Cells(nFila, 1) = "TOTAL"
'
'    For i = 98 To 112
'         xlHoja1.Range(UCase(Chr(i)) & nFila & ":" & UCase(Chr(i)) & nFila).Formula = "=SUM(" & UCase(Chr(i)) & "11:" & UCase(Chr(i)) & nFila - 1 & ")"
'    Next
'
'    ExcelCuadro xlHoja1, 1, 8, 1, 10
'    ExcelCuadro xlHoja1, 2, 8, 14, 10, , True
'    ExcelCuadro xlHoja1, 15, 8, 15, 10
'    ExcelCuadro xlHoja1, 16, 8, 16, 10
'    'ExcelCuadro xlHoja1, 17, 8, 17, 10
'
'    ExcelCuadro xlHoja1, 1, 11, 16, nFila - 1
'    ExcelCuadro xlHoja1, 1, nFila, 16, nFila
'
'    xlHoja1.Range("B10:N" & nFila).NumberFormat = "##,###,##0.00"
'    xlHoja1.Range("O10:P" & nFila).NumberFormat = "##,###,##0"
'
'    xlHoja1.Range("A" & nFila & ":Q" & nFila).Font.Bold = True
'
'    nFila = nFila + 2
'    xlHoja1.Cells(nFila, 1) = "Periodicidad: Trimestral"
'    nFila = nFila + 1
'    xlHoja1.Cells(nFila, 1) = "Aplicable a: B, F, CM y CR"
'    nFila = nFila + 1
'    xlHoja1.Cells(nFila, 1) = "Instrucciones"
'    nFila = nFila + 1
'    xlHoja1.Cells(nFila, 1) = "(1) Consignar el código de Ubicación geográfica correspondiente, según la ubicación de la oficina donde se realiza el depósito CTS a nivel de departamento"
'    nFila = nFila + 1
'    xlHoja1.Cells(nFila, 1) = "(2) Se incluirán los saldos de los depósitos CTS contenidos en la cuenta 2103.05"
'    nFila = nFila + 1
'    xlHoja1.Cells(nFila, 1) = "(3) Se incluirán los saldos de los depósitos CTS afectados en garantía"
'    nFila = nFila + 1
'    xlHoja1.Cells(nFila, 1) = "(4) Se incluirán los saldos de los créditos otorgados con garantía de la CTS"
'
'    For i = nFila - 6 To nFila
'        xlHoja1.Range("A" & i & ":Q" & i).MergeCells = True
'    Next
'
'    xlHoja1.Range("A" & nFila - 6 & ":A" & nFila).Font.Size = 6
'
'
'    '**********************FIRMAS
'    'Firmas
'
'    nFila = nFila + 3
'    'Contador
'    xlHoja1.Range("D" & nFila & ":F" & nFila).MergeCells = True
'    xlHoja1.Range("D" & nFila + 1 & ":F" & nFila + 1).MergeCells = True
'    xlHoja1.Range("D" & nFila + 2 & ":F" & nFila + 2).MergeCells = True
'
'    'Hecho Por
'    xlHoja1.Range("H" & nFila & ":J" & nFila).MergeCells = True
'    xlHoja1.Range("H" & nFila + 1 & ":J" & nFila + 1).MergeCells = True
'
'    xlHoja1.Cells(nFila + 1, 2) = "GERENTE GENERAL"
'    xlHoja1.Cells(nFila + 1, 4) = "CONTADOR GENERAL"
'    xlHoja1.Cells(nFila + 1, 8) = "HECHO POR"
'    xlHoja1.Cells(nFila + 2, 4) = "MATRICULA NRO.   "
'
'    xlHoja1.Range("A" & nFila & ":K" & nFila + 2).HorizontalAlignment = xlCenter
'
'    With xlHoja1.Range("B" & nFila & ":B" & nFila).Borders(xlEdgeBottom)
'        .LineStyle = xlContinuous
'        .Weight = xlThin
'        .ColorIndex = xlAutomatic
'    End With
'
'    With xlHoja1.Range("D" & nFila & ":F" & nFila).Borders(xlEdgeBottom)
'        .LineStyle = xlContinuous
'        .Weight = xlThin
'        .ColorIndex = xlAutomatic
'    End With
'
'    With xlHoja1.Range("H" & nFila & ":J" & nFila).Borders(xlEdgeBottom)
'        .LineStyle = xlContinuous
'        .Weight = xlThin
'        .ColorIndex = xlAutomatic
'    End With
'
'
'    '*****************************
'
'
'    xlHoja1.Cells.Font.Name = "Arial"
'    xlHoja1.Cells.Font.Size = 8
'    'xlHoja1.Cells.EntireColumn.AutoFit
'
'
End Sub

 
Private Sub GeneraExcel770240Antiguo(ByVal gsCodAge As String, ByVal pnBitCentral As Boolean, ByVal nMes As Integer, ByVal nanno As Integer, nTipoCambio As Currency)
    
    Dim sservidorconsolidada As String
    Dim matArreglo(7, 3)
    Dim dUltimoActual As String
    Dim dUltimoPasado As String
    Dim dPrimeroActual As String
    
    Dim dbConec As DConecta
    Dim reg As ADODB.Recordset
    Dim rCargaRuta As ADODB.Recordset
    Dim sSql As String
    Dim I As Integer
    Dim j As Integer
    Dim k As Integer
    Dim lsCad As String
    
    Dim nFil As Integer
    
    Dim nTipCambioAnt As Currency
    Dim nTipCambioAct As Currency
    
    Dim oTipCambio As nTipoCambio
    
    Set oTipCambio = New nTipoCambio

    dUltimoActual = DateAdd("d", -1, "01/" & IIf(nMes = 12, "01", IIf(Len(Trim(nMes + 1)) = 1, "0" & Trim(Str(nMes + 1)), Trim(Str(nMes + 1))) & "/" & IIf(nMes = 12, Trim(Str(nanno + 1)), Trim(Str(nanno)))))
    dPrimeroActual = DateAdd("m", -2, Trim(Trim("01") & Trim(Mid(dUltimoActual, 3, 8))))  'DateAdd("d", -1, "01/" & IIf(Len(Trim(Month(dUltimoActual))) = 1, "0" & Trim(Str(Month(dUltimoActual))), Trim(Str(Month(dUltimoActual)))) & "/" & Trim(Year(dUltimoActual)))
    dUltimoPasado = DateAdd("d", -1, dPrimeroActual)

    Set oTipCambio = New nTipoCambio
        nTipCambioAnt = Format(oTipCambio.EmiteTipoCambio(Format(dPrimeroActual, "dd/MM/YYYY"), TCFijoMes), "0.00")
        nTipCambioAct = Format(oTipCambio.EmiteTipoCambio(Format(DateAdd("d", 1, dUltimoActual), "dd/MM/YYYY"), TCFijoMes), "0.00")
    Set oTipCambio = Nothing

    Set dbConec = New DConecta
    
    If Not dbConec.AbreConexion Then 'Remota(gsCodAge, True, , "03")
        Exit Sub
    End If
    
    '''''''''''''''''
    'A.- COLOCACIONES
    ''''''''''''''''''
     'Obtengo los saldos antiguos de colocaciones
     
    If pnBitCentral = True Then
       'Centralizado
        sSql = " SELECT SUBSTRING(CCT.cLineaCred, 5, 1) AS nMoneda, SUBSTRING(CCT.cLineaCred, 6, 1) AS nPlazo, " & _
                " SUM(CSC.nSaldoCap * CASE WHEN SUBSTRING(CCT.cLineaCred, 5, 1) = '1' THEN 1 ELSE " & nTipCambioAnt & " END) AS nSaldo " & _
                " FROM dbo.CreditoSaldoConsol CSC INNER JOIN dbo.CreditoConsolTotal CCT ON CSC.cCtaCod = CCT.cCtaCod " & _
                " WHERE (CSC.nPrdEstado IN ('" & gColocEstVigNorm & "', '" & gColocEstVigVenc & "', '" & gColocEstVigMor & "', '" & gColocEstRefNorm & "', '" & gColocEstRefVenc & "', '" & gColocEstRefMor & "')) " & _
                " AND (SUBSTRING(CCT.cLineaCred, 5, 1) IN ('1', '2')) " & _
                " AND (SUBSTRING(CCT.cLineaCred, 6, 1) IN ('1', '2')) " & _
                " AND (CONVERT(VARCHAR(8), CSC.dFecha, 112)='" & Format(dUltimoPasado, "YYYYMMdd") & "') " & _
                " AND (SUBSTRING(CCT.CLineaCred, 7, 3) = '" & Producto.gColConsCTS & "') " & _
                " GROUP BY SUBSTRING(CCT.cLineaCred, 5, 1), SUBSTRING(CCT.cLineaCred, 6, 1) "
                
    Else
    
        ' Uno
        ' ===
    
        'Distribuido
        sSql = " SELECT SUBSTRING(CCT.cCodLinCred, 4, 1) AS nMoneda, SUBSTRING(CCT.cCodLinCred, 5, 1) AS nPlazo, " & _
                " SUM(CSC.nSaldoCap * CASE WHEN SUBSTRING(CCT.cCodLinCred, 4, 1) = '1' THEN 1 ELSE " & nTipCambioAnt & " END) AS nSaldo " & _
                " FROM dbo.CreditoSaldoConsol CSC INNER JOIN dbo.CreditoConsolTotal CCT ON CSC.cCodCta = CCT.cCodCta " & _
                " WHERE (CSC.cEstado ='F') " & _
                " AND (SUBSTRING(CCT.cCodLinCred, 4, 1) IN ('1', '2')) " & _
                " AND (SUBSTRING(CCT.cCodLinCred, 5, 1) IN ('1', '2')) " & _
                " AND (CONVERT(VARCHAR(8), CSC.dFecha, 112)='" & Format(dUltimoPasado, "YYYYMMdd") & "') " & _
                " AND (SUBSTRING(CCT.cCodLinCred,1,3)='303') " & _
                " GROUP BY SUBSTRING(CCT.cCodLinCred, 4, 1), SUBSTRING(CCT.cCodLinCred, 5, 1) "

    End If
   
    Set reg = dbConec.CargaRecordSet(sSql)
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            If Val(reg!nPlazo) = gColocLineaCredPlazoCorto Then 'Corto Plazo
                matArreglo(0, 0) = reg!nSaldo
            ElseIf Val(reg!nPlazo) = gColocLineaCredPlazoLargo Then  'Largo Plazo
                matArreglo(0, 1) = reg!nSaldo
            End If
        Else
            If Val(reg!nPlazo) = gColocLineaCredPlazoCorto Then 'Corto Plazo
                matArreglo(4, 0) = reg!nSaldo
            ElseIf Val(reg!nPlazo) = gColocLineaCredPlazoLargo Then  'Largo Plazo
                matArreglo(4, 1) = reg!nSaldo
            End If
        End If
        reg.MoveNext
    Loop
    reg.Close
    Set reg = Nothing

    'Obtengo los saldos actuales de colocaciones
    If pnBitCentral = True Then
        'Centralizado
        sSql = " SELECT SUBSTRING(CCT.cLineaCred, 5, 1) AS nMoneda, SUBSTRING(CCT.cLineaCred, 6, 1) AS nPlazo, " & _
                " SUM(CSC.nSaldoCap * CASE WHEN SUBSTRING(CCT.cLineaCred, 5, 1) = '1' THEN 1 ELSE " & nTipCambioAct & " END) AS nSaldo " & _
                " FROM dbo.CreditoSaldoConsol CSC INNER JOIN dbo.CreditoConsolTotal CCT ON CSC.cCtaCod = CCT.cCtaCod " & _
                " WHERE (CSC.nPrdEstado IN ('" & gColocEstVigNorm & "', '" & gColocEstVigVenc & "', '" & gColocEstVigMor & "', '" & gColocEstRefNorm & "', '" & gColocEstRefVenc & "', '" & gColocEstRefMor & "')) " & _
                " AND (SUBSTRING(CCT.cLineaCred, 5, 1) IN ('1', '2')) " & _
                " AND (SUBSTRING(CCT.cLineaCred, 6, 1) IN ('1', '2')) " & _
                " AND (CONVERT(VARCHAR(8), CSC.dFecha, 112)='" & Format(dUltimoActual, "YYYYMMdd") & "') " & _
                " AND (SUBSTRING(CCT.CLineaCred, 7, 3) = '" & Producto.gColConsCTS & "') " & _
                " GROUP BY SUBSTRING(CCT.cLineaCred, 5, 1), SUBSTRING(CCT.cLineaCred, 6, 1) "

    Else
    
        ' Dos
        ' ===
        
        'Distribuido
        sSql = " SELECT SUBSTRING(CCT.cCodLinCred, 4, 1) AS nMoneda, SUBSTRING(CCT.cCodLinCred, 5, 1) AS nPlazo, " & _
                " SUM(CSC.nSaldoCap * CASE WHEN SUBSTRING(CCT.cCodLinCred, 4, 1) = '1' THEN 1 ELSE " & nTipCambioAct & " END) AS nSaldo " & _
                " FROM dbo.CreditoSaldoConsol CSC INNER JOIN dbo.CreditoConsolTotal CCT ON CSC.cCodCta = CCT.cCodCta " & _
                " WHERE (CSC.cEstado ='F') " & _
                " AND (SUBSTRING(CCT.cCodLinCred, 4, 1) IN ('1', '2')) " & _
                " AND (SUBSTRING(CCT.cCodLinCred, 5, 1) IN ('1', '2')) " & _
                " AND (CONVERT(VARCHAR(8), CSC.dFecha, 112)='" & Format(dUltimoActual, "YYYYMMdd") & "') " & _
                " AND (SUBSTRING(CCT.cCodLinCred,1,3)='303') " & _
                " GROUP BY SUBSTRING(CCT.cCodLinCred, 4, 1), SUBSTRING(CCT.cCodLinCred, 5, 1) "

    End If
    Set reg = dbConec.CargaRecordSet(sSql)
    Do While Not reg.EOF
        If reg!nMoneda = gMonedaNacional Then
            If Val(reg!nPlazo) = gColocLineaCredPlazoCorto Then 'Corto Plazo
                matArreglo(3, 0) = reg!nSaldo
            ElseIf Val(reg!nPlazo) = gColocLineaCredPlazoLargo Then  'Largo Plazo
                matArreglo(3, 1) = reg!nSaldo
            End If
        Else
            If Val(reg!nPlazo) = gColocLineaCredPlazoCorto Then 'Corto Plazo
                matArreglo(7, 0) = reg!nSaldo
            ElseIf Val(reg!nPlazo) = gColocLineaCredPlazoLargo Then  'Largo Plazo
                matArreglo(7, 1) = reg!nSaldo
            End If
        End If
        reg.MoveNext
    Loop
    reg.Close
    Set reg = Nothing
    
    'Obtengo las aperturas de cuentas nuevas
    If pnBitCentral = True Then
        
        'Centralizado
        sSql = " SELECT SUBSTRING(CC.cLineaCred, 5, 1) AS nMoneda, SUBSTRING(CC.cLineaCred, 6, 1) AS nPlazo, " & _
              " SUM(cc.nMontoApr * CASE WHEN SUBSTRING(CC.cLineaCred, 5, 1) = '1' THEN 1 ELSE " & nTipCambioAct & " END) AS nMonto " & _
              " FROM dbo.CreditoConsol CC " & _
              " WHERE (CC.nPrdEstado IN ('" & gColocEstVigNorm & "', '" & gColocEstVigVenc & "', '" & gColocEstVigMor & "', '" & gColocEstRefNorm & "', '" & gColocEstRefVenc & "', '" & gColocEstRefMor & "')) " & _
              " AND (SUBSTRING(CC.cLineaCred, 5, 1) IN ('1', '2')) AND (SUBSTRING(CC.cLineaCred, 6, 1) " & _
              " IN ('1', '2')) " & _
              " AND (CONVERT(VARCHAR(8), CC.dFecVig, 112) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
              " AND (SUBSTRING(CC.CLineaCred, 7, 3) = '" & Producto.gColConsCTS & "') " & _
              " GROUP BY SUBSTRING(CC.cLineaCred, 5, 1), SUBSTRING(CC.cLineaCred, 6, 1) "
    
    Else
        ' Tres
        ' ====
        
        'Distribuido
        sSql = " SELECT SUBSTRING(CC.cCodLinCred, 4, 1) AS nMoneda, SUBSTRING(CC.cCodLinCred, 5, 1) AS nPlazo, " & _
              " SUM(cc.nMontoApr * CASE WHEN SUBSTRING(CC.cCodLinCred, 4, 1) = '1' THEN 1 ELSE " & nTipCambioAct & " END) AS nMonto " & _
              " FROM dbo.CreditoConsol CC " & _
              " WHERE (CC.cEstado ='F') " & _
              " AND (SUBSTRING(CC.cCodLinCred, 4, 1) IN ('1', '2')) AND (SUBSTRING(CC.cCodLinCred, 5, 1) " & _
              " IN ('1', '2')) " & _
              " AND (CONVERT(VARCHAR(8), CC.dFecVig, 112) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
              " AND (SUBSTRING(CC.cCodLinCred,1,3)='303') " & _
              " GROUP BY SUBSTRING(CC.cCodLinCred, 4, 1), SUBSTRING(CC.cCodLinCred, 5, 1) "
    
    End If
    
    Set reg = dbConec.CargaRecordSet(sSql)
    Do While Not reg.EOF
        If reg!nMoneda = gMonedaNacional Then
            If reg!nPlazo = gColocLineaCredPlazoCorto Then 'Corto Plazo
                matArreglo(1, 0) = reg!nMonto
            ElseIf reg!nPlazo = gColocLineaCredPlazoLargo Then  'Largo Plazo
                matArreglo(1, 1) = reg!nMonto
            End If
        Else
            If reg!nPlazo = gColocLineaCredPlazoCorto Then 'Corto Plazo
                matArreglo(5, 0) = reg!nMonto
            ElseIf reg!nPlazo = gColocLineaCredPlazoLargo Then  'Largo Plazo
                matArreglo(5, 1) = reg!nMonto
            End If
        End If
        reg.MoveNext
    Loop
    reg.Close
    Set reg = Nothing
          
    'Obtengo las cancelaciones de cuentas
    'Corto Plazo
    matArreglo(2, 0) = matArreglo(0, 0) + matArreglo(1, 0) - matArreglo(3, 0)
    matArreglo(6, 0) = matArreglo(4, 0) + matArreglo(5, 0) - matArreglo(7, 0)
    
    'Largo Plazo
    matArreglo(2, 1) = matArreglo(0, 1) + matArreglo(1, 1) - matArreglo(3, 1)
    matArreglo(6, 1) = matArreglo(4, 1) + matArreglo(5, 1) - matArreglo(7, 1)
    
    ''''''''''''''''''
    'B.- DEPOSITOS CTS
    ''''''''''''''''''
    'Obtengo los saldos antiguos
     
    If pnBitCentral = True Then
        'Centralizado
        sSql = "SELECT   nMoneda, SUM(nSaldo * case when nmoneda=1 then 1 else " & nTipCambioAnt & " end) AS nSaldo From dbo.CapEstadSaldo " & _
               " WHERE (nProducto =234) AND (CONVERT(VARCHAR(8), dEstad,112) = '" & Format(dUltimoPasado, "yyyymmdd") & "')" & _
               " GROUP BY nMoneda  "
        '303
        dbConec.CierraConexion
        dbConec.AbreConexion
        Set reg = dbConec.CargaRecordSet(sSql)
        
    Else
        'Distribuido
        sSql = " SELECT cMoneda as nMoneda, SUM((nSaldoCTS + nMonChqVal) * case when cmoneda='1' then 1 else " & nTipCambioAnt & " end) AS nSaldo " & _
              " From ESTADDIACTS " & _
              " where convert(varchar(10), destadCTS,112) ='" & Format(dUltimoPasado, "yyyymmdd") & "' " & _
              " GROUP BY cMoneda "

        Set reg = dbConec.CargaRecordSet(sSql)
    End If
    
    
    
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            matArreglo(0, 2) = reg!nSaldo
        ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
            matArreglo(4, 2) = reg!nSaldo
        End If
        reg.MoveNext
    Loop
    
    reg.Close
    Set reg = Nothing
      
    'Obtengo los saldos actuales
    If pnBitCentral = True Then
    
        '303
        sSql = "SELECT   nMoneda, SUM(nSaldo * case when nmoneda=1 then 1 else " & nTipCambioAct & " end) AS nSaldo From dbo.CapEstadSaldo " & _
               " WHERE (nProducto = 234) AND (CONVERT(VARCHAR(8), dEstad,112) = '" & Format(dUltimoActual, "YYYYmmdd") & "')" & _
               " GROUP BY nMoneda  "
         
    Else
        ' CINCO
        ' =====
        'Distribuido
        sSql = " SELECT cMoneda as nMoneda, SUM((nSaldoCTS + nMonChqVal) * case when cmoneda='1' then 1 else " & nTipCambioAct & " end) AS nSaldo " & _
              " From ESTADDIACTS " & _
              " where convert(varchar(10), destadCTS,112) ='" & Format(dUltimoActual, "yyyymmdd") & "' " & _
              " GROUP BY cMoneda "
      
    End If
    
    Set reg = dbConec.CargaRecordSet(sSql)
    
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            matArreglo(3, 2) = reg!nSaldo '866
        ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
            matArreglo(7, 2) = reg!nSaldo '1000
        End If
        reg.MoveNext
    Loop

    reg.Close
    Set reg = Nothing
 
    'Obtengo los Ingresos y Egresos de Depósitos
    
    If pnBitCentral = True Then
        'Centralizado
              sSql = " SELECT SUBSTRING(MC.cCtaCod, 9, 1) AS nMoneda, SUM((MC.nSaldoContable)* case When substring(cCtaCod,9,1)='1' then 1 else " & nTipCambioAct & " end) as nMonto " & _
             " FROM dbo.Mov M INNER JOIN dbo.MovCap MC ON M.nMovNro = MC.nMovNro " & _
             " WHERE (M.cOpeCod LIKE '220[1-2]%') " & _
             " AND (CONVERT(varchar(8), SUBSTRING(M.cMovNro, 1, 8), 112) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
             " AND (SUBSTRING(MC.cCtaCod, 3, 3) = '234') " & _
             " GROUP BY SUBSTRING(MC.cCtaCod, 9, 1) "
    Else
        'Distribuido (LULA)
        sSql = " select substring(ccodcta,6,1) as nMoneda, sum((nSaldCnt)* case When substring(ccodcta,6,1)='1' then 1 else " & nTipCambioAct & " end) as nMonto from transahoconsol " & _
               " where ccodope like '220[1-2]%' " & _
               " and convert(varchar(8), dfectran,112) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "' AND '" & Format(dUltimoActual, "yyyymmdd") & "' " & _
               " and substring(ccodcta,3,3) = '234' group by substring(ccodcta,6,1) "
        
    End If

    Set reg = dbConec.CargaRecordSet(sSql)
    
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            matArreglo(1, 2) = reg!nMonto
            'matArreglo(2, 2) = reg!nRetiros
        ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
            matArreglo(5, 2) = reg!nMonto
            'matArreglo(6, 2) = reg!nRetiros
        End If
        reg.MoveNext
    Loop
         
    reg.Close
    Set reg = Nothing
    
    'Calculo los retiros por diferencia
    
    If pnBitCentral = True Then
    
    Else
        matArreglo(2, 2) = matArreglo(0, 2) + matArreglo(1, 2) - matArreglo(3, 2)
        matArreglo(6, 2) = matArreglo(4, 2) + matArreglo(5, 2) - matArreglo(7, 2)
        
    End If
    
    
    '''''''''''''''
    'C.- GARANTIAS
    '''''''''''''''
    
    If pnBitCentral = True Then
    
        'Calcular los saldos antiguos
         
        'Centralizado
        sSql = " select substring(cctacontcod,3,1) as nMoneda, ISNULL(sum(nctasaldoimporte),0) as nMonto " & _
                " from ctasaldo cs " & _
                " Where (cCtacontcod like '84[12]40901010303%' or cCtacontcod like '84[12]40101010303%') " & _
                " and dctasaldofecha = (select max(dctasaldofecha) from ctasaldo " & _
                " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoPasado, "yyyyMMdd") & "')) " & _
                " group by substring(cctacontcod,3,1) "
        
        ''dbConec.CierraConexion
        'If Not dbConec.AbreConexionRemota(gsCodAge, True, , "03") Then
        '    Exit Sub
        'End If
 
    Else
        'Distribuido
        sSql = " select substring(cctacontcod,3,1) as nMoneda, ISNULL(sum(nctasaldoimporte),0) as nMonto " & _
                " from ctasaldo cs " & _
                " Where (cCtacontcod like '84[12]40901010303%' or cCtacontcod like '84[12]40101010303%') " & _
                " and dctasaldofecha = (select max(dctasaldofecha) from ctasaldo " & _
                " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoPasado, "yyyyMMdd") & "')) " & _
                " group by substring(cctacontcod,3,1) "
         dbConec.CierraConexion
        dbConec.AbreConexion
    End If
     
     
    Set reg = dbConec.CargaRecordSet(sSql)
    
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            matArreglo(0, 3) = reg!nMonto '86377
        ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
            matArreglo(4, 3) = reg!nMonto '3776
        End If
        reg.MoveNext
    Loop
         
    reg.Close
    Set reg = Nothing
    
    'Saldo Actual
    
    If pnBitCentral = True Then
        
        'Centralizado
        sSql = " select substring(cctacontcod,3,1) as nMoneda, ISNULL(sum(nctasaldoimporte),0) as nMonto " & _
             " from ctasaldo cs " & _
             " Where ( cctacontcod like '84[12]40901010303%' or cctacontcod like '84[12]40101010303%') " & _
             " and dctasaldofecha = (select max(dctasaldofecha) from ctasaldo " & _
             " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoActual, "YYYYmmdd") & "')) " & _
             " group by substring(cctacontcod,3,1) "
    Else
        'Distribuido
        sSql = " select substring(cctacontcod,3,1) as nMoneda, ISNULL(sum(nctasaldoimporte),0) as nMonto " & _
             " from ctasaldo cs " & _
             " Where ( cctacontcod like '84[12]40901010303%' or cctacontcod like '84[12]40101010303%') " & _
             " and dctasaldofecha = (select max(dctasaldofecha) from ctasaldo " & _
             " where cctacontcod = cs.cctacontcod and (CONVERT(varchar(8), dCtaSaldoFecha, 112)<='" & Format(dUltimoActual, "YYYYmmdd") & "')) " & _
             " group by substring(cctacontcod,3,1) "
 
    End If
    
    
    Set reg = dbConec.CargaRecordSet(sSql)
    
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            matArreglo(3, 3) = reg!nMonto '20281
        ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
            matArreglo(7, 3) = reg!nMonto '
        End If
        reg.MoveNext
    Loop
         
    reg.Close
    Set reg = Nothing
           
    If pnBitCentral = True Then
    
        'Centralizado
        sSql = " SELECT 1 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0) * -1 AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('1')) " & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte < 0) " & _
               " AND ((cctacontcod like '84[1]40901010303%' or cctacontcod like '84[12]40101010303%')) " & _
               " Union All " & _
               " SELECT 2 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0)*-1 AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('2'))" & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte< 0) " & _
               " AND ((cctacontcod like '84[2]40901010303%' or cctacontcod like '84[2]40101010303%'))"
         
    Else
        'Distribuido
        sSql = " SELECT 1 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0) * -1 AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('1')) " & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte < 0) " & _
               " AND ((cctacontcod like '84[1]40901010303%' or cctacontcod like '84[12]40101010303%')) " & _
               " Union All " & _
               " SELECT 2 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0)*-1 AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('2'))" & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte< 0) " & _
               " AND ((cctacontcod like '84[2]40901010303%' or cctacontcod like '84[2]40101010303%'))"
 
    End If
    
    Set reg = dbConec.CargaRecordSet(sSql)
    
    Do While Not reg.EOF
        If Val(reg!nMoneda) = gMonedaNacional Then
            matArreglo(1, 3) = reg!nMonto
        ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
            matArreglo(5, 3) = reg!nMonto
        End If
        reg.MoveNext
    Loop
         
    reg.Close
    Set reg = Nothing
     
    
    If pnBitCentral = True Then
        'Centralizado
            sSql = " SELECT 1 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('1')) " & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte > 0) " & _
               " AND ((cctacontcod like '84[1]40901010303%' or cctacontcod like '84[1]40101010303%')) " & _
               " Union All " & _
               " SELECT 2 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('2')) " & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte > 0) " & _
               " AND ((cctacontcod like '84[2]40901010303%' or cCtacontcod like '84[2]40101010303%')) "
        
    Else
        'Distribuido
        sSql = " SELECT 1 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('1')) " & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte > 0) " & _
               " AND ((cctacontcod like '84[1]40901010303%' or cctacontcod like '84[1]40101010303%')) " & _
               " Union All " & _
               " SELECT 2 as nMoneda, ISNULL(SUM(dbo.MovCta.nMovImporte),0) AS nMonto " & _
               " FROM dbo.MovCta INNER JOIN dbo.Mov ON dbo.MovCta.nMovNro = dbo.Mov.nMovNro " & _
               " WHERE (SUBSTRING(dbo.MovCta.cCtaContCod, 3, 1) IN ('2')) " & _
               " AND (SUBSTRING(dbo.Mov.cMovNro, 1, 8) BETWEEN '" & Format(dPrimeroActual, "yyyymmdd") & "'AND '" & Format(dUltimoActual, "yyyymmdd") & "') " & _
               " AND (dbo.Mov.nMovEstado =10) " & _
               " AND (dbo.Mov.nMovFlag IN(0,2,3)) " & _
               " AND (dbo.MovCta.nMovImporte > 0) " & _
               " AND ((cctacontcod like '84[2]40901010303%' or cCtacontcod like '84[2]40101010303%')) "
        
        
    End If
    
    Set reg = dbConec.CargaRecordSet(sSql)
    
        Do While Not reg.EOF
            If Val(reg!nMoneda) = gMonedaNacional Then
                matArreglo(2, 3) = reg!nMonto
            ElseIf Val(reg!nMoneda) = gMonedaExtranjera Then
                matArreglo(6, 3) = reg!nMonto
            End If
            reg.MoveNext
        Loop
             
        reg.Close
        Set reg = Nothing
        
      
    'Aproximo a miles de soles
    
    For I = 0 To 7
        For j = 0 To 3
            matArreglo(I, j) = Format(matArreglo(I, j) / 1000, "0")
        Next
    Next
           
    xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
    xlHoja1.Cells(1, 6) = "ANEXO NRO 24"
    xlHoja1.Cells(2, 1) = gsNomCmac
    xlHoja1.Cells(2, 6) = "Código: " & gsCodCMAC
    xlHoja1.Cells(4, 1) = "COMPENSACION POR TIEMPO DE SERVICIOS CTS"
    xlHoja1.Cells(5, 1) = "Saldos al " & Format(dUltimoActual, "Long Date")
    '''xlHoja1.Cells(6, 1) = "(En miles de Nuevos Soles)" 'MARG ERS044-2016
    xlHoja1.Cells(6, 1) = "(En miles de " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'MARG ERS044-2016
    
    xlHoja1.Cells(8, 1) = "CODIGO"
    xlHoja1.Cells(9, 1) = "S.B.S."
    xlHoja1.Cells(8, 2) = "DETALLE"
    xlHoja1.Cells(8, 3) = "COLOCACIONES"
    xlHoja1.Cells(9, 3) = "'(1)"
    xlHoja1.Cells(8, 5) = "DEPOSITOS"
    xlHoja1.Cells(9, 5) = "'CTS (2)"
    xlHoja1.Cells(8, 6) = "GARANTIAS"
    xlHoja1.Cells(9, 6) = "'(3)"
    
    xlHoja1.Cells(10, 3) = "CORTO PLAZO"
    xlHoja1.Cells(10, 4) = "LARGO PLAZO"
    
    xlHoja1.Cells(11, 2) = "MONEDA NACIONAL"
    xlHoja1.Cells(12, 2) = "Saldo Anterior"
    xlHoja1.Cells(13, 2) = "Mas: Cuentas Nuevas"
    xlHoja1.Cells(14, 2) = "Menos: Cuentas Canceladas y/o Amortizac. o Retiros"
    xlHoja1.Cells(15, 2) = "Saldo Actual"
     
    xlHoja1.Cells(16, 2) = "MONEDA EXTRANJERA"
    xlHoja1.Cells(17, 2) = "Saldo Anterior"
    xlHoja1.Cells(18, 2) = "Mas: Cuentas Nuevas"
    xlHoja1.Cells(19, 2) = "Menos: Cuentas Canceladas y/o Amortizac. o Retiros"
    xlHoja1.Cells(20, 2) = "Saldo Actual"
     
    xlHoja1.Cells(21, 2) = "SALDO TOTAL M.N. Y M.E."
     
     
    
    For k = 12 To 15
        For j = 3 To 6
            xlHoja1.Cells(k, j) = Format(matArreglo(k - 12, j - 3), "###,###,###.00")
        Next
    Next
    
 

    For k = 17 To 20
        For j = 3 To 6
            xlHoja1.Cells(k, j) = Format(matArreglo(k - 13, j - 3), "###,###,###.00")
        Next
    Next

    'Obtengo el saldo total en moneda nacional y extranjera
    'Corto Plazo
    xlHoja1.Cells(21, 3) = Format(Val(matArreglo(3, 0)) + Val((matArreglo(7, 0))), "0")
    'Largo Plazo
    xlHoja1.Cells(21, 4) = Format(Val(matArreglo(3, 1)) + Val((matArreglo(7, 1))), "0")
    'Depositos CTS
    xlHoja1.Cells(21, 5) = Format(Val(matArreglo(3, 2)) + Val((matArreglo(7, 2))), "0")
    'Garantias
    xlHoja1.Cells(21, 6) = Format(Val(matArreglo(3, 3)) + Val((matArreglo(7, 3))), "0")
    
    
    nFil = 20
    
    nFil = nFil + 5
    
    xlHoja1.Cells(nFil, 1) = "Periodicidad: Trimestral"
    nFil = nFil + 1
    
    xlHoja1.Cells(nFil, 1) = "Aplicable a B, F, CM; y CR."
    
    nFil = nFil + 3
    
    xlHoja1.Cells(nFil, 1) = "Instrucciones"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "(1)    Se incluirán los saldos de los Créditos otorgados con garantías de la CTS"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "(2)    Se incluirán los saldos de los Depósitos de la CTS contenidos en la Cuenta 2103.05"
    nFil = nFil + 1
    xlHoja1.Cells(nFil, 1) = "(3)    Se incluirán los saldos de los Depósitos de la CTS afectados en garantía"
    
    nFil = nFil + 3
     
    xlHoja1.Cells(nFil, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(nFil, 3) = "CONTADOR CPC NRO."
    xlHoja1.Cells(nFil, 6) = "HECHO POR"
    
    'COMBINAR CELDAS
    xlHoja1.Range("A1:D1").MergeCells = True
    xlHoja1.Range("A2:C2").MergeCells = True
    xlHoja1.Range("A2:C2").MergeCells = True
    xlHoja1.Range("A4:F4").MergeCells = True
    xlHoja1.Range("A5:F5").MergeCells = True
    xlHoja1.Range("A6:F6").MergeCells = True
    xlHoja1.Range("C8:D8").MergeCells = True
    xlHoja1.Range("C9:D9").MergeCells = True
    xlHoja1.Range("C35:D35").MergeCells = True
    
    'TAMAÑO DE COLUMNAS
    xlHoja1.Range("B1:B1").ColumnWidth = 42
    xlHoja1.Range("C1:C1").ColumnWidth = 12
    xlHoja1.Range("D1:D1").ColumnWidth = 12
    
    'CUADROS
    ExcelCuadro xlHoja1, 1, 8, 6, 10
    ExcelCuadro xlHoja1, 1, 11, 6, 23
    xlHoja1.Range("C10:D10").Borders.LineStyle = xlContinuous
     
    'ALINEACION
    xlHoja1.Range("A4:F10").HorizontalAlignment = xlCenter
    
    'Tipo de letra de todo el reporte
    xlHoja1.Cells.Select
    xlHoja1.Cells.Font.Name = "Arial"
    xlHoja1.Cells.Font.Size = 9
    
    'Tipos de Letra formateados
    xlHoja1.Range("F1:F1").Font.Size = 8
    xlHoja1.Range("A25:F32").Font.Size = 8
    xlHoja1.Range("A4:A4").Font.Size = 11
    xlHoja1.Range("A1:F10").Font.Bold = True
    
    xlHoja1.Range("A4:A4").Font.Underline = True
    xlHoja1.Range("A29:A29").Font.Underline = True
    
    
    'Monedas
    xlHoja1.Range("B11:B11").Font.Bold = True
    xlHoja1.Range("B11:B11").Font.Underline = True
    xlHoja1.Range("B16:B16").Font.Bold = True
    xlHoja1.Range("B16:B16").Font.Underline = True
    xlHoja1.Range("B21:B21").Font.Bold = True
    xlHoja1.Range("B21:B21").Font.Underline = True
  
End Sub
  
Public Sub ImprimeAnx11(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal dfecha As Date, ByVal sLstage As ListBox, ByVal ntxtTipCamFijAnt1 As Double, ByVal ntxtTipCamFij1 As Double, ByVal ntxtTipCamCompraSBS1 As Double, ByVal ntxtTipCamVentaSBS1 As Double)

    Dim I As Integer
    Dim lsCadena As String
    Dim lsCadCon As String
    Dim lsCad As String
    
    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
      
    lsCadena = ""
    For I = 0 To sLstage.ListCount - 1
        If sLstage.Selected(I) Then
            If Right(sLstage.List(I), 5) = "ONSOL" Then
                lsCadena = lsCadena & GetAnx11MovimientoMontoNumero(pnbitcentral_, dfecha, ntxtTipCamFijAnt1, ntxtTipCamFij1, ntxtTipCamCompraSBS1, ntxtTipCamVentaSBS1, True)
            Else
                lsCadena = lsCadena & GetAnx11MovimientoMontoNumero(pnbitcentral_, dfecha, ntxtTipCamFijAnt1, ntxtTipCamFij1, ntxtTipCamCompraSBS1, ntxtTipCamVentaSBS1, False, Right(sLstage.List(I), 5)) & oImpresora.gPrnSaltoPagina
            
            End If
        End If
    Next I
     
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If

End Sub

Public Function GetAnx11MovimientoMontoNumero(ByVal pnbitcentral_ As Boolean, ByVal dfecha As Date, _
            ByVal nTxtTipCamFijAnt As Double, ntxtTipCamFij As Double, ByVal ntxtTipCamCompraSBS As Double, ByVal ntxtTipCamVentaSBS As Double, _
            ByVal bConsol As Boolean, Optional sCodAge As String = "", _
            Optional sNomAge As String = "") As String

    Dim lsNombreAge As String
    
    Dim lsFechaIni As String
    Dim lsFechaFin As String
    Dim lsFechaAnt As String
   
    Dim ldFechaIni As Date
    Dim ldFechaFin As Date
    Dim ldFechaAnt As Date
    
    Dim lsMes As String
    Dim lsDia As String
    Dim lsAño As String

    Dim lsNumAho As String * 11
    Dim lsMonAho As String * 17
    Dim lsNumPF As String * 11
    Dim lsMonPF As String * 17
    Dim lsNumT As String * 11
    Dim lsMonT As String * 17
    
    Dim oCap As nCapDefinicion
    Dim oConConsol As DConecta
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ''VARIABLES PARA EL CALCULO
''* Proceso de Calculo previo a la Generacion del Reporte
    Dim lnNumCueVigAhoSol As Long
    Dim lnNumCueVigPFSol As Long
    Dim lnMonCueVigAhoSol As Currency
    Dim lnMonCueVigPFSol As Currency
    
    Dim lnNumCueNueAhoSol As Long
    Dim lnNumCueNuePFSol As Long
    Dim lnMonCueNueAhoSol As Currency
    Dim lnMonCueNuePFSol As Currency
    
    Dim lnNumCueAbonoAhoSol As Long
    Dim lnMonCueAbonoAhoSol As Currency
    Dim lnNumCueAbonoPFSol As Long
    Dim lnMonCueAbonoPFSol As Currency
    
    Dim lnMonCueIntCapAhoSol As Currency
    Dim lnMonCueIntCapPFSol As Currency
    
    Dim lnNumCueCanAhoSol As Long
    Dim lnMonCueCanAhoSol As Currency
    Dim lnNumCueCanPFSol As Long
    Dim lnMonCueCanPFSol As Currency
    
    Dim lnNumCueRetAhoSol As Long
    Dim lnMonCueRetAhoSol As Currency
    Dim lnNumCueRetPFSol As Long
    Dim lnMonCueRetPFSol As Currency
    
    Dim lnTotCueVigAhoSol As Long
    Dim lnTotCueVigPFSol As Long
    Dim lnMonTotCueVigAhoSol As Currency
    Dim lnMonTotCueVigPFSol As Currency
    
    Dim lnNumCueVigAhoDol As Long
    Dim lnNumCueVigPFDol As Long
    Dim lnMonCueVigAhoDol As Currency
    Dim lnMonCueVigPFDol As Currency
    
    Dim lnNumCueNueAhoDol As Long
    Dim lnNumCueNuePFDol As Long
    Dim lnMonCueNueAhoDol As Currency
    Dim lnMonCueNuePFDol As Currency
    
    Dim lnNumCueAbonoAhoDol As Long
    Dim lnMonCueAbonoAhoDol As Currency
    Dim lnNumCueAbonoPFDol As Long
    Dim lnMonCueAbonoPFDol As Currency
    
    Dim lnMonCueIntCapAhoDol As Currency
    Dim lnMonCueIntCapPFDol As Currency
    
    Dim lnNumCueCanAhoDol As Long
    Dim lnMonCueCanAhoDol As Currency
    Dim lnNumCueCanPFDol As Long
    Dim lnMonCueCanPFDol As Currency
    
    Dim lnNumCueRetAhoDol As Long
    Dim lnMonCueRetAhoDol As Currency
    Dim lnNumCueRetPFDol As Long
    Dim lnMonCueRetPFDol As Currency
    
    Dim lnTotCueVigAhoDol As Long
    Dim lnTotCueVigPFDol As Long
    Dim lnMonTotCueVigAhoDol As Currency
    Dim lnMonTotCueVigPFDol As Currency
    
    Dim lnMonTotCueVigAhoDolVVV As Currency
    Dim lnMonTotCueVigPFDolVVV As Currency

    Dim lnMax As Integer
    
    sCodAge = Trim(sCodAge)
    
    lnMax = 5
    
    If bConsol Then
        lsNombreAge = "CONSOLIDADO"
    Else
        If sNomAge <> "" Then
        Else
            sNomAge = GetNombreAgencia(Right(sCodAge, 2))
        End If
        lsNombreAge = sNomAge
    End If
    
    lsMes = Mid(Trim(dfecha), 4, 2)
    lsDia = "01"
    lsAño = Mid(Trim(dfecha), 7, 4)
    
    ldFechaIni = CDate(lsDia & "/" & lsMes & "/" & lsAño)
    ldFechaAnt = DateAdd("d", -1, ldFechaIni)
    
    ' Ojooooooooooooooo
        ' En el centralizado se quita un dia por que en la clase lo suma
        ' En el distribuido no se quita nada
    
        If gbBitCentral = True Then
            ldFechaFin = DateAdd("d", -1, DateAdd("m", 1, ldFechaIni))
        Else
            ldFechaFin = DateAdd("m", 1, ldFechaIni)
        End If
    
    ' Ojooooooooooooooo
    
    lsFechaIni = Format(ldFechaIni, "mm/dd/yyyy")
    lsFechaFin = Format(ldFechaFin, "mm/dd/yyyy")
    lsFechaAnt = Format(ldFechaAnt, "mm/dd/yyyy")
    
    If pnbitcentral_ = True Then
        ''Calculo Soles
        
        Set oCap = New nCapDefinicion
  
        lnNumCueVigAhoSol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaNacional, gCapAhorros, lnMonCueVigAhoSol, bConsol, sCodAge)
        lnNumCueVigPFSol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaNacional, gCapPlazoFijo, lnMonCueVigPFSol, bConsol, sCodAge)
        
        lnNumCueNueAhoSol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueNueAhoSol, bConsol, sCodAge)
        lnNumCueNuePFSol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueNuePFSol, bConsol, sCodAge)
        
        lnNumCueAbonoAhoSol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueAbonoAhoSol, bConsol, sCodAge)
        lnNumCueAbonoPFSol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueAbonoPFSol, bConsol, sCodAge)
        
        lnMonCueIntCapAhoSol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, bConsol, sCodAge)
        lnMonCueIntCapPFSol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, bConsol, sCodAge)
        
        lnNumCueCanAhoSol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueCanAhoSol, bConsol, sCodAge) * -1
        lnNumCueCanPFSol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueCanPFSol, bConsol, sCodAge) * -1
        
        lnNumCueRetAhoSol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueRetAhoSol, bConsol, sCodAge)
        lnNumCueRetPFSol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueRetPFSol, bConsol, sCodAge)
        
        lnTotCueVigAhoSol = lnNumCueVigAhoSol + lnNumCueNueAhoSol + lnNumCueCanAhoSol
        lnTotCueVigPFSol = lnNumCueVigPFSol + lnNumCueNuePFSol + lnNumCueCanPFSol
        lnMonTotCueVigAhoSol = lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol + lnMonCueCanAhoSol + lnMonCueRetAhoSol
        lnMonTotCueVigPFSol = lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol + lnMonCueCanPFSol + lnMonCueRetPFSol
        
        'Calculo Dolares
        lnNumCueVigAhoDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapAhorros, Val(lnMonCueVigAhoSol), bConsol, sCodAge)
        lnNumCueVigPFDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapPlazoFijo, Val(lnMonCueVigAhoSol), bConsol, sCodAge)
        
        lnNumCueNueAhoDol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, Val(lnMonCueNueAhoSol), bConsol, sCodAge)
        lnNumCueNuePFDol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, Val(lnMonCueNueAhoDol), bConsol, sCodAge)
        
        lnNumCueAbonoAhoDol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, Val(lnMonCueNueAhoDol), bConsol, sCodAge)
        lnNumCueAbonoPFDol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, Val(lnMonCueNueAhoDol), bConsol, sCodAge)
        
        lnMonCueIntCapAhoDol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, bConsol, sCodAge)
        lnMonCueIntCapPFDol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, bConsol, sCodAge)
        
        lnNumCueCanAhoDol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, Val(lnMonCueNueAhoSol), bConsol, sCodAge) * -1
        lnNumCueCanPFDol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, Val(lnMonCueNueAhoSol), bConsol, sCodAge) * -1
        
        lnNumCueRetAhoDol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, Val(lnMonCueNueAhoSol), bConsol, sCodAge)
        lnNumCueRetPFDol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, Val(lnMonCueNueAhoSol), bConsol, sCodAge)
    
    Else
       'Calculo Soles
       lnNumCueVigAhoSol = CuentasVigentesAho(lsFechaAnt, lsFechaIni, "1", lnMonCueVigAhoSol, bConsol, sCodAge)
       If sCodAge = "11201" Or bConsol Then
           lnMonCueVigAhoSol = lnMonCueVigAhoSol + CCur(ReadVarSisTempo("AHO", "nMonCtaAddMDMN"))
           lnNumCueVigAhoSol = lnNumCueVigAhoSol + CCur(ReadVarSisTempo("AHO", "nNumCtaAddMDMN"))
       End If
       lnNumCueVigPFSol = CuentasVigentesPF(lsFechaAnt, lsFechaIni, "1", lnMonCueVigPFSol, bConsol, sCodAge)
       
       lnNumCueNueAhoSol = CuentasApeAho(lsFechaIni, lsFechaFin, "1", lnMonCueNueAhoSol, bConsol, sCodAge)
       lnNumCueNuePFSol = CuentasApePF(lsFechaIni, lsFechaFin, "1", lnMonCueNuePFSol, bConsol, sCodAge)
       
       lnNumCueAbonoAhoSol = CuentasAbonoAho(lsFechaIni, lsFechaFin, "1", lnMonCueAbonoAhoSol, bConsol, sCodAge)
       lnNumCueAbonoPFSol = CuentasAbonoPF(lsFechaIni, lsFechaFin, "1", lnMonCueAbonoPFSol, bConsol, sCodAge)
       
       lnMonCueIntCapAhoSol = CuentasIntCapAho(lsFechaIni, lsFechaFin, "1", bConsol, sCodAge)
       lnMonCueIntCapPFSol = CuentasIntCapPF(lsFechaIni, lsFechaFin, "1", bConsol, sCodAge)
       
       lnNumCueCanAhoSol = CuentasCanceladaAho(lsFechaIni, lsFechaFin, "1", lnMonCueCanAhoSol, bConsol, sCodAge) * -1
       lnNumCueCanPFSol = CuentasCanceladaPF(lsFechaIni, lsFechaFin, "1", lnMonCueCanPFSol, bConsol, sCodAge) * -1
       
       lnNumCueRetAhoSol = CuentasRetAho(lsFechaIni, lsFechaFin, "1", lnMonCueRetAhoSol, bConsol, sCodAge)
       lnNumCueRetPFSol = CuentasRetPF(lsFechaIni, lsFechaFin, "1", lnMonCueRetPFSol, bConsol, sCodAge)
    
       lnTotCueVigAhoSol = lnNumCueVigAhoSol + lnNumCueNueAhoSol + lnNumCueCanAhoSol
       lnTotCueVigPFSol = lnNumCueVigPFSol + lnNumCueNuePFSol + lnNumCueCanPFSol
       lnMonTotCueVigAhoSol = lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol + lnMonCueCanAhoSol + lnMonCueRetAhoSol
       lnMonTotCueVigPFSol = lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol + lnMonCueCanPFSol + lnMonCueRetPFSol
       
       'Calculo Dolares
       lnNumCueVigAhoDol = CuentasVigentesAho(lsFechaAnt, lsFechaIni, "2", lnMonCueVigAhoDol, bConsol, sCodAge)
       lnNumCueVigPFDol = CuentasVigentesPF(lsFechaAnt, lsFechaIni, "2", lnMonCueVigPFDol, bConsol, sCodAge)
       
       lnNumCueNueAhoDol = CuentasApeAho(lsFechaIni, lsFechaFin, "2", lnMonCueNueAhoDol, bConsol, sCodAge)
       lnNumCueNuePFDol = CuentasApePF(lsFechaIni, lsFechaFin, "2", lnMonCueNuePFDol, bConsol, sCodAge)
       
       lnNumCueAbonoAhoDol = CuentasAbonoAho(lsFechaIni, lsFechaFin, "2", lnMonCueAbonoAhoDol, bConsol, sCodAge)
       lnNumCueAbonoPFDol = CuentasAbonoPF(lsFechaIni, lsFechaFin, "2", lnMonCueAbonoPFDol, bConsol, sCodAge)
       
       lnMonCueIntCapAhoDol = CuentasIntCapAho(lsFechaIni, lsFechaFin, "2", bConsol, sCodAge)
       lnMonCueIntCapPFDol = CuentasIntCapPF(lsFechaIni, lsFechaFin, "2", bConsol, sCodAge)
       
       lnNumCueCanAhoDol = CuentasCanceladaAho(lsFechaIni, lsFechaFin, "2", lnMonCueCanAhoDol, bConsol, sCodAge) * -1
       lnNumCueCanPFDol = CuentasCanceladaPF(lsFechaIni, lsFechaFin, "2", lnMonCueCanPFDol, bConsol, sCodAge) * -1
       
       lnNumCueRetAhoDol = CuentasRetAho(lsFechaIni, lsFechaFin, "2", lnMonCueRetAhoDol, bConsol, sCodAge)
       lnNumCueRetPFDol = CuentasRetPF(lsFechaIni, lsFechaFin, "2", lnMonCueRetPFDol, bConsol, sCodAge)
    End If
    
    'multiplicacion
    lnMonCueVigAhoDol = Round(lnMonCueVigAhoDol, 2)
    lnMonCueVigPFDol = Round(lnMonCueVigPFDol, 2)
    
    lnMonCueNueAhoDol = Round(lnMonCueNueAhoDol, 2)
    lnMonCueNuePFDol = Round(lnMonCueNuePFDol, 2)
    
    lnMonCueAbonoAhoDol = Round(lnMonCueAbonoAhoDol, 2)
    
    lnMonCueIntCapAhoDol = Round(lnMonCueIntCapAhoDol, 2)
    lnMonCueIntCapPFDol = Round(lnMonCueIntCapPFDol, 2)
    
    lnMonCueCanAhoDol = Round(lnMonCueCanAhoDol, 2)
    lnMonCueCanPFDol = Round(lnMonCueCanPFDol, 2)
    
    lnMonCueRetAhoDol = Round(lnMonCueRetAhoDol, 2)
    lnMonCueRetPFDol = Round(lnMonCueRetPFDol, 2)
    
    lnTotCueVigAhoDol = lnNumCueVigAhoDol + lnNumCueNueAhoDol + lnNumCueCanAhoDol
    lnTotCueVigPFDol = lnNumCueVigPFDol + lnNumCueNuePFDol + lnNumCueCanPFDol
    
    'Montos totales
    lnMonTotCueVigAhoDolVVV = lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol + lnMonCueCanAhoDol + lnMonCueRetAhoDol
    lnMonTotCueVigPFDolVVV = lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueIntCapPFDol + lnMonCueCanPFDol + lnMonCueRetPFDol + lnMonCueAbonoPFDol
  
    lnMonTotCueVigAhoDolVVV = lnMonTotCueVigAhoDolVVV * ntxtTipCamFij
    lnMonTotCueVigPFDolVVV = lnMonTotCueVigPFDolVVV * ntxtTipCamFij
    
    lnMonCueVigAhoDol = Round(lnMonCueVigAhoDol * (nTxtTipCamFijAnt), 2)
    lnMonCueVigPFDol = Round(lnMonCueVigPFDol * nTxtTipCamFijAnt, 2)
    
    lnMonCueNueAhoDol = Round(lnMonCueNueAhoDol * ntxtTipCamFij, 2)
    lnMonCueNuePFDol = Round(lnMonCueNuePFDol * ntxtTipCamFij, 2)
    
    lnMonCueAbonoAhoDol = Round(lnMonCueAbonoAhoDol * ntxtTipCamFij, 2)
    lnMonCueAbonoPFDol = Round(lnMonCueAbonoPFDol * ntxtTipCamFij, 2)
    
    lnMonCueIntCapAhoDol = Round(lnMonCueIntCapAhoDol * ntxtTipCamFij, 2)
    lnMonCueIntCapPFDol = Round(lnMonCueIntCapPFDol * ntxtTipCamFij, 2)
    
    lnMonCueCanAhoDol = Round(lnMonCueCanAhoDol * ntxtTipCamFij, 2)
    lnMonCueCanPFDol = Round(lnMonCueCanPFDol * ntxtTipCamFij, 2)
    
    lnMonCueRetAhoDol = Round(lnMonCueRetAhoDol * ntxtTipCamFij, 2)
    lnMonCueRetPFDol = Round(lnMonCueRetPFDol * ntxtTipCamFij, 2)
    
    lnMonTotCueVigAhoDol = lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol + lnMonCueCanAhoDol + lnMonCueRetAhoDol
    lnMonTotCueVigPFDol = lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol + lnMonCueCanPFDol + lnMonCueRetPFDol
    
    lnMonCueRetAhoDol = lnMonCueRetAhoDol + (lnMonTotCueVigAhoDolVVV - lnMonTotCueVigAhoDol)
    lnMonCueCanPFDol = lnMonCueCanPFDol + (lnMonTotCueVigPFDolVVV - lnMonTotCueVigPFDol)
    
    
    lnMonTotCueVigAhoDol = lnMonTotCueVigAhoDolVVV
    lnMonTotCueVigPFDol = lnMonTotCueVigPFDolVVV
      
    Dim lsCadena As String
    Dim lsNegritaOn As String
    Dim lsNegritaOff As String
    
    Dim lsMonto As String
    Dim lsNroCta As String
    
    lsNegritaOn = Chr$(27) & Chr$(71)
    lsNegritaOff = Chr$(27) & Chr$(71)
    
    lsNroCta = "  NRO.CTAS "
    lsMonto = "      MONTO      "
    
    lsCadena = ""
    lsCadena = lsCadena & space(lnMax) & lsNegritaOn & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "SUPERINTENDENCIA DE BANCA Y SEGUROS" & space(79) & "CODIGO: " & gsCodCMAC & Chr(10)
    lsCadena = lsCadena & space(lnMax) & CentrarCadena(gsNomCmac, 126) & Chr(10) & Chr(10)
    lsCadena = lsCadena & space(lnMax) & CentrarCadena("MOVIMIENTO DE LOS DEPOSITOS SEGUN MONTO Y NUMERO DE CUENTAS - " & lsNombreAge, 126) & Chr(10)
    lsCadena = lsCadena & space(lnMax) & CentrarCadena("AL: " & Format$(ldFechaFin, "dd/mm/yyyy"), 126) & Chr(10)
    '''lsCadena = lsCadena & Space(lnMax) & CentrarCadena("(En Miles Nuevos Soles)", 126) & lsNegritaOff & Chr(10) 'marg ers044-2016
    lsCadena = lsCadena & space(lnMax) & CentrarCadena("(En Miles " & StrConv(gcPEN_PLURAL, vbProperCase) & ")", 126) & lsNegritaOff & Chr(10) 'marg ers044-2016
    lsCadena = lsCadena & space(lnMax) & "+" & String(124, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & " CODIGO " & "¦" & space(25) & "¦" & CentrarCadena("AHORROS", 28) & "¦" & CentrarCadena("PLAZOFIJO", 28) & "¦" & CentrarCadena("TOTAL", 28) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & " S.B.S. " & "¦" & CentrarCadena("DETALLE", 24) & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & lsNroCta & "¦" & lsMonto & "¦" & lsNroCta & "¦" & lsMonto & "¦" & lsNroCta & "¦" & lsMonto & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "+" & String(8, "-") & "+" & String(25, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & CentrarCadena("MONEDA NACIONAL", 24) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueVigAhoSol, "#,##0"))) & Format(lnNumCueVigAhoSol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueVigAhoSol, "#,##0.00"))) & Format(lnMonCueVigAhoSol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueVigPFSol, "#,##0"))) & Format(lnNumCueVigPFSol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueVigPFSol, "#,##0.00"))) & Format(lnMonCueVigPFSol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueVigAhoSol + lnNumCueVigPFSol, "#,##0"))) & Format(lnNumCueVigAhoSol + lnNumCueVigPFSol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueVigAhoSol + lnMonCueVigPFSol, "#,##0.00"))) & Format(lnMonCueVigAhoSol + lnMonCueVigPFSol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10001 " & "¦" & " Saldo Mes Anterior" & space(25 - Len(" Saldo Mes Anterior")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueNueAhoSol, "#,##0"))) & Format(lnNumCueNueAhoSol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueNueAhoSol, "#,##0.00"))) & Format(lnMonCueNueAhoSol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueNuePFSol, "#,##0"))) & Format(lnNumCueNuePFSol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueNuePFSol, "#,##0.00"))) & Format(lnMonCueNuePFSol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueNueAhoSol + lnNumCueNuePFSol, "#,##0"))) & Format(lnNumCueNueAhoSol + lnNumCueNuePFSol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueNueAhoSol + lnMonCueNuePFSol, "#,##0.00"))) & Format(lnMonCueNueAhoSol + lnMonCueNuePFSol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10002 " & "¦" & " Mas: Cuentas Nuevas" & space(25 - Len(" Mas: Cuentas Nuevas")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueAbonoAhoSol, "#,##0"))) & Format(lnNumCueAbonoAhoSol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueAbonoAhoSol, "#,##0.00"))) & Format(lnMonCueAbonoAhoSol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueAbonoPFSol, "#,##0"))) & Format(lnNumCueAbonoPFSol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueAbonoPFSol, "#,##0.00"))) & Format(lnMonCueAbonoPFSol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueAbonoAhoSol + lnNumCueAbonoPFSol, "#,##0"))) & Format(lnNumCueAbonoAhoSol + lnNumCueAbonoPFSol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueAbonoAhoSol + lnMonCueAbonoPFSol, "#,##0.00"))) & Format(lnMonCueAbonoAhoSol + lnMonCueAbonoPFSol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10003 " & "¦" & "      Abonos" & space(25 - Len("      Abonos")) & "¦" & space(11) & "¦" & lsMonAho & "¦" & space(11) & "¦" & lsMonPF & "¦" & space(11) & "¦" & lsMonT & "¦" & Chr(10)
    
    lsMonAho = space(17 - Len(Format(lnMonCueIntCapAhoSol, "#,##0.00"))) & Format(lnMonCueIntCapAhoSol, "#,##0.00")
    lsMonPF = space(17 - Len(Format(lnMonCueIntCapPFSol, "#,##0.00"))) & Format(lnMonCueIntCapPFSol, "#,##0.00")
    lsMonT = space(17 - Len(Format((lnMonCueIntCapAhoSol + lnMonCueIntCapPFSol), "#,##0.00"))) & Format((lnMonCueIntCapAhoSol + lnMonCueIntCapPFSol), "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10004 " & "¦" & "      Intereses Capit." & space(25 - Len("      Intereses Capit.")) & "¦" & space(11) & "¦" & lsMonAho & "¦" & space(11) & "¦" & lsMonPF & "¦" & space(11) & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueCanAhoSol, "#,##0"))) & Format(lnNumCueCanAhoSol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueCanAhoSol, "#,##0.00"))) & Format(lnMonCueCanAhoSol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueCanPFSol, "#,##0"))) & Format(lnNumCueCanPFSol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueCanPFSol, "#,##0.00"))) & Format(lnMonCueCanPFSol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueCanAhoSol + lnNumCueCanPFSol, "#,##0"))) & Format(lnNumCueCanAhoSol + lnNumCueCanPFSol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueCanAhoSol + lnMonCueCanPFSol, "#,##0.00"))) & Format(lnMonCueCanAhoSol + lnMonCueCanPFSol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10020 " & "¦" & " Menos: Ctas Canceladas." & space(25 - Len(" Menos: Ctas Canceladas.")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueRetAhoSol, "#,##0"))) & Format(lnNumCueRetAhoSol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueRetAhoSol, "#,##0.00"))) & Format(lnMonCueRetAhoSol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueRetPFSol, "#,##0"))) & Format(lnNumCueRetPFSol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueRetPFSol, "#,##0.00"))) & Format(lnMonCueRetPFSol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueRetAhoSol + lnNumCueRetPFSol, "#,##0"))) & Format(lnNumCueRetAhoSol + lnNumCueRetPFSol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueRetAhoSol + lnMonCueRetPFSol, "#,##0.00"))) & Format(lnMonCueRetAhoSol + lnMonCueRetPFSol, "#,##0.00")
   
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10021 " & "¦" & "        Retiros y Cargos." & space(25 - Len("        Retiros y Cargos.")) & "¦" & space(11) & "¦" & lsMonAho & "¦" & space(11) & "¦" & lsMonPF & "¦" & space(11) & "¦" & lsMonT & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnTotCueVigAhoSol, "#,##0"))) & Format(lnTotCueVigAhoSol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonTotCueVigAhoSol, "#,##0.00"))) & Format(lnMonTotCueVigAhoSol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnTotCueVigPFSol, "#,##0"))) & Format(lnTotCueVigPFSol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonTotCueVigPFSol, "#,##0.00"))) & Format(lnMonTotCueVigPFSol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnTotCueVigAhoSol + lnTotCueVigPFSol, "#,##0"))) & Format(lnTotCueVigAhoSol + lnTotCueVigPFSol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonTotCueVigAhoSol + lnMonTotCueVigPFSol, "#,##0.00"))) & Format(lnMonTotCueVigAhoSol + lnMonTotCueVigPFSol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "+" & String(8, "-") & "+" & String(25, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & "  10040 " & "¦" & " Saldo a fin de Mes" & space(25 - Len(" Saldo a fin de Mes")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "+" & String(8, "-") & "+" & String(25, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & Chr(10)
    
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & CentrarCadena("MONEDA EXTRANJERA", 24) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    
'*****************************************************************************************************

    lsNumAho = space(11 - Len(Format(lnNumCueVigAhoDol, "#,##0"))) & Format(lnNumCueVigAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueVigAhoDol, "#,##0.00"))) & Format(lnMonCueVigAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueVigPFDol, "#,##0"))) & Format(lnNumCueVigPFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueVigPFDol, "#,##0.00"))) & Format(lnMonCueVigPFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueVigAhoDol + lnNumCueVigPFDol, "#,##0"))) & Format(lnNumCueVigAhoDol + lnNumCueVigPFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueVigAhoDol + lnMonCueVigPFDol, "#,##0.00"))) & Format(lnMonCueVigAhoDol + lnMonCueVigPFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20001 " & "¦" & " Saldo Mes Anterior" & space(25 - Len(" Saldo Mes Anterior")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueNueAhoDol, "#,##0"))) & Format(lnNumCueNueAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueNueAhoDol, "#,##0.00"))) & Format(lnMonCueNueAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueNuePFDol, "#,##0"))) & Format(lnNumCueNuePFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueNuePFDol, "#,##0.00"))) & Format(lnMonCueNuePFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueNueAhoDol + lnNumCueNuePFDol, "#,##0"))) & Format(lnNumCueNueAhoDol + lnNumCueNuePFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueNueAhoDol + lnMonCueNuePFDol, "#,##0.00"))) & Format(lnMonCueNueAhoDol + lnMonCueNuePFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20002 " & "¦" & " Mas: Cuentas Nuevas" & space(25 - Len(" Mas: Cuentas Nuevas")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueAbonoAhoDol, "#,##0"))) & Format(lnNumCueAbonoAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueAbonoAhoDol, "#,##0.00"))) & Format(lnMonCueAbonoAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueAbonoPFDol, "#,##0"))) & Format(lnNumCueAbonoPFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueAbonoPFDol, "#,##0.00"))) & Format(lnMonCueAbonoPFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueAbonoAhoDol + lnNumCueAbonoPFDol, "#,##0"))) & Format(lnNumCueAbonoAhoDol + lnNumCueAbonoPFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueAbonoAhoDol + lnMonCueAbonoPFDol, "#,##0.00"))) & Format(lnMonCueAbonoAhoDol + lnMonCueAbonoPFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20003 " & "¦" & "      Abonos" & space(25 - Len("      Abonos")) & "¦" & space(11) & "¦" & lsMonAho & "¦" & space(11) & "¦" & lsMonPF & "¦" & space(11) & "¦" & lsMonT & "¦" & Chr(10)
    
    lsMonAho = space(17 - Len(Format(lnMonCueIntCapAhoDol, "#,##0.00"))) & Format(lnMonCueIntCapAhoDol, "#,##0.00")
    lsMonPF = space(17 - Len(Format(lnMonCueIntCapPFDol, "#,##0.00"))) & Format(lnMonCueIntCapPFDol, "#,##0.00")
    lsMonT = space(17 - Len(Format(lnMonCueIntCapAhoDol + lnMonCueIntCapPFDol, "#,##0.00"))) & Format(lnMonCueIntCapAhoDol + lnMonCueIntCapPFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20004 " & "¦" & "      Intereses Capit." & space(25 - Len("      Intereses Capit.")) & "¦" & space(11) & "¦" & lsMonAho & "¦" & space(11) & "¦" & lsMonPF & "¦" & space(11) & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueCanAhoDol, "#,##0"))) & Format(lnNumCueCanAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueCanAhoDol, "#,##0.00"))) & Format(lnMonCueCanAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueCanPFDol, "#,##0"))) & Format(lnNumCueCanPFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueCanPFDol, "#,##0.00"))) & Format(lnMonCueCanPFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueCanAhoDol + lnNumCueCanPFDol, "#,##0"))) & Format(lnNumCueCanAhoDol + lnNumCueCanPFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueCanAhoDol + lnMonCueCanPFDol, "#,##0.00"))) & Format(lnMonCueCanAhoDol + lnMonCueCanPFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20020 " & "¦" & " Menos: Ctas Canceladas." & space(25 - Len(" Menos: Ctas Canceladas.")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnNumCueRetAhoDol, "#,##0"))) & Format(lnNumCueRetAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonCueRetAhoDol, "#,##0.00"))) & Format(lnMonCueRetAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnNumCueRetPFDol, "#,##0"))) & Format(lnNumCueRetPFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonCueRetPFDol, "#,##0.00"))) & Format(lnMonCueRetPFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnNumCueRetAhoDol + lnNumCueRetPFDol, "#,##0"))) & Format(lnNumCueRetAhoDol + lnNumCueRetPFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonCueRetAhoDol + lnMonCueRetPFDol, "#,##0.00"))) & Format(lnMonCueRetAhoDol + lnMonCueRetPFDol, "#,##0.00")
   
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20021 " & "¦" & "        Retiros y Cargos." & space(25 - Len("        Retiros y Cargos.")) & "¦" & space(11) & "¦" & lsMonAho & "¦" & space(11) & "¦" & lsMonPF & "¦" & space(11) & "¦" & lsMonT & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    
    lsNumAho = space(11 - Len(Format(lnTotCueVigAhoDol, "#,##0"))) & Format(lnTotCueVigAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonTotCueVigAhoDol, "#,##0.00"))) & Format(lnMonTotCueVigAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnTotCueVigPFDol, "#,##0"))) & Format(lnTotCueVigPFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonTotCueVigPFDol, "#,##0.00"))) & Format(lnMonTotCueVigPFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnTotCueVigAhoDol + lnTotCueVigPFDol, "#,##0"))) & Format(lnTotCueVigAhoDol + lnTotCueVigPFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonTotCueVigAhoDol + lnMonTotCueVigPFDol, "#,##0.00"))) & Format(lnMonTotCueVigAhoDol + lnMonTotCueVigPFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "+" & String(8, "-") & "+" & String(25, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & "  20040 " & "¦" & " Saldo a fin de Mes" & space(25 - Len(" Saldo a fin de Mes")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "+" & String(8, "-") & "+" & String(25, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & String(11, "-") & "+" & String(17, "-") & "+" & Chr(10)
'00000000000000000000000000
    
    lsNumAho = space(11 - Len(Format(lnTotCueVigAhoSol + lnTotCueVigAhoDol, "#,##0"))) & Format(lnTotCueVigAhoSol + lnTotCueVigAhoDol, "#,##0")
    lsMonAho = space(17 - Len(Format(lnMonTotCueVigAhoSol + lnMonTotCueVigAhoDol, "#,##0.00"))) & Format(lnMonTotCueVigAhoSol + lnMonTotCueVigAhoDol, "#,##0.00")
    lsNumPF = space(11 - Len(Format(lnTotCueVigPFSol + lnTotCueVigPFDol, "#,##0"))) & Format(lnTotCueVigPFSol + lnTotCueVigPFDol, "#,##0")
    lsMonPF = space(17 - Len(Format(lnMonTotCueVigPFSol + lnMonTotCueVigPFDol, "#,##0.00"))) & Format(lnMonTotCueVigPFSol + lnMonTotCueVigPFDol, "#,##0.00")
    lsNumT = space(11 - Len(Format(lnTotCueVigAhoSol + lnTotCueVigPFSol + lnTotCueVigAhoDol + lnTotCueVigPFDol, "#,##0"))) & Format(lnTotCueVigAhoSol + lnTotCueVigPFSol + lnTotCueVigAhoDol + lnTotCueVigPFDol, "#,##0")
    lsMonT = space(17 - Len(Format(lnMonTotCueVigAhoSol + lnMonTotCueVigPFSol + lnMonTotCueVigAhoDol + lnMonTotCueVigPFDol, "#,##0.00"))) & Format(lnMonTotCueVigAhoSol + lnMonTotCueVigPFSol + lnMonTotCueVigAhoDol + lnMonTotCueVigPFDol, "#,##0.00")
    
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & "  01000 " & "¦" & " Saldo a fin de Mes" & space(25 - Len(" Saldo a fin de Mes")) & "¦" & lsNumAho & "¦" & lsMonAho & "¦" & lsNumPF & "¦" & lsMonPF & "¦" & lsNumT & "¦" & lsMonT & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & "  02000 " & "¦" & " Promedio de Saldo Diario" & space(25 - Len(" Promedio de Saldo Diario")) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "¦" & space(8) & "¦" & space(25) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & space(11) & "¦" & space(17) & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "+" & String(124, "-") & "+" & Chr(10) & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "Periodicidad Mensual" & Chr(10) & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "Total Vista fin de Mes   : Se anotará el saldo de la cuenta Nro. 2101" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "Total Ahorro fin de Mes  : Se anotará el saldo del rubro 23" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "Total Plazo fin de Mes   : Se anotará el saldo del rubro 24" & Chr(10)
    lsCadena = lsCadena & space(lnMax) & "Total Monto              : Se anotará la suma de los saldo de la cuenta Nro.2101 y rubros 23 y 24" & Chr(10)
    
    GetAnx11MovimientoMontoNumero = lsCadena


End Function
 
''''''' Excel
''''Public Sub ImprimeAnx11xls(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal dFecha As Date, ByVal sLstage As ListBox, ByVal ntxtTipCamFijAnt1 As Double, ByVal ntxtTipCamFij1 As Double, ByVal ntxtTipCamCompraSBS1 As Double, ByVal ntxtTipCamVentaSBS1 As Double)
''''
''''    Dim i As Integer
''''
''''    Dim lbLibroOpen As Boolean
''''    Dim lsArchivo As String
''''    Dim lbHojaOpen As Boolean
''''
''''    lsArchivo = "Anexo11_" & Format(gdFecSis, "YYYYMMdd") & "_" & Format(Time, "Short Time") & ".xls"
''''    lsArchivo = Replace(lsArchivo, ":", "_")
''''
''''    lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)
''''
''''    Dim lsCadena As String
''''    Dim lsCadCon As String
''''    Dim lsCad As String
''''
''''    For i = 0 To sLstage.ListCount - 1
''''        If sLstage.Selected(i) Then
''''            If Right(sLstage.List(i), 5) = "ONSOL" Then
''''                GetAnx11MovimientoMontoNumeroxls xlAplicacion, xlLibro, pnbitcentral_, dFecha, ntxtTipCamFijAnt1, ntxtTipCamFij1, ntxtTipCamCompraSBS1, ntxtTipCamVentaSBS1, True
''''            Else
''''                GetAnx11MovimientoMontoNumeroxls xlAplicacion, xlLibro, pnbitcentral_, dFecha, ntxtTipCamFijAnt1, ntxtTipCamFij1, ntxtTipCamCompraSBS1, ntxtTipCamVentaSBS1, False, Right(sLstage.List(i), 5)
''''            End If
''''        End If
''''    Next i
''''
''''    ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1
''''
''''    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"
''''
''''    CargaArchivo lsArchivo, App.path & "\Spooler"
''''
''''End Sub
''''
''''Public Sub GetAnx11MovimientoMontoNumeroxls(xlAplicacion As Excel.Application, _
''''                  xlLibro As Excel.Workbook, ByVal pnbitcentral_ As Boolean, ByVal dFecha As Date, _
''''            ByVal nTxtTipCamFijAnt As Double, ntxtTipCamFij As Double, ByVal ntxtTipCamCompraSBS As Double, ByVal ntxtTipCamVentaSBS As Double, _
''''            ByVal bConsol As Boolean, Optional sCodAge As String = "", _
''''            Optional sNomAge As String = "")
''''
''''    Dim lsHoja As String
''''    Dim i As Integer
''''    Dim nTemp As Integer
''''
''''    Dim lsNombreAge As String
''''    Dim lsFechaIni As String
''''    Dim lsFechaFin As String
''''    Dim lsFechaAnt As String
''''
''''    Dim ldFechaIni As Date
''''    Dim ldFechaFin As Date
''''    Dim ldFechaAnt As Date
''''
''''    Dim lsMes As String
''''    Dim lsDia As String
''''    Dim lsAño As String
''''
''''    Dim lsNumAho As String * 11
''''    Dim lsMonAho As String * 17
''''    Dim lsNumPF As String * 11
''''    Dim lsMonPF As String * 17
''''    Dim lsNumT As String * 11
''''    Dim lsMonT As String * 17
''''
''''    Dim oCap As nCapDefinicion
''''    Dim oConConsol As DConecta
''''    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''    ''VARIABLES PARA EL CALCULO
''''''* Proceso de Calculo previo a la Generacion del Reporte
''''    Dim lnNumCueVigAhoSol As Long
''''    Dim lnNumCueVigPFSol As Long
''''    Dim lnMonCueVigAhoSol As Currency
''''    Dim lnMonCueVigPFSol As Currency
''''
''''    Dim lnNumCueNueAhoSol As Long
''''    Dim lnNumCueNuePFSol As Long
''''    Dim lnMonCueNueAhoSol As Currency
''''    Dim lnMonCueNuePFSol As Currency
''''
''''    Dim lnNumCueAbonoAhoSol As Long
''''    Dim lnMonCueAbonoAhoSol As Currency
''''    Dim lnNumCueAbonoPFSol As Long
''''    Dim lnMonCueAbonoPFSol As Currency
''''
''''    Dim lnMonCueIntCapAhoSol As Currency
''''    Dim lnMonCueIntCapPFSol As Currency
''''
''''    Dim lnNumCueCanAhoSol As Long
''''    Dim lnMonCueCanAhoSol As Currency
''''    Dim lnNumCueCanPFSol As Long
''''    Dim lnMonCueCanPFSol As Currency
''''
''''    Dim lnNumCueRetAhoSol As Long
''''    Dim lnMonCueRetAhoSol As Currency
''''    Dim lnNumCueRetPFSol As Long
''''    Dim lnMonCueRetPFSol As Currency
''''
''''    Dim lnNumCueCargoAhoSol As Long
''''    Dim lnMonCueCargoAhoSol As Currency
''''    Dim lnNumCueCargoPFSol As Long
''''    Dim lnMonCueCargoPFSol As Currency
''''
''''    Dim lnTotCueVigAhoSol As Long
''''    Dim lnTotCueVigPFSol As Long
''''    Dim lnMonTotCueVigAhoSol As Currency
''''    Dim lnMonTotCueVigPFSol As Currency
''''
''''    Dim lnNumCueVigAhoDol As Long
''''    Dim lnNumCueVigPFDol As Long
''''    Dim lnMonCueVigAhoDol As Currency
''''    Dim lnMonCueVigPFDol As Currency
''''
''''    Dim lnNumCueNueAhoDol As Long
''''    Dim lnNumCueNuePFDol As Long
''''    Dim lnMonCueNueAhoDol As Currency
''''    Dim lnMonCueNuePFDol As Currency
''''
''''    Dim lnNumCueAbonoAhoDol As Long
''''    Dim lnMonCueAbonoAhoDol As Currency
''''    Dim lnNumCueAbonoPFDol As Long
''''    Dim lnMonCueAbonoPFDol As Currency
''''
''''    Dim lnMonCueIntCapAhoDol As Currency
''''    Dim lnMonCueIntCapPFDol As Currency
''''
''''    Dim lnNumCueCanAhoDol As Long
''''    Dim lnMonCueCanAhoDol As Currency
''''    Dim lnNumCueCanPFDol As Long
''''    Dim lnMonCueCanPFDol As Currency
''''
''''    Dim lnNumCueRetAhoDol As Long
''''    Dim lnMonCueRetAhoDol As Currency
''''    Dim lnNumCueRetPFDol As Long
''''    Dim lnMonCueRetPFDol As Currency
''''
''''    Dim lnTotCueVigAhoDol As Long
''''    Dim lnTotCueVigPFDol As Long
''''    Dim lnMonTotCueVigAhoDol As Currency
''''    Dim lnMonTotCueVigPFDol As Currency
''''
''''    Dim lnMonTotCueVigAhoDolVVV As Currency
''''    Dim lnMonTotCueVigPFDolVVV As Currency
''''
''''    Dim lnMax As Integer
''''    Dim nfila As Integer
''''    nfila = 0
''''
''''    sCodAge = Trim(sCodAge)
''''
''''    lnMax = 5
''''
''''    If bConsol Then
''''        lsNombreAge = "CONSOLIDADO"
''''        lsHoja = "CONSOLIDADO"
''''    Else
''''        If sNomAge <> "" Then
''''        Else
''''            sNomAge = GetNombreAgencia(Right(sCodAge, 2))
''''        End If
''''        lsNombreAge = sNomAge
''''        lsHoja = "AGENCIA_" & Right(sCodAge, 2)
''''    End If
''''
''''    lsMes = Mid(Trim(dFecha), 4, 2)
''''    lsDia = "01"
''''    lsAño = Mid(Trim(dFecha), 7, 4)
''''
''''    ldFechaIni = CDate(lsDia & "/" & lsMes & "/" & lsAño)
''''    ldFechaAnt = DateAdd("d", -1, ldFechaIni)
''''
''''    ' Ojooooooooooooooo
''''        ' En el centralizado se quita un dia por que en la clase lo suma
''''        ' En el distribuido no se quita nada
''''
''''        If gbBitCentral = True Then
''''            ldFechaFin = DateAdd("d", -1, DateAdd("m", 1, ldFechaIni))
''''        Else
''''            ldFechaFin = DateAdd("m", 1, ldFechaIni)
''''        End If
''''
''''    ' Ojooooooooooooooo
''''
''''    lsFechaIni = Format(ldFechaIni, "mm/dd/yyyy")
''''    lsFechaFin = Format(ldFechaFin, "mm/dd/yyyy")
''''    lsFechaAnt = Format(ldFechaAnt, "mm/dd/yyyy")
''''
''''    If pnbitcentral_ = True Then
''''        ''Calculo Soles
''''
''''        Set oCap = New nCapDefinicion
''''
''''        lnNumCueVigAhoSol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaNacional, gCapAhorros, lnMonCueVigAhoSol, bConsol, sCodAge)
''''        lnNumCueVigPFSol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaNacional, gCapPlazoFijo, lnMonCueVigPFSol, bConsol, sCodAge)
''''
''''        lnNumCueNueAhoSol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueNueAhoSol, bConsol, sCodAge)
''''        lnNumCueNuePFSol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueNuePFSol, bConsol, sCodAge)
''''
''''        lnNumCueAbonoAhoSol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueAbonoAhoSol, bConsol, sCodAge)
''''        lnNumCueAbonoPFSol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueAbonoPFSol, bConsol, sCodAge)
''''
''''        lnMonCueIntCapAhoSol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, bConsol, sCodAge)
''''        lnMonCueIntCapPFSol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, bConsol, sCodAge)
''''
''''        lnNumCueCanAhoSol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueCanAhoSol, bConsol, sCodAge)
''''        lnNumCueCanPFSol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueCanPFSol, bConsol, sCodAge)
''''
''''        lnNumCueRetAhoSol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueRetAhoSol, bConsol, sCodAge)
''''        lnNumCueRetPFSol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueRetPFSol, bConsol, sCodAge)
''''
''''
''''        'Falta Abonos y Cargos
''''
''''        '
''''
''''        lnTotCueVigAhoSol = lnNumCueVigAhoSol + lnNumCueNueAhoSol - lnNumCueCanAhoSol
''''        lnTotCueVigPFSol = lnNumCueVigPFSol + lnNumCueNuePFSol - lnNumCueCanPFSol
''''        lnMonTotCueVigAhoSol = lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol - lnMonCueCanAhoSol - lnMonCueRetAhoSol
''''        lnMonTotCueVigPFSol = lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol - lnMonCueCanPFSol - lnMonCueRetPFSol
''''
''''        'Calculo Dolares
''''        lnNumCueVigAhoDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapAhorros, lnMonCueVigAhoDol, bConsol, sCodAge)
''''        lnNumCueVigPFDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapPlazoFijo, lnMonCueVigAhoDol, bConsol, sCodAge)
''''
''''        lnNumCueNueAhoDol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueNueAhoDol, bConsol, sCodAge)
''''        lnNumCueNuePFDol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueNuePFDol, bConsol, sCodAge)
''''
''''        lnNumCueAbonoAhoDol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueAbonoAhoDol, bConsol, sCodAge)
''''        lnNumCueAbonoPFDol = oCap.CuentasCapAbono(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueAbonoPFDol, bConsol, sCodAge)
''''
''''        lnMonCueIntCapAhoDol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, bConsol, sCodAge)
''''        lnMonCueIntCapPFDol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, bConsol, sCodAge)
''''
''''        lnNumCueCanAhoDol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueCanAhoDol, bConsol, sCodAge)
''''        lnNumCueCanPFDol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueCanPFDol, bConsol, sCodAge)
''''
''''        lnNumCueRetAhoDol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueRetAhoDol, bConsol, sCodAge)
''''        lnNumCueRetPFDol = oCap.CuentasCapRetiro(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueRetPFDol, bConsol, sCodAge)
''''
''''        lnTotCueVigAhoDol = lnNumCueVigAhoDol + lnNumCueNueAhoDol - lnNumCueCanAhoDol - lnNumCueRetAhoDol
''''        lnTotCueVigPFDol = lnNumCueVigPFDol + lnNumCueNuePFDol - lnNumCueCanPFDol - lnNumCueCanPFDol
''''        lnMonTotCueVigAhoDol = lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol - lnMonCueCanAhoDol - lnMonCueRetAhoDol
''''        lnMonTotCueVigPFDol = lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol - lnMonCueCanPFDol - lnMonCueRetPFDol
''''
''''    Else
''''       'Calculo Soles
''''       lnNumCueVigAhoSol = CuentasVigentesAho(lsFechaAnt, lsFechaIni, "1", lnMonCueVigAhoSol, bConsol, sCodAge)
''''       If sCodAge = "11201" Or bConsol Then
''''           lnMonCueVigAhoSol = lnMonCueVigAhoSol + CCur(ReadVarSisTempo("AHO", "nMonCtaAddMDMN"))
''''           lnNumCueVigAhoSol = lnNumCueVigAhoSol + CCur(ReadVarSisTempo("AHO", "nNumCtaAddMDMN"))
''''       End If
''''       lnNumCueVigPFSol = CuentasVigentesPF(lsFechaAnt, lsFechaIni, "1", lnMonCueVigPFSol, bConsol, sCodAge)
''''
''''       lnNumCueNueAhoSol = CuentasApeAho(lsFechaIni, lsFechaFin, "1", lnMonCueNueAhoSol, bConsol, sCodAge)
''''       lnNumCueNuePFSol = CuentasApePF(lsFechaIni, lsFechaFin, "1", lnMonCueNuePFSol, bConsol, sCodAge)
''''
''''       lnNumCueAbonoAhoSol = CuentasAbonoAho(lsFechaIni, lsFechaFin, "1", lnMonCueAbonoAhoSol, bConsol, sCodAge)
''''       lnNumCueAbonoPFSol = CuentasAbonoPF(lsFechaIni, lsFechaFin, "1", lnMonCueAbonoPFSol, bConsol, sCodAge)
''''
''''       lnMonCueIntCapAhoSol = CuentasIntCapAho(lsFechaIni, lsFechaFin, "1", bConsol, sCodAge)
''''       lnMonCueIntCapPFSol = CuentasIntCapPF(lsFechaIni, lsFechaFin, "1", bConsol, sCodAge)
''''
''''       lnNumCueCanAhoSol = CuentasCanceladaAho(lsFechaIni, lsFechaFin, "1", lnMonCueCanAhoSol, bConsol, sCodAge) * -1
''''       lnNumCueCanPFSol = CuentasCanceladaPF(lsFechaIni, lsFechaFin, "1", lnMonCueCanPFSol, bConsol, sCodAge) * -1
''''
''''       lnNumCueRetAhoSol = CuentasRetAho(lsFechaIni, lsFechaFin, "1", lnMonCueRetAhoSol, bConsol, sCodAge)
''''       lnNumCueRetPFSol = CuentasRetPF(lsFechaIni, lsFechaFin, "1", lnMonCueRetPFSol, bConsol, sCodAge)
''''
''''       lnTotCueVigAhoSol = lnNumCueVigAhoSol + lnNumCueNueAhoSol + lnNumCueCanAhoSol
''''       lnTotCueVigPFSol = lnNumCueVigPFSol + lnNumCueNuePFSol + lnNumCueCanPFSol
''''       lnMonTotCueVigAhoSol = lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol + lnMonCueCanAhoSol + lnMonCueRetAhoSol
''''       lnMonTotCueVigPFSol = lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol + lnMonCueCanPFSol + lnMonCueRetPFSol
''''
''''       'Calculo Dolares
''''       lnNumCueVigAhoDol = CuentasVigentesAho(lsFechaAnt, lsFechaIni, "2", lnMonCueVigAhoDol, bConsol, sCodAge)
''''       lnNumCueVigPFDol = CuentasVigentesPF(lsFechaAnt, lsFechaIni, "2", lnMonCueVigPFDol, bConsol, sCodAge)
''''
''''       lnNumCueNueAhoDol = CuentasApeAho(lsFechaIni, lsFechaFin, "2", lnMonCueNueAhoDol, bConsol, sCodAge)
''''       lnNumCueNuePFDol = CuentasApePF(lsFechaIni, lsFechaFin, "2", lnMonCueNuePFDol, bConsol, sCodAge)
''''
''''       lnNumCueAbonoAhoDol = CuentasAbonoAho(lsFechaIni, lsFechaFin, "2", lnMonCueAbonoAhoDol, bConsol, sCodAge)
''''       lnNumCueAbonoPFDol = CuentasAbonoPF(lsFechaIni, lsFechaFin, "2", lnMonCueAbonoPFDol, bConsol, sCodAge)
''''
''''       lnMonCueIntCapAhoDol = CuentasIntCapAho(lsFechaIni, lsFechaFin, "2", bConsol, sCodAge)
''''       lnMonCueIntCapPFDol = CuentasIntCapPF(lsFechaIni, lsFechaFin, "2", bConsol, sCodAge)
''''
''''       lnNumCueCanAhoDol = CuentasCanceladaAho(lsFechaIni, lsFechaFin, "2", lnMonCueCanAhoDol, bConsol, sCodAge) * -1
''''       lnNumCueCanPFDol = CuentasCanceladaPF(lsFechaIni, lsFechaFin, "2", lnMonCueCanPFDol, bConsol, sCodAge) * -1
''''
''''       lnNumCueRetAhoDol = CuentasRetAho(lsFechaIni, lsFechaFin, "2", lnMonCueRetAhoDol, bConsol, sCodAge)
''''       lnNumCueRetPFDol = CuentasRetPF(lsFechaIni, lsFechaFin, "2", lnMonCueRetPFDol, bConsol, sCodAge)
''''    End If
''''
''''    'multiplicacion
''''    lnMonCueVigAhoDol = Round(lnMonCueVigAhoDol, 2)
''''    lnMonCueVigPFDol = Round(lnMonCueVigPFDol, 2)
''''
''''    lnMonCueNueAhoDol = Round(lnMonCueNueAhoDol, 2)
''''    lnMonCueNuePFDol = Round(lnMonCueNuePFDol, 2)
''''
''''    lnMonCueAbonoAhoDol = Round(lnMonCueAbonoAhoDol, 2)
''''
''''    lnMonCueIntCapAhoDol = Round(lnMonCueIntCapAhoDol, 2)
''''    lnMonCueIntCapPFDol = Round(lnMonCueIntCapPFDol, 2)
''''
''''    lnMonCueCanAhoDol = Round(lnMonCueCanAhoDol, 2)
''''    lnMonCueCanPFDol = Round(lnMonCueCanPFDol, 2)
''''
''''    lnMonCueRetAhoDol = Round(lnMonCueRetAhoDol, 2)
''''    lnMonCueRetPFDol = Round(lnMonCueRetPFDol, 2)
''''
''''    lnTotCueVigAhoDol = lnNumCueVigAhoDol + lnNumCueNueAhoDol + lnNumCueCanAhoDol
''''    lnTotCueVigPFDol = lnNumCueVigPFDol + lnNumCueNuePFDol + lnNumCueCanPFDol
''''
''''    'Montos totales
''''    lnMonTotCueVigAhoDolVVV = lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol - lnMonCueCanAhoDol - lnMonCueRetAhoDol
''''    lnMonTotCueVigPFDolVVV = lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol - lnMonCueCanPFDol - lnMonCueRetPFDol
''''
''''    lnMonTotCueVigAhoDolVVV = lnMonTotCueVigAhoDolVVV * ntxtTipCamFij
''''    lnMonTotCueVigPFDolVVV = lnMonTotCueVigPFDolVVV * ntxtTipCamFij
''''
''''    lnMonCueVigAhoDol = Round(lnMonCueVigAhoDol * (nTxtTipCamFijAnt), 2)
''''    lnMonCueVigPFDol = Round(lnMonCueVigPFDol * nTxtTipCamFijAnt, 2)
''''
''''    lnMonCueNueAhoDol = Round(lnMonCueNueAhoDol * ntxtTipCamFij, 2)
''''    lnMonCueNuePFDol = Round(lnMonCueNuePFDol * ntxtTipCamFij, 2)
''''
''''    lnMonCueAbonoAhoDol = Round(lnMonCueAbonoAhoDol * ntxtTipCamFij, 2)
''''    lnMonCueAbonoPFDol = Round(lnMonCueAbonoPFDol * ntxtTipCamFij, 2)
''''
''''    lnMonCueIntCapAhoDol = Round(lnMonCueIntCapAhoDol * ntxtTipCamFij, 2)
''''    lnMonCueIntCapPFDol = Round(lnMonCueIntCapPFDol * ntxtTipCamFij, 2)
''''
''''    lnMonCueCanAhoDol = Round(lnMonCueCanAhoDol * ntxtTipCamFij, 2)
''''    lnMonCueCanPFDol = Round(lnMonCueCanPFDol * ntxtTipCamFij, 2)
''''
''''    lnMonCueRetAhoDol = Round(lnMonCueRetAhoDol * ntxtTipCamFij, 2)
''''    lnMonCueRetPFDol = Round(lnMonCueRetPFDol * ntxtTipCamFij, 2)
''''
''''    lnMonTotCueVigAhoDol = lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol - lnMonCueCanAhoDol - lnMonCueRetAhoDol
''''    lnMonTotCueVigPFDol = lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol - lnMonCueCanPFDol - lnMonCueRetPFDol
''''
''''    lnMonCueRetAhoDol = lnMonCueRetAhoDol + (lnMonTotCueVigAhoDolVVV - lnMonTotCueVigAhoDol)
''''    lnMonCueCanPFDol = lnMonCueCanPFDol + (lnMonTotCueVigPFDolVVV - lnMonTotCueVigPFDol)
''''
''''
''''    lnMonTotCueVigAhoDol = lnMonTotCueVigAhoDolVVV
''''    lnMonTotCueVigPFDol = lnMonTotCueVigPFDolVVV
''''
''''    ExcelAddHoja lsHoja, xlLibro, xlHoja1
''''    xlHoja1.PageSetup.CenterHorizontally = True
''''    xlHoja1.PageSetup.Zoom = 90
''''    xlHoja1.PageSetup.Orientation = xlLandscape
''''
''''    xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
''''    xlHoja1.Cells(1, 11) = "ANEXO NRO 11"
''''
''''    xlHoja1.Cells(3, 2) = "EMPRESA: " & gsNomCmac
''''    xlHoja1.Cells(3, 9) = "CODIGO:"
''''    xlHoja1.Cells(3, 10) = gsCodCMAC
''''
''''    xlHoja1.Cells(5, 1) = "MOVIMIENTO DE LOS DEPOSITOS SEGUN MONTO Y NUMERO DE CUENTAS - " & lsNombreAge
''''    xlHoja1.Cells(6, 1) = "AL: " & Format$(ldFechaFin, "dd/mm/yyyy")
''''    xlHoja1.Cells(7, 1) = "(En Miles Nuevos Soles)"
''''
''''    xlHoja1.Cells(9, 3) = "VISTA"
''''    xlHoja1.Cells(9, 5) = "AHORROS"
''''    xlHoja1.Cells(9, 7) = "PLAZO"
''''    xlHoja1.Cells(9, 9) = "TOTAL"
''''    xlHoja1.Cells(9, 11) = "Nro. de"
''''
''''    xlHoja1.Cells(10, 3) = "Nro. de"
''''    xlHoja1.Cells(10, 4) = "Monto"
''''    xlHoja1.Cells(10, 5) = "Nro. de"
''''    xlHoja1.Cells(10, 6) = "Monto"
''''    xlHoja1.Cells(10, 7) = "Nro. de"
''''    xlHoja1.Cells(10, 8) = "Monto"
''''    xlHoja1.Cells(10, 9) = "Nro. de"
''''    xlHoja1.Cells(10, 10) = "Monto"
''''
''''    xlHoja1.Cells(10, 11) = "Tarjetas"
''''
''''    xlHoja1.Cells(11, 3) = "Cuentas"
''''    xlHoja1.Cells(11, 5) = "Cuentas"
''''    xlHoja1.Cells(11, 7) = "Cuentas"
''''    xlHoja1.Cells(11, 9) = "Cuentas"
''''    xlHoja1.Cells(11, 11) = "de Débito"
''''
''''    xlHoja1.Range("A1:C1").MergeCells = True
''''    xlHoja1.Range("J1:K1").MergeCells = True
''''    xlHoja1.Range("C3:G3").MergeCells = True
''''    xlHoja1.Range("A5:K5").MergeCells = True
''''    xlHoja1.Range("A6:K6").MergeCells = True
''''    xlHoja1.Range("A7:K7").MergeCells = True
''''
''''    xlHoja1.Range("A9:B11").MergeCells = True
''''    xlHoja1.Range("C9:D9").MergeCells = True
''''    xlHoja1.Range("E9:F9").MergeCells = True
''''    xlHoja1.Range("G9:H9").MergeCells = True
''''    xlHoja1.Range("I9:J9").MergeCells = True
''''
''''    xlHoja1.Range("A1:K3").HorizontalAlignment = xlLeft
''''    xlHoja1.Range("A5:K11").HorizontalAlignment = xlCenter
''''
''''    xlHoja1.Range("A1:K11").Font.Bold = True
''''
''''    For i = 1 To 2
''''        If i = 1 Then
''''            nTemp = 0
''''            xlHoja1.Cells(nTemp + 12, 1) = "Moneda Nacional"
''''        ElseIf i = 2 Then
''''            nTemp = 10
''''            xlHoja1.Cells(nTemp + 12, 1) = "Moneda Extranjera"
''''        End If
''''
''''        xlHoja1.Cells(nTemp + 13, 1) = "Saldo Mes Anterior"
''''        xlHoja1.Cells(nTemp + 14, 1) = "Mas"
''''        xlHoja1.Cells(nTemp + 14, 2) = "Cuentas Nuevas"
''''        xlHoja1.Cells(nTemp + 15, 2) = "Abonos"
''''        xlHoja1.Cells(nTemp + 16, 2) = "Intereses Capitalizados"
''''        xlHoja1.Cells(nTemp + 17, 1) = "Menos"
''''        xlHoja1.Cells(nTemp + 17, 2) = "Cuentas Canceladas"
''''        xlHoja1.Cells(nTemp + 18, 2) = "Retiros"
''''        xlHoja1.Cells(nTemp + 19, 2) = "Cargos"
''''        xlHoja1.Cells(nTemp + 20, 1) = "Saldo a fin de mes"
''''
''''    Next
''''
''''    xlHoja1.Cells(32, 1) = "Total Saldos a Fin de Mes"
''''    xlHoja1.Cells(33, 1) = "* Consignar una sola vez en moneda nacional en caso que la tarjeta de débito esté asociada a diversas cuentas"
''''
''''    'Titulos
''''    xlHoja1.Range("A12:B34").Font.Bold = True
''''    'Monedas
''''    xlHoja1.Range("A12:A12").Font.Underline = True
''''    xlHoja1.Range("A23:A23").Font.Underline = True
''''
''''    'Saldos a Fin de Mes
''''    xlHoja1.Range("A20:B20").MergeCells = True
''''    xlHoja1.Range("A30:B30").MergeCells = True
''''    'Saldo General
''''    xlHoja1.Range("A32:B32").MergeCells = True
''''
''''    'Comentario
''''    xlHoja1.Range("A33:K33").MergeCells = True
''''
''''    'Mas y Menos
''''    xlHoja1.Range("A14:A16").MergeCells = True
''''    xlHoja1.Range("A17:A18").MergeCells = True
''''
''''    'Mas y Menos
''''    xlHoja1.Range("A24:A26").MergeCells = True
''''    xlHoja1.Range("A27:A28").MergeCells = True
''''
''''    'Mas y Menos
''''    xlHoja1.Range("A14:A14").HorizontalAlignment = xlLeft
''''    xlHoja1.Range("A17:A17").HorizontalAlignment = xlLeft
''''    xlHoja1.Range("A14:A14").VerticalAlignment = xlTop
''''    xlHoja1.Range("A17:A17").VerticalAlignment = xlTop
''''
''''    xlHoja1.Range("A24:A24").HorizontalAlignment = xlLeft
''''    xlHoja1.Range("A27:A27").HorizontalAlignment = xlLeft
''''    xlHoja1.Range("A24:A24").VerticalAlignment = xlTop
''''    xlHoja1.Range("A27:A27").VerticalAlignment = xlTop
''''
''''    'Titulos
''''    ExcelCuadro xlHoja1, 1, 9, 10, 11, , True
''''    ExcelCuadro xlHoja1, 11, 9, 11, 11, False, False
''''
''''    'Borde Gral
''''    ExcelCuadro xlHoja1, 1, 12, 11, 32, False, False
''''
''''    'Todo Nacional
''''    ExcelCuadro xlHoja1, 1, 13, 11, 19, , True
''''    'Saldos a Fin de Mes
''''    ExcelCuadro xlHoja1, 1, 20, 11, 20, , True
''''
''''    'Todo Extranjero
''''    ExcelCuadro xlHoja1, 1, 23, 11, 29, , True
''''
''''    'Saldos a Fin de Mes
''''    ExcelCuadro xlHoja1, 1, 30, 11, 30, , True
''''
''''    'Total Saldos a fin de Mes
''''    ExcelCuadro xlHoja1, 1, 32, 11, 32, , True
''''
''''    xlHoja1.Range("D13:D32").NumberFormat = "###,###,##0.00"
''''    xlHoja1.Range("F13:F32").NumberFormat = "###,###,##0.00"
''''    xlHoja1.Range("H13:H32").NumberFormat = "###,###,##0.00"
''''    xlHoja1.Range("J13:J32").NumberFormat = "###,###,##0.00"
''''
''''    xlHoja1.Range("C13:C32").NumberFormat = "###,###,##0"
''''    xlHoja1.Range("E13:E32").NumberFormat = "###,###,##0"
''''    xlHoja1.Range("G13:G32").NumberFormat = "###,###,##0"
''''    xlHoja1.Range("I13:I32").NumberFormat = "###,###,##0"
''''    xlHoja1.Range("K13:K32").NumberFormat = "###,###,##0"
''''
''''    'Datos
''''    xlHoja1.Cells(13, 3) = 0
''''    xlHoja1.Cells(13, 4) = 0
''''    xlHoja1.Cells(13, 5) = lnNumCueVigAhoSol
''''    xlHoja1.Cells(13, 6) = lnMonCueVigAhoSol
''''    xlHoja1.Cells(13, 7) = lnNumCueVigPFSol
''''    xlHoja1.Cells(13, 8) = lnMonCueVigPFSol
''''    xlHoja1.Cells(13, 9) = (lnNumCueVigAhoSol + lnNumCueVigPFSol)
''''    xlHoja1.Cells(13, 10) = (lnMonCueVigAhoSol + lnMonCueVigPFSol)
''''    xlHoja1.Cells(13, 11) = 0
''''
''''    xlHoja1.Cells(14, 3) = 0
''''    xlHoja1.Cells(14, 4) = 0
''''    xlHoja1.Cells(14, 5) = lnNumCueNueAhoSol
''''    xlHoja1.Cells(14, 6) = lnMonCueNueAhoSol
''''    xlHoja1.Cells(14, 7) = lnNumCueNuePFSol
''''    xlHoja1.Cells(14, 8) = lnMonCueNuePFSol
''''    xlHoja1.Cells(14, 9) = (lnNumCueNueAhoSol + lnNumCueNuePFSol)
''''    xlHoja1.Cells(14, 10) = (lnMonCueNueAhoSol + lnMonCueNuePFSol)
''''    xlHoja1.Cells(14, 11) = 0
''''
''''    xlHoja1.Cells(15, 3) = 0
''''    xlHoja1.Cells(15, 4) = 0
''''    xlHoja1.Cells(15, 5) = lnNumCueAbonoAhoSol
''''    xlHoja1.Cells(15, 6) = lnMonCueAbonoAhoSol
''''    xlHoja1.Cells(15, 7) = lnNumCueAbonoPFSol
''''    xlHoja1.Cells(15, 8) = lnMonCueAbonoPFSol
''''    xlHoja1.Cells(15, 9) = (lnNumCueAbonoAhoSol + lnNumCueAbonoPFSol)
''''    xlHoja1.Cells(15, 10) = (lnMonCueAbonoAhoSol + lnMonCueAbonoPFSol)
''''    xlHoja1.Cells(15, 11) = 0
''''
''''    xlHoja1.Cells(16, 3) = 0
''''    xlHoja1.Cells(16, 4) = 0
''''    xlHoja1.Cells(16, 5) = 0
''''    xlHoja1.Cells(16, 6) = lnMonCueIntCapAhoSol
''''    xlHoja1.Cells(16, 7) = 0
''''    xlHoja1.Cells(16, 8) = lnMonCueIntCapPFSol
''''    xlHoja1.Cells(16, 9) = 0
''''    xlHoja1.Cells(16, 10) = (lnMonCueIntCapAhoSol + lnMonCueIntCapPFSol)
''''    xlHoja1.Cells(16, 11) = 0
''''
''''    xlHoja1.Cells(17, 3) = 0
''''    xlHoja1.Cells(17, 4) = 0
''''    xlHoja1.Cells(17, 5) = lnNumCueCanAhoSol
''''    xlHoja1.Cells(17, 6) = lnMonCueCanAhoSol
''''    xlHoja1.Cells(17, 7) = lnNumCueCanPFSol
''''    xlHoja1.Cells(17, 8) = lnMonCueCanPFSol
''''    xlHoja1.Cells(17, 9) = (lnNumCueCanAhoSol + lnNumCueCanPFSol)
''''    xlHoja1.Cells(17, 10) = (lnMonCueCanAhoSol + lnMonCueCanPFSol)
''''    xlHoja1.Cells(17, 11) = 0
''''
''''    xlHoja1.Cells(18, 3) = 0
''''    xlHoja1.Cells(18, 4) = 0
''''    xlHoja1.Cells(18, 5) = lnNumCueRetAhoSol
''''    xlHoja1.Cells(18, 6) = lnMonCueRetAhoSol
''''    xlHoja1.Cells(18, 7) = lnNumCueRetPFSol
''''    xlHoja1.Cells(18, 8) = lnMonCueRetPFSol
''''    xlHoja1.Cells(18, 9) = (lnNumCueRetAhoSol + lnNumCueRetPFSol)
''''    xlHoja1.Cells(18, 10) = (lnMonCueRetAhoSol + lnMonCueRetPFSol)
''''    xlHoja1.Cells(18, 11) = 0
''''
''''
''''    xlHoja1.Cells(20, 3) = 0
''''    xlHoja1.Cells(20, 4) = 0
''''    xlHoja1.Cells(20, 5) = lnTotCueVigAhoSol
''''    xlHoja1.Cells(20, 6) = lnMonTotCueVigAhoSol
''''    xlHoja1.Cells(20, 7) = lnTotCueVigPFSol
''''    xlHoja1.Cells(20, 8) = lnMonTotCueVigPFSol
''''    xlHoja1.Cells(20, 9) = (lnTotCueVigAhoSol + lnTotCueVigPFSol)
''''    xlHoja1.Cells(20, 10) = (lnMonTotCueVigAhoSol + lnMonTotCueVigPFSol)
''''    xlHoja1.Cells(20, 11) = 0
''''
''''    xlHoja1.Cells(23, 3) = 0
''''    xlHoja1.Cells(23, 4) = 0
''''    xlHoja1.Cells(23, 5) = lnNumCueVigAhoDol
''''    xlHoja1.Cells(23, 6) = lnMonCueVigAhoDol
''''    xlHoja1.Cells(23, 7) = lnNumCueVigPFDol
''''    xlHoja1.Cells(23, 8) = lnMonCueVigPFDol
''''    xlHoja1.Cells(23, 9) = (lnNumCueVigAhoDol + lnNumCueVigPFDol)
''''    xlHoja1.Cells(23, 10) = (lnMonCueVigAhoDol + lnMonCueVigPFDol)
''''    xlHoja1.Cells(23, 11) = 0
''''
''''    xlHoja1.Cells(24, 3) = 0
''''    xlHoja1.Cells(24, 4) = 0
''''    xlHoja1.Cells(24, 5) = lnNumCueNueAhoDol
''''    xlHoja1.Cells(24, 6) = lnMonCueNueAhoDol
''''    xlHoja1.Cells(24, 7) = lnNumCueNuePFDol
''''    xlHoja1.Cells(24, 8) = lnMonCueNuePFDol
''''    xlHoja1.Cells(24, 9) = (lnNumCueNueAhoDol + lnNumCueNuePFDol)
''''    xlHoja1.Cells(24, 10) = (lnMonCueNueAhoDol + lnMonCueNuePFDol)
''''    xlHoja1.Cells(24, 11) = 0
''''
''''    xlHoja1.Cells(25, 3) = 0
''''    xlHoja1.Cells(25, 4) = 0
''''    xlHoja1.Cells(25, 5) = lnNumCueAbonoAhoDol
''''    xlHoja1.Cells(25, 6) = lnMonCueAbonoAhoDol
''''    xlHoja1.Cells(25, 7) = lnNumCueAbonoPFDol
''''    xlHoja1.Cells(25, 8) = lnMonCueAbonoPFDol
''''    xlHoja1.Cells(25, 9) = (lnNumCueAbonoAhoDol + lnNumCueAbonoPFDol)
''''    xlHoja1.Cells(25, 10) = (lnMonCueAbonoAhoDol + lnMonCueAbonoPFDol)
''''    xlHoja1.Cells(25, 11) = 0
''''
''''    xlHoja1.Cells(26, 3) = 0
''''    xlHoja1.Cells(26, 4) = 0
''''    xlHoja1.Cells(26, 5) = 0
''''    xlHoja1.Cells(26, 6) = lnMonCueIntCapAhoDol
''''    xlHoja1.Cells(26, 7) = 0
''''    xlHoja1.Cells(26, 8) = lnMonCueIntCapPFDol
''''    xlHoja1.Cells(26, 9) = 0
''''    xlHoja1.Cells(26, 10) = (lnMonCueIntCapAhoDol + lnMonCueIntCapPFDol)
''''    xlHoja1.Cells(26, 11) = 0
''''
''''    xlHoja1.Cells(27, 3) = 0
''''    xlHoja1.Cells(27, 4) = 0
''''    xlHoja1.Cells(27, 5) = lnNumCueCanAhoDol
''''    xlHoja1.Cells(27, 6) = lnMonCueCanAhoDol
''''    xlHoja1.Cells(27, 7) = lnNumCueCanPFDol
''''    xlHoja1.Cells(27, 8) = lnMonCueCanPFDol
''''    xlHoja1.Cells(27, 9) = (lnNumCueCanAhoDol + lnNumCueCanPFDol)
''''    xlHoja1.Cells(27, 10) = (lnMonCueCanAhoDol + lnMonCueCanPFDol)
''''    xlHoja1.Cells(27, 11) = 0
''''
''''    xlHoja1.Cells(28, 3) = 0
''''    xlHoja1.Cells(28, 4) = 0
''''    xlHoja1.Cells(28, 5) = lnNumCueRetAhoDol
''''    xlHoja1.Cells(28, 6) = lnMonCueRetAhoDol
''''    xlHoja1.Cells(28, 7) = lnNumCueRetPFDol
''''    xlHoja1.Cells(28, 8) = lnMonCueRetPFDol
''''    xlHoja1.Cells(28, 9) = (lnNumCueRetAhoDol + lnNumCueRetPFDol)
''''    xlHoja1.Cells(28, 10) = (lnMonCueRetAhoDol + lnMonCueRetPFDol)
''''    xlHoja1.Cells(28, 11) = 0
''''
''''    xlHoja1.Cells(30, 3) = 0
''''    xlHoja1.Cells(30, 4) = 0
''''    xlHoja1.Cells(30, 5) = lnTotCueVigAhoDol
''''    xlHoja1.Cells(30, 6) = lnMonTotCueVigAhoDol
''''    xlHoja1.Cells(30, 7) = lnTotCueVigPFDol
''''    xlHoja1.Cells(30, 8) = lnMonTotCueVigPFDol
''''    xlHoja1.Cells(30, 9) = (lnTotCueVigAhoDol + lnTotCueVigPFDol)
''''    xlHoja1.Cells(30, 10) = (lnMonTotCueVigAhoDol + lnMonTotCueVigPFDol)
''''    xlHoja1.Cells(30, 11) = 0
''''
''''    For i = 99 To 107
''''        xlHoja1.Range(UCase(Chr(i)) & "32:" & UCase(Chr(i)) & "32").Formula = "=+" & UCase(Chr(i)) & "20+" & UCase(Chr(i)) & "30"
''''    Next
''''
''''    'Firmas
''''
''''    'Contador
''''    xlHoja1.Range("D38:F38").MergeCells = True
''''    xlHoja1.Range("D39:F39").MergeCells = True
''''    xlHoja1.Range("D40:F40").MergeCells = True
''''
''''    'Hecho Por
''''    xlHoja1.Range("H38:J38").MergeCells = True
''''    xlHoja1.Range("H39:J39").MergeCells = True
''''
''''    xlHoja1.Cells(39, 2) = "GERENTE GENERAL"
''''    xlHoja1.Cells(39, 4) = "CONTADOR GENERAL"
''''    xlHoja1.Cells(39, 8) = "HECHO POR"
''''    xlHoja1.Cells(40, 4) = "MATRICULA NRO.   "
''''
''''    xlHoja1.Range("A38:K40").HorizontalAlignment = xlCenter
''''
''''    With xlHoja1.Range("B38:B38").Borders(xlEdgeBottom)
''''        .LineStyle = xlContinuous
''''        .Weight = xlThin
''''        .ColorIndex = xlAutomatic
''''    End With
''''
''''    With xlHoja1.Range("D38:F38").Borders(xlEdgeBottom)
''''        .LineStyle = xlContinuous
''''        .Weight = xlThin
''''        .ColorIndex = xlAutomatic
''''    End With
''''
''''    With xlHoja1.Range("H38:J38").Borders(xlEdgeBottom)
''''        .LineStyle = xlContinuous
''''        .Weight = xlThin
''''        .ColorIndex = xlAutomatic
''''    End With
''''
''''    xlHoja1.Cells.Select
''''    xlHoja1.Cells.Font.Name = "Arial"
''''    xlHoja1.Cells.Font.Size = 8
''''    xlHoja1.Cells.EntireColumn.AutoFit
''''
''''End Sub
'''''' Fin Excel
''''
''''''' Inicio excel
''''

'Agregado 09.02.2005

''' Excel
Public Sub ImprimeAnx11xls(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal dfecha As Date, ByVal sLstage As ListBox, ByVal ntxtTipCamFijAnt1 As Double, ByVal ntxtTipCamFij1 As Double, ByVal ntxtTipCamCompraSBS1 As Double, ByVal ntxtTipCamVentaSBS1 As Double)

    Dim I As Integer
    
    Dim lbLibroOpen As Boolean
    Dim lsArchivo As String
    Dim lbHojaOpen As Boolean

    lsArchivo = "Anexo11_" & Format(gdFecSis, "YYYYMMdd") & "_" & Format(Time, "Short Time") & ".xls"
    lsArchivo = Replace(lsArchivo, ":", "_")
     
    lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)
      
    Dim lsCadena As String
    Dim lsCadCon As String
    Dim lsCad As String
     
    For I = 0 To sLstage.ListCount - 1
        If sLstage.Selected(I) Then
            If Right(sLstage.List(I), 5) = "ONSOL" Then
                GetAnx11MovimientoMontoNumeroxls xlAplicacion, xlLibro, pnbitcentral_, dfecha, ntxtTipCamFijAnt1, ntxtTipCamFij1, ntxtTipCamCompraSBS1, ntxtTipCamVentaSBS1, True
            Else
                GetAnx11MovimientoMontoNumeroxls xlAplicacion, xlLibro, pnbitcentral_, dfecha, ntxtTipCamFijAnt1, ntxtTipCamFij1, ntxtTipCamCompraSBS1, ntxtTipCamVentaSBS1, False, Right(sLstage.List(I), 5)
            End If
        End If
    Next I
     
    ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1
    
    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"
    
    CargaArchivo lsArchivo, App.path & "\Spooler"

End Sub

Public Sub GetAnx11MovimientoMontoNumeroxls(xlAplicacion As Excel.Application, _
                  xlLibro As Excel.Workbook, ByVal pnbitcentral_ As Boolean, ByVal dfecha As Date, _
            ByVal nTxtTipCamFijAnt As Double, ntxtTipCamFij As Double, ByVal ntxtTipCamCompraSBS As Double, ByVal ntxtTipCamVentaSBS As Double, _
            ByVal bConsol As Boolean, Optional sCodAge As String = "", _
            Optional sNomAge As String = "")

    Dim lsHoja As String
    Dim I As Integer
    Dim nTemp As Integer
    
    Dim lsNombreAge As String
    Dim lsFechaIni As String
    Dim lsFechaFin As String
    Dim lsFechaAnt As String
   
    Dim ldFechaIni As Date
    Dim ldFechaFin As Date
    Dim ldFechaAnt As Date
    
    Dim lsMes As String
    Dim lsDia As String
    Dim lsAño As String

    Dim lsNumAho As String * 11
    Dim lsMonAho As String * 17
    Dim lsNumPF As String * 11
    Dim lsMonPF As String * 17
    Dim lsNumT As String * 11
    Dim lsMonT As String * 17
    
    Dim oCap As nCapDefinicion
    Dim oConConsol As DConecta
    Dim oCapDef As New nCapDefinicion 'FRHU 20140107
    Dim rs As New ADODB.Recordset 'FRHU 20140107
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    ''VARIABLES PARA EL CALCULO
''* Proceso de Calculo previo a la Generacion del Reporte
    Dim lnNumCueVigAhoSol As Long
    Dim lnNumCueVigPFSol As Long
    Dim lnMonCueVigAhoSol As Currency
    Dim lnMonCueVigPFSol As Currency
    
    Dim lnNumCueNueAhoSol As Long
    Dim lnNumCueNuePFSol As Long
    Dim lnMonCueNueAhoSol As Currency
    Dim lnMonCueNuePFSol As Currency
    
    Dim lnNumCueAbonoAhoSol As Long
    Dim lnMonCueAbonoAhoSol As Currency
    Dim lnNumCueAbonoPFSol As Long
    Dim lnMonCueAbonoPFSol As Currency
    
    Dim lnMonCueIntCapAhoSol As Currency
    Dim lnMonCueIntCapPFSol As Currency
    
    Dim lnNumCueCanAhoSol As Long
    Dim lnMonCueCanAhoSol As Currency
    Dim lnNumCueCanPFSol As Long
    Dim lnMonCueCanPFSol As Currency
    
    Dim lnNumCueRetAhoSol As Long
    Dim lnMonCueRetAhoSol As Currency
    Dim lnNumCueRetPFSol As Long
    Dim lnMonCueRetPFSol As Currency
    
    Dim lnNumCueCargoAhoSol As Long
    Dim lnMonCueCargoAhoSol As Currency
    Dim lnNumCueCargoPFSol As Long
    Dim lnMonCueCargoPFSol As Currency
    
    Dim lnTotCueVigAhoSol As Long
    Dim lnTotCueVigPFSol As Long
    Dim lnMonTotCueVigAhoSol As Currency
    Dim lnMonTotCueVigPFSol As Currency
    
    Dim lnNumCueVigAhoDol As Long
    Dim lnNumCueVigPFDol As Long
    Dim lnMonCueVigAhoDol As Currency
    Dim lnMonCueVigPFDol As Currency
    
    Dim lnNumCueVigAhoDolNuevo As Long
    Dim lnNumCueVigPFDolNuevo As Long
    Dim lnMonCueVigAhoDolNuevo As Currency
    Dim lnMonCueVigPFDolNuevo As Currency
    
    Dim lnNumCueVigAhoSolNuevo As Long
    Dim lnNumCueVigPFSolNuevo As Long
    Dim lnMonCueVigAhoSolNuevo As Currency
    Dim lnMonCueVigPFSolNuevo As Currency
    
    Dim lnNumCueNueAhoDol As Long
    Dim lnNumCueNuePFDol As Long
    Dim lnMonCueNueAhoDol As Currency
    Dim lnMonCueNuePFDol As Currency
    
    Dim lnNumCueAbonoAhoDol As Long
    Dim lnMonCueAbonoAhoDol As Currency
    Dim lnNumCueAbonoPFDol As Long
    Dim lnMonCueAbonoPFDol As Currency
    
    Dim lnMonCueIntCapAhoDol As Currency
    Dim lnMonCueIntCapPFDol As Currency
    
    Dim lnNumCueCanAhoDol As Long
    Dim lnMonCueCanAhoDol As Currency
    Dim lnNumCueCanPFDol As Long
    Dim lnMonCueCanPFDol As Currency
    
    Dim lnNumCueRetAhoDol As Long
    Dim lnMonCueRetAhoDol As Currency
    Dim lnNumCueRetPFDol As Long
    Dim lnMonCueRetPFDol As Currency
    
    Dim lnNumCueCargoAhoDol As Long
    Dim lnMonCueCargoAhoDol As Currency
    Dim lnNumCueCargoPFDol As Long
    Dim lnMonCueCargoPFDol As Currency
    
    
    Dim lnTotCueVigAhoDol As Long
    Dim lnTotCueVigPFDol As Long
    Dim lnMonTotCueVigAhoDol As Currency
    Dim lnMonTotCueVigPFDol As Currency
    
    Dim lnMonTotCueVigAhoDolVVV As Currency
    Dim lnMonTotCueVigPFDolVVV As Currency

   Dim lnMontoGarantia As Currency
   
   Dim lnMontoRestrinMN As Currency
   Dim lnMontoRestrinME As Currency
   
   Dim lnInteresRestrinMN As Currency
   Dim lnInteresRestrinME As Currency
   
   Dim lnCantidadRestrinMN As Currency
   Dim lnCantidadRestrinME As Currency
   
   Dim lnMontoRestrinMN_MA As Currency
   Dim lnMontoRestrinME_MA As Currency
   
   Dim lnInteresRestrinMN_MA As Currency
   Dim lnInteresRestrinME_MA As Currency
   
   Dim lnCantidadRestrinMN_MA As Currency
   Dim lnCantidadRestrinME_MA As Currency
   
   Dim oRS As ADODB.Recordset
   Set oRS = New ADODB.Recordset
   
   Dim oCapDefinicion As nCapDefinicion
   Set oCapDefinicion = New nCapDefinicion
   
   
   
   Dim lnMax As Integer
   Dim nFila As Integer
   nFila = 0
    
    sCodAge = Trim(sCodAge)
    
    lnMax = 5
    
    If bConsol Then
        lsNombreAge = "CONSOLIDADO"
        lsHoja = "CONSOLIDADO"
    Else
        If sNomAge <> "" Then
        Else
            sNomAge = GetNombreAgencia(Right(sCodAge, 2))
        End If
        lsNombreAge = sNomAge
        lsHoja = "AGENCIA_" & Right(sCodAge, 2)
    End If
    
    lsMes = Mid(Trim(dfecha), 4, 2)
    lsDia = "01"
    lsAño = Mid(Trim(dfecha), 7, 4)
    
    ldFechaIni = CDate(lsDia & "/" & lsMes & "/" & lsAño)
    ldFechaAnt = DateAdd("d", -1, ldFechaIni)
    
    ' Ojooooooooooooooo
        ' En el centralizado se quita un dia por que en la clase lo suma
        ' En el distribuido no se quita nada
    
        If gbBitCentral = True Then
            ldFechaFin = DateAdd("d", -1, DateAdd("m", 1, ldFechaIni))
        Else
            ldFechaFin = DateAdd("m", 1, ldFechaIni)
        End If
    
    ' Ojooooooooooooooo
    
    lsFechaIni = Format(ldFechaIni, "mm/dd/yyyy")
    lsFechaFin = Format(ldFechaFin, "mm/dd/yyyy")
    lsFechaAnt = Format(ldFechaAnt, "mm/dd/yyyy")
    
    Set oRS = oCapDefinicion.ObtenerDatosAhorrosRestringidos("1", Format(ldFechaFin, "YYYYMMDD"))
   If Not (oRS.BOF Or oRS.EOF) Then
        lnMontoRestrinMN = oRS!nSaldoCapital
        lnInteresRestrinMN = oRS!nSaldoInteres
        lnCantidadRestrinMN = oRS!nCantidad
   End If
   Set oRS = Nothing
   
   Set oRS = New ADODB.Recordset
   Set oRS = oCapDefinicion.ObtenerDatosAhorrosRestringidos("2", Format(ldFechaFin, "YYYYMMDD"))
   If Not (oRS.BOF Or oRS.EOF) Then
        lnMontoRestrinME = Round(oRS!nSaldoCapital * ntxtTipCamFij, 2)
        lnInteresRestrinME = Round(oRS!nSaldoInteres * ntxtTipCamFij, 2)
        lnCantidadRestrinME = oRS!nCantidad
   End If
   Set oRS = Nothing
   Set oRS = New ADODB.Recordset
   
   Set oRS = oCapDefinicion.ObtenerDatosAhorrosRestringidos("1", Format(ldFechaAnt, "YYYYMMDD"))
   If Not (oRS.BOF Or oRS.EOF) Then
        lnMontoRestrinMN_MA = Round(oRS!nSaldoCapital)
        lnInteresRestrinMN_MA = Round(oRS!nSaldoInteres)
        lnCantidadRestrinMN_MA = oRS!nCantidad
   End If
   Set oRS = Nothing
   Set oRS = New ADODB.Recordset

   Set oRS = oCapDefinicion.ObtenerDatosAhorrosRestringidos("2", Format(ldFechaAnt, "YYYYMMDD"))
   If Not (oRS.BOF Or oRS.EOF) Then
        lnMontoRestrinME_MA = Round(oRS!nSaldoCapital * ntxtTipCamFij, 2)
        lnInteresRestrinME_MA = Round(oRS!nSaldoInteres * ntxtTipCamFij, 2)
        lnCantidadRestrinME_MA = oRS!nCantidad
   End If
   Set oRS = Nothing
   Set oRS = New ADODB.Recordset
    If pnbitcentral_ = True Then
        ''Calculo Soles
        Dim oSdo As New NCtasaldo
        Set oCap = New nCapDefinicion
   
        If Month(ldFechaIni) = 1 And Year(ldFechaIni) = 2005 Then
            lnNumCueVigAhoSol = 11037
            lnMonCueVigAhoSol = 14544212.22
            lnNumCueVigPFSol = 3926
            lnMonCueVigPFSol = 26633338.93
        Else
            'Inicial de Saldo Contable
            lnMonCueVigAhoSol = oSdo.GetCtaSaldo("21_2%", lsFechaAnt, True) + oSdo.GetCtaSaldo("23_2%", lsFechaAnt, True)
            lnMonCueVigPFSol = oSdo.GetCtaSaldo("21_3%", lsFechaAnt, True) + oSdo.GetCtaSaldo("21_7%", lsFechaAnt, True)
            lnNumCueVigAhoSol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaNacional, gCapAhorros, lnMonCueVigAhoSol, bConsol, sCodAge)
            lnNumCueVigPFSol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaNacional, gCapPlazoFijo, lnMonCueVigPFSol, bConsol, sCodAge)
            'JEOM------
            lnMonCueVigAhoSol = oSdo.GetCtaSaldo("2112%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2312%", lsFechaAnt, True)
            lnMonCueVigPFSol = oSdo.GetCtaSaldo("2113%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2117%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2313%", lsFechaAnt, True)
            'FIN------
        
            lnNumCueVigAhoSolNuevo = oCap.CuentasCapVigentes(ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueVigAhoSolNuevo, bConsol, sCodAge)
            lnNumCueVigPFSolNuevo = oCap.CuentasCapVigentes(ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueVigPFSolNuevo, bConsol, sCodAge)
        End If
        
        'Cuentas Nuevas: Cantidad y Monto
        lnNumCueNueAhoSol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueNueAhoSol, bConsol, sCodAge)
        lnNumCueNuePFSol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueNuePFSol, bConsol, sCodAge)
        
        'Abonos: Monto
        oCap.CuentasCapAbono ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueAbonoAhoSol, bConsol, sCodAge
        oCap.CuentasCapAbono ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueAbonoPFSol, bConsol, sCodAge
        
        'Intereses Capitalizados: Monto
        lnMonCueIntCapAhoSol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, bConsol, sCodAge)
        lnMonCueIntCapPFSol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, bConsol, sCodAge)
        
        'Cuentas Canceladas: Cantidad y Monto
        lnNumCueCanAhoSol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueCanAhoSol, bConsol, sCodAge)
        lnNumCueCanPFSol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueCanPFSol, bConsol, sCodAge)
        
        'Retiros: Monto
        oCap.CuentasCapRetiro ldFechaIni, ldFechaFin, gMonedaNacional, gCapAhorros, lnMonCueRetAhoSol, bConsol, sCodAge
        oCap.CuentasCapRetiro ldFechaIni, ldFechaFin, gMonedaNacional, gCapPlazoFijo, lnMonCueRetPFSol, bConsol, sCodAge
                
        lnMonCueCanAhoSol = lnMonCueCanAhoSol - (lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol + lnMonCueCanAhoSol + lnMonCueRetAhoSol - lnMonCueVigAhoSolNuevo)
        lnMonCueCanPFSol = lnMonCueCanPFSol - (lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol + lnMonCueCanPFSol + lnMonCueRetPFSol - lnMonCueVigPFSolNuevo)
        
        lnNumCueCanAhoSol = lnNumCueCanAhoSol + lnNumCueVigAhoSol + lnNumCueNueAhoSol - lnNumCueCanAhoSol - lnNumCueVigAhoSolNuevo
        lnNumCueCanPFSol = lnNumCueCanPFSol + lnNumCueVigPFSol + lnNumCueNuePFSol - lnNumCueCanPFSol - lnNumCueVigPFSolNuevo
        
        '*'
        lnTotCueVigAhoSol = lnNumCueVigAhoSol + lnNumCueNueAhoSol - lnNumCueCanAhoSol
        lnTotCueVigPFSol = lnNumCueVigPFSol + lnNumCueNuePFSol - lnNumCueCanPFSol
        lnMonTotCueVigAhoSol = lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol + lnMonCueCanAhoSol + lnMonCueRetAhoSol
        lnMonTotCueVigPFSol = lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol + lnMonCueCanPFSol + lnMonCueRetPFSol
        '*'
        
        'Calculo Dolares
        
        If Month(ldFechaIni) = 1 And Year(ldFechaIni) = 2005 Then
            lnNumCueVigAhoDol = 3568
            lnMonCueVigAhoDol = 9526133.05
            lnNumCueVigPFDol = 1934
            lnMonCueVigPFDol = 20414396.93
        Else
            'Inicial de Saldo Contable
'            lnMonCueVigAhoDol = (oSdo.GetCtaSaldo("2122%", lsFechaAnt, True) / ntxtTipCamFij) * nTxtTipCamFijAnt
'            lnMonCueVigPFDol = ((oSdo.GetCtaSaldo("2123%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2127%", lsFechaAnt, True)) / ntxtTipCamFij) * nTxtTipCamFijAnt
'            lnNumCueVigAhoDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapAhorros, lnMonCueVigAhoDol, bConsol, sCodAge)
'            lnNumCueVigPFDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapPlazoFijo, lnMonCueVigPFDol, bConsol, sCodAge)

            lnNumCueVigAhoDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapAhorros, lnMonCueVigAhoDol, bConsol, sCodAge)
            lnNumCueVigPFDol = oCap.CuentasCapVigentes(ldFechaAnt, gMonedaExtranjera, gCapPlazoFijo, lnMonCueVigPFDol, bConsol, sCodAge)
            lnMonCueVigAhoDol = lnMonCueVigAhoDol * nTxtTipCamFijAnt
            lnMonCueVigPFDol = lnMonCueVigPFDol * nTxtTipCamFijAnt

'JEOM---------
             lnMonCueVigAhoDol = oSdo.GetCtaSaldo("2122%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2322%", lsFechaAnt, True)
             lnMonCueVigPFDol = oSdo.GetCtaSaldo("2123%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2127%", lsFechaAnt, True) + oSdo.GetCtaSaldo("2323%", lsFechaAnt, True) 'se agrego la 2323 by gitu 15/04/2008
'FIN ----------
            
            lnNumCueVigAhoDolNuevo = oCap.CuentasCapVigentes(ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueVigAhoDolNuevo, bConsol, sCodAge)
            lnNumCueVigPFDolNuevo = oCap.CuentasCapVigentes(ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueVigPFDolNuevo, bConsol, sCodAge)
            lnMonCueVigAhoDolNuevo = lnMonCueVigAhoDolNuevo * ntxtTipCamFij
            lnMonCueVigPFDolNuevo = lnMonCueVigPFDolNuevo * ntxtTipCamFij
        End If
         
        Dim nAjusteAhoTC As Currency
        Dim nAjustePFTC  As Currency
        
        lnNumCueNueAhoDol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueNueAhoDol, bConsol, sCodAge, ntxtTipCamFij)
        lnNumCueNuePFDol = oCap.CuentasCapApertura(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueNuePFDol, bConsol, sCodAge, ntxtTipCamFij)
        
        oCap.CuentasCapAbono ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueAbonoAhoDol, bConsol, sCodAge, ntxtTipCamFij
        oCap.CuentasCapAbono ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueAbonoPFDol, bConsol, sCodAge, ntxtTipCamFij
        
        lnMonCueIntCapAhoDol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, bConsol, sCodAge, ntxtTipCamFij)
        lnMonCueIntCapPFDol = oCap.CuentasCapIntCapitalizado(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, bConsol, sCodAge, ntxtTipCamFij)
        
        lnNumCueCanAhoDol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueCanAhoDol, bConsol, sCodAge, ntxtTipCamFij)
        lnNumCueCanPFDol = oCap.CuentasCapCancelada(ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueCanPFDol, bConsol, sCodAge, ntxtTipCamFij)
 
        oCap.CuentasCapRetiro ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonCueRetAhoDol, bConsol, sCodAge, ntxtTipCamFij
        oCap.CuentasCapRetiro ldFechaIni, ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonCueRetPFDol, bConsol, sCodAge, ntxtTipCamFij
        
        
'        nAjusteAhoTC = Round(lnMonCueVigAhoDol * ntxtTipCamFij / nTxtTipCamFijAnt, 2) - lnMonCueVigAhoDol
'        nAjustePFTC = Round(lnMonCueVigPFDol * ntxtTipCamFij / nTxtTipCamFijAnt, 2) - lnMonCueVigPFDol
'
'        If nAjusteAhoTC > 0 Then
'           lnMonCueAbonoAhoDol = lnMonCueAbonoAhoDol + nAjusteAhoTC
'        End If
'        If nAjustePFTC > 0 Then
'           lnMonCueAbonoPFDol = lnMonCueAbonoPFDol + nAjustePFTC
'        End If
'
'        If nAjusteAhoTC < 0 Then
'           lnMonCueRetAhoDol = lnMonCueRetAhoDol - nAjusteAhoTC
'        End If
'        If nAjustePFTC < 0 Then
'           lnMonCueRetPFDol = lnMonCueRetPFDol - nAjustePFTC
'        End If
        '*'
        lnMonCueCanAhoDol = lnMonCueCanAhoDol - (lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol + lnMonCueCanAhoDol + lnMonCueRetAhoDol - lnMonCueVigAhoDolNuevo)
        lnMonCueCanPFDol = lnMonCueCanPFDol - (lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol + lnMonCueCanPFDol + lnMonCueRetPFDol - lnMonCueVigPFDolNuevo)
        
        lnNumCueCanAhoDol = lnNumCueCanAhoDol + lnNumCueVigAhoDol + lnNumCueNueAhoDol - lnNumCueCanAhoDol - lnNumCueVigAhoDolNuevo
        lnNumCueCanPFDol = lnNumCueCanPFDol + lnNumCueVigPFDol + lnNumCueNuePFDol - lnNumCueCanPFDol - lnNumCueVigPFDolNuevo
        
        
        lnTotCueVigAhoDol = lnNumCueVigAhoDol + lnNumCueNueAhoDol - lnNumCueCanAhoDol - lnNumCueRetAhoDol
        lnTotCueVigPFDol = lnNumCueVigPFDol + lnNumCueNuePFDol - lnNumCueCanPFDol
        lnMonTotCueVigAhoDol = lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol + lnMonCueCanAhoDol + lnMonCueRetAhoDol
        lnMonTotCueVigPFDol = lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol + lnMonCueCanPFDol + lnMonCueRetPFDol
        '*'
        
        'Cantidades Finales
        '*'lnTotCueVigAhoDol = oCap.CuentasCapVigentes(ldFechaFin, gMonedaExtranjera, gCapAhorros, lnMonTotCueVigAhoDol, bConsol, sCodAge)
        '*'lnTotCueVigPFDol = oCap.CuentasCapVigentes(ldFechaFin, gMonedaExtranjera, gCapPlazoFijo, lnMonTotCueVigPFDol, bConsol, sCodAge)
        
        'Ajuste de Cantidades
        'Ajuste de Catidades
        '*'lnNumCueNueAhoDol = lnNumCueNueAhoDol + (lnTotCueVigAhoDol - (lnNumCueVigAhoDol + lnNumCueNueAhoDol - lnNumCueCanAhoDol))
        '*'lnNumCueNuePFDol = lnNumCueNuePFDol + (lnTotCueVigPFDol - (lnNumCueVigPFDol + lnNumCueNuePFDol - lnNumCueCanPFDol))
        
        '*'lnMonTotCueVigAhoDol = oSdo.GetCtaSaldo("2122%", lsFechaFin)
        '*'lnMonTotCueVigPFDol = oSdo.GetCtaSaldo("2123%", lsFechaFin) + oSdo.GetCtaSaldo("2127%", lsFechaFin)
        '-Cargos Aho
        '*'lnMonCueCargoAhoDol = lnMonTotCueVigAhoDol - (lnMonCueVigAhoDol + lnMonCueNueAhoDol + lnMonCueAbonoAhoDol + lnMonCueIntCapAhoDol - lnMonCueCanAhoDol - lnMonCueRetAhoDol)
        '*'If lnMonCueCargoAhoDol < 0 Then
        '*'    lnMonCueCargoAhoDol = lnMonCueCargoAhoDol * -1
        '*'Else
        '*'    lnMonCueAbonoAhoDol = lnMonCueAbonoAhoDol + lnMonCueCargoAhoDol
        '*'    lnMonCueRetAhoDol = lnMonCueRetAhoDol - lnMonCueCargoAhoDol
        '*'End If
        'Cuadre PF
        '*'lnMonCueCargoPFDol = lnMonTotCueVigPFDol - (lnMonCueVigPFDol + lnMonCueNuePFDol + lnMonCueAbonoPFDol + lnMonCueIntCapPFDol - lnMonCueCanPFDol - lnMonCueRetPFDol)
        '*'lnMonCueNuePFDol = lnMonCueNuePFDol + lnMonCueCargoPFDol
        '*'lnMonCueCargoPFDol = 0

        '--------------
    Else
       'Calculo Soles
       lnNumCueVigAhoSol = CuentasVigentesAho(lsFechaAnt, lsFechaIni, "1", lnMonCueVigAhoSol, bConsol, sCodAge)
       If sCodAge = "11201" Or bConsol Then
           lnMonCueVigAhoSol = lnMonCueVigAhoSol + CCur(ReadVarSisTempo("AHO", "nMonCtaAddMDMN"))
           lnNumCueVigAhoSol = lnNumCueVigAhoSol + CCur(ReadVarSisTempo("AHO", "nNumCtaAddMDMN"))
       End If
       lnNumCueVigPFSol = CuentasVigentesPF(lsFechaAnt, lsFechaIni, "1", lnMonCueVigPFSol, bConsol, sCodAge)
       
       lnNumCueNueAhoSol = CuentasApeAho(lsFechaIni, lsFechaFin, "1", lnMonCueNueAhoSol, bConsol, sCodAge)
       lnNumCueNuePFSol = CuentasApePF(lsFechaIni, lsFechaFin, "1", lnMonCueNuePFSol, bConsol, sCodAge)
       
       lnNumCueAbonoAhoSol = CuentasAbonoAho(lsFechaIni, lsFechaFin, "1", lnMonCueAbonoAhoSol, bConsol, sCodAge)
       lnNumCueAbonoPFSol = CuentasAbonoPF(lsFechaIni, lsFechaFin, "1", lnMonCueAbonoPFSol, bConsol, sCodAge)
       
       lnMonCueIntCapAhoSol = CuentasIntCapAho(lsFechaIni, lsFechaFin, "1", bConsol, sCodAge)
       lnMonCueIntCapPFSol = CuentasIntCapPF(lsFechaIni, lsFechaFin, "1", bConsol, sCodAge)
       
       lnNumCueCanAhoSol = CuentasCanceladaAho(lsFechaIni, lsFechaFin, "1", lnMonCueCanAhoSol, bConsol, sCodAge) * -1
       lnNumCueCanPFSol = CuentasCanceladaPF(lsFechaIni, lsFechaFin, "1", lnMonCueCanPFSol, bConsol, sCodAge) * -1
       
       lnNumCueRetAhoSol = CuentasRetAho(lsFechaIni, lsFechaFin, "1", lnMonCueRetAhoSol, bConsol, sCodAge)
       lnNumCueRetPFSol = CuentasRetPF(lsFechaIni, lsFechaFin, "1", lnMonCueRetPFSol, bConsol, sCodAge)
    
       lnTotCueVigAhoSol = lnNumCueVigAhoSol + lnNumCueNueAhoSol + lnNumCueCanAhoSol
       lnTotCueVigPFSol = lnNumCueVigPFSol + lnNumCueNuePFSol + lnNumCueCanPFSol
       lnMonTotCueVigAhoSol = lnMonCueVigAhoSol + lnMonCueNueAhoSol + lnMonCueAbonoAhoSol + lnMonCueIntCapAhoSol + lnMonCueCanAhoSol + lnMonCueRetAhoSol
       lnMonTotCueVigPFSol = lnMonCueVigPFSol + lnMonCueNuePFSol + lnMonCueAbonoPFSol + lnMonCueIntCapPFSol + lnMonCueCanPFSol + lnMonCueRetPFSol
       
       'Calculo Dolares
       lnNumCueVigAhoDol = CuentasVigentesAho(lsFechaAnt, lsFechaIni, "2", lnMonCueVigAhoDol, bConsol, sCodAge)
       lnNumCueVigPFDol = CuentasVigentesPF(lsFechaAnt, lsFechaIni, "2", lnMonCueVigPFDol, bConsol, sCodAge)
       
       lnNumCueNueAhoDol = CuentasApeAho(lsFechaIni, lsFechaFin, "2", lnMonCueNueAhoDol, bConsol, sCodAge)
       lnNumCueNuePFDol = CuentasApePF(lsFechaIni, lsFechaFin, "2", lnMonCueNuePFDol, bConsol, sCodAge)
       
       lnNumCueAbonoAhoDol = CuentasAbonoAho(lsFechaIni, lsFechaFin, "2", lnMonCueAbonoAhoDol, bConsol, sCodAge)
       lnNumCueAbonoPFDol = CuentasAbonoPF(lsFechaIni, lsFechaFin, "2", lnMonCueAbonoPFDol, bConsol, sCodAge)
       
       lnMonCueIntCapAhoDol = CuentasIntCapAho(lsFechaIni, lsFechaFin, "2", bConsol, sCodAge)
       lnMonCueIntCapPFDol = CuentasIntCapPF(lsFechaIni, lsFechaFin, "2", bConsol, sCodAge)
       
       lnNumCueCanAhoDol = CuentasCanceladaAho(lsFechaIni, lsFechaFin, "2", lnMonCueCanAhoDol, bConsol, sCodAge) * -1
       lnNumCueCanPFDol = CuentasCanceladaPF(lsFechaIni, lsFechaFin, "2", lnMonCueCanPFDol, bConsol, sCodAge) * -1
       
       lnNumCueRetAhoDol = CuentasRetAho(lsFechaIni, lsFechaFin, "2", lnMonCueRetAhoDol, bConsol, sCodAge)
       lnNumCueRetPFDol = CuentasRetPF(lsFechaIni, lsFechaFin, "2", lnMonCueRetPFDol, bConsol, sCodAge)
    End If
    
    'multiplicacion
'    lnMonCueVigAhoDol = Round(lnMonCueVigAhoDol, 2)
'    lnMonCueVigPFDol = Round(lnMonCueVigPFDol, 2)
'
'    lnMonCueNueAhoDol = Round(lnMonCueNueAhoDol, 2)
'    lnMonCueNuePFDol = Round(lnMonCueNuePFDol, 2)
'
'    lnMonCueAbonoAhoDol = Round(lnMonCueAbonoAhoDol, 2)
'
'    lnMonCueIntCapAhoDol = Round(lnMonCueIntCapAhoDol, 2)
'    lnMonCueIntCapPFDol = Round(lnMonCueIntCapPFDol, 2)
'
'    lnMonCueCanAhoDol = Round(lnMonCueCanAhoDol, 2)
'    lnMonCueCanPFDol = Round(lnMonCueCanPFDol, 2)
'
'    lnMonCueRetAhoDol = Round(lnMonCueRetAhoDol, 2)
'    lnMonCueRetPFDol = Round(lnMonCueRetPFDol, 2)
    
'    lnTotCueVigAhoDol = lnNumCueVigAhoDol + lnNumCueNueAhoDol + lnNumCueCanAhoDol
'    lnTotCueVigPFDol = lnNumCueVigPFDol + lnNumCueNuePFDol + lnNumCueCanPFDol
    
    'lnMonCueVigAhoDol = Round(lnMonCueVigAhoDol * (nTxtTipCamFijAnt), 2)
    'lnMonCueVigPFDol = Round(lnMonCueVigPFDol * nTxtTipCamFijAnt, 2)
    
'    lnMonCueNueAhoDol = Round(lnMonCueNueAhoDol * ntxtTipCamFij, 2)
'    lnMonCueNuePFDol = Round(lnMonCueNuePFDol * ntxtTipCamFij, 2)
'
'    lnMonCueAbonoAhoDol = Round(lnMonCueAbonoAhoDol * ntxtTipCamFij, 2)
'    lnMonCueAbonoPFDol = Round(lnMonCueAbonoPFDol * ntxtTipCamFij, 2)
'
'    lnMonCueIntCapAhoDol = Round(lnMonCueIntCapAhoDol * ntxtTipCamFij, 2)
'    lnMonCueIntCapPFDol = Round(lnMonCueIntCapPFDol * ntxtTipCamFij, 2)
'
'    lnMonCueCanAhoDol = Round(lnMonCueCanAhoDol * ntxtTipCamFij, 2)
'    lnMonCueCanPFDol = Round(lnMonCueCanPFDol * ntxtTipCamFij, 2)
'
'    lnMonCueRetAhoDol = Round(lnMonCueRetAhoDol * ntxtTipCamFij, 2)
'    lnMonCueRetPFDol = Round(lnMonCueRetPFDol * ntxtTipCamFij, 2)
    
    
    ExcelAddHoja lsHoja, xlLibro, xlHoja1
    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 90
    xlHoja1.PageSetup.Orientation = xlLandscape
    
    xlHoja1.Cells(1, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
    xlHoja1.Cells(1, 11) = "ANEXO NRO 11"
    
    xlHoja1.Cells(3, 2) = "EMPRESA: " & gsNomCmac
    xlHoja1.Cells(3, 9) = "CODIGO:"
    xlHoja1.Cells(3, 10) = gsCodCMAC
     
    xlHoja1.Cells(5, 1) = "MOVIMIENTO DE LOS DEPOSITOS SEGUN MONTO Y NUMERO DE CUENTAS - " & lsNombreAge
    xlHoja1.Cells(6, 1) = "AL: " & Format$(ldFechaFin, "dd/mm/yyyy")
    '''xlHoja1.Cells(7, 1) = "(En Miles Nuevos Soles)" 'marg ers044-2016
    xlHoja1.Cells(7, 1) = "(En Miles " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'marg ers044-2016
    
    xlHoja1.Cells(9, 3) = "VISTA"
    xlHoja1.Cells(9, 5) = "AHORROS"
    xlHoja1.Cells(9, 7) = "PLAZO"
    xlHoja1.Cells(9, 9) = "TOTAL"
    xlHoja1.Cells(9, 11) = "Nro. de"
    
    xlHoja1.Cells(10, 3) = "Nro. de"
    xlHoja1.Cells(10, 4) = "Monto"
    xlHoja1.Cells(10, 5) = "Nro. de"
    xlHoja1.Cells(10, 6) = "Monto"
    xlHoja1.Cells(10, 7) = "Nro. de"
    xlHoja1.Cells(10, 8) = "Monto"
    xlHoja1.Cells(10, 9) = "Nro. de"
    xlHoja1.Cells(10, 10) = "Monto"
    
    xlHoja1.Cells(10, 11) = "Tarjetas"
    
    xlHoja1.Cells(11, 3) = "Cuentas"
    xlHoja1.Cells(11, 5) = "Cuentas"
    xlHoja1.Cells(11, 7) = "Cuentas"
    xlHoja1.Cells(11, 9) = "Cuentas"
    xlHoja1.Cells(11, 11) = "de Débito"
       
    xlHoja1.Range("A1:C1").MergeCells = True
    xlHoja1.Range("J1:K1").MergeCells = True
    xlHoja1.Range("C3:G3").MergeCells = True
    xlHoja1.Range("A5:K5").MergeCells = True
    xlHoja1.Range("A6:K6").MergeCells = True
    xlHoja1.Range("A7:K7").MergeCells = True
    
    xlHoja1.Range("A9:B11").MergeCells = True
    xlHoja1.Range("C9:D9").MergeCells = True
    xlHoja1.Range("E9:F9").MergeCells = True
    xlHoja1.Range("G9:H9").MergeCells = True
    xlHoja1.Range("I9:J9").MergeCells = True
      
    xlHoja1.Range("A1:K3").HorizontalAlignment = xlLeft
    xlHoja1.Range("A5:K11").HorizontalAlignment = xlCenter
      
    xlHoja1.Range("A1:K11").Font.Bold = True
      
    For I = 1 To 2
        If I = 1 Then
            nTemp = 0
            xlHoja1.Cells(nTemp + 12, 1) = "Moneda Nacional"
        ElseIf I = 2 Then
            nTemp = 10
            xlHoja1.Cells(nTemp + 12, 1) = "Moneda Extranjera"
        End If
        
        xlHoja1.Cells(nTemp + 13, 1) = "Saldo Mes Anterior"
        xlHoja1.Cells(nTemp + 14, 1) = "Mas"
        xlHoja1.Cells(nTemp + 14, 2) = "Cuentas Nuevas"
        xlHoja1.Cells(nTemp + 15, 2) = "Abonos"
        xlHoja1.Cells(nTemp + 16, 2) = "Intereses Capitalizados"
        xlHoja1.Cells(nTemp + 17, 1) = "Menos"
        xlHoja1.Cells(nTemp + 17, 2) = "Cuentas Canceladas"
        xlHoja1.Cells(nTemp + 18, 2) = "Retiros"
        xlHoja1.Cells(nTemp + 19, 2) = "Cargos"
        xlHoja1.Cells(nTemp + 20, 1) = "Saldo a fin de mes"
    
    Next
    
    xlHoja1.Cells(32, 1) = "Total Saldos a Fin de Mes"
    xlHoja1.Cells(33, 1) = "* Consignar una sola vez en moneda nacional en caso que la tarjeta de débito esté asociada a diversas cuentas"
    
    'Titulos
    xlHoja1.Range("A12:B34").Font.Bold = True
    'Monedas
    xlHoja1.Range("A12:A12").Font.Underline = True
    xlHoja1.Range("A23:A23").Font.Underline = True
    
    'Saldos a Fin de Mes
    xlHoja1.Range("A20:B20").MergeCells = True
    xlHoja1.Range("A30:B30").MergeCells = True
    'Saldo General
    xlHoja1.Range("A32:B32").MergeCells = True

    'Comentario
    xlHoja1.Range("A33:K33").MergeCells = True

    'Mas y Menos
    xlHoja1.Range("A14:A16").MergeCells = True
    xlHoja1.Range("A17:A18").MergeCells = True

    'Mas y Menos
    xlHoja1.Range("A24:A26").MergeCells = True
    xlHoja1.Range("A27:A28").MergeCells = True

    'Mas y Menos
    xlHoja1.Range("A14:A14").HorizontalAlignment = xlLeft
    xlHoja1.Range("A17:A17").HorizontalAlignment = xlLeft
    xlHoja1.Range("A14:A14").VerticalAlignment = xlTop
    xlHoja1.Range("A17:A17").VerticalAlignment = xlTop

    xlHoja1.Range("A24:A24").HorizontalAlignment = xlLeft
    xlHoja1.Range("A27:A27").HorizontalAlignment = xlLeft
    xlHoja1.Range("A24:A24").VerticalAlignment = xlTop
    xlHoja1.Range("A27:A27").VerticalAlignment = xlTop
 
    'Titulos
    ExcelCuadro xlHoja1, 1, 9, 10, 11, , True
    ExcelCuadro xlHoja1, 11, 9, 11, 11, False, False
     
    'Borde Gral
    ExcelCuadro xlHoja1, 1, 12, 11, 32, False, False

    'Todo Nacional
    ExcelCuadro xlHoja1, 1, 13, 11, 19, , True
    'Saldos a Fin de Mes
    ExcelCuadro xlHoja1, 1, 20, 11, 20, , True

    'Todo Extranjero
    ExcelCuadro xlHoja1, 1, 23, 11, 29, , True

    'Saldos a Fin de Mes
    ExcelCuadro xlHoja1, 1, 30, 11, 30, , True

    'Total Saldos a fin de Mes
    ExcelCuadro xlHoja1, 1, 32, 11, 32, , True

    xlHoja1.Range("D13:D32").NumberFormat = "###,###,##0.00"
    xlHoja1.Range("F13:F32").NumberFormat = "###,###,##0.00"
    xlHoja1.Range("H13:H32").NumberFormat = "###,###,##0.00"
    xlHoja1.Range("J13:J32").NumberFormat = "###,###,##0.00"
    
    xlHoja1.Range("C13:C32").NumberFormat = "###,###,##0"
    xlHoja1.Range("E13:E32").NumberFormat = "###,###,##0"
    xlHoja1.Range("G13:G32").NumberFormat = "###,###,##0"
    xlHoja1.Range("I13:I32").NumberFormat = "###,###,##0"
    xlHoja1.Range("K13:K32").NumberFormat = "###,###,##0"
     
    'Datos
    xlHoja1.Cells(13, 3) = 0
    xlHoja1.Cells(13, 4) = 0
    xlHoja1.Cells(13, 5) = lnNumCueVigAhoSol - lnCantidadRestrinMN_MA
    xlHoja1.Cells(13, 6) = lnMonCueVigAhoSol
    xlHoja1.Cells(13, 7) = lnNumCueVigPFSol + lnCantidadRestrinMN_MA
    xlHoja1.Cells(13, 8) = lnMonCueVigPFSol
    xlHoja1.Cells(13, 9) = (lnNumCueVigAhoSol + lnNumCueVigPFSol)
    xlHoja1.Cells(13, 10) = (lnMonCueVigAhoSol + lnMonCueVigPFSol)
    xlHoja1.Cells(13, 11) = 0
        
    xlHoja1.Cells(14, 3) = 0
    xlHoja1.Cells(14, 4) = 0
    xlHoja1.Cells(14, 5) = lnNumCueNueAhoSol
    xlHoja1.Cells(14, 6) = lnMonCueNueAhoSol
    xlHoja1.Cells(14, 7) = lnNumCueNuePFSol
    xlHoja1.Cells(14, 8) = lnMonCueNuePFSol
    xlHoja1.Cells(14, 9) = (lnNumCueNueAhoSol + lnNumCueNuePFSol)
    xlHoja1.Cells(14, 10) = (lnMonCueNueAhoSol + lnMonCueNuePFSol)
    xlHoja1.Cells(14, 11) = 0

    xlHoja1.Cells(15, 3) = 0
    xlHoja1.Cells(15, 4) = 0
    xlHoja1.Cells(15, 5) = lnNumCueAbonoAhoSol - lnCantidadRestrinMN
    xlHoja1.Cells(15, 6) = lnMonCueAbonoAhoSol - lnMontoRestrinMN
    xlHoja1.Cells(15, 7) = lnNumCueAbonoPFSol + lnCantidadRestrinMN
    xlHoja1.Cells(15, 8) = lnMonCueAbonoPFSol + lnMontoRestrinMN
    xlHoja1.Cells(15, 9) = (lnNumCueAbonoAhoSol + lnNumCueAbonoPFSol)
    xlHoja1.Cells(15, 10) = (lnMonCueAbonoAhoSol + lnMonCueAbonoPFSol)
    xlHoja1.Cells(15, 11) = 0

    xlHoja1.Cells(16, 3) = 0
    xlHoja1.Cells(16, 4) = 0
    xlHoja1.Cells(16, 5) = 0
    xlHoja1.Cells(16, 6) = lnMonCueIntCapAhoSol - lnInteresRestrinMN
    xlHoja1.Cells(16, 7) = 0
    xlHoja1.Cells(16, 8) = lnMonCueIntCapPFSol + lnInteresRestrinMN
    xlHoja1.Cells(16, 9) = 0
    xlHoja1.Cells(16, 10) = (lnMonCueIntCapAhoSol + lnMonCueIntCapPFSol)
    xlHoja1.Cells(16, 11) = 0
    
    xlHoja1.Cells(17, 3) = 0
    xlHoja1.Cells(17, 4) = 0
    xlHoja1.Cells(17, 5) = lnNumCueCanAhoSol
    xlHoja1.Cells(17, 6) = lnMonCueCanAhoSol
    xlHoja1.Cells(17, 7) = lnNumCueCanPFSol
    xlHoja1.Cells(17, 8) = lnMonCueCanPFSol
    xlHoja1.Cells(17, 9) = (lnNumCueCanAhoSol + lnNumCueCanPFSol)
    xlHoja1.Cells(17, 10) = (lnMonCueCanAhoSol + lnMonCueCanPFSol)
    xlHoja1.Cells(17, 11) = 0

    xlHoja1.Cells(18, 3) = 0
    xlHoja1.Cells(18, 4) = 0
    xlHoja1.Cells(18, 5) = lnNumCueRetAhoSol
    xlHoja1.Cells(18, 6) = lnMonCueRetAhoSol
    xlHoja1.Cells(18, 7) = lnNumCueRetPFSol
    xlHoja1.Cells(18, 8) = lnMonCueRetPFSol
    xlHoja1.Cells(18, 9) = (lnNumCueRetAhoSol + lnNumCueRetPFSol)
    xlHoja1.Cells(18, 10) = (lnMonCueRetAhoSol + lnMonCueRetPFSol)
    xlHoja1.Cells(18, 11) = 0
    
    xlHoja1.Cells(19, 3) = 0
    xlHoja1.Cells(19, 4) = 0
    xlHoja1.Cells(19, 5) = lnNumCueCargoAhoSol
    xlHoja1.Cells(19, 6) = lnMonCueCargoAhoSol
    xlHoja1.Cells(19, 7) = lnNumCueCargoPFSol
    xlHoja1.Cells(19, 8) = lnMonCueCargoPFSol
    xlHoja1.Cells(19, 9) = (lnNumCueCargoAhoSol + lnNumCueCargoPFSol)
    xlHoja1.Cells(19, 10) = (lnMonCueCargoAhoSol + lnMonCueCargoPFSol)
    xlHoja1.Cells(19, 11) = 0
    
    
    xlHoja1.Cells(20, 3) = 0
    xlHoja1.Cells(20, 4) = 0
    xlHoja1.Cells(20, 5) = lnTotCueVigAhoSol - lnCantidadRestrinMN
    xlHoja1.Cells(20, 6) = lnMonTotCueVigAhoSol - lnMontoRestrinMN - lnInteresRestrinMN
    xlHoja1.Cells(20, 7) = lnTotCueVigPFSol + lnCantidadRestrinMN
    xlHoja1.Cells(20, 8) = lnMonTotCueVigPFSol + lnMontoRestrinMN + lnInteresRestrinMN
    xlHoja1.Cells(20, 9) = (lnTotCueVigAhoSol + lnTotCueVigPFSol)
    xlHoja1.Cells(20, 10) = (lnMonTotCueVigAhoSol + lnMonTotCueVigPFSol)
    xlHoja1.Cells(20, 11) = 0
     
    xlHoja1.Cells(23, 3) = 0
    xlHoja1.Cells(23, 4) = 0
    xlHoja1.Cells(23, 5) = lnNumCueVigAhoDol - lnCantidadRestrinME_MA
    xlHoja1.Cells(23, 6) = lnMonCueVigAhoDol
    xlHoja1.Cells(23, 7) = lnNumCueVigPFDol + lnCantidadRestrinME_MA
    xlHoja1.Cells(23, 8) = lnMonCueVigPFDol
    xlHoja1.Cells(23, 9) = (lnNumCueVigAhoDol + lnNumCueVigPFDol)
    xlHoja1.Cells(23, 10) = (lnMonCueVigAhoDol + lnMonCueVigPFDol)
    xlHoja1.Cells(23, 11) = 0

    xlHoja1.Cells(24, 3) = 0
    xlHoja1.Cells(24, 4) = 0
    xlHoja1.Cells(24, 5) = lnNumCueNueAhoDol
    xlHoja1.Cells(24, 6) = lnMonCueNueAhoDol
    xlHoja1.Cells(24, 7) = lnNumCueNuePFDol
    xlHoja1.Cells(24, 8) = lnMonCueNuePFDol
    xlHoja1.Cells(24, 9) = (lnNumCueNueAhoDol + lnNumCueNuePFDol)
    xlHoja1.Cells(24, 10) = (lnMonCueNueAhoDol + lnMonCueNuePFDol)
    xlHoja1.Cells(24, 11) = 0

    xlHoja1.Cells(25, 3) = 0
    xlHoja1.Cells(25, 4) = 0
    xlHoja1.Cells(25, 5) = lnNumCueAbonoAhoDol - lnCantidadRestrinME
    xlHoja1.Cells(25, 6) = lnMonCueAbonoAhoDol - lnMontoRestrinME
    xlHoja1.Cells(25, 7) = lnNumCueAbonoPFDol + lnCantidadRestrinME
    xlHoja1.Cells(25, 8) = lnMonCueAbonoPFDol + lnMontoRestrinME
    xlHoja1.Cells(25, 9) = (lnNumCueAbonoAhoDol + lnNumCueAbonoPFDol)
    xlHoja1.Cells(25, 10) = (lnMonCueAbonoAhoDol + lnMonCueAbonoPFDol)
    xlHoja1.Cells(25, 11) = 0

    xlHoja1.Cells(26, 3) = 0
    xlHoja1.Cells(26, 4) = 0
    xlHoja1.Cells(26, 5) = 0
    xlHoja1.Cells(26, 6) = lnMonCueIntCapAhoDol - lnInteresRestrinME
    xlHoja1.Cells(26, 7) = 0
    xlHoja1.Cells(26, 8) = lnMonCueIntCapPFDol + lnInteresRestrinME
    xlHoja1.Cells(26, 9) = 0
    xlHoja1.Cells(26, 10) = (lnMonCueIntCapAhoDol + lnMonCueIntCapPFDol)
    xlHoja1.Cells(26, 11) = 0
 
    xlHoja1.Cells(27, 3) = 0
    xlHoja1.Cells(27, 4) = 0
    xlHoja1.Cells(27, 5) = lnNumCueCanAhoDol
    xlHoja1.Cells(27, 6) = lnMonCueCanAhoDol
    xlHoja1.Cells(27, 7) = lnNumCueCanPFDol
    xlHoja1.Cells(27, 8) = lnMonCueCanPFDol
    xlHoja1.Cells(27, 9) = (lnNumCueCanAhoDol + lnNumCueCanPFDol)
    xlHoja1.Cells(27, 10) = (lnMonCueCanAhoDol + lnMonCueCanPFDol)
    xlHoja1.Cells(27, 11) = 0
     
    xlHoja1.Cells(28, 3) = 0
    xlHoja1.Cells(28, 4) = 0
    xlHoja1.Cells(28, 5) = lnNumCueRetAhoDol
    xlHoja1.Cells(28, 6) = lnMonCueRetAhoDol
    xlHoja1.Cells(28, 7) = lnNumCueRetPFDol
    xlHoja1.Cells(28, 8) = lnMonCueRetPFDol
    xlHoja1.Cells(28, 9) = (lnNumCueRetAhoDol + lnNumCueRetPFDol)
    xlHoja1.Cells(28, 10) = (lnMonCueRetAhoDol + lnMonCueRetPFDol)
    xlHoja1.Cells(28, 11) = 0

    xlHoja1.Cells(29, 3) = 0
    xlHoja1.Cells(29, 4) = 0
    xlHoja1.Cells(29, 5) = lnNumCueCargoAhoDol
    xlHoja1.Cells(29, 6) = lnMonCueCargoAhoDol
    xlHoja1.Cells(29, 7) = lnNumCueCargoPFDol
    xlHoja1.Cells(29, 8) = lnMonCueCargoPFDol
    xlHoja1.Cells(29, 9) = (lnNumCueCargoAhoDol + lnNumCueCargoPFDol)
    xlHoja1.Cells(29, 10) = (lnMonCueCargoAhoDol + lnMonCueCargoPFDol)
    xlHoja1.Cells(29, 11) = 0
    

    xlHoja1.Cells(30, 3) = 0
    xlHoja1.Cells(30, 4) = 0
    xlHoja1.Cells(30, 5) = lnTotCueVigAhoDol - lnCantidadRestrinME
    xlHoja1.Cells(30, 6) = lnMonTotCueVigAhoDol - lnMontoRestrinME - lnInteresRestrinME
    xlHoja1.Cells(30, 7) = lnTotCueVigPFDol + lnCantidadRestrinME
    xlHoja1.Cells(30, 8) = lnMonTotCueVigPFDol + lnMontoRestrinME + lnInteresRestrinME
    xlHoja1.Cells(30, 9) = (lnTotCueVigAhoDol + lnTotCueVigPFDol)
    xlHoja1.Cells(30, 10) = (lnMonTotCueVigAhoDol + lnMonTotCueVigPFDol)
    xlHoja1.Cells(30, 11) = 0
    'FRHU 20140107
    Set rs = oCapDef.GetMovTarjetaDebito(dfecha)
    If Not rs.BOF And Not rs.EOF Then
    xlHoja1.Cells(13, 11) = rs!MNSaldoMesAnterior
    xlHoja1.Cells(14, 11) = rs!MNCNuevas
    xlHoja1.Cells(17, 11) = rs!MNCCanceladas
    xlHoja1.Cells(20, 11) = rs!MNSaldoAfinDeMes
    xlHoja1.Cells(23, 11) = rs!MESaldoMesAnterior
    xlHoja1.Cells(24, 11) = rs!MECNuevas
    xlHoja1.Cells(27, 11) = rs!MECuentasCanceladas
    xlHoja1.Cells(30, 11) = rs!MESaldoAfinDeMes
    xlHoja1.Cells(32, 11) = rs!Total
    End If
    rs.Close
    Set rs = Nothing
    'FIN FRHU 20140107
    For I = 99 To 107
        xlHoja1.Range(UCase(Chr(I)) & "32:" & UCase(Chr(I)) & "32").Formula = "=+" & UCase(Chr(I)) & "20+" & UCase(Chr(I)) & "30"
    Next
    
    'Firmas
      
    'Contador
    xlHoja1.Range("D38:F38").MergeCells = True
    xlHoja1.Range("D39:F39").MergeCells = True
    xlHoja1.Range("D40:F40").MergeCells = True
    
    'Hecho Por
    xlHoja1.Range("H38:J38").MergeCells = True
    xlHoja1.Range("H39:J39").MergeCells = True
     
    xlHoja1.Cells(39, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(39, 4) = "CONTADOR GENERAL"
    xlHoja1.Cells(39, 8) = "HECHO POR"
    xlHoja1.Cells(40, 4) = "MATRICULA NRO.   "
    
    xlHoja1.Range("A38:K40").HorizontalAlignment = xlCenter
    
    With xlHoja1.Range("B38:B38").Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    With xlHoja1.Range("D38:F38").Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    With xlHoja1.Range("H38:J38").Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    xlHoja1.Cells.Select
    xlHoja1.Cells.Font.Name = "Arial"
    xlHoja1.Cells.Font.Size = 8
    xlHoja1.Cells.EntireColumn.AutoFit

End Sub
'' Fin Excel



''' FIn excel
'Fin Agregado 09.02.2005

'Public Function ImprimeAnx13XLS(ByVal sTitulo As String, ByVal ntxtTipCamFij1 As Double, pnbit_central As Boolean, pdFecha As Date)
'    Dim oConConsol As DConecta
'
'    Dim oPrevio As clsPrevioFinan
'    Set oPrevio = New clsPrevioFinan
'    Dim lsCadena As String
'    On Error GoTo Err_
'
'    Dim lbLibroOpen As Boolean
'    Dim lsArchivo As String
'    Dim lbHojaOpen As Boolean
'
'    lsArchivo = "Anexo13_" & Format(pdFecha, "YYYYMMdd") & "_" & Format(Time, "Short Time") & ".xls"
'    lsArchivo = Replace(lsArchivo, ":", "_")
'
'    lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)
'
'    GetDepositosEscalaMontosAnx13Xls ntxtTipCamFij1, pnbit_central, pdFecha
'
'    ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1
'
'    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"
'
'    CargaArchivo lsArchivo, App.path & "\Spooler"
'
'
'Err_:
'        Exit Function
'
'End Function

Private Function GetDepositosEscalaMontosAnx13Xls(ByVal nTCF As Double, ByVal pnBittCentral As Boolean, pdFecha As Date) As String
Dim lbAhorroRestringuido As Boolean
lbAhorroRestringuido = False

Dim lsHoja As String
Dim nTemp As Integer
Dim nFila As Integer

Dim dbAux As ADODB.Connection
Dim rsCta As ADODB.Recordset

Dim nFSD As Double
Dim sEscala(1 To 17) As String * 50 'Dim sEscala(1 To 14) As String * 50'***Modificado por ELRO el 20130618, según SATI TIC1306080002
Dim nCantidad(1 To 17) As Long 'Dim nCantidad(1 To 14) As Long'***Modificado por ELRO el 20130618, según SATI TIC1306080002
Dim nSaldos(1 To 17) As Double 'Dim nSaldos(1 To 14) As Double'***Modificado por ELRO el 20130618, según SATI TIC1306080002
Dim sProd(1 To 4) As String * 50
Dim I As Integer, P As Integer, j As Integer
Dim nIni As Double, nFin As Double
Dim sRan As String, sTipo As String
Dim nNum01 As Long, nNum02 As Long, nNum03 As Long, nNum As Long
Dim nSald01 As Double, nSald02 As Double, nSald03 As Double

Dim lbLibroOpen As Boolean
Dim lbHojaOpen As Boolean
Dim lsArchivo As String

Dim dfecha As Date

Dim VSQL As String, QSQL As String

'***Modificado por ELRO el 20130618, según SATI TIC1306080002***
'sEscala(1) = "Hasta el 10% del FSD (*)": sEscala(2) = "Más del 10% al 25% del FSD"
'sEscala(3) = "Más del 25% al 50% del FSD": sEscala(4) = "Más del 50% al 100% del FSD"
'sEscala(5) = "Más de 1 vez a 2 Veces del FSD": sEscala(6) = "Más de 2 veces a 4 Veces del FSD"
'sEscala(7) = "Más de 4 veces a 6 Veces del FSD": sEscala(8) = "Más de 6 veces a 8 Veces del FSD"
'sEscala(9) = "Más de 8 veces a 10 Veces del FSD": sEscala(10) = "Más de 10 veces a 15 Veces del FSD"
'sEscala(11) = "Más de 15 veces a 20 Veces del FSD": sEscala(12) = "Más de 20 veces a 50 Veces del FSD"
'sEscala(13) = "Más de 50 veces a 100 Veces del FSD": sEscala(14) = "Más de 100 Veces del FSD"

sEscala(1) = "Hasta el 1% del F.S.D.(*)": sEscala(2) = "Más del 1% al 3% del F.S.D."
sEscala(3) = "Más del 3% al 5% del F.S.D.": sEscala(4) = "Más del 5% al 10% del F.S.D."
sEscala(5) = "Más del 10% al 25% del F.S.D.": sEscala(6) = "Más del 25% al 50% del F.S.D."
sEscala(7) = "Más del 50% al 100% del F.S.D."
sEscala(8) = "Más 1 vez a 2 veces del F.S.D.": sEscala(9) = "Más 2 veces a 4 veces del F.S.D."
sEscala(10) = "Más 4 veces a 6 veces del F.S.D.": sEscala(11) = "Más 6 veces a 8 veces del F.S.D."
sEscala(12) = "Más 8 veces a 10 veces del F.S.D.": sEscala(13) = "Más 10 veces a 15 veces del F.S.D."
sEscala(14) = "Más 15 veces a 20 veces del F.S.D.": sEscala(15) = "Más 20 veces a 50 veces del F.S.D."
sEscala(16) = "Más 50 veces a 100 veces del F.S.D.": sEscala(17) = "Más de 100 veces del F.S.D."


nCantidad(1) = 0: nCantidad(2) = 0: nCantidad(3) = 0: nCantidad(4) = 0
nCantidad(5) = 0: nCantidad(6) = 0: nCantidad(7) = 0: nCantidad(8) = 0
nCantidad(9) = 0: nCantidad(10) = 0: nCantidad(11) = 0: nCantidad(12) = 0
nCantidad(13) = 0: nCantidad(14) = 0
nCantidad(15) = 0: nCantidad(16) = 0: nCantidad(17) = 0
'***Fin Modificado por ELRO el 20130618, según SATI TIC1306080002


sProd(1) = "Sub Total AHORROS": sProd(2) = "Sub Total PLAZO"
sProd(3) = "Sub Total CTS": sProd(4) = "T O T A L "

    Dim oConConsol As DConecta
    Dim oConAdd As DConecta
    Set oConAdd = New DConecta

    Dim oGen As DGeneral
    Set oGen = New DGeneral
    Set oConConsol = New DConecta

    nFSD = oGen.GetParametro(2000, 2019)      'Obtiene el Monto del FSD de la tabla de parámetros
    dfecha = pdFecha
    'oConConsol.AbreConexionRemota "07", , , "03"
    oConConsol.AbreConexion

    lsArchivo = "Anexo13_" & Format(pdFecha, "YYYYMMdd") & "_" & Format(Time, "Short Time") & ".xls"
    lsArchivo = Replace(lsArchivo, ":", "_")
    lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)
    lsHoja = "ANEXO_13"

    ExcelAddHoja lsHoja, xlLibro, xlHoja1
    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 52
    xlHoja1.PageSetup.Orientation = xlLandscape

    xlHoja1.Cells(1, 10) = "ANEXO 13"

    xlHoja1.Cells(3, 1) = "EMPRESA : " & gsNomCmac

    xlHoja1.Cells(3, 9) = "CODIGO: " & gsCodCMAC

    xlHoja1.Cells(5, 1) = "DEPOSITOS SEGUN ESCALA DE MONTOS"
    xlHoja1.Cells(6, 1) = "AL: " & UCase(ArmaFecha(dfecha))
    '''xlHoja1.Cells(7, 1) = "(En Nuevos Soles)" 'MARG ERS044-2016
    xlHoja1.Cells(7, 1) = "(En " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'MARG ERS044-2016

    xlHoja1.Cells(9, 6) = "Monto FSD"
    xlHoja1.Cells(9, 7) = nFSD

    xlHoja1.Cells(9, 9) = "T.C. Fijo"
    xlHoja1.Cells(9, 10) = nTCF


    xlHoja1.Range("G9:G9").NumberFormat = "###,###,##0.00##"
    xlHoja1.Range("J9:J9").NumberFormat = "###,###,##0.00##"

    xlHoja1.Cells(11, 1) = "Codigo"
    xlHoja1.Cells(11, 2) = "Escala"
    xlHoja1.Cells(11, 3) = "Personas"
    xlHoja1.Cells(11, 5) = "Personas Juridicas"
    xlHoja1.Cells(11, 9) = "Totales"

    xlHoja1.Cells(12, 1) = "Manual de"
    '''xlHoja1.Cells(12, 2) = "(En Nuevos Soles)" 'MARG ERS044-2016
    xlHoja1.Cells(12, 2) = "(En " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'MARG ERS044-2016
    xlHoja1.Cells(12, 3) = "Naturales"
    xlHoja1.Cells(12, 5) = "Sin Fines de Lucro"
    xlHoja1.Cells(12, 7) = "Con Fines de Lucro"

    xlHoja1.Cells(13, 1) = "Contabilidad"
    xlHoja1.Cells(13, 3) = "Numero"
    xlHoja1.Cells(13, 4) = "Monto"
    xlHoja1.Cells(13, 5) = "Numero"
    xlHoja1.Cells(13, 6) = "Monto"
    xlHoja1.Cells(13, 7) = "Numero"
    xlHoja1.Cells(13, 8) = "Monto"
    xlHoja1.Cells(13, 9) = "Numero"
    xlHoja1.Cells(13, 10) = "Monto"

    xlHoja1.Range("A5:J5").MergeCells = True
    xlHoja1.Range("A6:J6").MergeCells = True
    xlHoja1.Range("A7:J7").MergeCells = True

    xlHoja1.Range("B3:G3").MergeCells = True

    xlHoja1.Range("C11:D11").MergeCells = True
    xlHoja1.Range("E11:H11").MergeCells = True
    xlHoja1.Range("I11:J12").MergeCells = True
    xlHoja1.Range("C12:D12").MergeCells = True
    xlHoja1.Range("E12:F12").MergeCells = True
    xlHoja1.Range("G12:H12").MergeCells = True

    xlHoja1.Range("A1:J13").Font.Bold = True
    xlHoja1.Range("A1:J4").HorizontalAlignment = xlLeft
    xlHoja1.Range("A5:J13").HorizontalAlignment = xlCenter

    xlHoja1.Range("I11:I11").VerticalAlignment = xlCenter

    ExcelCuadro xlHoja1, 1, 11, 1, 13, False
    ExcelCuadro xlHoja1, 2, 11, 2, 13, False
    ExcelCuadro xlHoja1, 3, 11, 4, 12, False, False
    ExcelCuadro xlHoja1, 3, 13, 4, 13, True, True

    ExcelCuadro xlHoja1, 5, 11, 10, 13, True, True

    nFila = 14
    xlHoja1.Cells(nFila, 2) = "VISTA.-"
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True

    For I = 1 To 17 'For I = 1 To 14'***Modificado por ELRO el 20130618, según SATI TIC1306080002
        nFila = nFila + 1
        If I = 1 Then
            xlHoja1.Cells(nFila, 1) = "'2101.01+2101.02"
        ElseIf I = 2 Then
            xlHoja1.Cells(nFila, 1) = "'+21.01.03+2301"
        End If
        xlHoja1.Cells(nFila, 2) = sEscala(I)
        For j = 3 To 10
            xlHoja1.Cells(nFila, j) = 0
        Next
        If I = 17 Then nFila = nFila + 1 '***Agregado por ELRO el 20130618, según SATI TIC1306080002
    Next

    xlHoja1.Cells(nFila, 2) = "Sub Total VISTA"
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True

''''
For P = 1 To 3
    Select Case P
        Case 1
            If pnBittCentral = True Then
'                VSQL = "SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
'                VSQL = VSQL & "SELECT P.cPersCod, TA.nPersPersoneria, Tipo = CASE "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' "
'                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT A.cCtaCod, A.nPersoneria, nSaldo = CASE "
'                VSQL = VSQL & "WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntAC "
'                VSQL = VSQL & "WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntAC*" & nTCF & " END "
'                VSQL = VSQL & "FROM AhorroCConsol A INNER JOIN ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
'                VSQL = VSQL & "WHERE A.bInactiva = '0' and A.nEstCtaAC NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
'                VSQL = VSQL & ") T Group by T.cCtaCod, T.nPersoneria, T.nSaldo "
'                VSQL = VSQL & ") TA INNER JOIN ProductoPersonaConsol PC ON TA.cCtaCod = PC.cCtaCod INNER JOIN Persona P ON PC.cPersCod = P.cPersCod "
'                VSQL = VSQL & "WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, TA.nPersPersoneria "
'                VSQL = VSQL & ") TB Group by TB.Tipo, TB.nPersPersoneria Order by TB.Tipo, TB.nPersPersoneria"
                
                '***Modificado por ELRO el 20130618, según SATI TIC1306080002***
                'VSQL = " SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
                'VSQL = VSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' END,"
                'VSQL = VSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo"
                'VSQL = VSQL & "     FROM ("
                'VSQL = VSQL & "         SELECT A.cCtaCod, C.nPersoneria,"
                'VSQL = VSQL & "         nSaldo = CASE WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
                'VSQL = VSQL & "         WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
                'VSQL = VSQL & "         FROM CapSaldosDiarios A"
                'VSQL = VSQL & "         INNER JOIN Captaciones C ON A.cCtaCod = C.cCtaCod"
                'VSQL = VSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
                ''VSQL = VSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) = '232' And nInmovilizada <> 1 And nTpoBloqueo not in (3,15) And nCuentaCredMV <> 1"
                'If lbAhorroRestringuido Then
                '    VSQL = VSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) = '232' And nInmovilizada <> 1 And IsNull(nTpoBloqueo,-1) not in (3,15) "
                'Else
                '    VSQL = VSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) = '232' "
                'End If
                'VSQL = VSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
                'VSQL = VSQL & " ) TA"
                'VSQL = VSQL & " INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
                'VSQL = VSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
                'VSQL = VSQL & " WHERE PC.nPrdPersRelac = '10'"
                'VSQL = VSQL & " Group by P.cPersCod, TA.nPersPersoneria"
                'VSQL = VSQL & " ) TB"
                'VSQL = VSQL & " Group by TB.Tipo, TB.nPersPersoneria"
                'VSQL = VSQL & " Order by TB.Tipo, TB.nPersPersoneria"
                VSQL = "exec stp_sel_DevolverAnexo13 '" & Format(dfecha, "yyyyMMdd") & "', " & Format(nTCF, "#0.0000") & ", " & nFSD & ", '232'"
                '***Fin Modificado por ELRO el 20130618, según SATI TIC1306080002
            Else
                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cCodPers, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '1' THEN A.nSaldCntAC "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '2' THEN A.nSaldCntAC*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..AhorroCConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.cEstCtaAC NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
                VSQL = VSQL & ") T Group by T.cCtaCod, nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
        Case 2
            If pnBittCentral = True Then
'                VSQL = "SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
'                VSQL = VSQL & "SELECT P.cPersCod, TA.nPersPersoneria, Tipo = CASE "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
'                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, T.nSaldo/Count(*) nSaldo FROM ( "
'                VSQL = VSQL & "  SELECT A.cCtaCod, A.nPersoneria, nSaldo = CASE "
'                VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntPF "
'                VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntPF*" & nTCF & " END "
'                VSQL = VSQL & "  FROM plazofijoconsol A INNER JOIN ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
'                VSQL = VSQL & "  WHERE A.nEstCtaPF NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular
'                'VSQL = VSQL & "  UNION ALL"
'                'VSQL = VSQL & "  SELECT A.cCtaCod, A.nPersoneria, nSaldo = CASE "
'                ''VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntAC "
'                'VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntAC*" & nTCF & " END "
'                'VSQL = VSQL & "  FROM AhorroCConsol A INNER JOIN ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
'                'VSQL = VSQL & "  WHERE A.bInactiva = '1' and A.nEstCtaAC NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular
'                VSQL = VSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo  "
'                VSQL = VSQL & ") TA INNER JOIN ProductoPersonaConsol PC ON TA.cCtaCod = PC.cCtaCod INNER JOIN Persona P ON PC.cPersCod = P.cPersCod "
'                VSQL = VSQL & "  WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' "
'                VSQL = VSQL & " Group by P.cPersCod, TA.nPersPersoneria "
'                VSQL = VSQL & ") TB Group by TB.Tipo, TB.nPersPersoneria Order by TB.Tipo, TB.nPersPersoneria"
                
                
                '***Modificado por ELRO el 20130618, según SATI TIC1306080002***
                'VSQL = " SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
                'VSQL = VSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <=  " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.10 And SUM(TA.nSaldo) <=  " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.25 And SUM(TA.nSaldo) <=  " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.50 And SUM(TA.nSaldo) <=  " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*1 And SUM(TA.nSaldo) <=  " & nFSD & "*2 THEN '05. 01 a 02 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*2 And SUM(TA.nSaldo) <=  " & nFSD & "*4 THEN '06. 02 a 04 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*4 And SUM(TA.nSaldo) <=  " & nFSD & "*6 THEN '07. 04 a 06 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*6 And SUM(TA.nSaldo) <=  " & nFSD & "*8 THEN '08. 06 a 08 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*8 And SUM(TA.nSaldo) <=  " & nFSD & "*10 THEN '09. 08 a 10 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*10 And SUM(TA.nSaldo) <=  " & nFSD & "*15 THEN '10. 10 a 15 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*15 And SUM(TA.nSaldo) <=  " & nFSD & "*20 THEN '11. 15 a 20 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*20 And SUM(TA.nSaldo) <=  " & nFSD & "*50 THEN '12. 20 a 50 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*50 And SUM(TA.nSaldo) <=  " & nFSD & "*100 THEN '13. 50 a 100 Veces'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*100 THEN '14. Más de 100 Veces' END,"
                'VSQL = VSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, T.nSaldo/Count(*) nSaldo"
                'VSQL = VSQL & "     FROM ("
                'VSQL = VSQL & "         SELECT A.cCtaCod, C.nPersoneria,"
                'VSQL = VSQL & "         nSaldo = CASE    WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
                'VSQL = VSQL & "             WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
                'VSQL = VSQL & "         FROM CapSaldosDiarios A"
                'VSQL = VSQL & "         INNER JOIN Captaciones C ON C.cCtaCod = A.cCtaCod"
                'VSQL = VSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
                ''VSQL = VSQL & "         WHERE  PC.nPrdPersRelac = 10 AND ( (SUBSTRING(A.cCtacod,6,3) = '233') Or (SUBSTRING(A.cCtacod,6,3) like '23[24]' And (nInmovilizada = 1 or nTpoBloqueo in (3,15) or nCuentaCredMV = 1 )  ) ) and Datediff(day,A.dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0  "
                'If lbAhorroRestringuido Then
                '    VSQL = VSQL & "         WHERE  PC.nPrdPersRelac = 10 AND ( (SUBSTRING(A.cCtacod,6,3) = '233') Or (SUBSTRING(A.cCtacod,6,3) like '23[24]' And (nInmovilizada = 1 or IsNull(nTpoBloqueo,-1) in (3,15)  )  ) ) and Datediff(day,A.dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0  "
                'Else
                '    VSQL = VSQL & "         WHERE  PC.nPrdPersRelac = 10 AND ( (SUBSTRING(A.cCtacod,6,3) = '233') ) and Datediff(day,A.dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0  "
                'End If
                'VSQL = VSQL & "     ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
                'VSQL = VSQL & " ) TA INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
                'VSQL = VSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
                'VSQL = VSQL & " WHERE PC.nPrdPersRelac = '10'"
                'VSQL = VSQL & " Group by P.cPersCod, TA.nPersPersoneria"
                'VSQL = VSQL & " ) TB"
                'VSQL = VSQL & " Group by TB.Tipo, TB.nPersPersoneria"
                'VSQL = VSQL & " Order by TB.Tipo, TB.nPersPersoneria"
                VSQL = "exec stp_sel_DevolverAnexo13 '" & Format(dfecha, "yyyyMMdd") & "', " & Format(nTCF, "#0.0000") & ", " & nFSD & ", '233'"
                '***Fin Modificado por ELRO el 20130618, según SATI TIC1306080002
            Else
                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cCodPers, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '1' THEN A.nSaldCntPF "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '2' THEN A.nSaldCntPF*" & nTCF & " END "
                VSQL = VSQL & "FROM plazofijoconsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.cEstCtaPF NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
                VSQL = VSQL & ") T Group by T.cCtaCod "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
        Case 3
            If pnBittCentral = True Then
'                VSQL = "SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
'                VSQL = VSQL & "SELECT P.cPersCod, P.nPersPersoneria, Tipo = CASE "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
'                VSQL = VSQL & "END, Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cPersCod, nSaldo = CASE "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '" & gMonedaNacional & "' THEN A.nSaldCntCTS "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntCTS*" & nTCF & " END "
'                VSQL = VSQL & "FROM CTSConsol A INNER JOIN ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
'                VSQL = VSQL & "WHERE A.nEstCtaCTS NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
'                VSQL = VSQL & ") T Group by T.cCtaCod "
'                VSQL = VSQL & ") TA INNER JOIN ProductoPersonaConsol PC INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON "
'                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, P.nPersPersoneria "
'                VSQL = VSQL & ") TB Group by TB.Tipo, TB.nPersPersoneria Order by TB.Tipo, TB.nPersPersoneria"
                
                '***Modificado por ELRO el 20130618, según SATI TIC1306080002***
                'VSQL = " SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & " SELECT P.cPersCod, P.nPersPersoneria,"
                'VSQL = VSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <=  " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
                'VSQL = VSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.10 And SUM(TA.nSaldo) <=  " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.25 And SUM(TA.nSaldo) <=  " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.50 And SUM(TA.nSaldo) <=  " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*1 And SUM(TA.nSaldo) <=  " & nFSD & "*2 THEN '05. 01 a 02 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*2 And SUM(TA.nSaldo) <=  " & nFSD & "*4 THEN '06. 02 a 04 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*4 And SUM(TA.nSaldo) <=  " & nFSD & "*6 THEN '07. 04 a 06 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*6 And SUM(TA.nSaldo) <=  " & nFSD & "*8 THEN '08. 06 a 08 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*8 And SUM(TA.nSaldo) <=  " & nFSD & "*10 THEN '09. 08 a 10 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*10 And SUM(TA.nSaldo) <=  " & nFSD & "*15 THEN '10. 10 a 15 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*15 And SUM(TA.nSaldo) <=  " & nFSD & "*20 THEN '11. 15 a 20 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*20 And SUM(TA.nSaldo) <=  " & nFSD & "*50 THEN '12. 20 a 50 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*50 And SUM(TA.nSaldo) <=  " & nFSD & "*100 THEN '13. 50 a 100 Veces'"
                'VSQL = VSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*100 THEN '14. Más de 100 Veces' END,"
                'VSQL = VSQL & " Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & " SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo"
                'VSQL = VSQL & " FROM ("
                'VSQL = VSQL & "  SELECT PC.cCtaCod, PC.cPersCod,"
                'VSQL = VSQL & "         nSaldo = CASE WHEN SUBSTRING(PC.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
                'VSQL = VSQL & "             WHEN SUBSTRING(PC.cCtaCod,9,1) = '2' THEN A.nSaldCnt* " & Format(nTCF, "#0.0000") & "  END"
                'VSQL = VSQL & "         FROM CapSaldosDiarios A"
                'VSQL = VSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
                ''VSQL = VSQL & "         WHERE PC.nPrdPersRelac = 10 AND SUBSTRING(A.cCtacod,6,3) = '234' and Datediff(day,A.dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')= 0  And nInmovilizada <> 1 And nTpoBloqueo not in (3,15) And nCuentaCredMV <> 1 "
                'If lbAhorroRestringuido Then
                '    VSQL = VSQL & "         WHERE PC.nPrdPersRelac = 10 AND SUBSTRING(A.cCtacod,6,3) = '234' and Datediff(day,A.dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')= 0  And nInmovilizada <> 1 And IsNull(nTpoBloqueo,-1) not in (3,15) "
                'Else
                '    VSQL = VSQL & "         WHERE PC.nPrdPersRelac = 10 AND SUBSTRING(A.cCtacod,6,3) = '234' and Datediff(day,A.dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')= 0 "
                'End If
                'VSQL = VSQL & "     ) T Group by T.cCtaCod"
                'VSQL = VSQL & " ) TA INNER JOIN ProductoPersona PC"
                'VSQL = VSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON TA.cCtaCod = PC.cCtaCod"
                'VSQL = VSQL & " WHERE PC.nPrdPersRelac = '10'"
                'VSQL = VSQL & " Group by P.cPersCod, P.nPersPersoneria"
                'VSQL = VSQL & " ) TB"
                'VSQL = VSQL & " Group by TB.Tipo, TB.nPersPersoneria"
                'VSQL = VSQL & " Order by TB.Tipo, TB.nPersPersoneria"
                VSQL = "exec stp_sel_DevolverAnexo13 '" & Format(dfecha, "yyyyMMdd") & "', " & Format(nTCF, "#0.0000") & ", " & nFSD & ", '234'"
                '***Fin Modificado por ELRO el 20130618, según SATI TIC1306080002
            Else
                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cCodPers, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '1' THEN A.nSaldCntCTS "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '2' THEN A.nSaldCntCTS*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..CTSConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.cEstCtaCTS NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
                VSQL = VSQL & ") T Group by T.cCtaCod "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
    End Select


    Set rsCta = oConConsol.CargaRecordSet(VSQL)

    nNum01 = 0: nNum02 = 0: nNum03 = 0
    nSald01 = 0: nSald02 = 0: nSald03 = 0
    sRan = "": I = 0
    If rsCta.EOF And rsCta.BOF Then
    Else
        Do While Not rsCta.EOF
            sTipo = Left(rsCta!Tipo, 2)



            If sRan <> sTipo Then
                If sRan <> "" Then

                    ''Desde

                    If sRan = "01" Then
                        If P = 1 Then
                            nFila = nFila + 1
                            xlHoja1.Cells(nFila, 2) = "AHORROS"
                            xlHoja1.Cells(nFila + 1, 1) = "'2102+2302"
                        ElseIf P = 2 Then
                            nFila = nFila + 1
                            xlHoja1.Cells(nFila, 2) = "PLAZO"
                            xlHoja1.Cells(nFila + 1, 1) = "'2103"
                            xlHoja1.Cells(nFila + 2, 1) = "'+2103.04+2101.09+"
                            xlHoja1.Cells(nFila + 3, 1) = "'2303+2107"
                        ElseIf P = 3 Then
                            nFila = nFila + 1
                            xlHoja1.Cells(nFila, 2) = "CTS"
                            xlHoja1.Cells(nFila + 1, 1) = "'+2103.05"
                        End If
                        xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
                        xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True
                    End If

                    ''Hasta

                    nFila = nFila + 1

                    xlHoja1.Cells(nFila, 2) = sEscala(I)
                    xlHoja1.Cells(nFila, 3) = nNum01
                    xlHoja1.Cells(nFila, 4) = nSald01
                    xlHoja1.Cells(nFila, 5) = nNum02
                    xlHoja1.Cells(nFila, 6) = nSald02
                    xlHoja1.Cells(nFila, 7) = nNum03
                    xlHoja1.Cells(nFila, 8) = nSald03
                    xlHoja1.Cells(nFila, 9) = nNum01 + nNum02 + nNum03
                    xlHoja1.Cells(nFila, 10) = nSald01 + nSald02 + nSald03


                    If CInt(sTipo) - 1 > I Then
                        For j = I + 1 To CInt(sTipo) - 1
                            nFila = nFila + 1
                            xlHoja1.Cells(nFila, 2) = sEscala(j)
                            xlHoja1.Cells(nFila, 3) = 0
                            xlHoja1.Cells(nFila, 4) = 0
                            xlHoja1.Cells(nFila, 5) = 0
                            xlHoja1.Cells(nFila, 6) = 0
                            xlHoja1.Cells(nFila, 7) = 0
                            xlHoja1.Cells(nFila, 8) = 0
                            xlHoja1.Cells(nFila, 9) = 0
                            xlHoja1.Cells(nFila, 10) = 0
                        Next j
                    End If
                End If
                nNum01 = 0: nNum02 = 0: nNum03 = 0
                nSald01 = 0: nSald02 = 0: nSald03 = 0
                I = CInt(sTipo)
                sRan = sTipo
            End If
            If pnBittCentral = True Then
                Select Case rsCta!nPersPersoneria
                Case gPersonaNat
                    nNum01 = nNum01 + rsCta!nNum
                    nSald01 = nSald01 + rsCta!Saldo
                ' Variable no definida gPersonaJurSFLFoncodes
                Case gPersonaJurSFL ', gPersonaJurSFLFoncodes
                   nNum02 = nNum02 + rsCta!nNum
                   nSald02 = nSald02 + rsCta!Saldo
                Case Else
                    nNum03 = nNum03 + rsCta!nNum
                    nSald03 = nSald03 + rsCta!Saldo
                End Select
            Else
                Select Case rsCta!cTipPers
                    Case "1"
                        nNum01 = nNum01 + rsCta!nNum
                        nSald01 = nSald01 + rsCta!Saldo
                    Case "2"
                        nNum02 = nNum02 + rsCta!nNum
                        nSald02 = nSald02 + rsCta!Saldo
                    Case Else
                        nNum03 = nNum03 + rsCta!nNum
                        nSald03 = nSald03 + rsCta!Saldo
                End Select
            End If
            rsCta.MoveNext
        Loop
    End If

    'Inicio SP01 L
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    If I = 0 Then
        If P = 1 Then
            nFila = nFila + 1
            xlHoja1.Cells(nFila, 2) = "AHORROS"
            xlHoja1.Cells(nFila + 1, 1) = "'2102+2302"
        ElseIf P = 2 Then
            nFila = nFila + 1
            xlHoja1.Cells(nFila, 2) = "PLAZO"
            xlHoja1.Cells(nFila + 1, 1) = "'2103"
            xlHoja1.Cells(nFila + 2, 1) = "'+2103.04+2101.09+"
            xlHoja1.Cells(nFila + 3, 1) = "'2303+2107"
        ElseIf P = 3 Then
            nFila = nFila + 1
            xlHoja1.Cells(nFila, 2) = "CTS"
            xlHoja1.Cells(nFila + 1, 1) = "'+2103.05"
        End If
        xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
        xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True
    Else
    'Fin SP01 L
    ''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

        nFila = nFila + 1
        xlHoja1.Cells(nFila, 2) = sEscala(I)
        xlHoja1.Cells(nFila, 3) = nNum01
        xlHoja1.Cells(nFila, 4) = nSald01
        xlHoja1.Cells(nFila, 5) = nNum02
        xlHoja1.Cells(nFila, 6) = nSald02
        xlHoja1.Cells(nFila, 7) = nNum03
        xlHoja1.Cells(nFila, 8) = nSald03
        xlHoja1.Cells(nFila, 9) = nNum01 + nNum02 + nNum03
        xlHoja1.Cells(nFila, 10) = nSald01 + nSald02 + nSald03

    'Inicio SP02 L
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
    End If
    'Fin SP02 L
    '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

    For j = I + 1 To 17 'For J = I + 1 To 14'***Modificado por ELRO el 20130618, según SATI TIC1306080002

        nFila = nFila + 1
        xlHoja1.Cells(nFila, 2) = sEscala(j)
        xlHoja1.Cells(nFila, 3) = 0
        xlHoja1.Cells(nFila, 4) = 0
        xlHoja1.Cells(nFila, 5) = 0
        xlHoja1.Cells(nFila, 6) = 0
        xlHoja1.Cells(nFila, 7) = 0
        xlHoja1.Cells(nFila, 8) = 0
        xlHoja1.Cells(nFila, 9) = 0
        xlHoja1.Cells(nFila, 10) = 0

    Next j

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 2) = sProd(P)

    'SubTotal
    For I = 99 To 106
        '***Modificado por ELRO el 20130618, según SATI TIC1306080002***
        'xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & nFila - 14 & ":" & UCase(Chr(I)) & nFila - 1 & ")"
        xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & nFila - 17 & ":" & UCase(Chr(I)) & nFila - 1 & ")"
        '***Modificado por ELRO el 20130618, según SATI TIC1306080002
    Next

    xlHoja1.Range("A" & nFila & ":J" & nFila).Font.Bold = True

Next P

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 2) = "Depósitos Totales (1)"

    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True
    
    
    Dim slTipo As String, nPersoneria As Integer
    Dim pnSaldo As Double

    For j = 1 To 17 'For J = 1 To 14'***Modificado por ELRO el 20130618, según SATI TIC1306080002

        nFila = nFila + 1
        xlHoja1.Cells(nFila, 2) = sEscala(j)
        slTipo = String(2 - Len(Trim(CStr(j))), "0") & Trim(CStr(j))
        
        '******modificar para excluir del total los repetidos por codigos de persona
        
       For I = 99 To 106
        
           If UCase(Chr(I)) <> "C" And UCase(Chr(I)) <> "E" And UCase(Chr(I)) <> "G" And UCase(Chr(I)) <> "I" And UCase(Chr(I)) <> "J" Then
              
              xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = pnSaldo
              nSaldos(j) = nSaldos(j) + pnSaldo
              
           ElseIf UCase(Chr(I)) = "C" Or UCase(Chr(I)) = "E" Or UCase(Chr(I)) = "G" Or UCase(Chr(I)) = "I" Or UCase(Chr(I)) = "J" Then
                
                Select Case UCase(Chr(I))
                     Case "C"
                        nPersoneria = 1
                     Case "E"
                        nPersoneria = 2
                     Case "G"
                        nPersoneria = 3
                End Select
                
                nNum = GetTotalizaAnx13(slTipo, nPersoneria, pdFecha, nFSD, nTCF, pnSaldo)
                
                xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = nNum
                
                'i = i + 1
                
                
                
                If UCase(Chr(I)) = "I" Then
                    xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).value = nCantidad(j)
                Else
                    nCantidad(j) = nCantidad(j) + nNum
                End If
                
                If UCase(Chr(I)) = "J" Then
                    xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).value = nSaldos(j)
                End If
           End If
           
       Next
        
        

    Next j

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 2) = sProd(P)
    'SubTotal
    '******modificar para excluir del total los repetidos por codigos de persona
    Dim SumaTotal As Double
    
    SumaTotal = 0
    For I = 99 To 106
        If UCase(Chr(I)) <> "C" And UCase(Chr(I)) <> "E" And UCase(Chr(I)) <> "G" And UCase(Chr(I)) <> "I" Then
            '***Modificado por ELRO el 20130618, según SATI TIC1306080002***
            'xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & nFila - 14 & ":" & UCase(Chr(I)) & nFila - 1 & ")"
            xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & nFila - 17 & ":" & UCase(Chr(I)) & nFila - 1 & ")"
            '***Fin Modificado por ELRO el 20130618, según SATI TIC1306080002
        ElseIf UCase(Chr(I)) = "C" Or UCase(Chr(I)) = "E" Or UCase(Chr(I)) = "G" Or UCase(Chr(I)) = "I" Then
            Select Case UCase(Chr(I))
                     Case "C"
                        nPersoneria = 1
                     Case "E"
                        nPersoneria = 2
                     Case "G"
                        nPersoneria = 3
            End Select
            
            nNum = GetTotalTotalAnx13(nPersoneria, pdFecha, nFSD, nTCF)
            xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = nNum
              
            
            If UCase(Chr(I)) = "I" Then
               xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).value = SumaTotal
            Else
               SumaTotal = SumaTotal + nNum
            End If
               
               
        End If
    Next

    xlHoja1.Range("A" & nFila & ":J" & nFila).Font.Bold = True

    ExcelCuadro xlHoja1, 1, 14, 10, nFila

    xlHoja1.Range("C14:C" & nFila).NumberFormat = "###,###,##0"
    xlHoja1.Range("E14:E" & nFila).NumberFormat = "###,###,##0"
    xlHoja1.Range("G14:G" & nFila).NumberFormat = "###,###,##0"
    xlHoja1.Range("I14:I" & nFila).NumberFormat = "###,###,##0"

    xlHoja1.Range("D14:D" & nFila).NumberFormat = "###,###,##0.00"
    xlHoja1.Range("F14:F" & nFila).NumberFormat = "###,###,##0.00"
    xlHoja1.Range("H14:H" & nFila).NumberFormat = "###,###,##0.00"
    xlHoja1.Range("J14:J" & nFila).NumberFormat = "###,###,##0.00"

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "Periodicidad: Mensual"

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(*) F.S.D.=Monto Máximo de cobertura por persona y entidad del Fondo de Seguro de Depósito Vigente a la fecha del reporte"

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(1) Se deberá considerar el total de depósitos por persona"

    For I = nFila - 2 To nFila
        xlHoja1.Range("A" & I & ":J" & I).MergeCells = True
    Next

    'Firmas

    nFila = nFila + 3
    'Contador
    xlHoja1.Range("D" & nFila & ":F" & nFila).MergeCells = True
    xlHoja1.Range("D" & nFila + 1 & ":F" & nFila + 1).MergeCells = True
    xlHoja1.Range("D" & nFila + 2 & ":F" & nFila + 2).MergeCells = True

    'Hecho Por
    xlHoja1.Range("H" & nFila & ":J" & nFila).MergeCells = True
    xlHoja1.Range("H" & nFila + 1 & ":J" & nFila + 1).MergeCells = True

    xlHoja1.Cells(nFila + 1, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(nFila + 1, 4) = "CONTADOR GENERAL"
    xlHoja1.Cells(nFila + 1, 8) = "HECHO POR"
    xlHoja1.Cells(nFila + 2, 4) = "MATRICULA NRO.   "

    xlHoja1.Range("A" & nFila & ":K" & nFila + 2).HorizontalAlignment = xlCenter

    With xlHoja1.Range("B" & nFila & ":B" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

    With xlHoja1.Range("D" & nFila & ":F" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

    With xlHoja1.Range("H" & nFila & ":J" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With

    xlHoja1.Cells.Select
    xlHoja1.Cells.Font.Name = "Arial"
    xlHoja1.Cells.Font.Size = 8
    xlHoja1.Cells.EntireColumn.AutoFit

    xlHoja1.SaveAs App.path & "\SPOOLER\" & lsArchivo
    ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1

    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"

    Call CargaArchivo(lsArchivo, App.path & "\Spooler")

End Function

''' FIn excel


'Public Function ImprimeAnx13(ByVal sTitulo As String, ByVal ntxtTipCamFij1 As Double, pnbit_central As Boolean)
'    Dim oConConsol As DConecta
'
'    Dim oPrevio As clsPrevioFinan
'    Set oPrevio = New clsPrevioFinan
'    Dim lsCadena As String
'    On Error GoTo Err_
'
'    lsCadena = GetDepositosEscalaMontosAnx13(ntxtTipCamFij1, pnbit_central)
'
'    If Len(Trim(lsCadena)) > 0 Then
'        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
'    Else
'        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
'    End If
'
'Err_:
'        Exit Function
'
'End Function

Private Function GetDepositosEscalaMontosAnx13(ByVal nTCF As Double, ByVal pnBittCentral As Boolean) As String
Dim dbAux As ADODB.Connection
Dim rsCta As ADODB.Recordset
Dim sCad As String
Dim lnCarLin As Integer
Dim lsTitRp1 As String, lsTitRp2 As String
Dim lsMoneda As String, lsNumPag As String
Dim lsFecha As String
Dim lnLinPag As Integer
Dim lnCntPag As Integer
Dim nFSD As Double
Dim sEscala(1 To 14) As String * 50
Dim sProd(1 To 4) As String * 50
Dim I As Integer, P As Integer, j As Integer
Dim nIni As Double, nFin As Double
Dim sRan As String, sTipo As String
Dim nNum01 As Long, nNum02 As Long, nNum03 As Long
Dim nSald01 As Double, nSald02 As Double, nSald03 As Double
Dim nNumSubTot01 As Long, nNumSubTot02 As Long, nNumSubTot03 As Long
Dim nSubTot01 As Double, nSubTot02 As Double, nSubTot03 As Double
Dim nNumTot01 As Long, nNumTot02 As Long, nNumTot03 As Long
Dim nTot01 As Double, nTot02 As Double, nTot03 As Double
Dim dfecha As Date

Dim VSQL As String
Dim oConConsol As DConecta


sEscala(1) = "Hasta el 10% del FSD": sEscala(2) = "Más del 10% al 25% del FSD"
sEscala(3) = "Más del 25% al 50% del FSD": sEscala(4) = "Más del 50% al 100% del FSD"
sEscala(5) = "Más de 1 vez a 2 Veces del FSD": sEscala(6) = "Más de 2 veces a 4 Veces del FSD"
sEscala(7) = "Más de 4 veces a 6 Veces del FSD": sEscala(8) = "Más de 6 veces a 8 Veces del FSD"
sEscala(9) = "Más de 8 veces a 10 Veces del FSD": sEscala(10) = "Más de 10 veces a 15 Veces del FSD"
sEscala(11) = "Más de 15 veces a 20 Veces del FSD": sEscala(12) = "Más de 20 veces a 50 Veces del FSD"
sEscala(13) = "Más de 50 veces a 100 Veces del FSD": sEscala(14) = "Más de 100 Veces del FSD"

sProd(1) = "Sub Total AHORROS": sProd(2) = "Sub Total PLAZO FIJO"
sProd(3) = "Sub Total CTS": sProd(4) = "T O T A L "
 
     
    Dim oConAdd As DConecta
    Set oConAdd = New DConecta
    
    Dim oGen As DGeneral
    Set oGen = New DGeneral

    Set oConConsol = New DConecta

    'oConAdd.AbreConexionRemota "07", , , "01"
    'oConConsol.AbreConexionRemota "07", , , "03"
    oConAdd.AbreConexion 'Remota "", , , ""
    oConAdd.AbreConexion 'Remota "", , , ""
    nFSD = oGen.GetParametro(2000, 2019)      'Obtiene el Monto del FSD de la tabla de parámetros
    
    Set rsCta = New ADODB.Recordset
    rsCta.CursorLocation = adUseClient
    'Determina el servido consolidado de captaciones
    
    If pnBittCentral = True Then
        VSQL = "Select cNomVar, cValorVar From VarSistema Where (cCodProd = 'AHO' And cNomVar IN ('cDBAhoCont','cServAhoCont')) " _
        & "OR (cCodProd = 'ADM' And cNomVar IN ('dFecCierreMes'))"
    Else
        VSQL = "Select cNomVar, cValorVar From VarSistema Where (cCodProd = 'AHO' And cNomVar IN ('cDBAhoCont','cServAhoCont'))  OR (cCodProd = 'ADM' And cNomVar IN ('dFecCierreMes'))"
    End If
    
    Set rsCta = oConAdd.CargaRecordSet(VSQL)
 
    Set rsCta.ActiveConnection = Nothing
    Do While Not rsCta.EOF
        If Trim(rsCta!cNomVar) = "dFecCierreMes" Then
            dfecha = CDate(Trim(rsCta!cValorVar))
        End If
        rsCta.MoveNext
    Loop
    rsCta.Close
 
'Imprime la cabecera del reporte
sCad = ""
lnCarLin = 138
lnLinPag = 65
lsMoneda = String(7, " ")
lsTitRp1 = "D E P O S I T O S   S E G Ú N   E S C A L A   D E   M O N T O S"
'''lsTitRp2 = "AL " & UCase(ArmaFecha(dFecha)) & "  ( EN NUEVOS SOLES )" 'marg ers044-2016
lsTitRp2 = "AL " & UCase(ArmaFecha(dfecha)) & "  ( EN " & StrConv(gcPEN_PLURAL, vbUpperCase) & " )" 'marg ers044-2016
lsNumPag = ""
lnCntPag = 0
lsNumPag = FillNum(Trim(Str(lnCntPag)), 4, " ")
sCad = sCad & CabeRepoAnx13("", "", lnCarLin, "CONTABILIDAD", lsTitRp1, lsTitRp2, lsMoneda, lsNumPag) & oImpresora.gPrnSaltoLinea
sCad = sCad & String(80, " ") & "Monto FSD: " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & String(4, " ") & "Tipo de Cambio Fijo:  " & JDNum(Trim(Str(nTCF)), 7, False, 3, 4) & oImpresora.gPrnSaltoLinea
sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
sCad = sCad & String(81, " ") & "PERSONAS JURIDICAS" & Chr(10)
'''sCad = sCad & String(11, " ") + "ESCALA EN NUEVOS SOLES" & String(18, " ") 'marg ers044-2016
sCad = sCad & String(11, " ") + "ESCALA EN " & StrConv(gcPEN_PLURAL, vbUpperCase) & String(18, " ") 'marg ers044-2016
sCad = sCad & "  PERSONAS NATURALES "
sCad = sCad & "   SIN FINES DE LUCRO "
sCad = sCad & "   CON FINES DE LUCRO "
sCad = sCad & "  T  O  T  A  L  E  S" & Chr(10)
sCad = sCad & String(51, " ")
sCad = sCad & " NUMERO " & "   M O N T O "
sCad = sCad & "  NUMERO " & "    M O N T O "
sCad = sCad & " NUMERO " & "    M O N T O "
sCad = sCad & " NUMERO " & "    M O N T O" & Chr(10)
sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea

nNumTot01 = 0: nNumTot02 = 0: nNumTot03 = 0
nTot01 = 0: nTot02 = 0: nTot03 = 0
For P = 1 To 3
    nNumSubTot01 = 0: nNumSubTot02 = 0: nNumSubTot03 = 0
    nSubTot01 = 0: nSubTot02 = 0: nSubTot03 = 0
    Select Case P
        Case 1
            If pnBittCentral = True Then
                VSQL = "SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cPersCod, P.nPersPersoneria, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cPersCod, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntAC "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntAC*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..AhorroCConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.nEstCtaAC NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, P.nPersPersoneria "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.nPersPersoneria Order by TB.Tipo, TB.nPersPersoneria"
            Else
                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cCodPers, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '1' THEN A.nSaldCntAC "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '2' THEN A.nSaldCntAC*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..AhorroCConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.cEstCtaAC NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
        Case 2
            If pnBittCentral = True Then
                VSQL = "SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cPersCod, P.nPersPersoneria, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cPersCod, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntPF "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntPF*" & nTCF & " END "
                VSQL = VSQL & "FROM plazofijoconsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.nEstCtaPF NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, P.nPersPersoneria "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.nPersPersoneria Order by TB.Tipo, TB.nPersPersoneria"
            Else
                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cCodPers, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '1' THEN A.nSaldCntPF "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '2' THEN A.nSaldCntPF*" & nTCF & " END "
                VSQL = VSQL & "FROM plazofijoconsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.cEstCtaPF NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
        Case 3
            If pnBittCentral = True Then
                VSQL = "SELECT TB.Tipo, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cPersCod, P.nPersPersoneria, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cPersCod, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '" & gMonedaNacional & "' THEN A.nSaldCntCTS "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntCTS*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..CTSConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.nEstCtaCTS NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, P.nPersPersoneria "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.nPersPersoneria Order by TB.Tipo, TB.nPersPersoneria"
            Else
                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cCodPers, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '1' THEN A.nSaldCntCTS "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '2' THEN A.nSaldCntCTS*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..CTSConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.cEstCtaCTS NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
    End Select
    
    If rsCta.State = adStateOpen Then rsCta.Close
    Set rsCta = oConConsol.CargaRecordSet(VSQL)
    Set rsCta.ActiveConnection = Nothing

    nNum01 = 0: nNum02 = 0: nNum03 = 0
    nSald01 = 0: nSald02 = 0: nSald03 = 0
    sRan = "": I = 0
    If rsCta.EOF And rsCta.BOF Then
    Else
        Do While Not rsCta.EOF
            sTipo = Left(rsCta!Tipo, 2)
            If sRan <> sTipo Then
                If sRan <> "" Then
                    sCad = sCad & sEscala(I) & " "
                    sCad = sCad & JDNum(Str(nNum01), 7, True, 7, 0) & " "
                    sCad = sCad & JDNum(Str(nSald01), 13, True, 10, 2) & " "
                    sCad = sCad & JDNum(Str(nNum02), 7, True, 7, 0) & " "
                    sCad = sCad & JDNum(Str(nSald02), 13, True, 10, 2) & " "
                    sCad = sCad & JDNum(Str(nNum03), 7, True, 7, 0) & " "
                    sCad = sCad & JDNum(Str(nSald03), 13, True, 10, 2) & " "
                    sCad = sCad & JDNum(Str(nNum01 + nNum02 + nNum03), 7, True, 7, 0) & " "
                    sCad = sCad & JDNum(Str(nSald01 + nSald02 + nSald03), 13, True, 10, 2) & oImpresora.gPrnSaltoLinea
                    nNumSubTot01 = nNumSubTot01 + nNum01
                    nNumSubTot02 = nNumSubTot02 + nNum02
                    nNumSubTot03 = nNumSubTot03 + nNum03
                    nSubTot01 = nSubTot01 + nSald01
                    nSubTot02 = nSubTot02 + nSald02
                    nSubTot03 = nSubTot03 + nSald03
                    If CInt(sTipo) - 1 > I Then
                        For j = I + 1 To CInt(sTipo) - 1
                            sCad = sCad & sEscala(j) & " "
                            sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
                            sCad = sCad & JDNum("0", 13, True, 10, 2) & " "
                            sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
                            sCad = sCad & JDNum("0", 13, True, 10, 2) & " "
                            sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
                            sCad = sCad & JDNum("0", 13, True, 10, 2) & " "
                            sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
                            sCad = sCad & JDNum("0", 13, True, 10, 2) & oImpresora.gPrnSaltoLinea
                        Next j
                    End If
                End If
                nNum01 = 0: nNum02 = 0: nNum03 = 0
                nSald01 = 0: nSald02 = 0: nSald03 = 0
                I = CInt(sTipo)
                sRan = sTipo
            End If
            If pnBittCentral = True Then
                Select Case rsCta!nPersPersoneria
                Case gPersonaNat
                    nNum01 = nNum01 + rsCta!nNum
                    nSald01 = nSald01 + rsCta!Saldo
                'Variable no definida gPersonaJurSFLFoncodes
                'Case gPersonaJurSFL, gPersonaJurSFLFoncodes
                    'nNum02 = nNum02 + rsCta!nNum
                    'nSald02 = nSald02 + rsCta!Saldo
                Case Else
                    nNum03 = nNum03 + rsCta!nNum
                    nSald03 = nSald03 + rsCta!Saldo
                End Select
            Else
                Select Case rsCta!cTipPers
                    Case "1"
                        nNum01 = nNum01 + rsCta!nNum
                        nSald01 = nSald01 + rsCta!Saldo
                    Case "2"
                        nNum02 = nNum02 + rsCta!nNum
                        nSald02 = nSald02 + rsCta!Saldo
                    Case Else
                        nNum03 = nNum03 + rsCta!nNum
                        nSald03 = nSald03 + rsCta!Saldo
                End Select
            End If
            rsCta.MoveNext
        Loop
    End If
    sCad = sCad & sEscala(I) & " "
    sCad = sCad & JDNum(Str(nNum01), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSald01), 13, True, 10, 2) & " "
    sCad = sCad & JDNum(Str(nNum02), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSald02), 13, True, 10, 2) & " "
    sCad = sCad & JDNum(Str(nNum03), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSald03), 13, True, 10, 2) & " "
    sCad = sCad & JDNum(Str(nNum01 + nNum02 + nNum03), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSald01 + nSald02 + nSald03), 13, True, 10, 2) & oImpresora.gPrnSaltoLinea
    nNumSubTot01 = nNumSubTot01 + nNum01
    nNumSubTot02 = nNumSubTot02 + nNum02
    nNumSubTot03 = nNumSubTot03 + nNum03
    nSubTot01 = nSubTot01 + nSald01
    nSubTot02 = nSubTot02 + nSald02
    nSubTot03 = nSubTot03 + nSald03
    For j = I + 1 To 14
        sCad = sCad & sEscala(j) & " "
        sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
        sCad = sCad & JDNum("0", 13, True, 10, 2) & " "
        sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
        sCad = sCad & JDNum("0", 13, True, 10, 2) & " "
        sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
        sCad = sCad & JDNum("0", 13, True, 10, 2) & " "
        sCad = sCad & JDNum("0", 7, True, 7, 0) & " "
        sCad = sCad & JDNum("0", 13, True, 10, 2) & oImpresora.gPrnSaltoLinea
    Next j
    sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
    sCad = sCad & sProd(P) & " "
    sCad = sCad & JDNum(Str(nNumSubTot01), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSubTot01), 13, True, 10, 2) & " "
    sCad = sCad & JDNum(Str(nNumSubTot02), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSubTot02), 13, True, 10, 2) & " "
    sCad = sCad & JDNum(Str(nNumSubTot03), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSubTot03), 13, True, 10, 2) & " "
    sCad = sCad & JDNum(Str(nNumSubTot01 + nNumSubTot02 + nNumSubTot03), 7, True, 7, 0) & " "
    sCad = sCad & JDNum(Str(nSubTot01 + nSubTot02 + nSubTot03), 13, True, 10, 2) & oImpresora.gPrnSaltoLinea
    sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
    nNumTot01 = nNumTot01 + nNumSubTot01
    nNumTot02 = nNumTot02 + nNumSubTot02
    nNumTot03 = nNumTot03 + nNumSubTot03
    nTot01 = nTot01 + nSubTot01
    nTot02 = nTot02 + nSubTot02
    nTot03 = nTot03 + nSubTot03
Next P
sCad = sCad & String(lnCarLin, "=") & oImpresora.gPrnSaltoLinea
sCad = sCad & sProd(P) & " "
sCad = sCad & JDNum(Str(nNumTot01), 7, True, 7, 0) & " "
sCad = sCad & JDNum(Str(nTot01), 13, True, 10, 2) & " "
sCad = sCad & JDNum(Str(nNumTot02), 7, True, 7, 0) & " "
sCad = sCad & JDNum(Str(nTot02), 13, True, 10, 2) & " "
sCad = sCad & JDNum(Str(nNumTot03), 7, True, 7, 0) & " "
sCad = sCad & JDNum(Str(nTot03), 13, True, 10, 2) & " "
sCad = sCad & JDNum(Str(nNumTot01 + nNumTot02 + nNumTot03), 7, True, 7, 0) & " "
sCad = sCad & JDNum(Str(nTot01 + nTot02 + nTot03), 13, True, 10, 2) & oImpresora.gPrnSaltoLinea
sCad = sCad & String(lnCarLin, "=") & oImpresora.gPrnSaltoLinea
GetDepositosEscalaMontosAnx13 = sCad
End Function

Private Function GetTotalizaAnx13(ByVal sTipo As String, ByVal nPersoneria As Integer, ByVal pdFecha As Date, ByVal nFSD As Double, ByVal nTCF As Double, ByRef pnSaldo As Double) As Long
Dim QSQL As String
Dim oConConsol As DConecta
    
Dim rsCta As ADODB.Recordset
Set oConConsol = New DConecta
GetTotalizaAnx13 = 0
pnSaldo = 0

oConConsol.AbreConexion
'***Modificado por ELRO el 20130618, según SAIT TIC1306080002***
'QSQL = " select nNum=count(distinct f.cperscod),f.tipo,f.nPersPersoneria,nsaldo=sum( f.nsaldo)  "
'QSQL = QSQL & " From "
'QSQL = QSQL & "("
'QSQL = QSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo"
'QSQL = QSQL & "     FROM ("
'QSQL = QSQL & "         SELECT A.cCtaCod,nPersoneria=case when  C.nPersoneria<>2 and C.nPersoneria<>1 then 3  else C.nPersoneria end  ,"
'QSQL = QSQL & "         nSaldo = CASE WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "         WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN Captaciones C ON A.cCtaCod = C.cCtaCod"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) like  '23[234]'  "
'QSQL = QSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
'QSQL = QSQL & " ) TA"
'QSQL = QSQL & " INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10'"
'QSQL = QSQL & " Group by P.cPersCod, TA.nPersPersoneria "
'QSQL = QSQL & " ) f "
'QSQL = QSQL & " where left(f.tipo,2)='" & sTipo & "' and f.nPersPersoneria=" & nPersoneria
'QSQL = QSQL & " group by f.tipo,f.nPersPersoneria "
'QSQL = QSQL & " order by f.nPersPersoneria,f.tipo "
QSQL = "exec stp_sel_DevolverTotalAnexo13 '" & Format(pdFecha, "yyyyMMdd") & "', " & Format(nTCF, "#0.0000") & ", " & nFSD & ", '" & sTipo & "', " & nPersoneria & ""
'***Fin Modificado por ELRO el 20130618, según SAIT TIC1306080002

Set rsCta = New ADODB.Recordset
Set rsCta = oConConsol.CargaRecordSet(QSQL)

If Not rsCta.EOF Then
    GetTotalizaAnx13 = rsCta!nNum
    pnSaldo = rsCta!nSaldo
End If


oConConsol.CierraConexion
Set oConConsol = Nothing
Set rsCta = Nothing

End Function



'Private Function GetTotalizaAnx13(ByVal sTipo As String, ByVal nPersoneria As Integer, ByVal pdfecha As Date) As Long
'Dim QSQL As String
'Dim oConConsol As DConecta
'    Dim oConAdd As DConecta
'    Set oConAdd = New DConecta
'Dim rsCta As ADODB.Recordset
'Dim nFSD As Double
'nFSD = oGen.GetParametro(2000, 2019)
'
'Set oConConsol = New DConecta
'GetTotalizaAnx13 = 0
'
'QSQL = " select nNum=count(distinct f.cperscod),f.tipo,f.nPersPersoneria "
'QSQL = QSQL & " From "
'QSQL = QSQL & "("
'QSQL = QSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo"
'QSQL = QSQL & "     FROM ("
'QSQL = QSQL & "         SELECT A.cCtaCod, C.nPersoneria,"
'QSQL = QSQL & "         nSaldo = CASE WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "         WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN Captaciones C ON A.cCtaCod = C.cCtaCod"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdfecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) = '232' And nInmovilizada <> 1 And nTpoBloqueo not in (3,15) "
'QSQL = QSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
'QSQL = QSQL & " ) TA"
'QSQL = QSQL & " INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10'"
'QSQL = QSQL & " Group by P.cPersCod, TA.nPersPersoneria "
'QSQL = QSQL & " UNION "
'QSQL = QSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <=  " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.10 And SUM(TA.nSaldo) <=  " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.25 And SUM(TA.nSaldo) <=  " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.50 And SUM(TA.nSaldo) <=  " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*1 And SUM(TA.nSaldo) <=  " & nFSD & "*2 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*2 And SUM(TA.nSaldo) <=  " & nFSD & "*4 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*4 And SUM(TA.nSaldo) <=  " & nFSD & "*6 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*6 And SUM(TA.nSaldo) <=  " & nFSD & "*8 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*8 And SUM(TA.nSaldo) <=  " & nFSD & "*10 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*10 And SUM(TA.nSaldo) <=  " & nFSD & "*15 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*15 And SUM(TA.nSaldo) <=  " & nFSD & "*20 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*20 And SUM(TA.nSaldo) <=  " & nFSD & "*50 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*50 And SUM(TA.nSaldo) <=  " & nFSD & "*100 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*100 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, T.nSaldo/Count(*) nSaldo"
'QSQL = QSQL & "     FROM ("
'QSQL = QSQL & "         SELECT A.cCtaCod, C.nPersoneria,"
'QSQL = QSQL & "         nSaldo = CASE    WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "             WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN Captaciones C ON C.cCtaCod = A.cCtaCod"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE  PC.nPrdPersRelac = 10 AND ( (SUBSTRING(A.cCtacod,6,3) = '233') Or (SUBSTRING(A.cCtacod,6,3) like '23[24]' And (nInmovilizada = 1 or nTpoBloqueo in (3,15)  )  ) ) and Datediff(day,A.dFecha,'" & Format(pdfecha, "mm/dd/yyyy") & "')=0  "
'QSQL = QSQL & "     ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
'QSQL = QSQL & " ) TA INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10'"
'QSQL = QSQL & " Group by P.cPersCod, TA.nPersPersoneria "
'QSQL = QSQL & " UNION "
'QSQL = QSQL & " SELECT P.cPersCod, P.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <=  " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.10 And SUM(TA.nSaldo) <=  " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.25 And SUM(TA.nSaldo) <=  " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.50 And SUM(TA.nSaldo) <=  " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*1 And SUM(TA.nSaldo) <=  " & nFSD & "*2 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*2 And SUM(TA.nSaldo) <=  " & nFSD & "*4 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*4 And SUM(TA.nSaldo) <=  " & nFSD & "*6 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*6 And SUM(TA.nSaldo) <=  " & nFSD & "*8 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*8 And SUM(TA.nSaldo) <=  " & nFSD & "*10 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*10 And SUM(TA.nSaldo) <=  " & nFSD & "*15 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*15 And SUM(TA.nSaldo) <=  " & nFSD & "*20 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*20 And SUM(TA.nSaldo) <=  " & nFSD & "*50 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*50 And SUM(TA.nSaldo) <=  " & nFSD & "*100 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*100 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & " Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & " SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "  SELECT PC.cCtaCod, PC.cPersCod,"
'QSQL = QSQL & "         nSaldo = CASE WHEN SUBSTRING(PC.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "             WHEN SUBSTRING(PC.cCtaCod,9,1) = '2' THEN A.nSaldCnt* " & Format(nTCF, "#0.0000") & "  END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE PC.nPrdPersRelac = 10 AND SUBSTRING(A.cCtacod,6,3) = '234' and Datediff(day,A.dFecha,'" & Format(pdfecha, "mm/dd/yyyy") & "')= 0  And nInmovilizada <> 1 And nTpoBloqueo not in (3,15) "
'QSQL = QSQL & "     ) T Group by T.cCtaCod"
'QSQL = QSQL & " ) TA INNER JOIN ProductoPersona PC"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10' and P.nPersPersoneria"
'QSQL = QSQL & " Group by P.cPersCod, P.nPersPersoneria "
'QSQL = QSQL & " ) f "
'QSQL = QSQL & " where left(f.tipo,2)='" & sTipo & "' and f.nPersPersoneria=" & nPersoneria
'QSQL = QSQL & " group by f.tipo,f.nPersPersoneria "
'QSQL = QSQL & " order by f.nPersPersoneria,f.tipo "
'
'Set rsCta = oConConsol.CargaRecordSet(QSQL)
'If Not rsCta.EOF Then
'    GetTotalizaAnx13 = rsCta!nNum
'End If
'End Function

Private Function GetTotalTotalAnx13(ByVal nPersoneria As Integer, ByVal pdFecha As Date, ByVal nFSD As Double, ByVal nTCF As Double) As Long
Dim QSQL As String
Dim oConConsol As DConecta
Set oConConsol = New DConecta
Dim rsCta As ADODB.Recordset
    

GetTotalTotalAnx13 = 0

oConConsol.AbreConexion

QSQL = " select nNum=count(distinct f.cperscod),f.nPersPersoneria "
QSQL = QSQL & " From "
QSQL = QSQL & "("
QSQL = QSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces'"
QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' END,"
QSQL = QSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
QSQL = QSQL & " FROM ("
QSQL = QSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo"
QSQL = QSQL & "     FROM ("
QSQL = QSQL & "         SELECT A.cCtaCod, nPersoneria=case when  C.nPersoneria<>2 and C.nPersoneria<>1 then 3  else C.nPersoneria end ,"
QSQL = QSQL & "         nSaldo = CASE WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
QSQL = QSQL & "         WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
QSQL = QSQL & "         FROM CapSaldosDiarios A"
QSQL = QSQL & "         INNER JOIN Captaciones C ON A.cCtaCod = C.cCtaCod"
QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
QSQL = QSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdFecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) like  '23[234]'  "
QSQL = QSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
QSQL = QSQL & " ) TA"
QSQL = QSQL & " INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10'"
QSQL = QSQL & " Group by P.cPersCod, TA.nPersPersoneria "
QSQL = QSQL & " ) f "
QSQL = QSQL & " where f.nPersPersoneria=" & nPersoneria
QSQL = QSQL & " group by f.nPersPersoneria "
QSQL = QSQL & " order by f.nPersPersoneria "


'QSQL = " select nNum=count(distinct f.cperscod),f.nPersPersoneria "
'QSQL = QSQL & " From "
'QSQL = QSQL & "("
'QSQL = QSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo"
'QSQL = QSQL & "     FROM ("
'QSQL = QSQL & "         SELECT A.cCtaCod, C.nPersoneria,"
'QSQL = QSQL & "         nSaldo = CASE WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "         WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN Captaciones C ON A.cCtaCod = C.cCtaCod"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE PC.nPrdPersRelac = 10 AND DATEDIFF(day,dFecha,'" & Format(pdfecha, "mm/dd/yyyy") & "')=0 AND SUBSTRING(A.cCtaCod,6,3) = '232' And nInmovilizada <> 1 And nTpoBloqueo not in (3,15) "
'QSQL = QSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
'QSQL = QSQL & " ) TA"
'QSQL = QSQL & " INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10'"
'QSQL = QSQL & " Group by P.cPersCod, TA.nPersPersoneria "
'QSQL = QSQL & " UNION "
'QSQL = QSQL & " SELECT P.cPersCod, TA.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <=  " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.10 And SUM(TA.nSaldo) <=  " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.25 And SUM(TA.nSaldo) <=  " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.50 And SUM(TA.nSaldo) <=  " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*1 And SUM(TA.nSaldo) <=  " & nFSD & "*2 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*2 And SUM(TA.nSaldo) <=  " & nFSD & "*4 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*4 And SUM(TA.nSaldo) <=  " & nFSD & "*6 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*6 And SUM(TA.nSaldo) <=  " & nFSD & "*8 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*8 And SUM(TA.nSaldo) <=  " & nFSD & "*10 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*10 And SUM(TA.nSaldo) <=  " & nFSD & "*15 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*15 And SUM(TA.nSaldo) <=  " & nFSD & "*20 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*20 And SUM(TA.nSaldo) <=  " & nFSD & "*50 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*50 And SUM(TA.nSaldo) <=  " & nFSD & "*100 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*100 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & "     ISNULL(SUM(TA.nSaldo),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "     SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, T.nSaldo/Count(*) nSaldo"
'QSQL = QSQL & "     FROM ("
'QSQL = QSQL & "         SELECT A.cCtaCod, C.nPersoneria,"
'QSQL = QSQL & "         nSaldo = CASE    WHEN SUBSTRING(A.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "             WHEN SUBSTRING(A.cCtaCod,9,1) = '2' THEN A.nSaldCnt * " & Format(nTCF, "#0.0000") & " END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN Captaciones C ON C.cCtaCod = A.cCtaCod"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE  PC.nPrdPersRelac = 10 AND ( (SUBSTRING(A.cCtacod,6,3) = '233') Or (SUBSTRING(A.cCtacod,6,3) like '23[24]' And (nInmovilizada = 1 or nTpoBloqueo in (3,15)  )  ) ) and Datediff(day,A.dFecha,'" & Format(pdfecha, "mm/dd/yyyy") & "')=0  "
'QSQL = QSQL & "     ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo"
'QSQL = QSQL & " ) TA INNER JOIN ProductoPersona PC ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10'"
'QSQL = QSQL & " Group by P.cPersCod, TA.nPersPersoneria "
'QSQL = QSQL & " UNION "
'QSQL = QSQL & " SELECT P.cPersCod, P.nPersPersoneria,"
'QSQL = QSQL & " Tipo = CASE WHEN SUM(TA.nSaldo) <=  " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD'"
'QSQL = QSQL & "     WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.10 And SUM(TA.nSaldo) <=  " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.25 And SUM(TA.nSaldo) <=  " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*0.50 And SUM(TA.nSaldo) <=  " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*1 And SUM(TA.nSaldo) <=  " & nFSD & "*2 THEN '05. 01 a 02 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*2 And SUM(TA.nSaldo) <=  " & nFSD & "*4 THEN '06. 02 a 04 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*4 And SUM(TA.nSaldo) <=  " & nFSD & "*6 THEN '07. 04 a 06 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*6 And SUM(TA.nSaldo) <=  " & nFSD & "*8 THEN '08. 06 a 08 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*8 And SUM(TA.nSaldo) <=  " & nFSD & "*10 THEN '09. 08 a 10 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*10 And SUM(TA.nSaldo) <=  " & nFSD & "*15 THEN '10. 10 a 15 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*15 And SUM(TA.nSaldo) <=  " & nFSD & "*20 THEN '11. 15 a 20 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*20 And SUM(TA.nSaldo) <=  " & nFSD & "*50 THEN '12. 20 a 50 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*50 And SUM(TA.nSaldo) <=  " & nFSD & "*100 THEN '13. 50 a 100 Veces'"
'QSQL = QSQL & " WHEN SUM(TA.nSaldo) >  " & nFSD & "*100 THEN '14. Más de 100 Veces' END,"
'QSQL = QSQL & " Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & " SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo"
'QSQL = QSQL & " FROM ("
'QSQL = QSQL & "  SELECT PC.cCtaCod, PC.cPersCod,"
'QSQL = QSQL & "         nSaldo = CASE WHEN SUBSTRING(PC.cCtaCod,9,1) = '1' THEN A.nSaldCnt"
'QSQL = QSQL & "             WHEN SUBSTRING(PC.cCtaCod,9,1) = '2' THEN A.nSaldCnt* " & Format(nTCF, "#0.0000") & "  END"
'QSQL = QSQL & "         FROM CapSaldosDiarios A"
'QSQL = QSQL & "         INNER JOIN ProductoPersona PC ON A.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & "         WHERE PC.nPrdPersRelac = 10 AND SUBSTRING(A.cCtacod,6,3) = '234' and Datediff(day,A.dFecha,'" & Format(pdfecha, "mm/dd/yyyy") & "')= 0  And nInmovilizada <> 1 And nTpoBloqueo not in (3,15) "
'QSQL = QSQL & "     ) T Group by T.cCtaCod"
'QSQL = QSQL & " ) TA INNER JOIN ProductoPersona PC"
'QSQL = QSQL & " INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON TA.cCtaCod = PC.cCtaCod"
'QSQL = QSQL & " WHERE PC.nPrdPersRelac = '10' and P.nPersPersoneria"
'QSQL = QSQL & " Group by P.cPersCod, P.nPersPersoneria "
'QSQL = QSQL & " ) f "
'QSQL = QSQL & " where f.nPersPersoneria=" & nPersoneria
'QSQL = QSQL & " group by f.tipo,f.nPersPersoneria "
'QSQL = QSQL & " order by f.nPersPersoneria "
Set rsCta = New ADODB.Recordset
Set rsCta = oConConsol.CargaRecordSet(QSQL)
If Not rsCta.EOF Then
    GetTotalTotalAnx13 = rsCta!nNum
End If

oConConsol.CierraConexion
Set oConConsol = Nothing
Set rsCta = Nothing
End Function


Private Function CabeRepoAnx13(psCabe01 As String, psCabe02 As String, _
                         pnCarLin As Integer, psSeccio As String, _
                         psTitRp1 As String, psTitRp2 As String, _
                         pnMoneda As String, psNumPag As String) As String

    Dim lsTitRp1 As String, lsTitRp2 As String
    Dim lsMoneda As String

    lsTitRp1 = "": lsTitRp2 = ""
    CabeRepoAnx13 = ""
    lsMoneda = ""
    lsMoneda = IIf(pnMoneda = "", String(10, " "), " - " & pnMoneda)

    '   Definición de Cabecera 1

    psCabe01 = FillText(UCase(Trim(gsNomCmac) & " - " & Trim(gsNomAge)) & lsMoneda, 36, " ")
    psCabe01 = psCabe01 & space((pnCarLin - 36) - (Len(psCabe01) - 2))
    psCabe01 = psCabe01 & "PAGINA: " & psNumPag
    psCabe01 = psCabe01 & space(5) & "FECHA: " & Format(gdFecSis, "dd/mm/yyyy")
    '   Definición de Cabecera 2
    psCabe02 = FillText(psSeccio, 19, " ")
    psCabe02 = psCabe02 & space((pnCarLin - 19) - (Len(psCabe02) - 2))
    psCabe02 = psCabe02 & "HORA :   " & Format(Now(), "hh:mm:ss")
    '   Definición del Titulo del Reporte
    lsTitRp1 = String(Int((pnCarLin - Len(psTitRp1)) / 2), " ") & BON & psTitRp1 & BOFF
    lsTitRp2 = String(Int((pnCarLin - Len(psTitRp2)) / 2), " ") & BON & psTitRp2 & BOFF

    CabeRepoAnx13 = CabeRepoAnx13 & psCabe01 & oImpresora.gPrnSaltoLinea
    CabeRepoAnx13 = CabeRepoAnx13 & psCabe02 & oImpresora.gPrnSaltoLinea
    CabeRepoAnx13 = CabeRepoAnx13 & lsTitRp1 & oImpresora.gPrnSaltoLinea
    CabeRepoAnx13 = CabeRepoAnx13 & lsTitRp2

End Function

Private Function JDNum(pnCampos As String, pnLongit As Integer, _
                      pbComass As Boolean, pnDigEnt As Integer, _
                      pnDigDec As Integer)

    Dim Formato As String, I As Integer, lnPosDig As Integer

    If pnCampos = "0.00" Then
       JDNum = Format(Trim(pnCampos), String(pnLongit, "@"))
       Exit Function
    End If

    If pbComass Then
       lnPosDig = 0
       For I = 1 To pnDigEnt
           lnPosDig = lnPosDig + 1
           Select Case lnPosDig
              Case 1
                   Formato = "0" & Formato
              Case 4, 7, 10
                   Formato = "#," & Formato
              Case Else
                   Formato = "#" & Formato
           End Select
       Next I
       If pnDigDec > 0 Then
          Formato = Formato & "." & String(pnDigDec, "0")
       End If
    Else
       For I = 1 To pnDigEnt
           Formato = IIf(I = 1, "0", "#") & Formato
       Next I
       If pnDigDec > 0 Then
          Formato = Formato & "." & String(pnDigDec, "0")
       End If
    End If
    pnCampos = Format(pnCampos, Formato)

    JDNum = Format(Trim(pnCampos), String(pnLongit, "@"))

End Function

Public Sub Consolida763201(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal sLstage As ListBox, dFecIni As String, dFecFin As String, Optional pnTipCambio As Double = 1)


    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan

    Dim I As Integer
    Dim lsCadena As String
    Dim j As Integer
    Dim lbBan As Boolean

    On Error GoTo Err_
      
    lsCadena = ""
 
    For I = 0 To sLstage.ListCount - 1
        If sLstage.Selected(I) Then
            If Right(sLstage.List(I), 5) = "ONSOL" Then
                lsCadena = lsCadena & GetMovCompraVentaMEConsolidaCaptac(pnbitcentral_, CDate(dFecIni), DateAdd("d", 1, CDate(dFecFin)), sLstage)
            Else
                lsCadena = lsCadena & GetMovCompraVentaMEConsolidaCaptac(pnbitcentral_, CDate(dFecIni), DateAdd("d", 1, CDate(dFecFin)), sLstage, IIf(gbBitCentral = True, Right(sLstage.List(I), 5), Right(sLstage.List(I), 5)))
            End If
        End If
    Next I
    
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
        MsgBox "Consolidación Finalizada", vbInformation, "Aviso!!!"
    Else
        MsgBox "Consolidacion Ejecutada", vbInformation, "Avis!!!"
        'MsgBox "No se encontraron datos", vbInformation, "Aviso!!!"
    End If

    
Err_:
        Exit Sub

End Sub

Private Function GetMovCompraVentaMEConsolidaCaptac(pnBitCentral As Boolean, pdFecIni As Date, pdFecFin As Date, sLstage As ListBox, Optional psCodAge As String = "", Optional nTipCambio As Double = 1) As String
    Dim sqlC As String
    Dim sqlRes As String
    Dim rsRes As New ADODB.Recordset
    Dim lsCadena As String
    Dim lnNumAgeNoRes As Integer
    Dim a As Boolean
    Dim I As Integer
    
    Dim oCon As DConecta
    Set oCon = New DConecta
    
    If gbBitCentral = True Then
         sqlRes = "select substring(M.cmovnro,7,2) + '/' + substring(M.cmovnro,5,2) + '/' + substring(M.cmovnro,1,4)  as dFecTran, " & _
                " M.nMovNro as nNumTran, right(M.cmovnro,4) as cCodUsu, M.cOpeCod as cCodOpe, " & _
                " MC.nMovIMporte as nMonTran, substring(cMovNro, 18,2) as cCodAge, mt.nmovtpocambio as nTipCambio " & _
                " From Mov M  inner join MovCompraVenta MC   " & _
                " on  m.nMovNro = MC.nMovNro " & _
                " inner join movtpocambio mt on mt.nmovnro=mc.nmovnro " & _
                " where substring(M.cmovnro,1,8)  Between '" & Format(pdFecIni, "YYYYmmdd") & "' And '" & Format(pdFecFin, "YYYYmmdd") & "' and M.cOpeCod in ('900021','900022','900023','900024', '900025', '900026')" & _
                " and M.nMovFlag=0"
             
             
    Else
        sqlRes = " Select dFecTran,nNumTran,cCodUsu,cCodOpe,nMonTran,nTipCambio,cCodAge From TransAho" _
               & " where dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy hh:mm:ss ") & "' And '" & Format(pdFecFin, "mm/dd/yyyy hh:mm:ss ") & "' and cCodOpe in ('230101','230102') and cFlag is Null"
    End If
    
    If psCodAge <> "" Then
         Dim oConConsol As DConecta
        Set oConConsol = New DConecta
        
        If gbBitCentral = True Then
            oConConsol.AbreConexion
            Set rsRes = oConConsol.CargaRecordSet(sqlRes)
        Else
            If oConConsol.AbreConexion Then 'Remota(Right(psCodAge, 2), , False)
               Set rsRes = oConConsol.CargaRecordSet(sqlRes)
            Else
               Exit Function
            End If
        End If
        
        If Not RSVacio(rsRes) Then
            oCon.AbreConexion
            oCon.BeginTrans
            If pnBitCentral = True Then
                sqlC = "Delete CompraVenta where dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy hh:mm:ss ") & "' And '" & Format(pdFecFin, "mm/dd/yyyy hh:mm:ss ") & "' And cCodAge = '" & Trim(psCodAge) & "'"
            Else
                sqlC = "Delete CompraVenta where dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy hh:mm:ss ") & "' And '" & Format(pdFecFin, "mm/dd/yyyy hh:mm:ss ") & "' And cCodAge = '" & Trim(psCodAge) & "'"
            End If
            
            oCon.Ejecutar sqlC
            While Not rsRes.EOF
                If pnBitCentral = True Then
                    sqlC = " Insert CompraVenta (dFecTran,nNumTran,cCodUsu,cCodOpe,nMonTran,nTipCambio,cCodAge)" _
                         & " Values('" & Format(rsRes!DFECTRAN, "mm/dd/yyyy hh:mm:ss ") & "'," & rsRes!nnumTran & ",'" & rsRes!cCodUsu & "'," _
                         & " '" & rsRes!cCodOpe & "'," & rsRes!nMonTran & "," & rsRes!nTipCambio & ",'" & rsRes!cCodAge & "')"
                Else
                    sqlC = " Insert CompraVenta (dFecTran,nNumTran,cCodUsu,cCodOpe,nMonTran,nTipCambio,cCodAge)" _
                     & " Values('" & Format(rsRes!DFECTRAN, "mm/dd/yyyy hh:mm:ss ") & "'," & rsRes!nnumTran & ",'" & rsRes!cCodUsu & "'," _
                     & " '" & rsRes!cCodOpe & "'," & rsRes!nMonTran & "," & rsRes!nTipCambio & ",'" & rsRes!cCodAge & "')"
                End If
                oCon.Ejecutar sqlC
                rsRes.MoveNext
            Wend
            oCon.CommitTrans
            
        Else
            lsCadena = lsCadena & Left(GetNombreAgencia(psCodAge), 20) & space(10) & "- No tiene Compra/Venta." & Chr(10)
        End If
        
        rsRes.Close
        Set rsRes = Nothing
          
        oConConsol.CierraConexion
        oCon.CierraConexion
         
    Else
        For I = 0 To sLstage.ListCount - 2
            If gbBitCentral = True Then
                Set oConConsol = New DConecta
                oConConsol.AbreConexion
            Else
               a = oConConsol.AbreConexion 'Remota(Right(psCodAge, 2), True, False)
                If a = False Then
                    lnNumAgeNoRes = lnNumAgeNoRes + 1
                End If
            End If
            
               Set rsRes = oConConsol.CargaRecordSet(sqlRes)
                If Not RSVacio(rsRes) Then
                    oConConsol.BeginTrans
                    If pnBitCentral = True Then
                        sqlC = "Delete CompraVenta where dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy hh:mm:ss ") & "' And '" & Format(pdFecFin, "mm/dd/yyyy hh:mm:ss ") & "' and cCodAge = '" & Right(sLstage.List(I), 2) & "'"
                    Else
                        sqlC = "Delete CompraVenta where dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy hh:mm:ss ") & "' And '" & Format(pdFecFin, "mm/dd/yyyy hh:mm:ss ") & "' and cCodAge = '" & Right(sLstage.List(I), 5) & "'"
                    End If
                    oConConsol.Ejecutar sqlC
                    While Not rsRes.EOF
                        If pnBitCentral = True Then
                            sqlC = " Insert CompraVenta (dFecTran,nNumTran,cCodUsu,cCodOpe,nMonTran,nTipCambio,cCodAge)" _
                                 & " Values('" & Format(rsRes!DFECTRAN, "mm/dd/yyyy hh:mm:ss ") & "'," & rsRes!nnumTran & ",'" & rsRes!cCodUsu & "'," _
                                 & " '" & rsRes!cCodOpe & "'," & rsRes!nMonTran & "," & rsRes!nTipCambio & ",'" & rsRes!cCodAge & "')"
                        Else
                            sqlC = " Insert CompraVenta (dFecTran,nNumTran,cCodUsu,cCodOpe,nMonTran,nTipCambio,cCodAge)" _
                                     & " Values('" & Format(rsRes!DFECTRAN, "mm/dd/yyyy hh:mm:ss ") & "'," & rsRes!nnumTran & ",'" & rsRes!cCodUsu & "'," _
                                     & " '" & rsRes!cCodOpe & "'," & rsRes!nMonTran & "," & rsRes!nTipCambio & ",'" & rsRes!cCodAge & "')"
                        End If
                        oConConsol.Ejecutar sqlC
                        rsRes.MoveNext
                    Wend
                    oConConsol.CommitTrans
                    
                Else
                    lsCadena = lsCadena & Left(sLstage.List(I), 20) & space(10) & "- No tiene Compra/Venta." & oImpresora.gPrnSaltoLinea
                End If
                rsRes.Close
                Set rsRes = Nothing
                oConConsol.CierraConexion
            
         Next I
    End If
    
    GetMovCompraVentaMEConsolidaCaptac = lsCadena
End Function

Public Function ReadVarSisTempo(txtCodPro As String, txtNomVar As String) As String
    Dim RecVar As New ADODB.Recordset
    Dim qryVar As String
    Dim oCon As DConecta
    Set oCon = New DConecta
    oCon.AbreConexion 'Remota "07", , , "01"
    On Error GoTo ERROR

    qryVar = "SELECT cCodProd, cValorVar, cNomVar FROM VarSistema WHERE cCodProd = '" & txtCodPro & "' AND cNomVar = '" & txtNomVar & "'"
 
    Set RecVar = oCon.CargaRecordSet(qryVar)

    If Not RecVar.EOF Then
      ReadVarSisTempo = Trim(RecVar!cValorVar)
    Else
      MsgBox "Variable " & txtNomVar & " no esta definido en el Sistema!. Por favor Consultar con Sistemas", vbInformation, "!Aviso!"
    End If
    RecVar.Close
    Set RecVar = Nothing
    oCon.CierraConexion
    Exit Function
ERROR:
    MsgBox "Error en Conexión + " + Err.Description, vbCritical, "Aviso"
End Function

Public Sub Imprime763201(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal sLstage As ListBox, dFecIni As String, dFecFin As String)

Dim oPrevio As clsPrevioFinan

Set oPrevio = New clsPrevioFinan

    Dim I As Integer
    Dim lsCadena As String
    Dim j As Integer
     
    lsCadena = ""
    For I = 0 To sLstage.ListCount - 1
        If sLstage.Selected(I) Then
            If Right(sLstage.List(I), 5) = "ONSOL" Then
                For j = 0 To DateDiff("d", CDate(dFecIni), CDate(dFecFin))
                    If j Mod 5 = 0 And j <> 0 Then lsCadena = lsCadena & Chr(12)
                    lsCadena = lsCadena & GetMovCompraVentaMECaptac(pnbitcentral_, DateAdd("d", j, CDate(dFecIni)), DateAdd("d", j, CDate(dFecIni)))
                Next j
            Else
                For j = 0 To DateDiff("d", CDate(dFecIni), CDate(dFecFin))
                    If j Mod 5 = 0 And j <> 0 Then lsCadena = lsCadena & Chr(12)
                    lsCadena = lsCadena & GetMovCompraVentaMECaptac(pnbitcentral_, DateAdd("d", j, CDate(dFecIni)), DateAdd("d", j, CDate(dFecIni)), IIf(gbBitCentral = True, Right(sLstage.List(I), 2), Right(sLstage.List(I), 5)))
                Next j
                
                 
            End If
        End If
    Next I
    
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If

Err_:
        Exit Sub
End Sub

Private Function GetMovCompraVentaMECaptac(pnBitCentral As Boolean, pdFecIni As Date, pdFecFin As Date, Optional psCodAge As String = "") As String
    Dim sqlC As String
    Dim sqlV As String
    Dim sqlT As String
    
    Dim I As Integer
    
    Dim lnConsolTotal As Currency
    Dim lnConsolNumero As Currency
    Dim lnConsolTipCambio As Currency
    
    Dim lnTotal As Currency
    Dim lnNumero As Currency
    Dim lnTipCambio As Currency
    
    Dim lnMonComDol As Currency
    Dim lnMonVenDol As Currency
    Dim lnMonComSol As Currency
    Dim lnMonVenSol As Currency
    Dim lnPromCom As Currency
    Dim lnPromVen As Currency
    Dim lnCotMaxCom As Currency
    Dim lnCotMaxVen As Currency
    Dim lnCotMinCom As Currency
    Dim lnCotMinVen As Currency
    
    Dim rsRes As New ADODB.Recordset
    Dim lnNumAgeNoRes As Integer
            
    Dim oCon As DConecta
    Dim gcCentralCom As String
    
    gcCentralCom = "DBCOMUNES.."
            
    lnNumAgeNoRes = 0
'    sqlC = " Select TotalDol = Sum(nMonTran), TotalSol = Sum(nMonTran * nTipCambio), Numero = Count(nTipCambio), TipCambio = Sum(nTipCambio) From CompraVenta Where cCodOpe = '900022'" _
'         & " and dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy") & "' and '" & Format(DateAdd("d", 1, pdFecFin), "mm/dd/yyyy") & "'"

    sqlC = " Select TotalDol = Sum(nMonTran), TotalSol = Sum(nMonTran * nTipCambio), Numero = Count(nTipCambio), TipCambio = Sum(nTipCambio) From CompraVenta Where cCodOpe = '900022'" _
         & " and dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy") & "' and '" & Format(pdFecFin, "mm/dd/yyyy") & "'"

         
'    sqlV = " Select TotalDol = Sum(nMonTran), TotalSol = Sum(nMonTran * nTipCambio), Numero = Count(nTipCambio), TipCambio = Sum(nTipCambio) From CompraVenta Where cCodOpe = '900023'" _
'         & " and dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy") & "' and '" & Format(DateAdd("d", 1, pdFecFin), "mm/dd/yyyy") & "'"
 
    sqlV = " Select TotalDol = Sum(nMonTran), TotalSol = Sum(nMonTran * nTipCambio), Numero = Count(nTipCambio), TipCambio = Sum(nTipCambio) From CompraVenta Where cCodOpe = '900023'" _
         & " and dFecTran Between '" & Format(pdFecIni, "mm/dd/yyyy") & "' and '" & Format(pdFecFin, "mm/dd/yyyy") & "'"
 
    
    If pnBitCentral = False Then
'        sqlT = " Select ProCom = AVG(nValComp), ProVen = AVG(nValVent), " _
'             & " MaxCom = Max(nValComp), MaxVen = Max(nValVent)," _
'             & " MinCom = Max(nValComp), MinVen = Min(nValVent)" _
'             & " From " & gcCentralCom & "TipCambio" _
'             & " Where dFecCamb Between '" & Format(pdFecIni, "mm/dd/yyyy") & "' and '" & Format(DateAdd("d", 1, pdFecFin), "mm/dd/yyyy") & "'"

        sqlT = " Select ProCom = AVG(nValComp)  , ProVen = AVG(nValVent)," _
             & " MaxCom = Max(nValComp), MaxVen = Max(nValVent)," _
             & " MinCom = Max(nValComp), MinVen = Min(nValVent)" _
             & " From " & gcCentralCom & "TipCambio" _
             & " Where convert(char(8),dFecCamb,112) Between '" & Format(pdFecIni, "yyyymmdd") & "' and '" & Format(pdFecFin, "yyyymmdd") & "'"



    Else
'        sqlT = " Select ProCom = AVG(nValComp), ProVen = AVG(nValVent), " _
'             & " MaxCom = Max(nValComp), MaxVen = Max(nValVent)," _
'             & " MinCom = Max(nValComp), MinVen = Min(nValVent)" _
'             & " From TipoCambio" _
'             & " Where dFecCamb Between '" & Format(pdFecIni, "mm/dd/yyyy") & "' and '" & Format(DateAdd("d", 1, pdFecFin), "mm/dd/yyyy") & "'"

        sqlT = " Select ProCom = AVG(nValComp), ProVen = AVG(nValVent), " _
             & " MaxCom = Max(nValComp), MaxVen = Max(nValVent)," _
             & " MinCom = Max(nValComp), MinVen = Min(nValVent)" _
             & " From TipoCambio" _
             & " Where convert(char(8),dFecCamb,112) Between '" & Format(pdFecIni, "yyyymmdd") & "' and '" & Format(pdFecFin, "yyyymmdd") & "'"



    End If
    
    Set oCon = New DConecta
    oCon.AbreConexion
     
    If psCodAge <> "" Then
        sqlC = sqlC & " And cCodAge = '" & psCodAge & "'"
        sqlV = sqlV & " And cCodAge = '" & psCodAge & "'"
              
        Set rsRes = oCon.CargaRecordSet(sqlC)
             
        If RSVacio(rsRes) Then
            lnMonComDol = 0
            lnMonComSol = 0
        Else
            lnMonComDol = IIf(IsNull(rsRes!TotalDol), 0, rsRes!TotalDol)
            lnMonComSol = IIf(IsNull(rsRes!TotalSol), 0, rsRes!TotalSol)
        End If
        
        rsRes.Close
        Set rsRes = Nothing
        
        Set rsRes = oCon.CargaRecordSet(sqlV)
        
        If RSVacio(rsRes) Then
            lnMonVenDol = 0
            lnMonVenSol = 0
        Else
            lnMonVenDol = IIf(IsNull(rsRes!TotalDol), 0, rsRes!TotalDol)
            lnMonVenSol = IIf(IsNull(rsRes!TotalSol), 0, rsRes!TotalSol)
        End If
        
        rsRes.Close
        Set rsRes = Nothing
    
        Set rsRes = oCon.CargaRecordSet(sqlT)
        
        If RSVacio(rsRes) Then
            lnPromCom = 0
            lnCotMaxCom = 0
            lnCotMinCom = 0
    
            lnPromVen = 0
            lnCotMaxVen = 0
            lnCotMinVen = 0
        Else
            lnPromCom = IIf(IsNull(rsRes!ProCom), 0, rsRes!ProCom)
            lnCotMaxCom = IIf(IsNull(rsRes!MaxCom), 0, rsRes!MaxCom)
            lnCotMinCom = IIf(IsNull(rsRes!MinCom), 0, rsRes!MinCom)
    
            lnPromVen = IIf(IsNull(rsRes!ProVen), 0, rsRes!ProVen)
            lnCotMaxVen = IIf(IsNull(rsRes!Maxven), 0, rsRes!Maxven)
            lnCotMinVen = IIf(IsNull(rsRes!MinVen), 0, rsRes!MinVen)
        End If
    
        rsRes.Close
        Set rsRes = Nothing
        
        oCon.CierraConexion
        
    Else
        Set rsRes = oCon.CargaRecordSet(sqlC)
        
        If RSVacio(rsRes) Then
            lnMonComDol = lnMonComDol + 0
            lnMonComSol = lnMonComSol + 0
        Else
            lnMonComDol = lnMonComDol + IIf(IsNull(rsRes!TotalDol), 0, rsRes!TotalDol)
            lnMonComSol = lnMonComSol + IIf(IsNull(rsRes!TotalSol), 0, rsRes!TotalSol)
        End If
                    
            rsRes.Close
            Set rsRes = Nothing
                
            Set rsRes = oCon.CargaRecordSet(sqlV)
            
            If RSVacio(rsRes) Then
                lnMonVenDol = lnMonVenDol + 0
                lnMonVenSol = lnMonVenSol + 0
            Else
                lnMonVenDol = lnMonVenDol + IIf(IsNull(rsRes!TotalDol), 0, rsRes!TotalDol)
                lnMonVenSol = lnMonVenSol + IIf(IsNull(rsRes!TotalSol), 0, rsRes!TotalSol)
            End If
                
            rsRes.Close
            Set rsRes = Nothing
            
            Set rsRes = oCon.CargaRecordSet(sqlT)
            
            If RSVacio(rsRes) Then
                lnPromCom = lnPromCom + 0
                lnCotMaxCom = lnCotMaxCom + 0
                lnCotMinCom = lnCotMinCom + 0
            
                lnPromVen = lnPromVen + 0
                lnCotMaxVen = lnCotMaxVen + 0
                lnCotMinVen = lnCotMinVen + 0
            Else
                lnPromCom = lnPromCom + IIf(IsNull(rsRes!ProCom), 0, rsRes!ProCom)
                lnCotMaxCom = lnCotMaxCom + IIf(IsNull(rsRes!MaxCom), 0, rsRes!MaxCom)
                lnCotMinCom = lnCotMinCom + IIf(IsNull(rsRes!MinCom), 0, rsRes!MinCom)
            
                lnPromVen = lnPromVen + IIf(IsNull(rsRes!ProVen), 0, rsRes!ProVen)
                lnCotMaxVen = lnCotMaxVen + IIf(IsNull(rsRes!Maxven), 0, rsRes!Maxven)
                lnCotMinVen = lnCotMinVen + IIf(IsNull(rsRes!MinVen), 0, rsRes!MinVen)
            End If
    
            rsRes.Close
            Set rsRes = Nothing
                
        lnPromCom = lnPromCom
        lnCotMaxCom = lnCotMaxCom
        lnCotMinCom = lnCotMinCom
        
        lnPromVen = lnPromVen
        lnCotMaxVen = lnCotMaxVen
        lnCotMinVen = lnCotMinVen
        
    End If
    
    GetMovCompraVentaMECaptac = DibujaCompraVentacaptac(lnMonComDol, lnMonVenDol, lnMonComSol, lnMonVenSol, lnPromCom, lnPromVen, lnCotMaxCom, lnCotMaxVen, lnCotMinCom, lnCotMinVen, psCodAge, pdFecIni, pdFecFin)
    
End Function

Private Function DibujaCompraVentacaptac(pnMonComDol As Currency, pnMonVenDol As Currency, _
                                   pnMonComSol As Currency, pnMonVenSol As Currency, _
                                   pnPromCom As Currency, pnPromVen As Currency, _
                                   pnCotMaxCom As Currency, pnCotMaxVen As Currency, _
                                   pnCotMinCom As Currency, pnCotMinVen As Currency, _
                                   psCodAge As String, pdFecIni As Date, pdFecFin As Date)

    Dim lsCadena As String
    Dim lnMargen As Integer
    Dim lsNombreAg As String
    
    If psCodAge <> "" Then
        lsNombreAg = GetNombreAgencia(Right(psCodAge, 2))
    Else
        lsNombreAg = "CONSOLIDADO"
    End If
    
    lnMargen = 5
    lsCadena = ""
    
    lsCadena = lsCadena & space(lnMargen) & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & CentrarCadena("Listado de Compra Venta de Dolares - " & lsNombreAg, 140) & Chr(10)
    If DateDiff("d", pdFecIni, pdFecFin) = 0 Then
        lsCadena = lsCadena & space(lnMargen) & CentrarCadena("Dia: " & Format(pdFecIni, "dd/mm/yyyy"), 140) & Chr(10)
    Else
        lsCadena = lsCadena & space(lnMargen) & CentrarCadena("Rango: " & Format(pdFecIni, "dd/mm/yyyy") & " - " & Format(pdFecFin, "dd/mm/yyyy"), 140) & Chr(10)
    End If
    lsCadena = lsCadena & space(lnMargen) & Chr(10)
    
    lsCadena = lsCadena & space(lnMargen) & "+" & String(6, "-") & "+" & String(9, "-") & "+" & String(18, "-") & "+" & String(19, "-") & "+" & String(18, "-") & "+" & String(18, "-") & "+" & String(10, "-") & "+" & String(15, "-") & "+" & String(15, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & "¦" & "      " & "¦" & "         " & "¦" & "                  " & "¦" & "                   " & "¦" & "                  " & "¦" & " Monto en Moneda  " & "¦" & "          " & "¦" & "               " & "¦" & "               " & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & "¦" & " Fila " & "¦" & " Monedas " & "¦" & " Codigo de Moneda " & "¦" & " Tipo de Operacion " & "¦" & " Monto en Dolares " & "¦" & "     Nacional     " & "¦" & " Promedio " & "¦" & " Cotiz. Maxima " & "¦" & " Cotiz. Minima " & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & "+" & String(6, "-") & "+" & String(9, "-") & "+" & String(18, "-") & "+" & String(19, "-") & "+" & String(18, "-") & "+" & String(18, "-") & "+" & String(10, "-") & "+" & String(15, "-") & "+" & String(15, "-") & "+" & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & "¦" & "  100 " & "¦" & " Datos   " & "¦" & " Dolar de N.A.    " & "¦" & " Compra            " & "¦" & space(18 - Len(Format(pnMonComDol, "#,##0.00"))) & Format(pnMonComDol, "#,##0.00") & "¦" & space(18 - Len(Format(pnMonComSol, "#,##0.00"))) & Format(pnMonComSol, "#,##0.00") & "¦" & space(10 - Len(Format(pnPromCom, "#,##0.000000"))) & Format(pnPromCom, "#,##0.000000") & "¦" & space(15 - Len(Format(pnCotMaxCom, "#,##0.000000"))) & Format(pnCotMaxCom, "#,##0.000000") & "¦" & space(15 - Len(Format(pnCotMinCom, "#,##0.000000"))) & Format(pnCotMinCom, "#,##0.000000") & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & "¦" & "  101 " & "¦" & "         " & "¦" & " Dolar de N.A.    " & "¦" & " Venta             " & "¦" & space(18 - Len(Format(pnMonVenDol, "#,##0.00"))) & Format(pnMonVenDol, "#,##0.00") & "¦" & space(18 - Len(Format(pnMonVenSol, "#,##0.00"))) & Format(pnMonVenSol, "#,##0.00") & "¦" & space(10 - Len(Format(pnPromVen, "#,##0.000000"))) & Format(pnPromVen, "#,##0.000000") & "¦" & space(15 - Len(Format(pnCotMaxVen, "#,##0.000000"))) & Format(pnCotMaxVen, "#,##0.000000") & "¦" & space(15 - Len(Format(pnCotMinVen, "#,##0.000000"))) & Format(pnCotMinVen, "#,##0.000000") & "¦" & Chr(10)
    lsCadena = lsCadena & space(lnMargen) & "+" & String(6, "-") & "+" & String(9, "-") & "+" & String(18, "-") & "+" & String(19, "-") & "+" & String(18, "-") & "+" & String(18, "-") & "+" & String(10, "-") & "+" & String(15, "-") & "+" & String(15, "-") & "+" & Chr(10)
    
    DibujaCompraVentacaptac = lsCadena
End Function

Public Sub Imprime763202(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal sLstage As ListBox, dFecAl As String)

    Dim I As Integer
    Dim lsCadena As String

 
    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = SaldoCaptacionesCaptac(dFecAl, pnbitcentral_)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If

Err_:
        Exit Sub

End Sub

 
Public Function SaldoCaptacionesCaptac(ByVal dfecha As Date, pnBittCentral As Boolean) As String
    Dim m As Integer, P As Integer, I As Byte, j As Byte
    Dim rsEstad As ADODB.Recordset
    Dim rsCOM As ADODB.Recordset
    Dim lnRegCod As Integer
    Dim lsValor As String, lsNumPag As String
    Dim lsTitRp1 As String, lsTitRp2 As String
    Dim lsTipMon As String, lsTipPer As String
    Dim lnCarLin As Integer, lnCntPag As Integer
    Dim lnAge As Integer
    Dim lsAge As String * 13
    
    'Dim lsDefAho(1 To 12) As String
    Dim lsDefAho(1 To 18) As String '*** PEAC 20110423
    
    '10 CMACS
    '11 CRACS
    '12 BANCOS
    Dim lsDefPlazo(1 To 11) As String
    
    'Dim lsDefInt(1 To 5) As String
    Dim lsDefInt(1 To 7) As String
    
    Dim lnTotal(1 To 2, 1 To 46) As Double
    Dim lnTotalT(1 To 2, 1 To 46) As Double
    Dim lnInteres(1 To 2, 1 To 46) As Double
    
    Dim lsTotal(1 To 3) As String
    Dim dbAux As ADODB.Connection
    Dim lsConn As String
    Dim lsRTFRfm As String
    
    Dim VSQL As String
    Dim sSql As String
    Dim gcCentralCom As String
    Dim R As ADODB.Recordset
    
    Dim oCap As nCapDefinicion

    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    
    If pnBittCentral = False Then
        oConConsol.AbreConexion 'Remota "07", , , "03"
    Else
        Dim sconso As String
        oConConsol.AbreConexion
        sconso = Devuelve_CadenaConsol
    End If
           
    lsDefAho(1) = "Pers. Naturales           "
    lsDefAho(2) = "Pers. Jur. Sin F. Lucro   "
    lsDefAho(3) = "Pers. Jur. Con F. Lucro   "
    lsDefAho(4) = "CMACs                     "
    lsDefAho(5) = "CRACs                     "
    lsDefAho(6) = "BANCOS                    "
    lsDefAho(7) = "Cooperativas              "
    lsDefAho(8) = "Financieras               "
    lsDefAho(9) = "EDIPYMES                  "
    lsDefAho(10) = "Inactivas Pers. Nat.      "
    lsDefAho(11) = "Inactivas Pers. Jur.S.F.L."
    lsDefAho(12) = "Inactivas Pers. Jur.C.F.L."
    lsDefAho(13) = "Inactivas CMACs           "
    lsDefAho(14) = "Inactivas CRACs           "
    lsDefAho(15) = "Inactivas BANCOS          "
    lsDefAho(16) = "Inactivas Cooperativas    "
    lsDefAho(17) = "Inactivas Financieras     "
    lsDefAho(18) = "Inactivas EDIPYMES        "
    
'    lsDefAho(7) = "Inactivas Pers. Nat.      "
'    lsDefAho(8) = "Inactivas Pers. Jur.S.F.L."
'    lsDefAho(9) = "Inactivas Pers. Jur.C.F.L."
'    lsDefAho(10) = "Inactivas CMACs           "
'    lsDefAho(11) = "Inactivas CRACs           "
'    lsDefAho(12) = "Inactivas BANCOS          "
    
    lsDefPlazo(1) = "PF Pers. Naturales        "
    lsDefPlazo(2) = "PF Pers. Jur. Sin F. Lucro"
    lsDefPlazo(3) = "PF Pers. Jur. Con F. Lucro"
    lsDefPlazo(4) = "CMACs                     "
    lsDefPlazo(5) = "EDIPYMES                  "
    lsDefPlazo(6) = "CRACs Y BANCOS            "
    lsDefPlazo(7) = "Cooperativas              "
    lsDefPlazo(8) = "Financieras               "
    lsDefPlazo(9) = "CTS Ordinarios            "
    lsDefPlazo(10) = "CTS Convenio              "
    
'    lsDefPlazo(7) = "CTS Ordinarios            "
'    lsDefPlazo(8) = "CTS Convenio              "
    
    lsDefInt(1) = "Int. Dev. Nat. y J.S.F.L. "
    lsDefInt(2) = "Int. Dev. Otras Pers. Jur."
    lsDefInt(3) = "Int. Dev. CMACs           "
    lsDefInt(4) = "Int. Dev. EDIPYMES        "
    lsDefInt(5) = "Int. Dev. CRACs y BANCOS  "
    lsDefInt(6) = "Financieras               " '*** PEAC 20110423
    lsDefInt(7) = "Cooperativas              " '*** PEAC 20110423
    
    
    lsTotal(1) = "TOTAL DEPOSITOS DE AHORROS"
    lsTotal(2) = "TOTAL DEPOSITOS A PLAZO   "
    lsTotal(3) = "TOTAL INTERES DEVENGADO   "
    
    lsRTFRfm = ""
    '***Modificado por ELRO el 20111018, según Acta 283-2011/TI-D
    'lnCarLin = 206
    lnCarLin = 250
    '***Fin Modificado por ELRO**********************************
      
    Set rsEstad = New ADODB.Recordset
    rsEstad.CursorLocation = adUseClient
    For m = 1 To 2
        For I = 1 To 23
            lnTotal(m, I) = 0
            lnInteres(m, I) = 0
        Next I
                
        If pnBittCentral = True Then
            Set oCap = New nCapDefinicion
            If rsEstad.State = adStateOpen Then rsEstad.Close
            Set rsEstad = oCap.GetSaldoEstadistica(gCapAhorros, m, dfecha)
        Else
            VSQL = "Select E.cCodAge, TC.cNomTab, E.nSaldPN, E.nSaldPSFL, E.nSaldPCFL, E.nSaldCMAC, E.nSaldCRAC, E.nSaldFoncodes, E.nSaldInPN, E.nSaldInPSFL, E.nSaldInPCFL " _
                & "FROM " & sconso & "EstadMensAho E INNER JOIN " & sconso & "TablaCod TC ON E.cCodAge = TC.cValor WHERE DateDiff(dd,E.dEstadMens,'" & Format$(dfecha, "mm/dd/yyyy") & "') = 0 " _
                & "AND E.cMoneda = '" & m & "' And TC.cCodTab like '47__' ORDER BY cCodAge"
            
            Set rsEstad = oConConsol.CargaRecordSet(VSQL)
      
        End If
        
        Set rsEstad.ActiveConnection = Nothing
        
        
        lsTipMon = Trim(Str(m))
        lnCntPag = m
        lsNumPag = FillNum(Trim(Str(lnCntPag)), 4, " ")
                   
        lsRTFRfm = lsRTFRfm & CabeRepoAnx13("", " ", lnCarLin, "SECCION AHORROS", "S I T U A C I O N   D E   C A P T A C I O N E S   P O R   T I P O   D E   P E R S O N A", "AL " & Format$(dfecha, "DD MMM YYYY"), IIf(m = 1, "MONEDA NACIONAL", "MONEDA EXTRANJERA"), lsNumPag) & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        lnAge = 0
        If rsEstad.EOF And rsEstad.BOF Then
            MsgBox "No se encontraron registros para el rango de fechas especificados", vbInformation, "Aviso"
            SaldoCaptacionesCaptac = ""
            Exit Function
        End If
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & space(28)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsAge = Trim(rsEstad!cAgeDescripcion)
            Else
                lsAge = GetNombreAgencia(Right(rsEstad!cCodAge, 2))
            End If
            lsRTFRfm = lsRTFRfm & lsAge & space(2)
            lnAge = lnAge + 1
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & "    TOTAL    " & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        
        'DEPOSITOS DE AHORROS
        I = 0: j = 1
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(1) & space(2) 'Pers. Nat.
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPN), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPN
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPN
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------------
        I = 0: j = 2
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(2) & space(2) 'Pers.Jur.Sin Fines Lucro
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPSFL), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPSFL
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPSFL
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        I = 0: j = 3
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(3) & space(2) 'Pers.Jur.Con Fines de Lucro
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPCFL), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPCFL
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPCFL
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        I = 0: j = 4
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(4) & space(2) 'CMACS
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCMAC), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCMAC
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCMAC
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        I = 0: j = 5
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(5) & space(2) 'CRACS
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCRAC), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCRAC
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCRAC
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        I = 0: j = 6
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(6) & space(2) 'BANCOS
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldBanco), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldBanco
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldBanco
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------------
        I = 0: j = 7 ' PEAC 20110423
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(7) & space(2) 'COOPERATIVAS
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCoope), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCoope
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCoope
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
         
        '----------------------------------------------------
        I = 0: j = 8 ' PEAC 20110423
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(8) & space(2) 'financieras
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldFinan), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldFinan
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldFinan
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
         
         
         
        '----------------------------------------------------
        I = 0: j = 9 ' PEAC 20110423
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(9) & space(2) 'EDIPYMES
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldEdpym), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldEdpym
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldEdpym
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
         
        '---------------------------------------------------- DE AQUI PARA ABAJO INACTIVAS
        I = 0: j = 10
        If pnBittCentral = True Then
            If rsEstad.State = adStateOpen Then rsEstad.Close
            Set rsEstad = oCap.GetSaldoEstadistica(gCapAhorros, m, dfecha, True)
            Set rsEstad.ActiveConnection = Nothing
        End If
        
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(10) & space(2) 'Inactivas Pers. Nat.
        Do While Not rsEstad.EOF
            
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPN), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPN
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPN
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPN), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPN
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPN
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        
        I = 0: j = 11
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(11) & space(2) 'Inactivas Pers.Jur.Sin Fines Lucro
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPSFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPSFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPSFL
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPSFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPSFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPSFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        I = 0: j = 12
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(12) & space(2) 'Inactivas Pers.Jur.Con Fines Lucro
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPCFL
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------------
        I = 0: j = 13
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(13) & space(2) 'Inactivas CMACs
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCMAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCMAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCMAC
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------------
        I = 0: j = 14
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(14) & space(2) 'Inactivas CMACs
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCRAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCRAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCRAC
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
         '----------------------------------------------------
        I = 0: j = 15
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(15) & space(2) 'Inactivas CMACs
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldBanco), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldBanco
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldBanco
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        'rsEstad.Close
        '----------------------------------------------------
        I = 0: j = 16
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(16) & space(2) 'Inactivas COOPE
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCoope), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCoope
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCoope
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        I = 0: j = 17
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(17) & space(2) 'Inactivas FINAN
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldFinan), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldFinan
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldFinan
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
         '----------------------------------------------------
        I = 0: j = 18
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefAho(18) & space(2) 'Inactivas EDIPYMES
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldEdpym), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldEdpym
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldEdpym
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldInPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldInPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldInPCFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        rsEstad.Close
        
        '----------------------------------------------------
        'j = 14 'Imprime Total Depositos Ahorros
        j = 19 'Imprime Total Depositos Ahorros
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & lsTotal(1) & space(2)
        For I = 1 To lnAge
            lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotal(m, I)), 12, True, 9, 2) & space(3)
            lnTotalT(m, j) = lnTotalT(m, j) + lnTotal(m, I)
        Next I
        
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "=") & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------------
        
        'DEPOSITOS A PLAZO
        If pnBittCentral = True Then
            Set rsEstad = oCap.GetSaldoEstadistica(gCapPlazoFijo, m, dfecha)
            Set rsEstad.ActiveConnection = Nothing
        Else
            VSQL = "Select E.nSaldPN, E.nSaldPSFL, E.nSaldPCFL, E.nSaldCMAC, E.nSaldCRAC FROM " & sconso & "EstadMensPF E WHERE " _
                & "DateDiff(dd,E.dEstadMens,'" & Format$(dfecha, "mm/dd/yyyy") & "') = 0 " _
                & "AND E.cMoneda = '" & m & "' ORDER BY E.cCodAge "
            
            Set rsEstad = oConConsol.CargaRecordSet(VSQL)
            Set rsEstad.ActiveConnection = Nothing
        End If
        
        For I = 1 To 46
            lnTotal(m, I) = 0
            lnInteres(m, I) = 0
        Next I
        '----------------------------------------------
        'i = 0: j = 14
        I = 0: j = 20
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(1) & space(2) 'Pers. Nat.
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPN), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPN
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPN
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------
        'i = 0: j = 15
        I = 0: j = 21
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(2) & space(2) 'Pers.Jur.Sin Fines Lucro
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPSFL), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPSFL
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPSFL
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------
        'i = 0: j = 16
        I = 0: j = 22
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(3) & space(2) 'Pers.Jur.Con Fines Lucro
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPCFL), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPCFL
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPCFL
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '----------------------------------------------
        'i = 0: j = 17
        I = 0: j = 23
        
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(4) & space(2) 'CMACs
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCMAC), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCMAC
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCMAC
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------
        'Add by Gitu 22-05-2009 Para Edipymes
        'i = 0: j = 18
        I = 0: j = 24
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(5) & space(2) 'Edipymes
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldEdpym), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldEdpym
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldEdpym
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        'end gitu
        '----------------------------------------------
        'i = 0: j = 19
        I = 0: j = 25
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(6) & space(2) 'CRACs
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCRAC + rsEstad!nSaldBanco), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCRAC + rsEstad!nSaldBanco
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCRAC + rsEstad!nSaldBanco
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
'        rsEstad.Close
        
        '----------------------------------------------
         
         'i = 0: j = 19
         I = 0: j = 26
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(7) & space(2) 'CRACs
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCoope), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldCoope
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCoope
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        'rsEstad.Close
        '----------------------------------------------
         
         'i = 0: j = 19
         I = 0: j = 27
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefPlazo(8) & space(2) 'CRACs
        Do While Not rsEstad.EOF
            lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldFinan), 12, False, 9, 2) & space(3)
            I = I + 1
            lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldFinan
            lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldFinan
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        rsEstad.Close
        '----------------------------------------------
         
        If pnBittCentral = True Then
            Set rsEstad = oCap.GetSaldoEstadistica(gCapCTS, m, dfecha)
            Set rsEstad.ActiveConnection = Nothing
        Else
            VSQL = "Select E.cCodAge, TC.cNomTab, E.nSaldOrd, E.nSaldConv, E.nIntDev " _
                & "FROM " & sconso & "EstadMensCTS E INNER JOIN " & sconso & "TablaCod TC ON E.cCodAge = TC.cValor WHERE " _
                & "DateDiff(dd,E.dEstadMens,'" & Format$(dfecha, "mm/dd/yyyy") & "') = 0 " _
                & "AND E.cMoneda = '" & m & "' And TC.cCodTab like '47__' ORDER BY cCodAge"
            
            Set rsEstad = oConConsol.CargaRecordSet(VSQL)
            Set rsEstad.ActiveConnection = Nothing
        End If
               
        'i = 0: j = 20
        I = 0: j = 28
        rsEstad.MoveFirst
        'lsRTFRfm = lsRTFRfm & lsDefPlazo(7) & Space(2) 'CTS Ordinarios
        lsRTFRfm = lsRTFRfm & lsDefPlazo(9) & space(2) 'CTS Ordinarios
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPN), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPN
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPN
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldOrd), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldOrd
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldOrd
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------
        'i = 0: j = 21
        I = 0: j = 29
        If pnBittCentral = True Then
             Set rsEstad = oCap.GetSaldoEstadistica(gCapCTS, m, dfecha, True)
             Set rsEstad.ActiveConnection = Nothing
        End If
        
        rsEstad.MoveFirst
        'lsRTFRfm = lsRTFRfm & lsDefPlazo(8) & Space(2) 'CTS Convenios
        lsRTFRfm = lsRTFRfm & lsDefPlazo(10) & space(2) 'CTS Convenios
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPN), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldPN
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPN
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldConv), 12, False, 9, 2) & space(3)
                I = I + 1
                lnTotal(m, I) = lnTotal(m, I) + rsEstad!nSaldConv
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldConv
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        rsEstad.Close
        '----------------------------------------------
        'j = 22 'Imprime Total depósitos a Plazo
        j = 30 'Imprime Total depósitos a Plazo
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & lsTotal(2) & space(2)
        For I = 1 To lnAge
            lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotal(m, I)), 12, True, 9, 2) & space(3)
            lnTotalT(m, j) = lnTotalT(m, j) + lnTotal(m, I)
        Next I
        
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "=") & oImpresora.gPrnSaltoLinea
        
        '----------------------------------------------
        
        If pnBittCentral = True Then
            'INTERESES DEVENGADOS
            Set rsEstad = oCap.GetSaldoEstadistica(gCapPlazoFijo, m, dfecha, , True)
            Set rsEstad.ActiveConnection = Nothing
        Else
            'INTERESES DEVENGADOS
            VSQL = "Select E.nIntDevPNJSFL, E.nIntDevOtros, E.nIntDevCMAC, E.nIntDevCRAC FROM " & sconso & "EstadMensPF E WHERE " _
            & "DateDiff(dd,E.dEstadMens,'" & Format$(dfecha, "mm/dd/yyyy") & "') = 0 " _
            & "AND E.cMoneda = '" & m & "' ORDER BY E.cCodAge"
       
            Set rsEstad = oConConsol.CargaRecordSet(VSQL)
            
            Set rsEstad.ActiveConnection = Nothing
        End If
        
        'Calculo de los Intereses Devengados de Plazo Fijo
        'i = 0: j = 23 'Persona Natural y JSFL
        I = 0: j = 31 'Persona Natural y JSFL
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(1) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPN + rsEstad!nSaldPSFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldPN + rsEstad!nSaldPSFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPN + rsEstad!nSaldPSFL
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevPNJSFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevPNJSFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevPNJSFL
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        'i = 0: j = 24 'Otras Personas Juridicas
        I = 0: j = 32 'Otras Personas Juridicas
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(2) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldPCFL), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldPCFL
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldPCFL
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevOtros), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevOtros
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevOtros
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        '------------------------------------------------
        'i = 0: j = 25 'CMACs
        I = 0: j = 33 'CMACs
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(3) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCMAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldCMAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCMAC
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevCMAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevCMAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevCMAC
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '------------------------------------------------
        
        'i = 0: j = 26 'EDIPYMES
        I = 0: j = 34 'EDIPYMES
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(4) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldEdpym), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldEdpym
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldEdpym
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevEdi), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevEdi
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevEdi
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        
        '------------------------------------------------
        'i = 0: j = 27 'CRACs
        I = 0: j = 35 'CRACs
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(5) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCRAC + rsEstad!nSaldBanco), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldCRAC + rsEstad!nSaldBanco
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCRAC + rsEstad!nSaldBanco
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevCRAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevCRAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevCRAC
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
'        rsEstad.Close
        '--------------------------------------------------------------
        'i = 0: j = 27
        I = 0: j = 36 '*** PEAC 20110423  FINANCIERA
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(6) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldFinan), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldFinan
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldFinan
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevCRAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevCRAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevCRAC
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        'rsEstad.Close
        '----------------------------------------------------------
        'i = 0: j = 27
        I = 0: j = 37 'PEAC 20110423 - COOPERA
        rsEstad.MoveFirst
        lsRTFRfm = lsRTFRfm & lsDefInt(7) & space(2)
        Do While Not rsEstad.EOF
            If pnBittCentral = True Then
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nSaldCoope), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nSaldCoope
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nSaldCoope
            Else
                lsRTFRfm = lsRTFRfm & JDNum(Str(rsEstad!nIntDevCRAC), 12, False, 9, 2) & space(3)
                I = I + 1
                lnInteres(m, I) = lnInteres(m, I) + rsEstad!nIntDevCRAC
                lnTotalT(m, j) = lnTotalT(m, j) + rsEstad!nIntDevCRAC
            End If
            rsEstad.MoveNext
        Loop
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, False, 9, 2) & oImpresora.gPrnSaltoLinea
        rsEstad.Close
        
        '----------------------------------------------------------
        
        'j = 28 'Imprime Total Interes Devengado
        j = 38 'Imprime Total Interes Devengado
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & lsTotal(3) & space(2)
        For I = 1 To lnAge
            lsRTFRfm = lsRTFRfm & JDNum(Str(lnInteres(m, I)), 12, True, 9, 2) & space(3)
            lnTotalT(m, j) = lnTotalT(m, j) + lnInteres(m, I)
        Next I
        
        lsRTFRfm = lsRTFRfm & JDNum(Str(lnTotalT(m, j)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
        lsRTFRfm = lsRTFRfm & String(lnCarLin, "=") & oImpresora.gPrnSaltoLinea

        lsRTFRfm = lsRTFRfm & Chr$(12)
        
    Next m
 
    Set rsEstad = Nothing
    SaldoCaptacionesCaptac = lsRTFRfm
    oConConsol.CierraConexion
End Function


'Fin de Agregado
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Public Sub Imprime763203(ByVal sTitulo As String, dFechaIni As Date, nTxtTipCamFijAnt As Currency, ntxtTipCamCompraSBS As Currency, ntxtTipCamVentaSBS As Currency, ByVal pnnBitCentral As Boolean)

    Dim I As Integer
    Dim lsCadena As String

 
    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
    Dim lsMes As String
    Dim lsDia As String
    Dim lsAño As String
 

    lsCadena = GetGanCompVentaCaptac(dFechaIni, nTxtTipCamFijAnt, ntxtTipCamCompraSBS, ntxtTipCamVentaSBS, pnnBitCentral)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If

Err_:
        Exit Sub

End Sub


Private Function GetGanCompVentaCaptac(pdFecha As Date, pnTCF As Currency, pnTCC As Currency, pnTCV As Currency, pnnBitCentral As Boolean) As String
Dim lsConn As String
Dim rsCOM As New ADODB.Recordset
Dim ldIni As Date, ldFin As Date
Dim ln1915D As Currency, ln1915H As Currency
Dim ln2825D As Currency, ln2825H As Currency
Dim lnCompra As Currency, lnVenta As Currency
Dim lnAjuste As Currency
Dim ls1915D As String, ls1915H As String
Dim ls2825D As String, ls2825H As String
Dim lsCompra As String, lsVenta As String
Dim lsSaldo19 As String, lsSaldo28 As String
Dim nTCC As Single, nTCV As Single, nTCF As Single
Dim lnCarLin As Integer
Dim lsTitRp1 As String
Dim lsTitRp2 As String
Dim lsMoneda As String
Dim lsNumPag As String
Dim lsFecha As String
Dim lnLinPag As Integer
Dim lnCntPag As Integer
Dim lsRTFExt As String
Dim bPrint As Boolean

Dim gsCVComME1  As String
Dim gsCVComME2  As String
Dim gsCVVenME1 As String
Dim gsCVVenME2 As String
Dim scadun As String
Dim VSQL As String

If gbBitCentral = True Then
    gsCVComME1 = "900021"
    gsCVComME2 = "900025"
    gsCVVenME1 = "900022"
    gsCVVenME2 = "900026"
    scadun = "'900021', '900025', '900022', '900026'"
Else
    gsCVComME1 = "230101"
    gsCVVenME1 = "230102"
    scadun = "'230101', '230102'"
End If


ldIni = CDate("01" & "/" & Month(pdFecha) & "/" & Year(pdFecha))
ldFin = DateAdd("m", 1, ldIni)

nTCC = pnTCC
nTCV = pnTCV
nTCF = pnTCF

If pnnBitCentral = True Then
    VSQL = "SELECT CONVERT(Varchar(10),dFecTran,103) cFecha, cCodOpe, SUM(ABS(nMonTran)*nTipCambio) nMontoCV, " _
    & "SUM(ABS(nMonTran)* " & nTCF & ") nMontoF, SUM(ABS(nMonTran)) nMonto from CompraVenta where " _
    & "DateDiff(mm,dFecTran,'" & Format$(ldIni, "mm/dd/yyyy") & "') = 0 " _
    & "AND cCodOpe in (" & scadun & ") " _
    & "GROUP BY CONVERT(Varchar(10),dFecTran,103), cCodOpe ORDER BY cFecha, cCodOpe"
Else
    VSQL = "SELECT CONVERT(Varchar(10),dFecTran,103) cFecha, cCodOpe, SUM(ABS(nMonTran)*nTipCambio) nMontoCV, " _
    & "SUM(ABS(nMonTran)* " & nTCF & ") nMontoF, SUM(ABS(nMonTran)) nMonto from CompraVenta where " _
    & "DateDiff(mm,dFecTran,'" & Format$(ldIni, "mm/dd/yyyy") & "') = 0 " _
    & "AND cCodOpe in (" & scadun & ") " _
    & "GROUP BY CONVERT(Varchar(10),dFecTran,103), cCodOpe ORDER BY cFecha, cCodOpe"
End If
    
    Set oCon = New DConecta

    oCon.AbreConexion

    If rsCOM.State = adStateOpen Then rsCOM.Close
    Set rsCOM = oCon.CargaRecordSet(VSQL)
   
lsNumPag = ""
lnLinPag = 0
lnCarLin = 130
lsTitRp1 = "MOVIMIENTO CUENTAS 191503 Y 282503 POR COMPRA VENTA DE DOLARES US."
lsTitRp2 = "MES DE " & UCase(Format$(pdFecha, "mmmm yyyy"))
lnCntPag = 1
lsNumPag = FillNum(Trim(Str(lnCntPag)), 4, " ")
lsRTFExt = lsRTFExt & CabeRepoAnx13("", "", lnCarLin, "CONTABILIDAD", lsTitRp1, lsTitRp2, "MONEDA EXTRANJERA", lsNumPag) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & String(lnCarLin, "=") & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & "                                191503                                      282503" & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & "FECHA               DEBE         HABER         SALDO  |          DEBE         HABER         SALDO  |        COMPRA         VENTA" & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
ln1915D = 0: ln1915H = 0: ln2825D = 0: ln2825H = 0: lnCompra = 0: lnVenta = 0
If rsCOM.BOF And rsCOM.EOF Then
    MsgBox "No se encontraron registros para este reporte.", vbInformation, "Aviso"
    rsCOM.Close
    Set rsCOM = Nothing
    GetGanCompVentaCaptac = ""
    Exit Function
End If
With rsCOM
    lsFecha = ""
    Do While Not .EOF
        If lsFecha <> !cFecha Then
            If lsFecha <> "" Then
                lsRTFExt = lsRTFExt & lsFecha & "  "
                lsRTFExt = lsRTFExt & ls1915D & "  " & ls1915H & "  " & JDNum(Str(CCur(ls1915D) - CCur(ls1915H)), 12, True, 9, 2) & "  |  " & ls2825D & "  " & ls2825H & "  " & JDNum(Str(CCur(ls2825H) - CCur(ls2825D)), 12, True, 9, 2) & "  |  " & lsCompra & "  " & lsVenta
                lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
            End If
            ls1915H = "0.00"
            ls2825H = "0.00"
            ls1915D = "0.00"
            ls2825D = "0.00"
            lsFecha = !cFecha
            Select Case !cCodOpe
                Case gsCVComME1, gsCVComME2
                    ln1915D = ln1915D + !nMontoCV
                    ln2825H = ln2825H + !nMontoF
                    lnCompra = lnCompra + !nMonto
                    ls1915D = JDNum(Str(!nMontoCV), 12, True, 9, 2)
                    ls2825H = JDNum(Str(!nMontoF), 12, True, 9, 2)
                    lsCompra = JDNum(Str(!nMonto), 12, True, 9, 2)
                Case gsCVVenME1, gsCVVenME2
                    ln1915H = ln1915H + !nMontoCV
                    ln2825D = ln2825D + !nMontoF
                    lnVenta = lnVenta + !nMonto
                    ls1915H = JDNum(Str(!nMontoCV), 12, True, 9, 2)
                    ls2825D = JDNum(Str(!nMontoF), 12, True, 9, 2)
                    lsVenta = JDNum(Str(!nMonto), 12, True, 9, 2)
            End Select
        Else
            Select Case !cCodOpe
                Case gsCVComME1, gsCVComME2
                    ln1915D = ln1915D + !nMontoCV
                    ln2825H = ln2825H + !nMontoF
                    lnCompra = lnCompra + !nMonto
                    ls1915D = JDNum(Str(!nMontoCV), 12, True, 9, 2)
                    ls2825H = JDNum(Str(!nMontoF), 12, True, 9, 2)
                    lsCompra = JDNum(Str(!nMonto), 12, True, 9, 2)
                Case gsCVVenME1, gsCVVenME2
                    ln1915H = ln1915H + !nMontoCV
                    ln2825D = ln2825D + !nMontoF
                    lnVenta = lnVenta + !nMonto
                    ls1915H = JDNum(Str(!nMontoCV), 12, True, 9, 2)
                    ls2825D = JDNum(Str(!nMontoF), 12, True, 9, 2)
                    lsVenta = JDNum(Str(!nMonto), 12, True, 9, 2)
            End Select
            
        End If
        .MoveNext
    Loop
End With
rsCOM.Close
Set rsCOM = Nothing
lsRTFExt = lsRTFExt & lsFecha & "  "
lsRTFExt = lsRTFExt & ls1915D & "  " & ls1915H & "  " & JDNum(Str(CCur(ls1915D) - CCur(ls1915H)), 12, True, 9, 2) & "  |  " & ls2825D & "  " & ls2825H & "  " & JDNum(Str(CCur(ls2825H) - CCur(ls2825D)), 12, True, 9, 2) & "  |  " & lsCompra & "  " & lsVenta
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & "TOTAL       "
lsRTFExt = lsRTFExt & JDNum(Str(ln1915D), 12, True, 9, 2) & "  " & JDNum(Str(ln1915H), 12, True, 9, 2) & "  " & JDNum(Str(ln1915D - ln1915H), 12, True, 9, 2) & "  |  " & JDNum(Str(ln2825D), 12, True, 9, 2) & "  " & JDNum(Str(ln2825H), 12, True, 9, 2) & "  " & JDNum(Str(ln2825H - ln2825D), 12, True, 9, 2) & "  |  " & JDNum(Str(lnCompra), 12, True, 9, 2) & "  " & JDNum(Str(lnVenta), 12, True, 9, 2)
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(50) & "282503      " & JDNum(Str(ln2825H - ln2825D), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(50) & "191503      " & JDNum(Str(ln1915D - ln1915H), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(62) & JDNum(Str((ln2825H - ln2825D) - (ln1915D - ln1915H)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea

lsRTFExt = lsRTFExt & space(30) & "NIVELACION DE CAMBIO" & oImpresora.gPrnSaltoLinea
If ln2825H > ln2825D Then
    lsRTFExt = lsRTFExt & space(30) & "Tipo de Cambio Compra        " & JDNum(Str(nTCC), 12, True, 8, 3) & oImpresora.gPrnSaltoLinea
    lnAjuste = Abs(ln2825H - ln2825D) * nTCC / nTCF
Else
    lsRTFExt = lsRTFExt & space(30) & "Tipo de Cambio Venta         " & JDNum(Str(nTCV), 12, True, 8, 3) & oImpresora.gPrnSaltoLinea
    lnAjuste = Abs(ln2825H - ln2825D) * nTCV / nTCF
End If
lsRTFExt = lsRTFExt & space(30) & "Tipo de Cambio Fijo          " & JDNum(Str(nTCF), 12, True, 8, 3) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(30) & "APLICANDO TIPOS DE CAMBIO" & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(30) & "Saldo de Cuenta 282503 $         " & JDNum(Str((ln2825H - ln2825D) / nTCF), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(30) & "Saldo de Cuenta 191503 $         " & JDNum(Str(lnAjuste), 12, True, 9, 2) & "  (b)" & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(30) & "Ganancia (b)-(a)                 " & JDNum(Str(lnAjuste - (ln1915D - ln1915H)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & oImpresora.gPrnSaltoLinea
lsRTFExt = lsRTFExt & space(30) & "ASIENTO CONTABLE" & oImpresora.gPrnSaltoLinea
If (lnAjuste - (ln1915D - ln1915H)) > 0 Then
    lsRTFExt = lsRTFExt & space(40) & "191503       " & JDNum(Str(lnAjuste - (ln1915D - ln1915H)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
    lsRTFExt = lsRTFExt & space(40) & "5321                     " & JDNum(Str(lnAjuste - (ln1915D - ln1915H)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
Else
    lsRTFExt = lsRTFExt & space(40) & "432109       " & JDNum(Str(lnAjuste - (ln1915D - ln1915H)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
    lsRTFExt = lsRTFExt & space(40) & "191503                   " & JDNum(Str(lnAjuste - (ln1915D - ln1915H)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
End If
GetGanCompVentaCaptac = lsRTFExt
End Function
 
Public Sub Imprime763204(ByVal sTitulo As String, ByVal pdFecha As String, pcFuentes As String, sLstage As ListBox, ByVal pnnBitCentral As Boolean)

    Dim I As Integer
    Dim lsCadena As String
    Dim lsTempo As String
 
    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
    Dim lsMes As String
    Dim lsDia As String
    Dim lsAño As String
 
    Screen.MousePointer = vbHourglass
    For I = 0 To sLstage.ListCount - 1
        If sLstage.Selected(I) Then
            If Len(Trim(lsCadena)) = 0 Then
                lsTempo = ""
                lsTempo = ImpIngresos(pcFuentes, pdFecha, Trim(Right(sLstage.List(I), 2)), Trim(Left(sLstage.List(I), 30)), pnnBitCentral)
                If Len(Trim(lsTempo)) > 0 Then
                    lsCadena = lsTempo
                End If
            Else
                lsTempo = ""
                lsTempo = ImpIngresos(pcFuentes, pdFecha, Trim(Right(sLstage.List(I), 2)), Trim(Left(sLstage.List(I), 30)), pnnBitCentral)
                If Len(Trim(lsTempo)) > 0 Then
                    lsCadena = lsCadena & lsTempo
                End If
            End If
        End If
    Next I
    Screen.MousePointer = vbDefault
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Exit Sub
Err_:
        Screen.MousePointer = vbDefault
        MsgBox Err.Description

End Sub

Sub CabIngresos(Fecha As String, pcNomAge As String)
'Crea la Cabecera de Impresión
lsRTfImp = lsRTfImp & Chr(10)
lsRTfImp = lsRTfImp & CabRepoCreditosCaptac("INGRESOS POR PAGO DE CREDITOS DEL DIA " & Fecha, "", cpag, 150, "", pcNomAge, True)
End Sub

Sub SubCabIngresos()
lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
lsRTfImp = lsRTfImp & space(2) & "CREDITO" & space(4) & space(8) & "CLIENTE" & space(24) & "TRANSACC." & space(5) & "IMPORTE" & space(11) & "CAPITAL" & space(8) & "INTERES" & space(11) & "MORA" & space(10) & "GASTO" & space(2) & "USER AGENCIA" & Chr(10)
lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
End Sub

Public Function CabRepoCreditosCaptac(pTitulo As String, pSubTitulo As String, _
                     pPagina As Integer, pAnchoLin As Integer, _
                     pComenta As String, pNomAge As String, Optional pCiereDia As Boolean = True) As String

  Dim lsCabe01 As String, lsCabe02 As String
  Dim lsCabe03 As String, lsCabe04 As String
   
  CabRepoCreditosCaptac = ""
  ' Cabecera 1
  
  lsCabe01 = IIf(Len(FillText(Trim(gsNomCmac), 35, " ")) > 0, FillText(Trim(gsNomCmac), 35, " "), gsNomCmac)
  lsCabe01 = lsCabe01 & space(pAnchoLin - 35 - 25)
  lsCabe01 = lsCabe01 & "Pag.  : " & Str(pPagina) & "   "
  lsCabe01 = lsCabe01 & ""
  lsCabe01 = lsCabe01 & " - " & gsCodUser & Chr(10)
  ' Cabecera 2
  lsCabe01 = lsCabe01 & FillText(Trim(pNomAge), 35, " ")
  lsCabe01 = lsCabe01 & space(pAnchoLin - 35 - 25)
  lsCabe01 = lsCabe01 & "Fecha : " & Format(gdFecSis & " " & Time, "dd/mm/yyyy hh:mm") & Chr(10)
  ' Titulo
  lsCabe02 = String(Int((pAnchoLin - Len(pTitulo)) / 2), " ") & pTitulo & Chr(10)
  ' SubTitulo
  lsCabe03 = String(Int((pAnchoLin - Len(pSubTitulo)) / 2), " ") & pSubTitulo & Chr(10)
  ' Comenta
  lsCabe04 = IIf(Len(pComenta) > 0, pComenta & Chr(10), "")
  ' ***
  CabRepoCreditosCaptac = CabRepoCreditosCaptac & lsCabe01 & lsCabe02
  CabRepoCreditosCaptac = CabRepoCreditosCaptac & lsCabe03 & lsCabe04
       
End Function

Public Function ImpIngresos(pcFtes As String, pdFecha As String, sCodAge As String, sNomAge As String, ByVal pnBitCentral As Boolean) As String
'Reporte de Ingresos realizados por caja a una determinada fecha, este reporte esta agrupado
'por moneda, plazo, producto, fuente de financiamiento, tipo de operación
Dim SQL4 As String
Dim sql6 As String
Dim sql7 As String
Dim SQL9 As String
Dim sql11 As String
Dim Reg1 As New ADODB.Recordset
Dim Reg2 As New ADODB.Recordset
Dim Reg3 As New ADODB.Recordset
Dim Reg4 As New ADODB.Recordset
Dim Reg5 As New ADODB.Recordset
Dim Reg6 As New ADODB.Recordset
Dim Reg7 As New ADODB.Recordset
Dim reg9 As New ADODB.Recordset
Dim Reg11 As New ADODB.Recordset
Dim lsDescM As String * 20  'Descripción de la moneda
Dim lsDescP As String * 20  'Descripción del Plazo
Dim lsDescPr As String * 40 'Descripcion del producto
Dim lsDescF As String * 20  'Descripción de la fuente de financiamiento
Dim lsDescO As String * 40  'Descripción de la Operacion
Dim lbDescM As Boolean      'moneda
Dim lbDescP As Boolean
Dim lbDescPr As Boolean
Dim lbDescF As Boolean
Dim lbDescO As Boolean
Dim liTNumCredO As Integer
Dim lnTMonTranO As Double
Dim lnTCapitalO As Double
Dim lnTIntCompO As Double
Dim lnTIntMorO As Double
Dim lnTOtrGasO As Double
Dim liTNumCredF As Integer
Dim lnTMonTranF As Double
Dim lnTCapitalF As Double
Dim lnTIntCompF As Double
Dim lnTIntMorF As Double
Dim lnTOtrGasF As Double
Dim liTNumCredPr As Integer
Dim lnTMonTranPr As Double
Dim lnTCapitalPr As Double
Dim lnTIntCompPr As Double
Dim lnTIntMorPr As Double
Dim lnTOtrGasPr As Double
Dim liTNumCredP As Integer
Dim lnTMonTranP As Double
Dim lnTCapitalP As Double
Dim lnTIntCompP As Double
Dim lnTIntMorP As Double
Dim lnTOtrGasP As Double
Dim liTNumCredM As Integer
Dim lnTMonTranM As Double
Dim lnTCapitalM As Double
Dim lnTIntCompM As Double
Dim lnTIntMorM As Double
Dim lnTOtrGasM As Double
Dim liLineas As Integer
Dim liDatos As Integer
Dim Cliente As String * 37
Dim Datos As Integer
Dim lbSiCambio As Boolean
Dim lsExtornoP As String
Dim lsExtornoD As String
Dim liTNumCredOE As Double
Dim lnTMonTranOE As Double
Dim lnTCapitalOE As Double
Dim lnTIntCompOE As Double
Dim lnTIntMorOE As Double
Dim lnTOtrGasOE As Double
Dim lnOtrGas As Double
Dim ContD As Integer
Dim Matriz1() As String
Dim Matriz2() As String
Dim I, j As Integer

Dim lsCodigoOper As String

Dim oConConsol As DConecta
Dim nregTemp As ADODB.Recordset
Set oConConsol = New DConecta
 
If gbBitCentral = True Then
    oConConsol.AbreConexion
Else
    oConConsol.AbreConexion 'Remota sCodAge, , , "01"
End If

Dim sconsol As String

sconsol = Devuelve_CadenaConsol

lsRTfImp = ""
ContD = 0
cpag = 1

'===== Verificar si existen datos para el reporte
SQL9 = "SELECT Count(Kardex.cCodCta) as NumCred from Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta  where (dFecTra between '" & _
    Format(pdFecha, "mm/dd/yyyy") & "' and '" & Format(pdFecha, "mm/dd/yyyy") & " 23:59')" & _
    "and cCodOpe like '01%' and substring(cCodOpe,1,4) <> '0101' AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")"

Set reg9 = oConConsol.CargaRecordSet(SQL9)
'Reg9.Open SQL9, dbCmact, adOpenForwardOnly, adLockReadOnly, adCmdText

If reg9.EOF And reg9.BOF Then
    liDatos = 0
Else
    liDatos = reg9!NumCred
End If
reg9.Close
Set reg9 = Nothing

liDatos = liDatos + Round(liDatos / 10, 0)

If liDatos > 0 Then
    lbSiCambio = False
    '======= Tipo de Moneda =========
    Set Reg1 = oConConsol.CargaRecordSet("select cCodTab, cNomTab, cValor, nRanIniTab, nRanFinTab, cAbrev " & _
    " FROM " & sconsol & "TablaCod WHERE Substring(cCodTab,1,2)='03" & _
    "' AND len(cCodTab)= 4")
    
    
   '======= Tipo de Fuente Financ =====
    'Fuente de Financiamiento ''''''Set Reg5 = GetTablaCod("22")
   
    Set Reg5 = oConConsol.CargaRecordSet("select cCodTab, cNomTab, cValor, nRanIniTab, nRanFinTab, cAbrev FROM" & sconsol & "TablaCod WHERE Substring(cCodTab,1,2)='22' AND len(cCodTab)= 4 and cvalor in(" & pcFtes & ")")
    
   '======= Tipo de Crédito =========
    Set Reg3 = oConConsol.CargaRecordSet("SELECT cCodTab, cNomTab, cValor FROM " & sconsol & "TablaCod WHERE cCodTab='61' OR cCodtab='62' OR cCodTab='63' OR cCodTab='64' ORDER BY cCodTab")


    If Reg1.EOF And Reg1.BOF Then
    Else
        Do While Not Reg1.EOF
            'LIMPIAR LOS DATOS PARA SUBTOTALES POR MONEDA
            liTNumCredM = 0:     lnTMonTranM = 0
            lnTCapitalM = 0:     lnTIntCompM = 0
            lnTIntMorM = 0:      lnTOtrGasM = 0
            lsDescM = Reg1!cNomtab
            '================Verificar si existen datos para un Tipo de Moneda ==============
            SQL9 = "SELECT Count(Kardex.cCodCta) as NumCred from Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta WHERE (dFecTra between '" & _
                Format(pdFecha, "mm/dd/yyyy") & "' and '" & Format(pdFecha, "mm/dd/yyyy") & " 23:59') and substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & _
                  "' and Substring(cCodOpe,1,2) = '01' and Substring(cCodOpe,1,4) <> '0101' AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")"
                  
            Set reg9 = oConConsol.CargaRecordSet(SQL9)
            'Reg9.Open SQL9, dbCmact, adOpenForwardOnly, adLockReadOnly, adCmdText

            If reg9.EOF And reg9.BOF Then
                liDatos = 0
            Else
                liDatos = reg9!NumCred
            End If
            reg9.Close
            Set reg9 = Nothing

            If liDatos > 0 Then
                Call CabIngresos(pdFecha, sNomAge)
                liLineas = 4
                If lbSiCambio Then
                    lbSiCambio = False
                End If
                lsRTfImp = lsRTfImp & "MONEDA         : " & lsDescM & Chr(10)
                liLineas = liLineas + 1
                If Reg3.EOF And Reg3.BOF Then 'Tipo de Crédito
                Else
                    Reg3.MoveFirst
                    Do While Not Reg3.EOF 'Tipo de Crédito
                        '===========Verificar si existen datos para un Tipo de Crédito ==============
                        SQL9 = "SELECT Count(Kardex.cCodCta) as NumCred FROM Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta WHERE (dFecTra Between '" & Format(pdFecha, "mm/dd/yyyy") & "' AND '" & _
                            Format(pdFecha, "mm/dd/yyyy") & " 23:59') " & " AND Substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & _
                            "' and Substring(cCodOpe,1,2) = '01' AND Substring(Kardex.cCodCta, 3,1) = '" & Trim(Reg3!cvalor) & "' and Substring(cCodOpe,1,4) <> '0101' AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")"
                        Set reg9 = oConConsol.CargaRecordSet(SQL9)
                        'Reg9.Open SQL9, dbCmact, adOpenForwardOnly, adLockReadOnly, adCmdText

                        If reg9.EOF And reg9.BOF Then
                            liDatos = 0
                        Else
                            liDatos = reg9!NumCred
                        End If
                        reg9.Close
                        Set reg9 = Nothing

                        If liDatos > 0 Then
                            '======= Sub Tipo de Crédito =========
                            'Set Reg4 = GetTablaCod(Reg3!cCodTab)
                            Set Reg4 = oConConsol.CargaRecordSet("select cCodTab, cNomTab, cValor, nRanIniTab, nRanFinTab, cAbrev FROM " & sconsol & "TablaCod WHERE Substring(cCodTab,1,2)='" & Reg3!cCodTab & "' AND len(cCodTab)= 4")
                            
                            If Reg4.BOF And Reg4.EOF Then
                            Else
                                Do While Not Reg4.EOF
                                    lsDescPr = Trim(Reg3!cNomtab) & " - " & Trim(Reg4!cNomtab)
                                    'Limpiar datos para el Producto
                                    liTNumCredPr = 0:       lnTMonTranPr = 0
                                    lnTCapitalPr = 0:       lnTIntCompPr = 0
                                    lnTIntMorPr = 0:        lnTOtrGasPr = 0
                                    '=========Verificar datos para el Sub Tipo de Crédito ================
                                    SQL9 = "SELECT Count(Kardex.cCodCta) as NumCred FROM Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta WHERE (dFecTra between '" & Format(pdFecha, "mm/dd/yyyy") & "' AND '" & _
                                         Format(pdFecha, "mm/dd/yyyy") & " 23:59') AND " & _
                                         " Substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & "' AND Substring(cCodOpe,1,2) = '01' AND " & _
                                         " Substring(Kardex.cCodCta, 3,1) = '" & Trim(Reg3!cvalor) & "' AND substring(Kardex.cCodCta,4,2) = '" & _
                                         Trim(Reg4!cvalor) & "' AND Substring(cCodOpe,1,4) <> '0101' AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")"
                                    'Reg9.Open SQL9, dbCmact, adOpenForwardOnly, adLockReadOnly, adCmdText
                                    
                                    Set reg9 = oConConsol.CargaRecordSet(SQL9)

                                    If reg9.EOF And reg9.BOF Then
                                        liDatos = 0
                                    Else
                                        liDatos = reg9!NumCred
                                    End If
                                    reg9.Close
                                    Set reg9 = Nothing

                                    If liDatos > 0 Then
                                        If liLineas >= 56 Then 'Para el control de salto de página
                                           lsRTfImp = lsRTfImp & Chr(12)
                                           cpag = cpag + 1
                                           Call CabIngresos(pdFecha, sNomAge)
                                           liLineas = 4
                                        End If
                                        If lbSiCambio Then
                                            lsRTfImp = lsRTfImp & Chr(10)
                                            liLineas = liLineas + 1
                                            lbSiCambio = False
                                        End If
                                        lsRTfImp = lsRTfImp & "PRODUCTO       : " & lsDescPr & Chr(10)
                                        liLineas = liLineas + 1


                                         If Reg5.EOF And Reg5.BOF Then
                                         Else
                                             Reg5.MoveFirst
                                             Do While Not Reg5.EOF

                                                lsDescF = Reg5!cNomtab
                                                '=========== LIMPIAR DATOS PARA FUENTE DE FINANCIAMIENTO ===============
                                                         liTNumCredF = 0:          lnTMonTranF = 0
                                                  lnTCapitalF = 0:          lnTIntCompF = 0
                                                  lnTIntMorF = 0:           lnTOtrGasF = 0
                                                '======== Verificar si existen datos Fuente de Financiamiento ==========
                                                SQL9 = "SELECT Count(Kardex.cCodCta) as NumCred FROM Kardex inner join Credito on Kardex.cCodCta = " & _
                                                     "Credito.cCodCta WHERE (dFecTra Between '" & Format(pdFecha, "mm/dd/yyyy") & "' AND '" & _
                                                     Format(pdFecha, "mm/dd/yyyy") & " 23:59') AND substring(cCodLinCred, 1,1) = '" & Trim(Reg3!cvalor) & "' AND Substring(cCodLinCred, 2,2) = '" & _
                                                     Trim(Reg4!cvalor) & "' AND Substring(cCodLinCred, 4,1) = '" & Trim(Reg1!cvalor) & "' AND " & _
                                                     " Substring(cCodLinCred,6,1) = '" & _
                                                     Trim(Reg5!cvalor) & "' and Substring(cCodOpe,1,2 ) = '01' AND Substring(cCodOpe,1,4) <> '0101' AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")"
                                                
                                                'Reg9.Open SQL9, dbCmact, adOpenForwardOnly, adLockReadOnly, adCmdText
                                                Set reg9 = oConConsol.CargaRecordSet(SQL9)

                                                If reg9.EOF And reg9.BOF Then
                                                    liDatos = 0
                                                Else
                                                    liDatos = reg9!NumCred
                                                End If
                                                reg9.Close
                                                Set reg9 = Nothing

                                                If liDatos > 0 Then
                                                    If liLineas >= 58 Then 'Para el control de salto de página
                                                       lsRTfImp = lsRTfImp & Chr(12)
                                                       cpag = cpag + 1
                                                       Call CabIngresos(pdFecha, sNomAge)
                                                       liLineas = 4
                                                    End If
                                                    If lbSiCambio Then
                                                        lsRTfImp = lsRTfImp & Chr(10)
                                                        liLineas = liLineas + 1
                                                        lbSiCambio = False
                                                    End If
                                                    lsRTfImp = lsRTfImp & "FINANCIAMIENTO : " & lsDescF & Chr(10)
                                                    liLineas = liLineas + 2
                                                    
                                                    ' ======  Datos a Imprimirse     ========
                                                    
                                                    liTNumCredO = 0:         lnTMonTranO = 0
                                                    lnTCapitalO = 0:         lnTIntCompO = 0
                                                    lnTIntMorO = 0:          lnTOtrGasO = 0
                                                    
                                                    
                                                    sql7 = "SELECT Credito.cCodCta, Kardex.nMonTran, Kardex.nCapital, Kardex.nIntComp, " & _
                                                         "Kardex.nIntMor, Kardex.nOtrGas, Kardex.nIntGraPag, Kardex.cFlag, " & _
                                                         "Kardex.nNroTranCta, Kardex.cCodUsu, Persona.cNomPers, Kardex.cCodOpe, Kardex.cCodAge " & _
                                                         "FROM Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta " & _
                                                         "INNER JOIN PersCredito on Credito.cCodCta = " & _
                                                         "PersCredito.cCodCta inner join DBPERSONA..Persona Persona on PersCredito.cCodPers = Persona.cCodPers " & _
                                                         "WHERE PersCredito.cRelaCta = 'TI' AND Substring(cCodLinCred, 4,1) = '" & Trim(Reg1!cvalor) & _
                                                         "' and substring(cCodLinCred, 1,1) = '" & Trim(Reg3!cvalor) & "' and Substring(cCodLinCred,2,2) = '" & _
                                                         Trim(Reg4!cvalor) & "' AND " & _
                                                         "Substring(cCodLinCred, 6,1) = '" & Trim(Reg5!cvalor) & "' AND (dFecTra between '" & _
                                                         Format(pdFecha, "mm/dd/yyyy") & "' AND '" & Format(pdFecha, "mm/dd/yyyy") & " 23:59') AND " & _
                                                         "KARDEX.cMetLiquid IS NOT NULL  ORDER BY Kardex.cCodOpe "
                                                    
                                                    'Reg7.CursorLocation = adUseClient
                                                    'Reg7.Open sql7, dbCmact, adOpenForwardOnly, adLockReadOnly, adCmdText
                                                    Set Reg7 = oConConsol.CargaRecordSet(sql7)
                                                    Set Reg7.ActiveConnection = Nothing
                                                                    
                                                    If Reg7.EOF And Reg7.BOF Then  '--- Pago de Cuotas
                                                    Else
                                                        Set nregTemp = oConConsol.CargaRecordSet("SELECT cCodOpe, cNomOpe FROM  " & sconsol & "Operacion   WHERE cCodOpe = '" & Reg7!cCodOpe & "'")
                                                        lsDescO = nregTemp!cNomOpe 'MuestraDescOperacion(Reg7!cCodOpe)
                                                        lbDescO = True
                                                        lsCodigoOper = Reg7!cCodOpe
                                                                
                                                        ' =======
                                                        If liLineas >= 58 Then
                                                          lsRTfImp = lsRTfImp & Chr(12)
                                                          cpag = cpag + 1
                                                          Call CabIngresos(pdFecha, sNomAge)
                                                          liLineas = 4
                                                        End If

                                                        If lbDescO Then
                                                          lbDescO = False
                                                          'If lbSiCambio Then
                                                              lsRTfImp = lsRTfImp & Chr(10)
                                                         '     lbSiCambio = False
                                                              liLineas = liLineas + 1
                                                         ' End If
                                                          lsRTfImp = lsRTfImp & "OPERACION      :" & space(2) & lsDescO & Chr(10)
                                                          liLineas = liLineas + 2
                                                        End If

                                                        If liLineas >= 58 Then
                                                           lsRTfImp = lsRTfImp & Chr(12)
                                                           cpag = cpag + 1
                                                           Call CabIngresos(pdFecha, sNomAge)
                                                           liLineas = 4
                                                        End If
                                                        SubCabIngresos
                                                        liLineas = liLineas + 3
                                                                
                                                        ' =======
                                                        Do While Not Reg7.EOF
                                                          If Reg7!cCodOpe <> lsCodigoOper Then  ' Si otro Operacion
                                                          
                                                             'Cadena de impresion Sub total por operacion de Pago de Cuotas
                                                             lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                                             lsRTfImp = lsRTfImp & "**** SUB TOTAL OPERACION" & space(18) & "CASOS :" & ImpreFormat(liTNumCredO, 4, 0, True) & space(2)
                                                             lsRTfImp = lsRTfImp & ImpreFormat(lnTMonTranO, 15, , True) & ImpreFormat(lnTCapitalO, 15, , True)
                                                             lsRTfImp = lsRTfImp & ImpreFormat(lnTIntCompO, 12, , True) & ImpreFormat(lnTIntMorO, 12, , True)
                                                             lsRTfImp = lsRTfImp & ImpreFormat(lnTOtrGasO, 12, , True) & Chr(10)
                                                             lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                                             liLineas = liLineas + 3
                                                             'Total por Fuente de Financiamiento
                                                             liTNumCredF = liTNumCredF + liTNumCredO
                                                             lnTMonTranF = lnTMonTranF + lnTMonTranO
                                                             lnTCapitalF = lnTCapitalF + lnTCapitalO
                                                             lnTIntCompF = lnTIntCompF + lnTIntCompO
                                                             lnTIntMorF = lnTIntMorF + lnTIntMorO
                                                             lnTOtrGasF = lnTOtrGasF + lnTOtrGasO
                                                           
                                                             ' *****************
                                                             Set nregTemp = oConConsol.CargaRecordSet("SELECT cCodOpe, cNomOpe FROM  " & sconsol & "Operacion   WHERE cCodOpe = '" & Reg7!cCodOpe & "'")
                                                             lsDescO = nregTemp!cNomOpe
                                                             
                                                             'lsDescO = MuestraDescOperacion(Reg7!cCodOpe)
                                                             lbDescO = True
                                                             lsCodigoOper = Reg7!cCodOpe
                                                             liTNumCredO = 0:        lnTMonTranO = 0
                                                             lnTCapitalO = 0:        lnTIntCompO = 0
                                                             lnTIntMorO = 0:         lnTOtrGasO = 0
                                                             liTNumCredOE = 0:       lnTMonTranOE = 0
                                                             lnTCapitalOE = 0:       lnTIntCompOE = 0
                                                             lnTIntMorOE = 0:        lnTOtrGasOE = 0
                                                             
                                                             If liLineas >= 58 Then
                                                               lsRTfImp = lsRTfImp & Chr(12)
                                                               cpag = cpag + 1
                                                               Call CabIngresos(pdFecha, sNomAge)
                                                               liLineas = 4
                                                             End If

                                                             If lbDescO Then
                                                               lbDescO = False
                                                               'If lbSiCambio Then
                                                                   lsRTfImp = lsRTfImp & Chr(10)
                                                              '     lbSiCambio = False
                                                                   liLineas = liLineas + 1
                                                              ' End If
                                                               lsRTfImp = lsRTfImp & "OPERACION      :" & space(2) & lsDescO & Chr(10)
                                                               liLineas = liLineas + 2
                                                             End If

                                                             If liLineas >= 58 Then
                                                                lsRTfImp = lsRTfImp & Chr(12)
                                                                cpag = cpag + 1
                                                                Call CabIngresos(pdFecha, sNomAge)
                                                                liLineas = 4
                                                             End If
                                                             SubCabIngresos
                                                             liLineas = liLineas + 3
                                                           
                                                          End If
                                                       
                                                          ContD = ContD + 1
                                                           
                                                          'Formar cadena de impresion
                                                          If liLineas >= 58 Then
                                                               lsRTfImp = lsRTfImp & Chr(12)
                                                               cpag = cpag + 1
                                                               Call CabIngresos(pdFecha, sNomAge)
                                                               SubCabIngresos
                                                               liLineas = 7
                                                          End If
                                                          Cliente = PstaNombre(Reg7!cNomPers, False)
                                                          lsRTfImp = lsRTfImp & Reg7!cCodCta & space(2) & Cliente
                                                          lsRTfImp = lsRTfImp & ImpreFormat(Reg7!nNroTranCta, 4, 0, True) & ImpreFormat(Reg7!nMonTran, 15, , True) & ImpreFormat(Reg7!nCapital, 15, , True)
                                                          lsRTfImp = lsRTfImp & ImpreFormat(Reg7!nIntComp + Reg7!nIntGraPag, 12, , True) & ImpreFormat(Reg7!nIntMor, 12, , True)
                                                          lsRTfImp = lsRTfImp & ImpreFormat(Reg7!nOtrGas, 12, , True) & space(2) & Reg7!cCodUsu
                                                          lsRTfImp = lsRTfImp & space(2) & Reg7!cCodAge & space(2) & IIf(IsNull(Reg7!cFlag), " ", "X") & Chr(10)
                                                          liLineas = liLineas + 1
                                                          'Total de Operaciones
                                                          liTNumCredO = liTNumCredO + 1
                                                          lnTMonTranO = lnTMonTranO + Reg7!nMonTran
                                                          lnTCapitalO = lnTCapitalO + IIf(IsNull(Reg7!nCapital), 0, Reg7!nCapital)
                                                          lnTIntCompO = lnTIntCompO + IIf(IsNull(Reg7!nIntComp + Reg7!nIntGraPag), 0, Reg7!nIntComp + Reg7!nIntGraPag)
                                                          lnTIntMorO = lnTIntMorO + IIf(IsNull(Reg7!nIntMor), 0, Reg7!nIntMor)
                                                          lnTOtrGasO = lnTOtrGasO + IIf(IsNull(Reg7!nOtrGas), 0, Reg7!nOtrGas)

                                                           

                                                          Reg7.MoveNext

                                                        Loop
                                                        
                                                        
                                                        'Cadena de impresion Sub total por operacion de Pago de Cuotas
                                                        lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                                        lsRTfImp = lsRTfImp & "**** SUB TOTAL OPERACION" & space(18) & "CASOS :" & ImpreFormat(liTNumCredO, 4, 0, True) & space(2)
                                                        lsRTfImp = lsRTfImp & ImpreFormat(lnTMonTranO, 15, , True) & ImpreFormat(lnTCapitalO, 15, , True)
                                                        lsRTfImp = lsRTfImp & ImpreFormat(lnTIntCompO, 12, , True) & ImpreFormat(lnTIntMorO, 12, , True)
                                                        lsRTfImp = lsRTfImp & ImpreFormat(lnTOtrGasO, 12, , True) & Chr(10)
                                                        lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                                        liLineas = liLineas + 3
                                                        'Total por Fuente de Financiamiento
                                                        liTNumCredF = liTNumCredF + liTNumCredO
                                                        lnTMonTranF = lnTMonTranF + lnTMonTranO
                                                        lnTCapitalF = lnTCapitalF + lnTCapitalO
                                                        lnTIntCompF = lnTIntCompF + lnTIntCompO
                                                        lnTIntMorF = lnTIntMorF + lnTIntMorO
                                                        lnTOtrGasF = lnTOtrGasF + lnTOtrGasO
                                                        
                                                        
                                                        DoEvents
                                                        
                                                        'Reg7.Close
                                                        'Set Reg7 = Nothing
                                                        
                                                        If liTNumCredF > 0 Then
                                                          '===== SUMAR TOTALES PRODUCTO
                                                          liTNumCredPr = liTNumCredPr + liTNumCredF
                                                          lnTMonTranPr = lnTMonTranPr + lnTMonTranF
                                                          lnTCapitalPr = lnTCapitalPr + lnTCapitalF
                                                          lnTIntCompPr = lnTIntCompPr + lnTIntCompF
                                                          lnTIntMorPr = lnTIntMorPr + lnTIntMorF
                                                          lnTOtrGasPr = lnTOtrGasPr + lnTOtrGasF
                                                        End If

                                                        '========== IMPRIMIR SUB TOTAL FUENTE DE FINANCIAMIENTO ============
                                                        If liLineas >= 58 Then 'Para el control de salto de página
                                                           lsRTfImp = lsRTfImp & Chr(12)
                                                           cpag = cpag + 1
                                                           Call CabIngresos(pdFecha, sNomAge)
                                                           liLineas = 4
                                                        End If
                                                        lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                                        lsRTfImp = lsRTfImp & "**** SUB TOTAL FUENTE FINANCIAMIENTO" & space(6) & "CASOS :" & space(4 - Len(Format(liTNumCredF))) & Format(liTNumCredF) & space(2)
                                                        lsRTfImp = lsRTfImp & ImpreFormat(lnTMonTranF, 15, , True) & ImpreFormat(lnTCapitalF, 15, , True)
                                                        lsRTfImp = lsRTfImp & ImpreFormat(lnTIntCompF, 12, , True) & ImpreFormat(lnTIntMorF, 12, , True)
                                                        lsRTfImp = lsRTfImp & ImpreFormat(lnTOtrGasF, 12, , True) & Chr(10)
                                                        lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                                        liLineas = liLineas + 3
                                                    End If
                                                    
                                                    Reg7.Close
                                                    Set Reg7 = Nothing
                                                 End If 'liDatos - Fuente de Financiamiento
                                                lbSiCambio = True
                                                 Reg5.MoveNext '--- Fuente de Financiamiento
                                            Loop '--- Fuente de Financiamiento
                                        End If '--- Fuente de Financiamiento

                                        
                                        If liTNumCredPr > 0 Then
                                            '============= SUMAR TOTALES MONEDA ======================
                                            liTNumCredM = liTNumCredM + liTNumCredPr
                                            lnTMonTranM = lnTMonTranM + lnTMonTranPr
                                            lnTCapitalM = lnTCapitalM + lnTCapitalPr
                                            lnTIntCompM = lnTIntCompM + lnTIntCompPr
                                            lnTIntMorM = lnTIntMorM + lnTIntMorPr
                                            lnTOtrGasM = lnTOtrGasM + lnTOtrGasPr
                                            
                                            If liLineas >= 58 Then 'Para el control de salto de página
                                               lsRTfImp = lsRTfImp & Chr(12)
                                               cpag = cpag + 1
                                               Call CabIngresos(pdFecha, sNomAge)
                                               liLineas = 4
                                            End If
                                            '============ IMPRIMIR SUB TOTAL PRODUCTO =====================
                                            lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                            lsRTfImp = lsRTfImp & "**** SUB TOTAL PRODUCTO " & space(18) & "CASOS :" & ImpreFormat(liTNumCredPr, 4, 0, True) & space(2)
                                            lsRTfImp = lsRTfImp & ImpreFormat(lnTMonTranPr, 15, , True) & ImpreFormat(lnTCapitalPr, 15, , True)
                                            lsRTfImp = lsRTfImp & ImpreFormat(lnTIntCompPr, 12, , True) & ImpreFormat(lnTIntMorPr, 12, , True)
                                            lsRTfImp = lsRTfImp & ImpreFormat(lnTOtrGasPr, 12, , True) & Chr(10)
                                            lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                                            liLineas = liLineas + 3
                                        End If 'Total - Producto
                                    End If '---liDatos - Sub Tipo de Crédito
                                    lbSiCambio = True
                                    Reg4.MoveNext
                                Loop 'Sub Tipo de Crédito
                            End If 'Sub Tipo de Crédito
                            Reg4.Close
                            Set Reg4 = Nothing
                        End If '---liDatos - Tipo de crédito
                        DoEvents
                        Reg3.MoveNext
                    Loop '--- Tipo de Crédito
                End If '--- Tipo de Crédito
                If liLineas >= 58 Then 'Para el control de salto de página
                   lsRTfImp = lsRTfImp & Chr(12)
                   cpag = cpag + 1
                   Call CabIngresos(pdFecha, sNomAge)
                   liLineas = 4
                End If
                If liTNumCredM > 0 Then
                    '============ IMPRIMIR SUB TOTAL MONEDA =====================
                   lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                   lsRTfImp = lsRTfImp & "**** SUB TOTAL MONEDA" & space(21) & "CASOS :" & ImpreFormat(liTNumCredM, 4, 0, True) & space(2)
                   lsRTfImp = lsRTfImp & ImpreFormat(lnTMonTranM, 15, , True) & ImpreFormat(lnTCapitalM, 15, , True)
                   lsRTfImp = lsRTfImp & ImpreFormat(lnTIntCompM, 12, , True) & ImpreFormat(lnTIntMorM, 12, , True)
                   lsRTfImp = lsRTfImp & ImpreFormat(lnTOtrGasM, 12, , True) & Chr(10)
                   lsRTfImp = lsRTfImp & String(150, "-") & Chr(10)
                   liLineas = liLineas + 3
                End If
            End If '---liDatos - Moneda
            lbSiCambio = True
            Reg1.MoveNext
            If Not Reg1.EOF Then
                lsRTfImp = lsRTfImp & Chr(12)
                cpag = cpag + 1
                liLineas = 0
            End If
        Loop ' ---- Moneda
    End If '--- Moneda
    Reg1.Close
    Set Reg1 = Nothing
    'Reg2.Close
    'Set Reg2 = Nothing
    Reg3.Close
    Set Reg4 = Nothing
    ImpIngresos = lsRTfImp
Else
    ImpIngresos = ""
End If '--- liDatos - General
End Function

Public Sub Imprime763205(ByVal sTitulo As String, ByVal pdfecha1 As String, ByVal pdFecha2 As String, pcFuentes As String, sLstage As ListBox, ByVal pnnBitCentral As Boolean)

    Dim I As Integer
    Dim lsCadena As String

 
    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
    Dim lsMes As String
    Dim lsDia As String
    Dim lsAño As String
    Dim lsTempo As String

    For I = 0 To sLstage.ListCount - 1
        If sLstage.Selected(I) Then
            If Len(Trim(lsCadena)) = 0 Then
                lsTempo = ""
                lsTempo = ImpDesembolsos(pcFuentes, pdfecha1, pdFecha2, Trim(Right(sLstage.List(I), 2)), Trim(Left(sLstage.List(I), 30)), pnnBitCentral)
                If Len(Trim(lsTempo)) > 0 Then
                    lsCadena = lsTempo
                End If
            Else
                lsTempo = ""
                lsTempo = ImpDesembolsos(pcFuentes, pdfecha1, pdFecha2, Trim(Right(sLstage.List(I), 2)), Trim(Left(sLstage.List(I), 30)), pnnBitCentral)
                If Len(Trim(lsTempo)) > 0 Then
                    lsCadena = lsCadena & lsTempo
                End If
            End If
        End If
    Next I

    'lsCadena = ImpDesembolsos(pcFuentes, pdFecha1, pdFecha2, pnnBitCentral)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
    
Err_:
        Exit Sub

End Sub

'============================================================================================
'==============================CREDITOS DESEMBOLSADOS POR CAJA ==============================
'============================================================================================
'Reporte de Creditos desembolsados por caja a una determinada fecha, el reporte esta agrupado
'por moneda, plazo, producto, fuente de financiamiento y Tipo de Operación
Sub CabDesembolsos(FecIni, FecFin As String, pcNomAge As String)
' Crea la Cabecera de Impresión
' Modificado 25/02/2003 Pepe
lsRTfImp = lsRTfImp & CabRepoCreditosCaptac("CREDITOS DESEMBOLSADOS DEL " & FecIni & " AL " & FecFin, " ", cpag, 140, "", pcNomAge, True)
End Sub

Sub SubCabDesembolsos()
' Modificado 25/02/2003 Pepe
lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
lsRTfImp = lsRTfImp & space(3) & "CREDITO" & space(12) & "CLIENTE" & space(27) & "APROBADO" & space(5) & "DESEMBOLSADO" & space(4) & "INT APROB" & space(5) & "GASTO" & space(2) & "ANALIS"
lsRTfImp = lsRTfImp & space(2) & "INTERES" & space(2) & "INST." & space(2) & "COD-MOD" & Chr(10)
lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
End Sub

Public Function ImpDesembolsos(pcFtes As String, pdFechaIni As String, pdFechaFin As String, sCodAge As String, sNomAge As String, ByVal pnBitCentral As Boolean) As String
' Reporte de los desembolsos por caja del día, estan agrupados por moneda, Plazo
' Producto, Fuentes de Financiamiento y Tipo de Operación
' Modificado 25/02/2003 Pepe
Dim SQL4 As String
Dim sql6 As String
Dim sql7 As String
Dim Reg1 As New ADODB.Recordset
Dim Reg2 As New ADODB.Recordset
Dim Reg3 As New ADODB.Recordset
Dim Reg4 As New ADODB.Recordset
Dim Reg5 As New ADODB.Recordset
Dim Reg6 As New ADODB.Recordset
Dim Reg7 As New ADODB.Recordset
Dim lsDescM As String * 20  'Descripción de la moneda
Dim lsDescP As String * 20  'Descripción del Plazo
Dim lsDescPr As String * 40 'Descripcion del producto
Dim lsDescF As String * 20  'Descripción de la fuente de financiamiento
Dim lsDescO As String * 30  'Descripción de Operación
Dim lbDescM As Boolean      'moneda
Dim lbDescP As Boolean
Dim lbDescPr As Boolean
Dim lbDescF As Boolean
Dim lbDescO As Boolean
Dim liTNumCredO As Integer
Dim lnTMontoApr As Double
Dim lnTCapital As Double
Dim lnTInteres As Double
Dim lnTGastos As Double
Dim lnTMontoAprO As Double
Dim lnTCapitalO As Double
Dim lnTInteresO As Double
Dim lnTGastosO As Double
Dim liTNumCredF As Integer
Dim lnTMontoAprF As Double
Dim lnTCapitalF As Double
Dim lnTInteresF As Double
Dim lnTGastosF As Double
Dim liTNumCredPr As Integer
Dim lnTMontoAprPr As Double
Dim lnTCapitalPr As Double
Dim lnTInteresPr As Double
Dim lnTGastosPr As Double
Dim liTNumCredP As Integer
Dim lnTMontoAprP As Double
Dim lnTCapitalP As Double
Dim lnTInteresP As Double
Dim lnTGastosP As Double
Dim liTNumCredM As Integer
Dim lnTMontoAprM As Double
Dim lnTCapitalM As Double
Dim lnTInteresM As Double
Dim lnTGastosM As Double
Dim liLineas As Integer
Dim Cliente As String * 32
Dim lsInstitucion As String * 5
Dim lsDescInst As String
Dim Sql8 As String
Dim Reg8 As New ADODB.Recordset
Dim SQL9 As String
Dim reg9 As New ADODB.Recordset
Dim Datos As Integer
Dim lbSiCambio As Boolean
Dim ContD As Integer
Dim liSiDatos As Integer
Dim Cadena As String

Dim oConConsol As DConecta
Dim nregTemp As ADODB.Recordset
Set oConConsol = New DConecta

If gbBitCentral = True Then
    oConConsol.AbreConexion
Else
    oConConsol.AbreConexion 'Remota sCodAge, , , "01"
End If

Dim sconsol As String

sconsol = Devuelve_CadenaConsol
lsRTfImp = ""
ContD = 0
cpag = 1
       
  '======== Tipo de Moneda =========
 Set Reg1 = oConConsol.CargaRecordSet("select cCodTab, cNomTab, cValor, nRanIniTab, nRanFinTab, cAbrev " & _
    " FROM " & sconsol & "TablaCod WHERE Substring(cCodTab,1,2)='03" & _
    "' AND len(cCodTab)= 4")
 '======== Tipo de Plazo =========
 Set Reg2 = oConConsol.CargaRecordSet("select cCodTab, cNomTab, cValor, nRanIniTab, nRanFinTab, cAbrev " & _
    " FROM " & sconsol & "TablaCod WHERE Substring(cCodTab,1,2)='21" & _
    "' AND len(cCodTab)= 4")
'========= Fuente Financiamiento =========
 Set Reg5 = oConConsol.CargaRecordSet("select cCodTab, cNomTab, cValor, nRanIniTab, nRanFinTab, cAbrev " & _
    " FROM " & sconsol & "TablaCod WHERE Substring(cCodTab,1,2)='22" & _
    "' AND len(cCodTab)= 4")
'========= Tipo de Crédito =========
 Set Reg3 = oConConsol.CargaRecordSet("SELECT cCodTab, cNomTab, cValor FROM " & sconsol & "TablaCod WHERE cCodTab='61' OR cCodtab='62' OR cCodTab='63' OR cCodTab='64' ORDER BY cCodTab")

      
'Obtención de la Cadena que condiciona el reporte
'Cadena = ValorProducto 'Productos
Cadena = ""

'Cargar Codigos de Operacion de desembolso
sql6 = "Select cCodOpe, cNomOpe from  " & sconsol & "Operacion   WHERE cCodOpe like '0101%'"
Set Reg6 = oConConsol.CargaRecordSet(sql6)

Sql8 = "Select count (Kardex.cCodCta) as NumCred from Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta where (dFectra between '" & _
   Format(pdFechaIni, "mm/dd/yyyy") & "' And '" & Format(pdFechaFin, "mm/dd/yyyy") & " 23:59') " & _
   "And Kardex.cFlag is null and Kardex.cMetLiquid is null AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")"

Set Reg8 = oConConsol.CargaRecordSet(Sql8)

If Reg8.EOF And Reg8.BOF Then
   liSiDatos = liSiDatos + 0
Else
   liSiDatos = liSiDatos + Reg8!NumCred
End If
Reg8.Close
Set Reg8 = Nothing

If liSiDatos > 0 Then
     
   ImpDesembolsos = ""
Else
   ImpDesembolsos = ""
   Exit Function
End If

lbSiCambio = False

If Reg1.EOF And Reg1.BOF Then 'Tipo de Moneda
Else
   Do While Not Reg1.EOF
     SQL9 = "Select count(Kardex.cCodCta) as NumCred from Kardex INNER JOIN Credito on kardex.cCodCta = Credito.cCodCta where (dFectra between '" & _
        Format(pdFechaIni, "mm/dd/yyyy") & "' And '" & Format(pdFechaFin, "mm/dd/yyyy") & " 23:59') " & _
        "And Kardex.cFlag is null and Kardex.cMetLiquid is null AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ") AND substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & "'"
      
      'Reg9.CursorLocation = adUseClient
      Set reg9 = oConConsol.CargaRecordSet(SQL9)
      Set reg9.ActiveConnection = Nothing
      
      Datos = reg9!NumCred
      reg9.Close
      Set reg9 = Nothing
      If Datos > 0 Then
         Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
         liLineas = 6
         lsDescM = Trim(Reg1!cNomtab)
         lsRTfImp = lsRTfImp & Chr(10)
         lsRTfImp = lsRTfImp & "MONEDA                :" & space(2) & lsDescM
         liLineas = liLineas + 2
         liTNumCredM = 0:    lnTMontoAprM = 0
         lnTCapitalM = 0:    lnTInteresM = 0
         lnTGastosM = 0
         
                If Reg3.EOF And Reg3.BOF Then 'Tipo de credito
                Else
                   Reg3.MoveFirst
                   Do While Not Reg3.EOF
                       SQL9 = "Select count (kardex.cCodCta) as NumCred from Kardex inner join Credito on kardex.cCodCta = Credito.cCodCta " & _
                           "where (kardex.dFectra between '" & Format(pdFechaIni, "mm/dd/yyyy") & "' And '" & Format(pdFechaFin, "mm/dd/yyyy") & " 23:59') " & _
                           " and substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & "' " & _
                           " AND Substring(cCodLinCred,1,1) = '" & Trim(Reg3!cvalor) & "' " & _
                           "and Kardex.cMetLiquid is null and Kardex.cFlag is null AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ") " & Cadena
                       
                       Set reg9 = oConConsol.CargaRecordSet(SQL9)
                       Set reg9.ActiveConnection = Nothing
                       
                       Datos = reg9!NumCred
                       reg9.Close
                       Set reg9 = Nothing
                       If Datos > 0 Then
                           lbDescPr = True
                           'Cargar SubTipos de credito dependiendo del Tipo de credito
                           SQL4 = "select cNomTab, cValor from " & sconsol & "Tablacod  where substring(cCodTab,1,2)= '" & _
                              Trim(Reg3!cCodTab) & "' And len(cCodTab)= 4 order by cCodTab"
                           
                           Set Reg4 = oConConsol.CargaRecordSet(SQL4)
                           
                           If Reg4.EOF And Reg4.BOF Then 'Sub Tipo de credito
                           Else
                              Do While Not Reg4.EOF
                                  SQL9 = "SELECT COUNT(Kardex.cCodCta) AS NumCred FROM Kardex INNER JOIN Credito ON kardex.cCodCta = Credito.cCodCta " & _
                                      "WHERE (kardex.dFectra BETWEEN '" & Format(pdFechaIni, "mm/dd/yyyy") & "' And '" & Format(pdFechaFin, "mm/dd/yyyy") & " 23:59') " & _
                                      " AND Substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & "' " & _
                                      " AND Substring(cCodLinCred, 1,1) = '" & Trim(Reg3!cvalor) & "' and " & _
                                      "Substring(cCodLinCred,2,2) = '" & Trim(Reg4!cvalor) & "' and Kardex.cFlag is null AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ")" & _
                                      "AND Kardex.cMetLiquid is null " & Cadena
                                      
                                 Set reg9 = oConConsol.CargaRecordSet(SQL9)
                                  
                                 Datos = reg9!NumCred
                                 reg9.Close
                                 Set reg9 = Nothing
                                 If Datos > 0 Then
                                      lsDescPr = Trim(Reg3!cNomtab) & " - " & Trim(Reg4!cNomtab)
                                      If liLineas >= 58 Then
                                          lsRTfImp = lsRTfImp & Chr(12)
                                          cpag = cpag + 1
                                          Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
                                          liLineas = 6
                                      End If
                                      lsRTfImp = lsRTfImp & Chr(10)
                                      lsRTfImp = lsRTfImp & "PRODUCTO              :" & space(2) & lsDescPr
                                      liLineas = liLineas + 2
                                      liTNumCredPr = 0:     lnTMontoAprPr = 0
                                      lnTCapitalPr = 0:     lnTInteresPr = 0
                                      lnTGastosPr = 0
                                      If Reg5.EOF And Reg5.BOF Then 'Fuente de Financiamiento
                                      Else
                                         Reg5.MoveFirst
                                         Do While Not Reg5.EOF
                                             SQL9 = "SELECT COUNT(kardex.cCodCta) as NumCred FROM Kardex INNER JOIN Credito ON kardex.cCodCta = Credito.cCodCta " & _
                                                   "WHERE (kardex.dFectra between '" & Format(pdFechaIni, "mm/dd/yyyy") & "' And '" & Format(pdFechaFin, "mm/dd/yyyy") & " 23:59') " & _
                                                   "And substring(Kardex.cCodCta, 6,1) = '" & Trim(Reg1!cvalor) & "' " & _
                                                   "And substring(cCodLinCred, 1,1) = '" & Trim(Reg3!cvalor) & "' and substring(cCodLinCred,2,2) = '" & _
                                                   Trim(Reg4!cvalor) & "' and substring(cCodLinCred,6,1) = '" & Trim(Reg5!cvalor) & "' and " & _
                                                   "Kardex.cMetLiquid is null and Kardex.cFlag is null AND Substring(Credito.cCodLinCred, 6,1) IN (" & Trim(pcFtes) & ") " & Cadena
                                                   
                                             Set reg9 = oConConsol.CargaRecordSet(SQL9)
                                             
                                             Datos = reg9!NumCred
                                             reg9.Close
                                             Set reg9 = Nothing
                                             If Datos > 0 Then
                                                If liLineas >= 60 Then
                                                   lsRTfImp = lsRTfImp & Chr(12)
                                                   cpag = cpag + 1
                                                   Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
                                                   liLineas = 6
                                                End If
                                                lsDescF = Trim(Reg5!cNomtab)
                                                lsRTfImp = lsRTfImp & Chr(10)
                                                lsRTfImp = lsRTfImp & "FUENTE FINANCIAMIENTO :" & space(2) & lsDescF & Chr(10)
                                                liLineas = liLineas + 2
                                                liTNumCredF = 0:   lnTMontoAprF = 0
                                                lnTCapitalF = 0:   lnTInteresF = 0
                                                lnTGastosF = 0
                                                If Reg6.EOF And Reg6.BOF Then 'Operaciones
                                                Else
                                                   Reg6.MoveFirst
                                                   Do While Not Reg6.EOF
                                                      'Cargar credito desembolsados para un RANGO DE FECHAS
                                                       sql7 = "SELECT Credito.cCodCta, Credito.nMontoApr, Kardex.nCapital, Credito.nIntApr, " & _
                                                                "Kardex.nOtrGas, Credito.cCodAnalista, Persona.cNomPers, Credito.cCodInst,Credito.cCodModular,Credito.nTasaInt,Credito.cTipCuota " & _
                                                                "FROM Kardex inner join Credito on kardex.cCodCta = Credito.cCodCta inner join PersCredito on " & _
                                                                "Credito.cCodCta = PersCredito.cCodCta INNER JOIN DBPERSONA..Persona Persona on PersCredito.cCodPers = " & _
                                                                "Persona.cCodPers WHERE PersCredito.cRelaCta = 'TI' and substring(cCodLinCred, 4,1) = '" & _
                                                                Trim(Reg1!cvalor) & "' " & _
                                                                "and substring(Credito.cCodLinCred, 6,1) = '" & Trim(Reg5!cvalor) & "' and substring(credito.cCodLinCred,1,1) = '" & _
                                                                Trim(Reg3!cvalor) & "' and substring(Credito.cCodLinCred, 2,2) = '" & Trim(Reg4!cvalor) & "' " & _
                                                                "and (kardex.dFectra between '" & Format(pdFechaIni, "mm/dd/yyyy") & "' AND '" & Format(pdFechaFin, "mm/dd/yyyy") & " 23:59') " & _
                                                                "and Kardex.cCodOpe = '" & Trim(Reg6!cCodOpe) & "' and Kardex.cFlag is null " & Cadena
                                                                
                                                       Set Reg7 = oConConsol.CargaRecordSet(sql7)
                                                       Set Reg7.ActiveConnection = Nothing
                                                     
                                                       If Reg7.EOF And Reg7.BOF Then 'Creditos desembolsados
                                                             liTNumCredO = 0:   lnTMontoAprO = 0
                                                             lnTCapitalO = 0:   lnTInteresO = 0
                                                             lnTGastosO = 0
                                                       Else
                                                             lsDescO = Reg6!cNomOpe
                                                             lbDescO = True
                                                             liTNumCredO = 0:     lnTMontoAprO = 0
                                                             lnTCapitalO = 0:     lnTInteresO = 0
                                                             lnTGastosO = 0
                                                             If lbDescO Then
                                                                 lbDescO = False
                                                                 If lbSiCambio Then
                                                                     lsRTfImp = lsRTfImp & Chr(10)
                                                                     lbSiCambio = False
                                                                     liLineas = liLineas + 1
                                                                 End If
                                                                 lsRTfImp = lsRTfImp & "OPERACION             :" & space(2) & lsDescO & Chr(10) & Chr(10)
                                                                 liLineas = liLineas + 2
                                                              End If
                                                              SubCabDesembolsos
                                                              liLineas = liLineas + 3
                                                              Do While Not Reg7.EOF
                                                                  If IsNull(Reg7!nCapital) Then
                                                                      lnTCapital = 0
                                                                  Else
                                                                      lnTCapital = Reg7!nCapital
                                                                  End If
                                                                  If IsNull(Reg7!nIntApr) Then
                                                                      lnTInteres = 0
                                                                  Else
                                                                      lnTInteres = Reg7!nIntApr
                                                                  End If
                                                                  If IsNull(Reg7!nOtrGas) Then
                                                                      lnTGastos = 0
                                                                  Else
                                                                      lnTGastos = Reg7!nOtrGas
                                                                  End If
                                                                  ContD = ContD + 1
                                                                   
                                                                  'Formar cadena de impresion
                                                                  Cliente = PstaNombre(Reg7!cNomPers, False)
                                                                  '''''''
                                                                    Set nregTemp = oConConsol.CargaRecordSet("SELECT cAbrev, cNomTab FROM " & sconsol & "TABLACOD WHERE cCodTab like '55__' and cValor = '" & Trim(Reg7!cCodInst) & "'")
                                                                    
                                                                     
                                                                    If nregTemp.EOF And nregTemp.BOF Then
                                                                        lsInstitucion = ""
                                                                        lsDescInst = ""
                                                                    Else
                                                                        lsInstitucion = Trim(nregTemp!cAbrev)
                                                                        lsDescInst = Trim(nregTemp!cNomtab)
                                                                    End If
                                                                    
 
                                                                  lsRTfImp = lsRTfImp & space(12 - Len(Reg7!cCodCta)) & Reg7!cCodCta & space(3) & Cliente
                                                                  lsRTfImp = lsRTfImp & ImpreFormat(Reg7!nMontoApr, 14, , True) & ImpreFormat(lnTCapital, 14, , True)
                                                                  lsRTfImp = lsRTfImp & ImpreFormat(lnTInteres, 10, , True) & ImpreFormat(lnTGastos, 8, , True)
                                                                  lsRTfImp = lsRTfImp & space(2) & Trim(Reg7!cCodAnalista) & ImpreFormat(Reg7!nTasaInt, 5, 2) & "%"
                                                                  lsRTfImp = lsRTfImp & space(1) & IIf(Reg7!cTipCuota = "4", "*", " ")
                                                                  lsRTfImp = lsRTfImp & space(1) & Trim(lsInstitucion) & space(2) & Mid(Trim(Reg7!cCodModular), 1, 15) & Chr(10)
                                                                  liLineas = liLineas + 1
                                                                  'Total de Operaciones
                                                                  liTNumCredO = liTNumCredO + 1
                                                                  lnTMontoAprO = lnTMontoAprO + Reg7!nMontoApr
                                                                  lnTCapitalO = lnTCapitalO + lnTCapital
                                                                  lnTInteresO = lnTInteresO + lnTInteres
                                                                  lnTGastosO = lnTGastosO + lnTGastos
                                                                  Reg7.MoveNext
                                                              Loop 'Fin Reg7 - Creditos Desembolsados
                                                              If liTNumCredO > 0 Then
                                                                  'Cadena de impresion Sub total por operacion
                                                                  lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
                                                                  lsRTfImp = lsRTfImp & "**** SUB TOTAL OPERACION" & space(10) & "CASOS :" & ImpreFormat(liTNumCredO, 4, 0, True) & space(2)
                                                                  lsRTfImp = lsRTfImp & ImpreFormat(lnTMontoAprO, 14, , True) & ImpreFormat(lnTCapitalO, 14, , True)
                                                                  lsRTfImp = lsRTfImp & ImpreFormat(lnTInteresO, 10, , True) & ImpreFormat(lnTGastosO, 8, , True) & Chr(10)
                                                                  lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
                                                                  liLineas = liLineas + 3
                                                                  'lsrtfimp  = lsrtfimp  & liLineas & chr(10)
                                                                  'Total por Fuente de Financiamiento
                                                                  liTNumCredF = liTNumCredF + liTNumCredO
                                                                  lnTMontoAprF = lnTMontoAprF + lnTMontoAprO
                                                                  lnTCapitalF = lnTCapitalF + lnTCapitalO
                                                                  lnTInteresF = lnTInteresF + lnTInteresO
                                                                  lnTGastosF = lnTGastosF + lnTGastosO
                                                              End If
                                                          End If 'Fin Reg7 - Creditos Desembolsados
                                                          Reg7.Close
                                                          Set Reg7 = Nothing
                                                          Reg6.MoveNext
                                                     Loop 'Fin Reg6 - Operaciones
                                                     DoEvents
                                                  End If 'Fin Reg6 - Operaciones
                                                  'Cadena de impresion Sub total por fuente de financiamiento
                                                  If liLineas >= 60 Then
                                                     lsRTfImp = lsRTfImp & Chr(12)
                                                     cpag = cpag + 1
                                                     Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
                                                     liLineas = 6
                                                  End If
                                                  If liTNumCredF > 0 Then
                                                      lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
                                                      lsRTfImp = lsRTfImp & "**** SUB TOTAL FUENTE FINANC. " & space(4) & "CASOS :" & ImpreFormat(liTNumCredF, 4, 0, True) & space(2)
                                                      lsRTfImp = lsRTfImp & ImpreFormat(lnTMontoAprF, 14, , True) & ImpreFormat(lnTCapitalF, 14, , True)
                                                      lsRTfImp = lsRTfImp & ImpreFormat(lnTInteresF, 10, , True) & ImpreFormat(lnTGastosF, 8, , True) & Chr(10)
                                                      lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
                                                      liLineas = liLineas + 3
                                                      'lsrtfimp  = lsrtfimp  & liLineas & chr(10)
                                                      liTNumCredPr = liTNumCredPr + liTNumCredF
                                                      lnTMontoAprPr = lnTMontoAprPr + lnTMontoAprF
                                                      lnTCapitalPr = lnTCapitalPr + lnTCapitalF
                                                      lnTInteresPr = lnTInteresPr + lnTInteresF
                                                      lnTGastosPr = lnTGastosPr + lnTGastosF
                                                  End If
                                             End If 'Fin Datos - Fuente de Financiamiento
                                             Reg5.MoveNext
                                         Loop 'Fin Reg5 - Fuente de Financiamiento
                                      End If 'Fin Reg5 - Fuente de Financiamiento
                                      If liLineas >= 60 Then
                                         lsRTfImp = lsRTfImp & Chr(12)
                                         cpag = cpag + 1
                                         Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
                                         liLineas = 6
                                      End If
                                      If liTNumCredPr > 0 Then
                                          lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
                                          lsRTfImp = lsRTfImp & "**** SUB TOTAL PRODUCTO" & space(11) & "CASOS :" & ImpreFormat(liTNumCredPr, 4, 0, True) & space(2)
                                          lsRTfImp = lsRTfImp & ImpreFormat(lnTMontoAprPr, 14, , True) & ImpreFormat(lnTCapitalPr, 14, , True)
                                          lsRTfImp = lsRTfImp & ImpreFormat(lnTInteresPr, 10, , True) & ImpreFormat(lnTGastosPr, 8, , True) & Chr(10)
                                          lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
                                          liLineas = liLineas + 3
                                          'Total por Plazo
                                          liTNumCredM = liTNumCredM + liTNumCredPr
                                          lnTMontoAprM = lnTMontoAprM + lnTMontoAprPr
                                          lnTCapitalM = lnTCapitalM + lnTCapitalPr
                                          lnTInteresM = lnTInteresM + lnTInteresPr
                                          lnTGastosM = lnTGastosM + lnTGastosPr
                                      End If
                                 End If 'Fin Datos - Sub Tipo de credito
                                 Reg4.MoveNext
                              Loop 'Fin Reg4 - Sub Tipo de credito
                           End If 'Fin Reg4 - Sub Tipo de credito
                           Reg4.Close
                           Set Reg4 = Nothing
                       End If 'Fin Datos - Tipo de credito
                       Reg3.MoveNext
                   Loop 'Fin de Reg3 - Tipo de credito
                End If 'Fin Reg3 - Tipo de credito
                'Linea de impresion de Sub total por Plazo
                If liLineas >= 60 Then
                   lsRTfImp = lsRTfImp & Chr(12)
                   cpag = cpag + 1
                   Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
                   liLineas = 6
                End If
         If liLineas >= 60 Then
            lsRTfImp = lsRTfImp & Chr(12)
            cpag = cpag + 1
            Call CabDesembolsos(pdFechaIni, pdFechaFin, sNomAge)
            liLineas = 6
         End If
         If liTNumCredM > 0 Then
            lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
            lsRTfImp = lsRTfImp & "**** SUB TOTAL MONEDA" & space(13) & "CASOS :" & ImpreFormat(liTNumCredM, 4, 0, True) & space(2)
            lsRTfImp = lsRTfImp & ImpreFormat(lnTMontoAprM, 14, , True) & ImpreFormat(lnTCapitalM, 14, , True)
            lsRTfImp = lsRTfImp & ImpreFormat(lnTInteresM, 10, , True) & ImpreFormat(lnTGastosM, 8, , True) & Chr(10)
            lsRTfImp = lsRTfImp & String(140, "-") & Chr(10)
            liLineas = liLineas + 3
         End If
      End If 'Fin Datos - Moneda
   Reg1.MoveNext
   If Not Reg1.EOF Then
      lsRTfImp = lsRTfImp & Chr(12)
      cpag = cpag + 1
      'liLineas = 0
   End If
   Loop
End If 'Tipo de moneda
      
Reg3.Close
Set Reg3 = Nothing
Reg2.Close
Set Reg2 = Nothing
Reg1.Close
Set Reg1 = Nothing
Reg6.Close
Set Reg6 = Nothing
Reg5.Close
Set Reg5 = Nothing
ImpDesembolsos = lsRTfImp
End Function

Public Sub Imprime770130(ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String, ByVal ntxtTipCamFij1 As Double, ByVal dtxtFecha As String)
Dim nFSD As Double
Dim lsCadena As String
Dim oPrevio As clsPrevioFinan
Set oPrevio = New clsPrevioFinan
    
    Dim oGen As DGeneral
    Set oGen = New DGeneral
    
    nFSD = oGen.GetParametro(2000, 2019)
    
    lsCadena = GeneraFSD(pnbitcentral_, nFSD, ntxtTipCamFij1, dtxtFecha)
   
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, sTitulo, True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
    
Err_:
        Exit Sub
 
End Sub

Public Function GeneraFSD(ByVal pnBitCentral As Boolean, ByVal nFSD As Double, ByVal nTCF As Double, ByVal dfecha As Date) As String
    Dim sCad As String
    Dim rsQryFSD As ADODB.Recordset
    Dim rsCta As ADODB.Recordset
    Dim dbAux As ADODB.Connection
    Dim lnCarLin As Integer, lsNumPag As String
    Dim lsTitRp1 As String, lsTitRp2 As String
    Dim lnLinPag As Integer, lnCntPag As Integer
    Dim lnCntCta As Integer, lnMonFSD As Double
    Dim rsQrySdo As ADODB.Recordset
    Dim lsCodCta As String, sMoneda As String
    Dim sPers As String, sNombre As String * 60
    Dim sColumna(1 To 4) As String * 30
    Dim sNumero As String * 12
    Dim sMontoSaldo As String * 15, sMontoInt As String * 15
    Dim sMontoSaldoC As String * 15, sMontoIntC As String * 15
    Dim sconso As String
    Dim VSQL As String
    
    sCad = ""
     
    Set rsCta = New ADODB.Recordset
    Dim oConAdd As DConecta
    Set oConAdd = New DConecta
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    Dim sql As String
    
    oConAdd.AbreConexion 'Remota "07", , , "01"
    oConConsol.AbreConexion 'Remota "07", , , "03"
        
    rsCta.CursorLocation = adUseClient
    'Determina el servidor consolidado de captaciones
    If pnBitCentral = True Then
        sql = "Select cNomVar, cValorVar From VarSistema Where (cCodProd = 'AHO' And cNomVar IN ('cDBAhoCont','cServAhoCont')) " _
            & "OR (cCodProd = 'ADM' And cNomVar IN ('dFecCierreMes'))"
    Else
        sql = "Select cNomVar, cValorVar From VarSistema Where (cCodProd = 'AHO' And cNomVar IN ('cDBAhoCont','cServAhoCont')) OR (cCodProd = 'ADM' And cNomVar IN ('dFecCierreMes'))"
    End If
    
    Set rsCta = oConAdd.CargaRecordSet(sql)
    Set rsCta.ActiveConnection = Nothing
    
    Do While Not rsCta.EOF
        If Trim(rsCta!cNomVar) = "dFecCierreMes" Then
            dfecha = CDate(Trim(rsCta!cValorVar))
        End If
        rsCta.MoveNext
    Loop
    rsCta.Close
    
    If pnBitCentral = True Then
        sql = "SELECT F.cperscod, F.cpersnombre, (F.nDisPers+F.nIntPers) nSaldo, FD.cCtaCod, FD.bInactiva, " _
            & "FD.nSdoDis, FD.nIntMes, FD.nSdoCob, FD.nIntCob FROM (Select distinct cPersCod From dbFSD..FSDPersonaExonerados) U RIGHT JOIN " _
            & "dbFSD..FSDPersona F ON U.cPersCod = F.cCodpers INNER JOIN dbFSD..FSDPersonaDet FD ON F.cCodPers = FD.cCodPers " _
            & "WHERE (F.nDisPers+F.nIntPers) > " & Trim(nFSD) & " And U.ccodpers IS NULL ORDER BY nSaldo DESC, F.cperscod, FD.cCtaCod"
    Else
        sql = "SELECT F.cCodPers, F.cNomPers, (F.nDisPers+F.nIntPers) nSaldo, FD.cCodCta, FD.bInactiva, " _
            & "FD.nSdoDis, FD.nIntMes, FD.nSdoCob, FD.nIntCob FROM (Select distinct cPersCod From dbFSD..FSDPersonaExonerados) U RIGHT JOIN " _
            & "dbFSD..FSDPersona F ON U.cPersCod = F.cCodpers INNER JOIN dbFSD..FSDPersonaDet FD ON F.cCodPers = FD.cCodPers " _
            & "WHERE (F.nDisPers+F.nIntPers) > " & Trim(nFSD) & " And U.cPersCod IS NULL ORDER BY nSaldo DESC, F.cCodPers, FD.cCodCta"
    End If
         
    Set rsCta = oConConsol.CargaRecordSet(sql)
    Set rsCta.ActiveConnection = Nothing
     
    If rsCta.EOF And rsCta.BOF Then
        lnCntPag = lnCntPag + 1
        lsNumPag = ""
        lnLinPag = 65
        lnCarLin = 89
        lsTitRp1 = "L I S T A D O   P A R A   F O N D O   D E   S E G U R O   D E   D E P O S I T O"
        lsTitRp2 = "( AHORROS + PLAZO FIJO + CTS )"
        lsNumPag = FillNum(Trim(Str(lnCntPag)), 4, " ")
        sCad = sCad & CabeRepoAnx13("", "", lnCarLin, "SECCION AHORROS", lsTitRp1, lsTitRp2, "SOLES", lsNumPag) & oImpresora.gPrnSaltoLinea
         
        sCad = sCad & String(30, " ") & "AL " & Format$(dfecha, "dd mmm yyyy") & String(30, " ") & oImpresora.gPrnSaltoLinea
        '''sCad = sCad & "TIPO DE CAMBIO FIJO S/. " & JDNum(Trim(Str(nTCF)), 6, False, 1, 4) & String(28, " ") 'marg ers044-2016
        sCad = sCad & "TIPO DE CAMBIO FIJO " & gcPEN_SIMBOLO & " " & JDNum(Trim(Str(nTCF)), 6, False, 1, 4) & String(28, " ") 'marg ers044-2016
        '''sCad = sCad & "FSD A LA FECHA S/. " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea 'marg ers044-2016
        sCad = sCad & "FSD A LA FECHA " & gcPEN_SIMBOLO & " " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea 'marg ers044-2016
        sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        sCad = sCad & String(12, " ")
        sCad = sCad & String(20, " ") & "NOMBRE / RAZON SOCIAL" & String(20, " ")
        sCad = sCad & String(16, " ") & oImpresora.gPrnSaltoLinea
        sCad = sCad & "  CODIGO  " & "  "
        sCad = sCad & String(25, " ") & "DEL CLIENTE" & String(25, " ")
        sCad = sCad & "SALDO DISPONIBLE" & oImpresora.gPrnSaltoLinea
        sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea          ' hasta 160 caracteres x línea
        sCad = sCad & String(36, " ") & "   CUENTA    SALDO/CAPITAL      INTERESES   SALDO/COBERT     INT/COBERT" & oImpresora.gPrnSaltoLinea
        sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea & oImpresora.gPrnSaltoLinea           ' hasta 160 caracteres x línea
        sCad = sCad & "NO EXISTEN CUENTAS QUE INFORMAR" & oImpresora.gPrnSaltoLinea & Chr$(12)
        GeneraFSD = sCad
    Else
        lsNumPag = ""
        lnLinPag = 65
        lnCarLin = 89
        lsTitRp1 = "L I S T A D O   P A R A   F O N D O   D E   S E G U R O   D E   D E P O S I T O"
        lsTitRp2 = "( AHORROS + PLAZO FIJO + CTS )"
        lnCntPag = 0
        sPers = ""
        Do While Not rsCta.EOF
            If lnLinPag > 55 Then
                If lsNumPag <> "" Then
                    sCad = sCad & String(lnCarLin, "-") & Chr$(12)
                End If
                lnLinPag = 0
                lnCntPag = lnCntPag + 1
                lsNumPag = FillNum(Trim(Str(lnCntPag)), 4, " ")
                sCad = sCad & CabeRepoAnx13("", "", lnCarLin, "SECCION AHORROS", lsTitRp1, lsTitRp2, "SOLES", lsNumPag) & oImpresora.gPrnSaltoLinea
                sCad = sCad & String(30, " ") & "AL " & Format$(dfecha, "dd mmm yyyy") & String(30, " ") & oImpresora.gPrnSaltoLinea
                '''sCad = sCad & "TIPO DE CAMBIO FIJO S/. " & JDNum(Trim(Str(nTCF)), 6, False, 1, 4) & String(28, " ") 'marg ers044-2016
                sCad = sCad & "TIPO DE CAMBIO FIJO " & gcPEN_SIMBOLO & " " & JDNum(Trim(Str(nTCF)), 6, False, 1, 4) & String(28, " ") 'marg ers044-2016
                '''sCad = sCad & "FSD A LA FECHA S/. " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea 'marg ers044-2016
                sCad = sCad & "FSD A LA FECHA " & gcPEN_SIMBOLO & " " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea 'marg ers044-2016
                sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
                sCad = sCad & String(12, " ")
                sCad = sCad & String(20, " ") & "NOMBRE / RAZON SOCIAL" & String(20, " ")
                sCad = sCad & String(16, " ") & oImpresora.gPrnSaltoLinea
                sCad = sCad & "  CODIGO  " & "  "
                sCad = sCad & String(25, " ") & "DEL CLIENTE" & String(25, " ")
                sCad = sCad & "SALDO DISPONIBLE" & oImpresora.gPrnSaltoLinea
                sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea          ' hasta 160 caracteres x línea
                sCad = sCad & String(36, " ") & "   CUENTA     SALDO/CAPITAL      INTERESES   SALDO/COBERT     INT/COBERT" & oImpresora.gPrnSaltoLinea
                sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea & oImpresora.gPrnSaltoLinea           ' hasta 160 caracteres x línea
                lnLinPag = 14
            End If
            If pnBitCentral = True Then
                If sPers <> rsCta!cPersCod Then
                    sPers = rsCta!cPersCod
                    sCad = sCad & oImpresora.gPrnSaltoLinea & rsCta!cPersCod & "  "
                    sNombre = PstaNombre(rsCta!cPersNombre, False)
                    sCad = sCad & sNombre & "  "
                    sCad = sCad & JDNum(Trim(Str(rsCta!nSaldo)), 15, True, 12, 2) & oImpresora.gPrnSaltoLinea
                    If rsCta("bInactiva") = 0 Then
                        sCad = sCad & String(36, " ") & rsCta!cCtaCod & "   " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & "   " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    Else
                        sCad = sCad & String(34, " ") & "* " & rsCta!cCtaCod & "   " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & "   " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    End If
                    lnLinPag = lnLinPag + 3
                Else
                    If rsCta("bInactiva") = 0 Then
                        sCad = sCad & String(36, " ") & rsCta!cCtaCod & "   " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & "   " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    Else
                        sCad = sCad & String(34, " ") & "* " & rsCta!cCtaCod & "   " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & "   " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    End If
                    lnLinPag = lnLinPag + 1
                End If
            Else
                If sPers <> rsCta!cCodPers Then
                    sPers = rsCta!cCodPers
                    sCad = sCad & oImpresora.gPrnSaltoLinea & rsCta!cCodPers & "  "
                    sNombre = PstaNombre(rsCta!cNomPers, False)
                    sCad = sCad & sNombre & "  "
                    sCad = sCad & JDNum(Trim(Str(rsCta!nSaldo)), 15, True, 12, 2) & oImpresora.gPrnSaltoLinea
                    If rsCta("bInactiva") = 0 Then
                        sCad = sCad & String(36, " ") & rsCta!cCodCta & " " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nSdoCob)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntCob)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    Else
                        sCad = sCad & String(34, " ") & "* " & rsCta!cCodCta & " " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nSdoCob)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntCob)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    End If
                    lnLinPag = lnLinPag + 3
                Else
                    If rsCta("bInactiva") = 0 Then
                        sCad = sCad & String(36, " ") & rsCta!cCodCta & " " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nSdoCob)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntCob)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    Else
                        sCad = sCad & String(34, " ") & "* " & rsCta!cCodCta & " " & JDNum(Trim(Str(rsCta!nSdoDis)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntMes)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nSdoCob)), 12, True, 9, 2) & " " & JDNum(Trim(Str(rsCta!nIntCob)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea
                    End If
                    lnLinPag = lnLinPag + 1
                End If
            End If
            
            rsCta.MoveNext
        Loop
    End If
    sCad = sCad & String(lnCarLin, "=") & Chr$(12)             ' hasta 160 caracteres x línea
    
    If pnBitCentral = True Then
        VSQL = "SELECT SUBSTRING(FD.cCtaCod,3,3) Prod, SUBSTRING(FD.cCtaCod,6,1) Mon, FD.bInactiva, SUM(ROUND(FD.nSdoDis,2)) nSaldo, SUM(ROUND(FD.nIntMes,2)) nInteres, COUNT(*) nNum, SUM(FD.nSdoCob) nSdoCob, SUM(FD.nIntCob) nIntCob " _
            & "FROM DBFSD..FSDPersonaDet FD INNER JOIN DBFSD..FSDPersona F LEFT JOIN (Select distinct cPersCod From dbFSD..FSDPersonaExonerados) U ON F.cperscod = U.cperscod " _
            & "ON FD.cperscod = F.cperscod WHERE (F.nDisPers+F.nIntPers) > " & nFSD & " And U.ccodpers IS NULL GROUP BY SUBSTRING(FD.cCtaCod,3,3), SUBSTRING(FD.cCtaCod,6,1), " _
            & "FD.bInactiva ORDER BY Mon, Prod, bInactiva"
    Else
        VSQL = "SELECT SUBSTRING(FD.cCodCta,3,3) Prod, SUBSTRING(FD.cCodCta,6,1) Mon, FD.bInactiva, SUM(ROUND(FD.nSdoDis,2)) nSaldo, SUM(ROUND(FD.nIntMes,2)) nInteres, COUNT(*) nNum, SUM(FD.nSdoCob) nSdoCob, SUM(FD.nIntCob) nIntCob  " _
            & "FROM DBFSD..FSDPersonaDet FD INNER JOIN DBFSD..FSDPersona F LEFT JOIN (Select distinct cPersCod From dbFSD..FSDPersonaExonerados) U ON F.cCodPers = U.cPersCod " _
            & "ON FD.cCodPers = F.cCodPers WHERE (F.nDisPers+F.nIntPers) > " & nFSD & " And U.cPersCod IS NULL GROUP BY SUBSTRING(FD.cCodCta,3,3), SUBSTRING(FD.cCodCta,6,1), " _
            & "FD.bInactiva ORDER BY Mon, Prod, bInactiva"
    End If
    
    Set rsCta = oConConsol.CargaRecordSet(VSQL)
    Set rsCta.ActiveConnection = Nothing
          
    If Not (rsCta.EOF And rsCta.BOF) Then
        lnCntPag = lnCntPag + 1
        lsTitRp1 = "L I S T A D O   P A R A   F O N D O   D E   S E G U R O   D E   D E P O S I T O"
        lsTitRp2 = "( AHORROS + PLAZO FIJO + CTS )"
        lsNumPag = FillNum(Trim(Str(lnCntPag)), 4, " ")
        sCad = sCad & CabeRepoAnx13("", "", lnCarLin, "SECCION AHORROS", lsTitRp1, lsTitRp2, "SOLES", lsNumPag) & oImpresora.gPrnSaltoLinea
        sCad = sCad & String(30, " ") & "AL " & Format$(dfecha, "dd mmm yyyy") & String(30, " ") & oImpresora.gPrnSaltoLinea
        '''sCad = sCad & "TIPO DE CAMBIO FIJO S/. " & JDNum(Trim(Str(nTCF)), 6, False, 1, 4) & String(28, " ") 'marg ers044-2016
        sCad = sCad & "TIPO DE CAMBIO FIJO " & gcPEN_SIMBOLO & " " & JDNum(Trim(Str(nTCF)), 6, False, 1, 4) & String(28, " ") 'marg ers044-2016
        '''sCad = sCad & "FSD A LA FECHA S/. " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea 'marg ers044-2016
        sCad = sCad & "FSD A LA FECHA " & gcPEN_SIMBOLO & " " & JDNum(Trim(Str(nFSD)), 12, True, 9, 2) & oImpresora.gPrnSaltoLinea 'marg ers044-2016
        sCad = sCad & String(lnCarLin, "-") & oImpresora.gPrnSaltoLinea
        sCad = sCad & oImpresora.gPrnSaltoLinea
        
        sMoneda = ""
        Dim I As Integer
        sColumna(1) = "Depósito de Ahorros Activas"
        sColumna(2) = "Depósito de Ahorros Inactivas"
        sColumna(3) = "Depósito Plazo Fijo"
        sColumna(4) = "Depósito CTS"
        
        Do While Not rsCta.EOF
            If sMoneda <> rsCta("Mon") Then
                sCad = sCad & oImpresora.gPrnSaltoLinea
                If rsCta("Mon") = "1" Then
                    sCad = sCad & "MONEDA NACIONAL" & space(17) & "      NUMERO" & space(2) & "     SDO. DISP." & space(2) & "        INTERES" & space(2) & "   SALDO/COBERT" & space(2) & "   INT/COBERTUR" & oImpresora.gPrnSaltoLinea
                Else
                    sCad = sCad & "MONEDA EXTRANJERA" & space(14) & "      NUMERO" & space(2) & "     SDO. DISP." & space(2) & "         INTERES" & space(2) & "   SALDO/COBERT" & space(2) & "   INT/COBERTUR" & oImpresora.gPrnSaltoLinea
                End If
                I = 1
                sMoneda = rsCta("Mon")
            End If
            RSet sNumero = "0"
            RSet sMontoSaldo = "0.00"
            RSet sMontoInt = "0.00"
            RSet sMontoSaldoC = "0.00"
            RSet sMontoIntC = "0.00"
            
            Select Case I
                Case 1
                    If rsCta("Prod") = Producto.gCapAhorros And rsCta("bInactiva") = "0" Then
                        RSet sNumero = Format$(rsCta("nNum"), "#,##0")
                        RSet sMontoSaldo = Format$(rsCta("nSaldo"), "#,##0.00")
                        RSet sMontoInt = Format$(rsCta("nInteres"), "#,##0.00")
                        RSet sMontoSaldoC = Format$(rsCta("nSdoCob"), "#,##0.00")
                        RSet sMontoIntC = Format$(rsCta("nIntCob"), "#,##0.00")
                        rsCta.MoveNext
                    End If
                Case 2
                    If rsCta("Prod") = Producto.gCapAhorros And rsCta("bInactiva") = "1" Then
                        RSet sNumero = Format$(rsCta("nNum"), "#,##0")
                        RSet sMontoSaldo = Format$(rsCta("nSaldo"), "#,##0.00")
                        RSet sMontoInt = Format$(rsCta("nInteres"), "#,##0.00")
                        RSet sMontoSaldoC = Format$(rsCta("nSdoCob"), "#,##0.00")
                        RSet sMontoIntC = Format$(rsCta("nIntCob"), "#,##0.00")
                        rsCta.MoveNext
                    End If
                Case 3
                    If rsCta("Prod") = Producto.gCapPlazoFijo Then
                        RSet sNumero = Format$(rsCta("nNum"), "#,##0")
                        RSet sMontoSaldo = Format$(rsCta("nSaldo"), "#,##0.00")
                        RSet sMontoInt = Format$(rsCta("nInteres"), "#,##0.00")
                        RSet sMontoSaldoC = Format$(rsCta("nSdoCob"), "#,##0.00")
                        RSet sMontoIntC = Format$(rsCta("nIntCob"), "#,##0.00")
                        rsCta.MoveNext
                    End If
                Case 4
                    If rsCta("Prod") = Producto.gCapCTS Then
                        RSet sNumero = Format$(rsCta("nNum"), "#,##0")
                        RSet sMontoSaldo = Format$(rsCta("nSaldo"), "#,##0.00")
                        RSet sMontoInt = Format$(rsCta("nInteres"), "#,##0.00")
                        RSet sMontoSaldoC = Format$(rsCta("nSdoCob"), "#,##0.00")
                        RSet sMontoIntC = Format$(rsCta("nIntCob"), "#,##0.00")
                        rsCta.MoveNext
                    End If
            End Select
            sCad = sCad & sColumna(I) & space(2) & sNumero & space(2) & sMontoSaldo & space(2) & sMontoInt & space(2) & sMontoSaldoC & space(2) & sMontoIntC & oImpresora.gPrnSaltoLinea
            I = I + 1
        Loop
        sCad = sCad & oImpresora.gPrnSaltoLinea
        sCad = sCad & String(lnCarLin, "=") & Chr$(12)
    End If
    GeneraFSD = sCad
    Set rsCta = Nothing
End Function


Public Function Imprime770175(pdFecha As Date, ByVal pnbitcentral_ As Boolean, ByVal sTitulo As String)

Dim nFSD As Double
Dim oGen As DGeneral

    Set oGen = New DGeneral
    nFSD = oGen.GetParametro(2000, 2019)

    GeneraFSDExcelFuncionarios pdFecha, pnbitcentral_, nFSD
 
Err_:
        Exit Function

End Function

Public Sub GeneraFSDExcelFuncionarios(ByVal pdFecha As Date, ByVal pnBitCentral As Boolean, ByVal nFSD As Double)
    Dim rsProd As ADODB.Recordset
    Dim rsCta As ADODB.Recordset
    Dim lsFile As New FileSystemObject
    Dim lsMensaj As String
    Dim lnDiaMes As Integer
    Dim lnDiaDif As Integer
    Dim ldIni As Date
    Dim I As Integer, j As Integer, k As Integer
    Dim nDias As Integer
    Dim bExiste As Boolean
    Dim xlsApp As Excel.Application
    Dim xlsBok As Excel.Workbook
    Dim xlsSht As Excel.Worksheet
    Dim posx As Integer, posy As Integer
    Dim posyIni As Integer
    Dim sProd As String
    Dim nSaldo As Double
    Dim sArchivo As String
    Dim lbPrimerDia As Boolean
    Dim dfecha As Date
    On Error GoTo ErrExcel
    Screen.MousePointer = 11
    Set xlsApp = New Excel.Application
    Set xlsBok = xlsApp.Workbooks.Add
    Dim sql As String
    Dim oConAdd As DConecta
    Set oConAdd = New DConecta
    
    Dim oCon As DConecta
    Set oCon = New DConecta
    Dim oFSD1 As New NAnx_FSD
    
    oCon.AbreConexion
    
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    
    oConAdd.AbreConexion 'Remota "07", , , "01"
    oConConsol.AbreConexion 'Remota "07", , , "03"
    
    dfecha = pdFecha

    For I = 1 To 2
        Set xlsSht = xlsBok.Worksheets.Add
        xlsSht.Name = IIf(I = 1, "Moneda Nacional", "Moneda Extranjera")
        ldIni = CDate("01" & "/" & Month(dfecha) & "/" & Year(dfecha))
        xlsSht.Cells(1, 1) = gsNomCmac
        xlsSht.Cells(2, 1) = Format(Month(dfecha), "00") & " - " & Year(dfecha)
        xlsSht.Cells(2, 2) = Format$(Time, "hh:mm:ss AMPM")
        xlsSht.Cells(3, 2) = "EXTRACTO DE CUENTAS DE CLIENTES EXONERADOS DEL FSD"
        xlsSht.Range(xlsSht.Cells(1, 1), xlsSht.Cells(3, 2)).Font.Bold = True
        xlsSht.Range(xlsSht.Cells(3, 2), xlsSht.Cells(3, 2)).Font.Size = 14
        xlsSht.Cells(4, 1) = "AHORROS"
        xlsSht.Cells(39, 1) = "PLAZO FIJO"
        xlsSht.Cells(74, 1) = "CTS"
        
        k = 5
        Do While Month(ldIni) = Month(dfecha)
            xlsSht.Cells(k, 1) = ldIni
            xlsSht.Cells(k + 35, 1) = ldIni
            xlsSht.Cells(k + 70, 1) = ldIni
            k = k + 1
            ldIni = DateAdd("d", 1, ldIni)
        Loop
        ExcelCuadro xlsSht, 1, 4, 1, Day(ldIni - 1) + 4
        ExcelCuadro xlsSht, 1, 39, 1, Day(ldIni - 1) + 39
        ExcelCuadro xlsSht, 1, 74, 1, Day(ldIni - 1) + 74
        ldIni = CDate("01" & "/" & Month(dfecha) & "/" & Year(dfecha))
        
        If pnBitCentral = True Then
            sql = "SELECT SUBSTRING(cCtaCod,6,3) Prod, cCtaCod FROM DBConsolidada..ProductoPersonaConsol pc JOIN DBFSD..FSDPersonaExonerados pe ON pc.cPersCod = pe.cPersCod and nPrdPersRelac = " & gCapRelPersTitular & " WHERE cCtaCod LIKE '________" & I & "%' ORDER BY Prod, cCtaCod"
        Else
            sql = "SELECT SUBSTRING(cCodCta,3,3) Prod, cCodCta " _
                & "FROM PersCuentaConsol pc JOIN DBFSD..FSDPersonaExonerados pe ON pc.cCodPers = pe.cPersCod and cRelaCta = 'TI' " _
                & "WHERE cCodCta LIKE '_____" & I & "%' " _
                & "  AND EXISTS ( SELECT Distinct cCodCta FROM DBFSD..CapSaldosDiarios ac WHERE ac.cCodCta = pc.cCodCta and LEFT(Convert(varchar(8),dFecha,112),6) = '" & Left(Format(ldIni, gsFormatoMovFecha), 6) & "' ) " _
                & "ORDER BY Prod, cCodCta"
        End If
        Set rsProd = oConConsol.CargaRecordSet(sql)
        sProd = ""
        Do While Not rsProd.EOF
            If sProd <> rsProd!Prod Then
                If sProd <> "" Then
                    xlsSht.Cells(posyIni - 1, posx) = "TOTALES"
                    xlsSht.Range(xlsSht.Cells(posyIni, 2), xlsSht.Cells(posyIni, posx)).ColumnWidth = 12
                    xlsSht.Range(xlsSht.Cells(posyIni, posx), xlsSht.Cells(posyIni, posx)).Formula = "=SUM(B" & posyIni & ":" & ExcelColumnaString(posx - 1) & posyIni & ")"
                    xlsSht.Range(xlsSht.Cells(posyIni, posx), xlsSht.Cells(posyIni, posx)).Copy
                    xlsSht.Range(xlsSht.Cells(posyIni, posx), xlsSht.Cells(posy - 1, posx)).PasteSpecial xlPasteFormulas
                    xlsSht.Range(xlsSht.Cells(posyIni - 1, posx), xlsSht.Cells(posy - 1, posx)).Font.Bold = True
                    ExcelCuadro xlsSht, posx, posyIni - 1, posx, posyIni - 1
                    ExcelCuadro xlsSht, posx, posyIni, posx, posy - 1
                End If
                posx = 2
                sProd = rsProd!Prod
            End If
            ldIni = CDate("01" & "/" & Month(dfecha) & "/" & Year(dfecha))
            
            If pnBitCentral = True Then
                sql = "SELECT  MC.cCtaCod, SUBSTRING(cMovNro, 7, 2) + '/' + SUBSTRING(cMovNro, 5, 2) + '/' + SUBSTRING(cMovNro, 1, 4) AS dFecTran, " & _
                      " SUM(MC.nSaldoContable) AS nSaldCnt FROM dbo.Mov M INNER JOIN " & _
                      " dbo.MovCap MC ON M.nMovNro = MC.nMovNro " & _
                      " WHERE (MC.cCtaCod ='" & rsProd!cCtaCod & "') AND (SUBSTRING(M.cMovNro, 1, 8) = '" & Format(ldIni, "YYYYMMdd") & "') AND (M.nMovNro IN " & _
                      " (SELECT MAX(M1.nMovNro) FROM MOV M1 INNER JOIN " & _
                      " MovCap MC1 ON M1.nMovNro = MC1.nMovNro " & _
                      " WHERE (MC.cCtaCod = MC1.cCtaCod) AND (SUBSTRING(M.cMovNro, 1, 8) = SUBSTRING(M1.cMovNro, 1, 8)) AND " & _
                      " M1.cOpeCod NOT IN ('260105', '260106') )) " & _
                      " GROUP BY MC.cCtaCod, SUBSTRING(cMovNro, 7, 2) + '/' + SUBSTRING(cMovNro, 5, 2) + '/' + SUBSTRING(cMovNro, 1, 4) "
                    'AND SUBSTRING(MC.cCtaCod,6,3) IN('" & Producto.gCapAhorros & "', '" & Producto.gCapPlazoFijo & "', '" & Producto.gCapCTS & "')
            Else
                sql = "SELECT TA.cCodCta, TA.dFecha dFecTran, TA.nSaldCnt from DBFSD..CapSaldosDiarios TA " _
                    & "WHERE cCodCta = '" & rsProd!cCodCta & "' AND " _
                    & "   TA.dFecha BETWEEN '" & Format$(ldIni, gsFormatoFecha) & "' and  '" & Format$(DateAdd("m", 1, ldIni) - 1, gsFormatoFecha) & "' " _
                    & "ORDER BY dFecTran"
            End If
 
            If pnBitCentral = True Then
                Set rsCta = oCon.CargaRecordSet(sql)
            Else
                Set rsCta = oConConsol.CargaRecordSet(sql)
            End If
            
            Select Case rsProd!Prod
                Case Producto.gCapAhorros
                    posy = 5
                Case Producto.gCapPlazoFijo
                    posy = 40
                Case Producto.gCapCTS
                    posy = 75
            End Select
            If pnBitCentral = True Then
                xlsSht.Cells(posy - 1, posx) = rsProd("cCtaCod")
            Else
                xlsSht.Cells(posy - 1, posx) = rsProd("cCodCta")
            End If
            ExcelCuadro xlsSht, posx, posy - 1, posx, posy - 1
            posyIni = posy
            lbPrimerDia = False
            Do While Not rsCta.EOF
                nDias = DateDiff("d", ldIni, rsCta("dFecTran"))
                If Day(rsCta("dFecTran")) = 1 Then lbPrimerDia = True
                If nDias > 0 Then
                    If Day(ldIni) = 1 And Not lbPrimerDia Then
                        If nSaldo > 0 Then xlsSht.Cells(posy, posx) = Format$(nSaldo, "#,##0.00")
                        posy = posy + 1
                    End If
                    For j = Day(ldIni) + 1 To nDias + Day(ldIni) - 1
                        If nSaldo > 0 Then xlsSht.Cells(posy, posx) = Format$(nSaldo, "#,##0.00")
                        posy = posy + 1
                    Next j
                End If
                If rsCta!nSaldCnt > 0 And Not IsNull(rsCta!nSaldCnt) Then xlsSht.Cells(posy, posx) = Format$(rsCta!nSaldCnt, "#,##0.00")
                posy = posy + 1
                ldIni = rsCta!DFECTRAN
                nSaldo = IIf(IsNull(rsCta!nSaldCnt), 0, rsCta!nSaldCnt)
                rsCta.MoveNext
            Loop
            ExcelCuadro xlsSht, posx, posyIni, posx, posy - 1
            rsCta.Close
            rsProd.MoveNext
            posx = posx + 1
        Loop
        If sProd <> "" Then
            xlsSht.Cells(posyIni - 1, posx) = "TOTALES"
            xlsSht.Range(xlsSht.Cells(posyIni, 2), xlsSht.Cells(posyIni, posx)).ColumnWidth = 12
            xlsSht.Range(xlsSht.Cells(posyIni, posx), xlsSht.Cells(posyIni, posx)).Formula = "=SUM(B" & posyIni & ":" & ExcelColumnaString(posx - 1) & posyIni & ")"
            xlsSht.Range(xlsSht.Cells(posyIni, posx), xlsSht.Cells(posyIni, posx)).Copy
            xlsSht.Range(xlsSht.Cells(posyIni, posx), xlsSht.Cells(posy - 1, posx)).PasteSpecial xlPasteFormulas
            xlsSht.Range(xlsSht.Cells(posyIni - 1, posx), xlsSht.Cells(posy - 1, posx)).Font.Bold = True
            ExcelCuadro xlsSht, posx, posyIni - 1, posx, posyIni - 1
            ExcelCuadro xlsSht, posx, posyIni, posx, posy - 1
        End If

        sArchivo = App.path & "\Spooler\LFSDFun" & Mid(gsCodAge, 4, 2) & "_" & Format$(dfecha, "yyyymmdd") & ".XLS"
        If I = 1 Then xlsBok.SaveAs sArchivo
        Set xlsSht = Nothing
    Next I
    rsProd.Close
    Set rsProd = Nothing
    Set rsCta = Nothing
    xlsBok.Save
    xlsBok.Close
    Set xlsBok = Nothing
    Set xlsApp = Nothing
    Screen.MousePointer = 0
    MsgBox "Proceso finalizado con éxito. Archivo generado : " & sArchivo, vbInformation, "Aviso"
    Exit Sub
ErrExcel:
    Screen.MousePointer = 0
    MsgBox Err.Description, vbExclamation, "Error"
    Set rsProd = Nothing
    Set rsCta = Nothing
    Set xlsBok = Nothing
    Set xlsApp = Nothing
End Sub

Private Function GetSaldoIniFSD(ByVal psCodCta As String, ByVal pdFecha As Date, ByVal sConn As DConecta) As Double
    Dim rsSald As ADODB.Recordset
    Dim sql As String
    
    sql = "SELECT TA.cCodCta, TA.dFecTran, ISNULL(TA.nSaldCnt,0) nSaldo from TransahoConsol TA " _
        & "WHERE cCodCta = '" & psCodCta & "' AND " _
        & "DATEDIFF(dd,TA.dFecTran,'" & Format$(DateAdd("d", -1, pdFecha), "mm/dd/yyyy") & "')= 0 " _
        & "AND nNumtran IN (SELECT MAX(nNumtran) FROM TransAhoConsol TA1 WHERE " _
        & "TA1.cCodCta = TA.cCodCta AND DateDiff(dd,TA1.dFectran,TA.dFectran) = 0 " _
        & "Group by ccodcta) And TA.cCodOpe NOT IN ('260105','260106') ORDER BY TA.dFecTran"
    Set rsSald = New ADODB.Recordset
    rsSald.CursorLocation = adUseClient
    Set rsSald = sConn.CargaRecordSet(sql)
    rsSald.ActiveConnection = Nothing
    If rsSald.EOF And rsSald.BOF Then
        GetSaldoIniFSD = 0
    Else
        GetSaldoIniFSD = rsSald!nSaldo
    End If
    rsSald.Close
    Set rsSald = Nothing
End Function

Private Function Devuelve_CadenaConsol() As String
Dim oConConsol As DConecta
Dim sconso As String
    Dim rsConso As ADODB.Recordset
  
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    Set rsConso = New ADODB.Recordset
    Set rsConso = oConConsol.CargaRecordSet("select nconssisvalor from constsistema where nconssiscod=" & gConstSistServCentralRiesgos)
    sconso = rsConso!nConsSisValor
    Set rsConso = Nothing
Devuelve_CadenaConsol = sconso
oConConsol.CierraConexion
End Function

Private Function CuentasVigentesAho(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlM As String
    Dim rsM As ADODB.Recordset
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlM = "Select Numero = Sum(nCtaVigAC), Monto = Sum(abs(nSaldoAC) + Abs(nChqCMAC) + Abs(nMonChqVal)), a=Sum(abs(nSaldoAC+nMonChqVal)) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Numero = Sum(nCtaVigAC), Monto = Sum(abs(nSaldoAC) + abs(nChqCMAC) + abs(nMonChqVal)) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsM = oConConsol.CargaRecordSet(sqlM)
     
    If rsM.EOF And rsM.BOF Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasVigentesAho = 0
        pnMonto = 0
    Else
        CuentasVigentesAho = IIf(IsNull(rsM!numero), 0, rsM!numero)
        pnMonto = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    
    oConConsol.CierraConexion
    
End Function

Private Function CuentasVigentesPF(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlPF As String
    Dim rsPF As ADODB.Recordset
    Dim sqlCTS As String
    Dim rsCTS As ADODB.Recordset
    Dim lnTotCantidad As Long
    Dim oConConsol As DConecta
    Dim sconso As String
    
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    
    sconso = Devuelve_CadenaConsol
    
     If pbConsol Then
        sqlCTS = "Select Numero = Sum(nNumVigCTS), Monto = Sum(nSaldoCTS+nMonChqVal) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
        sqlPF = "Select Numero = Sum(nNumVigPF), Monto = Sum(nSaldoPF+nMonChqVal) From " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlCTS = "Select Numero = Sum(nNumVigCTS),Monto = Sum(nSaldoCTS+nMonChqVal) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
        sqlPF = "Select Numero = Sum(nNumVigPF), Monto = Sum(nSaldoPF+nMonChqVal) From " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    
    Set rsPF = New ADODB.Recordset
    
    Set rsPF = oConConsol.CargaRecordSet(sqlPF)
    
    If rsPF.EOF And rsPF.BOF Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        lnTotCantidad = IIf(IsNull(rsPF!numero), 0, rsPF!numero)
        pnMonto = IIf(IsNull(rsPF!Monto), 0, Round(rsPF!Monto, 2))
    End If
    
    rsPF.Close
    Set rsPF = Nothing
    
    Set rsCTS = New ADODB.Recordset
    Set rsCTS = oConConsol.CargaRecordSet(sqlCTS)
    
    If rsCTS.EOF And rsCTS.BOF Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        CuentasVigentesPF = lnTotCantidad + IIf(IsNull(rsCTS!numero), 0, rsCTS!numero)
        pnMonto = pnMonto + IIf(IsNull(rsCTS!Monto), 0, Round(rsCTS!Monto, 2))
    End If
    
    rsCTS.Close
    Set rsCTS = Nothing

    oConConsol.CierraConexion
  
End Function

Private Function CuentasApeAho(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlM As String
    Dim rsM As New ADODB.Recordset
    
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlM = "Select Numero = Sum(nNumAperAC), Monto = Sum(nMonAperAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Numero = Sum(nNumAperAC), Monto = Sum(nMonAperAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsM = oConConsol.CargaRecordSet(sqlM)
    
    If RSVacio(rsM) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasApeAho = 0
        pnMonto = 0
    Else
        CuentasApeAho = IIf(IsNull(rsM!numero), 0, rsM!numero)
        pnMonto = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    oConConsol.CierraConexion
End Function

Private Function CuentasApePF(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlPF As String
    Dim rsPF As New ADODB.Recordset
    Dim sqlCTS As String
    Dim rsCTS As New ADODB.Recordset
    Dim lnTotCantidad As Long
    
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
     
    If pbConsol Then
        sqlCTS = "Select Numero = Sum(nNumAperCTS), Monto = Sum(nMonAperCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
        sqlPF = "Select Numero = Sum(nNumAperPF), Monto = Sum(nMonAperPF) from " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlCTS = "Select Numero = Sum(nNumAperCTS), Monto = Sum(nMonAperCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
        sqlPF = "Select Numero = Sum(nNumAperPF), Monto = Sum(nMonAperPF) from " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsPF = oConConsol.CargaRecordSet(sqlPF)
    
    If RSVacio(rsPF) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        lnTotCantidad = IIf(IsNull(rsPF!numero), 0, rsPF!numero)
        pnMonto = IIf(IsNull(rsPF!Monto), 0, Round(rsPF!Monto, 2))
    End If
    
    rsPF.Close
    Set rsPF = Nothing

    Set rsCTS = oConConsol.CargaRecordSet(sqlCTS)
     
    
    If RSVacio(rsCTS) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        CuentasApePF = lnTotCantidad + IIf(IsNull(rsCTS!numero), 0, rsCTS!numero)
        pnMonto = pnMonto + IIf(IsNull(rsCTS!Monto), 0, Round(rsCTS!Monto, 2))
    End If
    
    rsCTS.Close
    Set rsCTS = Nothing

    oConConsol.CierraConexion

End Function

Private Function CuentasAbonoAho(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlM As String
    Dim rsM As New ADODB.Recordset
    
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlM = "Select Numero = Sum(nNumDepAC), Monto = Sum(nMonDepAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Numero = Sum(nNumDepAC), Monto = Sum(nMonDepAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsM = oConConsol.CargaRecordSet(sqlM)
    
    If RSVacio(rsM) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasAbonoAho = 0
        pnMonto = 0
    Else
        CuentasAbonoAho = IIf(IsNull(rsM!numero), 0, rsM!numero)
        pnMonto = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    oConConsol.CierraConexion
End Function

Private Function CuentasAbonoPF(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlM As String
    Dim rsM As New ADODB.Recordset
    
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlM = "Select Numero = Sum(nNumDepCTS), Monto = Sum(nMonDepCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Numero = Sum(nNumDepCTS), Monto = Sum(nMonDepCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
       
    Set rsM = oConConsol.CargaRecordSet(sqlM)
    
    If RSVacio(rsM) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasAbonoPF = 0
        pnMonto = 0
    Else
        CuentasAbonoPF = IIf(IsNull(rsM!numero), 0, rsM!numero)
        pnMonto = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    
    oConConsol.CierraConexion
End Function

Private Function CuentasIntCapAho(psFecIni As String, psFecFin As String, pnMoneda As String, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Currency
    Dim sqlM As String
    Dim rsM As New ADODB.Recordset
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    
    If pbConsol Then
        sqlM = "Select Monto = Sum(nIntCapAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Monto = Sum(nIntCapAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
        
    Set rsM = oConConsol.CargaRecordSet(sqlM)
    
    If RSVacio(rsM) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasIntCapAho = 0
    Else
        CuentasIntCapAho = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    oConConsol.CierraConexion
End Function

Private Function CuentasIntCapPF(psFecIni As String, psFecFin As String, pnMoneda As String, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Currency
    Dim sqlPF As String
    Dim rsPF As New ADODB.Recordset
    Dim sqlCTS As String
    Dim rsCTS As New ADODB.Recordset
    Dim lnTotCantidad As Currency
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlCTS = "Select Monto = Sum(nIntCapCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
        sqlPF = "Select Monto = Sum(nIntCapPF) from " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlCTS = "Select Monto = Sum(nIntCapCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
        sqlPF = "Select Monto = Sum(nIntCapPF) from " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsPF = oConConsol.CargaRecordSet(sqlPF)
    
    If RSVacio(rsPF) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        lnTotCantidad = IIf(IsNull(rsPF!Monto), 0, Round(rsPF!Monto, 2))
    End If
    
    rsPF.Close
    Set rsPF = Nothing

    Set rsCTS = oConConsol.CargaRecordSet(sqlCTS)
    
    If RSVacio(rsCTS) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        CuentasIntCapPF = lnTotCantidad + IIf(IsNull(rsCTS!Monto), 0, Round(rsCTS!Monto, 2))
    End If
    
    rsCTS.Close
    Set rsCTS = Nothing

    oConConsol.CierraConexion
End Function

Private Function CuentasCanceladaAho(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlM As String
    Dim rsM As New ADODB.Recordset
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlM = "Select Numero = Sum(nNumCancAC + nNumCancInacAC), Monto = Sum(nMonCancAC + nMonCancInacAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Numero = Sum(nNumCancAC + nNumCancInacAC), Monto = Sum(nMonCancAC + nMonCancInacAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
        
    Set rsM = oConConsol.CargaRecordSet(sqlM)
    
    If RSVacio(rsM) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasCanceladaAho = 0
        pnMonto = 0
    Else
        CuentasCanceladaAho = IIf(IsNull(rsM!numero), 0, rsM!numero)
        pnMonto = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    oConConsol.CierraConexion
End Function

Private Function CuentasCanceladaPF(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlPF As String
    Dim rsPF As New ADODB.Recordset
    Dim sqlCTS As String
    Dim rsCTS As New ADODB.Recordset
    Dim lnTotCantidad As Long
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
     
     
    If pbConsol Then
        sqlCTS = "Select Numero = Sum(nNumCancCTS), Monto = Sum(nMonCancCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
        sqlPF = "Select Numero = Sum(nNumCancPF), Monto = Sum(nMonCancPF) from " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlCTS = "Select Numero = Sum(nNumCancCTS), Monto = Sum(nMonCancCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge ='" & psCodAge & "'"
        sqlPF = "Select Numero = Sum(nNumCancPF), Monto = Sum(nMonCancPF) from " & sconso & "EstadDiaPFConsol where dEstadPF Between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge ='" & psCodAge & "'"
    End If
        
    Set rsPF = oConConsol.CargaRecordSet(sqlPF)
    
    If RSVacio(rsPF) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        lnTotCantidad = IIf(IsNull(rsPF!numero), 0, rsPF!numero)
        pnMonto = IIf(IsNull(rsPF!Monto), 0, Round(rsPF!Monto, 2))
    End If
    
    rsPF.Close
    Set rsPF = Nothing

    Set rsCTS = oConConsol.CargaRecordSet(sqlCTS)
    
    If RSVacio(rsCTS) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        CuentasCanceladaPF = lnTotCantidad + IIf(IsNull(rsCTS!numero), 0, rsCTS!numero)
        pnMonto = pnMonto + IIf(IsNull(rsCTS!Monto), 0, Round(rsCTS!Monto, 2))
    End If
    
    rsCTS.Close
    Set rsCTS = Nothing

    oConConsol.CierraConexion
End Function

Private Function CuentasRetAho(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlM As String
    Dim rsM As New ADODB.Recordset
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlM = "Select Numero = Sum(nNumRetAC), Monto = Sum(nRetInacAC + nMonRetAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlM = "Select Numero = Sum(nNumRetAC), Monto = Sum(nRetInacAC + nMonRetAC) from " & sconso & "EstadDiaACConsol where destadac between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsM = oConConsol.CargaRecordSet(sqlM)
    
    If RSVacio(rsM) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        CuentasRetAho = 0
        pnMonto = 0
    Else
        CuentasRetAho = IIf(IsNull(rsM!numero), 0, rsM!numero)
        pnMonto = IIf(IsNull(rsM!Monto), 0, Round(rsM!Monto, 2))
    End If
    
    rsM.Close
    Set rsM = Nothing
    
    oConConsol.CierraConexion
    
End Function

Private Function CuentasRetPF(psFecIni As String, psFecFin As String, pnMoneda As String, pnMonto As Currency, Optional pbConsol As Boolean = False, Optional psCodAge As String = "") As Long
    Dim sqlCTS As String
    Dim rsCTS As New ADODB.Recordset
    Dim lnTotCantidad As Long
    Dim sconso As String
    Dim oConConsol As DConecta
    Set oConConsol = New DConecta
    oConConsol.AbreConexion
    sconso = Devuelve_CadenaConsol
    
    If pbConsol Then
        sqlCTS = "Select Numero = Sum(nNumRetCTS), Monto = Sum(nMonRetCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "'"
    Else
        sqlCTS = "Select Numero = Sum(nNumRetCTS), Monto = Sum(nMonRetCTS) from " & sconso & "EstadDiaCTS where destadcts between '" & psFecIni & "' and '" & psFecFin & "' and cMoneda = '" & pnMoneda & "' and cCodAge = '" & psCodAge & "'"
    End If
    
    Set rsCTS = oConConsol.CargaRecordSet(sqlCTS)
    
    If RSVacio(rsCTS) Then
        MsgBox "No existe información sobre el numero cuentas vigentes para este día.", vbInformation, "Aviso"
        lnTotCantidad = 0
    Else
        CuentasRetPF = IIf(IsNull(rsCTS!numero), 0, rsCTS!numero)
        pnMonto = IIf(IsNull(rsCTS!Monto), 0, Round(rsCTS!Monto, 2))
    End If
    
    rsCTS.Close
    Set rsCTS = Nothing
    oConConsol.CierraConexion
  
End Function

Public Sub ImprimeRep05SBS(ByVal pnMes As Integer, ByVal pnAnio As Integer)
Dim sFecha As String
Dim oCon As DConecta
Dim rs As ADODB.Recordset
Dim lsCadena As String
Dim lsTitRp1 As String
Dim lsTitRp2 As String
Dim lsNumPag As String
Dim lsMoneda As String
Dim I As Integer
Dim sCad As String * 25

Dim lsNOn As String
Dim lsNOff As String
     
Dim nNorCpaVta(0 To 1) As Currency
Dim nPromedio(0 To 1) As Currency
Dim nMayor(0 To 1) As Currency
Dim nMenor(0 To 1) As Currency

Dim oPrevio As clsPrevioFinan
 
sFecha = DateAdd("d", -1, "01/" & IIf(pnMes = 12, "01", IIf(pnMes < 9, "0" & Trim(Str(pnMes + 1)), Trim(Str(pnMes + 1)))) & "/" & Trim(Str(IIf(pnMes = 12, pnAnio + 1, pnAnio))))

Set oCon = New DConecta
oCon.AbreConexion
Set rs = New ADODB.Recordset
 
'Valores Normales
lsCadena = "SELECT nvalvent, nvalcomp FROM DBCOMUNES..TIPCAMBIO WHERE CONVERT(VARCHAR(8), DFECCAMB, 112)='" & Format(sFecha, "YYYYMMdd") & "'"

Set rs = oCon.CargaRecordSet(lsCadena)
If rs.BOF Then
Else
    nNorCpaVta(0) = rs!nValComp
    nNorCpaVta(1) = rs!nValVent
End If

rs.Close
Set rs = Nothing

'Promedio, Mayor y Menor de las Operaciones
lsCadena = " SELECT CCODOPE, AVG(nTipCambio) AS nPromedio, MAX(nTipCambio) AS nMayor, MIN(nTipCambio) AS nMenor  " & _
           " From COMPRAVENTA " & _
           " WHERE  CONVERT(VARCHAR(8), DFECTRAN, 112)='" & Format(sFecha, "YYYYMMdd") & "' " & _
           " AND ( CCODOPE = '230101' OR CCODOPE='230102') " & _
           " GROUP BY CCODOPE"
 
Set rs = oCon.CargaRecordSet(lsCadena)
If rs.BOF Then
Else
    Do While Not rs.EOF
        If rs!cCodOpe = "230101" Then
            nPromedio(0) = rs!nPromedio
            nMayor(0) = rs!nMayor
            nMenor(0) = rs!nMenor
        Else
            nPromedio(1) = rs!nPromedio
            nMayor(1) = rs!nMayor
            nMenor(1) = rs!nMenor
        End If
        rs.MoveNext
    Loop
End If

rs.Close
Set rs = Nothing

oCon.CierraConexion
Set oCon = Nothing

Set oPrevio = New clsPrevioFinan
 
'Imprime la cabecera del reporte
lsCadena = ""

lsNOn = Chr$(27) + Chr$(71)
lsNOff = Chr$(27) + Chr$(72)
    

lsCadena = lsNOn & "SUPERINTENDENCIA DE BANCA Y SEGUROS " & space(80) & " REPORTE NRO 05"
lsCadena = lsCadena & Chr(10) & "EMPRESA: " & gsNomCmac & space(10) & " CODIGO: " & gsCodCMAC
lsCadena = lsCadena & Chr(10) & "FECHA: " & sFecha
lsCadena = lsCadena & Chr(10) & Chr(10)
lsCadena = lsCadena & space(15) & " C O T I Z A C I O N   D E   O F E R T A   Y   D E M A N D A   D E   M O N E D A   E X T R A N J E R A   1/"
 
lsCadena = lsCadena & Chr(10) & "+---------------------------------+-------------------------+-----------------------------------------------------------------------------+ "
lsCadena = lsCadena & Chr(10) & "|       M  O  N  E  D  A  S       |      MONTO NEGOCIADO    |    T    I    P    O        D    E        C    A    M    B    I    O   2/    |"
lsCadena = lsCadena & Chr(10) & "|                                 |  E N  L A  M O N E D A  |     P R O M E D I O     |       M A X I M O       |       M I N I M O       |"
lsCadena = lsCadena & Chr(10) & "|                                 |   R E S P E C T I V A   |    P O N D E R A D O    |                         |                         |"
lsCadena = lsCadena & Chr(10) & "+---------------------------------+-------------------------+-------------------------+-------------------------+-------------------------+ " & lsNOff
lsCadena = lsCadena & Chr(10) & "+ DOLAR NORTEAMERICANO            |                         |                         |                         |                         | "
lsCadena = lsCadena & Chr(10) & "+                   C O M P R A   | " & ImpreFormat(nNorCpaVta(0), 20, 2) & " | " & ImpreFormat(nPromedio(0), 20, 2) & " | " & ImpreFormat(nMayor(0), 20, 2) & " | " & ImpreFormat(nMenor(0), 20, 2) & " | "
lsCadena = lsCadena & Chr(10) & "+                   V E N T A     | " & ImpreFormat(nNorCpaVta(1), 20, 2) & " | " & ImpreFormat(nPromedio(1), 20, 2) & " | " & ImpreFormat(nMayor(1), 20, 2) & " | " & ImpreFormat(nMenor(1), 20, 2) & " | "
lsCadena = lsCadena & Chr(10) & "+---------------------------------+-------------------------+-------------------------+-------------------------+-------------------------+ "
  
    For I = 1 To 10
        If I = 1 Then
            sCad = "EURO"
        ElseIf I = 2 Then
            sCad = "LIBRA ESTERLINA"
        ElseIf I = 3 Then
            sCad = "MARCO ALEMAN"
        ElseIf I = 4 Then
            sCad = "YEN JAPONES"
        ElseIf I = 5 Then
            sCad = "FRANCO SUIZO"
        ElseIf I = 6 Then
            sCad = "CHELIN AUSTRIACO"
        ElseIf I = 7 Then
            sCad = "FRANCO FRANCES"
        ElseIf I = 8 Then
            sCad = "CORONA SUECA"
        ElseIf I = 9 Then
            sCad = "FLORIN HOLANDES"
        'ElseIf i = 10 Then
        '    sCad = "DOLAR CANADIENSE"
        'ElseIf i = 11 Then
        '    scad = "FRANCO BELGA"
        'ElseIf i = 12 Then
        '    scad = "LIRA ITALIANA"
        'ElseIf i = 13 Then
        '   scad = "CORONA DANESA"
        'ElseIf i = 14 Then
        '    scad = "CORONA NORUEGA"
        ElseIf I = 10 Then
            sCad = "OTRAS MONEDAS 3/"
        End If
        lsCadena = lsCadena & Chr(10) & "+ " & sCad & "       |                         |                         |                         |                         | "
        lsCadena = lsCadena & Chr(10) & "+                   C O M P R A   | " & ImpreFormat(0, 20, 2) & " | " & ImpreFormat(0, 20, 2) & " | " & ImpreFormat(0, 20, 2) & " | " & ImpreFormat(0, 20, 2) & " | "
        lsCadena = lsCadena & Chr(10) & "+                   V E N T A     | " & ImpreFormat(0, 20, 2) & " | " & ImpreFormat(0, 20, 2) & " | " & ImpreFormat(0, 20, 2) & " | " & ImpreFormat(0, 20, 2) & " | "
        lsCadena = lsCadena & Chr(10) & "+---------------------------------+-------------------------+-------------------------+-------------------------+-------------------------+ "
    
    Next
    
    lsCadena = lsCadena & Chr(10) & "1/ No incluye operaciones con derivados"
    lsCadena = lsCadena & Chr(10) & "2/ Expresar a tres decimales"
    lsCadena = lsCadena & Chr(10) & "3/ Especificar cada moneda"
    
    lsCadena = lsCadena & Chr(10) & Chr(10) & Chr(10) & space(38) & "___________________                         __________________________"
    lsCadena = lsCadena & Chr(10) & space(40) & "GERENTE GENERAL                             FUNCIONARIO AUTORIZADO"
    
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "COTIZACION DE OFERTA Y DEMANDA DE MONEDA EXTRANJERA", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If


End Sub

Public Sub ImprimeRep05SBSXls(ByVal pnMes As Integer, ByVal pnAnio As Integer)
    Dim oConConsol As DConecta

    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
    Dim lsCadena As String
    On Error GoTo Err_
  
    Dim lbLibroOpen As Boolean
    Dim lsArchivo As String
    Dim lbHojaOpen As Boolean

    lsArchivo = "Reporte05_" & pnMes & pnAnio & "_" & Format(Time, "Short Time") & ".xls"
    lsArchivo = Replace(lsArchivo, ":", "_")
     
    lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)

    ExcelRep05Xls pnMes, pnAnio

    ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1
    
    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"
    
    CargaArchivo lsArchivo, App.path & "\Spooler"


Err_:
        Exit Sub

End Sub

Public Sub ExcelRep05Xls(ByVal pnMes As Integer, ByVal pnAnio As Integer)
Dim sFecha As String
Dim oCon As DConecta
Dim rs As ADODB.Recordset
Dim lsCadena As String
Dim lsTitRp1 As String
Dim lsTitRp2 As String
Dim lsNumPag As String
Dim lsMoneda As String
Dim I As Integer
Dim sCad As String * 25
Dim nFila As Integer

Dim lsNOn As String
Dim lsNOff As String
     
Dim nNorCpaVta(0 To 1) As Currency
Dim nNorCpaVtaSol(0 To 1) As Currency
Dim nPromedio(0 To 1) As Currency
Dim nMayor(0 To 1) As Currency
Dim nMenor(0 To 1) As Currency

Dim oPrevio As clsPrevioFinan
Dim lsHoja As String

sFecha = DateAdd("d", -1, "01/" & IIf(pnMes = 12, "01", IIf(pnMes < 9, "0" & Trim(Str(pnMes + 1)), Trim(Str(pnMes + 1)))) & "/" & Trim(Str(IIf(pnMes = 12, pnAnio + 1, pnAnio))))

Set oCon = New DConecta
oCon.AbreConexion
Set rs = New ADODB.Recordset
 
'Valores Normales
If gbBitCentral Then
   lsCadena = "SELECT nvalvent, nvalcomp FROM TIPOCAMBIO WHERE CONVERT(VARCHAR(8), DFECCAMB, 112)='" & Format(sFecha, "YYYYMMdd") & "'"
Else
   lsCadena = "SELECT nvalvent, nvalcomp FROM DBCOMUNES..TIPCAMBIO WHERE CONVERT(VARCHAR(8), DFECCAMB, 112)='" & Format(sFecha, "YYYYMMdd") & "'"
End If
Set rs = oCon.CargaRecordSet(lsCadena)
If rs.BOF Then
Else
    nNorCpaVta(0) = rs!nValComp
    nNorCpaVta(1) = rs!nValVent
    nNorCpaVtaSol(0) = rs!nValComp
    nNorCpaVtaSol(1) = rs!nValVent
End If

rs.Close
Set rs = Nothing

'Promedio, Mayor y Menor de las Operaciones
If gbBitCentral Then
   lsCadena = " Select case when vv.cOpeCod in (900022, 900025,400011, 400013) THEN 'C' "
   lsCadena = lsCadena & "      Else 'V' End cTipo, SUM(vv.nMovImporte) nMonto, SUM(Round(vv.nMovImporte * nMovTpoCambio,2))nMontoSol, "
   lsCadena = lsCadena & "      Round(SUM(vv.nMovImporte * nMovTpoCambio) / SUM(nMovImporte),4) nPromedio, Max(nMovTpoCambio) nMayor, Min(nMovTpoCambio) nMenor"
   lsCadena = lsCadena & " FROM ("
   lsCadena = lsCadena & " select m.copecod, mcv.nMovImporte, mtc.nMovTpoCambio"
   lsCadena = lsCadena & " from mov m join movcompraventa mcv on mcv.nmovnro = m.nmovnro"
   lsCadena = lsCadena & "    left join movtpocambio mtc on mtc.nmovnro = m.nmovnro"
   lsCadena = lsCadena & " where copecod like '90002%' and cmovnro like '" & Left(Format(sFecha, "YYYYMMdd"), 6) & "%'  and m.nmovestado = 10 and m.nmovflag = 0"
   lsCadena = lsCadena & " Union All"
'MIOL 20130401, SEGUN TIC1303200002 *******************************************
   lsCadena = lsCadena & " SELECT m.cOpeCod,me.nMovMonto nMovMEImporte,mtc.nMovTpoCambio"
   lsCadena = lsCadena & " FROM mov m"
   lsCadena = lsCadena & "      Join MovCont me On me.nmovnro = m.nmovnro"
   lsCadena = lsCadena & "      Join movtpocambio   mtc On mtc.nmovnro = m.nmovnro "
   lsCadena = lsCadena & " where m.cmovnro like '" & Left(Format(sFecha, "YYYYMMdd"), 6) & "%' and m.copecod like '4000%' and m.nmovflag = 0"
   lsCadena = lsCadena & " and m.nMovEstado = 10"
   
'   lsCadena = lsCadena & " select m.copecod, me.nMovMEImporte, mtc.nMovTpoCambio"
'   lsCadena = lsCadena & " from mov m join movcta mc on mc.nmovnro = m.nmovnro"
'   lsCadena = lsCadena & "      join movme me on me.nmovnro = mc.nmovnro and me.nmovitem = mc.nmovitem"
'   lsCadena = lsCadena & "      join movtpocambio mtc on mtc.nmovnro = m.nmovnro"
'   lsCadena = lsCadena & " where m.cmovnro like '" & Left(Format(sFecha, "YYYYMMdd"), 6) & "%' and m.copecod like '4000%' and m.nmovflag = 0"
'   lsCadena = lsCadena & " and me.nmovmeimporte > 0"
'END MIOL *********************************************************************
   lsCadena = lsCadena & " ) VV"
   lsCadena = lsCadena & " group by case when vv.cOpeCod in (900022, 900025,400011, 400013) THEN 'C'"
   lsCadena = lsCadena & "    Else 'V' End"
Else
lsCadena = " SELECT case when CCODOPE = '230101' THEN 'C' Else 'V' End cTipo, AVG(nTipCambio) AS nPromedio, MAX(nTipCambio) AS nMayor, MIN(nTipCambio) AS nMenor  " & _
           " From COMPRAVENTA " & _
           " WHERE  CONVERT(VARCHAR(8), DFECTRAN, 112)='" & Format(sFecha, "YYYYMMdd") & "' " & _
           " AND ( CCODOPE = '230101' OR CCODOPE='230102') " & _
           " GROUP BY case when CCODOPE = '230101' THEN 'C' Else 'V' End "
End If

    nNorCpaVta(0) = 0
    nNorCpaVta(1) = 0
    nNorCpaVtaSol(0) = 0
    nNorCpaVtaSol(1) = 0
    
Set rs = oCon.CargaRecordSet(lsCadena)
If Not rs.BOF Then
    Do While Not rs.EOF
        If rs!cTipo = "C" Then
            If gbBitCentral Then
               nNorCpaVta(0) = rs!nMonto
               nNorCpaVtaSol(0) = rs!nMontoSol
            End If
            nPromedio(0) = rs!nPromedio
            nMayor(0) = rs!nMayor
            nMenor(0) = rs!nMenor
        Else
            If gbBitCentral Then
               nNorCpaVta(1) = rs!nMonto
               nNorCpaVtaSol(1) = rs!nMontoSol
            End If
            nPromedio(1) = rs!nPromedio
            nMayor(1) = rs!nMayor
            nMenor(1) = rs!nMenor
        End If
        rs.MoveNext
    Loop
End If
RSClose rs
oCon.CierraConexion
Set oCon = Nothing

lsHoja = "REPORTE_05"

ExcelAddHoja lsHoja, xlLibro, xlHoja1
xlHoja1.PageSetup.CenterHorizontally = True
xlHoja1.PageSetup.Zoom = 90
xlHoja1.PageSetup.Orientation = xlPortrait
      

nFila = 1
xlHoja1.Cells(nFila, 1) = "SUPERINTENDENCIA DE BANCA Y SEGUROS "
xlHoja1.Cells(nFila, 6) = " REPORTE NRO 05"
nFila = nFila + 1
xlHoja1.Cells(nFila, 1) = "EMPRESA: " & gsNomCmac
xlHoja1.Cells(nFila, 6) = " CODIGO: " & gsCodCMAC
nFila = nFila + 1
xlHoja1.Cells(nFila, 1) = "FECHA: " & sFecha
nFila = nFila + 2
xlHoja1.Cells(nFila, 1) = "COTIZACION DE OFERTA Y DEMANDA DE MONEDA EXTRANJERA 1/"
 
nFila = nFila + 2
xlHoja1.Cells(nFila, 1) = "MONEDAS"
xlHoja1.Cells(nFila, 2) = "MONTO NEGOCIADO"
xlHoja1.Cells(nFila, 3) = "MONTO EN"
xlHoja1.Cells(nFila, 4) = "TIPO DE CAMBIO 2/"
nFila = nFila + 1
xlHoja1.Cells(nFila, 2) = "EN LA MONEDA"
'''xlHoja1.Cells(nFila, 3) = "NUEVOS SOLES" 'marg ers044-2016
xlHoja1.Cells(nFila, 3) = StrConv(gcPEN_PLURAL, vbUpperCase) 'marg ers044-2016
xlHoja1.Cells(nFila, 4) = "PROMEDIO"
xlHoja1.Cells(nFila, 5) = "MAXIMO"
xlHoja1.Cells(nFila, 6) = "MINIMO"
nFila = nFila + 1
xlHoja1.Cells(nFila, 2) = "RESPECTIVA"
xlHoja1.Cells(nFila, 4) = "PONDERADO"

xlHoja1.Range("A1:E1").MergeCells = True
xlHoja1.Range("A2:E2").MergeCells = True
xlHoja1.Range("A3:B3").MergeCells = True
xlHoja1.Range("A5:F5").MergeCells = True
xlHoja1.Range("D7:F7").MergeCells = True

xlHoja1.Range("A1:F9").Font.Bold = True
xlHoja1.Range("A1:E3").HorizontalAlignment = xlLeft
xlHoja1.Range("A5:F9").HorizontalAlignment = xlCenter

ExcelCuadro xlHoja1, 1, 7, 6, 9, True, False
ExcelCuadro xlHoja1, 4, 7, 6, 7, True, True


nFila = nFila + 1
xlHoja1.Cells(nFila, 1) = "DOLAR NORTEAMERICANO"
xlHoja1.Range("A" & nFila & ":A" & nFila).Font.Bold = True
nFila = nFila + 1
xlHoja1.Cells(nFila, 1) = "COMPRA"
xlHoja1.Range("A" & nFila & ":A" & nFila).HorizontalAlignment = xlRight
xlHoja1.Cells(nFila, 2) = nNorCpaVta(0)
xlHoja1.Cells(nFila, 3) = nNorCpaVtaSol(0)
xlHoja1.Cells(nFila, 4) = Format(nPromedio(0), "#,##0.000")
xlHoja1.Cells(nFila, 5) = Format(nMayor(0), "#,##0.000")
xlHoja1.Cells(nFila, 6) = Format(nMenor(0), "#,##0.000")
xlHoja1.Range("B" & nFila & ":F" & nFila).NumberFormat = "#,#0.000"
nFila = nFila + 1
xlHoja1.Cells(nFila, 1) = "VENTA"
xlHoja1.Range("A" & nFila & ":A" & nFila).HorizontalAlignment = xlRight
xlHoja1.Cells(nFila, 2) = Format(nNorCpaVta(1), "#,##0.000")
xlHoja1.Cells(nFila, 3) = Format(nNorCpaVtaSol(1), "#,##0.000")
xlHoja1.Cells(nFila, 4) = Format(nPromedio(1), "#,##0.000")
xlHoja1.Cells(nFila, 5) = Format(nMayor(1), "#,##0.000")
xlHoja1.Cells(nFila, 6) = Format(nMenor(1), "#,##0.000")
xlHoja1.Range("B" & nFila & ":F" & nFila).NumberFormat = "#,##0.000"

ExcelCuadro xlHoja1, 1, nFila - 2, 6, nFila, True

    For I = 1 To 10
        If I = 1 Then
            sCad = "EURO"
        ElseIf I = 2 Then
            sCad = "LIBRA ESTERLINA"
        ElseIf I = 3 Then
            sCad = "MARCO ALEMAN"
        ElseIf I = 4 Then
            sCad = "YEN JAPONES"
        ElseIf I = 5 Then
            sCad = "FRANCO SUIZO"
        ElseIf I = 6 Then
            sCad = "CHELIN AUSTRIACO"
        ElseIf I = 7 Then
            sCad = "FRANCO FRANCES"
        ElseIf I = 8 Then
            sCad = "CORONA SUECA"
        ElseIf I = 9 Then
            sCad = "FLORIN HOLANDES"
        'ElseIf i = 10 Then
        '    sCad = "DOLAR CANADIENSE"
        'ElseIf i = 11 Then
        '    scad = "FRANCO BELGA"
        'ElseIf i = 12 Then
        '    scad = "LIRA ITALIANA"
        'ElseIf i = 13 Then
        '   scad = "CORONA DANESA"
        'ElseIf i = 14 Then
        '    scad = "CORONA NORUEGA"
        ElseIf I = 10 Then
            sCad = "OTRAS MONEDAS 3/"
        End If
        
        nFila = nFila + 1
        xlHoja1.Cells(nFila, 1) = sCad
        xlHoja1.Range("A" & nFila & ":A" & nFila).Font.Bold = True
        nFila = nFila + 1
        xlHoja1.Cells(nFila, 1) = "COMPRA"
        xlHoja1.Range("A" & nFila & ":A" & nFila).HorizontalAlignment = xlRight
        xlHoja1.Cells(nFila, 2) = 0
        xlHoja1.Cells(nFila, 3) = 0
        xlHoja1.Cells(nFila, 4) = 0
        xlHoja1.Cells(nFila, 5) = 0
        xlHoja1.Cells(nFila, 6) = 0
        xlHoja1.Range("B" & nFila & ":F" & nFila).NumberFormat = "#,##0.000"
        nFila = nFila + 1
        xlHoja1.Cells(nFila, 1) = "VENTA"
        xlHoja1.Range("A" & nFila & ":A" & nFila).HorizontalAlignment = xlRight
        xlHoja1.Cells(nFila, 2) = 0
        xlHoja1.Cells(nFila, 3) = 0
        xlHoja1.Cells(nFila, 4) = 0
        xlHoja1.Cells(nFila, 5) = 0
        xlHoja1.Cells(nFila, 6) = 0
        xlHoja1.Range("B" & nFila & ":F" & nFila).NumberFormat = "#,##0.000"
        ExcelCuadro xlHoja1, 1, nFila - 2, 6, nFila, True
    Next
    
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "1/ No incluye operaciones con derivados"
    
    xlHoja1.Range("A" & nFila & ":B" & nFila).MergeCells = True
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "2/ Expresar a tres decimales"
    xlHoja1.Range("A" & nFila & ":B" & nFila).MergeCells = True
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "3/ Especificar cada moneda"
    xlHoja1.Range("A" & nFila & ":B" & nFila).MergeCells = True
      
    nFila = nFila + 6
    xlHoja1.Cells(nFila, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(nFila, 4) = "FUNCIONARIO AUTORIZADO"
    
    xlHoja1.Range("A" & nFila & ":E" & nFila).Font.Bold = True
    
    xlHoja1.Cells.Font.Name = "Arial"
    xlHoja1.Cells.Font.Size = 8
    xlHoja1.Cells.EntireColumn.AutoFit
    
    xlHoja1.Range("B1:B1").ColumnWidth = 21.29
       
End Sub
Public Sub Anexo6RFA(ByVal lsMes As String, ByVal lsAnio As String, ByVal lsMesLetras As String)
Dim oCon As DConecta
Dim sql As String
Dim rs As ADODB.Recordset
Dim vExcelObj As Excel.Application
Dim I As Long

Set oCon = New DConecta

sql = "         SELECT cpersnombre, cperscod, isnull(cNroDNI,isnull(cNroRUC,'')) as cNroDoc,  nNroCuota,  "
sql = sql + "       SUM(nCapRFA) AS nCapRFA, SUM(nIntDifRFA) AS nIntDifRFA, SUM(nIntComRFA) AS nIntComRFA,"
sql = sql + "       SUM(nIntMorRFA) AS nIntMorRFA, SUM(nComCofRFA) AS nComCofRFA, SUM(nOtrGasRFA) AS nOtrGasRFA,"
sql = sql + "       SUM(nCapRFC) AS nCapRFC, SUM(nIntDifRFC) AS nIntDifRFC, SUM(nIntComRFC) AS nIntComRFC, SUM(nIntMorRFC) AS nIntMorRFC, SUM(nOtrGasRFC) AS nOtrGasRFC,"
sql = sql + "       SUM(nCapDIF) as nCapDIF, SUM(nIntDifDIF) as nIntDifDIF, SUM(nIntComDIF) as nIntComDIF, SUM(nIntMorDIF) as nIntMorDIF, SUM(nOtrGasDIF) as nOtrGasDIF,"
sql = sql + "       SUM(nCapDIF + nIntDifDIF+ nIntComDIF+ nIntMorDIF + nCapRFA + nIntDifRFA+ nIntComRFA+ nIntMorRFA + nComCofRFA ) nMontoCob,"
sql = sql + "       SUM(nCapDIF + nIntDifDIF ) as nCapRecIFI, SUM(nIntComDIF+ nIntMorDIF) as nIntRecIFI,"
sql = sql + "       SUM(nCapRFA + nIntDifRFA) as nCapRecRFA,  SUM(nIntComRFA+ nIntMorRFA) as nIntRecRFA, SUM(nComCofRFA) AS nComCofRFA,"
sql = sql + "       SUM(nCapRFA + nIntDifRFA + nIntComRFA + nIntMorRFA + nComCofRFA) As nTransCof"
sql = sql + "   From "
sql = sql + "       (select p.cpersnombre, p.cperscod,  md.nPrdConceptoCod, c.cRfa, md.nNroCuota,"
sql = sql + "               cNroDNI     =  (select cPersIDnro from persid  where cPersIDTpo = 1  and cPersCod = p.cperscod) ,"
sql = sql + "               cNroRUC     =  (select cPersIDnro from persid  where cPersIDTpo = 2  and cPersCod = p.cperscod),"
sql = sql + "               nMonto      = (SELECT nMonto FROM MovCol MC WHERE MC.nMovNro = MD.nMovNro And MD.cCtaCod = MC.cCtaCod And MD.cOpeCod = MC.cOpeCod),"
sql = sql + "               nCapRFA     = CASE WHEN MD.nPrdConceptoCod = 1010 and c.cRFA='RFA' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntDifRFA  = CASE WHEN MD.nPrdConceptoCod = 1110 and c.cRFA='RFA' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntComRFA  = CASE WHEN MD.nPrdConceptoCod = 1107 and c.cRFA='RFA' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntMorRFA  = CASE WHEN MD.nPrdConceptoCod = 1108 and c.cRFA='RFA' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nComCofRFA  = CASE WHEN MD.nPrdConceptoCod = 124352 and c.cRFA='RFA' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nOtrGasRFA  = CASE WHEN MD.nPrdConceptoCod NOT IN (1110,1010,1107, 124352,1108) and c.cRFA='RFA' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nCapRFC     = CASE WHEN MD.nPrdConceptoCod = 1000 and c.cRFA='RFC' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntDifRFC  = CASE WHEN MD.nPrdConceptoCod = 1109 and c.cRFA='RFC' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntComRFC  = CASE WHEN MD.nPrdConceptoCod = 1001 and c.cRFA='RFC' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntMorRFC  = CASE WHEN MD.nPrdConceptoCod = 1101 and c.cRFA='RFC' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nOtrGasRFC  = CASE WHEN MD.nPrdConceptoCod NOT IN (1000,1001,1109,1101) and c.cRFA='RFC' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nCapDIF     = CASE WHEN MD.nPrdConceptoCod = 1000 and c.cRFA='DIF' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntDifDIF  = CASE WHEN MD.nPrdConceptoCod = 1109 and c.cRFA='DIF' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntComDIF  = CASE WHEN MD.nPrdConceptoCod = 1001 and c.cRFA='DIF' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nIntMorDIF  = CASE WHEN MD.nPrdConceptoCod = 1101 and c.cRFA='DIF' THEN MD.nMonto ELSE 0 END ,"
sql = sql + "               nOtrGasDIF  = CASE WHEN MD.nPrdConceptoCod NOT IN (1000,1001,1109,1101) and c.cRFA='DIF' THEN MD.nMonto ELSE 0 END"
sql = sql + "           from    mov m "
sql = sql + "                   join movcoldet md on md.nmovnro = m.nmovnro"
sql = sql + "                   join colocaccred c on c.cctacod = md.cCtaCod"
sql = sql + "                   join productopersona r on r.cCtaCod = c.cCtaCod and r.nPrdPersRelac=20"
sql = sql + "                   join persona p on p.cperscod = r.cPersCod"
sql = sql + "           where   c.cRfa in ('RFA','RFC','DIF') AND LEFT(M.CMOVNRO,6)= '" & lsAnio & lsMes & "' "
sql = sql + "                   AND m.nmovFlag = 0 and md.cOpecod like '100[234567]%') AS NMOVRFA"
sql = sql + "   group by cpersnombre, cperscod, cNroDNI, cNroRUC, nNroCuota"
sql = sql + "   order by cPersNombre, nNroCuota"

oCon.AbreConexion
Set rs = oCon.CargaRecordSet(sql)
oCon.CierraConexion
Set oCon = Nothing
Dim vNHC As String
Dim lsCeldaIni As String
Dim lsCeldaFin  As String

If Not rs.EOF And Not rs.BOF Then
    vNHC = App.path & "\spooler\REPORTE06_RFA" & lsMes & lsAnio & ".XLS"

    Set vExcelObj = New Excel.Application
    vExcelObj.DisplayAlerts = False
    
    vExcelObj.Workbooks.Add
    vExcelObj.Sheets("Hoja1").Select
    vExcelObj.Sheets("Hoja1").Name = "ANEXO6RFA"
    
    vExcelObj.Range("A1:IV65536").Font.Name = "Arial Narrow"
    vExcelObj.Range("A1:IV65536").Font.Size = 8
    vExcelObj.Range("A8:K8").Select
    vExcelObj.Selection.VerticalAlignment = xlHAlignCenter
    
    'vExcelObj.Columns("A").Select
    'vExcelObj.Selection.HorizontalAlignment = xlHAlignCenter
    'vExcelObj.Columns("B:H").Select
    'vExcelObj.Selection.HorizontalAlignment = xlHAlignCenter
    
    vExcelObj.Range("I2").Select
    vExcelObj.Range("I2").Font.Bold = True
    vExcelObj.Range("I2").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "ANEXO 6"
    
    vExcelObj.Range("D2").Select
    vExcelObj.Range("D2").Font.Bold = True
    vExcelObj.Range("D2").Font.Size = 12
    vExcelObj.Range("D2").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "PROGRAMA RFA"
    
    vExcelObj.Range("D4").Select
    vExcelObj.Range("D4").Font.Bold = True
    vExcelObj.Range("D4").Font.Size = 12
    vExcelObj.Range("D4").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "REPORTE DE COBRANZA"
    
    vExcelObj.Range("A6").Select
    vExcelObj.Range("A6").Font.Bold = True
    vExcelObj.Range("A6").Font.Size = 12
    vExcelObj.Range("A6").HorizontalAlignment = xlHAlignLeft
    vExcelObj.ActiveCell.value = "MES : " & lsMesLetras & " - " & lsAnio
    
    vExcelObj.Range("A7").Select
    vExcelObj.Range("A7").Font.Bold = True
    vExcelObj.Range("A7").Font.Size = 10
    vExcelObj.Range("A7").ColumnWidth = 40
    vExcelObj.Range("A7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "DEUDOR"
    vExcelObj.Range("A7:A8").Merge
    
    lsCeldaIni = "A7"
    
    vExcelObj.Range("B7").Select
    vExcelObj.Range("B7").Font.Bold = True
    vExcelObj.Range("B7").Font.Size = 10
    vExcelObj.Range("B7").ColumnWidth = 10
    vExcelObj.Range("B7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "RUC/DNI"
    vExcelObj.Range("B7:B8").Merge
    
    vExcelObj.Range("C7").Select
    vExcelObj.Range("C7").Font.Bold = True
    vExcelObj.Range("C7").ColumnWidth = 10
    vExcelObj.Range("C7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "NUMERO DE CUOTA"
    vExcelObj.Range("C7:C8").Merge
    
    vExcelObj.Range("D7").Select
    vExcelObj.Range("D7").Font.Bold = True
    vExcelObj.Range("D7").ColumnWidth = 10
    vExcelObj.Range("D7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "MONTO COBRADO"
    vExcelObj.Range("D7:D8").Merge
    
    vExcelObj.Range("E7").Select
    vExcelObj.Range("E7").Font.Bold = True
    vExcelObj.Range("E7").ColumnWidth = 10
    vExcelObj.Range("E7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "RECUPERACION IFI"
    
    vExcelObj.Range("G7").Select
    vExcelObj.Range("G7").Font.Bold = True
    vExcelObj.Range("G7").ColumnWidth = 10
    vExcelObj.Range("G7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "RECUPERACION RFA"
    
    vExcelObj.Range("E7:F7").Merge
    vExcelObj.Range("G7:H7").Merge
    
    vExcelObj.Range("E8").Select
    vExcelObj.Range("E8").Font.Bold = True
    vExcelObj.Range("E8").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "CAPITAL"
    
    vExcelObj.Range("F8").Select
    vExcelObj.Range("F8").Font.Bold = True
    vExcelObj.Range("F8").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "INTERES"
    
    vExcelObj.Range("G8").Select
    vExcelObj.Range("G8").Font.Bold = True
    vExcelObj.Range("G8").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "CAPITAL"
    
    vExcelObj.Range("H8").Select
    vExcelObj.Range("H8").Font.Bold = True
    vExcelObj.Range("H8").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "CAPITAL"
    
    vExcelObj.Range("I7").Select
    vExcelObj.Range("I7").Font.Bold = True
    vExcelObj.Range("I7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "COMISION COFIDE"
    vExcelObj.Range("I7:I8").Merge
    
    vExcelObj.Range("J7").Select
    vExcelObj.Range("J7").Font.Bold = True
    vExcelObj.Range("J7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "TOTAL TRANSFERIDO A COFIDE"
    
    vExcelObj.Range("J7:J8").Merge
    Dim vCel As String
    Dim vItem As Integer
    
    vItem = 8
    Do While Not rs.EOF
        vItem = vItem + 1
        vCel = "A" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = rs!cPersNombre
        
        vCel = "B" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = "'" & rs!cNroDoc
        
        vCel = "C" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nNroCuota, "0000")
        
        vCel = "D" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nMontoCob, "#0.00")
        
        vCel = "E" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nCapRecIFI, "#0.00")
        
        vCel = "F" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nIntRecIFI, "#0.00")
        
        vCel = "G" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nCapRecRFA, "#0.00")
        
        vCel = "H" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nIntRecRFA, "#0.00")
        
        vCel = "I" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nComCofRFA, "#0.00")
        
        vCel = "J" + Trim(Str(vItem))
        vExcelObj.Range(vCel).Select
        vExcelObj.ActiveCell.value = Format(rs!nTransCof, "#0.00")
        
        rs.MoveNext
    Loop
    rs.Close
    Set rs = Nothing
    
    vItem = vItem + 1
    
    vCel = "A" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Select
    vExcelObj.ActiveCell.value = "TOTAL :"
    
    vCel = "D" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Formula = "=SUM(D8:D" & Trim(Str(vItem - 1)) & ")"
    
    vCel = "E" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Formula = "=SUM(E8:E" & Trim(Str(vItem - 1)) & ")"
    
    vCel = "F" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Formula = "=SUM(F8:F" & Trim(Str(vItem - 1)) & ")"
    
    vCel = "G" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Formula = "=SUM(G8:G" & Trim(Str(vItem - 1)) & ")"
    
    vCel = "H" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Formula = "=SUM(H8:H" & Trim(Str(vItem - 1)) & ")"
    
    vCel = "I" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Formula = "=SUM(I8:I" & Trim(Str(vItem - 1)) & ")"
    
    vCel = "J" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    vExcelObj.Range(vCel).Formula = "=SUM(J8:J" & Trim(Str(vItem - 1)) & ")"
    
    lsCeldaFin = "J" + Trim(Str(vItem))
    vExcelObj.Range(vCel).Font.Bold = True
    
    
    vCel = lsCeldaIni & ":" & lsCeldaFin
    vExcelObj.Range(vCel).BorderAround xlContinuous, xlThin
    vExcelObj.Range(vCel).Borders(xlInsideVertical).LineStyle = xlContinuous
    vExcelObj.Range(vCel).Borders(xlInsideHorizontal).LineStyle = xlContinuous
    
    vExcelObj.Range("A1").Select
    vExcelObj.ActiveWorkbook.SaveAs (vNHC)
    vExcelObj.ActiveWorkbook.Close
    vExcelObj.Workbooks.Open (vNHC)
    vExcelObj.Visible = True
    
    Set vExcelObj = Nothing
    MsgBox "SE HA GENERADO CON ÉXITO EL ARCHIVO !!  ", vbInformation, " Mensaje del Sistema ..."
Else
    MsgBox "NO EXISTEN DATOS PARA MOSTRAR", vbInformation, "Aviso..."

End If



End Sub

Public Sub Anexo07(ByVal pnMoneda As Moneda, ByVal pdFecha As Date)
Dim sql As String
Dim rs As ADODB.Recordset
Dim oConecta As DConecta
Dim sservidorconsolidada As String
Dim vNHC As String
Dim lsCeldaIni As String
Dim lsCeldaFin  As String
Dim vExcelObj As Excel.Application

Set oCon = New DConecta

Set oConecta = New DConecta
oConecta.AbreConexion
Set rs = oConecta.CargaRecordSet("select nconssisvalor from constsistema where nconssiscod=" & gConstSistServCentralRiesgos)
If rs.BOF Then
Else
    sservidorconsolidada = rs!nConsSisValor
End If
Set rs = Nothing
   
oConecta.CierraConexion
Set oConecta = Nothing
   
Set oCon = New DConecta
oCon.AbreConexion 'Remota gsCodAge, True, False, "03"

sql = "         SELECT  R.cOpeCod, R.nNroCol, R.cDescCol,  isnull(DATCONT.nSaldoCont,0) as nSaldoCont, "
sql = sql + "           ISNULL(AHO.NSALDOTOT,0) AS NSALDOTOT,"
sql = sql + "           ISNULL(NRANGO1_7,0) AS NRANGO1_7,"
sql = sql + "           ISNULL(NRANGO8_15,0) AS NRANGO8_15,"
sql = sql + "           ISNULL(NRANGO16_1M,0) AS NRANGO16_1M,"
sql = sql + "           ISNULL(NRANGO2M,0) AS NRANGO2M,"
sql = sql + "           ISNULL(NRANGO3M,0) AS NRANGO3M,"
sql = sql + "           ISNULL(NRANGO4_6M,0) AS NRANGO4_6M,"
sql = sql + "           ISNULL(NRANGO7M_1A,0) AS NRANGO7M_1A,"
sql = sql + "           ISNULL(NRANGO_2A,0) AS NRANGO_2A,"
sql = sql + "           ISNULL(NRANGO_3A,0) AS NRANGO_3A,"
sql = sql + "           ISNULL(NRANGO_4A,0) AS NRANGO_4A,"
sql = sql + "           ISNULL(NRANGO_5A,0) AS NRANGO_5A,"
sql = sql + "           ISNULL(NRANGO6A_10A,0) AS NRANGO6A_10A,"
sql = sql + "           ISNULL(NRANGO11A_20A,0) AS NRANGO11A_20A,"
sql = sql + "           ISNULL(NRANGOMAY_20A,0) AS NRANGOMAY_20A,"
sql = sql + "           0 AS NNORECUP"
sql = sql + "   FROM    dbCmacica..REPCOLUMNA R"
sql = sql + "           Left Join"
sql = sql + "               (SELECT NTIPO, NMONEDA,"
sql = sql + "                       SUM(NSALDO) AS NSALDOTOT,"
sql = sql + "                       SUM(CASE WHEN NPRODUCTO ='232' THEN nSaldo*0.25 ELSE CASE WHEN NPLAZO BETWEEN 1 AND 7 AND NPRODUCTO <>'232' THEN nSaldo ELSE 0 END END) NRANGO1_7,"
sql = sql + "                       SUM(CASE WHEN NPRODUCTO ='232' THEN nSaldo*0.25 ELSE CASE WHEN NPLAZO BETWEEN 8 AND 15 AND NPRODUCTO <>'232'  THEN nSaldo ELSE 0 END END) NRANGO8_15,"
sql = sql + "                       SUM(CASE WHEN NPRODUCTO ='232'  THEN nSaldo*0.25 ELSE CASE WHEN NPLAZO BETWEEN 16 AND 30 AND NPRODUCTO <>'232' THEN nSaldo ELSE 0 END END) NRANGO16_1M,"
sql = sql + "                       SUM(CASE WHEN NPRODUCTO ='232'  THEN nSaldo*0.25 ELSE CASE WHEN NPLAZO BETWEEN 31 AND 60 AND NPRODUCTO <>'232' THEN nSaldo ELSE 0 END END) NRANGO2M,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 61 AND 90 THEN nSaldo ELSE 0 END) NRANGO3M,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 91 AND 270 THEN nSaldo ELSE 0 END) NRANGO4_6M,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 271 AND 360 THEN nSaldo ELSE 0 END) NRANGO7M_1A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 361 AND 720 THEN nSaldo ELSE 0 END) NRANGO_2A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 721 AND 1080 THEN nSaldo ELSE 0 END) NRANGO_3A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 1081 AND 1440 THEN nSaldo ELSE 0 END) NRANGO_4A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 1441 AND 1800 THEN nSaldo ELSE 0 END) NRANGO_5A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 1801 AND 3260 THEN nSaldo ELSE 0 END) NRANGO6A_10A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO BETWEEN 3261 AND 10440 THEN nSaldo ELSE 0 END) NRANGO11A_20A,"
sql = sql + "                       SUM(CASE WHEN NPLAZO >10440 THEN nSaldo ELSE 0 END) NRANGOMAY_20A "
sql = sql + "                   From"
sql = sql + "                   (   select  14 AS NTIPO, substring(cctacod,6,3) as nProducto,substring(cctacod,9,1) as nMoneda, nSaldCntAC as nSaldo,"
sql = sql + "                               0 AS NPLAZO"
sql = sql + "                       from    DBConsolidada..AhorroCConsol A"
sql = sql + "                       where   nPersoneria not in (4,5,7,8)"
sql = sql + "                               AND NOT EXISTS (SELECT  PC.CCTACOD"
sql = sql + "                                               FROM    ProductoBloqueosConsol PC"
sql = sql + "                                               WHERE   PC.CCTACOD = A.CCTACOD AND"
sql = sql + "                                                       A.nEstCtaAC IN (1100,1200) AND cMovNroDbl IS NULL"
sql = sql + "                                                       AND nBlqMotivo = 3)"
sql = sql + "                       Union"
sql = sql + "                       Select  15 AS NTIPO,Substring(cctacod,6,3) as nProducto, Substring(cctacod,9,1) as nMoneda, nSaldCntPF as nSaldo,"
sql = sql + "                               NPLAZO"
sql = sql + "                       From    dbo.PlazofijoConsol A"
sql = sql + "                       where   nPersoneria not in (4,5,7,8)"
sql = sql + "                               AND NOT EXISTS (SELECT  PC.CCTACOD"
sql = sql + "                                               FROM    ProductoBloqueosConsol PC"
sql = sql + "                                               WHERE   PC.CCTACOD = A.CCTACOD AND"
sql = sql + "                               A.nEstCtaPF IN (1100,1200) AND cMovNroDbl IS NULL"
sql = sql + "                               AND nBlqMotivo = 3)"
sql = sql + "                       Union"
sql = sql + "                       Select  15 AS NTIPO,Substring(cctacod,6,3) as nProducto,Substring(cctacod,9,1) as nMoneda, nSaldCntCTS as nSaldo,"
sql = sql + "                               721 as NPLAZO"
sql = sql + "                       From    dbo.DBConsolidada..CTSConsol A"
sql = sql + "                       Where   nPersoneria = 1"
sql = sql + "                               AND NOT EXISTS (SELECT  PC.CCTACOD"
sql = sql + "                                               FROM    ProductoBloqueosConsol PC"
sql = sql + "                                               WHERE   PC.CCTACOD = A.CCTACOD AND"
sql = sql + "                                                       A.nEstCtaCTS IN (1100,1200) AND cMovNroDbl IS NULL"
sql = sql + "                                                       AND nBlqMotivo = 3)"
sql = sql + "                       Union"
sql = sql + "                       select  17 AS NTIPO, substring(cctacod,6,3) as nProducto,substring(cctacod,9,1) as nMoneda, nSaldCntAC as nSaldo,"
sql = sql + "                               0 AS NPLAZO"
sql = sql + "                       from    DBConsolidada..AhorroCConsol A"
sql = sql + "                       where   nPersoneria in (4,5,7,8)"
sql = sql + "                               AND NOT EXISTS (SELECT  PC.CCTACOD"
sql = sql + "                                               FROM    ProductoBloqueosConsol PC"
sql = sql + "                                               WHERE   PC.CCTACOD = A.CCTACOD AND"
sql = sql + "                                                       A.nEstCtaAC IN (1100,1200) AND cMovNroDbl IS NULL"
sql = sql + "                                                       AND nBlqMotivo = 3)"
sql = sql + "                       Union"
sql = sql + "                       Select  17 AS NTIPO,Substring(cctacod,6,3) as nProducto, Substring(cctacod,9,1) as nMoneda, nSaldCntPF as nSaldo,"
sql = sql + "                               NPLAZO"
sql = sql + "                               From    dbo.PlazofijoConsol A"
sql = sql + "                               where   nPersoneria in (4,5,7,8)"
sql = sql + "                                       AND NOT EXISTS (SELECT  PC.CCTACOD"
sql = sql + "                                                       FROM    ProductoBloqueosConsol PC"
sql = sql + "                                                       WHERE   PC.CCTACOD = A.CCTACOD AND"
sql = sql + "                                                               A.nEstCtaPF IN (1100,1200) AND cMovNroDbl IS NULL"
sql = sql + "                                                               AND nBlqMotivo = 3)"
sql = sql + "                               ) AS CTAS"
sql = sql + "                       WHERE NMONEDA ='" & pnMoneda & "'"
sql = sql + "                       GROUP BY NTIPO, NMONEDA) AS AHO ON AHO.NTIPO = R.nNroCol"
sql = sql + "             Left Join"
sql = sql + "              (Select  RC.cOpeCod,RC.nNroCol,"
sql = sql + "                       sum(case when SUBSTRING(CS.cCtaContCod,3,1) = '1' then nCtaSaldoImporte else nCtaSaldoImporteME end) as nSaldoCont"
sql = sql + "               From    dbCmacica..CtaSaldo CS"
sql = sql + "                       JOIN dbCmacica..RepColumnaCta RC ON RC.cCtaContCod = SUBSTRING(CS.cCtaContCod,1,len(RC.cCtaContCod))"
sql = sql + "               Where   dCtaSaldoFecha = (  Select  Max(dCtasaldoFecha)"
sql = sql + "                                           From    dbCmacica..CtaSaldo cs1"
sql = sql + "                                           where   cs1.cCtaContCod = cs.cCtacontCod and cs1.dCtaSaldoFecha <= '" & Format(pdFecha, "mm/dd/yyyy") & "')"
sql = sql + "                                                   and SUBSTRING(CS.cCtaContCod,3,1) ='" & pnMoneda & "'"
sql = sql + "              GROUP BY RC.cOpeCod,RC.nNroCol) AS DATCONT ON DATCONT.cOpeCod = R.cOpeCod  and DATCONT.nNroCol = R.nNroCol"
sql = sql + "              Where R.cOpeCod = 770030"
sql = sql + "              ORDER BY R.nNroCol"
   
Set rs = oCon.CargaRecordSet(sql)
oCon.CierraConexion
Set oCon = Nothing

If Not rs.EOF And Not rs.BOF Then
    vNHC = App.path & "\spooler\ANEXO_07_" & Format(pdFecha, "yyyymmdd") & IIf(pnMoneda = 1, "MN", "ME") & ".XLS"

    Set vExcelObj = New Excel.Application
    vExcelObj.DisplayAlerts = False
    
    vExcelObj.Workbooks.Add
    vExcelObj.Sheets("Hoja1").Select
    vExcelObj.Sheets("Hoja1").Name = "ANEXO7" & IIf(pnMoneda = "1", "MN", "ME")
    
    vExcelObj.Range("A1:IV65536").Font.Name = "Arial Narrow"
    vExcelObj.Range("A1:IV65536").Font.Size = 8
    vExcelObj.Range("A10:Q12").Select
    vExcelObj.Selection.VerticalAlignment = xlHAlignCenter

    vExcelObj.Range("B2").Select
    vExcelObj.Range("B2").Font.Bold = True
    vExcelObj.Range("B2").Font.Size = 12
    vExcelObj.Range("B2").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "SUPERINTENDENCIA DE BANCA Y SEGUROS"

    vExcelObj.Range("B4").Select
    vExcelObj.Range("B4").Font.Bold = True
    vExcelObj.Range("B4").Font.Size = 12
    vExcelObj.Range("B4").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "EMPRESA :" & gsNomCmac
    
    vExcelObj.Range("G4").Select
    vExcelObj.Range("G4").Font.Bold = True
    vExcelObj.Range("G4").Font.Size = 12
    vExcelObj.Range("G4").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "ANEXO N° 07"
    
    vExcelObj.Range("G6").Select
    vExcelObj.Range("G6").Font.Bold = True
    vExcelObj.Range("G6").Font.Size = 12
    vExcelObj.Range("G6").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "A. MEDICION DEL RIESGO DE TASA DE INTERES EN " & IIf(pnMoneda = 1, "MONEDA NACIONAL", "MONEDA EXTRANJERA")
    
    vExcelObj.Range("G7").Select
    vExcelObj.Range("G7").Font.Bold = True
    vExcelObj.Range("G7").Font.Size = 12
    vExcelObj.Range("G7").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCell.value = "AL " & Format(pdFecha, "dd/mm/yyyy")
    
    vExcelObj.Range("G8").Select
    vExcelObj.Range("G8").Font.Bold = True
    vExcelObj.Range("G8").Font.Size = 12
    vExcelObj.Range("G8").HorizontalAlignment = xlHAlignCenter
    '''vExcelObj.ActiveCell.value = "(EXPRESADO EN MILES DE " & IIf(pnMoneda = 1, "NUEVOS SOLES", "DOLARES AMERICANOS") & ")" 'marg ers044-2016
    vExcelObj.ActiveCell.value = "(EXPRESADO EN MILES DE " & IIf(pnMoneda = 1, StrConv(gcPEN_PLURAL, vbUpperCase), "DOLARES AMERICANOS") & ")" 'marg ers044-2016
    
    vExcelObj.Range("A10").Select
    vExcelObj.Range("A10").Font.Bold = True
    vExcelObj.Range("A10").HorizontalAlignment = xlHAlignCenter
    '''vExcelObj.ActiveCell.value = "MONEDA :" & IIf(pnMoneda = 1, "NUEVOS SOLES", "EXTRANJERA") 'marg ers044-2016
    vExcelObj.ActiveCell.value = "MONEDA :" & IIf(pnMoneda = 1, StrConv(gcPEN_PLURAL, vbProperCase), "EXTRANJERA") 'marg ers044-2016
    
    vExcelObj.Range("A12").Select
    vExcelObj.Range("A12").Font.Bold = True
    vExcelObj.Range("A12").HorizontalAlignment = xlHAlignCenter
    vExcelObj.ActiveCel2.value = "DESCRIPCION"
    
    vExcelObj.Range("B10").Select
    vExcelObj.Range("B10").Font.Bold = True
    vExcelObj.Range("B10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "1"
    
    vExcelObj.Range("C10").Select
    vExcelObj.Range("C10").Font.Bold = True
    vExcelObj.Range("C10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "2"
    
    vExcelObj.Range("D10").Select
    vExcelObj.Range("D10").Font.Bold = True
    vExcelObj.Range("D10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "3"
    
    vExcelObj.Range("E10").Select
    vExcelObj.Range("E10").Font.Bold = True
    vExcelObj.Range("E10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "4"
    
    vExcelObj.Range("F10").Select
    vExcelObj.Range("F10").Font.Bold = True
    vExcelObj.Range("F10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "5"
    
    vExcelObj.Range("G10").Select
    vExcelObj.Range("G10").Font.Bold = True
    vExcelObj.Range("G10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "6"
    
    vExcelObj.Range("H10").Select
    vExcelObj.Range("H10").Font.Bold = True
    vExcelObj.Range("H10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "7"
    
    vExcelObj.Range("I10").Select
    vExcelObj.Range("I10").Font.Bold = True
    vExcelObj.Range("I10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "8"
    
    
    vExcelObj.Range("J10").Select
    vExcelObj.Range("J10").Font.Bold = True
    vExcelObj.Range("J10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "9"
    
    vExcelObj.Range("K10").Select
    vExcelObj.Range("K10").Font.Bold = True
    vExcelObj.Range("K10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "10"
    
    vExcelObj.Range("L10").Select
    vExcelObj.Range("L10").Font.Bold = True
    vExcelObj.Range("L10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "11"
    
    vExcelObj.Range("M10").Select
    vExcelObj.Range("M10").Font.Bold = True
    vExcelObj.Range("M10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "12"
    
    vExcelObj.Range("N10").Select
    vExcelObj.Range("N10").Font.Bold = True
    vExcelObj.Range("N10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "13"
    
    vExcelObj.Range("O10").Select
    vExcelObj.Range("O10").Font.Bold = True
    vExcelObj.Range("O10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "14"
    
    vExcelObj.Range("P10").Select
    vExcelObj.Range("P10").Font.Bold = True
    vExcelObj.Range("P10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = ""
    
    vExcelObj.Range("Q10").Select
    vExcelObj.Range("Q10").Font.Bold = True
    vExcelObj.Range("Q10").HorizontalAlignment = xlHAlignRight
    vExcelObj.ActiveCell.value = "TOTAL"
    
    vExcelObj.Range("Q10:Q12").Merge
    
    
    Do While Not rs.EOF
            
        rs.MoveNext
    Loop
End If
rs.Close
Set rs = Nothing


End Sub


Public Function ImprimeAnx13XLS(ByVal sTitulo As String, ByVal ntxtTipCamFij1 As Double, pnbit_central As Boolean, pdFecha As Date)
    Dim oConConsol As DConecta

    Dim oPrevio As clsPrevioFinan
    Set oPrevio = New clsPrevioFinan
    Dim lsCadena As String
    On Error GoTo Err_
  
'    Dim lbLibroOpen As Boolean
'
'    Dim lbHojaOpen As Boolean
    '    Dim lsArchivo As String

  '  lsArchivo = "Anexo13_" & Format(pdFecha, "YYYYMMdd") & "_" & Format(Time, "Short Time") & ".xls"
   ' lsArchivo = Replace(lsArchivo, ":", "_")
    
    
 '   lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)

    If gsOpeCod = gContAnx13DepsSEscMonto_Nuevo Then
    
        GetDepositosEscalaMontosAnx13Xls_Nuevo ntxtTipCamFij1, pnbit_central, pdFecha
    Else
    
        GetDepositosEscalaMontosAnx13Xls ntxtTipCamFij1, pnbit_central, pdFecha
    End If


'    ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1
'
'    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"
'
'    Call CargaArchivo(lsArchivo, App.path & "\Spooler")

Err_:
        Exit Function

End Function


Private Function GetDepositosEscalaMontosAnx13Xls_Nuevo(ByVal nTCF As Double, ByVal pnBittCentral As Boolean, pdFecha As Date) As String

Dim lsHoja As String
Dim nTemp As Integer
Dim nFila As Integer

Dim dbAux As ADODB.Connection
Dim rsCta As ADODB.Recordset
 
Dim nFSD As Double
Dim sEscala(1 To 50) As String * 50
Dim sProd(1 To 4) As String * 50
Dim I As Integer, P As Integer, j As Integer
Dim nIni As Double, nFin As Double
Dim sRan As String, sTipo As String
Dim nNum01 As Long, nNum02 As Long, nNum03 As Long
Dim nSald01 As Double, nSald02 As Double, nSald03 As Double
Dim lsArchivo As String
Dim lbLibroOpen As Boolean
Dim lbHojaOpen As Boolean

 
Dim dfecha As Date

Dim VSQL As String
Dim oConConsol As DConecta

'    Dim fs              As Scripting.FileSystemObject
'    Dim xlAplicacion    As Excel.Application
'    Dim xlLibro         As Excel.Workbook
'    Dim xlHoja1         As Excel.Worksheet
'    Dim lbExisteHoja    As Boolean
'    Dim liLineas        As Integer
'   ' Dim I               As Integer
'    Dim glsArchivo      As String
'    Dim lsNomHoja       As String

 '-------
'    glsArchivo = "Anexo13Nuevo" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
'    Set fs = New Scripting.FileSystemObject
'
'    Set xlAplicacion = New Excel.Application
'    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
'        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
'    Else
'        Set xlLibro = xlAplicacion.Workbooks.Add
'    End If
'    Set xlHoja1 = xlLibro.Worksheets.Add


    lsArchivo = "Anexo13Nuevo_" & Format(pdFecha, "YYYYMMdd") & "_" & Format(Time, "Short Time") & ".xls"
    lsArchivo = Replace(lsArchivo, ":", "_")


'------------------------------------------------------------------------


sEscala(1) = "Hasta el 10% del FSD (*)": sEscala(2) = "Más del 10% al 25% del FSD"
sEscala(3) = "Más del 25% al 50% del FSD": sEscala(4) = "Más del 50% al 100% del FSD"
sEscala(5) = "Más de 1 vez a 2 Veces del FSD": sEscala(6) = "Más de 2 veces a 4 Veces del FSD"
sEscala(7) = "Más de 4 veces a 6 Veces del FSD": sEscala(8) = "Más de 6 veces a 8 Veces del FSD"
sEscala(9) = "Más de 8 veces a 10 Veces del FSD": sEscala(10) = "Más de 10 veces a 15 Veces del FSD"
sEscala(11) = "Más de 15 veces a 20 Veces del FSD": sEscala(12) = "Más de 20 veces a 50 Veces del FSD"
sEscala(13) = "Más de 50 veces a 100 Veces del FSD": sEscala(14) = "Más de 100 Veces del FSD"

sProd(1) = "Sub Total AHORROS": sProd(2) = "Sub Total PLAZO"
sProd(3) = "Sub Total CTS": sProd(4) = "T O T A L "
 
Dim oCon1 As New DConecta
Dim rsTemp1 As New ADODB.Recordset
Dim bFSD As Long

 oCon1.AbreConexion
    Set rsTemp1 = oCon1.CargaRecordSet("select nconssisvalor from constsistema where nconssiscod=202")
    bFSD = rsTemp1!nConsSisValor
    Set rsTemp1 = Nothing
oCon1.CierraConexion
 
     
    Dim oConAdd As DConecta
    Set oConAdd = New DConecta
    
    Dim oGen As DGeneral
    Set oGen = New DGeneral
    Set oConConsol = New DConecta
    
    nFSD = oGen.GetParametro(2000, 2019)      'Obtiene el Monto del FSD de la tabla de parámetros
    dfecha = pdFecha
    ' oConConsol.AbreConexionRemota  "07", , , "03"
    oConConsol.AbreConexion
 
    lbLibroOpen = ExcelBegin(App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, False)
    lsHoja = "ANEXO_13"
    
    ExcelAddHoja lsHoja, xlLibro, xlHoja1
    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 52
    xlHoja1.PageSetup.Orientation = xlLandscape
          
    xlHoja1.Cells(1, 10) = "ANEXO 13"
    
    xlHoja1.Cells(3, 1) = "EMPRESA : " & gsNomCmac
    
    xlHoja1.Cells(3, 9) = "CODIGO: " & gsCodCMAC
     
    xlHoja1.Cells(5, 1) = "DEPOSITOS SEGUN ESCALA DE MONTOS"
    xlHoja1.Cells(6, 1) = "AL: " & UCase(ArmaFecha(dfecha))
    '''xlHoja1.Cells(7, 1) = "(En Nuevos Soles)" 'MARG ERS044-2016
    xlHoja1.Cells(7, 1) = "(En " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'MARG ERS044-2016
 
    xlHoja1.Cells(9, 6) = "Monto FSD"
    xlHoja1.Cells(9, 7) = nFSD
    
    xlHoja1.Cells(9, 9) = "T.C. Fijo"
    xlHoja1.Cells(9, 10) = nTCF
    
    
    xlHoja1.Range("G9:G9").NumberFormat = "###,###,##0.00##"
    xlHoja1.Range("J9:J9").NumberFormat = "###,###,##0.00##"
    
    xlHoja1.Cells(11, 1) = "Codigo"
    xlHoja1.Cells(11, 2) = "Escala"
    xlHoja1.Cells(11, 3) = "Personas"
    xlHoja1.Cells(11, 5) = "Personas Juridicas"
    xlHoja1.Cells(11, 9) = "Totales"
    
    xlHoja1.Cells(12, 1) = "Manual de"
    '''xlHoja1.Cells(12, 2) = "(En Nuevos Soles)" 'MARG ERS044-2016
    xlHoja1.Cells(12, 2) = "(En " & StrConv(gcPEN_PLURAL, vbProperCase) & ")" 'MARG ERS044-2016
    xlHoja1.Cells(12, 3) = "Naturales"
    xlHoja1.Cells(12, 5) = "Sin Fines de Lucro"
    xlHoja1.Cells(12, 7) = "Con Fines de Lucro"
    
    xlHoja1.Cells(13, 1) = "Contabilidad"
    xlHoja1.Cells(13, 3) = "Numero"
    xlHoja1.Cells(13, 4) = "Monto"
    xlHoja1.Cells(13, 5) = "Numero"
    xlHoja1.Cells(13, 6) = "Monto"
    xlHoja1.Cells(13, 7) = "Numero"
    xlHoja1.Cells(13, 8) = "Monto"
    xlHoja1.Cells(13, 9) = "Numero"
    xlHoja1.Cells(13, 10) = "Monto"
    
    xlHoja1.Range("A5:J5").MergeCells = True
    xlHoja1.Range("A6:J6").MergeCells = True
    xlHoja1.Range("A7:J7").MergeCells = True
    
    xlHoja1.Range("B3:G3").MergeCells = True
    
    xlHoja1.Range("C11:D11").MergeCells = True
    xlHoja1.Range("E11:H11").MergeCells = True
    xlHoja1.Range("I11:J12").MergeCells = True
    xlHoja1.Range("C12:D12").MergeCells = True
    xlHoja1.Range("E12:F12").MergeCells = True
    xlHoja1.Range("G12:H12").MergeCells = True
 
    xlHoja1.Range("A1:J13").Font.Bold = True
    xlHoja1.Range("A1:J4").HorizontalAlignment = xlLeft
    xlHoja1.Range("A5:J13").HorizontalAlignment = xlCenter
    
    xlHoja1.Range("I11:I11").VerticalAlignment = xlCenter
    
    ExcelCuadro xlHoja1, 1, 11, 1, 13, False
    ExcelCuadro xlHoja1, 2, 11, 2, 13, False
    ExcelCuadro xlHoja1, 3, 11, 4, 12, False, False
    ExcelCuadro xlHoja1, 3, 13, 4, 13, True, True
    
    ExcelCuadro xlHoja1, 5, 11, 10, 13, True, True
     
    nFila = 14
    xlHoja1.Cells(nFila, 2) = "VISTA.-"
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True
                        
    For I = 1 To 14
        nFila = nFila + 1
        If I = 1 Then
            xlHoja1.Cells(nFila, 1) = "'2101.01+2101.02"
        ElseIf I = 2 Then
            xlHoja1.Cells(nFila, 1) = "'+21.01.03+2301"
        End If
        xlHoja1.Cells(nFila, 2) = sEscala(I)
        For j = 3 To 10
            xlHoja1.Cells(nFila, j) = 0
        Next
    Next
 
    xlHoja1.Cells(nFila, 2) = "Sub Total VISTA"
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
  
''''
For P = 1 To 3
    Select Case P
        Case 1
            If pnBittCentral = True Then
                VSQL = "SELECT TB.descr, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cPersCod, TA.nPersPersoneria, descr = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1.00 And SUM(TA.nSaldo) <= " & nFSD & "*2.00 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2.00 And SUM(TA.nSaldo) <= " & nFSD & "*4.00 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4.00 And SUM(TA.nSaldo) <= " & nFSD & "*6.00 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6.00 And SUM(TA.nSaldo) <= " & nFSD & "*8.00 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8.00 And SUM(TA.nSaldo) <= " & nFSD & "*10.00 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10.00 And SUM(TA.nSaldo) <= " & nFSD & "*15.00 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15.00 And SUM(TA.nSaldo) <= " & nFSD & "*20.00 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20.00 And SUM(TA.nSaldo) <= " & nFSD & "*50.00 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50.00 And SUM(TA.nSaldo) <= " & nFSD & "*100.00 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100.00 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT A.cCtaCod, A.nPersoneria, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntAC "
                VSQL = VSQL & "WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntAC*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..AhorroCConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE IsNull(A.bInmovilizada,0) = '0' and A.nEstCtaAC NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
                VSQL = VSQL & ") T Group by T.cCtaCod, T.nPersoneria, T.nSaldo "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON TA.cCtaCod = PC.cCtaCod INNER JOIN Persona P ON PC.cPersCod = P.cPersCod "
                VSQL = VSQL & "WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, TA.nPersPersoneria "
                VSQL = VSQL & ") TB Group by TB.descr, TB.nPersPersoneria Order by TB.descr, TB.nPersPersoneria"
            Else
                VSQL = " Select Orden, '01.Hasta el 10% del FSD (x)' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(0,0.10,1," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más del 10% al 25% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(0.10,0.25,2," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más del 25% al 50% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(0.25,0.50,3," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más del 50% al 100% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(0.50,1.00,4," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 1 vez a 2 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(1.00,2.00,5," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 2 veces a 4 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(2.00,4.00,6," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 4 veces a 6 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(4.00,6.00,7," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 6 veces a 8 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(6.00,8.00,8," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 8 veces a 10 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(8.00,10.00,9," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 10 veces a 15 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(10.00,15.00,10," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 15 veces a 20 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(15.00,20.00,11," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 20 veces a 50 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(20.00,50.00,12," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 50 veces a 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(50.00,100.00,13," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdp(100.00,999999.00,14," & nFSD & "," & nTCF & ") Order By Orden"
                
'                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
'                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
'                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT T.cCodCta, ISNULL(nSaldo/Count(*),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT PC.cCodCta, PC.cCodPers, nSaldo = CASE "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCodCta,6,1) = '1' THEN A.nSaldCntAC "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCodCta,6,1) = '2' THEN A.nSaldCntAC*" & nTCF & " END "
'                VSQL = VSQL & "FROM AhorroCConsol A INNER JOIN PersCuentaConsol PC ON A.cCodCta = PC.cCodCta "
'                VSQL = VSQL & "WHERE A.cEstCtaAC NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
'                VSQL = VSQL & ") T Group by T.cCodCta, nSaldo "
'                VSQL = VSQL & ") TA INNER JOIN PersCuentaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
'                VSQL = VSQL & "TA.cCodCta = PC.cCodCta WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
'                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
        Case 2
            If pnBittCentral = True Then
                VSQL = "SELECT TB.descr, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cPersCod, TA.nPersPersoneria, descr = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, ISNULL(SUM(TA.nSaldo),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, T.nPersoneria nPersPersoneria, T.nSaldo/Count(*) nSaldo FROM ( "
                VSQL = VSQL & "  SELECT A.cCtaCod, A.nPersoneria, nSaldo = CASE "
                VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntPF "
                VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntPF*" & nTCF & " END "
                VSQL = VSQL & "  FROM DBConsolidada..plazofijoconsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "  WHERE A.nEstCtaPF NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular
                VSQL = VSQL & "  UNION ALL"
                VSQL = VSQL & "  SELECT A.cCtaCod, A.nPersoneria, nSaldo = CASE "
                VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaNacional & "' THEN A.nSaldCntAC "
                VSQL = VSQL & "   WHEN SUBSTRING(A.cCtaCod,9,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntAC*" & nTCF & " END "
                VSQL = VSQL & "  FROM DBConsolidada..AhorroCConsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "  WHERE IsNull(A.bInmovilizada,0) = '1' and A.nEstCtaAC NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular
                VSQL = VSQL & " ) T Group by T.cCtaCod, T.nPersoneria, T.nSaldo  "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON TA.cCtaCod = PC.cCtaCod INNER JOIN Persona P ON PC.cPersCod = P.cPersCod "
                VSQL = VSQL & "  WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' "
                VSQL = VSQL & " Group by P.cPersCod, TA.nPersPersoneria "
                VSQL = VSQL & ") TB Group by TB.descr, TB.nPersPersoneria Order by TB.descr, TB.nPersPersoneria"
            Else
            
                VSQL = " Select Orden, '01.Hasta el 10% del FSD (x)' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(0,0.10,1," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más del 10% al 25% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(0.10,0.25,2," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más del 25% al 50% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(0.25,0.50,3," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más del 50% al 100% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(0.50,1.00,4," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 1 vez a 2 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(1.00,2.00,5," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 2 veces a 4 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(2.00,4.00,6," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 4 veces a 6 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(4.00,6.00,7," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 6 veces a 8 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(6.00,8.00,8," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 8 veces a 10 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(8.00,10.00,9," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 10 veces a 15 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(10.00,15.00,10," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 15 veces a 20 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(15.00,20.00,11," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 20 veces a 50 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(20.00,50.00,12," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 50 veces a 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(50.00,100.00,13," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '02.Más de 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdpfp(100.00,999999.00,14," & nFSD & "," & nTCF & ") Order By Orden"
            
            
'                VSQL = "SELECT TB.descr, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
'                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, descr = CASE "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
'                VSQL = VSQL & "END, Round(ISNULL(SUM(TA.nSaldo/TA.nTit),0),2) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT T.cCodCta, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo, Count(*) nTit FROM ( "
'                VSQL = VSQL & "SELECT PC.cCodCta, PC.cCodPers, nSaldo = CASE "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCodCta,6,1) = '1' THEN A.nSaldCntPF "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCodCta,6,1) = '2' THEN A.nSaldCntPF*" & nTCF & " END "
'                VSQL = VSQL & "FROM DBConsolidada..plazofijoconsol A INNER JOIN PersCuentaConsol PC ON A.cCodCta = PC.cCodCta "
'                VSQL = VSQL & "WHERE A.cEstCtaPF NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
'                VSQL = VSQL & ") T Group by T.cCodCta "
'                VSQL = VSQL & ") TA INNER JOIN PersCuentaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
'                VSQL = VSQL & "TA.cCodCta = PC.cCodCta WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
'                VSQL = VSQL & ") TB Group by TB.descr, TB.cTipPers Order by TB.descr, TB.cTipPers"
            End If
        Case 3
            If pnBittCentral = True Then
                VSQL = "SELECT TB.descr, TB.nPersPersoneria, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
                VSQL = VSQL & "SELECT P.cPersCod, P.nPersPersoneria, descr = CASE "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
                VSQL = VSQL & "END, Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo FROM ( "
                VSQL = VSQL & "SELECT T.cCtaCod, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo FROM ( "
                VSQL = VSQL & "SELECT PC.cCtaCod, PC.cPersCod, nSaldo = CASE "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '" & gMonedaNacional & "' THEN A.nSaldCntCTS "
                VSQL = VSQL & "WHEN SUBSTRING(PC.cCtaCod,6,1) = '" & gMonedaExtranjera & "' THEN A.nSaldCntCTS*" & nTCF & " END "
                VSQL = VSQL & "FROM DBConsolidada..ctsconsol A INNER JOIN DBConsolidada..ProductoPersonaConsol PC ON A.cCtaCod = PC.cCtaCod "
                VSQL = VSQL & "WHERE A.nEstCtaCTS NOT IN (" & gCapEstCancelada & "," & gCapEstAnulada & ") AND PC.nPrdPersRelac = " & gCapRelPersTitular & " "
                VSQL = VSQL & ") T Group by T.cCtaCod "
                VSQL = VSQL & ") TA INNER JOIN DBConsolidada..ProductoPersonaConsol PC INNER JOIN Persona P ON PC.cPersCod = P.cPersCod ON "
                VSQL = VSQL & "TA.cCtaCod = PC.cCtaCod WHERE PC.nPrdPersRelac = '" & gCapRelPersTitular & "' Group by P.cPersCod, P.nPersPersoneria "
                VSQL = VSQL & ") TB Group by TB.descr, TB.nPersPersoneria Order by TB.descr, TB.nPersPersoneria"
            Else
            
            If bFSD = -99999 Then
            
                VSQL = " Select Orden, '01.Hasta el 10% del FSD (x)' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(-99999,0.10,1," & nFSD & "," & nTCF & ")"
            Else
                VSQL = " Select Orden, '01.Hasta el 10% del FSD (x)' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(0,0.10,1," & nFSD & "," & nTCF & ")"
            End If
            
                VSQL = VSQL & " UNION Select Orden, '03.Más del 10% al 25% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(0.10,0.25,2," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más del 25% al 50% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(0.25,0.50,3," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más del 50% al 100% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(0.50,1.00,4," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 1 vez a 2 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(1.00,2.00,5," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 2 veces a 4 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(2.00,4.00,6," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 4 veces a 6 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(4.00,6.00,7," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 6 veces a 8 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(6.00,8.00,8," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 8 veces a 10 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(8.00,10.00,9," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 10 veces a 15 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(10.00,15.00,10," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 15 veces a 20 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(15.00,20.00,11," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 20 veces a 50 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(20.00,50.00,12," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 50 veces a 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(50.00,100.00,13," & nFSD & "," & nTCF & ")"
                VSQL = VSQL & " UNION Select Orden, '03.Más de 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from dbo.fsdctsp(100.00,999999.00,14," & nFSD & "," & nTCF & ") Order By Orden"
            
            
            
'                VSQL = "SELECT TB.Tipo, TB.cTipPers, ISNULL(Count(*),0) nNum, Round(ISNULL(SUM(nSaldo),0),2) Saldo FROM ( "
'                VSQL = VSQL & "SELECT P.cCodPers, P.cTipPers, Tipo = CASE "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) <= " & nFSD & "*0.10 THEN '01. Hasta el 10% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.10 And SUM(TA.nSaldo) <= " & nFSD & "*0.25 THEN '02. Hasta el 25% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.25 And SUM(TA.nSaldo) <= " & nFSD & "*0.50 THEN '03. Hasta el 50% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*0.50 And SUM(TA.nSaldo) <= " & nFSD & "*1.00 THEN '04. Hasta el 100% del FSD' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*1 And SUM(TA.nSaldo) <= " & nFSD & "*2 THEN '05. 01 a 02 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*2 And SUM(TA.nSaldo) <= " & nFSD & "*4 THEN '06. 02 a 04 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*4 And SUM(TA.nSaldo) <= " & nFSD & "*6 THEN '07. 04 a 06 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*6 And SUM(TA.nSaldo) <= " & nFSD & "*8 THEN '08. 06 a 08 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*8 And SUM(TA.nSaldo) <= " & nFSD & "*10 THEN '09. 08 a 10 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*10 And SUM(TA.nSaldo) <= " & nFSD & "*15 THEN '10. 10 a 15 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*15 And SUM(TA.nSaldo) <= " & nFSD & "*20 THEN '11. 15 a 20 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*20 And SUM(TA.nSaldo) <= " & nFSD & "*50 THEN '12. 20 a 50 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*50 And SUM(TA.nSaldo) <= " & nFSD & "*100 THEN '13. 50 a 100 Veces' "
'                VSQL = VSQL & "WHEN SUM(TA.nSaldo) > " & nFSD & "*100 THEN '14. Más de 100 Veces' "
'                VSQL = VSQL & "END, Round(ISNULL(SUM(TA.nSaldo),0),2) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT T.cCodCta, ISNULL(SUM(nSaldo)/Count(*),0) nSaldo FROM ( "
'                VSQL = VSQL & "SELECT PC.cCodCta, PC.cCodPers, nSaldo = CASE "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCodCta,6,1) = '1' THEN A.nSaldCntCTS "
'                VSQL = VSQL & "WHEN SUBSTRING(PC.cCodCta,6,1) = '2' THEN A.nSaldCntCTS*" & nTCF & " END "
'                VSQL = VSQL & "FROM DBConsolidada..ctsconsol A INNER JOIN PersCuentaConsol PC ON A.cCodCta = PC.cCodCta "
'                VSQL = VSQL & "WHERE A.cEstCtaCTS NOT IN ('C', 'U') AND PC.cRelaCta = 'TI' "
'                VSQL = VSQL & ") T Group by T.cCodCta "
'                VSQL = VSQL & ") TA INNER JOIN PersCuentaConsol PC INNER JOIN DBPersona..Persona P ON PC.cCodPers = P.cCodPers ON "
'                VSQL = VSQL & "TA.cCodCta = PC.cCodCta WHERE PC.cRelaCta = 'TI' Group by P.cCodPers, P.cTipPers "
'                VSQL = VSQL & ") TB Group by TB.Tipo, TB.cTipPers Order by TB.Tipo, TB.cTipPers"
            End If
    End Select
    

    Set rsCta = oConConsol.CargaRecordSet(VSQL)

    nNum01 = 0: nNum02 = 0: nNum03 = 0
    nSald01 = 0: nSald02 = 0: nSald03 = 0
    sRan = "": I = 0
    If rsCta.EOF And rsCta.BOF Then
    Else
        Do While Not rsCta.EOF
            sTipo = Left(rsCta!Descr, 2)
             ''Desde
            If sTipo = "01" Then
                 If P = 1 Then
                     nFila = nFila + 1
                     xlHoja1.Cells(nFila, 2) = "AHORROS"
                     xlHoja1.Cells(nFila + 1, 1) = "'2102+2302"
                 ElseIf P = 2 Then
                     nFila = nFila + 1
                     xlHoja1.Cells(nFila, 2) = "PLAZO"
                     xlHoja1.Cells(nFila + 1, 1) = "'2103"
                     xlHoja1.Cells(nFila + 2, 1) = "'+2103.04+2101.09+"
                     xlHoja1.Cells(nFila + 3, 1) = "'2303+2107"
                 ElseIf P = 3 Then
                     nFila = nFila + 1
                     xlHoja1.Cells(nFila, 2) = "CTS"
                     xlHoja1.Cells(nFila + 1, 1) = "'+2103.05"
                 End If
                 xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
                 xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True
             End If
             
             ''Hasta
              
             nFila = nFila + 1
              
             If pnBittCentral = True Then
                xlHoja1.Cells(nFila, 2) = sEscala(rsCta.Bookmark)
                xlHoja1.Cells(nFila, 3) = rsCta!nNum
                xlHoja1.Cells(nFila, 4) = rsCta!Saldo
             Else
                xlHoja1.Cells(nFila, 2) = sEscala(rsCta.Bookmark)
                xlHoja1.Cells(nFila, 3) = rsCta!nNum
                xlHoja1.Cells(nFila, 4) = rsCta!MontoN
                xlHoja1.Cells(nFila, 5) = rsCta!NumSF
                xlHoja1.Cells(nFila, 6) = rsCta!MontoSF
                xlHoja1.Cells(nFila, 7) = rsCta!NumCF
                xlHoja1.Cells(nFila, 8) = rsCta!MontoCF
                xlHoja1.Cells(nFila, 9) = rsCta!NumN + rsCta!NumSF + rsCta!NumCF
                xlHoja1.Cells(nFila, 10) = rsCta!MontoN + rsCta!MontoSF + rsCta!MontoCF
            End If
            I = CInt(sTipo)
            
            
            If pnBittCentral = True Then
                Select Case rsCta!nPersPersoneria
                Case gPersonaNat
                    nNum01 = nNum01 + rsCta!nNum
                    nSald01 = nSald01 + rsCta!Saldo
                Case gPersonaJurSFL, gPersonaJurCFLFONCODES
                    nNum02 = nNum02 + rsCta!nNum
                    nSald02 = nSald02 + rsCta!Saldo
                Case Else
                    nNum03 = nNum03 + rsCta!nNum
                    nSald03 = nSald03 + rsCta!Saldo
                End Select
            Else
            
                nNum01 = nNum01 + rsCta!NumN
                nSald01 = nSald01 + rsCta!MontoN
            
                nNum02 = nNum02 + rsCta!NumSF
                nSald02 = nSald02 + rsCta!MontoSF
            
                nNum03 = nNum03 + rsCta!NumCF
                nSald03 = nSald03 + rsCta!MontoCF
            
            End If
            rsCta.MoveNext
        Loop
    End If
    
    
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 2) = sProd(P)
    xlHoja1.Cells(nFila, 3) = nNum01
    xlHoja1.Cells(nFila, 4) = nSald01
    xlHoja1.Cells(nFila, 5) = nNum02
    xlHoja1.Cells(nFila, 6) = nSald02
    xlHoja1.Cells(nFila, 7) = nNum03
    xlHoja1.Cells(nFila, 8) = nSald03
    xlHoja1.Cells(nFila, 9) = nNum01 + nNum02 + nNum03
    xlHoja1.Cells(nFila, 10) = nSald01 + nSald02 + nSald03
    
    'SubTotal
    'For I = 99 To 106
    '    xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & nFila - 14 & ":" & UCase(Chr(I)) & nFila - 1 & ")"
    'Next
    xlHoja1.Range("A" & nFila & ":J" & nFila).Font.Bold = True
Next P


    VSQL = " Select Orden, '01.Hasta el 10% del FSD (x)' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(0,0.10,1," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más del 10% al 25% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(0.10,0.25,2," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más del 25% al 50% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(0.25,0.50,3," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más del 50% al 100% del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(0.50,1.00,4," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 1 vez a 2 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(1.00,2.00,5," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 2 veces a 4 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(2.00,4.00,6," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 4 veces a 6 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(4.00,6.00,7," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 6 veces a 8 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(6.00,8.00,8," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 8 veces a 10 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(8.00,10.00,9," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 10 veces a 15 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(10.00,15.00,10," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 15 veces a 20 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(15.00,20.00,11," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 20 veces a 50 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(20.00,50.00,12," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 50 veces a 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(50.00,100.00,13," & nFSD & "," & nTCF & ")"
        VSQL = VSQL & " UNION Select Orden, '02.Más de 100 Veces del FSD' Descr, NumN, MontoN, NumSF, MontoSF, NumCF, MontoCF from DBConsolidada.dbo.fsdp_N(100.00,999999.00,14," & nFSD & "," & nTCF & ") Order By Orden"
    
    Set rsCta = oConConsol.CargaRecordSet(VSQL)
    

    nFila = nFila + 1
    xlHoja1.Cells(nFila, 2) = "Depósitos Totales (1)"
    
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Bold = True
    xlHoja1.Range("B" & nFila & ":B" & nFila).Font.Underline = True
                        
    For j = 1 To 14
    
        nFila = nFila + 1
        xlHoja1.Cells(nFila, 2) = sEscala(j)
    '    For i = 99 To 106
    '        xlHoja1.Range(UCase(Chr(i)) & nFila & ":" & UCase(Chr(i)) & nFila).Formula = "=+" & UCase(Chr(i)) & nFila - 63 & "+" & UCase(Chr(i)) & nFila - 48 & "+" & UCase(Chr(i)) & nFila - 32 & "+" & UCase(Chr(i)) & nFila - 16
    '    Next
        xlHoja1.Cells(nFila, 3) = rsCta!NumN
        xlHoja1.Cells(nFila, 4) = rsCta!MontoN
        xlHoja1.Cells(nFila, 4).NumberFormat = "#,###0.00"
        xlHoja1.Cells(nFila, 5) = rsCta!NumSF
        xlHoja1.Cells(nFila, 6) = rsCta!MontoSF
        xlHoja1.Cells(nFila, 6).NumberFormat = "#,###0.00"
        xlHoja1.Cells(nFila, 7) = rsCta!NumCF
        xlHoja1.Cells(nFila, 8) = rsCta!MontoCF
        xlHoja1.Cells(nFila, 8).NumberFormat = "#,###0.00"
        xlHoja1.Cells(nFila, 9) = rsCta!NumN + rsCta!NumSF + rsCta!NumCF
        xlHoja1.Cells(nFila, 10) = rsCta!MontoN + rsCta!MontoSF + rsCta!MontoCF
        xlHoja1.Cells(nFila, 10).NumberFormat = "#,###0.00"
        rsCta.MoveNext
    Next j
 
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 2) = sProd(P)
    'SubTotal
    For I = 99 To 106
        xlHoja1.Range(UCase(Chr(I)) & nFila & ":" & UCase(Chr(I)) & nFila).Formula = "=SUM(" & UCase(Chr(I)) & nFila - 14 & ":" & UCase(Chr(I)) & nFila - 1 & ")"
    Next
 
    xlHoja1.Range("A" & nFila & ":J" & nFila).Font.Bold = True
 
    ExcelCuadro xlHoja1, 1, 14, 10, nFila
    
    xlHoja1.Range("C14:C" & nFila).NumberFormat = "###,###,##0"
    xlHoja1.Range("E14:E" & nFila).NumberFormat = "###,###,##0"
    xlHoja1.Range("G14:G" & nFila).NumberFormat = "###,###,##0"
    xlHoja1.Range("I14:I" & nFila).NumberFormat = "###,###,##0"
     
    xlHoja1.Range("D14:D" & nFila).NumberFormat = "###,###,##0.00"
    xlHoja1.Range("F14:F" & nFila).NumberFormat = "###,###,##0.00"
    xlHoja1.Range("H14:H" & nFila).NumberFormat = "###,###,##0.00"
    xlHoja1.Range("J14:J" & nFila).NumberFormat = "###,###,##0.00"
    
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "Periodicidad: Mensual"
    
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(*) F.S.D.=Monto Máximo de cobertura por persona y entidad del Fondo de Seguro de Depósito Vigente a la fecha del reporte"
    
    nFila = nFila + 1
    xlHoja1.Cells(nFila, 1) = "(1) Se deberá considerar el total de depósitos por persona"
    
    For I = nFila - 2 To nFila
        xlHoja1.Range("A" & I & ":J" & I).MergeCells = True
    Next
    
    'Firmas
    
    nFila = nFila + 3
    'Contador
    xlHoja1.Range("D" & nFila & ":F" & nFila).MergeCells = True
    xlHoja1.Range("D" & nFila + 1 & ":F" & nFila + 1).MergeCells = True
    xlHoja1.Range("D" & nFila + 2 & ":F" & nFila + 2).MergeCells = True
    
    'Hecho Por
    xlHoja1.Range("H" & nFila & ":J" & nFila).MergeCells = True
    xlHoja1.Range("H" & nFila + 1 & ":J" & nFila + 1).MergeCells = True
     
    xlHoja1.Cells(nFila + 1, 2) = "GERENTE GENERAL"
    xlHoja1.Cells(nFila + 1, 4) = "CONTADOR GENERAL"
    xlHoja1.Cells(nFila + 1, 8) = "HECHO POR"
    xlHoja1.Cells(nFila + 2, 4) = "MATRICULA NRO.   "
    
    xlHoja1.Range("A" & nFila & ":K" & nFila + 2).HorizontalAlignment = xlCenter
    
    With xlHoja1.Range("B" & nFila & ":B" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    With xlHoja1.Range("D" & nFila & ":F" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    With xlHoja1.Range("H" & nFila & ":J" & nFila).Borders(xlEdgeBottom)
        .LineStyle = xlContinuous
        .Weight = xlThin
        .ColorIndex = xlAutomatic
    End With
    
    xlHoja1.Cells.Select
    xlHoja1.Cells.Font.Name = "Arial"
    xlHoja1.Cells.Font.Size = 8
    xlHoja1.Cells.EntireColumn.AutoFit
    
        
     'ExcelCuadro xlHoja1, 2, 6, 3, liLineas - 1
     xlHoja1.SaveAs App.path & "\SPOOLER\" & lsArchivo
     ExcelEnd App.path & "\Spooler\" & lsArchivo, xlAplicacion, xlLibro, xlHoja1
'     Set xlAplicacion = Nothing
'     Set xlLibro = Nothing
'     Set xlHoja1 = Nothing
    
    MsgBox "Se ha generado el Archivo en " & App.path & "\spooler\" & lsArchivo, vbInformation, "Aviso"
    
    Call CargaArchivo(lsArchivo, App.path & "\Spooler")
        
End Function
'Otros Reportes
Public Sub ProvContxCtasCont(ByVal pdFechaIni As Date, ByVal pdFechaFin As Date)
    Dim I As Integer
    Dim lsCadena As String
    Dim oPrevio As clsPrevioFinan
    Dim oNImp As NContImprimir
    Set oNImp = New NContImprimir
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = oNImp.ProvContxCtasContables(pdFechaIni, pdFechaFin)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Err_:
        Exit Sub
End Sub

Public Sub ProvContxOperacion(ByVal pdFechaIni As Date, ByVal pdFechaFin As Date)
    Dim I As Integer
    Dim lsCadena As String
    Dim oPrevio As clsPrevioFinan
    Dim oNImp As NContImprimir
    Set oNImp = New NContImprimir
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = oNImp.ProvContxOperacion(pdFechaIni, pdFechaFin)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Err_:
        Exit Sub
End Sub

Public Sub InteresDevvengadoPFxFxAG(ByVal pdFechaIni As Date, ByVal pdFechaFin As Date)
        Dim I As Integer
    Dim lsCadena As String
    Dim oPrevio As clsPrevioFinan
    Dim oNImp As NContImprimir
    Set oNImp = New NContImprimir
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = oNImp.InteresDevvengadoPFxFxAG(pdFechaIni, pdFechaFin)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Err_:
        Exit Sub
End Sub

Public Sub InteresCTSxFxAG(ByVal pdFechaIni As Date, ByVal pdFechaFin As Date)
    Dim I As Integer
    Dim lsCadena As String
    Dim oPrevio As clsPrevioFinan
    Dim oNImp As NContImprimir
    Set oNImp = New NContImprimir
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = oNImp.InteresCTSxFxAG(pdFechaIni, pdFechaFin)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Err_:
        Exit Sub
End Sub
'By Capi 04022008
Public Sub ImprimePlazoFijoIntCash(ByVal psMoneda As String)

Dim I As Integer
Dim lsCadena As String
Dim oPrevio As clsPrevioFinan
Dim oNImp As NContImprimir
Set oNImp = New NContImprimir
Set oPrevio = New clsPrevioFinan

On Error GoTo ImprimePlazoFijoIntCashERR
 
    lsCadena = oNImp.ImprimePlazoFijoIntCash(psMoneda, gsNomCmac, gsNomAge, gdFecSis, gsCodUser)
    
    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
    
    Set oNImp = Nothing
    Set oPrevio = Nothing
    Exit Sub

ImprimePlazoFijoIntCashERR:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub
End Sub
'By Capi 08022008
Public Sub ImprimeCarteraDetxIntDSP(pnTipCambio As Double, Optional pnExcel As Boolean = False)

Dim I As Integer
Dim lsCadena As String
Dim oPrevio As clsPrevioFinan
Dim oNImp As NContImprimir
Set oNImp = New NContImprimir
Set oPrevio = New clsPrevioFinan

On Error GoTo ImprimeCarteraDetxIntDSPERR
 
    lsCadena = oNImp.ImprimeCarteraDetxIntDSP(pnTipCambio, gsNomCmac, gsNomAge, gdFecSis, gsCodUser, pnExcel)
    
    If pnExcel = False Then
        If Len(Trim(lsCadena)) > 0 Then
            oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
        Else
            MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
        End If
        
        Set oNImp = Nothing
        Set oPrevio = Nothing
    End If
    Exit Sub

ImprimeCarteraDetxIntDSPERR:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub
End Sub
'By Capi 08022008
Public Sub ImprimeCarteraResxLineas(pnTipCambio As Double, Optional pnExcel As Boolean = False)

Dim I As Integer
Dim lsCadena As String
Dim oPrevio As clsPrevioFinan
Dim oNImp As NContImprimir
Set oNImp = New NContImprimir
Set oPrevio = New clsPrevioFinan

On Error GoTo ImprimeCarteraResxLineasERR
    
    lsCadena = oNImp.ImprimeCarteraResxLineas(pnTipCambio, gsNomCmac, gsNomAge, gdFecSis, gsCodUser, pnExcel)
    
    If pnExcel = False Then
        If Len(Trim(lsCadena)) > 0 Then
            oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
        Else
            MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
        End If
        
        Set oNImp = Nothing
        Set oPrevio = Nothing
    End If
    Exit Sub

ImprimeCarteraResxLineasERR:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub
End Sub



Public Sub PlazoFijoxRango(ByVal pdFechaIni As Date, ByVal pnMoneda As Integer)
    Dim I As Integer
    Dim lsCadena As String
    Dim oPrevio As clsPrevioFinan
    Dim oNImp As NContImprimir
    Set oNImp = New NContImprimir
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = oNImp.PlazoFijoxRango(pdFechaIni, pnMoneda)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Err_:
        Exit Sub
End Sub

Public Sub RepInstPubliResgos(Optional pdFechas As Date = "1990-01-01")
    Dim I As Integer
    Dim lsCadena As String
    Dim oPrevio As clsPrevioFinan
    Dim oNImp As NContImprimir
    Set oNImp = New NContImprimir
    Set oPrevio = New clsPrevioFinan
 
    lsCadena = oNImp.RepInstPubliResgos(pdFechas)

    If Len(Trim(lsCadena)) > 0 Then
        oPrevio.Show lsCadena, "Reporte", True, 66, gImpresora
    Else
        MsgBox "No existen datos que mostrar", vbInformation, "Aviso!!!"
    End If
Err_:
        Exit Sub
End Sub

'Reportes Balance Contabilidad
'JEOM

Public Sub CreditosVigentes(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCreditosVigentes(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Creditos_Vigentes" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Adeudos Vinculados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 10
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 15
            xlAplicacion.Range("H1:H1").ColumnWidth = 15
            xlAplicacion.Range("I1:I1").ColumnWidth = 15
            xlAplicacion.Range("J1:J1").ColumnWidth = 15
            xlAplicacion.Range("K1:K1").ColumnWidth = 15
            xlAplicacion.Range("L1:L1").ColumnWidth = 15
            xlAplicacion.Range("M1:M1").ColumnWidth = 15
            xlAplicacion.Range("N1:N1").ColumnWidth = 15
            xlAplicacion.Range("O1:O1").ColumnWidth = 15
           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Vigentes " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 1) = "Moneda"
            xlHoja1.Cells(liLineas, 2) = "Venc 07"
            xlHoja1.Cells(liLineas, 3) = "Venc 08 a 15"
            xlHoja1.Cells(liLineas, 4) = "Venc 16 a 30"
            xlHoja1.Cells(liLineas, 5) = "Venc 31 a 60"
            xlHoja1.Cells(liLineas, 6) = "Venc 61 a 90"
            xlHoja1.Cells(liLineas, 7) = "Venc 91 a 180"
            xlHoja1.Cells(liLineas, 8) = "Venc 181 a 360"
            xlHoja1.Cells(liLineas, 9) = "Venc 2 a"
            xlHoja1.Cells(liLineas, 10) = "Venc 3 a"
            xlHoja1.Cells(liLineas, 11) = "Venc 4 a"
            xlHoja1.Cells(liLineas, 12) = "Venc 5 a"
            xlHoja1.Cells(liLineas, 13) = "Venc 6 a 10"
            xlHoja1.Cells(liLineas, 14) = "Venc 11 a 20"
            xlHoja1.Cells(liLineas, 15) = "Venc 21 a Mas"
               
            
'            xlHoja1.Cells(5, 1) = "Dólares"
'            xlHoja1.Cells(6, 1) = "Soles"
            '''xlHoja1.Cells(5, 1) = "Soles" 'marg ers044-2016
            xlHoja1.Cells(5, 1) = StrConv(gcPEN_PLURAL, vbProperCase)
            xlHoja1.Cells(6, 1) = "Dólares"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 15)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 7) = rs(5)
            xlHoja1.Cells(liLineas, 8) = rs(6)
            xlHoja1.Cells(liLineas, 9) = rs(7)
            xlHoja1.Cells(liLineas, 10) = rs(8)
            xlHoja1.Cells(liLineas, 11) = rs(9)
            xlHoja1.Cells(liLineas, 12) = rs(10)
            xlHoja1.Cells(liLineas, 13) = rs(11)
            xlHoja1.Cells(liLineas, 14) = rs(12)
            xlHoja1.Cells(liLineas, 15) = rs(13)
            
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 1, 4, 14, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub
End Sub



Public Sub CreditosRefinanciados(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCreditosRefinanciados(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Creditos_Refinanciados" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Creditos Refinanciados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 10
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 15
            xlAplicacion.Range("H1:H1").ColumnWidth = 15
            xlAplicacion.Range("I1:I1").ColumnWidth = 15
            xlAplicacion.Range("J1:J1").ColumnWidth = 15
            xlAplicacion.Range("K1:K1").ColumnWidth = 15
            xlAplicacion.Range("L1:L1").ColumnWidth = 15
            xlAplicacion.Range("M1:M1").ColumnWidth = 15
            xlAplicacion.Range("N1:N1").ColumnWidth = 15
            xlAplicacion.Range("O1:O1").ColumnWidth = 15
           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Vigentes " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 1) = "Moneda"
            xlHoja1.Cells(liLineas, 2) = "Venc 07"
            xlHoja1.Cells(liLineas, 3) = "Venc 08 a 15"
            xlHoja1.Cells(liLineas, 4) = "Venc 16 a 30"
            xlHoja1.Cells(liLineas, 5) = "Venc 31 a 60"
            xlHoja1.Cells(liLineas, 6) = "Venc 61 a 90"
            xlHoja1.Cells(liLineas, 7) = "Venc 91 a 180"
            xlHoja1.Cells(liLineas, 8) = "Venc 181 a 360"
            xlHoja1.Cells(liLineas, 9) = "Venc 2 a"
            xlHoja1.Cells(liLineas, 10) = "Venc 3 a"
            xlHoja1.Cells(liLineas, 11) = "Venc 4 a"
            xlHoja1.Cells(liLineas, 12) = "Venc 5 a"
            xlHoja1.Cells(liLineas, 13) = "Venc 6 a 10"
            xlHoja1.Cells(liLineas, 14) = "Venc 11 a 20"
            xlHoja1.Cells(liLineas, 15) = "Venc 21 a Mas"
               
            
            '''xlHoja1.Cells(5, 1) = "Soles" 'marg ers044-2016
            xlHoja1.Cells(5, 1) = StrConv(gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
            xlHoja1.Cells(6, 1) = "Dólares"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 15)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 15)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 7) = rs(5)
            xlHoja1.Cells(liLineas, 8) = rs(6)
            xlHoja1.Cells(liLineas, 9) = rs(7)
            xlHoja1.Cells(liLineas, 10) = rs(8)
            xlHoja1.Cells(liLineas, 11) = rs(9)
            xlHoja1.Cells(liLineas, 12) = rs(10)
            xlHoja1.Cells(liLineas, 13) = rs(11)
            xlHoja1.Cells(liLineas, 14) = rs(12)
            xlHoja1.Cells(liLineas, 15) = rs(13)
            
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 1, 4, 14, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub


End Sub



Public Sub CarteraCreditos(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCarteraCreditos(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Cartera Creditos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Cartera de Creditos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 10
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Vigentes " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Estado"
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            xlHoja1.Cells(liLineas, 5) = "Saldo"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

Public Sub InteresCreditos(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    
    
    'by capi 05012009
    If MsgBox(" ¿ Considerar Calificacion de Cartera con Alineamiento ? ", vbOKCancel + vbQuestion, "Confirma Actualizacion") = vbOk Then
        Call oCtaIf.ActualizaIntDevConAlineamiento(Format(psFecha, "yyyymmdd"))
    End If
      
    '
    
    
    Set rs = oCtaIf.GetInteresCreditos(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Interes_Creditos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Interes de Creditos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 35

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Vigentes " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Descripcion"
            xlHoja1.Cells(liLineas, 4) = "Estado"
            xlHoja1.Cells(liLineas, 5) = "Moneda"
            xlHoja1.Cells(liLineas, 6) = "Saldo"
            xlHoja1.Cells(liLineas, 7) = "Tipo Interes"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 7)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 7)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 7) = rs(5)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub



Public Sub CreditosCastigados(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCreditosCastigados(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Creditos_Castigados" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Creditos Castigados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Castigados " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Descripcion"
            xlHoja1.Cells(liLineas, 3) = "Moneda"
            xlHoja1.Cells(liLineas, 4) = "Saldo"
            xlHoja1.Cells(liLineas, 5) = "Cantidad"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

'Reportes Balance Planeamiento



Public Sub CarteraCreditosPla(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCarteraCreditosPla(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Cartera Creditos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Cartera Creditos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Cartera Creditos" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            xlHoja1.Cells(liLineas, 5) = "Cantidad"
            xlHoja1.Cells(liLineas, 6) = "Saldo"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub



Public Sub CredDesembolsosPla(ByVal psFecha As String, ByVal psTipoCambio As Currency)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCredDesembolsosPla(Format(psFecha, "yyyymmdd"), psTipoCambio)
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Creditos Desembolsos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Creditos Desembolsos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Desembolsos" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 4) = "Descripcion"
            xlHoja1.Cells(liLineas, 5) = "Cantidad"
            xlHoja1.Cells(liLineas, 6) = "Saldo"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub




Public Sub CarteraVencidaPla(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCarteraVencidaPla(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Cartera Vencida" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Cartera Vencida"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Cartera Vencida" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            'EJVG20120809 ***
            'xlHoja1.Cells(liLineas, 5) = "Saldo"
            xlHoja1.Cells(liLineas, 5) = "Nro Creditos"
            xlHoja1.Cells(liLineas, 6) = "Saldo"
            'END EJVG
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True

            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)

            'EJVG20120809 ***
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).WrapText = True

            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            'END EJVG *******

            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            'EJVG20120809 ***
            'xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 5) = rs(4)
            xlHoja1.Cells(liLineas, 6) = rs(3)
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).NumberFormat = "#,##0.00"
            'END EJVG *******

            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter

            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        'ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1 'EJVG20120809
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub



Public Sub CarteraRefinanciadaPla(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCarteraRefinanciadaPla(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Cartera Refinanciada" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Cartera Refinanciada"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Cartera Refinanciada" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            'EJVG20120809 ***
            'xlHoja1.Cells(liLineas, 5) = "Saldo"
            xlHoja1.Cells(liLineas, 5) = "Nro Creditos"
            xlHoja1.Cells(liLineas, 6) = "Saldo"
            'END EJVG
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
            'EJVG20120810 ***
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            'END EJVG *******
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            'xlHoja1.Cells(liLineas, 5) = rs(3)
             'EJVG20120810 ***
            xlHoja1.Cells(liLineas, 5) = rs(4)
            xlHoja1.Cells(liLineas, 6) = rs(3)
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            'END EJVG *******
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).NumberFormat = "#,##0.00"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 5), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter 'EJVG20120810
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        'ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1 'EJVG20120810
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

Public Sub CarteraJudicialesPla(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCarteraJudicialesPla(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Cartera Judiciales" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Cartera Judiciales"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Cartera Judiciales" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            xlHoja1.Cells(liLineas, 5) = "Cantidad"
            xlHoja1.Cells(liLineas, 6) = "Saldo"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            'EJVG20120813 ***
            'xlHoja1.Cells(liLineas, 5) = rs(3)
            'xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 5) = rs(4)
            xlHoja1.Cells(liLineas, 6) = rs(3)
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).NumberFormat = "#,##0.00"
            'END EJVG *******
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub
'By Capi 18122007 para planeamiento
Public Sub SayCarteraRecupCapital(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCarteraRecupCapital(psFecha)
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Cartera_Recuperacion Capital" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Cartera Recuperacion Capital"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            'EJVG20120810 ***
            xlAplicacion.Range("G1:G1").ColumnWidth = 20

            'xlAplicacion.Range("A1:Z100").Font.Size = 9
            'xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
            
            xlAplicacion.Cells.Font.Size = 9
            xlAplicacion.Cells.Font.Name = "Century Gothic"
            'END EJVG *******
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Cartera Recuperacion de Capital Al " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            'xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 2) = "Cod. Agencia" 'EJVG20120810
            'xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 3) = "Agencia" 'EJVG20120810
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            xlHoja1.Cells(liLineas, 5) = "Producto"
            'EJVG20120810 ***
            'xlHoja1.Cells(liLineas, 6) = "Recuperacion"
            xlHoja1.Cells(liLineas, 6) = "Nro Creditos"
            xlHoja1.Cells(liLineas, 7) = "Recuperacion"
                        
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).VerticalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).WrapText = True
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 7)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 7)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            'END EJVG *******
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            'EJVG20120810 ***
            'xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 6) = rs(5)
            xlHoja1.Cells(liLineas, 7) = rs(4)
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).NumberFormat = "#,##0.00"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlRight 'EJVG20120810
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter 'EJVG20120810
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        'ExcelCuadro xlHoja1, 2, 4, 6, liLineas - 1
        ExcelCuadro xlHoja1, 2, 4, 7, liLineas - 1 'EJVG20120810
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub
Public Sub InteresesDiferidos(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetInteresesDiferidos(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Intereses Diferidos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Intereses Diferidos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Intereses Diferidos" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Saldo"

                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 3)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 3)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)

            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 3, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

Public Sub PignoraticiosVencidos()
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetPignoraticiosVencidos
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Pignoraticios Vencidos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Pignoraticios Vencidos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Pignoraticios Vencidos" & Format(gdFecSis, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Plazo"
            xlHoja1.Cells(liLineas, 4) = "Saldo"

                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 4)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 4)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)

            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 4, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

Public Sub PignoraticiosVigentes()
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetPignoraticiosVigentes
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Pignoraticios Vigentes" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Pignoraticios Vigentes"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Pignoraticios Vigentes" & Format(gdFecSis, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "Plazo"
            xlHoja1.Cells(liLineas, 4) = "Saldo"

                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 4)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 4)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 4)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)

            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 4, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub


Public Sub CreditosCondonados(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetCreditosCondonados(Mid(Format(psFecha, "yyyymmdd"), 1, 6))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Creditos Condonados" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Creditos Condonados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 25 'NAGL 20190813 Cambió de 15 a 25
            xlAplicacion.Range("B1:B1").ColumnWidth = 20
            xlAplicacion.Range("c1:c1").ColumnWidth = 10
            xlAplicacion.Range("D1:D1").ColumnWidth = 25
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 25
            xlAplicacion.Range("H1:H1").ColumnWidth = 15
            'JUEZ 20130429 *****************************
            xlAplicacion.Range("I1:I1").ColumnWidth = 15
            xlAplicacion.Range("J1:J1").ColumnWidth = 15
            xlAplicacion.Range("K1:K1").ColumnWidth = 15
            'END JUEZ **********************************
            xlAplicacion.Range("L1:L1").ColumnWidth = 15 'Agregado by NAGL 20190813
            xlAplicacion.Range("M1:M1").ColumnWidth = 15 'Agregado by NAGL 20190813
            xlAplicacion.Range("N1:N1").ColumnWidth = 15 'JIPR20201128
            
            xlAplicacion.Range("A1:Z" & CStr(rs.RecordCount + 10)).Font.Size = 9 'NAGL 20191228 Mejora en Formato
            xlAplicacion.Range("A1:Z" & CStr(rs.RecordCount + 10)).Font.Name = "Century Gothic" 'NAGL 20191228 Mejora en Formato
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Creditos Condonados" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 1) = "Modalidad" 'NAGL 20190813
            xlHoja1.Cells(liLineas, 2) = "Cuenta"
            'JUEZ 20130429 ***********************************
            xlHoja1.Cells(liLineas, 3) = "Agencia"
            xlHoja1.Cells(liLineas, 4) = "Tipo de Credito"
            xlHoja1.Cells(liLineas, 5) = "Estado"
            xlHoja1.Cells(liLineas, 6) = "Calificación SBS"
            xlHoja1.Cells(liLineas, 7) = "Linea"
            xlHoja1.Cells(liLineas, 8) = "Saldo Capital" 'NAGL 20190813
            'NAGL 20190813 Cambió los correlativos
            xlHoja1.Cells(liLineas, 9) = "Saldo Compensatorio"
            xlHoja1.Cells(liLineas, 10) = "Saldo Moratorio"
            'JIPR20201128
            xlHoja1.Cells(liLineas, 11) = "Saldo Gastos"
            xlHoja1.Cells(liLineas, 12) = "Total"
            xlHoja1.Cells(liLineas, 13) = "Moneda"
            xlHoja1.Cells(liLineas, 14) = "Fecha Cond. o Canc."
            'JIPR20201128
            'xlHoja1.Cells(liLineas, 11) = "Total"
            'xlHoja1.Cells(liLineas, 12) = "Moneda"
            'xlHoja1.Cells(liLineas, 13) = "Fecha Cond. o Canc."
            'END JUEZ ****************************************
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 1)).Font.Bold = True
            
            'JIPR20201128
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 14)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
            'NAGL 20190813 Cambió el correlativo de 11 a 13
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).HorizontalAlignment = xlCenter
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).VerticalAlignment = xlCenter
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).EntireRow.AutoFit
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).WrapText = True
'
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).Font.Bold = True
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).Borders.LineStyle = 1
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 13)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
         
            xlHoja1.Cells(liLineas, 1) = rs(12)
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(13)
            xlHoja1.Cells(liLineas, 7) = rs(4)
            xlHoja1.Cells(liLineas, 8) = rs(5)
            xlHoja1.Cells(liLineas, 9) = rs(6)
         
             'JIPR20201128
'            xlHoja1.Cells(liLineas, 1) = rs(11)
'            xlHoja1.Cells(liLineas, 2) = rs(0)
'            xlHoja1.Cells(liLineas, 3) = rs(1)
'            xlHoja1.Cells(liLineas, 4) = rs(2)
'            xlHoja1.Cells(liLineas, 5) = rs(3)
'            xlHoja1.Cells(liLineas, 6) = rs(12)
'            xlHoja1.Cells(liLineas, 7) = rs(4)
'            xlHoja1.Cells(liLineas, 8) = rs(5)
'            xlHoja1.Cells(liLineas, 9) = rs(6)
            'JUEZ 20130429 *******************************************
            
            xlHoja1.Cells(liLineas, 10) = rs(7)
             'JIPR20201128
'            xlHoja1.Cells(liLineas, 11) = CDbl(rs(5)) + CDbl(rs(6)) + CDbl(rs(7)) 'rs(8)
'            xlHoja1.Cells(liLineas, 12) = rs(9) 'Agregado by NAGL 20190813
'            xlHoja1.Cells(liLineas, 13) = Format(rs(10), "mm/dd/yyyy") 'NAGL 20190813 Cambio de 11 a 12 y de rs(9) a rs(10) ''Antes dd/mm/yyyy Cambio by NAGL 20191229
            
            'JIPR20201128
            xlHoja1.Cells(liLineas, 11) = rs(8)
            xlHoja1.Cells(liLineas, 12) = CDbl(rs(5)) + CDbl(rs(6)) + CDbl(rs(7)) + CDbl(rs(8))
            xlHoja1.Cells(liLineas, 13) = rs(10) 'Agregado by NAGL 20190813
            xlHoja1.Cells(liLineas, 14) = Format(rs(11), "mm/dd/yyyy") 'NAGL 20190813 Cambio de 11 a 12 y de rs(9) a rs(10) ''Antes dd/mm/yyyy Cambio by NAGL 20191229
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 11)).Style = "Comma"
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 11), xlHoja1.Cells(liLineas, 11)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 12), xlHoja1.Cells(liLineas, 13)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 11), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlRight
            'END JUEZ ************************************************
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 1, 4, 14, liLineas - 1 'JUEZ 20130429
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

Public Sub ProvisionCreditos()
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetProvisionCreditos
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Provision de Creditos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Provision de Creditos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 20
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 25
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Provision de Creditos" & Format(gdFecSis, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia "
            xlHoja1.Cells(liLineas, 3) = "Tipo"
            xlHoja1.Cells(liLineas, 4) = "Moneda"
            xlHoja1.Cells(liLineas, 5) = "Provision"
            
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
                        
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub



Public Sub IntCreditosRefinanciados(ByVal psFechaIni As String, ByVal psFechaFin As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetIntCreditosRefinanciados(Format(psFechaIni, "yyyymmdd"), Format(psFechaFin, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Interes Creditos Refinanciados" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Interes Creditos Refinanciados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 40
            xlAplicacion.Range("D1:D1").ColumnWidth = 20
            xlAplicacion.Range("E1:E1").ColumnWidth = 40
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 15
            xlAplicacion.Range("H1:H1").ColumnWidth = 20

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Interes Creditos Refinanciados Del: " & Format(psFechaIni, "yyyymmdd") & " Al: " & Format(psFechaFin, "yyyymmdd")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia "
            xlHoja1.Cells(liLineas, 3) = "Nombre"
            xlHoja1.Cells(liLineas, 4) = "Cuenta"
            xlHoja1.Cells(liLineas, 5) = "Producto"
            xlHoja1.Cells(liLineas, 6) = "Moneda"
            xlHoja1.Cells(liLineas, 7) = "Monto"
            xlHoja1.Cells(liLineas, 8) = "Tiempo a Refinanciar"
            
            
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 8)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 8)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 7) = rs(5)
            xlHoja1.Cells(liLineas, 8) = rs(6)
                        
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 11), xlHoja1.Cells(liLineas, 11)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 8)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 12), xlHoja1.Cells(liLineas, 13)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 3)).HorizontalAlignment = xlLeft
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 8, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub



Public Sub ProvisionCartasFianzas()
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetProvisionCartasFianzas
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Provision Cartas Fianzas" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Provision Cartas Fianzas"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 25
            xlAplicacion.Range("D1:D1").ColumnWidth = 25
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Provision Cartas Fianzas" & Format(gdFecSis, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Agencia "
            xlHoja1.Cells(liLineas, 3) = "Cuenta"
            xlHoja1.Cells(liLineas, 4) = "Producto"
            xlHoja1.Cells(liLineas, 5) = "Linea"
            xlHoja1.Cells(liLineas, 6) = "Moneda"
            xlHoja1.Cells(liLineas, 7) = "Saldo"
            
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 7)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 7)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 7) = rs(5)
                        
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 7, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub


Public Sub PlazoFijoRiesgos(ByVal psFecha As String, ByVal psMoneda As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetPlazoFijoRiesgos(Mid(psFecha, 4, 2) & "/" & Mid(psFecha, 1, 2) & "/" & Mid(psFecha, 7, 4), psMoneda)
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Plazo Fijo Riesgos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Plazo Fijo Riesgos"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 20
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 25
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Plazo Fijo Riesgos" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Rango"
            xlHoja1.Cells(liLineas, 3) = "Saldo"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 3)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 3)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)

            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 3, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub
'ALPA 20081009***************************************
Public Sub ITFQuincena(ByVal psFechaIni As String, ByVal psFechaFin As String, Optional nTipoReporte As Integer = 1)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ITFQuincenaErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetITFQuincena(Format(psFechaIni, "yyyymmdd"), Format(psFechaFin, "yyyymmdd"), nTipoReporte)
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "ITF Quincena" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "ITF Quincena"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 12
            xlAplicacion.Range("B1:B1").ColumnWidth = 12
            xlAplicacion.Range("c1:c1").ColumnWidth = 12
            xlAplicacion.Range("D1:D1").ColumnWidth = 12
            xlAplicacion.Range("E1:E1").ColumnWidth = 12
            xlAplicacion.Range("F1:F1").ColumnWidth = 12
            xlAplicacion.Range("G1:G1").ColumnWidth = 12
            xlAplicacion.Range("H1:H1").ColumnWidth = 12
            xlAplicacion.Range("I1:I1").ColumnWidth = 12
            xlAplicacion.Range("J1:J1").ColumnWidth = 12
           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            If nTipoReporte = 1 Then
                xlHoja1.Cells(2, 1) = "ITF Quincena" & Format(psFechaFin, "dd/mm/yyyy")
            Else
                xlHoja1.Cells(2, 1) = "ITF Quincena (Tipo de cambio por movimiento)" & Format(psFechaFin, "dd/mm/yyyy")
            End If
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 1) = "Agencia"
            '''xlHoja1.Cells(liLineas, 2) = "Ahorros Soles" 'marg ers044-2016
            xlHoja1.Cells(liLineas, 2) = "Ahorros " & StrConv(gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
            xlHoja1.Cells(liLineas, 3) = "Ahorros Dolares"
            '''xlHoja1.Cells(liLineas, 4) = "Creditos Soles" 'marg ers044-2016
            xlHoja1.Cells(liLineas, 4) = "Creditos " & StrConv(gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
            xlHoja1.Cells(liLineas, 5) = "Creditos Dolares"
            '''xlHoja1.Cells(liLineas, 6) = "Prendario Soles" 'marg ers044-2016
            xlHoja1.Cells(liLineas, 6) = "Prendario " & StrConv(gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
            '''xlHoja1.Cells(liLineas, 7) = "Caja Soles" 'marg ers044-2016
            xlHoja1.Cells(liLineas, 7) = "Caja " & StrConv(gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
            xlHoja1.Cells(liLineas, 8) = "Caja Dolares"
            '''xlHoja1.Cells(liLineas, 9) = "TOTAL Soles" 'marg ers044-2016
            xlHoja1.Cells(liLineas, 9) = "TOTAL " & StrConv(gcPEN_PLURAL, vbProperCase) 'marg ers044-2016
            xlHoja1.Cells(liLineas, 10) = "TOTAL Dolares"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 10)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
        Dim lsTotalSol As Currency
        Dim lsTotalDol As Currency
        
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            lsTotalSol = 0
            lsTotalDol = 0
            xlHoja1.Cells(liLineas, 1) = rs(0)
            xlHoja1.Cells(liLineas, 2) = rs(1)
            xlHoja1.Cells(liLineas, 3) = rs(2)
            xlHoja1.Cells(liLineas, 4) = rs(3)
            xlHoja1.Cells(liLineas, 5) = rs(4)
            xlHoja1.Cells(liLineas, 6) = rs(5)
            xlHoja1.Cells(liLineas, 7) = rs(6)
            xlHoja1.Cells(liLineas, 8) = rs(7)
            
            lsTotalSol = rs(1) + rs(3) + rs(5) + rs(6)
            lsTotalDol = rs(2) + rs(4) + rs(7)
            xlHoja1.Cells(liLineas, 9) = lsTotalSol
            xlHoja1.Cells(liLineas, 10) = lsTotalDol
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 1, 4, 10, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ITFQuincenaErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub
End Sub


Public Sub DetalleGarantias(ByVal psFecha As String, ByVal psTipoCambio As Currency, ByVal pnMoneda As Integer)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
'ALPA 20090805**************************
'Dim liLineas        As Integer
Dim liLineas        As Long
'Dim I               As Integer
Dim I               As Long
'***************************************
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo DetalleGarantiasErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetDetalleGarantias(Format(psFecha, "mm/dd/yyyy"), psTipoCambio, pnMoneda)
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Detalle Garantias" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Detalle Garantias"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 12
            xlAplicacion.Range("B1:B1").ColumnWidth = 12
            xlAplicacion.Range("c1:c1").ColumnWidth = 40 '12
            xlAplicacion.Range("D1:D1").ColumnWidth = 12
            xlAplicacion.Range("E1:E1").ColumnWidth = 12
            xlAplicacion.Range("F1:F1").ColumnWidth = 12
            xlAplicacion.Range("G1:G1").ColumnWidth = 12
            xlAplicacion.Range("H1:H1").ColumnWidth = 12 '40 '** titular
            xlAplicacion.Range("I1:I1").ColumnWidth = 12
            xlAplicacion.Range("J1:J1").ColumnWidth = 40
           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Detalle Garantias" & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 1) = "Producto"
            xlHoja1.Cells(liLineas, 2) = "Cuenta"
            xlHoja1.Cells(liLineas, 3) = "Titular" '*** PEAC 20110708
            xlHoja1.Cells(liLineas, 4) = "Fuente Financ."
            xlHoja1.Cells(liLineas, 5) = "Agencia"
            xlHoja1.Cells(liLineas, 6) = "Monto"
            xlHoja1.Cells(liLineas, 7) = "Moneda"
            xlHoja1.Cells(liLineas, 8) = "Garantia"
'           xlHoja1.Cells(liLineas, 8) = "Titular" '*** PEAC 20110708
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).WrapText = True
            
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).Font.Bold = True
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).Borders.LineStyle = 1
'            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 7)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
        Dim lsTotalSol As Currency
        Dim lsTotalDol As Currency
        
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            lsTotalSol = 0
            lsTotalDol = 0
            xlHoja1.Cells(liLineas, 1) = rs(0)
            xlHoja1.Cells(liLineas, 2) = rs(1)
            xlHoja1.Cells(liLineas, 3) = rs(8) '***PEAC 20110708
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            xlHoja1.Cells(liLineas, 6) = rs(4)
            xlHoja1.Cells(liLineas, 7) = rs(5)
            xlHoja1.Cells(liLineas, 8) = rs(6)
            'xlHoja1.Cells(liLineas, 8) = rs(8) '***PEAC 20110708

            'xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 6)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            'xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 8)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 8)).Borders.LineStyle = 1
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 1, 4, 7, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
DetalleGarantiasErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub
End Sub

'*** PEAC 20080915 - para planeamiento

Public Sub SayNumCliCtasEnAhorrosCreditos(ByVal pnTipoCambio As Currency)  ''(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset
Dim RsCon As ADODB.Recordset
Dim RsCar As ADODB.Recordset
Dim RsUni As ADODB.Recordset
Dim rsPer As ADODB.Recordset

Dim lcCodAge As String
Dim lnTot1 As Double, lnTot2 As Double, lnTot3 As Double
Dim lnTot4 As Double, lnTot5 As Double, lnTot6 As Double, lnTot7 As Double, lnTot8 As Double
Dim lnTot9 As Double, lnTot10 As Double, lnTot11 As Double

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteNumCliCtasEnAhorrosCreditos

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetNumCliCtasEnAhorrosPorAgencias()
    Set RsCon = oCtaIf.GetNumCliCtasEnAhorrosConsolidado()
    Set RsCar = oCtaIf.GetCarteraNumCliYCtasCredito(pnTipoCambio)
    Set RsUni = oCtaIf.GetUniversoClientesCartera()
    Set rsPer = oCtaIf.GetObtienePeriodoConsol()

    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "Num_Cli_Ctas_En_AhorrosCreditos" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Num Cli y Ctas en Aho y Cred"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 15
            xlAplicacion.Range("H1:H1").ColumnWidth = 15
            xlAplicacion.Range("I1:I1").ColumnWidth = 15
            xlAplicacion.Range("J1:J1").ColumnWidth = 15
            xlAplicacion.Range("K1:K1").ColumnWidth = 15
           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            
            'xlHoja1.Cells(2, 1) = "NUMERO DE CLIENTES Y CUENTAS EN AHORROS Y CREDITOS " & Format(psFecha, "dd/mm/yyyy")
            xlHoja1.Cells(2, 1) = "NUMERO DE CLIENTES Y CUENTAS EN AHORROS Y CREDITOS "
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
            
            xlHoja1.Range(xlHoja1.Cells(5, 4), xlHoja1.Cells(5, 5)).Merge True
            xlHoja1.Range(xlHoja1.Cells(5, 6), xlHoja1.Cells(5, 7)).Merge True
            xlHoja1.Range(xlHoja1.Cells(5, 8), xlHoja1.Cells(5, 9)).Merge True

            liLineas = 6
            
            xlHoja1.Cells(liLineas - 1, 4) = "AHORRO"
            xlHoja1.Cells(liLineas - 1, 6) = "PLAZO FIJO"
            xlHoja1.Cells(liLineas - 1, 8) = "CTS"
            xlHoja1.Cells(liLineas - 1, 10) = "TOTAL"
            xlHoja1.Cells(liLineas - 1, 11) = "TOTAL"
                        
            xlHoja1.Cells(liLineas, 2) = "Agencia"
            xlHoja1.Cells(liLineas, 3) = "MONEDA"
            xlHoja1.Cells(liLineas, 4) = "Nº CLIENTES"
            xlHoja1.Cells(liLineas, 5) = "Nº CUENTAS"
            xlHoja1.Cells(liLineas, 6) = "Nº CLIENTES"
            xlHoja1.Cells(liLineas, 7) = "Nº CUENTAS"
            xlHoja1.Cells(liLineas, 8) = "Nº CLIENTES"
            xlHoja1.Cells(liLineas, 9) = "Nº CUENTAS"
            xlHoja1.Cells(liLineas, 10) = "CLIENTES"
            xlHoja1.Cells(liLineas, 11) = "CUENTAS"

            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).EntireRow.AutoFit
            
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 2), xlHoja1.Cells(liLineas, 11)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 2), xlHoja1.Cells(liLineas, 11)).Interior.ColorIndex = 36

    Do While Not rs.EOF
        liLineas = liLineas + 1
        lcCodAge = rs(0)
        xlHoja1.Cells(liLineas, 2) = rs(1)
        
        lnTot4 = 0: lnTot5 = 0: lnTot6 = 0: lnTot7 = 0: lnTot8 = 0
        lnTot9 = 0: lnTot10 = 0: lnTot11 = 0
        
        Do While rs(0) = lcCodAge
            liLineas = liLineas + 1
            
            xlHoja1.Cells(liLineas, 3) = rs(3)
            xlHoja1.Cells(liLineas, 4) = rs(4)
            xlHoja1.Cells(liLineas, 5) = rs(5)
            xlHoja1.Cells(liLineas, 6) = rs(6)
            xlHoja1.Cells(liLineas, 7) = rs(7)
            xlHoja1.Cells(liLineas, 8) = rs(8)
            xlHoja1.Cells(liLineas, 9) = rs(9)
            xlHoja1.Cells(liLineas, 10) = rs(4) + rs(6) + rs(8)
            xlHoja1.Cells(liLineas, 11) = rs(5) + rs(7) + rs(9)
            
            lnTot4 = lnTot4 + rs(4)
            lnTot5 = lnTot5 + rs(5)
            lnTot6 = lnTot6 + rs(6)
            lnTot7 = lnTot7 + rs(7)
            lnTot8 = lnTot8 + rs(8)
            lnTot9 = lnTot9 + rs(9)
            lnTot10 = lnTot10 + rs(4) + rs(6) + rs(8)
            lnTot11 = lnTot11 + rs(5) + rs(7) + rs(9)
                       
            rs.MoveNext
            If rs.EOF Then
                Exit Do
            End If
        Loop
            liLineas = liLineas + 1
            xlHoja1.Cells(liLineas, 3) = "TOTALES"
            xlHoja1.Cells(liLineas, 4) = lnTot4
            xlHoja1.Cells(liLineas, 5) = lnTot5
            xlHoja1.Cells(liLineas, 6) = lnTot6
            xlHoja1.Cells(liLineas, 7) = lnTot7
            xlHoja1.Cells(liLineas, 8) = lnTot8
            xlHoja1.Cells(liLineas, 9) = lnTot9
            xlHoja1.Cells(liLineas, 10) = lnTot10
            xlHoja1.Cells(liLineas, 11) = lnTot11
    Loop
    
'****************************************** Consolidado

            liLineas = liLineas + 4
            
            xlHoja1.Cells(liLineas - 1, 4) = "AHORRO"
            xlHoja1.Cells(liLineas - 1, 6) = "PLAZO FIJO"
            xlHoja1.Cells(liLineas - 1, 8) = "CTS"
            xlHoja1.Cells(liLineas - 1, 10) = "TOTAL"
            xlHoja1.Cells(liLineas - 1, 11) = "TOTAL"
                        
            xlHoja1.Cells(liLineas, 2) = "CONSOLIDADO"
            xlHoja1.Cells(liLineas, 3) = "MONEDA"
            xlHoja1.Cells(liLineas, 4) = "Nº CLIENTES"
            xlHoja1.Cells(liLineas, 5) = "Nº CUENTAS"
            xlHoja1.Cells(liLineas, 6) = "Nº CLIENTES"
            xlHoja1.Cells(liLineas, 7) = "Nº CUENTAS"
            xlHoja1.Cells(liLineas, 8) = "Nº CLIENTES"
            xlHoja1.Cells(liLineas, 9) = "Nº CUENTAS"
            xlHoja1.Cells(liLineas, 10) = "CLIENTES"
            xlHoja1.Cells(liLineas, 11) = "CUENTAS"

            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).EntireRow.AutoFit
            
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 11)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 2), xlHoja1.Cells(liLineas, 11)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 2), xlHoja1.Cells(liLineas, 11)).Interior.ColorIndex = 36


        lnTot4 = 0: lnTot5 = 0: lnTot6 = 0: lnTot7 = 0: lnTot8 = 0
        lnTot9 = 0: lnTot10 = 0: lnTot11 = 0


    Do While Not RsCon.EOF
        liLineas = liLineas + 1

            xlHoja1.Cells(liLineas, 3) = RsCon(1)
            xlHoja1.Cells(liLineas, 4) = RsCon(2)
            xlHoja1.Cells(liLineas, 5) = RsCon(3)
            xlHoja1.Cells(liLineas, 6) = RsCon(4)
            xlHoja1.Cells(liLineas, 7) = RsCon(5)
            xlHoja1.Cells(liLineas, 8) = RsCon(6)
            xlHoja1.Cells(liLineas, 9) = RsCon(7)
            xlHoja1.Cells(liLineas, 10) = RsCon(2) + RsCon(4) + RsCon(6)
            xlHoja1.Cells(liLineas, 11) = RsCon(3) + RsCon(5) + RsCon(7)
            
            lnTot4 = lnTot4 + RsCon(2)
            lnTot5 = lnTot5 + RsCon(3)
            lnTot6 = lnTot6 + RsCon(4)
            lnTot7 = lnTot7 + RsCon(5)
            lnTot8 = lnTot8 + RsCon(6)
            lnTot9 = lnTot9 + RsCon(7)
            lnTot10 = lnTot10 + RsCon(2) + RsCon(4) + RsCon(6)
            lnTot11 = lnTot11 + RsCon(3) + RsCon(5) + RsCon(7)
                       
            RsCon.MoveNext
            If RsCon.EOF Then
                Exit Do
            End If
        Loop
            liLineas = liLineas + 1
            xlHoja1.Cells(liLineas, 3) = "TOTALES"
            xlHoja1.Cells(liLineas, 4) = lnTot4
            xlHoja1.Cells(liLineas, 5) = lnTot5
            xlHoja1.Cells(liLineas, 6) = lnTot6
            xlHoja1.Cells(liLineas, 7) = lnTot7
            xlHoja1.Cells(liLineas, 8) = lnTot8
            xlHoja1.Cells(liLineas, 9) = lnTot9
            xlHoja1.Cells(liLineas, 10) = lnTot10
            xlHoja1.Cells(liLineas, 11) = lnTot11
    
        ExcelCuadro xlHoja1, 2, 5, 11, liLineas

'****************************************** Fin Consolidado

'****************************************** Cartera creditos

            liLineas = liLineas + 7
            
            xlHoja1.Cells(liLineas - 4, 3) = "CREDITOS"
            xlHoja1.Cells(liLineas - 3, 3) = "CARTERA DE CREDITOS - " & Trim(rsPer(0)) & " - " & Trim(rsPer(1))
            xlHoja1.Cells(liLineas - 2, 3) = "(INCLUYE CARTAS FIANZAS)"
                       
            xlHoja1.Cells(liLineas, 3) = "POR PRODUCTO"
            xlHoja1.Cells(liLineas, 4) = "SALDO CARTERA"
            xlHoja1.Cells(liLineas, 5) = "CUENTAS"
            xlHoja1.Cells(liLineas, 6) = "CLIENTES"

            xlHoja1.Range(xlHoja1.Cells(liLineas - 4, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 4, 1), xlHoja1.Cells(liLineas, 6)).EntireRow.AutoFit
            
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 1), xlHoja1.Cells(liLineas, 6)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 3), xlHoja1.Cells(liLineas, 6)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas - 1, 3), xlHoja1.Cells(liLineas, 6)).Interior.ColorIndex = 36

        lnTot1 = 0: lnTot2 = 0: lnTot3 = 0

    Do While Not RsCar.EOF
        liLineas = liLineas + 1
        
            xlHoja1.Cells(liLineas, 3) = RsCar(0)
            xlHoja1.Cells(liLineas, 4) = RsCar(1)
            xlHoja1.Cells(liLineas, 5) = RsCar(2)
            xlHoja1.Cells(liLineas, 6) = RsCar(3)
            
            lnTot1 = lnTot1 + RsCar(1)
            lnTot2 = lnTot2 + RsCar(2)
            lnTot3 = lnTot3 + RsCar(3)
            
                       
            RsCar.MoveNext
            If RsCar.EOF Then
                Exit Do
            End If
        Loop
            liLineas = liLineas + 1
            xlHoja1.Cells(liLineas, 3) = "TOTALES"
            xlHoja1.Cells(liLineas, 4) = lnTot1
            xlHoja1.Cells(liLineas, 5) = lnTot2
            xlHoja1.Cells(liLineas, 6) = lnTot3
                
        ExcelCuadro xlHoja1, 3, liLineas - 7, 6, liLineas

'****************************************** Fin Cartera creditos


'****************************************** Universo clientes cartera

            liLineas = liLineas + 2

            xlHoja1.Cells(liLineas, 3) = RsUni(0)
            xlHoja1.Cells(liLineas + 1, 3) = lnTot3 - RsUni(0)
            
            xlHoja1.Cells(liLineas, 4) = "TOTAL UNIVERSO DE CLIENTES DE CARTERA"
            xlHoja1.Cells(liLineas + 1, 4) = "(DIF. CLIENTES QUE TIENEN CREDITOS EN MAS DE UN PRODUCTO)"
                       
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas + 1, 3)).Font.Bold = True
            

'****************************************** Fin Universo clientes cartera

        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteNumCliCtasEnAhorrosCreditos:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub
'Add By GITU 23-02-2009
Public Sub GeneraArchivoDAOT(psAnio As String, pnNroUit As Integer, pnTipCam As Double)

Dim oCtaIf As NCajaCtaIF
Dim rs As ADODB.Recordset
Dim oSys As Scripting.FileSystemObject
Dim oText As Scripting.TextStream
Dim glsArchivo As String
Dim lsTexto As String
Dim N As Integer
Dim lsApePat As String
Dim lsApeMat As String
Dim lsNOmbre As String
Dim lsNombre1 As String
Dim lsNombre2 As String
Dim lsRazSoc As String
Dim lsMonto As String

    Set oCtaIf = New NCajaCtaIF
    Set rs = New ADODB.Recordset

    Set rs = oCtaIf.GetDaotCostos(psAnio, pnNroUit, pnTipCam)

    glsArchivo = "Costos.TXT"
    Set oSys = New Scripting.FileSystemObject

    If oSys.FileExists(App.path & "\SPOOLER\" & glsArchivo) = False Then
        oSys.CreateTextFile (App.path & "\SPOOLER\" & glsArchivo)
    End If
    
    Set oText = oSys.OpenTextFile(App.path & "\SPOOLER\" & glsArchivo, ForWriting)

    N = 1
    Do While Not rs.EOF
        lsMonto = CStr(rs!Monto)
        lsNOmbre = Trim(rs!cPersNombre)
        'If Not rs!TpoDoc = 6 And Not rs!TpoDoc = 0 Then
        If InStr(1, lsNOmbre, "/") > 0 Then
            lsApePat = Left(lsNOmbre, InStr(1, lsNOmbre, "/") - 1)
            If InStr(1, lsNOmbre, ".") = 0 Then
                lsApeMat = Mid(lsNOmbre, InStr(1, lsNOmbre, "/") + 1, InStr(1, lsNOmbre, ",") - InStr(1, lsNOmbre, "/") - 1)
                If InStr(InStr(1, lsNOmbre, "/"), lsApeMat, "\") > 0 Then
                    lsApeMat = Replace(lsApeMat, "\", " ")
                End If
            Else
                lsApeMat = Mid(lsNOmbre, InStr(1, lsNOmbre, "\") + 1, InStr(1, lsNOmbre, ",") - InStr(1, lsNOmbre, "\") - 1)
            End If
            If InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") > 0 Then
                If InStr(InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") + 1, lsNOmbre, " ") = 0 Then
                    lsNombre1 = Mid(lsNOmbre, InStr(1, lsNOmbre, ",") + 1, InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") - InStr(InStr(1, lsNOmbre, ","), lsNOmbre, ",") - 1)
                    lsNombre2 = Trim(Mid(lsNOmbre, InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") + 1, 20))
                Else
                    lsNombre1 = Trim(Mid(lsNOmbre, InStr(1, lsNOmbre, ",") + 1, 30))
                    lsNombre2 = ""
                End If
            Else
                lsNombre1 = Trim(Mid(lsNOmbre, InStr(1, lsNOmbre, ",") + 1, 30))
                lsNombre2 = ""
            End If
            lsRazSoc = ""
        Else
            lsRazSoc = lsNOmbre
            lsNombre1 = ""
            lsNombre2 = ""
            lsApeMat = ""
            lsApePat = ""
        End If
        
        lsTexto = lsTexto & CStr(N) & "|6|" & gsRUC & "|" & psAnio & "|" & rs!Personeria & "|" & rs!TpoDoc & "|" _
                & Trim(rs!cPersIdNro) & "|" & lsMonto & "|" & lsApePat & "|" & lsApeMat & "|" & lsNombre1 & "|" & lsNombre2 & "|" & lsRazSoc & "|" & Chr(10)
        rs.MoveNext
        N = N + 1
    Loop
    oText.WriteLine lsTexto

    oText.Close
    
    Set rs = oCtaIf.GetDaotIngresos(psAnio, pnNroUit, pnTipCam)
    glsArchivo = "Ingresos.TXT"

    If oSys.FileExists(App.path & "\SPOOLER\" & glsArchivo) = False Then
        oSys.CreateTextFile (App.path & "\SPOOLER\" & glsArchivo)
    End If
    
    Set oText = oSys.OpenTextFile(App.path & "\SPOOLER\" & glsArchivo, ForWriting)

    N = 1
    lsTexto = ""
    Do While Not rs.EOF
        lsMonto = CStr(rs!Monto)
        lsNOmbre = Trim(rs!cPersNombre)
        'If Not rs!TpoDoc = 6 And Not rs!TpoDoc = 0 Then
        If InStr(1, lsNOmbre, "/") > 0 Then
            lsApePat = Left(lsNOmbre, InStr(1, lsNOmbre, "/") - 1)
            If InStr(1, lsNOmbre, ".") = 0 Then
                lsApeMat = Mid(lsNOmbre, InStr(1, lsNOmbre, "/") + 1, InStr(1, lsNOmbre, ",") - InStr(1, lsNOmbre, "/") - 1)
                If InStr(InStr(1, lsNOmbre, "/"), lsApeMat, "\") > 0 Then
                    lsApeMat = Replace(lsApeMat, "\", " ")
                End If
            Else
                lsApeMat = Mid(lsNOmbre, InStr(1, lsNOmbre, "\") + 1, InStr(1, lsNOmbre, ",") - InStr(1, lsNOmbre, "\") - 1)
            End If
            If InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") > 0 Then
                If InStr(InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") + 1, lsNOmbre, " ") = 0 Then
                    lsNombre1 = Mid(lsNOmbre, InStr(1, lsNOmbre, ",") + 1, InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") - InStr(InStr(1, lsNOmbre, ","), lsNOmbre, ",") - 1)
                    lsNombre2 = Trim(Mid(lsNOmbre, InStr(InStr(1, lsNOmbre, ","), lsNOmbre, " ") + 1, 20))
                Else
                    lsNombre1 = Trim(Mid(lsNOmbre, InStr(1, lsNOmbre, ",") + 1, 30))
                    lsNombre2 = ""
                End If
            Else
                lsNombre1 = Trim(Mid(lsNOmbre, InStr(1, lsNOmbre, ",") + 1, 30))
                lsNombre2 = ""
            End If
            lsRazSoc = ""
        Else
            lsRazSoc = lsNOmbre
            lsNombre1 = ""
            lsNombre2 = ""
            lsApeMat = ""
            lsApePat = ""
        End If
        
        lsTexto = lsTexto & CStr(N) & "|6|" & gsRUC & "|" & psAnio & "|" & rs!Personeria & "|" & rs!TpoDoc & "|" _
                & Trim(rs!cPersIdNro) & "|" & lsMonto & "|" & lsApePat & "|" & lsApeMat & "|" & lsNombre1 & "|" & lsNombre2 & "|" & lsRazSoc & "|" & Chr(10)
        rs.MoveNext
        N = N + 1
    Loop
    oText.WriteLine lsTexto

    oText.Close
End Sub
'ALPA 20090309*********************************************************
Public Sub InteresCreditosCastigados(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo ReporteAdeudadosVinculadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetInteresesCreditosCastigados(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "IntCredCastigados" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Creditos Castigados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Intereses Creditos Castigados " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Descripcion"
            xlHoja1.Cells(liLineas, 3) = "Moneda"
            xlHoja1.Cells(liLineas, 4) = "Saldo"
            xlHoja1.Cells(liLineas, 5) = "Cantidad"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
         
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
ReporteAdeudadosVinculadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub
'JUEZ 20130116 *******************************************************
Public Sub GastosCreditosCastigados(ByVal psFecha As String)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim rs As ADODB.Recordset

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String

On Error GoTo GastosCreditosCastigadosErr

    Set rs = New ADODB.Recordset
           
    Set oCtaIf = New NCajaCtaIF
    Set rs = oCtaIf.GetGastosCreditosCastigados(Format(psFecha, "yyyymmdd"))
    
    If rs Is Nothing Then
        MsgBox "No exite informacion para imprimir", vbInformation, "Aviso"
        Exit Sub
    End If
    
    glsArchivo = "GastosCredCastigados" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Creditos Castigados"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 15
            xlAplicacion.Range("B1:B1").ColumnWidth = 15
            xlAplicacion.Range("c1:c1").ColumnWidth = 30
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15

           
            xlAplicacion.Range("A1:Z100").Font.Size = 9
            xlAplicacion.Range("A1:Z100").Font.Name = "Century Gothic"
       
            xlHoja1.Cells(1, 1) = gsNomCmac
            xlHoja1.Cells(2, 1) = "Gastos Creditos Castigados " & Format(psFecha, "dd/mm/yyyy")
            
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(2, 1), xlHoja1.Cells(2, 3)).Merge True
            xlHoja1.Range(xlHoja1.Cells(1, 1), xlHoja1.Cells(1, 2)).Merge True
                 
                      
            liLineas = 4
            
            xlHoja1.Cells(liLineas, 2) = "Descripcion"
            xlHoja1.Cells(liLineas, 3) = "Moneda"
            xlHoja1.Cells(liLineas, 4) = "Saldo Gasto"
            xlHoja1.Cells(liLineas, 5) = "Cantidad"
                        
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Font.Bold = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).VerticalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas + 3, 1)).Merge True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).EntireRow.AutoFit
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).WrapText = True
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 1), xlHoja1.Cells(liLineas, 5)).Font.Bold = True
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Borders.LineStyle = 1
            xlHoja1.Range(xlHoja1.Cells(liLineas, 2), xlHoja1.Cells(liLineas, 5)).Interior.ColorIndex = 36 '.Color = RGB(159, 206, 238)
            
            liLineas = liLineas + 1
                 
         Do Until rs.EOF
            xlHoja1.Cells(liLineas, 2) = rs(0)
            xlHoja1.Cells(liLineas, 3) = rs(1)
            xlHoja1.Cells(liLineas, 4) = rs(2)
            xlHoja1.Cells(liLineas, 5) = rs(3)
            
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 3)).Style = "Comma"
            xlHoja1.Range(xlHoja1.Cells(liLineas, 8), xlHoja1.Cells(liLineas, 8)).Style = "Comma"
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 3), xlHoja1.Cells(liLineas, 5)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 7), xlHoja1.Cells(liLineas, 7)).HorizontalAlignment = xlCenter
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 11)).HorizontalAlignment = xlCenter
            
            xlHoja1.Range(xlHoja1.Cells(liLineas, 6), xlHoja1.Cells(liLineas, 6)).HorizontalAlignment = xlRight
            xlHoja1.Range(xlHoja1.Cells(liLineas, 10), xlHoja1.Cells(liLineas, 10)).HorizontalAlignment = xlRight
            
            liLineas = liLineas + 1
            rs.MoveNext
        Loop

        ExcelCuadro xlHoja1, 2, 4, 5, liLineas - 1
        
        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1
    
        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")
  
    
Set oCtaIf = Nothing
    Exit Sub
GastosCreditosCastigadosErr:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub
'END JUEZ ************************************************************
'*********************** REPORTE 25 BRGO 08/2010 *********************
'Public Sub generaReporte25(pdFecha As Date)
'
'    'Dim oCtaSal As NCtasaldo
'    Dim oCtaSal As DCtaSaldo
'
'    Dim rs As ADODB.Recordset
'    Dim rsAument As ADODB.Recordset
'    Dim rsDismin As ADODB.Recordset
'
'    Dim lnSaldoIni      As Double
'    Dim lnSaldoIni3     As Double
'    Dim lnSaldoFin      As Double
'    Dim lsCta           As String
'    Dim nFila           As Integer
'    Dim lnMonCor        As Double
'    Dim lnMonGra        As Double
'    Dim lnMonMed        As Double
'    Dim lnMonPeq        As Double
'    Dim lnMonMic        As Double
'    Dim lnMonCon        As Double
'    Dim lnMonHip        As Double
'    Dim lnSaldoEfe      As Double
'    Dim lnSaldoEfeInt   As Double
'    Dim lnSalReexMe     As Double
'    Dim lnSalIntReexMe  As Double
'    Dim lnSalTotalDism  As Double
'
'    Dim lnMonCondCor    As Double
'    Dim lnMonCondGra    As Double
'    Dim lnMonCondMed    As Double
'    Dim lnMonCondPeq    As Double
'    Dim lnMonCondMic    As Double
'    Dim lnMonCondCon    As Double '*** PEAC 20130617
'    Dim lnMonCondHip    As Double
'    Dim lnDisminCond    As Double
'
'    Dim lnSalConReexMe  As Double
'
'    Dim ldFecha   As Date
'    Dim sConec As String
'    Dim lsArchivo As String
'    Dim lsArchivo1 As String
'    Dim lsNomHoja As String
'    Dim lbExisteHoja As Boolean
'    Dim RutaArchivo As String
'    Dim AuxValor1 As Boolean
'    Dim AuxValor2 As Boolean
'    Dim AuxValor3 As Boolean
'    Dim AuxValor4 As Boolean
'    Dim AuxValor5 As Boolean
'    Dim AuxValor6 As Boolean
'
'    Dim fs As Scripting.FileSystemObject
'    Set fs = New Scripting.FileSystemObject
'    Set xlAplicacion = New Excel.Application
'
'    lsArchivo = "Reporte25_SBS"
'    lsArchivo1 = "\spooler\Reporte25" & Format(gdFecha, "YYYYMM") & gsCodUser & ".xls"
'    lsNomHoja = "Reporte25"
'    RutaArchivo = App.path & "\FormatoCarta\" & lsArchivo & ".xls"
'    If fs.FileExists(RutaArchivo) Then
'        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\FormatoCarta\" & lsArchivo & ".xls")
'    Else
'        MsgBox "No Existe Plantilla en Carpeta FormatoCarta, Consulte con el Area de  TI", vbInformation, "Advertencia"
'        Exit Sub
'    End If
'
'    For Each xlHoja1 In xlLibro.Worksheets
'       If xlHoja1.Name = lsNomHoja Then
'            xlHoja1.Activate
'            lbExisteHoja = True
'            Exit For
'       End If
'    Next
'    If lbExisteHoja = False Then
'        Set xlHoja1 = xlLibro.Worksheets
'        xlHoja1.Name = lsNomHoja
'    End If
'
'    xlHoja1.Cells(6, 1) = "INFORMACION AL " & Format(pdFecha, "DD MMMM YYYY")
'
'    Set rs = New ADODB.Recordset
'
'    'Set oCtaSal = New NCtasaldo
'    Set oCtaSal = New DCtaSaldo
'
'    '*** PEAC 20130617
'    'Call oCtaSal.GetGeneraDatosRep25(Format(pdFecha, "yyyymmdd"), rsAument, rsDismin)
'    Call oCtaSal.GetGeneraDatosRep25nuevo(Format(pdFecha, "yyyymmdd"), rsAument, rsDismin)
'    Set oCtaSal = Nothing
'    '*** FIN PEAC
'
'    nFila = 19
'    AuxValor1 = False: AuxValor2 = False
'    AuxValor3 = False: AuxValor4 = False
'    AuxValor5 = False: AuxValor6 = False
'
'    Do While Not rsAument.EOF
'        If rsAument!TipoRep = 1 Then
'            lnSaldoIni = rsAument!SaldoIni
'            lnSaldoFin = rsAument!SaldoFin
'            lnMonCor = rsAument!Corpor
'            lnMonGra = rsAument!GraEmp
'            lnMonMed = rsAument!MedEmp
'            lnMonPeq = rsAument!PeqEmp
'            lnMonMic = rsAument!MicEmp
'            lnMonCon = rsAument!Consum
'            lnMonHip = rsAument!Hipotecario
'
'        End If
'        If rsAument!TipoRep = 2 Then
'            lnSaldoIni3 = rsAument!SaldoIni
'            lnMonCondCor = rsAument!Corpor
'            lnMonCondGra = rsAument!GraEmp
'            lnMonCondMed = rsAument!MedEmp
'            lnMonCondPeq = rsAument!PeqEmp
'            lnMonCondMic = rsAument!MicEmp
'            lnMonCondCon = rsAument!Consum
'            lnMonCondHip = rsAument!Hipotecario
'            lnDisminCond = rsAument!Dismin
'        End If
'        rsAument.MoveNext
'    Loop
'    Do While Not rsDismin.EOF
'        lnSaldoEfe = rsDismin!Recuperaciones
'        lnSalReexMe = rsDismin!Reexpresion
'        lnSalTotalDism = rsDismin!TotalDisminuc
'        rsDismin.MoveNext
'    Loop
'
'        xlHoja1.Cells(nFila, 1) = lnSaldoIni
'        xlHoja1.Cells(nFila, 2) = lnMonCor
'        xlHoja1.Cells(nFila, 3) = lnMonGra
'        xlHoja1.Cells(nFila, 4) = lnMonMed
'        xlHoja1.Cells(nFila, 5) = lnMonPeq
'        xlHoja1.Cells(nFila, 6) = lnMonMic
'        xlHoja1.Cells(nFila, 7) = lnMonCon
'        xlHoja1.Cells(nFila, 8) = lnMonHip '*** PEAC 20130617
'        xlHoja1.Cells(nFila, 9) = lnSaldoEfe
'        xlHoja1.Cells(nFila, 16) = Abs(lnSalReexMe)
'        xlHoja1.Cells(nFila, 17) = lnSaldoFin
'        If lnSalReexMe > 0 Then
'            'xlHoja1.Cells(nFila, 15) = (lnSaldoIni + lnMonCor + lnMonGra + lnMonMed + lnMonPeq + lnMonMic + lnMonCon - lnSaldoEfe) + lnSalReexMe - lnSaldoFin
'            xlHoja1.Cells(nFila, 15) = lnSalTotalDism - (lnSaldoEfe + lnSalReexMe)
'        Else
'            'xlHoja1.Cells(nFila, 15) = (lnSaldoIni + lnMonCor + lnMonGra + lnMonMed + lnMonPeq + lnMonMic + lnMonCon - lnSaldoEfe) - Abs(lnSalReexMe) - lnSaldoFin
'            xlHoja1.Cells(nFila, 15) = lnSalTotalDism - (lnSaldoEfe - Abs(lnSalReexMe))
'        End If
'        nFila = nFila + 7
'
'        xlHoja1.Cells(nFila, 1) = lnSaldoIni3
'        xlHoja1.Cells(nFila, 2) = lnMonCondCor
'        xlHoja1.Cells(nFila, 3) = lnMonCondGra
'        xlHoja1.Cells(nFila, 4) = lnMonCondMed
'        xlHoja1.Cells(nFila, 5) = lnMonCondPeq
'        xlHoja1.Cells(nFila, 6) = lnMonCondMic
'        xlHoja1.Cells(nFila, 7) = lnMonCondCon
'        xlHoja1.Cells(nFila, 8) = lnMonCondHip '*** PEAC 20130617
'        xlHoja1.Cells(nFila, 9) = lnDisminCond
'        xlHoja1.Cells(nFila, 10) = Abs(lnSalConReexMe)
'        If lnSalConReexMe > 0 Then
'            xlHoja1.Cells(nFila, 11) = (lnSaldoIni3 + lnMonCondCor + lnMonCondGra + lnMonCondMed + lnMonCondPeq + lnMonCondMic + lnMonCondCon + lnMonCondHip) - lnDisminCond + lnSalConReexMe '*** PEAC-SE AMUNETO LA VARIABLE lnMonCondHip
'        Else
'            xlHoja1.Cells(nFila, 11) = (lnSaldoIni3 + lnMonCondCor + lnMonCondGra + lnMonCondMed + lnMonCondPeq + lnMonCondMic + lnMonCondCon + lnMonCondHip) - lnDisminCond - Abs(lnSalConReexMe) '*** PEAC-SE AMUNETO LA VARIABLE lnMonCondHip
'        End If
'
'
'    xlHoja1.SaveAs App.path & lsArchivo1
'    xlAplicacion.Visible = True
'    xlAplicacion.Windows(1).Visible = True
'    Set xlAplicacion = Nothing
'    Set xlLibro = Nothing
'    Set xlHoja1 = Nothing
'End Sub

'Public Sub generaReporte25(pdFecha As Date)
Public Sub generaReporte25(lsMes As String, lsAnio As String) '** PASI 20130914

    Dim oCtaSal As NCtasaldo
    Dim rs As ADODB.Recordset
    Dim rsAument As ADODB.Recordset
    Dim rsDismin As ADODB.Recordset
        
    Dim lnSaldoIni      As Double
    Dim lnSaldoIni3     As Double
    Dim lnSaldoFin      As Double
    Dim lsCta           As String
    Dim nFila           As Integer
    Dim lnMonCor        As Double
    Dim lnMonGra        As Double
    Dim lnMonMed        As Double
    Dim lnMonPeq        As Double
    Dim lnMonMic        As Double
    Dim lnMonCon        As Double
    Dim lnMonHip        As Double 'agregado por pasi20131213 TIC1312130006
    Dim lnSaldoEfe      As Double
    Dim lnSaldoEfeInt   As Double
    Dim lnSalReexMe     As Double
    Dim lnSalIntReexMe  As Double
    Dim lnSalTotalDism  As Double
    
    Dim lnMonCondCor    As Double
    Dim lnMonCondGra    As Double
    Dim lnMonCondMed    As Double
    Dim lnMonCondPeq    As Double
    Dim lnMonCondMic    As Double
    Dim lnMonCondCon    As Double
    Dim lnDisminCond    As Double
    
    Dim lnSalConReexMe  As Double
    Dim lnSaldoOtros As Double 'NAGL 20181013 Según TIC1810150004
    Dim ldFecha   As Date
    Dim sConec As String
    Dim lsArchivo As String
    Dim lsArchivo1 As String
    Dim lsNomHoja As String
    Dim lbExisteHoja As Boolean
    Dim RutaArchivo As String
    Dim AuxValor1 As Boolean
    Dim AuxValor2 As Boolean
    Dim AuxValor3 As Boolean
    Dim AuxValor4 As Boolean
    Dim AuxValor5 As Boolean
    Dim AuxValor6 As Boolean
    
    Dim fs As Scripting.FileSystemObject
    Set fs = New Scripting.FileSystemObject
    Set xlAplicacion = New Excel.Application
    
    'lsArchivo = "Reporte25_SBS"
    lsArchivo = "Reporte25_SBS_Nuevo" '** PASI 20130914 Segun TI-ERS128-2013
    lsArchivo1 = "\spooler\Reporte25" & Format(gdFecha, "YYYYMM") & gsCodUser & ".xls"
    lsNomHoja = "Reporte25"
    RutaArchivo = App.path & "\FormatoCarta\" & lsArchivo & ".xls"
    If fs.FileExists(RutaArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\FormatoCarta\" & lsArchivo & ".xls")
    Else
        MsgBox "No Existe Plantilla en Carpeta FormatoCarta, Consulte con el Area de  TI", vbInformation, "Advertencia"
        Exit Sub
    End If

    For Each xlHoja1 In xlLibro.Worksheets
       If xlHoja1.Name = lsNomHoja Then
            xlHoja1.Activate
            lbExisteHoja = True
            Exit For
       End If
    Next
    If lbExisteHoja = False Then
        Set xlHoja1 = xlLibro.Worksheets
        xlHoja1.Name = lsNomHoja
    End If
   
    'xlHoja1.Cells(6, 1) = "INFORMACION AL " & Format(pdFecha, "DD MMMM YYYY")
    xlHoja1.Cells(14, 1) = "INFORMACION A " & dameNombreMes(Format(lsMes, "##00")) & " DEL AÑO " & lsAnio  '** PASI 20130914

    Set rs = New ADODB.Recordset
    Set oCtaSal = New NCtasaldo
    Call oCtaSal.GetGeneraDatosRep25(Format(lsMes, "##00"), lsAnio, rsAument, rsDismin) '** PASI 20130914
    'Call oCtaSal.GetGeneraDatosRep25(Format(pdFecha, "yyyymmdd"), rsAument, rsDismin)
    Set oCtaSal = Nothing
    'nFila = 19
    nFila = 31 '** PASI
    AuxValor1 = False: AuxValor2 = False
    AuxValor3 = False: AuxValor4 = False
    AuxValor5 = False: AuxValor6 = False
   
    Do While Not rsAument.EOF
        If rsAument!TipoRep = 1 Then
            lnSaldoIni = rsAument!SaldoIni
            lnSaldoFin = rsAument!SaldoFin
            lnMonCor = rsAument!Corpor
            lnMonGra = rsAument!GraEmp
            lnMonMed = rsAument!MedEmp
            lnMonPeq = rsAument!PeqEmp
            lnMonMic = rsAument!MicEmp
            lnMonCon = rsAument!Consum
            lnMonHip = rsAument!Hipotecario 'agregado por pasi20131213 TIC1312130006
        End If
        If rsAument!TipoRep = 2 Then
            lnSaldoIni3 = rsAument!SaldoIni
            lnMonCondCor = rsAument!Corpor
            lnMonCondGra = rsAument!GraEmp
            lnMonCondMed = rsAument!MedEmp
            lnMonCondPeq = rsAument!PeqEmp
            lnMonCondMic = rsAument!MicEmp
            lnMonCondCon = rsAument!Consum
            lnDisminCond = rsAument!Dismin
        End If
        rsAument.MoveNext
    Loop
    Do While Not rsDismin.EOF
        lnSaldoEfe = rsDismin!RecupEfectivo 'NAGL 20181013 Cambió de Recuperaciones a RecupEfectivo
        lnSaldoOtros = rsDismin!RecupOtros 'NAGL 20181013 Según TIC1810150004
        lnSalReexMe = rsDismin!Reexpresion
        lnSalTotalDism = rsDismin!TotalDisminuc
        rsDismin.MoveNext
    Loop
           
        xlHoja1.Cells(nFila, 1) = lnSaldoIni
        xlHoja1.Cells(nFila, 2) = lnMonCor
        xlHoja1.Cells(nFila, 3) = lnMonGra
        xlHoja1.Cells(nFila, 4) = lnMonMed
        xlHoja1.Cells(nFila, 5) = lnMonPeq
        xlHoja1.Cells(nFila, 6) = lnMonMic
        xlHoja1.Cells(nFila, 8) = lnMonHip 'agregado por pasi20131213 TIC1312130006
        xlHoja1.Cells(nFila, 7) = lnMonCon
        xlHoja1.Cells(nFila, 9) = lnSaldoEfe
        xlHoja1.Cells(nFila, 15) = lnSaldoOtros 'NAGL 20181013 Según TIC1810150004
        xlHoja1.Cells(nFila, 16) = Abs(lnSalReexMe)
        xlHoja1.Cells(nFila, 17) = lnSaldoFin
        If lnSalReexMe > 0 Then
            'xlHoja1.Cells(nFila, 15) = (lnSaldoIni + lnMonCor + lnMonGra + lnMonMed + lnMonPeq + lnMonMic + lnMonCon - lnSaldoEfe) + lnSalReexMe - lnSaldoFin
            'xlHoja1.Cells(nFila, 15) = lnSalTotalDism - (lnSaldoEfe + lnSalReexMe) 'Comentado xPASI20150623ERS0292015
        Else
            'xlHoja1.Cells(nFila, 15) = (lnSaldoIni + lnMonCor + lnMonGra + lnMonMed + lnMonPeq + lnMonMic + lnMonCon - lnSaldoEfe) - Abs(lnSalReexMe) - lnSaldoFin
           ' xlHoja1.Cells(nFila, 15) = lnSalTotalDism - (lnSaldoEfe - Abs(lnSalReexMe)) 'Comentado xPASI20150623ERS0292015
        End If
        nFila = nFila + 7

        xlHoja1.Cells(nFila, 1) = lnSaldoIni3
        xlHoja1.Cells(nFila, 2) = lnMonCondCor
        xlHoja1.Cells(nFila, 3) = lnMonCondGra
        xlHoja1.Cells(nFila, 4) = lnMonCondMed
        xlHoja1.Cells(nFila, 5) = lnMonCondPeq
        xlHoja1.Cells(nFila, 6) = lnMonCondMic
        xlHoja1.Cells(nFila, 7) = lnMonCondCon
        xlHoja1.Cells(nFila, 9) = lnDisminCond
        xlHoja1.Cells(nFila, 10) = Abs(lnSalConReexMe)
        If lnSalConReexMe > 0 Then
            xlHoja1.Cells(nFila, 11) = (lnSaldoIni3 + lnMonCondCor + lnMonCondGra + lnMonCondMed + lnMonCondPeq + lnMonCondMic + lnMonCondCon) - lnDisminCond + lnSalConReexMe
        Else
            xlHoja1.Cells(nFila, 11) = (lnSaldoIni3 + lnMonCondCor + lnMonCondGra + lnMonCondMed + lnMonCondPeq + lnMonCondMic + lnMonCondCon) - lnDisminCond - Abs(lnSalConReexMe)
        End If
    xlHoja1.SaveAs App.path & lsArchivo1
    xlAplicacion.Visible = True
    xlAplicacion.Windows(1).Visible = True
    Set xlAplicacion = Nothing
    Set xlLibro = Nothing
    Set xlHoja1 = Nothing
End Sub

'*********************** FIN REPORTE 25 ***********************************

'*** BRGO 05/05/2011
Public Sub generaAnexo4B_VentaBsAdjudRecup(pdFecha As Date)

    Dim oCtaSal As NCtasaldo
    Dim rs As ADODB.Recordset
   
    Dim ldFecha   As Date
    Dim sConec As String
    Dim lsArchivo As String
    Dim lsArchivo1 As String
    Dim lsNomHoja As String
    Dim lbExisteHoja As Boolean
    Dim RutaArchivo As String
    Dim nFila As Integer
    Dim OtraAgencia As Boolean
    Dim AgenciaAct As Integer: Dim GrupoAct As Integer
    Dim I As Integer
    'PASI*********************************
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim Progress As clsProgressBar
    Dim nCont As Integer
    'END PASI**************************
    
    Dim fs As Scripting.FileSystemObject
    Set fs = New Scripting.FileSystemObject
    Set xlAplicacion = New Excel.Application

    On Error GoTo ErrReporte
    lsArchivo = "FormatoAnexo4B"
    lsArchivo1 = "\spooler\Anexo4B" & Format(gdFecha, "YYYYMM") & gsCodUser & ".xls"
    lsNomHoja = "información de ventas"
    RutaArchivo = App.path & "\FormatoCarta\" & lsArchivo & ".xls"
    If fs.FileExists(RutaArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\FormatoCarta\" & lsArchivo & ".xls")
    Else
        MsgBox "No Existe Plantilla en Carpeta FormatoCarta, Consulte con el Area de  TI", vbInformation, "Advertencia"
        Exit Sub
    End If

    For Each xlHoja1 In xlLibro.Worksheets
       If xlHoja1.Name = lsNomHoja Then
            xlHoja1.Activate
            lbExisteHoja = True
            Exit For
       End If
    Next
    If lbExisteHoja = False Then
        Set xlHoja1 = xlLibro.Worksheets
        xlHoja1.Name = lsNomHoja
    End If
   
    Set rs = New ADODB.Recordset
           
    Set oCtaSal = New NCtasaldo
    Set rs = oCtaSal.GetGeneraDatosAnexo4B(pdFecha)
    xlHoja1.Range("G7").value = "INFORMACION AL " & Format(pdFecha, "DD MMMM YYYY")
    nFila = 18
    OtraAgencia = False
    If Not rs.EOF Then 'PASIERS0142015**********************
        nCont = rs.RecordCount
        Set Progress = New clsProgressBar
        Progress.ShowForm frmReportes
        Progress.Max = nCont
        TituloProgress = "Anexo 4-B: Venta o Entrega en arrendamiento de bienes adjudicados."
        MensajeProgress = "Se esta generando el reporte. Por favor espere..."
        Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    End If
    nCont = 0 'PASIERS0142015
    Do While Not rs.EOF
        nCont = nCont + 1 'PASIERS0142015
        If (AgenciaAct <> rs!cAgeCod Or GrupoAct <> rs!Tipo) Then
            OtraAgencia = True
        End If
        If OtraAgencia = True Then
            nFila = nFila + 1
            xlHoja1.Range("A" & nFila).Font.Bold = True
            If rs!Tipo = 1 Then
                xlHoja1.Cells(nFila, 1) = rs!cDescripcion & "-" & UCase(rs!cAgeDescripcion)
            ElseIf rs!Tipo = 3 Then 'PASI20150626 ERS0142015 para Joyas Adjudicadas Vendidas
                xlHoja1.Cells(nFila, 1) = rs!cDescripcion & "-" & UCase(rs!cAgeDescripcion)
            Else
                xlHoja1.Cells(nFila, 1) = IIf(Left(rs!cTipoBien, 1) = "A", "Inmuebles - ", "Productos - ") & UCase(rs!cAgeDescripcion)
            End If
            nFila = nFila + 1
        Else
            If GrupoAct <> rs!Tipo Then
                nFila = nFila + 1
                xlHoja1.Range("A" & nFila).Font.Bold = True
                xlHoja1.Cells(nFila, 1) = IIf(Left(rs!cTipoBien, 1) = "A", "Inmuebles - ", "Productos - ") & UCase(rs!cAgeDescripcion)
                nFila = nFila + 1
            End If
        End If
        AgenciaAct = rs!cAgeCod
        GrupoAct = rs!Tipo
        OtraAgencia = False
        
        If rs!Tipo = 1 Then
            xlHoja1.Cells(nFila, 1) = rs!cDescripcion & " De " & Format(CDate(rs!FechaAdjud), "MMMM YYYY")
        ElseIf rs!Tipo = 3 Then 'PASI20150626 ERS0142015 para Joyas Adjudicadas Vendidas
            xlHoja1.Cells(nFila, 1) = rs!cDescripcion & " De " & Format(CDate(rs!FechaAdjud), "MMMM YYYY")
        Else
            xlHoja1.Cells(nFila, 1) = rs!cDescripcion
        End If
        xlHoja1.Cells(nFila, 2) = rs!cTipoBien
        xlHoja1.Cells(nFila, 3) = rs!nTipoAdjud
        xlHoja1.Cells(nFila, 4) = Format(CDate(rs!FechaAdjud), "dd/MM/yyyy")
        xlHoja1.Cells(nFila, 5) = Trim(rs!IdDeudor)
        xlHoja1.Cells(nFila, 6) = Round(rs!TotalAdjud, 2)
        xlHoja1.Cells(nFila, 7) = Round(rs!CapAdjudic, 2)
        xlHoja1.Cells(nFila, 8) = Round(rs!IntGastos, 2)
        xlHoja1.Cells(nFila, 9) = Round(rs!ProvInicial, 2)
        xlHoja1.Cells(nFila, 10) = Round(rs!ProvMensual, 2)
        xlHoja1.Cells(nFila, 12) = Round(rs!TotalProv, 2)
        xlHoja1.Cells(nFila, 13) = rs!dFecTasacion
        xlHoja1.Cells(nFila, 14) = Round(rs!nValTasacion, 2)
        xlHoja1.Cells(nFila, 15) = Round(rs!ValorNeto, 2)
        xlHoja1.Cells(nFila, 17) = rs!FechaVenta
        xlHoja1.Cells(nFila, 18) = Trim(rs!IdDeudor)
        xlHoja1.Cells(nFila, 20) = "Contado"
        xlHoja1.Cells(nFila, 21) = rs!RecupVenta
        xlHoja1.Cells(nFila, 23) = rs!TotalProv
        nFila = nFila + 1
        Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue  'PASI20150626 ERS0142015
        rs.MoveNext
    Loop
          
    xlHoja1.Cells(nFila, 1) = "TOTAL GENERAL"
    xlHoja1.Cells(nFila, 6) = "=SUM(F18:F" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 7) = "=SUM(G18:G" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 8) = "=SUM(H18:H" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 9) = "=SUM(I18:I" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 10) = "=SUM(J18:J" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 12) = "=SUM(L18:L" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 15) = "=SUM(O18:O" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 21) = "=SUM(U18:U" & nFila - 1 & ")"
    xlHoja1.Cells(nFila, 23) = "=SUM(W18:W" & nFila - 1 & ")"
    xlHoja1.Range("A" & nFila & ":W" & nFila).Cells.Interior.Color = RGB(197, 217, 241)
    xlHoja1.Range("A" & nFila & ":W" & nFila).Font.Bold = True
          
    For I = 1 To 25
        xlHoja1.Range(Chr(64 + I) & "18:" & Chr(64 + I) & nFila).Borders(xlEdgeLeft).LineStyle = xlContinuous
        xlHoja1.Range(Chr(64 + I) & "18:" & Chr(64 + I) & nFila).Borders(xlEdgeLeft).Weight = xlThin
    Next
'    xlHoja1.Range("X18:X" & nFila).Borders(xlEdgeRight).LineStyle = xlContinuous
'    xlHoja1.Range("X18:X" & nFila).Borders(xlEdgeRight).Weight = xlThin
    xlHoja1.Range("A" & nFila & ":X" & nFila).Borders(xlEdgeTop).LineStyle = xlContinuous
    xlHoja1.Range("A" & nFila & ":X" & nFila).Borders(xlEdgeTop).Weight = xlThin
    xlHoja1.Range("A" & nFila & ":X" & nFila).Borders(xlEdgeBottom).LineStyle = xlContinuous
    xlHoja1.Range("X" & nFila & ":X" & nFila).Borders(xlEdgeBottom).Weight = xlThin
    If rs.RecordCount > 0 Then 'PASI20150626 ERS0142015
        Progress.CloseForm frmReportes
    End If
    xlHoja1.SaveAs App.path & lsArchivo1
    xlAplicacion.Visible = True
    xlAplicacion.Windows(1).Visible = True
    Set xlAplicacion = Nothing
    Set xlLibro = Nothing
    Set xlHoja1 = Nothing
    Exit Sub
ErrReporte:
        If lbExisteHoja Then
              ExcelEnd App.path & lsArchivo1, xlAplicacion, xlLibro, xlHoja1, False
        End If
End Sub

Public Sub generaAnexo4A_BienesAdjudRecup(pdFecha As Date)

    Dim oCtaSal As NCtasaldo
    Dim rs As ADODB.Recordset
   
    Dim ldFecha   As Date
    Dim sConec As String
    Dim lsArchivo As String
    Dim lsArchivo1 As String
    Dim lsNomHoja As String
    Dim lbExisteHoja As Boolean
    Dim RutaArchivo As String
    Dim nFila As Integer
    Dim bTotal As Boolean
    Dim AgenciaAct As Integer
    Dim GrupoAct As String
    Dim Ini As Integer: Dim Fin As Integer
    Dim I As Integer
     'PASI*********************************
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim Progress As clsProgressBar
    Dim nCont As Integer
    'END PASI**************************
    
    Dim fs As Scripting.FileSystemObject
    Set fs = New Scripting.FileSystemObject
    Set xlAplicacion = New Excel.Application
    On Error GoTo ErrReporte 'PASI******************
    lsArchivo = "FormatoAnexo4A"
    lsArchivo1 = "\spooler\Anexo4A" & Format(gdFecha, "YYYYMM") & gsCodUser & ".xls"
    lsNomHoja = "informacion de adjudicaciones"
    RutaArchivo = App.path & "\FormatoCarta\" & lsArchivo & ".xls"
    If fs.FileExists(RutaArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\FormatoCarta\" & lsArchivo & ".xls")
    Else
        MsgBox "No Existe Plantilla en Carpeta FormatoCarta, Consulte con el Area de TI", vbInformation, "Advertencia"
        Exit Sub
    End If

    For Each xlHoja1 In xlLibro.Worksheets
       If xlHoja1.Name = lsNomHoja Then
            xlHoja1.Activate
            lbExisteHoja = True
            Exit For
       End If
    Next
    If lbExisteHoja = False Then
        Set xlHoja1 = xlLibro.Worksheets
        xlHoja1.Name = lsNomHoja
    End If
   
    Set rs = New ADODB.Recordset
           
    Set oCtaSal = New NCtasaldo
    Set rs = oCtaSal.GetGeneraDatosAnexo4A(pdFecha)
    xlHoja1.Range("B6").value = "INFORMACION AL " & Format(pdFecha, "DD MMMM YYYY")

    nFila = 14
    Ini = nFila + 3: Fin = nFila
    bTotal = False
    If Not rs.EOF Then 'PASIERS0142015**********************
        nCont = rs.RecordCount
        Set Progress = New clsProgressBar
        Progress.ShowForm frmReportes
        Progress.Max = nCont
        TituloProgress = "Anexo 4-B: Venta o Entrega en arrendamiento de bienes adjudicados."
        MensajeProgress = "Se esta generando el reporte. Por favor espere..."
        Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    End If
    nCont = 0 'PASIERS0142015
    Do While Not rs.EOF
        nCont = nCont + 1 'PASIERS0142015
        If GrupoAct <> rs!cAgeCod & rs!Grupo Then
            nFila = nFila + 2
            xlHoja1.Range("A" & nFila).Font.Bold = True
            xlHoja1.Cells(nFila, 1) = UCase(rs!cAgeDescripcion) & " - " & UCase(rs!Grupo)
            nFila = nFila + 1
            If bTotal = True Then
                xlHoja1.Cells(Fin, 1) = "* TOTAL"
                xlHoja1.Cells(Fin, 6) = "=SUM(F" & Ini & ":" & "F" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 7) = "=SUM(G" & Ini & ":" & "G" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 8) = "=SUM(H" & Ini & ":" & "H" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 10) = "=SUM(J" & Ini & ":" & "J" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 11) = "=SUM(K" & Ini & ":" & "K" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 13) = "=SUM(M" & Ini & ":" & "M" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 15) = "=SUM(O" & Ini & ":" & "O" & Fin - 1 & ")"
                xlHoja1.Cells(Fin, 16) = "=SUM(P" & Ini & ":" & "P" & Fin - 1 & ")"
                xlHoja1.Range("A" & Fin & ":Q" & Fin).Font.Bold = True
                Ini = nFila
                xlHoja1.Range("A" & Fin & ":Q" & Fin).Cells.Interior.Color = RGB(219, 238, 243)
                bTotal = False
            End If
            GrupoAct = rs!cAgeCod & rs!Grupo
        Else
            If rs!Tipo = 1 Then
                xlHoja1.Cells(nFila, 1) = rs!cDescripcion & " De " & Format(CDate(rs!FechaAdjud), "MMMM YYYY")
            Else
                xlHoja1.Cells(nFila, 1) = Trim(rs!cDescripcion)
            End If
            xlHoja1.Cells(nFila, 2) = rs!Origen
            xlHoja1.Cells(nFila, 3) = rs!nTipoAdjud
            xlHoja1.Cells(nFila, 4) = Format(CDate(rs!FechaAdjud), "dd/MM/yyyy")
            xlHoja1.Cells(nFila, 5) = rs!IdDeudor
            xlHoja1.Cells(nFila, 6) = Round(rs!TotalAdjud, 2)
            xlHoja1.Cells(nFila, 7) = Round(rs!CapAdjudic, 2)
            xlHoja1.Cells(nFila, 8) = Round(rs!IntGastos, 2)
            
            xlHoja1.Cells(nFila, 10) = Round(rs!ProvInicial, 2)
            xlHoja1.Cells(nFila, 11) = Round(rs!ProvMensual, 2)
            xlHoja1.Cells(nFila, 13) = Round(rs!TotalProv, 2)
            xlHoja1.Cells(nFila, 14) = rs!dFecTasacion
            xlHoja1.Cells(nFila, 15) = Round(rs!nValTasacion, 2)
            xlHoja1.Cells(nFila, 16) = Round(rs!ValorNeto, 2)
            nFila = nFila + 1
            bTotal = True
            rs.MoveNext
        End If
        Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue  'PASI20150626 ERS0142015
        Fin = nFila
    Loop
    
    For I = 1 To 18
        xlHoja1.Range(Chr(64 + I) & "16:" & Chr(64 + I) & nFila + 1).Borders(xlEdgeLeft).LineStyle = xlContinuous
        xlHoja1.Range(Chr(64 + I) & "16:" & Chr(64 + I) & nFila + 1).Borders(xlEdgeLeft).Weight = xlThin
    Next
    
    xlHoja1.Cells(Fin, 1) = "* TOTAL"
    xlHoja1.Cells(Fin, 6) = "=SUM(F" & Ini & ":" & "F" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 7) = "=SUM(G" & Ini & ":" & "G" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 8) = "=SUM(H" & Ini & ":" & "H" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 10) = "=SUM(J" & Ini & ":" & "J" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 11) = "=SUM(K" & Ini & ":" & "K" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 13) = "=SUM(M" & Ini & ":" & "M" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 15) = "=SUM(O" & Ini & ":" & "O" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 16) = "=SUM(P" & Ini & ":" & "P" & Fin - 1 & ")"
    xlHoja1.Range("A" & Fin & ":Q" & Fin).Font.Bold = True
    xlHoja1.Range("A" & Fin & ":Q" & Fin).Cells.Interior.Color = RGB(219, 238, 243)
        
    Fin = Fin + 1
    xlHoja1.Cells(Fin, 1) = "*** TOTAL GENERAL"
    xlHoja1.Range("F" & Fin).Formula = "= SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",F16:" & "F" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 7) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",G16:" & "G" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 8) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",H16:" & "H" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 10) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",J16:" & "J" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 11) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",K16:" & "K" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 13) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",M16:" & "M" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 15) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",O16:" & "O" & Fin - 1 & ")"
    xlHoja1.Cells(Fin, 16) = "=SUMIF(A16:A" & Fin - 1 & ",""*TOTAL"",P16:" & "P" & Fin - 1 & ")"
    xlHoja1.Range("A" & Fin & ":Q" & Fin).Font.Bold = True
    xlHoja1.Range("A" & Fin & ":Q" & Fin).Cells.Interior.Color = RGB(184, 204, 245)
   
    xlHoja1.Range("Q18:Q" & nFila + 1).Borders(xlEdgeRight).LineStyle = xlContinuous
    xlHoja1.Range("Q18:Q" & nFila + 1).Borders(xlEdgeRight).Weight = xlThin
    xlHoja1.Range("A" & nFila + 1 & ":Q" & nFila + 1).Borders(xlEdgeTop).LineStyle = xlContinuous
    xlHoja1.Range("A" & nFila + 1 & ":Q" & nFila + 1).Borders(xlEdgeTop).Weight = xlThin
    xlHoja1.Range("A" & nFila + 1 & ":Q" & nFila + 1).Borders(xlEdgeBottom).LineStyle = xlContinuous
    xlHoja1.Range("X" & nFila + 1 & ":Q" & nFila + 1).Borders(xlEdgeBottom).Weight = xlThin
    If rs.RecordCount > 0 Then 'PASI20150626 ERS0142015
        Progress.CloseForm frmReportes
    End If
    xlHoja1.SaveAs App.path & lsArchivo1
    xlAplicacion.Visible = True
    xlAplicacion.Windows(1).Visible = True
    Set xlAplicacion = Nothing
    Set xlLibro = Nothing
    Set xlHoja1 = Nothing
Exit Sub
ErrReporte:
        If lbExisteHoja Then
              ExcelEnd App.path & lsArchivo1, xlAplicacion, xlLibro, xlHoja1, False
        End If
End Sub

'***** End BRGO ********************************
'EJVG20120901 ***
Public Sub generaAnexo4A_BienesAdjudRecup_SUCAVE(ByVal pdFecha As Date)
    Dim fs As Scripting.FileSystemObject
    Dim tsArchivo As TextStream
    Dim oCtaSal As NCtasaldo
    Dim rs As ADODB.Recordset
    Dim lsArchivo As String
    Dim lnFila As Integer
    
    '*** Variables Archivo ***
    Dim lsCodFila As String * 6
    Dim lsFechaVencProrroga As String * 8
    Dim lsValorNetoLibros As String * 15
    Dim lsObservaciones As String * 60
    'Datos del Bien
    Dim lsDesc_Bien As String * 100
    Dim lsTpo_Bien As String * 3
    'Adjudicación, Dación en Pago o Recuperación
    Dim lsOrigen_Adj_Dac_Rec As String * 1
    Dim lsFecha_Adj_Dac_Rec As String * 8
    Dim lsTpoIdDeudor_Adj_Dac_Rec As String * 1
    Dim lsNroIdDeudor_Adj_Dac_Rec As String * 15
    Dim lsValor_Adj_Dac_Rec As String * 15
    Dim lsCapital_Adj_Dac_Rec As String * 15
    Dim lsIntereses_Adj_Dac_Rec As String * 15
    'Provisión para Bienes Adjudicados o Recuperados
    Dim lsProvisionIni_Prov As String * 15
    Dim lsProvisionConstMensual_Prov As String * 15
    Dim lsProvisionDesvalor_Prov As String * 15
    Dim lsTotalProvision_Prov As String * 15
    Dim lsFechaRealizacion_Prov As String * 8
    Dim lsValorRealizacion_Prov As String * 15
    '**************************************************
    
    Dim lnTotal_Valor_Adj_Dac_Rec As Double
    Dim lnTotal_Capital_Adj_Dac_Rec As Double
    Dim lnTotal_Intereses_Adj_Dac_Rec As Double
    Dim lnTotal_ProvisionIni_Prov As Double
    Dim lnTotal_ProvisionConstMensual_Prov As Double
    Dim lnTotal_ProvisionDesvalor_Prov As Double
    Dim lnTotal_TotalProvision_Prov As Double
    Dim lnTotal_ValorRealizacion_Prov As Double
    Dim lnTotal_ValorNetoLibros As Double
    
    On Error GoTo ErrAnexo4ASucave
    
    Set rs = New ADODB.Recordset
    Set oCtaSal = New NCtasaldo
    Set rs = oCtaSal.GetGeneraDatosAnexo4A(pdFecha)
    
    If RSVacio(rs) Then
        MsgBox "No existe información para generar el archivo para el SUCAVE del Anexo 4A", vbInformation, "Aviso"
        Exit Sub
    End If
    
    lsArchivo = App.path & "\spooler\010401" & gsCodUser & Format(gdFecha, "YYYYMMDD") & Format(Time(), "HHMMSS") & ".104"
    Set fs = New Scripting.FileSystemObject
    Set tsArchivo = fs.CreateTextFile(lsArchivo, True)

    lnFila = 0
    'Cabecera
    tsArchivo.WriteLine "01040100109" & Format(pdFecha, "yyyymmdd") & "012"
    'Detalle
    Do While Not rs.EOF
        lnFila = lnFila + 1
        lsCodFila = AlinearTexto(CStr(lnFila), 6, Izquierda)

        If rs!Tipo = 1 Then
            lsDesc_Bien = Trim(rs!cDescripcion) & " De " & Format(CDate(rs!FechaAdjud), "MMMM YYYY")
        Else
            lsDesc_Bien = Trim(rs!cDescripcion)
        End If
        lsTpo_Bien = AlinearTexto(rs!Origen, 3, Derecha)

        lsOrigen_Adj_Dac_Rec = rs!nTipoAdjud
        lsFecha_Adj_Dac_Rec = Format(CDate(rs!FechaAdjud), "yyyymmdd")
        lsTpoIdDeudor_Adj_Dac_Rec = rs!TpoIdDeudor
        lsNroIdDeudor_Adj_Dac_Rec = AlinearTexto(Trim(rs!IdDeudor), 15, Derecha)
        lnTotal_Valor_Adj_Dac_Rec = lnTotal_Valor_Adj_Dac_Rec + Round(rs!TotalAdjud, 2)
        lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(rs!TotalAdjud, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_Capital_Adj_Dac_Rec = lnTotal_Capital_Adj_Dac_Rec + Round(rs!CapAdjudic, 2)
        lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(rs!CapAdjudic, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_Intereses_Adj_Dac_Rec = lnTotal_Intereses_Adj_Dac_Rec + Round(rs!IntGastos, 2)
        lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(rs!IntGastos, 2), "##0.00"), ".", ""), 15, Derecha)

        lsFechaVencProrroga = ""

        lnTotal_ProvisionIni_Prov = lnTotal_ProvisionIni_Prov + Round(rs!ProvInicial, 2)
        lsProvisionIni_Prov = AlinearTexto(Replace(Format(Round(rs!ProvInicial, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_ProvisionConstMensual_Prov = lnTotal_ProvisionConstMensual_Prov + Round(rs!ProvMensual, 2)
        lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(Round(rs!ProvMensual, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_ProvisionDesvalor_Prov = lnTotal_ProvisionDesvalor_Prov + 0
        lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format("000", "##0.00"), ".", ""), 15, Derecha)
        lnTotal_TotalProvision_Prov = lnTotal_TotalProvision_Prov + Round(rs!TotalProv, 2)
        lsTotalProvision_Prov = AlinearTexto(Replace(Format(Round(rs!TotalProv, 2), "##0.00"), ".", ""), 15, Derecha)
        lsFechaRealizacion_Prov = IIf(rs!dFecTasacion <> "", IIf(Len(rs!dFecTasacion) >= 8, Mid(rs!dFecTasacion, 7, 4) & Mid(rs!dFecTasacion, 4, 2) & Mid(rs!dFecTasacion, 1, 2), Trim(rs!dFecTasacion)), "")
        lnTotal_ValorRealizacion_Prov = lnTotal_ValorRealizacion_Prov + Round(rs!nValTasacion, 2)
        lsValorRealizacion_Prov = AlinearTexto(Replace(Format(Round(rs!nValTasacion, 2), "##0.00"), ".", ""), 15, Derecha)

        lnTotal_ValorNetoLibros = lnTotal_ValorNetoLibros + Round(rs!ValorNeto, 2)
        lsValorNetoLibros = AlinearTexto(Replace(Format(Round(rs!ValorNeto, 2), "##0.00"), ".", ""), 15, Derecha)
        lsObservaciones = ""

        tsArchivo.WriteLine lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsFechaVencProrroga & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & lsFechaRealizacion_Prov & lsValorRealizacion_Prov & _
                lsValorNetoLibros & lsObservaciones

        rs.MoveNext
    Loop
    'Total
    lsCodFila = AlinearTexto("100000", 6, Derecha)
    lsDesc_Bien = ""
    lsTpo_Bien = ""

    lsOrigen_Adj_Dac_Rec = ""
    lsFecha_Adj_Dac_Rec = ""
    lsTpoIdDeudor_Adj_Dac_Rec = ""
    lsNroIdDeudor_Adj_Dac_Rec = ""
    lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(lnTotal_Valor_Adj_Dac_Rec, "##0.00"), ".", ""), 15, Derecha)
    lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(lnTotal_Capital_Adj_Dac_Rec, "##0.00"), ".", ""), 15, Derecha)
    lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(lnTotal_Intereses_Adj_Dac_Rec, "##0.00"), ".", ""), 15, Derecha)

    lsFechaVencProrroga = ""

    lsProvisionIni_Prov = AlinearTexto(Replace(Format(lnTotal_ProvisionIni_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(lnTotal_ProvisionConstMensual_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format(lnTotal_ProvisionDesvalor_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsTotalProvision_Prov = AlinearTexto(Replace(Format(lnTotal_TotalProvision_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsFechaRealizacion_Prov = ""
    lsValorRealizacion_Prov = AlinearTexto(Replace(Format(lnTotal_ValorRealizacion_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsValorNetoLibros = AlinearTexto(Replace(Format(lnTotal_ValorNetoLibros, "##0.00"), ".", ""), 15, Derecha)
    lsObservaciones = ""
    
    tsArchivo.Write lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsFechaVencProrroga & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & lsFechaRealizacion_Prov & lsValorRealizacion_Prov & _
                lsValorNetoLibros & lsObservaciones
    
    tsArchivo.Close
    MsgBox "Archivo generado satisfactoriamente en " & lsArchivo, vbInformation, "Aviso"
    
    Set oCtaSal = Nothing
    Set rs = Nothing
    Set fs = Nothing
    Set tsArchivo = Nothing
    Exit Sub
ErrAnexo4ASucave:
    MsgBox TextErr(Err.Description), vbCritical, "Aviso"
End Sub
Public Sub generaAnexo4B_VentaBsAdjudRecup_SUCAVE(pdFecha As Date)
    Dim fs As Scripting.FileSystemObject
    Dim tsArchivo As TextStream
    Dim oCtaSal As NCtasaldo
    Dim rs As ADODB.Recordset
    Dim lnFila As Integer
    Dim lsArchivo As String

    Dim lsCodFila As String * 6
    Dim lsValorNetoLibros As String * 15
    Dim lsObservaciones As String * 60
    'Datos del Bien
    Dim lsDesc_Bien As String * 100
    Dim lsTpo_Bien As String * 3
    'Adjudicación, Dación en Pago o Recuperación
    Dim lsOrigen_Adj_Dac_Rec As String * 1
    Dim lsFecha_Adj_Dac_Rec As String * 8
    Dim lsTpoIdDeudor_Adj_Dac_Rec As String * 1
    Dim lsNroIdDeudor_Adj_Dac_Rec As String * 15
    Dim lsValor_Adj_Dac_Rec As String * 15
    Dim lsCapital_Adj_Dac_Rec As String * 15
    Dim lsIntereses_Adj_Dac_Rec As String * 15
    'Provisión para Bienes Adjudicados o Recuperados
    Dim lsProvisionIni_Prov As String * 15
    Dim lsProvisionConstMensual_Prov As String * 15
    Dim lsProvisionDesvalor_Prov As String * 15
    Dim lsTotalProvision_Prov As String * 15
    Dim lsFechaRealizacion_Prov As String * 8
    Dim lsValorRealizacion_Prov As String * 15
    'Bienes vendidos o Entregados a Arrendamiento Financiero
    Dim lsFechaVenta_AF As String * 8
    Dim lsTpoIdDeudor_AF As String * 1
    Dim lsNroIdDeudor_AF As String * 15
    Dim lsOpeVinculados_AF As String * 1
    Dim lsModalidad_AF As String * 1
    Dim lsImporteVenta_AF As String * 15
    Dim lsPeriodoPago_AF As String * 12
    Dim lsProvision_AF As String * 15
    '**************************************************
    
    Dim lnTotal_Valor_Adj_Dac_Rec As Double
    Dim lnTotal_Capital_Adj_Dac_Rec As Double
    Dim lnTotal_Intereses_Adj_Dac_Rec As Double
    Dim lnTotal_ProvisionIni_Prov As Double
    Dim lnTotal_ProvisionConstMensual_Prov As Double
    Dim lnTotal_ProvisionDesvalor_Prov As Double
    Dim lnTotal_TotalProvision_Prov As Double
    Dim lnTotal_ValorRealizacion_Prov As Double
    Dim lnTotal_ValorNetoLibros As Double
    Dim lnTotal_ImporteVenta_AF As Double
    Dim lnTotal_Provision_AF As Double

    On Error GoTo ErrAnexo4BSucave

    Set rs = New ADODB.Recordset
    Set oCtaSal = New NCtasaldo
    Set rs = oCtaSal.GetGeneraDatosAnexo4B(pdFecha)
    
    If RSVacio(rs) Then
        MsgBox "No existe información para generar el archivo para el SUCAVE del Anexo 4A", vbInformation, "Aviso"
        Exit Sub
    End If
    
    lsArchivo = App.path & "\spooler\010402" & gsCodUser & Format(gdFecha, "YYYYMMDD") & Format(Time(), "HHMMSS") & ".104"
    Set fs = New Scripting.FileSystemObject
    Set tsArchivo = fs.CreateTextFile(lsArchivo, True)
    
    Do While Not rs.EOF
        lnFila = lnFila + 1
        lsCodFila = AlinearTexto(CStr(lnFila), 6, Izquierda)

        If rs!Tipo = 1 Then
            lsDesc_Bien = Trim(rs!cDescripcion) & " De " & Format(CDate(rs!FechaAdjud), "MMMM YYYY")
        Else
            lsDesc_Bien = Trim(rs!cDescripcion)
        End If
        lsTpo_Bien = AlinearTexto(rs!cTipoBien, 3, Derecha)

        lsOrigen_Adj_Dac_Rec = rs!nTipoAdjud
        lsFecha_Adj_Dac_Rec = Format(CDate(rs!FechaAdjud), "yyyymmdd")
        lsTpoIdDeudor_Adj_Dac_Rec = rs!TpoIdDeudor
        lsNroIdDeudor_Adj_Dac_Rec = AlinearTexto(Trim(rs!IdDeudor), 15, Derecha)
        lnTotal_Valor_Adj_Dac_Rec = lnTotal_Valor_Adj_Dac_Rec + Round(rs!TotalAdjud, 2)
        lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(rs!TotalAdjud, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_Capital_Adj_Dac_Rec = lnTotal_Capital_Adj_Dac_Rec + Round(rs!CapAdjudic, 2)
        lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(rs!CapAdjudic, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_Intereses_Adj_Dac_Rec = lnTotal_Intereses_Adj_Dac_Rec + Round(rs!IntGastos, 2)
        lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(rs!IntGastos, 2), "##0.00"), ".", ""), 15, Derecha)
        
        lnTotal_ProvisionIni_Prov = lnTotal_ProvisionIni_Prov + Round(rs!ProvInicial, 2)
        lsProvisionIni_Prov = AlinearTexto(Replace(Format(Round(rs!ProvInicial, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_ProvisionConstMensual_Prov = lnTotal_ProvisionConstMensual_Prov + Round(rs!ProvMensual, 2)
        lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(Round(rs!ProvMensual, 2), "##0.00"), ".", ""), 15, Derecha)
        lnTotal_ProvisionDesvalor_Prov = lnTotal_ProvisionDesvalor_Prov + 0
        lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format("000", "##0.00"), ".", ""), 15, Derecha)
        lnTotal_TotalProvision_Prov = lnTotal_TotalProvision_Prov + Round(rs!TotalProv, 2)
        lsTotalProvision_Prov = AlinearTexto(Replace(Format(Round(rs!TotalProv, 2), "##0.00"), ".", ""), 15, Derecha)
        lsFechaRealizacion_Prov = IIf(rs!dFecTasacion <> "", IIf(Len(rs!dFecTasacion) >= 8, Mid(rs!dFecTasacion, 7, 4) & Mid(rs!dFecTasacion, 4, 2) & Mid(rs!dFecTasacion, 1, 2), Trim(rs!dFecTasacion)), "")
        lnTotal_ValorRealizacion_Prov = lnTotal_ValorRealizacion_Prov + Round(rs!nValTasacion, 2)
        lsValorRealizacion_Prov = AlinearTexto(Replace(Format(Round(rs!nValTasacion, 2), "##0.00"), ".", ""), 15, Derecha)

        lnTotal_ValorNetoLibros = lnTotal_ValorNetoLibros + Round(rs!ValorNeto, 2)
        lsValorNetoLibros = AlinearTexto(Replace(Format(Round(rs!ValorNeto, 2), "##0.00"), ".", ""), 15, Derecha)

        lsFechaVenta_AF = Format(rs!FechaVenta, "yyyymmdd")
        lsTpoIdDeudor_AF = rs!TpoIdDeudor
        lsNroIdDeudor_AF = AlinearTexto(Trim(rs!IdDeudor), 15, Derecha)
        lsOpeVinculados_AF = ""
        lsModalidad_AF = "C"
        lnTotal_ImporteVenta_AF = lnTotal_ImporteVenta_AF + Round(rs!RecupVenta, 2)
        lsImporteVenta_AF = AlinearTexto(Replace(Format(Round(rs!RecupVenta, 2), "##0.00"), ".", ""), 15, Derecha)
        lsPeriodoPago_AF = ""
        lnTotal_Provision_AF = lnTotal_Provision_AF + Round(rs!ValorNeto, 2)
        lsProvision_AF = AlinearTexto(Replace(Format(Round(rs!ValorNeto, 2), "##0.00"), ".", ""), 15, Derecha)
        lsObservaciones = ""

        tsArchivo.WriteLine lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & _
                lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & _
                lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & _
                lsFechaRealizacion_Prov & lsValorRealizacion_Prov & lsValorNetoLibros & _
                lsFechaVenta_AF & lsTpoIdDeudor_AF & lsNroIdDeudor_AF & _
                lsOpeVinculados_AF & lsModalidad_AF & _
                lsImporteVenta_AF & lsPeriodoPago_AF & lsProvision_AF & _
                lsObservaciones
        rs.MoveNext
    Loop

    lsCodFila = AlinearTexto("100000", 6, Izquierda)
    lsDesc_Bien = ""
    lsTpo_Bien = ""

    lsOrigen_Adj_Dac_Rec = ""
    lsFecha_Adj_Dac_Rec = ""
    lsTpoIdDeudor_Adj_Dac_Rec = ""
    lsNroIdDeudor_Adj_Dac_Rec = ""
    lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(lnTotal_Valor_Adj_Dac_Rec, "##0.00"), ".", ""), 15, Derecha)
    lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(lnTotal_Capital_Adj_Dac_Rec, "##0.00"), ".", ""), 15, Derecha)
    lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(lnTotal_Intereses_Adj_Dac_Rec, "##0.00"), ".", ""), 15, Derecha)
    
    lsProvisionIni_Prov = AlinearTexto(Replace(Format(lnTotal_ProvisionIni_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(lnTotal_ProvisionConstMensual_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format(lnTotal_ProvisionDesvalor_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsTotalProvision_Prov = AlinearTexto(Replace(Format(lnTotal_TotalProvision_Prov, "##0.00"), ".", ""), 15, Derecha)
    lsFechaRealizacion_Prov = ""
    lsValorRealizacion_Prov = AlinearTexto(Replace(Format(lnTotal_ValorRealizacion_Prov, "##0.00"), ".", ""), 15, Derecha)

    lsValorNetoLibros = AlinearTexto(Replace(Format(lnTotal_ValorNetoLibros, "##0.00"), ".", ""), 15, Derecha)

    lsFechaVenta_AF = ""
    lsTpoIdDeudor_AF = ""
    lsNroIdDeudor_AF = ""
    lsOpeVinculados_AF = ""
    lsModalidad_AF = ""
    lsImporteVenta_AF = AlinearTexto(Replace(Format(lnTotal_ImporteVenta_AF, "##0.00"), ".", ""), 15, Derecha)
    lsPeriodoPago_AF = ""
    lsProvision_AF = AlinearTexto(Replace(Format(lnTotal_Provision_AF, "##0.00"), ".", ""), 15, Derecha)
    lsObservaciones = ""
    
    tsArchivo.Write lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & _
                lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & _
                lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & _
                lsFechaRealizacion_Prov & lsValorRealizacion_Prov & lsValorNetoLibros & _
                lsFechaVenta_AF & lsTpoIdDeudor_AF & lsNroIdDeudor_AF & _
                lsOpeVinculados_AF & lsModalidad_AF & _
                lsImporteVenta_AF & lsPeriodoPago_AF & lsProvision_AF & _
                lsObservaciones
    
    tsArchivo.Close
    MsgBox "Archivo generado satisfactoriamente en " & lsArchivo, vbInformation, "Aviso"
    
    Set oCtaSal = Nothing
    Set rs = Nothing
    Set fs = Nothing
    Set tsArchivo = Nothing
    Exit Sub
ErrAnexo4BSucave:
    MsgBox TextErr(Err.Description), vbCritical, "Aviso"
End Sub
'END EJVG *******
Public Function CargaDatosReparticionGastos(ByVal sFecha As String) As ADODB.Recordset
    Dim oRep As DCtaCont
    Set oRep = New DCtaCont
    Set CargaDatosReparticionGastos = oRep.ReporteReparticionGastos(sFecha)
    Set oRep = Nothing
End Function
'EJVG20130124 ***
Public Function CargaDatosReparticionGastosNew(ByVal sFecha As String) As ADODB.Recordset
    Dim oRep As DCtaCont
    Set oRep = New DCtaCont
    Set CargaDatosReparticionGastosNew = oRep.ReporteReparticionGastosNew(sFecha)
    Set oRep = Nothing
End Function
'END EJVG *******

Public Function RecuperaPatrimonioEfectivo(sBalMes As String, sBalAnio As String) As Currency
    Set oCon = New DConecta
    Dim rs As ADODB.Recordset
    Dim Total As Currency
    Dim sSql As String
    oCon.AbreConexion
    sSql = "exec stp_sel_Reporte3Patrimonio '" & sBalAnio & "', '" & sBalMes & "', '0'"
    Set rs = oCon.CargaRecordSet(sSql)

    
    Total = 0
    Do While Not rs.EOF
        DoEvents
        
        If rs!cCtaContCod = "310101" Or rs!cCtaContCod = "310102" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "3201" Or rs!cCtaContCod = "320201" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320202" Or rs!cCtaContCod = "320301" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320302" Or rs!cCtaContCod = "3301" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "3302" Or rs!cCtaContCod = "330301" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "380101" Or rs!cCtaContCod = "390101" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "380104" Or rs!cCtaContCod = "280202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280203" Or rs!cCtaContCod = "280204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280601" Or rs!cCtaContCod = "280602" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280603" Or rs!cCtaContCod = "380201" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "380203" Or rs!cCtaContCod = "380204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "380205" Or rs!cCtaContCod = "3902" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "190407" Or rs!cCtaContCod = "19040907" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "17" Or rs!cCtaContCod = "130308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13080308" Or rs!cCtaContCod = "13090308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13040801" Or rs!cCtaContCod = "1308040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1309040801" Or rs!cCtaContCod = "330302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "310103" Or rs!cCtaContCod = "310104" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "310109" Or rs!cCtaContCod = "320203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320204" Or rs!cCtaContCod = "320209" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320303" Or rs!cCtaContCod = "320304" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320309" Or rs!cCtaContCod = "260202010201" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2602020202" Or rs!cCtaContCod = "2602020302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2603020102" Or rs!cCtaContCod = "2603020202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2603020302" Or rs!cCtaContCod = "2604020102" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2604020202" Or rs!cCtaContCod = "2604020302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2605010102" Or rs!cCtaContCod = "2605010202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2605010302" Or rs!cCtaContCod = "2606020102" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2606020202" Or rs!cCtaContCod = "2606020302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2607010102" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2607010202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2607010302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280601" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280602" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280603" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "310104" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "310109" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320209" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320304" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320309" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2607010202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "2607010302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280601" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280602" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280603" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090206" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090303" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090306" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090402" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090403" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090502" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090503" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090602" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090603" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090702" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090703" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090802" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090803" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090902" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14090903" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091002" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091003" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091102" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091103" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091202" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091302" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091303" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14091306" Then
            Total = Total + rs!nSaldoFinImporte * (1.25) / 100
        ElseIf rs!cCtaContCod = "1509040101" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "270102" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "270203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "270204" Then
            Total = Total + rs!nSaldoFinImporte * (1.25) / 100
        ElseIf rs!cCtaContCod = "130308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13080308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13090308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1308040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1309040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "310104" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "310109" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320209" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320304" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "320309" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280203" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280204" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280601" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280602" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "280603" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "130308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13080308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13090308" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1308040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1309040801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "130105" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "130106" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13020510" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13020610" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "130305" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "130306" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "130309" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1303180105" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1303180205" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13040510" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13040610" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13040910" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1304180105" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1304180205" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13050510" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "13050610" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1305180105" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1305180106" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1305180109" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1305180205" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1305180206" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1305180209" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1701" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1702" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "170701" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "170702" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401071801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401081801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401090606" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401091801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14011006" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401101801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401111801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401121801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1401131801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404071801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404081801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404090606" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404091801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14041006" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404101801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404111801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404121801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1404131801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405071801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405071918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405072218" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405081801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405081918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405090606" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405091801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405091908" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14051006" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405101801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405101906" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405101918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405111801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405111918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405112218" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405121801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405121918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405131801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1405131918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406071801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406071918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406072218" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406081801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406081918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406090606" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406091801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406091918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "14061006" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406101801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406101906" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406101918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406111801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406111918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406112218" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406121801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406121918" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406131801" Then
            Total = Total + rs!nSaldoFinImporte
        ElseIf rs!cCtaContCod = "1406131918" Then
            Total = Total + rs!nSaldoFinImporte
        End If
        
        rs.MoveNext
        If rs.EOF Then
           Exit Do
        End If
    Loop
    RecuperaPatrimonioEfectivo = Total
    oCon.CierraConexion
End Function
'PASIERS1332014
Public Sub GeneraReporteSBS_CreditosIncumplidos_SUCAVE(ByVal pdFecha As Date)
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste As Boolean
    Dim bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
        
    Dim Fecha As Date
    On Error GoTo ErrBegin
    psArchivoALeer = App.path & "\Spooler\SBSRep14_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    
    If bExiste = False Then
        MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
        Exit Sub
    End If
    psArchivoAGrabar = App.path & "\SPOOLER\0114" & Format(pdFecha, "mmdd") & ".214"
    
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Rep_14") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        Exit Sub
    End If
    Dim ArcSal As Integer
    Dim sCad As String
    Dim sNumero
    ArcSal = FreeFile
    Open psArchivoAGrabar For Output As ArcSal
    
    
    Print #ArcSal, "02140100109" & Format(pdFecha, "YYYYMMDD") & "0120              "
    Dim lsCodFila As String * 6
    Dim lsMontosFila As String * 18
    Dim lnCodFila As Integer
    Dim xlfila, xlcol As Integer
    Dim I, j, k As Integer
    sCad = ""
    lnCodFila = 100
    xlfila = 13
    xlcol = 4
    For I = 1 To 9
        If I <= 7 Then
                lsCodFila = AlinearTexto(CStr(lnCodFila), 6, Izquierda)
            For j = 1 To 3
                lsCodFila = AlinearTexto(CStr(lnCodFila), 6, Izquierda)
                sCad = sCad + lsCodFila
                For k = 1 To 18
                    If j = 1 Then
                        lsMontosFila = AlinearTexto(Replace(Format(CCur(xlHoja.Cells(xlfila, xlcol)) + CCur(xlHoja.Cells(xlfila + 1, xlcol)), "##0.00"), ".", ""), 18, Derecha)
                    Else
                        lsMontosFila = AlinearTexto(Replace(Format(CStr(xlHoja.Cells(xlfila, xlcol)), "##0.00"), ".", ""), 18, Derecha)
                    End If
                    sCad = sCad + lsMontosFila
                    xlcol = xlcol + 1
                Next
                    xlcol = 4
                    xlfila = IIf(j = 1, xlfila, xlfila + 1)
                    lnCodFila = lnCodFila + 100
                    Print #1, sCad
                    sCad = ""
            Next
        Else
                lsCodFila = AlinearTexto(CStr(lnCodFila), 6, Izquierda)
                sCad = sCad + lsCodFila
                For k = 1 To 18
                    If j <> 1 Then
                        lsMontosFila = AlinearTexto(Replace(Format(CStr(xlHoja.Cells(xlfila, xlcol)), "##0.00"), ".", ""), 18, Derecha)
                    Else
                        lsMontosFila = ""
                    End If
                    sCad = sCad + lsMontosFila
                    xlcol = xlcol + 1
                Next
                xlcol = 4
                xlfila = IIf(j = 1, xlfila, xlfila + 1)
                lnCodFila = lnCodFila + 100
                Print #1, sCad
                sCad = ""
        End If
    Next
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    MsgBox "Archivo generado satisfactoriamente" & Chr(13) & Chr(13) & " en " & App.path & "\SPOOLER\", vbInformation, "Aviso!!!"
 
Exit Sub
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
  MsgBox TextErr(Err.Description), vbInformation, "Aviso"
End Sub
Public Sub GeneraAnx10SBS_DepColocaPer(ByVal pdFecha As Date)
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste As Boolean
    Dim bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    
    Dim Fecha As Date
    On Error GoTo ErrBegin
    psArchivoALeer = App.path & "\Spooler\Anx10_" & Format(pdFecha, "mmddyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
        Exit Sub
    End If
    psArchivoAGrabar = App.path & "\SPOOLER\0114" & Format(pdFecha, "mmdd") & ".110"
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
'''        If UCase(xlHoja.Name) = UCase("NuevosSoles") Then 'MARG ERS044-2016
'''            bEncontrado = True
'''            xlHoja.Activate
'''            Exit For
'''        End If
        If UCase(xlHoja.Name) = UCase(StrConv(gcPEN_PLURAL, vbProperCase)) Then 'MARG ERS044-2016
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        Exit Sub
    End If
    Dim ArcSal As Integer
    Dim sCad As String
    Dim sNumero
    ArcSal = FreeFile
    Open psArchivoAGrabar For Output As ArcSal
    
    Print #ArcSal, "01100100109" & Format(pdFecha, "YYYYMMDD") & "0120              "
    Dim lsCodFila As String * 4
    Dim lnCodFila As Integer
    Dim lsCUGPais As String * 4
    Dim lsCUGDepProvDis As String * 6
    Dim lsCUGDepProvDisOption As String
    Dim lsOFITipo As String * 2
    Dim lsOFICod As String * 3
    Dim lsMontosFila As String * 15
    Dim xlfila, xlcol As Integer
    Dim I, j, k As Integer
    sCad = ""
    xlfila = 11
    xlcol = 2
    lnCodFila = 1
    
    For I = 1 To 16
        If I <= 15 Then
            lsCodFila = AlinearTexto(Format(CStr(lnCodFila), "0"), 4, Izquierda)
            lsCUGPais = AlinearTexto(Format(CStr(xlHoja.Cells(xlfila, xlcol)), "0000"), 4, Derecha)
            xlcol = xlcol + 1
            lsCUGDepProvDisOption = Format(CStr(xlHoja.Cells(xlfila, xlcol)), "00") 'Dep
            xlcol = xlcol + 1
            lsCUGDepProvDisOption = lsCUGDepProvDisOption + Format(CStr(xlHoja.Cells(xlfila, xlcol)), "00") 'Prov
            xlcol = xlcol + 1
            lsCUGDepProvDisOption = lsCUGDepProvDisOption + Format(CStr(xlHoja.Cells(xlfila, xlcol)), "00")
            lsCUGDepProvDis = AlinearTexto(lsCUGDepProvDisOption, 6, Derecha)
            xlcol = xlcol + 1
            lsOFITipo = AlinearTexto(Format(CStr(xlHoja.Cells(xlfila, xlcol)), "00"), 2, Derecha)
            xlcol = xlcol + 1
            lsOFICod = AlinearTexto(Format(CStr(xlHoja.Cells(xlfila, xlcol)), "00"), 2, Derecha)
            xlcol = xlcol + 1
            sCad = sCad + lsCodFila + lsCUGPais + lsCUGDepProvDis + lsOFITipo + lsOFICod
            For k = 1 To 18
                If k >= 14 Then
                    lsMontosFila = AlinearTexto(CStr(IIf(xlHoja.Cells(xlfila, xlcol) = "", "0", xlHoja.Cells(xlfila, xlcol))), 15, Derecha)
                Else
                    lsMontosFila = AlinearTexto(Replace(Format(CStr(IIf(xlHoja.Cells(xlfila, xlcol) = "", "0", xlHoja.Cells(xlfila, xlcol))), "##0.00"), ".", ""), 15, Derecha)
                End If
                sCad = sCad + lsMontosFila
                xlcol = xlcol + 1
            Next
            xlcol = 2
            xlfila = xlfila + 1
            lnCodFila = lnCodFila + 1
            Print #1, sCad
            sCad = ""
        Else
            lnCodFila = 1000
            lsCodFila = AlinearTexto(Format(CStr(lnCodFila), "0000"), 4, Izquierda)
            lsCUGPais = AlinearTexto("", 4, Derecha)
            lsCUGDepProvDis = AlinearTexto("", 6, Derecha)
            lsOFITipo = AlinearTexto("", 2, Derecha)
            lsOFICod = AlinearTexto("", 2, Derecha)
            sCad = sCad + lsCodFila + lsCUGPais + lsCUGDepProvDis + lsOFITipo + lsOFICod
            xlcol = 8
            For k = 1 To 18
                If k >= 14 Then
                    lsMontosFila = AlinearTexto(CStr(IIf(xlHoja.Cells(xlfila, xlcol) = "", "0", xlHoja.Cells(xlfila, xlcol))), 15, Derecha)
                Else
                    lsMontosFila = AlinearTexto(Replace(Format(CStr(IIf(xlHoja.Cells(xlfila, xlcol) = "", "0", xlHoja.Cells(xlfila, xlcol))), "##0.00"), ".", ""), 15, Derecha)
                End If
                sCad = sCad + lsMontosFila
                xlcol = xlcol + 1
            Next
            xlcol = 2
            xlfila = xlfila + 1
            Print #1, sCad
            sCad = ""
        End If
    Next
    
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    MsgBox "Archivo generado satisfactoriamente" & Chr(13) & Chr(13) & " en " & App.path & "\SPOOLER\", vbInformation, "Aviso!!!"
Exit Sub
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
  MsgBox TextErr(Err.Description), vbInformation, "Aviso"
End Sub
'END PASI
'PASIERS0282015***********************************************
Public Sub GeneraAnexoSBS15A_SUCAVE(ByVal psMoneda As String, ByVal pdFecha As Date)
Dim ArchTxt01 As String
Dim ArchTxt02 As String
Dim TituloProgress As String
Dim MensajeProgress As String
Dim carp As String
Dim carp2 As String

On Error GoTo ERROR
    Set oBarra = New clsProgressBar
    oBarra.ShowForm frmReportes
    oBarra.Max = 107
   If Not GeneraAnexoSBS15A_SUCAVE_TXT1(psMoneda, pdFecha, ArchTxt01) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
   End If
   If Not GeneraAnexoSBS15A_SUCAVE_TXT2(psMoneda, pdFecha, ArchTxt02) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
   End If
   oBarra.CloseForm frmReportes
    If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el archivo?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        carp = "notepad " & ArchTxt01
        carp2 = "notepad " & ArchTxt02
        Shell carp, vbMaximizedFocus
        Shell carp2, vbMaximizedFocus
    End If
   Exit Sub
ERROR:
    oBarra.CloseForm frmReportes
    MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub
Public Function GeneraAnexoSBS15A_SUCAVE_TXT1(ByVal psMoneda As String, ByVal pdFecha As Date, ByRef ArchTxt01 As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim lnF As Integer, lnFila As Integer
    Dim nContar As Integer
    Dim X As Integer
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 15-A : Reporte de Tesoreria y Posición diaria de Liquidez."
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 0
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx15A_New_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx15A_New_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS15A_SUCAVE_TXT1 = False
            Exit Function
        End If
    End If
    'psArchivoAGrabar = App.path & "\SPOOLER\01150100109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    psArchivoAGrabar = App.path & "\SPOOLER\01" & Mid(CStr(Year(pdFecha)), 3, 2) & Format(pdFecha, "MMDD") & ".115" 'NAGL 20170425
    ArchTxt01 = psArchivoAGrabar
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx15A") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS15A_SUCAVE_TXT1 = False
        Exit Function
    End If
    Dim ArcSal As Integer
    ArcSal = FreeFile
    'TXT 01
    Open psArchivoAGrabar For Output As ArcSal
    'Cabecera txt
    Print #ArcSal, "01150100109" & Format(pdFecha, "YYYYMMDD") & "012"
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Ratio de liquidez
    Print #1, AlinearTexto((100), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(CStr(0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Activos Liquidos
    Print #1, AlinearTexto((200), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(CStr(0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Caja y Fondos Fijos
    Print #1, AlinearTexto((300), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(11, 6))), IIf(CCur(xlHoja.Cells(11, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(11, 7))), IIf(CCur(xlHoja.Cells(11, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Fondos Disponibles en el BCRP
    Print #1, AlinearTexto((425), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(12, 6))), IIf(CCur(xlHoja.Cells(12, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(12, 7))), IIf(CCur(xlHoja.Cells(12, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Fondos disponibles en empresas del sistema financiero nacional (2)
    Print #1, AlinearTexto((450), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(13, 6))), IIf(CCur(xlHoja.Cells(13, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(13, 7))), IIf(CCur(xlHoja.Cells(13, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'fondos disponibles en bancos del exterior de primera categoria(3)
    Print #1, AlinearTexto((500), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(14, 6))), IIf(CCur(xlHoja.Cells(14, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(14, 7))), IIf(CCur(xlHoja.Cells(14, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Fondos interbancarios netos activos (4)
    Print #1, AlinearTexto((600), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(15, 6))), IIf(CCur(xlHoja.Cells(15, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(15, 7))), IIf(CCur(xlHoja.Cells(15, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Valores representativos de deuda emitidos por el BCRP (5)
    Print #1, AlinearTexto((725), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(16, 6))), IIf(CCur(xlHoja.Cells(16, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(16, 7))), IIf(CCur(xlHoja.Cells(16, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Valores representativos de deuda emitidos por el Gobierno Central (6)
    Print #1, AlinearTexto((750), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 6))), IIf(CCur(xlHoja.Cells(17, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 7))), IIf(CCur(xlHoja.Cells(17, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Certificados de depositos negociables y certificados bancarios (7)
    Print #1, AlinearTexto((800), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(18, 6))), IIf(CCur(xlHoja.Cells(18, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(18, 7))), IIf(CCur(xlHoja.Cells(18, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Valores representativos de deuda publica y de los sistemas financieros y de seguros del exterior(8)
    Print #1, AlinearTexto((900), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(19, 6))), IIf(CCur(xlHoja.Cells(19, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(19, 7))), IIf(CCur(xlHoja.Cells(19, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    '****************NAGL 20190525 Según Anx02_ERS006-2019******************
    
    Print #1, AlinearTexto((910), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(20, 6))), IIf(CCur(xlHoja.Cells(20, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(20, 7))), IIf(CCur(xlHoja.Cells(20, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Print #1, AlinearTexto((920), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(21, 6))), IIf(CCur(xlHoja.Cells(21, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(21, 7))), IIf(CCur(xlHoja.Cells(21, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Print #1, AlinearTexto((930), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(22, 6))), IIf(CCur(xlHoja.Cells(22, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(22, 7))), IIf(CCur(xlHoja.Cells(22, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Print #1, AlinearTexto((940), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(23, 6))), IIf(CCur(xlHoja.Cells(23, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(23, 7))), IIf(CCur(xlHoja.Cells(23, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '*************************************************************************
    
    'Total (a)
    Print #1, AlinearTexto((1000), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(26, 6))), IIf(CCur(xlHoja.Cells(26, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(26, 7))), IIf(CCur(xlHoja.Cells(26, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Pasivos a Corto Plazp
    Print #1, AlinearTexto((1100), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(27, 6))), IIf(CCur(xlHoja.Cells(27, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(27, 7))), IIf(CCur(xlHoja.Cells(27, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Obligaciones a la vista
    Print #1, AlinearTexto((1210), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(28, 6))), IIf(CCur(xlHoja.Cells(28, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(28, 7))), IIf(CCur(xlHoja.Cells(28, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Obligaciones con instituciones recuadadoras de tributos
    Print #1, AlinearTexto((1225), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(29, 6))), IIf(CCur(xlHoja.Cells(29, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(29, 7))), IIf(CCur(xlHoja.Cells(29, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    'Cuentas por pagar por operaciones de reporte (34) 'Agregado by NAGL 20190625
    Print #1, AlinearTexto((1230), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(30, 6))), IIf(CCur(xlHoja.Cells(30, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(30, 7))), IIf(CCur(xlHoja.Cells(30, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '***************
    
    'Cuentas por pagar por ventas en corto(11)
    Print #1, AlinearTexto((1240), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(31, 6))), IIf(CCur(xlHoja.Cells(31, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(31, 7))), IIf(CCur(xlHoja.Cells(31, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Fondos interbancarios netos pasivos (4)
    Print #1, AlinearTexto((1300), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(32, 6))), IIf(CCur(xlHoja.Cells(32, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(32, 7))), IIf(CCur(xlHoja.Cells(32, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Obligaciones por cuentas de ahorro
    Print #1, AlinearTexto((1400), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(33, 6))), IIf(CCur(xlHoja.Cells(33, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(33, 7))), IIf(CCur(xlHoja.Cells(33, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Obligaciones por cuentas a plazo(12)
    Print #1, AlinearTexto((1450), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(34, 6))), IIf(CCur(xlHoja.Cells(34, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(34, 7))), IIf(CCur(xlHoja.Cells(34, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Adeudos y obligaciones financieras del pais (13)
    Print #1, AlinearTexto((1500), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(35, 6))), IIf(CCur(xlHoja.Cells(35, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(35, 7))), IIf(CCur(xlHoja.Cells(35, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Adeudos y obligaciones financieras del exterior
    Print #1, AlinearTexto((1510), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(36, 6))), IIf(CCur(xlHoja.Cells(36, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(36, 7))), IIf(CCur(xlHoja.Cells(36, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Valores, titulos y obligaciones en circulacion
    Print #1, AlinearTexto((1520), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(37, 6))), IIf(CCur(xlHoja.Cells(37, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(37, 7))), IIf(CCur(xlHoja.Cells(37, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    'Total(b)
    Print #1, AlinearTexto((1600), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(39, 6))), IIf(CCur(xlHoja.Cells(39, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(39, 7))), IIf(CCur(xlHoja.Cells(39, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    'Ratio de liquidez [(a)/(b)]x100
    Print #1, AlinearTexto((1700), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(41, 6))), IIf(CCur(xlHoja.Cells(41, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(41, 7))), IIf(CCur(xlHoja.Cells(41, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Activos liquidos ajustados por recursos prestados (c)
    Print #1, AlinearTexto((1710), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(42, 6))), IIf(CCur(xlHoja.Cells(42, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(42, 7))), IIf(CCur(xlHoja.Cells(42, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Pasivos de corto plazo ajustados por recursos prestados (d)(15)
    Print #1, AlinearTexto((1720), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(43, 6))), IIf(CCur(xlHoja.Cells(43, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(43, 7))), IIf(CCur(xlHoja.Cells(43, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Ratio de liquidez ajustado por recursos prestados [(c)/(d)]x100
    Print #1, AlinearTexto((1730), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(44, 6))), IIf(CCur(xlHoja.Cells(44, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(44, 7))), IIf(CCur(xlHoja.Cells(44, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Posiciones largas en forwards de monedas (e)(15)
    Print #1, AlinearTexto((1740), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(45, 6))), IIf(CCur(xlHoja.Cells(45, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(45, 7))), IIf(CCur(xlHoja.Cells(45, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Posiciones cortas en forwards de monedas (f)(15)
    Print #1, AlinearTexto((1745), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(46, 6))), IIf(CCur(xlHoja.Cells(46, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(46, 7))), IIf(CCur(xlHoja.Cells(46, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Ratio de liquides ajustado por forwards de monedas [((a)+(e))/((b)+(f))]x100
    Print #1, AlinearTexto((1750), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(47, 6))), IIf(CCur(xlHoja.Cells(47, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(47, 7))), IIf(CCur(xlHoja.Cells(47, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Depositos Overnight BCRP (g)
    Print #1, AlinearTexto((1755), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(48, 6))), IIf(CCur(xlHoja.Cells(48, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(48, 7))), IIf(CCur(xlHoja.Cells(48, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Depositos plazo BCRP (h)
    Print #1, AlinearTexto((1760), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(49, 6))), IIf(CCur(xlHoja.Cells(49, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(49, 7))), IIf(CCur(xlHoja.Cells(49, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Valores representativos de deuda emitidos por el BCRP y Gobierno Central (i)
    Print #1, AlinearTexto((1770), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(50, 6))), IIf(CCur(xlHoja.Cells(50, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(50, 7))), IIf(CCur(xlHoja.Cells(50, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Valores representativos de deuda emitidos por Gobierno del Exterior(j)
    Print #1, AlinearTexto((1780), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(51, 6))), IIf(CCur(xlHoja.Cells(51, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(51, 7))), IIf(CCur(xlHoja.Cells(51, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Ratio de inversiones liquidas [((g)+(h)+(i)+(j)/(a))]x100
    Print #1, AlinearTexto((1790), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(52, 6))), IIf(CCur(xlHoja.Cells(52, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(52, 7))), IIf(CCur(xlHoja.Cells(52, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    '***NAGL
    lnF = 63 'Antes 55 by NAGL
    Do While (xlHoja.Cells(lnF, 2) <> "   1.2 Pasivas")
       lnF = lnF + 1
    Loop
     lnFila = lnF + 49 + 4 'Antes 24 by NAGL 41 a 49 JIPR20210318 SE LE SUMA 4 ANPS
    '***NAGL
    
    'ENCAJE
    Print #1, AlinearTexto((1800), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(CStr(0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    '1. Total de Obligaciones sujetas a encaje - TOSE (23)
    'Print #1, AlinearTexto((1900), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 1, 6))), IIf(CCur(xlHoja.Cells(lnFila + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 1, 7))), IIf(CCur(xlHoja.Cells(lnFila + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((1900), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila, 6))), IIf(CCur(xlHoja.Cells(lnFila, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila, 7))), IIf(CCur(xlHoja.Cells(lnFila, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.1 Obligaciones inmediatas y a plazo hasta 30 dias
    'Print #1, AlinearTexto((2000), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 2, 6))), IIf(CCur(xlHoja.Cells(lnFila + 2, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 2, 7))), IIf(CCur(xlHoja.Cells(lnFila + 2, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2000), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 1, 6))), IIf(CCur(xlHoja.Cells(lnFila + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 1, 7))), IIf(CCur(xlHoja.Cells(lnFila + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.2 Obligaciones a plazo mayor a 30 dias.
    'Print #1, AlinearTexto((2100), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 3, 6))), IIf(CCur(xlHoja.Cells(lnFila + 3, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 3, 7))), IIf(CCur(xlHoja.Cells(lnFila + 3, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2100), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 2, 6))), IIf(CCur(xlHoja.Cells(lnFila + 2, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 2, 7))), IIf(CCur(xlHoja.Cells(lnFila + 2, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.3 Ahorros
    'Print #1, AlinearTexto((2200), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 4, 6))), IIf(CCur(xlHoja.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 4, 7))), IIf(CCur(xlHoja.Cells(lnFila + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2200), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 3, 6))), IIf(CCur(xlHoja.Cells(lnFila + 3, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 3, 7))), IIf(CCur(xlHoja.Cells(lnFila + 3, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.4 Obligaciones en moneda nacional con rendimiento vinculado al tipo de cambio en moneda extranjera o a operaciones swap o similares
    'Print #1, AlinearTexto((2250), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 5, 6))), IIf(CCur(xlHoja.Cells(lnFila + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 5, 7))), IIf(CCur(xlHoja.Cells(lnFila + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2250), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 4, 6))), IIf(CCur(xlHoja.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 4, 7))), IIf(CCur(xlHoja.Cells(lnFila + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.5 Otros
    'Print #1, AlinearTexto((2280), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 6, 6))), IIf(CCur(xlHoja.Cells(lnFila + 6, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 6, 7))), IIf(CCur(xlHoja.Cells(lnFila + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2280), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 5, 6))), IIf(CCur(xlHoja.Cells(lnFila + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 5, 7))), IIf(CCur(xlHoja.Cells(lnFila + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2. Posicion de encaje
    'Print #1, AlinearTexto((2300), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 7, 6))), IIf(CCur(xlHoja.Cells(lnFila + 7, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 7, 7))), IIf(CCur(xlHoja.Cells(lnFila + 7, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2300), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 6, 6))), IIf(CCur(xlHoja.Cells(lnFila + 6, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 6, 7))), IIf(CCur(xlHoja.Cells(lnFila + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.1 Encaje exigible
    'Print #1, AlinearTexto((2400), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 8, 6))), IIf(CCur(xlHoja.Cells(lnFila + 8, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 8, 7))), IIf(CCur(xlHoja.Cells(lnFila + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2400), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 7, 6))), IIf(CCur(xlHoja.Cells(lnFila + 7, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 7, 7))), IIf(CCur(xlHoja.Cells(lnFila + 7, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.2 Fondos de encaje (24)
    'Print #1, AlinearTexto((2500), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 9, 6))), IIf(CCur(xlHoja.Cells(lnFila + 9, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 9, 7))), IIf(CCur(xlHoja.Cells(lnFila + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2500), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 8, 6))), IIf(CCur(xlHoja.Cells(lnFila + 8, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 8, 7))), IIf(CCur(xlHoja.Cells(lnFila + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
        'Caja del dia
    'Print #1, AlinearTexto((2600), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 10, 6))), IIf(CCur(xlHoja.Cells(lnFila + 10, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 10, 7))), IIf(CCur(xlHoja.Cells(lnFila + 10, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2600), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 9, 6))), IIf(CCur(xlHoja.Cells(lnFila + 9, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 9, 7))), IIf(CCur(xlHoja.Cells(lnFila + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
        'Caja promedio diario del perido de encaje anterior
    'Print #1, AlinearTexto((2650), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 11, 6))), IIf(CCur(xlHoja.Cells(lnFila + 11, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 11, 7))), IIf(CCur(xlHoja.Cells(lnFila + 11, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2650), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 10, 6))), IIf(CCur(xlHoja.Cells(lnFila + 10, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 10, 7))), IIf(CCur(xlHoja.Cells(lnFila + 10, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
        'Cuenta corriente BCRP
    'Print #1, AlinearTexto((2700), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 12, 6))), IIf(CCur(xlHoja.Cells(lnFila + 12, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 12, 7))), IIf(CCur(xlHoja.Cells(lnFila + 12, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2700), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 11, 6))), IIf(CCur(xlHoja.Cells(lnFila + 11, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 11, 7))), IIf(CCur(xlHoja.Cells(lnFila + 11, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.3 Resultados del dia (fondos de encaje  encaje exigible)
    'Print #1, AlinearTexto((2800), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 13, 6))), IIf(CCur(xlHoja.Cells(lnFila + 13, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 13, 7))), IIf(CCur(xlHoja.Cells(lnFila + 13, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2800), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 12, 6))), IIf(CCur(xlHoja.Cells(lnFila + 12, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 12, 7))), IIf(CCur(xlHoja.Cells(lnFila + 12, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.4 Posicion de encaje acumulada del periodo a la fecha
    'Print #1, AlinearTexto((2900), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 14, 6))), IIf(CCur(xlHoja.Cells(lnFila + 14, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 14, 7))), IIf(CCur(xlHoja.Cells(lnFila + 14, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2900), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 13, 6))), IIf(CCur(xlHoja.Cells(lnFila + 13, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 13, 7))), IIf(CCur(xlHoja.Cells(lnFila + 13, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.5 Posicion acumulada del requerimiento minimo en cuenta corriente BCRP a la fecha
    'Print #1, AlinearTexto((2950), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 15, 6))), IIf(CCur(xlHoja.Cells(lnFila + 15, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 15, 7))), IIf(CCur(xlHoja.Cells(lnFila + 15, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((2950), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 14, 6))), IIf(CCur(xlHoja.Cells(lnFila + 14, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 14, 7))), IIf(CCur(xlHoja.Cells(lnFila + 14, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3 cheques a deducir del total de obligaciones sujetas a encaje
    'Print #1, AlinearTexto((3000), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 16, 6))), IIf(CCur(xlHoja.Cells(lnFila + 16, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 16, 7))), IIf(CCur(xlHoja.Cells(lnFila + 16, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3000), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 15, 6))), IIf(CCur(xlHoja.Cells(lnFila + 15, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 15, 7))), IIf(CCur(xlHoja.Cells(lnFila + 15, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3.1 A deducir de obligaciones a la vista y a plazo hasta 30 dias
    'Print #1, AlinearTexto((3100), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 17, 6))), IIf(CCur(xlHoja.Cells(lnFila + 17, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 17, 7))), IIf(CCur(xlHoja.Cells(lnFila + 17, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3100), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 16, 6))), IIf(CCur(xlHoja.Cells(lnFila + 16, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 16, 7))), IIf(CCur(xlHoja.Cells(lnFila + 16, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3.2 A deducir de obligaciones a plazo mayor de 30 dias
    'Print #1, AlinearTexto((3200), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 18, 6))), IIf(CCur(xlHoja.Cells(lnFila + 18, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 18, 7))), IIf(CCur(xlHoja.Cells(lnFila + 18, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3200), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 17, 6))), IIf(CCur(xlHoja.Cells(lnFila + 17, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 17, 7))), IIf(CCur(xlHoja.Cells(lnFila + 17, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3.3 A deducir de ahorro
    'Print #1, AlinearTexto((3300), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 19, 6))), IIf(CCur(xlHoja.Cells(lnFila + 19, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 19, 7))), IIf(CCur(xlHoja.Cells(lnFila + 19, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3300), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 18, 6))), IIf(CCur(xlHoja.Cells(lnFila + 18, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 18, 7))), IIf(CCur(xlHoja.Cells(lnFila + 18, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3.4 A deducir de obligaciones en moneda nacional con rendimiento vinculado al tipo de cambio en moneda extranjera o a operaciones swap y similares
    'Print #1, AlinearTexto((3305), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 20, 6))), IIf(CCur(xlHoja.Cells(lnFila + 20, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 20, 7))), IIf(CCur(xlHoja.Cells(lnFila + 20, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3305), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 19, 6))), IIf(CCur(xlHoja.Cells(lnFila + 19, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 19, 7))), IIf(CCur(xlHoja.Cells(lnFila + 19, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4 Obligaciones con entidads financieras del exterior (25)
    'Print #1, AlinearTexto((3310), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 21, 6))), IIf(CCur(xlHoja.Cells(lnFila + 21, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 21, 7))), IIf(CCur(xlHoja.Cells(lnFila + 21, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3310), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 20, 6))), IIf(CCur(xlHoja.Cells(lnFila + 20, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 20, 7))), IIf(CCur(xlHoja.Cells(lnFila + 20, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'IV SALDO DE DEPOSITOS DE GRANDES ACREEDORES
    Print #1, AlinearTexto((3320), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(CStr(0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1 Estado (26)
    'Print #1, AlinearTexto((3322), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 24, 6))), IIf(CCur(xlHoja.Cells(lnFila + 24, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 24, 7))), IIf(CCur(xlHoja.Cells(lnFila + 24, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3322), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 23, 6))), IIf(CCur(xlHoja.Cells(lnFila + 23, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 23, 7))), IIf(CCur(xlHoja.Cells(lnFila + 23, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2 AFPs(27)
    'Print #1, AlinearTexto((3324), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 25, 6))), IIf(CCur(xlHoja.Cells(lnFila + 25, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 25, 7))), IIf(CCur(xlHoja.Cells(lnFila + 25, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3324), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 24, 6))), IIf(CCur(xlHoja.Cells(lnFila + 24, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 24, 7))), IIf(CCur(xlHoja.Cells(lnFila + 24, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3 Fondos mutuos y fondos de inversion
    'Print #1, AlinearTexto((3326), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 26, 6))), IIf(CCur(xlHoja.Cells(lnFila + 26, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 26, 7))), IIf(CCur(xlHoja.Cells(lnFila + 26, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3326), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 25, 6))), IIf(CCur(xlHoja.Cells(lnFila + 25, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 25, 7))), IIf(CCur(xlHoja.Cells(lnFila + 25, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4 Empresas del sistema de seguros (28)
    'Print #1, AlinearTexto((3328), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 27, 6))), IIf(CCur(xlHoja.Cells(lnFila + 27, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 27, 7))), IIf(CCur(xlHoja.Cells(lnFila + 27, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3328), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 26, 6))), IIf(CCur(xlHoja.Cells(lnFila + 26, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 26, 7))), IIf(CCur(xlHoja.Cells(lnFila + 26, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '5 Sociedad agente de bolsa (SAB)
    'Print #1, AlinearTexto((3329), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 28, 6))), IIf(CCur(xlHoja.Cells(lnFila + 28, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 28, 7))), IIf(CCur(xlHoja.Cells(lnFila + 28, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3329), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 27, 6))), IIf(CCur(xlHoja.Cells(lnFila + 27, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 27, 7))), IIf(CCur(xlHoja.Cells(lnFila + 27, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '6 Otros depositantes (29)
    'Print #1, AlinearTexto((3330), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 29, 6))), IIf(CCur(xlHoja.Cells(lnFila + 29, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 29, 7))), IIf(CCur(xlHoja.Cells(lnFila + 29, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3330), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 28, 6))), IIf(CCur(xlHoja.Cells(lnFila + 28, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 28, 7))), IIf(CCur(xlHoja.Cells(lnFila + 28, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'V SALDOS DE DEPOSITOS DE EMPRESAS DEL SISTEMA FINANCIERO
    Print #1, AlinearTexto((3333), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(CStr(0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1. Sistema financiero nacional
    'Print #1, AlinearTexto((3335), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 33, 6))), IIf(CCur(xlHoja.Cells(lnFila + 33, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 33, 7))), IIf(CCur(xlHoja.Cells(lnFila + 33, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3335), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 32, 6))), IIf(CCur(xlHoja.Cells(lnFila + 32, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 32, 7))), IIf(CCur(xlHoja.Cells(lnFila + 32, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2. Sistema financiero del exterior
    'Print #1, AlinearTexto((3338), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 34, 6))), IIf(CCur(xlHoja.Cells(lnFila + 34, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 34, 7))), IIf(CCur(xlHoja.Cells(lnFila + 34, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3338), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 33, 6))), IIf(CCur(xlHoja.Cells(lnFila + 33, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 33, 7))), IIf(CCur(xlHoja.Cells(lnFila + 33, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'VI NUMERO DE DIAS DE REDESCUENTO EN LOS ULTIMOS 180 DIAS (30)
    'Print #1, AlinearTexto((3340), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 36, 6))), IIf(CCur(xlHoja.Cells(lnFila + 36, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 36, 7))), IIf(CCur(xlHoja.Cells(lnFila + 36, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3340), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 35, 6))), IIf(CCur(xlHoja.Cells(lnFila + 35, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 35, 7))), IIf(CCur(xlHoja.Cells(lnFila + 35, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'VII PERDIDA NETA DE DERIVADOS PARA NEGOCIACION (31)
    'Print #1, AlinearTexto((3345), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 37, 6))), IIf(CCur(xlHoja.Cells(lnFila + 37, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 37, 7))), IIf(CCur(xlHoja.Cells(lnFila + 37, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3345), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 36, 6))), IIf(CCur(xlHoja.Cells(lnFila + 36, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 36, 7))), IIf(CCur(xlHoja.Cells(lnFila + 36, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'VIII POSICIONES DE CAMBIO
    Print #1, AlinearTexto((3350), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(CStr(0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1. Balance
    'Print #1, AlinearTexto((3400), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 40, 4))), IIf(CCur(xlHoja.Cells(lnFila + 40, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3400), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 39, 4))), IIf(CCur(xlHoja.Cells(lnFila + 39, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2. Global
    'Print #1, AlinearTexto((3500), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 40, 6))), IIf(CCur(xlHoja.Cells(lnFila + 40, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3500), 4, Derecha); AlinearTexto(CStr(0), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 39, 6))), IIf(CCur(xlHoja.Cells(lnFila + 39, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'IX Posicion Neta en Productos Financieros Derivados (Moneda Extranjera / PEN)
    'Print #1, AlinearTexto((3600), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 43, 4))), IIf(CCur(xlHoja.Cells(lnFila + 43, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 43, 4))), IIf(CCur(xlHoja.Cells(lnFila + 43, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    'JIPR20210416 MEJORA TXT
    Print #1, AlinearTexto((3600), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 42, 4))), IIf(CCur(xlHoja.Cells(lnFila + 42, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(lnFila + 42, 4))), IIf(CCur(xlHoja.Cells(lnFila + 42, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Close ArcSal
     ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
   ' MsgBox "Archivo generado satisfactoriamente" & Chr(13) & Chr(13) & " en " & App.path & "\SPOOLER\", vbInformation, "Aviso!!!"
    GeneraAnexoSBS15A_SUCAVE_TXT1 = True
Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS15A_SUCAVE_TXT1 = False
  'MsgBox TextErr(Err.Description), vbInformation, "Aviso"s
End Function

Public Function GeneraAnexoSBS15A_SUCAVE_TXT2(ByVal psMoneda As String, ByVal pdFecha As Date, ByRef ArchTxt02 As String) As Boolean
     'TXT 02
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    'Dim xlAplicacion As Excel.Application
    'Dim xlLibro As Excel.Workbook
    'Dim xlHojN As Excel.Worksheet
    'Comentado by NAGL 20190625
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim lnFila As Integer, lnF As Integer, nCont As Integer 'NAGL
    Dim yValor, BN As Integer 'NAGL
    
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 15-A : Reporte de Tesoreria y Posición diaria de Liquidez."
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 80
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx15A_New_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx15A_New_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS15A_SUCAVE_TXT2 = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHojN In xlLibro.Worksheets
        If UCase(xlHojN.Name) = UCase("Anx15A") Then
            bEncontrado = True
            xlHojN.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHojN, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS15A_SUCAVE_TXT2 = False
        Exit Function
    End If
    Dim ArcSal2 As Integer
    ArcSal2 = FreeFile
    ArchTxt02 = App.path & "\SPOOLER\01150200109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    Open App.path & "\SPOOLER\01150200109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal2
    Print #ArcSal2, "01150200109" & Format(pdFecha, "YYYYMMDD") & "012"
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
     '1. Operaciones overnight (detalle por contraporte) (17)
    Print #1, AlinearTexto((100000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(59, 3))), IIf(CCur(xlHojN.Cells(59, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(59, 4))), IIf(CCur(xlHojN.Cells(59, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(59, 5))), IIf(CCur(xlHojN.Cells(59, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(59, 6))), IIf(CCur(xlHojN.Cells(59, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(59, 7))), IIf(CCur(xlHojN.Cells(59, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(59, 8))), IIf(CCur(xlHojN.Cells(59, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.1 Activas
    Print #1, AlinearTexto((110000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(60, 3))), IIf(CCur(xlHojN.Cells(60, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(60, 4))), IIf(CCur(xlHojN.Cells(60, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(60, 5))), IIf(CCur(xlHojN.Cells(60, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(60, 6))), IIf(CCur(xlHojN.Cells(60, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(60, 7))), IIf(CCur(xlHojN.Cells(60, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(60, 8))), IIf(CCur(xlHojN.Cells(60, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.1.1 Empresas del sistema financiero
    Print #1, AlinearTexto((111000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(61, 3))), IIf(CCur(xlHojN.Cells(61, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(61, 4))), IIf(CCur(xlHojN.Cells(61, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(61, 5))), IIf(CCur(xlHojN.Cells(61, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(61, 6))), IIf(CCur(xlHojN.Cells(61, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(61, 7))), IIf(CCur(xlHojN.Cells(61, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(61, 8))), IIf(CCur(xlHojN.Cells(61, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
        'Empresas
        Print #1, AlinearTexto((111001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.1.2 Otras
    Print #1, AlinearTexto((112000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(62, 3))), IIf(CCur(xlHojN.Cells(62, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(62, 4))), IIf(CCur(xlHojN.Cells(62, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(62, 5))), IIf(CCur(xlHojN.Cells(62, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(62, 6))), IIf(CCur(xlHojN.Cells(62, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(62, 7))), IIf(CCur(xlHojN.Cells(62, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(62, 8))), IIf(CCur(xlHojN.Cells(62, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    lnF = 63
    nCont = 1
    Do While (xlHojN.Cells(lnF, 2) <> "   1.2 Pasivas")
        'Otras
        'Print #1, AlinearTexto(("11200" & ncont), 7, Derecha); AlinearTexto(("BCRP"), 9, Derecha); AlinearTexto((""), 46, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 3))), IIf(CCur(xlHojN.Cells(lnF, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 4))), IIf(CCur(xlHojN.Cells(lnF, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 5))), IIf(CCur(xlHojN.Cells(lnF, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 6))), IIf(CCur(xlHojN.Cells(lnF, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 7))), IIf(CCur(xlHojN.Cells(lnF, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 8))), IIf(CCur(xlHojN.Cells(lnF, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        'Comentado by NAGL 20191016
        Print #1, AlinearTexto(("112" & Right("00" & CStr(nCont), 3)), 7, Derecha); AlinearTexto(("BCRP"), 9, Derecha); AlinearTexto((""), 46, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 3))), IIf(CCur(xlHojN.Cells(lnF, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 4))), IIf(CCur(xlHojN.Cells(lnF, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 5))), IIf(CCur(xlHojN.Cells(lnF, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 6))), IIf(CCur(xlHojN.Cells(lnF, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 7))), IIf(CCur(xlHojN.Cells(lnF, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnF, 8))), IIf(CCur(xlHojN.Cells(lnF, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        'NAGL 20191016 Según Correo
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
        lnF = lnF + 1
        nCont = nCont + 1
    Loop
    lnFila = lnF - 1
    
    '1.2 Pasivas
Print #1, AlinearTexto((120000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 3))), IIf(CCur(xlHojN.Cells(lnFila + 1, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 4))), IIf(CCur(xlHojN.Cells(lnFila + 1, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 5))), IIf(CCur(xlHojN.Cells(lnFila + 1, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 6))), IIf(CCur(xlHojN.Cells(lnFila + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 7))), IIf(CCur(xlHojN.Cells(lnFila + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 8))), IIf(CCur(xlHojN.Cells(lnFila + 1, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.2.1 Empresas del sistema financiero
Print #1, AlinearTexto((121000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 3))), IIf(CCur(xlHojN.Cells(lnFila + 2, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 4))), IIf(CCur(xlHojN.Cells(lnFila + 2, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 5))), IIf(CCur(xlHojN.Cells(lnFila + 2, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 6))), IIf(CCur(xlHojN.Cells(lnFila + 2, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 7))), IIf(CCur(xlHojN.Cells(lnFila + 2, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 8))), IIf(CCur(xlHojN.Cells(lnFila + 2, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Empresas
    Print #1, AlinearTexto((121001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '1.2.2 Otras
Print #1, AlinearTexto((122000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 3))), IIf(CCur(xlHojN.Cells(lnFila + 3, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 4))), IIf(CCur(xlHojN.Cells(lnFila + 3, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 5))), IIf(CCur(xlHojN.Cells(lnFila + 3, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 6))), IIf(CCur(xlHojN.Cells(lnFila + 3, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 7))), IIf(CCur(xlHojN.Cells(lnFila + 3, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 8))), IIf(CCur(xlHojN.Cells(lnFila + 3, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Otras
    Print #1, AlinearTexto((122001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    '2 Fondos interbancarios
Print #1, AlinearTexto((200000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 3))), IIf(CCur(xlHojN.Cells(lnFila + 4, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 7))), IIf(CCur(xlHojN.Cells(lnFila + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.1 Activos (Cuenta 1201)
Print #1, AlinearTexto((210000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 3))), IIf(CCur(xlHojN.Cells(lnFila + 5, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 4))), IIf(CCur(xlHojN.Cells(lnFila + 5, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 5))), IIf(CCur(xlHojN.Cells(lnFila + 5, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 6))), IIf(CCur(xlHojN.Cells(lnFila + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 7))), IIf(CCur(xlHojN.Cells(lnFila + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 8))), IIf(CCur(xlHojN.Cells(lnFila + 5, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Banco
    Print #1, AlinearTexto((210001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '2.2 Pasivos
Print #1, AlinearTexto((220000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 3))), IIf(CCur(xlHojN.Cells(lnFila + 6, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 4))), IIf(CCur(xlHojN.Cells(lnFila + 6, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 5))), IIf(CCur(xlHojN.Cells(lnFila + 6, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 6))), IIf(CCur(xlHojN.Cells(lnFila + 6, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 7))), IIf(CCur(xlHojN.Cells(lnFila + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 8))), IIf(CCur(xlHojN.Cells(lnFila + 6, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Banco
    Print #1, AlinearTexto((220001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '3 Obligaciones con el Banco de la Nacion (18)
    BN = lnFila + 7
Print #1, AlinearTexto((30000000061#), 12, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 45, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(BN, 3))), IIf(CCur(xlHojN.Cells(BN, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(BN, 4))), IIf(CCur(xlHojN.Cells(BN, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(BN, 5))), IIf(CCur(xlHojN.Cells(BN, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(BN, 6))), IIf(CCur(xlHojN.Cells(BN, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(BN, 7))), IIf(CCur(xlHojN.Cells(BN, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(BN, 8))), IIf(CCur(xlHojN.Cells(BN, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    GeneraAnexoSBS15A_SUCAVE_TXT2OtrasSecciones xlHojN.Application, lnFila, yValor, nprogress, TituloProgress, MensajeProgress 'Traslado by NAGL 20190629

    Close ArcSal2
     ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHojN, False
     GeneraAnexoSBS15A_SUCAVE_TXT2 = True
Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHojN, False
  GeneraAnexoSBS15A_SUCAVE_TXT2 = False
End Function

Public Sub GeneraAnexoSBS15A_SUCAVE_TXT2OtrasSecciones(ByVal xlAplicacion As Excel.Application, ByVal lnFila As Integer, ByVal yValor As Integer, ByVal nprogress As Integer, ByVal TituloProgress As String, ByVal MensajeProgress As String)
'*************NAGL 20190629 Según Anx02_ERS006-2019***************
    '4. Operaciones de venta con compromiso de recompra y operaciones de compra y venta simultánea de valores (19)
Print #1, AlinearTexto((400000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 3))), IIf(CCur(xlHojN.Cells(lnFila + 8, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 4))), IIf(CCur(xlHojN.Cells(lnFila + 8, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 5))), IIf(CCur(xlHojN.Cells(lnFila + 8, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 6))), IIf(CCur(xlHojN.Cells(lnFila + 8, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 7))), IIf(CCur(xlHojN.Cells(lnFila + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 8))), IIf(CCur(xlHojN.Cells(lnFila + 8, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.1 Adquiriente
Print #1, AlinearTexto((410000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 3))), IIf(CCur(xlHojN.Cells(lnFila + 9, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 4))), IIf(CCur(xlHojN.Cells(lnFila + 9, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 5))), IIf(CCur(xlHojN.Cells(lnFila + 9, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 6))), IIf(CCur(xlHojN.Cells(lnFila + 9, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 7))), IIf(CCur(xlHojN.Cells(lnFila + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 8))), IIf(CCur(xlHojN.Cells(lnFila + 9, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    yValor = lnFila + 9
    '4.1.1 Con instrumentos de inversión del BCRP y del Tesoro Público
Print #1, AlinearTexto((411000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 3))), IIf(CCur(xlHojN.Cells(yValor + 1, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 4))), IIf(CCur(xlHojN.Cells(yValor + 1, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 5))), IIf(CCur(xlHojN.Cells(yValor + 1, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 6))), IIf(CCur(xlHojN.Cells(yValor + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 7))), IIf(CCur(xlHojN.Cells(yValor + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 8))), IIf(CCur(xlHojN.Cells(yValor + 1, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.1.1.1 Empresas del sistema financiero
Print #1, AlinearTexto((411001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 3))), IIf(CCur(xlHojN.Cells(yValor + 2, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 4))), IIf(CCur(xlHojN.Cells(yValor + 2, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 5))), IIf(CCur(xlHojN.Cells(yValor + 2, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 6))), IIf(CCur(xlHojN.Cells(yValor + 2, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 7))), IIf(CCur(xlHojN.Cells(yValor + 2, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 8))), IIf(CCur(xlHojN.Cells(yValor + 2, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
     'Detalle
    Print #1, AlinearTexto((411002), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
   '4.1.1.2 Otras
 Print #1, AlinearTexto((411500), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 3))), IIf(CCur(xlHojN.Cells(yValor + 3, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 4))), IIf(CCur(xlHojN.Cells(yValor + 3, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 5))), IIf(CCur(xlHojN.Cells(yValor + 3, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 6))), IIf(CCur(xlHojN.Cells(yValor + 3, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 7))), IIf(CCur(xlHojN.Cells(yValor + 3, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 8))), IIf(CCur(xlHojN.Cells(yValor + 3, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((411501), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue

    '4.1.2 Con otros ALAC
Print #1, AlinearTexto((412000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 3))), IIf(CCur(xlHojN.Cells(yValor + 4, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 4))), IIf(CCur(xlHojN.Cells(yValor + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 5))), IIf(CCur(xlHojN.Cells(yValor + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 6))), IIf(CCur(xlHojN.Cells(yValor + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 7))), IIf(CCur(xlHojN.Cells(yValor + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 8))), IIf(CCur(xlHojN.Cells(yValor + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.1.2.1 Empresas del sistema financiero
Print #1, AlinearTexto((412001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 3))), IIf(CCur(xlHojN.Cells(yValor + 5, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 4))), IIf(CCur(xlHojN.Cells(yValor + 5, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 5))), IIf(CCur(xlHojN.Cells(yValor + 5, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 6))), IIf(CCur(xlHojN.Cells(yValor + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 7))), IIf(CCur(xlHojN.Cells(yValor + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 8))), IIf(CCur(xlHojN.Cells(yValor + 5, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
     'Detalle
    Print #1, AlinearTexto((412002), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)

    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
   '4.1.2.2 Otras
 Print #1, AlinearTexto((412500), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 3))), IIf(CCur(xlHojN.Cells(yValor + 6, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 4))), IIf(CCur(xlHojN.Cells(yValor + 6, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 5))), IIf(CCur(xlHojN.Cells(yValor + 6, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 6))), IIf(CCur(xlHojN.Cells(yValor + 6, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 7))), IIf(CCur(xlHojN.Cells(yValor + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 8))), IIf(CCur(xlHojN.Cells(yValor + 6, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((412501), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)

    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
    '4.1.3 Con otros Instrumentos
Print #1, AlinearTexto((413000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 3))), IIf(CCur(xlHojN.Cells(yValor + 7, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 4))), IIf(CCur(xlHojN.Cells(yValor + 7, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 5))), IIf(CCur(xlHojN.Cells(yValor + 7, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 6))), IIf(CCur(xlHojN.Cells(yValor + 7, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 7))), IIf(CCur(xlHojN.Cells(yValor + 7, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 8))), IIf(CCur(xlHojN.Cells(yValor + 7, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.1.3.1 Empresas del sistema financiero
Print #1, AlinearTexto((413001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 3))), IIf(CCur(xlHojN.Cells(yValor + 8, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 4))), IIf(CCur(xlHojN.Cells(yValor + 8, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 5))), IIf(CCur(xlHojN.Cells(yValor + 8, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 6))), IIf(CCur(xlHojN.Cells(yValor + 8, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 7))), IIf(CCur(xlHojN.Cells(yValor + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 8))), IIf(CCur(xlHojN.Cells(yValor + 8, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)

    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
     'Detalle
    Print #1, AlinearTexto((413002), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
   '4.1.3.2 Otras
 Print #1, AlinearTexto((413500), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 3))), IIf(CCur(xlHojN.Cells(yValor + 9, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 4))), IIf(CCur(xlHojN.Cells(yValor + 9, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 5))), IIf(CCur(xlHojN.Cells(yValor + 9, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 6))), IIf(CCur(xlHojN.Cells(yValor + 9, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 7))), IIf(CCur(xlHojN.Cells(yValor + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 8))), IIf(CCur(xlHojN.Cells(yValor + 9, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((413501), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
      
    yValor = yValor + 9

    '4.2 Enajenante
Print #1, AlinearTexto((420000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 3))), IIf(CCur(xlHojN.Cells(yValor + 1, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 4))), IIf(CCur(xlHojN.Cells(yValor + 1, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 5))), IIf(CCur(xlHojN.Cells(yValor + 1, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 6))), IIf(CCur(xlHojN.Cells(yValor + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 7))), IIf(CCur(xlHojN.Cells(yValor + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 8))), IIf(CCur(xlHojN.Cells(yValor + 1, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    yValor = yValor + 1
     '4.2.1 Con instrumentos de inversión del BCRP y del Tesoro Público
Print #1, AlinearTexto((421000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 3))), IIf(CCur(xlHojN.Cells(yValor + 1, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 4))), IIf(CCur(xlHojN.Cells(yValor + 1, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 5))), IIf(CCur(xlHojN.Cells(yValor + 1, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 6))), IIf(CCur(xlHojN.Cells(yValor + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 7))), IIf(CCur(xlHojN.Cells(yValor + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 1, 8))), IIf(CCur(xlHojN.Cells(yValor + 1, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.2.1.1 Empresas del sistema financiero
Print #1, AlinearTexto((421001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 3))), IIf(CCur(xlHojN.Cells(yValor + 2, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 4))), IIf(CCur(xlHojN.Cells(yValor + 2, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 5))), IIf(CCur(xlHojN.Cells(yValor + 2, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 6))), IIf(CCur(xlHojN.Cells(yValor + 2, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 7))), IIf(CCur(xlHojN.Cells(yValor + 2, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 2, 8))), IIf(CCur(xlHojN.Cells(yValor + 2, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
     'Detalle
    Print #1, AlinearTexto((421002), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
   '4.2.1.2 Otras
 Print #1, AlinearTexto((421500), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 3))), IIf(CCur(xlHojN.Cells(yValor + 3, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 4))), IIf(CCur(xlHojN.Cells(yValor + 3, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 5))), IIf(CCur(xlHojN.Cells(yValor + 3, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 6))), IIf(CCur(xlHojN.Cells(yValor + 3, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 7))), IIf(CCur(xlHojN.Cells(yValor + 3, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 3, 8))), IIf(CCur(xlHojN.Cells(yValor + 3, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((421501), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue

    '4.2.2 Con otros ALAC
Print #1, AlinearTexto((422000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 3))), IIf(CCur(xlHojN.Cells(yValor + 4, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 4))), IIf(CCur(xlHojN.Cells(yValor + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 5))), IIf(CCur(xlHojN.Cells(yValor + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 6))), IIf(CCur(xlHojN.Cells(yValor + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 7))), IIf(CCur(xlHojN.Cells(yValor + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 8))), IIf(CCur(xlHojN.Cells(yValor + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.2.2.1 Empresas del sistema financiero
Print #1, AlinearTexto((422001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 3))), IIf(CCur(xlHojN.Cells(yValor + 5, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 4))), IIf(CCur(xlHojN.Cells(yValor + 5, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 5))), IIf(CCur(xlHojN.Cells(yValor + 5, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 6))), IIf(CCur(xlHojN.Cells(yValor + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 7))), IIf(CCur(xlHojN.Cells(yValor + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 8))), IIf(CCur(xlHojN.Cells(yValor + 5, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
     'Detalle
    Print #1, AlinearTexto((422002), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
   '4.2.2.2 Otras
 Print #1, AlinearTexto((422500), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 3))), IIf(CCur(xlHojN.Cells(yValor + 6, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 4))), IIf(CCur(xlHojN.Cells(yValor + 6, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 5))), IIf(CCur(xlHojN.Cells(yValor + 6, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 6))), IIf(CCur(xlHojN.Cells(yValor + 6, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 7))), IIf(CCur(xlHojN.Cells(yValor + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 8))), IIf(CCur(xlHojN.Cells(yValor + 6, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((422501), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue

    '4.2.3 Con otros Instrumentos
Print #1, AlinearTexto((423000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 3))), IIf(CCur(xlHojN.Cells(yValor + 7, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 4))), IIf(CCur(xlHojN.Cells(yValor + 7, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 5))), IIf(CCur(xlHojN.Cells(yValor + 7, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 6))), IIf(CCur(xlHojN.Cells(yValor + 7, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 7))), IIf(CCur(xlHojN.Cells(yValor + 7, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 8))), IIf(CCur(xlHojN.Cells(yValor + 7, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    ' 4.2.3.1 Empresas del sistema financiero
Print #1, AlinearTexto((423001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 3))), IIf(CCur(xlHojN.Cells(yValor + 8, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 4))), IIf(CCur(xlHojN.Cells(yValor + 8, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 5))), IIf(CCur(xlHojN.Cells(yValor + 8, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 6))), IIf(CCur(xlHojN.Cells(yValor + 8, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 7))), IIf(CCur(xlHojN.Cells(yValor + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 8))), IIf(CCur(xlHojN.Cells(yValor + 8, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
     'Detalle
    Print #1, AlinearTexto((423002), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '4.2.3.2 Otras
 Print #1, AlinearTexto((423500), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 3))), IIf(CCur(xlHojN.Cells(yValor + 9, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 4))), IIf(CCur(xlHojN.Cells(yValor + 9, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 5))), IIf(CCur(xlHojN.Cells(yValor + 9, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 6))), IIf(CCur(xlHojN.Cells(yValor + 9, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 7))), IIf(CCur(xlHojN.Cells(yValor + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 8))), IIf(CCur(xlHojN.Cells(yValor + 9, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((423501), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
'***************************END NAGL 20190626***********************

    yValor = yValor + 9 - 3
    '5 Transferencia temporal de valores
Print #1, AlinearTexto((500000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 3))), IIf(CCur(xlHojN.Cells(yValor + 4, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 4))), IIf(CCur(xlHojN.Cells(yValor + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 5))), IIf(CCur(xlHojN.Cells(yValor + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 6))), IIf(CCur(xlHojN.Cells(yValor + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 7))), IIf(CCur(xlHojN.Cells(yValor + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 4, 8))), IIf(CCur(xlHojN.Cells(yValor + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '5.1. Con activos liquidos
Print #1, AlinearTexto((510000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 3))), IIf(CCur(xlHojN.Cells(yValor + 5, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 4))), IIf(CCur(xlHojN.Cells(yValor + 5, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 5))), IIf(CCur(xlHojN.Cells(yValor + 5, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 6))), IIf(CCur(xlHojN.Cells(yValor + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 7))), IIf(CCur(xlHojN.Cells(yValor + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 5, 8))), IIf(CCur(xlHojN.Cells(yValor + 5, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((510001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '5.2. Con activos no liquidos
Print #1, AlinearTexto((520000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 3))), IIf(CCur(xlHojN.Cells(yValor + 6, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 4))), IIf(CCur(xlHojN.Cells(yValor + 6, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 5))), IIf(CCur(xlHojN.Cells(yValor + 6, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 6))), IIf(CCur(xlHojN.Cells(yValor + 6, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 7))), IIf(CCur(xlHojN.Cells(yValor + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 6, 8))), IIf(CCur(xlHojN.Cells(yValor + 6, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    'Detalle
    Print #1, AlinearTexto((520001), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '6. Creditos del BCRP con fines de regulacion monetaria
Print #1, AlinearTexto((600000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 3))), IIf(CCur(xlHojN.Cells(yValor + 7, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 4))), IIf(CCur(xlHojN.Cells(yValor + 7, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 5))), IIf(CCur(xlHojN.Cells(yValor + 7, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 6))), IIf(CCur(xlHojN.Cells(yValor + 7, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 7))), IIf(CCur(xlHojN.Cells(yValor + 7, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 7, 8))), IIf(CCur(xlHojN.Cells(yValor + 7, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '7 . Operaciones de Reporte de Monedas con el BCRP
Print #1, AlinearTexto((700000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 3))), IIf(CCur(xlHojN.Cells(yValor + 8, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 4))), IIf(CCur(xlHojN.Cells(yValor + 8, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 5))), IIf(CCur(xlHojN.Cells(yValor + 8, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 6))), IIf(CCur(xlHojN.Cells(yValor + 8, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 7))), IIf(CCur(xlHojN.Cells(yValor + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 8, 8))), IIf(CCur(xlHojN.Cells(yValor + 8, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '7.1. Repo Regular
Print #1, AlinearTexto((710000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 3))), IIf(CCur(xlHojN.Cells(yValor + 9, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 4))), IIf(CCur(xlHojN.Cells(yValor + 9, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 5))), IIf(CCur(xlHojN.Cells(yValor + 9, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 6))), IIf(CCur(xlHojN.Cells(yValor + 9, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 7))), IIf(CCur(xlHojN.Cells(yValor + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(yValor + 9, 8))), IIf(CCur(xlHojN.Cells(yValor + 9, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    lnFila = yValor + 9
    '7.2. Repo Expansión
Print #1, AlinearTexto((720000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 3))), IIf(CCur(xlHojN.Cells(lnFila + 1, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 4))), IIf(CCur(xlHojN.Cells(lnFila + 1, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 5))), IIf(CCur(xlHojN.Cells(lnFila + 1, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 6))), IIf(CCur(xlHojN.Cells(lnFila + 1, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 7))), IIf(CCur(xlHojN.Cells(lnFila + 1, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 1, 8))), IIf(CCur(xlHojN.Cells(lnFila + 1, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '7.3. Repo Sustitución
Print #1, AlinearTexto((730000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 3))), IIf(CCur(xlHojN.Cells(lnFila + 2, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 4))), IIf(CCur(xlHojN.Cells(lnFila + 2, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 5))), IIf(CCur(xlHojN.Cells(lnFila + 2, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 6))), IIf(CCur(xlHojN.Cells(lnFila + 2, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 7))), IIf(CCur(xlHojN.Cells(lnFila + 2, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 2, 8))), IIf(CCur(xlHojN.Cells(lnFila + 2, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    '8 . Swaps cambiario del BCRP
Print #1, AlinearTexto((800000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 3))), IIf(CCur(xlHojN.Cells(lnFila + 3, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 4))), IIf(CCur(xlHojN.Cells(lnFila + 3, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 5))), IIf(CCur(xlHojN.Cells(lnFila + 3, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 6))), IIf(CCur(xlHojN.Cells(lnFila + 3, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 7))), IIf(CCur(xlHojN.Cells(lnFila + 3, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 3, 8))), IIf(CCur(xlHojN.Cells(lnFila + 3, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    
 'JIPR20210318 REPOGART INICIO
 GeneraAnexoSBS15A_SUCAVE_TXT2OtrasOperaciones xlHojN.Application, lnFila, yValor, nprogress, TituloProgress, MensajeProgress
 'JIPR20210318 REPOGART FIN
 
    '10.  Subastas del Tesoro Público
    lnFila = lnFila + 7
 Print #1, AlinearTexto((1000000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 3))), IIf(CCur(xlHojN.Cells(lnFila + 5, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 4))), IIf(CCur(xlHojN.Cells(lnFila + 5, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 5))), IIf(CCur(xlHojN.Cells(lnFila + 5, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 6))), IIf(CCur(xlHojN.Cells(lnFila + 5, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 7))), IIf(CCur(xlHojN.Cells(lnFila + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 8))), IIf(CCur(xlHojN.Cells(lnFila + 5, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    nprogress = nprogress + 1
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
End Sub 'NAGL 20190625 Anx02_RS006-2019

 'JIPR20210318 REPOGART INICIO
Public Sub GeneraAnexoSBS15A_SUCAVE_TXT2OtrasOperaciones(ByVal xlAplicacion As Excel.Application, ByVal lnFila As Integer, ByVal yValor As Integer, ByVal nprogress As Integer, ByVal TituloProgress As String, ByVal MensajeProgress As String)
    '9.  Operaciones de reporte de cartera de créditos con el BCRP
Print #1, AlinearTexto((900000), 7, Derecha); AlinearTexto((""), 5, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 7))), IIf(CCur(xlHojN.Cells(lnFila + 4, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    ' 9.1  REPOGARTR00898
Print #1, AlinearTexto((900001), 7, Derecha); AlinearTexto(("REPOGARTR00898"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 5, 7))), IIf(CCur(xlHojN.Cells(lnFila + 5, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
     '9.2  REPOGARTR04298
Print #1, AlinearTexto((900002), 7, Derecha); AlinearTexto(("REPOGARTR04298"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 6, 7))), IIf(CCur(xlHojN.Cells(lnFila + 6, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    ' 9.3  REPOGARTR04695
Print #1, AlinearTexto((900003), 7, Derecha); AlinearTexto(("REPOGARTR04695"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 7, 7))), IIf(CCur(xlHojN.Cells(lnFila + 7, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
   '  9.4  REPOGARTR06695
Print #1, AlinearTexto((900004), 7, Derecha); AlinearTexto(("REPOGARTR06695"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 8, 7))), IIf(CCur(xlHojN.Cells(lnFila + 8, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
   ' 9.5  REPOGARTR07898
Print #1, AlinearTexto((900005), 7, Derecha); AlinearTexto(("REPOGARTR07898"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 9, 7))), IIf(CCur(xlHojN.Cells(lnFila + 9, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    '9.6  REPOGARTE04398
Print #1, AlinearTexto((900006), 7, Derecha); AlinearTexto(("REPOGARTE04398"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 10, 7))), IIf(CCur(xlHojN.Cells(lnFila + 10, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    '9.7  REPOGARTE08498
Print #1, AlinearTexto((900007), 7, Derecha); AlinearTexto(("REPOGARTE08498"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 11, 7))), IIf(CCur(xlHojN.Cells(lnFila + 11, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
'ANPS 20210818 REPOPROG INICIO
    '9.8  REPOPROG0277
Print #1, AlinearTexto((900008), 7, Derecha); AlinearTexto(("REPOPROG0277"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 12, 7))), IIf(CCur(xlHojN.Cells(lnFila + 12, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    '9.9  REPOPROG0290
Print #1, AlinearTexto((900009), 7, Derecha); AlinearTexto(("REPOPROG0290"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 13, 7))), IIf(CCur(xlHojN.Cells(lnFila + 13, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    '9.10  REPOPROG0291
Print #1, AlinearTexto((900010), 7, Derecha); AlinearTexto(("REPOPROG0291"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 14, 7))), IIf(CCur(xlHojN.Cells(lnFila + 14, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    '9.11  REPOPROG0292
Print #1, AlinearTexto((900011), 7, Derecha); AlinearTexto(("REPOPROG0292"), 19, Derecha); AlinearTexto((""), 50, Derecha); AlinearTexto((0), 4, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 4))), IIf(CCur(xlHojN.Cells(lnFila + 4, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 5))), IIf(CCur(xlHojN.Cells(lnFila + 4, 5)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 6))), IIf(CCur(xlHojN.Cells(lnFila + 4, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 15, 7))), IIf(CCur(xlHojN.Cells(lnFila + 15, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHojN.Cells(lnFila + 4, 8))), IIf(CCur(xlHojN.Cells(lnFila + 4, 8)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
'ANPS 20210818 REPOPROG FIN
	'oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
End Sub
 'JIPR20210318 REPOGART FIN


Public Sub GeneraAnexoSBS15B_SUCAVE(ByVal pdFecha As Date)
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim Progress As clsProgressBar
    Dim carp As String
    
    On Error GoTo ErrBegin
    Set Progress = New clsProgressBar
    Progress.ShowForm frmReportes
    Progress.Max = 42
    TituloProgress = "Anexo 15-B: Ratio de Cobertura de Liquidez"
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx15B_New_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    'psArchivoALeer = App.path & "\SPOOLER\" & "Anx15B_New_" & gsCodUser & "_" & Format(pdFecha, "yyyymmdd") & ".xls"
   
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx15B_New_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            Progress.CloseForm frmReportes
            MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
            Exit Sub
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx15B") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
         Progress.CloseForm frmReportes
         MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    Dim ArcSal As Integer
    Dim I As Integer
    Dim nCod As Integer
    ArcSal = FreeFile
    Open App.path & "\SPOOLER\01150400109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01150400109" & Format(pdFecha, "YYYYMMDD") & "012"
    'ACTIVOS LIQUIDOS DE ALTA CALIDAD
    Print #1, AlinearTexto((100), 6, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto((0), 18, Derecha); AlinearTexto((0), 18, Derecha)
    Progress.Progress 1, TituloProgress, MensajeProgress, "", vbBlue
    'Caja
    Print #1, AlinearTexto((200), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(10, 3))), IIf(CCur(xlHoja.Cells(10, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(10, 4))), IIf(CCur(xlHoja.Cells(10, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(10, 5))), IIf(CCur(xlHoja.Cells(10, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(10, 6))), IIf(CCur(xlHoja.Cells(10, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(10, 7))), IIf(CCur(xlHoja.Cells(10, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 2, TituloProgress, MensajeProgress, "", vbBlue
    'Fondos Netos disponibles en el BCRP (3)
    Print #1, AlinearTexto((300), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(11, 3))), IIf(CCur(xlHoja.Cells(11, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(11, 4))), IIf(CCur(xlHoja.Cells(11, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(11, 5))), IIf(CCur(xlHoja.Cells(11, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(11, 6))), IIf(CCur(xlHoja.Cells(11, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(11, 7))), IIf(CCur(xlHoja.Cells(11, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 3, TituloProgress, MensajeProgress, "", vbBlue
    'Ajuste por encaje exigible
    Print #1, AlinearTexto((350), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(12, 3))), IIf(CCur(xlHoja.Cells(12, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(12, 4))), IIf(CCur(xlHoja.Cells(12, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(12, 5))), IIf(CCur(xlHoja.Cells(12, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(12, 6))), IIf(CCur(xlHoja.Cells(12, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(12, 7))), IIf(CCur(xlHoja.Cells(12, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 4, TituloProgress, MensajeProgress, "", vbBlue
    'Encaje Liberado por los flujos salientes(4) - Total (I)
    nCod = 400
    For i = 13 To 16 Step 1
        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
        nCod = nCod + 100
    Next
    ' Valores representativos de deuda emitidos por Gobiernos del Exterior de Riesgo II  ANPS
    Print #1, AlinearTexto((725), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 3))), IIf(CCur(xlHoja.Cells(17, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 4))), IIf(CCur(xlHoja.Cells(17, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(17, 5))), IIf(CCur(xlHoja.Cells(17, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 6))), IIf(CCur(xlHoja.Cells(17, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 7))), IIf(CCur(xlHoja.Cells(17, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 9, TituloProgress, MensajeProgress, "", vbBlue
        '      Bonos corporativos emitidos por empresas privadas del sector no financiero  ANPS
    Print #1, AlinearTexto((750), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(18, 3))), IIf(CCur(xlHoja.Cells(18, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(18, 4))), IIf(CCur(xlHoja.Cells(18, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(18, 5))), IIf(CCur(xlHoja.Cells(18, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(18, 6))), IIf(CCur(xlHoja.Cells(18, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(18, 7))), IIf(CCur(xlHoja.Cells(18, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 10, TituloProgress, MensajeProgress, "", vbBlue
        '      Valores representativos de deuda emitidos por Gobiernos del Exterior de Riesgo III (6) ANPS
    Print #1, AlinearTexto((755), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(19, 3))), IIf(CCur(xlHoja.Cells(19, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(19, 4))), IIf(CCur(xlHoja.Cells(19, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(19, 5))), IIf(CCur(xlHoja.Cells(19, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(19, 6))), IIf(CCur(xlHoja.Cells(19, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(19, 7))), IIf(CCur(xlHoja.Cells(19, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 11, TituloProgress, MensajeProgress, "", vbBlue
        '      Valores represent.deuda del BCRP y Gobierno Central recibidos en operaciones de reporte (22) ANPS
    Print #1, AlinearTexto((760), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(20, 3))), IIf(CCur(xlHoja.Cells(20, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(20, 4))), IIf(CCur(xlHoja.Cells(20, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(20, 5))), IIf(CCur(xlHoja.Cells(20, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(20, 6))), IIf(CCur(xlHoja.Cells(20, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(20, 7))), IIf(CCur(xlHoja.Cells(20, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 12, TituloProgress, MensajeProgress, "", vbBlue
        '      Valores represent.deuda de Gobiernos del Exterior de Riesgo I recib. en operaciones de reporte (22) ANPS
    Print #1, AlinearTexto((770), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(21, 3))), IIf(CCur(xlHoja.Cells(21, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(21, 4))), IIf(CCur(xlHoja.Cells(21, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(21, 5))), IIf(CCur(xlHoja.Cells(21, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(21, 6))), IIf(CCur(xlHoja.Cells(21, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(21, 7))), IIf(CCur(xlHoja.Cells(21, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 13, TituloProgress, MensajeProgress, "", vbBlue
        '      Valores represent.deuda de Gobiernos del Exterior de Riesgo II recib. en operaciones de reporte (22)  ANPS
    Print #1, AlinearTexto((775), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(22, 3))), IIf(CCur(xlHoja.Cells(22, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(22, 4))), IIf(CCur(xlHoja.Cells(22, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(22, 5))), IIf(CCur(xlHoja.Cells(22, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(22, 6))), IIf(CCur(xlHoja.Cells(22, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(22, 7))), IIf(CCur(xlHoja.Cells(22, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 14, TituloProgress, MensajeProgress, "", vbBlue
        '      Bonos corporativos emitidos por emp.privadas del sector no financ.recibidos en oper.de reporte (22) ANPS
    Print #1, AlinearTexto((780), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(23, 3))), IIf(CCur(xlHoja.Cells(23, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(23, 4))), IIf(CCur(xlHoja.Cells(23, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(23, 5))), IIf(CCur(xlHoja.Cells(23, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(23, 6))), IIf(CCur(xlHoja.Cells(23, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(23, 7))), IIf(CCur(xlHoja.Cells(23, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 15, TituloProgress, MensajeProgress, "", vbBlue
            '     Valores represent.deuda de Gobiernos del Exterior de Riesgo III recib. en operac. de reporte (22) ANPS
    Print #1, AlinearTexto((790), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(24, 3))), IIf(CCur(xlHoja.Cells(24, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(24, 4))), IIf(CCur(xlHoja.Cells(24, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(24, 5))), IIf(CCur(xlHoja.Cells(24, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(24, 6))), IIf(CCur(xlHoja.Cells(24, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(24, 7))), IIf(CCur(xlHoja.Cells(24, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 16, TituloProgress, MensajeProgress, "", vbBlue
   
    'Print #1, AlinearTexto((750), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 3))), IIf(CCur(xlHoja.Cells(17, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 4))), IIf(CCur(xlHoja.Cells(17, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(17, 5))), IIf(CCur(xlHoja.Cells(17, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 6))), IIf(CCur(xlHoja.Cells(17, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(17, 7))), IIf(CCur(xlHoja.Cells(17, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)'Comentado by NAGL 20190518
'    nCod = 750
'    For i = 17 To 20 Step 1
'        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
'        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
'        nCod = nCod + 10
'    Next 'NAGL 20190518
'    Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
    nCod = 800
    For i = 25 To 27 Step 1 'ANPS
        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
        nCod = nCod + 100
    Next
    nCod = 1100
    For i = 31 To 38 Step 1 'ANPS
       Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
       Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
       nCod = nCod + 100
    Next
    'CuentaxCobrarOperReporte
    'Print #1, AlinearTexto((1850), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(32, 3))), IIf(CCur(xlHoja.Cells(32, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(32, 4))), IIf(CCur(xlHoja.Cells(32, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(32, 5))), IIf(CCur(xlHoja.Cells(32, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(32, 6))), IIf(CCur(xlHoja.Cells(32, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(32, 7))), IIf(CCur(xlHoja.Cells(32, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha) 'Comentado by NAGL 20190518
    nCod = 1810
    For i = 39 To 40 Step 1
       Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
       Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
       nCod = nCod + 10
    Next
    Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
    
    nCod = 1825 'ANPS
    For i = 41 To 44 Step 1
       Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
       Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
       nCod = nCod + 5
    Next
    Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
    
    '  Operaciones por liquidar (20) ANPS
    Print #1, AlinearTexto((1850), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(45, 3))), IIf(CCur(xlHoja.Cells(45, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(45, 4))), IIf(CCur(xlHoja.Cells(45, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(45, 5))), IIf(CCur(xlHoja.Cells(45, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(45, 6))), IIf(CCur(xlHoja.Cells(45, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(45, 7))), IIf(CCur(xlHoja.Cells(45, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 45, TituloProgress, MensajeProgress, "", vbBlue
   
    
    nCod = 1900
    For i = 46 To 53 Step 1 'ANPS
        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.000")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
        nCod = nCod + 100
    Next
    
    Print #1, AlinearTexto((2800), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(54, 3))), IIf(CCur(xlHoja.Cells(54, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(54, 4))), IIf(CCur(xlHoja.Cells(54, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(54, 5))), IIf(CCur(xlHoja.Cells(54, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(54, 6))), IIf(CCur(xlHoja.Cells(54, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(54, 7))), IIf(CCur(xlHoja.Cells(54, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue 'ANPS
    
    nCod = 2900
    For i = 55 To 61 Step 1 ' ANPS
        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
        nCod = nCod + 100
    Next
    'Cuentas por Pagar - Operaciones de Reporte
    'Print #1, AlinearTexto((3550), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(49, 3))), IIf(CCur(xlHoja.Cells(49, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(49, 4))), IIf(CCur(xlHoja.Cells(49, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(49, 5))), IIf(CCur(xlHoja.Cells(49, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(49, 6))), IIf(CCur(xlHoja.Cells(49, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(49, 7))), IIf(CCur(xlHoja.Cells(49, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)'Comentado by NAGL 20190520
    nCod = 3510
    For i = 62 To 63 Step 1 'ANPS
       Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
       Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
       nCod = nCod + 10
    Next
    Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
    
    nCod = 3525 'ANPS
    For i = 64 To 67 Step 1
       Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
       Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
       nCod = nCod + 5
    Next
    Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
    
        '  Operaciones por liquidar (21) ANPS
    Print #1, AlinearTexto((3550), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(68, 3))), IIf(CCur(xlHoja.Cells(68, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(68, 4))), IIf(CCur(xlHoja.Cells(68, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(68, 5))), IIf(CCur(xlHoja.Cells(68, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(68, 6))), IIf(CCur(xlHoja.Cells(68, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(68, 7))), IIf(CCur(xlHoja.Cells(68, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 68, TituloProgress, MensajeProgress, "", vbBlue
   
    
    nCod = 3600 'anps
     For i = 69 To 71 Step 1 'NAGL 20191211 Cambió de 65 a 66 Según RFC1912050003
        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
        nCod = nCod + 100
'        If (i = 63 Or i = 64) Then
'           nCod = nCod - 50
'        End If 'NAGL 20191211 Agregó Condicional Según RFC1912050003
    Next
    '  Créditos concedidos no desembolsados - hipoteca inversa (18A) ANPS
    Print #1, AlinearTexto((3850), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(72, 3))), IIf(CCur(xlHoja.Cells(72, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(72, 4))), IIf(CCur(xlHoja.Cells(72, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(72, 5))), IIf(CCur(xlHoja.Cells(72, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(72, 6))), IIf(CCur(xlHoja.Cells(72, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(72, 7))), IIf(CCur(xlHoja.Cells(72, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
    Progress.Progress 72, TituloProgress, MensajeProgress, "", vbBlue
   
        nCod = 3900 'anps
     For i = 73 To 74 Step 1
        Print #1, AlinearTexto((nCod), 6, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 3))), IIf(CCur(xlHoja.Cells(i, 3)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 4))), IIf(CCur(xlHoja.Cells(i, 4)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Left(Replace(Format(CStr(CCur(xlHoja.Cells(i, 5))), IIf(CCur(xlHoja.Cells(i, 5)) = 0, "0", "#0.00")) + "00000000", ".", ""), 9), 12, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 6))), IIf(CCur(xlHoja.Cells(i, 6)) = 0, "0", "#0.00")), ".", ""), 18, Derecha); AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(i, 7))), IIf(CCur(xlHoja.Cells(i, 7)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        Progress.Progress i, TituloProgress, MensajeProgress, "", vbBlue
        nCod = nCod + 100
    Next
    Close ArcSal
     ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
     Progress.CloseForm frmReportes
     If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el archivo?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        carp = "notepad " & App.path & "\SPOOLER\01150400109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
        Shell carp, vbMaximizedFocus
    End If
Exit Sub
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  Progress.CloseForm frmReportes
  MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub 'Cambios by NAGL 20190520

Public Sub GeneraAnexoSBS15C_SUCAVE(ByVal pdFecha As Date)
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim Progress As clsProgressBar
    Dim nprogress As Integer
    Dim carp As String
    
    On Error GoTo ErrBegin
    Set Progress = New clsProgressBar
    Progress.ShowForm frmReportes
    Progress.Max = 64
    TituloProgress = "Anexo 15-C: Posición Mensual de Liquidez"
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 0
    Progress.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx15C_New_" & Format(pdFecha, "mmyyyy") & ".xls"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx15C_New_" & Format(pdFecha, "mmyyyy") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            Progress.CloseForm frmReportes
            MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
            Exit Sub
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx15C") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        Progress.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    Dim ArcSal As Integer
    Dim col As Integer
    Dim Fil As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sDia As String * 3
    Dim sValor As String * 18
    Dim sCadena As String
    Dim X As Integer
    ArcSal = FreeFile
    Open App.path & "\SPOOLER\01150300109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01150300109" & Format(pdFecha, "YYYYMMDD") & "012"
    nCod = 100
    nprogress = nprogress + 1
    For col = 2 To (3 + DatePart("D", pdFecha)) Step 1
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sDia = AlinearTexto(CStr(0), 3, Derecha)
        sCadena = sCod & sDia
        If col = 2 Then
            For X = 1 To 36 Step 1 'NAGL Cambió de 31 a 36
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
        Else
            For Fil = 13 To 47 Step 1 'Changed by NAGL 20190625 'Antes Fil = 13 To 47
                If Not (Fil = 25 Or Fil = 37) Then 'Changed by NAGL 20190625 'Antes (Fil = 23 Or Fil = 34)
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(Fil, col))), IIf(CCur(xlHoja.Cells(Fil, col)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                    If (Fil = 15 Or Fil = 19 Or Fil = 46) Then
                        sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                        sCadena = sCadena & sValor
                    End If 'Condicional agregado by NAGL 20190625
                End If
            Next
        End If
        Print #1, sCadena
        'nCod = IIf(col = 32, 200, nCod + 1) Comentado PASI
        nCod = IIf(col = DatePart("D", pdFecha) + 2, 200, nCod + 1)
        nprogress = nprogress + 1
        Progress.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next
    nCod = 300
    For col = 2 To (3 + DatePart("D", pdFecha)) Step 1
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sDia = AlinearTexto(CStr(0), 3, Derecha)
        sCadena = sCod & sDia
        If col = 2 Then
            For X = 1 To 36 Step 1 'NAGL Cambió de 31 a 36
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
        Else
            For Fil = 56 To 94 Step 1 'Changed by NAGL 20190625 'Antes Fil = 54 To 87
                If Not (Fil = 70 Or Fil = 81 Or Fil = 83) Then 'Changed by NAGL 20190625 'Antes (Fil = 64 Or Fil = 74 Or Fil = 76)
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(Fil, col))), IIf(CCur(xlHoja.Cells(Fil, col)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            Next
        End If
        Print #1, sCadena
        'nCod = IIf(col = 32, 400, nCod + 1) Comentado PASI
        nCod = IIf(col = DatePart("D", pdFecha) + 2, 400, nCod + 1)
        nprogress = nprogress + 1
        Progress.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    Progress.CloseForm frmReportes
    If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el archivo?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        carp = "notepad " & App.path & "\SPOOLER\01150300109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
        Shell carp, vbMaximizedFocus
    End If
Exit Sub
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub

Public Sub GeneraAnexoSBS16A_SUCAVE(ByVal pdFecha As Date)
    Dim ArchAnx16AMN As String
    Dim ArchAnx16AME As String
    Dim ArchAnx16ATotal As String
    Dim ArchAnx16AInd As String
    Dim ArchAnx16B As String
    Dim carp As String
    Dim carp2 As String
    Dim carp3 As String
    Dim carp4 As String
    Dim carp5 As String
    On Error GoTo ERROR
    Set oBarra = New clsProgressBar
    oBarra.ShowForm frmReportes
    oBarra.Max = 335
    If Not GeneraAnexoSBS16AMN_SUCAVE(pdFecha, ArchAnx16AMN) Then
        oBarra.CloseForm frmReportes
         MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS16AME_SUCAVE(pdFecha, ArchAnx16AME) Then
        oBarra.CloseForm frmReportes
         MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS16ATotal_SUCAVE(pdFecha, ArchAnx16ATotal) Then
        oBarra.CloseForm frmReportes
         MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS16AIND_SUCAVE(pdFecha, ArchAnx16AInd) Then
        oBarra.CloseForm frmReportes
         MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS16B_SUCAVE(pdFecha, ArchAnx16B) Then
        oBarra.CloseForm frmReportes
         MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    oBarra.CloseForm frmReportes
    If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el grupo de archivos?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        carp = "notepad " & ArchAnx16AMN
        carp2 = "notepad " & ArchAnx16AME
        carp3 = "notepad " & ArchAnx16ATotal
        carp4 = "notepad " & ArchAnx16AInd
        carp5 = "notepad " & ArchAnx16B
        Shell carp, vbMaximizedFocus
        Shell carp2, vbMaximizedFocus
        Shell carp3, vbMaximizedFocus
        Shell carp4, vbMaximizedFocus
        Shell carp5, vbMaximizedFocus
    End If
Exit Sub
ERROR:
    oBarra.CloseForm frmReportes
    MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub

Public Function GeneraAnexoSBS16AMN_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx16AMN As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim carp As String
    Dim I, Y As Integer
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 16-A MN: Cuadro de liquidez por plazo de vencimiento de corto plazo"
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 0
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS16AMN_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx16AMN") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS16AMN_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 6
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx16AMN = App.path & "\SPOOLER\01160100109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    Open App.path & "\SPOOLER\01160100109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01160100109" & Format(pdFecha, "YYYYMMDD") & "012"
    nCod = 100
    nprogress = nprogress + 1
    I = 7 'NAGL 202012
    'For i = 7 To 61 Step 1 'Comentado by NAGL 202012
    Do While I <= 71 'NAGL 202012
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 14 Step 1
            If I = 7 Or I = 8 Or I = 56 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena 'NAGL 202012
        Select Case I
            Case 13
                I = I + 8
            Case 22
                I = I + 4
            Case 27
                I = I + 2
            Case 30
                I = I + 2
            Case 33
                I = I + 9
            Case 44
                I = I + 7
        End Select 'NAGL 202012 Según Acta N°094-2020
        
        If I = 32 Or I = 42 Or I = 43 Or I = 67 Or I = 68 Then
            nCod = nCod + 10
        ElseIf I = 59 Then
            nCod = nCod + 200
        ElseIf I = 51 Then
            nCod = 1100
        ElseIf I = 69 Then
            nCod = 2800
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
        'If Not ((i >= 14 And i <= 26) Or (i >= 28 And i <= 35) Or (i >= 37 And i <= 39) Or (i >= 41 And i <= 43)) Then
            'If (i = 52) Then
                'Print #1, sCadena
                'nCod = nCod + 100
            'Else
                'Print #1, sCadena
                'nCod = nCod + 100
                    'If (i = 51) Then
                    'nCod = 2000
                    'End If
            'End If
        'End If 'Comentado by NAGL 202012
        I = I + 1 'NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Loop
    
    nCod = 3000
    For I = 72 To 105 Step 1
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 14 Step 1
            If I = 72 Or I = 73 Or I = 86 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            ElseIf (I = 105) Then
                If CCur(xlHoja.Cells(I, Y)) > 0.09 And CCur(xlHoja.Cells(I, Y)) < 1 Or (CCur(xlHoja.Cells(I, Y)) < -0.09) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                    
                ElseIf (CCur(xlHoja.Cells(I, Y)) < 0.1 And CCur(xlHoja.Cells(I, Y)) > 0) Or (CCur(xlHoja.Cells(I, Y)) > -0.1 And CCur(xlHoja.Cells(I, Y)) < 0) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.#0")), ".0", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                Else
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena
        If (I = 95) Then
            nCod = 5500
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
        'If (i <> 86) Then
            'Print #1, sCadena
            'nCod = nCod + 100
                'If (i = 85) Then
                    'nCod = 5500
                'End If
        'Else
            'Print #1, sCadena
            'nCod = nCod + 100
        'End If 'Comentado by NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next
    'NAGL 20170407
    Close ArcSal
    'ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS16AMN_SUCAVE = True
Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS16AMN_SUCAVE = False
End Function

Public Function GeneraAnexoSBS16AME_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx16AME As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim carp As String
    Dim I, Y As Integer
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 16-A ME: Cuadro de liquidez por plazo de vencimiento de corto plazo"
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 91
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS16AME_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx16AME") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS16AME_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 6
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx16AME = App.path & "\SPOOLER\01160200109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    Open App.path & "\SPOOLER\01160200109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01160200109" & Format(pdFecha, "YYYYMMDD") & "012"
    nCod = 100
    nprogress = nprogress + 1
    I = 7 'NAGL 202012
    'For i = 7 To 61 Step 1'Comentado by NAGL 202012
    Do While I <= 71 'NAGL 202012
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 14 Step 1
            If I = 7 Or I = 8 Or I = 56 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena 'NAGL 202012
        Select Case I
            Case 13
                I = I + 8
            Case 22
                I = I + 4
            Case 27
                I = I + 2
            Case 30
                I = I + 2
            Case 33
                I = I + 9
            Case 44
                I = I + 7
        End Select 'NAGL 202012 Según Acta N°094-2020
        
        If I = 32 Or I = 42 Or I = 43 Or I = 67 Or I = 68 Then
            nCod = nCod + 10
        ElseIf I = 59 Then
            nCod = nCod + 200
        ElseIf I = 51 Then
            nCod = 1100
        ElseIf I = 69 Then
            nCod = 2800
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
        'If Not ((i >= 14 And i <= 26) Or (i >= 28 And i <= 35) Or (i >= 37 And i <= 39) Or (i >= 41 And i <= 43)) Then
            'If (i = 52) Then
                'Print #1, sCadena
                'nCod = nCod + 100
            'Else
                'Print #1, sCadena
                'nCod = nCod + 100
                    'If (i = 51) Then
                    'nCod = 2000
                    'End If
            'End If
        'End If 'Comentado by NAGL 202012
        I = I + 1 'NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Loop
    
    nCod = 3000
    For I = 72 To 105 Step 1
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 14 Step 1
            If I = 72 Or I = 73 Or I = 86 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            ElseIf (I = 105) Then
                If CCur(xlHoja.Cells(I, Y)) > 0.09 And CCur(xlHoja.Cells(I, Y)) < 1 Or (CCur(xlHoja.Cells(I, Y)) < -0.09) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                    ElseIf (CCur(xlHoja.Cells(I, Y)) < 0.1 And CCur(xlHoja.Cells(I, Y)) > 0) Or (CCur(xlHoja.Cells(I, Y)) > -0.1 And CCur(xlHoja.Cells(I, Y)) < 0) Then
                        sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.#0")), ".0", ""), 18, Derecha)
                        sCadena = sCadena & sValor
                    Else
                        sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                        sCadena = sCadena & sValor
                End If
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena
        If (I = 95) Then
            nCod = 5500
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
         'If (i <> 86) Then
            'Print #1, sCadena
            'nCod = nCod + 100
                'If (i = 85) Then
                    'nCod = 5500
                'End If
        'Else
            'Print #1, sCadena
            'nCod = nCod + 100
        'End If 'Comentado by NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next 'NAGL 20170407
    
    Close ArcSal
    'ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS16AME_SUCAVE = True
Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS16AME_SUCAVE = False
End Function

Public Function GeneraAnexoSBS16ATotal_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx16ATotal As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim carp As String
    Dim I, Y As Integer
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 16-A Total: Cuadro de liquidez por plazo de vencimiento de corto plazo"
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 182
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS16ATotal_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx16ATotal") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS16ATotal_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 6
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx16ATotal = App.path & "\SPOOLER\01160300109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    Open App.path & "\SPOOLER\01160300109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01160300109" & Format(pdFecha, "YYYYMMDD") & "012"
    nCod = 100
    nprogress = nprogress + 1
    I = 7 'NAGL 202012
    'For i = 7 To 61 Step 1 'Comentado by NAGL 202012
    Do While I <= 71 'NAGL 202012
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 14 Step 1
            If I = 7 Or I = 8 Or I = 56 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena 'NAGL 202012
        Select Case I
            Case 13
                I = I + 8
            Case 22
                I = I + 4
            Case 27
                I = I + 2
            Case 30
                I = I + 2
            Case 33
                I = I + 9
            Case 44
                I = I + 7
        End Select 'NAGL 202012 Según Acta N°094-2020
        
        If I = 32 Or I = 42 Or I = 43 Or I = 67 Or I = 68 Then
            nCod = nCod + 10
        ElseIf I = 59 Then
            nCod = nCod + 200
        ElseIf I = 51 Then
            nCod = 1100
        ElseIf I = 69 Then
            nCod = 2800
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
        'If Not ((i >= 14 And i <= 26) Or (i >= 28 And i <= 35) Or (i >= 37 And i <= 39) Or (i >= 41 And i <= 43)) Then
            'If (i = 52) Then
                'Print #1, sCadena
                'nCod = nCod + 100
            'Else
                'Print #1, sCadena
                'nCod = nCod + 100
                    'If (i = 51) Then
                        'nCod = 2000
                    'End If
            'End If
        'End If 'Comentado by NAGL 202012
        I = I + 1 'NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Loop
    
    nCod = 3000
    For I = 72 To 105 Step 1
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 14 Step 1
            If I = 72 Or I = 73 Or I = 86 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            ElseIf (I = 105) Then
                If CCur(xlHoja.Cells(I, Y)) > 0.09 And CCur(xlHoja.Cells(I, Y)) < 1 Or (CCur(xlHoja.Cells(I, Y)) < -0.09) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                    
                ElseIf (CCur(xlHoja.Cells(I, Y)) < 0.1 And CCur(xlHoja.Cells(I, Y)) > 0) Or (CCur(xlHoja.Cells(I, Y)) > -0.1 And CCur(xlHoja.Cells(I, Y)) < 0) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.#0")), ".0", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                Else
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena
        If (I = 95) Then
            nCod = 5500
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
        'If (i <> 86) Then
            'Print #1, sCadena
            'nCod = nCod + 100
                'If (i = 85) Then
                    'nCod = 5500
                'End If
        'Else
            'Print #1, sCadena
            'nCod = nCod + 100
        'End If 'Comentado by NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next 'NAGL
    
    Close ArcSal
    'ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS16ATotal_SUCAVE = True
Exit Function 'NAGL 20170407
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS16ATotal_SUCAVE = False
End Function

Public Function GeneraAnexoSBS16AIND_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx16Ind As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim carp As String
    Dim I, Y As Integer
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 16-A Indicadores: Cuadro de liquidez por plazo de vencimiento de corto plazo"
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 273
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS16AIND_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx16AInd") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS16AIND_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 6
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx16Ind = App.path & "\SPOOLER\01160400109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    Open App.path & "\SPOOLER\01160400109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01160400109" & Format(pdFecha, "YYYYMMDD") & "012"
    nCod = 100
    nprogress = nprogress + 1
    For I = 4 To 15 Step 1
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 2 To 3 Step 1
           If CCur(xlHoja.Cells(I, Y)) > 0.09 And CCur(xlHoja.Cells(I, Y)) < 1 Or (CCur(xlHoja.Cells(I, Y)) < -0.09) Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
                
                ElseIf (CCur(xlHoja.Cells(I, Y)) < 0.1 And CCur(xlHoja.Cells(I, Y)) > 0) Or (CCur(xlHoja.Cells(I, Y)) > -0.1 And CCur(xlHoja.Cells(I, Y)) < 0) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.#0")), ".0", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                Else
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
           End If
        Next
        Print #1, sCadena
        nCod = nCod + 100
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next
    Close ArcSal
    'ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS16AIND_SUCAVE = True
Exit Function 'NAGL 20170407
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS16AIND_SUCAVE = False
End Function

Public Function GeneraAnexoSBS16B_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx16B As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim nprogress As Integer
    Dim carp As String
    Dim I, Y As Integer
    Dim nCant, Inew As Integer 'NAGL 20170519
    On Error GoTo ErrBegin
    TituloProgress = "Anexo 16-B : Simulación de Escenario de estrés."
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    nprogress = 285
    oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anx16A_New_" & Format(pdFecha, "mmyyyy") & ".xlsx"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS16B_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Anx16BReg") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS16B_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 6
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx16B = App.path & "\SPOOLER\01160500109" & Format(pdFecha, "YYYYMMDD") & "012.txt"
    Open App.path & "\SPOOLER\01160500109" & Format(pdFecha, "YYYYMMDD") & "012.txt" For Output As ArcSal
    Print #ArcSal, "01160500109" & Format(pdFecha, "YYYYMMDD") & "012"
    nCod = 100
    nprogress = nprogress + 1
    
    For I = 9 To 52 Step 1 'De 48 a 52 NAGL 202012
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 22 Step 1
            If I = 9 Or I = 10 Or I = 27 Then 'De 25 a 27 NAGL 202012
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            ElseIf (I = 52) Then 'De 48 a 52 NAGL 202012
               If CCur(xlHoja.Cells(I, Y)) > 0.09 And CCur(xlHoja.Cells(I, Y)) < 1 Or (CCur(xlHoja.Cells(I, Y)) < -0.09) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                    ElseIf (CCur(xlHoja.Cells(I, Y)) < 0.1 And CCur(xlHoja.Cells(I, Y)) > 0) Or (CCur(xlHoja.Cells(I, Y)) > -0.1 And CCur(xlHoja.Cells(I, Y)) < 0) Then
                        sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.#0")), ".0", ""), 18, Derecha)
                        sCadena = sCadena & sValor
                    Else
                        sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                        sCadena = sCadena & sValor
                End If
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        
        Print #1, sCadena
        If (I = 36) Then
            nCod = 2800
        ElseIf I = 19 Or I = 20 Or I = 44 Or I = 45 Then
            nCod = nCod + 10
        ElseIf I = 21 Then
            nCod = 1200
        ElseIf I = 46 Then
            nCod = 3600
        Else
            nCod = nCod + 100
        End If 'NAGL 202012 Según Acta N°094-2020
        
        'If (i <> 35) Then
            'Print #1, sCadena
            'nCod = nCod + 100
                'If (i = 34) Then
                    'nCod = 2800
                'End If
        'Else
            'Print #1, sCadena
            'nCod = nCod + 100
        'End If 'Comentado by NAGL 202012
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next
    
    'NAGL 20170519
    nCod = 4200
    nCant = 0
    Do While Not (xlHoja.Cells(56 + nCant, 2) = "Total (IV)")
      nCant = nCant + 1
    Loop
    Inew = 59 + nCant
    nCant = 0
    For I = 55 To Inew Step 1
        sCod = AlinearTexto(CStr(nCod), 6, Derecha)
        sCadena = sCod
        For Y = 3 To 22 Step 1
            If I = 55 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            ElseIf I = (60 + nCant) And (xlHoja.Cells(60 + nCant, 2) = "Nueva brecha acumulada (V) / Patrimonio efectivo (21)") Then
                If CCur(xlHoja.Cells(I, Y)) > 0.09 And CCur(xlHoja.Cells(I, Y)) < 1 Or (CCur(xlHoja.Cells(I, Y)) < -0.09) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                    
                ElseIf (CCur(xlHoja.Cells(I, Y)) < 0.1 And CCur(xlHoja.Cells(I, Y)) > 0) Or (CCur(xlHoja.Cells(I, Y)) > -0.1 And CCur(xlHoja.Cells(I, Y)) < 0) Then
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#.#0")), ".0", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                Else
                    sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            Else
                sValor = AlinearTexto(Replace(Format(CStr(CCur(xlHoja.Cells(I, Y))), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        If (I = 55) Then
            Print #1, sCadena
            nCod = 4201
        Else
            If (xlHoja.Cells(57 + nCant, 2) = "Total (IV)") Then
                Print #1, sCadena
                If (I = 56 + nCant) Then
                    nCod = 4300
                Else
                    nCod = nCod + 100
                End If
            Else
                Print #1, sCadena
                nCod = 4202 + nCant
                nCant = nCant + 1
            End If
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, TituloProgress, MensajeProgress, "", vbBlue
    Next
    '*********NAGL
    Close ArcSal
    'ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS16B_SUCAVE = True
Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS16B_SUCAVE = False
End Function

'END PASI****************************************************
'PASIERS0142015******************************************
Public Sub GeneraAnexoSBS4A_SUCAVE(ByVal pdFecha As Date)
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim Progress As clsProgressBar
    Dim carp As String
    
    '*** Variables Archivo ***
    Dim lsCodFila As String * 6
    Dim lsFechaVencProrroga As String * 8
    Dim lsValorNetoLibros As String * 15
    Dim lsObservaciones As String * 60
    'Datos del Bien
    Dim lsDesc_Bien As String * 100
    Dim lsTpo_Bien As String * 3
    'Adjudicación, Dación en Pago o Recuperación
    Dim lsOrigen_Adj_Dac_Rec As String * 1
    Dim lsFecha_Adj_Dac_Rec As String * 8
    Dim lsTpoIdDeudor_Adj_Dac_Rec As String * 1
    Dim lsNroIdDeudor_Adj_Dac_Rec As String * 15
    Dim lsValor_Adj_Dac_Rec As String * 15
    Dim lsCapital_Adj_Dac_Rec As String * 15
    Dim lsIntereses_Adj_Dac_Rec As String * 15
    'Provisión para Bienes Adjudicados o Recuperados
    Dim lsProvisionIni_Prov As String * 15
    Dim lsProvisionConstMensual_Prov As String * 15
    Dim lsProvisionDesvalor_Prov As String * 15
    Dim lsTotalProvision_Prov As String * 15
    Dim lsFechaRealizacion_Prov As String * 8
    Dim lsValorRealizacion_Prov As String * 15
    '**************************************************
    
    On Error GoTo ErrBegin
    psArchivoALeer = App.path & "\SPOOLER\" & "Anexo4A_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anexo4A_" & Format(pdFecha, "mmyyyy") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud. debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
            Exit Sub
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Inf_Adj") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
     If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    Dim ArcSal As Integer
    Dim lsText As String
    Dim nFila As Integer, nItem As Integer, nCont As Integer
    Set Progress = New clsProgressBar
    Progress.ShowForm frmReportes
    nFila = 16
    lsText = "x"
    ArcSal = FreeFile
    Open App.path & "\SPOOLER\01040100109" & Format(pdFecha, "YYYYMMDD") & "012.104" For Output As ArcSal
    Print #ArcSal, "01040100109" & Format(pdFecha, "YYYYMMDD") & "012"
    Do While Not lsText = "*** TOTAL GENERAL"
        nFila = nFila + 1
        lsText = xlHoja.Cells(nFila, 1)
    Loop
    Progress.Max = nFila - 16
    TituloProgress = "Anexo 4-A: Bienes Adjudicados y Recuperados."
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    lsText = "x"
    nFila = 16
    nItem = 0
    nCont = 0
    Do While Not lsText = "*** TOTAL GENERAL"
        nFila = nFila + 1
        nCont = nCont + 1
        If Not (xlHoja.Cells(nFila, 2) = "") Then
            nItem = nItem + 1
            lsCodFila = AlinearTexto(CStr(nItem), 6, Izquierda)
            lsDesc_Bien = Trim(xlHoja.Cells(nFila, 1))
            lsTpo_Bien = AlinearTexto(xlHoja.Cells(nFila, 2), 3, Derecha)
            lsOrigen_Adj_Dac_Rec = xlHoja.Cells(nFila, 3)
            lsFecha_Adj_Dac_Rec = Format(CDate(xlHoja.Cells(nFila, 4)), "yyyymmdd")
            lsTpoIdDeudor_Adj_Dac_Rec = IIf(UCase(LTrim(RTrim(xlHoja.Cells(nFila, 5)))) = UCase("Otros"), 9, IIf(Len(LTrim(RTrim(xlHoja.Cells(nFila, 5)))) = 8, 1, 6))
            lsNroIdDeudor_Adj_Dac_Rec = AlinearTexto(Trim(xlHoja.Cells(nFila, 5)), 15, Derecha)
            lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 6) = "", 0, xlHoja.Cells(nFila, 6)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 7) = "", 0, xlHoja.Cells(nFila, 7)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 8) = "", 0, xlHoja.Cells(nFila, 8)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsFechaVencProrroga = ""
            lsProvisionIni_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 10) = "", 0, xlHoja.Cells(nFila, 10)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 11) = "", 0, xlHoja.Cells(nFila, 11)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format("000", "##0.00"), ".", ""), 15, Derecha)
            lsTotalProvision_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 13) = "", 0, xlHoja.Cells(nFila, 13)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsFechaRealizacion_Prov = Format(xlHoja.Cells(nFila, 14), "yyyymmdd")
            lsValorRealizacion_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 15) = "", 0, xlHoja.Cells(nFila, 15)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsValorNetoLibros = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 16) = "", 0, xlHoja.Cells(nFila, 16)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsObservaciones = ""
            Print #1, lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsFechaVencProrroga & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & lsFechaRealizacion_Prov & lsValorRealizacion_Prov & _
                lsValorNetoLibros & lsObservaciones
        End If
        Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue
        lsText = xlHoja.Cells(nFila, 1)
    Loop
    lsCodFila = AlinearTexto("100000", 6, Derecha)
    lsDesc_Bien = ""
    lsTpo_Bien = ""

    lsOrigen_Adj_Dac_Rec = ""
    lsFecha_Adj_Dac_Rec = ""
    lsTpoIdDeudor_Adj_Dac_Rec = ""
    lsNroIdDeudor_Adj_Dac_Rec = ""
    lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 6) = "", 0, xlHoja.Cells(nFila, 6)), "##0.00"), ".", ""), 15, Derecha)
    lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 7) = "", 0, xlHoja.Cells(nFila, 7)), "##0.00"), ".", ""), 15, Derecha)
    lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 8) = "", 0, xlHoja.Cells(nFila, 8)), "##0.00"), ".", ""), 15, Derecha)

    lsFechaVencProrroga = ""

    lsProvisionIni_Prov = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 10) = "", 0, xlHoja.Cells(nFila, 10)), "##0.00"), ".", ""), 15, Derecha)
    lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 11) = "", 0, xlHoja.Cells(nFila, 11)), "##0.00"), ".", ""), 15, Derecha)
    lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format("000", "##0.00"), ".", ""), 15, Derecha)
    lsTotalProvision_Prov = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 13) = "", 0, xlHoja.Cells(nFila, 13)), "##0.00"), ".", ""), 15, Derecha)
    lsFechaRealizacion_Prov = ""
    lsValorRealizacion_Prov = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 15) = "", 0, xlHoja.Cells(nFila, 15)), "##0.00"), ".", ""), 15, Derecha)
    lsValorNetoLibros = AlinearTexto(Replace(Format(IIf(xlHoja.Cells(nFila, 16) = "", 0, xlHoja.Cells(nFila, 16)), "##0.00"), ".", ""), 15, Derecha)
    lsObservaciones = ""
    
    Print #1, lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsFechaVencProrroga & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & lsFechaRealizacion_Prov & lsValorRealizacion_Prov & _
                lsValorNetoLibros & lsObservaciones
    Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    Progress.CloseForm frmReportes
     If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el archivo?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        carp = "notepad " & App.path & "\SPOOLER\01040100109" & Format(pdFecha, "YYYYMMDD") & "012.104"
        Shell carp, vbMaximizedFocus
    End If
Exit Sub
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  Progress.CloseForm frmReportes
  MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub
Public Sub GeneraAnexoSBS4B_SUCAVE(ByVal pdFecha As Date)
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim sCad As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim TituloProgress As String
    Dim MensajeProgress As String
    Dim Progress As clsProgressBar
    Dim carp As String
    
    Dim lsCodFila As String * 6
    Dim lsValorNetoLibros As String * 15
    Dim lsObservaciones As String * 60
    'Datos del Bien
    Dim lsDesc_Bien As String * 100
    Dim lsTpo_Bien As String * 3
    'Adjudicación, Dación en Pago o Recuperación
    Dim lsOrigen_Adj_Dac_Rec As String * 1
    Dim lsFecha_Adj_Dac_Rec As String * 8
    Dim lsTpoIdDeudor_Adj_Dac_Rec As String * 1
    Dim lsNroIdDeudor_Adj_Dac_Rec As String * 15
    Dim lsValor_Adj_Dac_Rec As String * 15
    Dim lsCapital_Adj_Dac_Rec As String * 15
    Dim lsIntereses_Adj_Dac_Rec As String * 15
    'Provisión para Bienes Adjudicados o Recuperados
    Dim lsProvisionIni_Prov As String * 15
    Dim lsProvisionConstMensual_Prov As String * 15
    Dim lsProvisionDesvalor_Prov As String * 15
    Dim lsTotalProvision_Prov As String * 15
    Dim lsFechaRealizacion_Prov As String * 8
    Dim lsValorRealizacion_Prov As String * 15
    'Bienes vendidos o Entregados a Arrendamiento Financiero
    Dim lsFechaVenta_AF As String * 8
    Dim lsTpoIdDeudor_AF As String * 1
    Dim lsNroIdDeudor_AF As String * 15
    Dim lsOpeVinculados_AF As String * 1
    Dim lsModalidad_AF As String * 1
    Dim lsImporteVenta_AF As String * 15
    Dim lsPeriodoPago_AF As String * 12
    Dim lsProvision_AF As String * 15
    '**************************************************
    On Error GoTo ErrBegin
    psArchivoALeer = App.path & "\SPOOLER\" & "Anexo4B_" & Format(pdFecha, "mmyyyy") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\" & "Anexo4B_" & Format(pdFecha, "mmyyyy") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud. debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
            Exit Sub
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = True
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("Inf_Ven") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
     If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    
    Dim ArcSal As Integer
    Dim lsText As String
    Dim nFila As Integer, nItem As Integer, nCont As Integer
    Set Progress = New clsProgressBar
    Progress.ShowForm frmReportes
    nFila = 19
    lsText = "x"
    ArcSal = FreeFile
    Open App.path & "\SPOOLER\01040200109" & Format(pdFecha, "YYYYMMDD") & "012.104" For Output As ArcSal
    Print #ArcSal, "01040200109" & Format(pdFecha, "YYYYMMDD") & "012"
    Do While Not UCase(lsText) = UCase("TOTAL GENERAL")
        nFila = nFila + 1
        lsText = xlHoja.Cells(nFila, 1)
    Loop
    Progress.Max = nFila - 19
    TituloProgress = "Anexo 4-B: Venta o Entrega en arrendamiento de bienes adjudicados."
    MensajeProgress = "Se esta generando el archivo txt. Por favor espere..."
    Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    lsText = "x"
    nFila = 19
    nItem = 0
    nCont = 0
    Do While Not UCase(lsText) = UCase("TOTAL GENERAL")
        nFila = nFila + 1
        nCont = nCont + 1
        If Not (xlHoja.Cells(nFila, 2) = "") Then
            nItem = nItem + 1
            lsCodFila = AlinearTexto(CStr(nItem), 6, Izquierda)
            lsDesc_Bien = Trim(xlHoja.Cells(nFila, 1))
            lsTpo_Bien = AlinearTexto(xlHoja.Cells(nFila, 2), 3, Derecha)
            lsOrigen_Adj_Dac_Rec = Trim(xlHoja.Cells(nFila, 3))
            lsFecha_Adj_Dac_Rec = Format(CDate(Trim(xlHoja.Cells(nFila, 4))), "yyyymmdd")
            lsTpoIdDeudor_Adj_Dac_Rec = IIf(UCase(LTrim(RTrim(xlHoja.Cells(nFila, 5)))) = UCase("Otros"), 9, IIf(UCase(LTrim(RTrim(xlHoja.Cells(nFila, 5)))) = UCase("Varios"), 9, 6))
            lsNroIdDeudor_Adj_Dac_Rec = AlinearTexto(Trim(xlHoja.Cells(nFila, 5)), 15, Derecha)
            lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 6) = "", 0, xlHoja.Cells(nFila, 6)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 7) = "", 0, xlHoja.Cells(nFila, 7)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 8) = "", 0, xlHoja.Cells(nFila, 8)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsProvisionIni_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 9) = "", 0, xlHoja.Cells(nFila, 9)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 10) = "", 0, xlHoja.Cells(nFila, 10)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format("000", "##0.00"), ".", ""), 15, Derecha)
            lsTotalProvision_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 12) = "", 0, xlHoja.Cells(nFila, 12)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsFechaRealizacion_Prov = ""
            lsValorRealizacion_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 14) = "", 0, xlHoja.Cells(nFila, 14)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsValorNetoLibros = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 15) = "", 0, xlHoja.Cells(nFila, 15)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsFechaVenta_AF = Format(xlHoja.Cells(nFila, 17), "yyyymmdd")
            lsTpoIdDeudor_AF = lsTpoIdDeudor_Adj_Dac_Rec
            lsNroIdDeudor_AF = AlinearTexto(Trim(xlHoja.Cells(nFila, 18)), 15, Derecha)
            lsOpeVinculados_AF = ""
            lsModalidad_AF = "C"
            lsImporteVenta_AF = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 21) = "", 0, xlHoja.Cells(nFila, 21)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsPeriodoPago_AF = ""
            lsProvision_AF = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 23) = "", 0, xlHoja.Cells(nFila, 23)), 2), "##0.00"), ".", ""), 15, Derecha)
            lsObservaciones = ""
            Print #1, lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & _
                lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & _
                lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & _
                lsFechaRealizacion_Prov & lsValorRealizacion_Prov & lsValorNetoLibros & _
                lsFechaVenta_AF & lsTpoIdDeudor_AF & lsNroIdDeudor_AF & _
                lsOpeVinculados_AF & lsModalidad_AF & _
                lsImporteVenta_AF & lsPeriodoPago_AF & lsProvision_AF & _
                lsObservaciones
        End If
        Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue
        lsText = xlHoja.Cells(nFila, 1)
    Loop
    lsCodFila = AlinearTexto("100000", 6, Izquierda)
    lsDesc_Bien = ""
    lsTpo_Bien = ""
    
    lsOrigen_Adj_Dac_Rec = ""
    lsFecha_Adj_Dac_Rec = ""
    lsTpoIdDeudor_Adj_Dac_Rec = ""
    lsNroIdDeudor_Adj_Dac_Rec = ""
    lsValor_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 6) = "", 0, xlHoja.Cells(nFila, 6)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsCapital_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 7) = "", 0, xlHoja.Cells(nFila, 7)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsIntereses_Adj_Dac_Rec = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 8) = "", 0, xlHoja.Cells(nFila, 8)), 2), "##0.00"), ".", ""), 15, Derecha)
    
    lsProvisionIni_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 9) = "", 0, xlHoja.Cells(nFila, 9)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsProvisionConstMensual_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 10) = "", 0, xlHoja.Cells(nFila, 10)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsProvisionDesvalor_Prov = AlinearTexto(Replace(Format("000", "##0.00"), ".", ""), 15, Derecha)
    lsTotalProvision_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 12) = "", 0, xlHoja.Cells(nFila, 12)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsFechaRealizacion_Prov = ""
    lsValorRealizacion_Prov = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 14) = "", 0, xlHoja.Cells(nFila, 14)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsValorNetoLibros = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 15) = "", 0, xlHoja.Cells(nFila, 15)), 2), "##0.00"), ".", ""), 15, Derecha)

    lsFechaVenta_AF = ""
    lsTpoIdDeudor_AF = ""
    lsNroIdDeudor_AF = ""
    lsOpeVinculados_AF = ""
    lsModalidad_AF = ""
    lsImporteVenta_AF = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 21) = "", 0, xlHoja.Cells(nFila, 21)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsPeriodoPago_AF = ""
    lsProvision_AF = AlinearTexto(Replace(Format(Round(IIf(xlHoja.Cells(nFila, 23) = "", 0, xlHoja.Cells(nFila, 23)), 2), "##0.00"), ".", ""), 15, Derecha)
    lsObservaciones = ""
    
    Print #1, lsCodFila & _
                lsDesc_Bien & lsTpo_Bien & _
                lsOrigen_Adj_Dac_Rec & lsFecha_Adj_Dac_Rec & _
                lsTpoIdDeudor_Adj_Dac_Rec & lsNroIdDeudor_Adj_Dac_Rec & _
                lsValor_Adj_Dac_Rec & lsCapital_Adj_Dac_Rec & lsIntereses_Adj_Dac_Rec & _
                lsProvisionIni_Prov & lsProvisionConstMensual_Prov & lsProvisionDesvalor_Prov & lsTotalProvision_Prov & _
                lsFechaRealizacion_Prov & lsValorRealizacion_Prov & lsValorNetoLibros & _
                lsFechaVenta_AF & lsTpoIdDeudor_AF & lsNroIdDeudor_AF & _
                lsOpeVinculados_AF & lsModalidad_AF & _
                lsImporteVenta_AF & lsPeriodoPago_AF & lsProvision_AF & _
                lsObservaciones
    Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    Progress.CloseForm frmReportes
     If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el archivo?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        carp = "notepad " & App.path & "\SPOOLER\01040200109" & Format(pdFecha, "YYYYMMDD") & "012.104"
        Shell carp, vbMaximizedFocus
    End If
Exit Sub
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  Progress.CloseForm frmReportes
  MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub
'END PASI****************************************************
'PASI20160127************************************************
Public Sub GeneraAnexoSBS7_SUCAVE(ByVal pdFecha As Date)
    Dim ArchAnx07AMN As String
    Dim ArchAnx07AME As String
    Dim ArchAnx07AGananciaRiesgo As String
    Dim ArchAnx07BMN As String
    Dim ArchAnx07BME As String
    Dim ArchAnx07BGananciaRiesgo As String
    Dim Carp01 As String
    Dim Carp02 As String
    Dim Carp03 As String
    Dim Carp04 As String
    Dim Carp05 As String
    Dim Carp06 As String
    On Error GoTo ERROR
    Set oBarra = New clsProgressBar
    oBarra.ShowForm frmReportes
    oBarra.Max = 295
    If Not GeneraAnexoSBS7AMN_SUCAVE(pdFecha, ArchAnx07AMN) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS7AME_SUCAVE(pdFecha, ArchAnx07AME) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS7AGananciasRiesgo_SUCAVE(pdFecha, ArchAnx07AGananciaRiesgo) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS7BMN_SUCAVE(pdFecha, ArchAnx07BMN) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS7BME_SUCAVE(pdFecha, ArchAnx07BME) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    If Not GeneraAnexoSBS7BGananciasRiesgo_SUCAVE(pdFecha, ArchAnx07BGananciaRiesgo) Then
        oBarra.CloseForm frmReportes
        MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
        Exit Sub
    End If
    oBarra.CloseForm frmReportes
    If MsgBox("Proceso terminado correctamente. El archivo ha sido generado exitosamente" & Chr(13) & " en " & App.path & "\SPOOLER\" & Chr(13) & "¿Desea abrir el grupo de archivos?", vbQuestion + vbYesNo + vbDefaultButton1, "Aviso!!!") = vbNo Then
        Exit Sub
    Else
        Carp01 = "notepad " & ArchAnx07AMN
        Carp02 = "notepad " & ArchAnx07AME
        Carp03 = "notepad " & ArchAnx07AGananciaRiesgo
        Carp04 = "notepad " & ArchAnx07BMN
        Carp05 = "notepad " & ArchAnx07BME
        Carp06 = "notepad " & ArchAnx07BGananciaRiesgo
        Shell Carp01, vbMaximizedFocus
        Shell Carp02, vbMaximizedFocus
        Shell Carp03, vbMaximizedFocus
        Shell Carp04, vbMaximizedFocus
        Shell Carp05, vbMaximizedFocus
        Shell Carp06, vbMaximizedFocus
    End If
Exit Sub
ERROR:
    oBarra.CloseForm frmReportes
    MsgBox "Al parecer existen inconvenientes. Por el momento no se ha podido generar el Archivo txt, favor comuniquese con el Area de TI.", vbInformation, "Aviso"
End Sub
Public Function GeneraAnexoSBS7AMN_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx07AMN As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim nprogress As Integer
    Dim I, Y As Integer
    
    On Error GoTo ErrBegin
    nprogress = 0
    oBarra.Progress nprogress, "Anexo 7A MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS7AMN_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = False
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("ANEXO7AMN") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS7AMN_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx07AMN = App.path & "\SPOOLER\01" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt"
    Open App.path & "\SPOOLER\01" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt" For Output As ArcSal
    Print #ArcSal, "01070100109" & Format(pdFecha, "YYYYMMDD") & "012"
    
    '*********************ACTIVO***************************
    nprogress = nprogress + 1
    For I = 9 To 27
        Select Case I
            Case 9
                nCod = 100
            Case 10
                nCod = 200
            Case 11
                nCod = 300
            Case 12
                nCod = 400
            Case 13
                nCod = 600
            Case 23
                nCod = 800
            Case 24
                nCod = 1000
            Case 25
                nCod = 1100
            Case 26
                nCod = 1200
            Case 27
                nCod = 1400
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 3 To 10 Step 1
            If I = 9 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        Print #1, sCadena
        If I = 13 Then
            I = 22
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    
    '*********************PASIVO***************************
    For I = 29 To 50
        Select Case I
            Case 29
                nCod = 1500
            Case 30, 31, 32, 33, 39, 40, 44
                nCod = nCod + 100
            Case 45
                nCod = 2400
            Case 46, 47, 48
                nCod = nCod + 100
            Case 49, 50
                nCod = 2900
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 3 To 10 Step 1
            If I = 29 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                If Not I = 49 Then
                    sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            End If
        Next
        If Not I = 49 Then
            Print #1, sCadena
        End If
        If I = 33 Then
            I = 38
        ElseIf I = 40 Then
            I = 43
        End If
        If I = 44 Then
            sCod = AlinearTexto(CStr(2300), 4, Derecha)
            sCadena = sCod
            sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
            sCadena = sCadena & sValor
            Print #1, sCadena
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    '*********************OTROS******************
    nCod = 3000
    For I = 52 To 64
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        If Not (I = 53 Or I = 56 Or I = 59 Or I = 62) Then
            For Y = 3 To 10 Step 1
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            Print #1, sCadena
            nCod = nCod + 100
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS7AMN_SUCAVE = True
    
    Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS7AMN_SUCAVE = False
End Function
Public Function GeneraAnexoSBS7AME_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx07AME As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim nprogress As Integer
    Dim I, Y As Integer
    
    On Error GoTo ErrBegin
    nprogress = 54
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS7AME_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = False
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("ANEXO7AME") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS7AME_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx07AME = App.path & "\SPOOLER\02" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt"
    Open App.path & "\SPOOLER\02" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt" For Output As ArcSal
    Print #ArcSal, "01070200109" & Format(pdFecha, "YYYYMMDD") & "012"
    
    '*********************ACTIVO***************************
    For I = 9 To 27
        Select Case I
            Case 9
                nCod = 100
            Case 10
                nCod = 200
            Case 11
                nCod = 300
            Case 12
                nCod = 400
            Case 13
                nCod = 600
            Case 23
                nCod = 800
            Case 24
                nCod = 1000
            Case 25
                nCod = 1100
            Case 26
                nCod = 1200
            Case 27
                nCod = 1400
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 3 To 10 Step 1
            If I = 9 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        Print #1, sCadena
        If I = 13 Then
            I = 22
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    
    '*********************PASIVO***************************
    For I = 29 To 50
        Select Case I
            Case 29
                nCod = 1500
            Case 30, 31, 32, 33, 39, 40, 44
                nCod = nCod + 100
            Case 45
                nCod = 2400
            Case 46, 47, 48
                nCod = nCod + 100
            Case 49, 50
                nCod = 2900
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 3 To 10 Step 1
            If I = 29 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                If Not I = 49 Then
                    sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            End If
        Next
        If Not I = 49 Then
            Print #1, sCadena
        End If
        If I = 33 Then
            I = 38
        ElseIf I = 40 Then
            I = 43
        End If
        If I = 44 Then
            sCod = AlinearTexto(CStr(2300), 4, Derecha)
            sCadena = sCod
            sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
            sCadena = sCadena & sValor
            Print #1, sCadena
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    '*********************OTROS******************
    nCod = 3000
    For I = 52 To 64
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        If Not (I = 53 Or I = 56 Or I = 59 Or I = 62) Then
            For Y = 3 To 10 Step 1
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            Print #1, sCadena
            nCod = nCod + 100
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS7AME_SUCAVE = True
    
    Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS7AME_SUCAVE = False
End Function
Public Function GeneraAnexoSBS7AGananciasRiesgo_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx07AGananciaRiesgo As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim nprogress As Integer
    Dim I, Y As Integer
    
    On Error GoTo ErrBegin
    nprogress = 107
    oBarra.Progress nprogress, "Anexo 7A: Ganancia de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS7AGananciasRiesgo_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = False
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("SECCIONCC1") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS7AGananciasRiesgo_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx07AGananciaRiesgo = App.path & "\SPOOLER\03" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt"
    Open App.path & "\SPOOLER\03" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt" For Output As ArcSal
    Print #ArcSal, "01070300109" & Format(pdFecha, "YYYYMMDD") & "012"
    
    For I = 7 To 13
        Select Case I
            Case 7
                nCod = 50
            Case 8
                nCod = 100
            Case 9
                nCod = 300
            Case 10
                nCod = 400
            Case 11
                nCod = 500
            Case 12
                nCod = 1500
            Case 13
                nCod = 1600
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        
        If I = 8 Then
            For Y = 4 To 8 Step 1
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
                nCod = 200
            Next
            Print #1, sCadena
        ElseIf I = 11 Then
            sCod = AlinearTexto(CStr(nCod), 4, Derecha)
            sCadena = sCod
            For Y = 4 To 8 Step 1
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
                nCod = 1300
            Next
            Print #1, sCadena
            sCod = AlinearTexto(CStr(nCod), 4, Derecha)
            sCadena = sCod
            For Y = 4 To 8 Step 1
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
                nCod = 1400
            Next
            Print #1, sCadena
        End If
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        
        For Y = 4 To 8 Step 1
            If I = 7 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)) * IIf(Y = 6, 100, 1), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        Print #1, sCadena
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    I = 14
    nCod = 1700
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    For Y = 4 To 8 Step 1
        sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
        sCadena = sCadena & sValor
    Next
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    nCod = 2500
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, 8)), IIf(CCur(xlHoja.Cells(I, 8)) = 0, "0", "#0.00"))), ".", ""), 90, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    I = 15
    nCod = 2600
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, 8)), IIf(CCur(xlHoja.Cells(I, 8)) = 0, "0", "#0.00"))), ".", ""), 90, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    I = 16
    nCod = 2700
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, 8)), IIf(CCur(xlHoja.Cells(I, 8)) = 0, "0", "#0.00"))), ".", ""), 90, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    nCod = 2800
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 90, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
        
    nCod = 2900
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 90, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    nCod = 3000
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 90, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A ME: Medición del Riesgo de Tasa de Interés en Moneda Nacional - Ganancias de Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS7AGananciasRiesgo_SUCAVE = True
    
    Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS7AGananciasRiesgo_SUCAVE = False
End Function
Public Function GeneraAnexoSBS7BMN_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnc07BMN As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim nprogress As Integer
    Dim I, Y As Integer
    
    On Error GoTo ErrBegin
    nprogress = 174
    oBarra.Progress nprogress, "Anexo 7B MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional -  Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS7BMN_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = False
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("ANEXONRO7BMN") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS7BMN_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnc07BMN = App.path & "\SPOOLER\04" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt"
    Open App.path & "\SPOOLER\04" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt" For Output As ArcSal
    Print #ArcSal, "01070400109" & Format(pdFecha, "YYYYMMDD") & "012"
    
    '*********************ACTIVO***************************
    For I = 9 To 27
        Select Case I
            Case 9
                nCod = 100
            Case 10
                nCod = 200
            Case 11
                nCod = 300
            Case 12
                nCod = 400
            Case 13
                nCod = 600
            Case 23
                nCod = 800
            Case 24
                nCod = 1000
            Case 25
                nCod = 1100
            Case 26
                nCod = 1200
            Case 27
                nCod = 1400
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 2 To 16 Step 1
            If I = 9 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        Print #1, sCadena
        If I = 13 Then
            I = 22
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7B MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional -  Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    '*********************PASIVO***************************
    For I = 29 To 50
        Select Case I
            Case 29
                nCod = 1500
            Case 30, 31, 32, 33, 39, 40, 44
                nCod = nCod + 100
            Case 45
                nCod = 2400
            Case 46, 47, 48
                nCod = nCod + 100
            Case 49, 50
                nCod = 2900
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 2 To 16 Step 1
            If I = 29 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                If Not I = 49 Then
                    sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            End If
        Next
        If Not I = 49 Then
            Print #1, sCadena
        End If
        If I = 33 Then
            I = 38
        ElseIf I = 40 Then
            I = 43
        End If
        If I = 44 Then
            sCod = AlinearTexto(CStr(2300), 4, Derecha)
            sCadena = sCod
            sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
            sCadena = sCadena & sValor
            Print #1, sCadena
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7B MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional -  Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    '*********************OTROS******************
    nCod = 3000
    For I = 52 To 64
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        If Not (I = 53 Or I = 56 Or I = 59 Or I = 62) Then
            For Y = 2 To 16 Step 1
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            Print #1, sCadena
            nCod = nCod + 100
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7B MN: Medición del Riesgo de Tasa de Interés en Moneda Nacional -  Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS7BMN_SUCAVE = True
    
    Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS7BMN_SUCAVE = False
End Function
Public Function GeneraAnexoSBS7BME_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx07BME As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim nprogress As Integer
    Dim I, Y As Integer
    
    On Error GoTo ErrBegin
    nprogress = 227
    oBarra.Progress nprogress, "Anexo 7B ME: Medición del Riesgo de Tasa de Interés en Moneda Extranjera - Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS7BME_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = False
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("ANEXONRO7BME") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS7BME_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx07BME = App.path & "\SPOOLER\05" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt"
    Open App.path & "\SPOOLER\05" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt" For Output As ArcSal
    Print #ArcSal, "01070500109" & Format(pdFecha, "YYYYMMDD") & "012"
    
    '*********************ACTIVO***************************
    For I = 9 To 27
        Select Case I
            Case 9
                nCod = 100
            Case 10
                nCod = 200
            Case 11
                nCod = 300
            Case 12
                nCod = 400
            Case 13
                nCod = 600
            Case 23
                nCod = 800
            Case 24
                nCod = 1000
            Case 25
                nCod = 1100
            Case 26
                nCod = 1200
            Case 27
                nCod = 1400
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 2 To 16 Step 1
            If I = 9 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            End If
        Next
        Print #1, sCadena
        If I = 13 Then
            I = 22
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7B ME: Medición del Riesgo de Tasa de Interés en Moneda Extranjera - Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    
    '*********************PASIVO***************************
    For I = 29 To 50
        Select Case I
            Case 29
                nCod = 1500
            Case 30, 31, 32, 33, 39, 40, 44
                nCod = nCod + 100
            Case 45
                nCod = 2400
            Case 46, 47, 48
                nCod = nCod + 100
            Case 49, 50
                nCod = 2900
        End Select
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 2 To 16 Step 1
            If I = 29 Then
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Else
                If Not I = 49 Then
                    sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                    sCadena = sCadena & sValor
                End If
            End If
        Next
        If Not I = 49 Then
            Print #1, sCadena
        End If
        If I = 33 Then
            I = 38
        ElseIf I = 40 Then
            I = 43
        End If
        If I = 44 Then
            sCod = AlinearTexto(CStr(2300), 4, Derecha)
            sCadena = sCod
            sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
            sCadena = sCadena & sValor
            Print #1, sCadena
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7B ME: Medición del Riesgo de Tasa de Interés en Moneda Extranjera - Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    '*********************OTROS******************
    nCod = 3000
    For I = 52 To 64
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        If Not (I = 53 Or I = 56 Or I = 59 Or I = 62) Then
            For Y = 2 To 16 Step 1
                sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            Print #1, sCadena
            nCod = nCod + 100
        End If
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7B ME: Medición del Riesgo de Tasa de Interés en Moneda Extranjera - Valor Patrimonial en Riesgo", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS7BME_SUCAVE = True
    
    Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS7BME_SUCAVE = False
End Function
Public Function GeneraAnexoSBS7BGananciasRiesgo_SUCAVE(ByVal pdFecha As Date, ByRef ArchAnx07BGananciaRiesgo As String) As Boolean
    Dim psArchivoALeer As String
    Dim psArchivoAGrabar As String
    Dim xlAplicacion As Excel.Application
    Dim xlLibro As Excel.Workbook
    Dim xlHoja As Excel.Worksheet
    Dim bExiste, bEncontrado As Boolean
    Dim fs As New Scripting.FileSystemObject
    Dim nprogress As Integer
    Dim I, Y As Integer
    
    On Error GoTo ErrBegin
    nprogress = 281
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xlsx"
    bExiste = fs.FileExists(psArchivoALeer)
    If bExiste = False Then
        psArchivoALeer = App.path & "\SPOOLER\NUEVOANEXO_7_" & Format(pdFecha, "yyyymmdd") & ".xls"
        bExiste = fs.FileExists(psArchivoALeer)
        If bExiste = False Then
            MsgBox "Ud debe generar previamente el reporte " & Chr(13) & psArchivoALeer, vbExclamation, "Aviso!!!"
            GeneraAnexoSBS7BGananciasRiesgo_SUCAVE = False
            Exit Function
        End If
    End If
    Set xlAplicacion = New Excel.Application
    Set xlLibro = xlAplicacion.Workbooks.Open(psArchivoALeer)
    bEncontrado = False
    For Each xlHoja In xlLibro.Worksheets
        If UCase(xlHoja.Name) = UCase("SECCIONCC2") Then
            bEncontrado = True
            xlHoja.Activate
            Exit For
        End If
    Next
    If bEncontrado = False Then
        ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, True
        MsgBox "No existen datos con la fecha especificada.", vbInformation, "Aviso!!!"
        GeneraAnexoSBS7BGananciasRiesgo_SUCAVE = False
        Exit Function
    End If
    Dim ArcSal As Integer
    Dim nCod As Integer
    Dim sCod As String * 4
    Dim sValor As String * 18
    Dim sCadena As String
    ArcSal = FreeFile
    ArchAnx07BGananciaRiesgo = App.path & "\SPOOLER\06" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt"
    Open App.path & "\SPOOLER\06" & Right(Format(pdFecha, "YYYYMMDD"), 6) & ".txt" For Output As ArcSal
    Print #ArcSal, "01070600109" & Format(pdFecha, "YYYYMMDD") & "012"
    
    For I = 6 To 11
        Select Case I
            Case 6
                nCod = 50
            Case 7
                nCod = 250
            Case 8
                nCod = 300
            Case 9
                nCod = 400
            Case 10
                nCod = 550
            Case 11
                nCod = 600
            'Case 12
            '    nCod = 700
        End Select
        If I = 6 Then
            sCod = AlinearTexto(CStr(nCod), 4, Derecha)
            sCadena = sCod
            For Y = 4 To 18 Step 1
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            nCod = 100
            Print #1, sCadena
            
            sCod = AlinearTexto(CStr(nCod), 4, Derecha)
            sCadena = sCod
            For Y = 4 To 18 Step 1
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            nCod = 200
            Print #1, sCadena
        ElseIf I = 9 Then
            sCod = AlinearTexto(CStr(nCod), 4, Derecha)
            sCadena = sCod
            For Y = 4 To 18 Step 1
                sValor = AlinearTexto(Replace(Format(CStr(CCur(0)), IIf(CCur(0) = 0, "0", "#0.00")), ".", ""), 18, Derecha)
                sCadena = sCadena & sValor
            Next
            nCod = 500
            Print #1, sCadena
        End If
        sCod = AlinearTexto(CStr(nCod), 4, Derecha)
        sCadena = sCod
        For Y = 4 To 18 Step 1
            sValor = AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, Y)) * IIf(I = 7 Or I = 10, 100, 1), IIf(CCur(xlHoja.Cells(I, Y)) = 0, "0", "#0.00"))), ".", ""), 18, Derecha)
            sCadena = sCadena & sValor
        Next
        Print #1, sCadena
        nprogress = nprogress + 1
        oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    Next
    I = 12
    nCod = 700
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, 18)), IIf(CCur(xlHoja.Cells(I, 8)) = 0, "0", "#0.00"))), ".", ""), 270, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    I = 13
    nCod = 800
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, 18)), IIf(CCur(xlHoja.Cells(I, 8)) = 0, "0", "#0.00"))), ".", ""), 270, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
        
    I = 14
    nCod = 900
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(Format(CCur(xlHoja.Cells(I, 18)), IIf(CCur(xlHoja.Cells(I, 8)) = 0, "0", "#0.00"))), ".", ""), 270, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
        
    nCod = 1000
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(0), ".", ""), 270, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    nCod = 1100
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(0), ".", ""), 270, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    nCod = 1200
    sCod = AlinearTexto(CStr(nCod), 4, Derecha)
    sCadena = sCod
    sCadena = sCadena & AlinearTexto(Replace(CStr(0), ".", ""), 270, Derecha)
    Print #1, sCadena
    nprogress = nprogress + 1
    oBarra.Progress nprogress, "Anexo 7A: Valor Patrimonial en Riesgo.", "Se esta generando el archivo txt. Por favor espere...", "", vbBlue
    
    Close ArcSal
    ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
    GeneraAnexoSBS7BGananciasRiesgo_SUCAVE = True
    Exit Function
ErrBegin:
  ExcelEnd psArchivoALeer, xlAplicacion, xlLibro, xlHoja, False
  GeneraAnexoSBS7BGananciasRiesgo_SUCAVE = False
End Function
'end PASI

Public Sub ImprimeComprobanteAutorizado(psDocNro As String)
    Dim oReg As New DRegVenta
    Dim oDoc As New cPDF
    Dim rsAge As New ADODB.Recordset
    Dim R As New ADODB.Recordset
    Dim nIndex As Integer
    Dim contador As Integer
    Dim nCentrar As Integer
    Dim nTamLet As Integer
    Dim sCiudadEmite As String
    Dim nCantDoc As Integer 'NAGL ERS012-2017
    Dim sCiudadMinMayu As String
    Dim nContInterno As Integer
    '***********NAGL 20170808
    Dim nTamanio As Long
    Dim Index As Integer
    Dim space As Integer
    Dim Princ As Integer
    Dim CantCarac As Integer
    Dim txtcDescrip As String
    '****************************
    
    Set R = oReg.ObtieneDocAutorizadoxNroDoc(psDocNro)
    nCantDoc = 1
    If R.EOF And R.BOF Then Exit Sub
    oDoc.Author = gsCodUser
    oDoc.Creator = "SICMACT - Financiero"
    oDoc.Producer = gsNomCmac
    oDoc.Subject = "COMPROBANTE DE PAGO AUTORIZADO Nº " & R!cDocNroNew
    oDoc.Title = "COMPROBANTE DE PAGO AUTORIZADO Nº " & R!cDocNroNew
    If Not oDoc.PDFCreate(App.path & "\Spooler\" & R!cDocNroNew & "_" & Format(gdFecSis, "YYYYMMDD") & "_" & Format(Time, "hhmmss") & ".pdf") Then Exit Sub
    
    oDoc.Fonts.Add "F1", "Arial Narrow", TrueType, Normal, WinAnsiEncoding
    oDoc.Fonts.Add "F2", "Arial Narrow", TrueType, Bold, WinAnsiEncoding
    
    oDoc.LoadImageFromFile App.path & "\Logo_2015.jpg", "Logo"
    nTamLet = 6: contador = 0: nCentrar = 80
    
    For nIndex = 1 To 3
        If nIndex = 1 Or nIndex = 3 Then
           oDoc.NewPage A4_Vertical
        End If
        
        oDoc.WImage 95 + contador, 95, 50, 100, "Logo"
        oDoc.WTextBox 45 + contador, 185, 10, 200, "CAJA MUNICIPAL DE AHORRO Y CREDITO MAYNAS S.A.", "F1", nTamLet, hCenter
        
        oDoc.WTextBox 55 + contador, 160 + nCentrar, 3, 200, "AGENCIA:", "F2", nTamLet, hLeft
            Set rsAge = oReg.ObtieneDatosAgencia(gsCodAge)
            If Not (rsAge.EOF And rsAge.BOF) Then
                oDoc.WTextBox 55 + contador, 200 + nCentrar, 3, 200, rsAge!cAgeDireccion, "F1", nTamLet, hLeft
                oDoc.WTextBox 61 + contador, 200 + nCentrar, 3, 200, rsAge!DI, "F1", nTamLet, hLeft
                oDoc.WTextBox 67 + contador, 200 + nCentrar, 3, 200, "Telf.:" & rsAge!cAgeTelefono, "F1", nTamLet, hLeft
                oDoc.WTextBox 73 + contador, 200 + nCentrar, 3, 200, rsAge!DI & "-" & rsAge!PRO & "-" & rsAge!DEP, "F1", nTamLet, hLeft
            End If
    
            'Oficina Principal
            oDoc.WTextBox 81 + contador, 160 + nCentrar, 3, 200, "OFIC. PRINC.:", "F2", nTamLet, hLeft
            Set rsAge = oReg.ObtieneDatosAgencia("01")
            If Not (rsAge.EOF And rsAge.BOF) Then
                oDoc.WTextBox 81 + contador, 200 + nCentrar, 3, 200, rsAge!cAgeDireccion, "F1", nTamLet, hLeft
                oDoc.WTextBox 87 + contador, 200 + nCentrar, 3, 200, "Telf.:" & rsAge!cAgeTelefono, "F1", nTamLet, hLeft
                oDoc.WTextBox 93 + contador, 200 + nCentrar, 3, 200, rsAge!DI & "-" & rsAge!PRO & "-" & rsAge!DEP, "F1", nTamLet, hLeft
            End If
    
            oDoc.WTextBox 41 + contador, 375, 25, 120, "RUC N° 20103845328", "F2", 10, hCenter, vMiddle, vbBlack, 1, vbBlack
            oDoc.WTextBox 66 + contador, 375, 20, 120, "", "F1", 10, hCenter, vMiddle, vbWhite, 1, vbBlack
            oDoc.WTextBox 66 + contador, 375, 20, 120, "COMPROBANTE DE PAGO", "F1", 10, hCenter, vMiddle, vbWhite, 1, vbBlack, True
            oDoc.WTextBox 86 + contador, 375, 25, 120, Format(Left(R!cDocNroNew, 4), "0000") & " - " & "N° " & Format(Mid(R!cDocNroNew, 5, Len(R!cDocNroNew)), "0000000"), "F1", 10, hCenter, vMiddle, vbBlack, 1, vbBlack
             
            oDoc.WTextBox 106 + contador, 40 + nCentrar, 10, 200, "Señor(es):", "F2", nTamLet, hLeft
            oDoc.WTextBox 106 + contador, 80 + nCentrar, 10, 200, R!cPersNombre, "F1", nTamLet, hLeft
            
            oDoc.WTextBox 116 + contador, 40 + nCentrar, 10, 200, "Dirección:", "F2", nTamLet, hLeft
            oDoc.WTextBox 116 + contador, 80 + nCentrar, 10, 200, R!cDireccion, "F1", nTamLet, hLeft
            
            oDoc.WTextBox 126 + contador, 40 + nCentrar, 10, 200, "R.U.C. Nº:", "F2", nTamLet, hLeft
            oDoc.WTextBox 126 + contador, 80 + nCentrar, 10, 200, IIf(R!cTipoDoc = 1, "", R!cRuc), "F1", nTamLet, hLeft
            
            oDoc.WTextBox 126 + contador, 170 + nCentrar, 10, 200, "D.N.I. Nº:", "F2", nTamLet, hLeft
            oDoc.WTextBox 126 + contador, 210 + nCentrar, 10, 200, R!cDni, "F1", nTamLet, hLeft
            
            
            sCiudadEmite = Trim(Mid(rsAge!UB, 1, InStr(1, rsAge!UB, "(") - 1))
            oDoc.WTextBox 126 + contador, 215 + nCentrar, 10, 150, sCiudadEmite & "," & ArmaFecha(Format(R!dDocFecha, "dd/mm/yyyy")), "F1", 7, hRight
            
            oDoc.WTextBox 140 + contador, 20 + nCentrar, 15, 45, "CANTIDAD", "F1", nTamLet, hCenter, vMiddle, vbWhite, 1, vbBlack, True
            oDoc.WTextBox 140 + contador, 20 + nCentrar, 130, 45, "", "F1", nTamLet, hCenter, , , 1, vbBlack
            oDoc.WTextBox 140 + contador, 65 + nCentrar, 15, 245, " DESCRIPCION", "F1", nTamLet, hCenter, vMiddle, vbWhite, 1, vbBlack, True
            oDoc.WTextBox 140 + contador, 65 + nCentrar, 130, 245, "", "F1", nTamLet, hCenter, , , 1, vbBlack
            oDoc.WTextBox 140 + contador, 310 + nCentrar, 15, 50, "P.UNITARIO", "F1", nTamLet, hCenter, vMiddle, vbWhite, 1, vbBlack, True
            oDoc.WTextBox 140 + contador, 310 + nCentrar, 130, 50, "", "F1", nTamLet, hCenter, , , 1, vbBlack
            oDoc.WTextBox 140 + contador, 360 + nCentrar, 15, 50, " IMPORTE", "F1", nTamLet, hCenter, vMiddle, vbWhite, 1, vbBlack, True
            oDoc.WTextBox 140 + contador, 360 + nCentrar, 130, 50, "", "F1", nTamLet, hCenter, , , 1, vbBlack
            
            oDoc.WTextBox 155 + contador, 20 + nCentrar, 130, 45, nCantDoc, "F1", nTamLet, hCenter
            
            '******************NAGL 20170804
            nTamanio = Len(R!cDescrip)
            space = 156
            Index = 1
            Princ = 1
            CantCarac = 0
            
            Do While Index <= nTamanio And space <> 240
                    If InStr(Index, R!cDescrip, Chr$(13), vbTextCompare) <> 0 Then
                        CantCarac = InStr(Index, R!cDescrip, Chr$(13), vbTextCompare)
                        CantCarac = CantCarac - Index
                        txtcDescrip = Mid(R!cDescrip, Index, CantCarac)
                        oDoc.WTextBox space + contador, 70 + nCentrar, 130, 200, UCase(txtcDescrip), "F1", nTamLet, hLeft
                        Index = InStr(Index, R!cDescrip, Chr$(13), vbTextCompare) + 1
                        space = space + 6 + IIf((Len(txtcDescrip) / 50) > 1, ((Round(Len(txtcDescrip) / 50)) * 6) - 4, 0)
                        
                    ElseIf (Index <= nTamanio) And Index <> 1 Then
                        txtcDescrip = Mid(R!cDescrip, Index, nTamanio)
                        oDoc.WTextBox space + contador, 70 + nCentrar, 130, 200, UCase(txtcDescrip), "F1", nTamLet, hLeft
                        Index = nTamanio + 1
                    Else
                        oDoc.WTextBox space + contador, 70 + nCentrar, 130, 200, UCase(R!cDescrip), "F1", nTamLet, hLeft
                        Index = nTamanio + 1
                    End If
            Loop '******************NAGL 20170804
            
            'oDoc.WTextBox 155 + contador, 70 + nCentrar, 130, 200, UCase(R!cDescrip), "F1", nTamLet, hLeft
            oDoc.WTextBox 155 + contador, 310 + nCentrar, 100, 50, Format(R!nVVenta, gsFormatoNumeroView), "F1", nTamLet, hCenter
            oDoc.WTextBox 155 + contador, 365 + nCentrar, 100, 50, Format(R!nVVenta, gsFormatoNumeroView), "F1", nTamLet, hCenter
            
            nContInterno = Len(R!cDescrip)
            If Len(R!cCtaCod) <> 0 Then
                oDoc.WTextBox 155 + contador + IIf(nContInterno / 100 > 1, (Round((nContInterno / 100)) * 9), 8), 70 + nCentrar, 130, 245, "Nº CONTRATO: " & R!cCtaCod, "F2", nTamLet, hLeft
            Else
                oDoc.WTextBox 155 + contador + IIf(nContInterno / 100 > 1, (Round((nContInterno / 100)) * 9), 8), 70 + nCentrar, 130, 245, "", "F2", nTamLet, hLeft
            End If
            oDoc.WTextBox 260 + contador, 70 + nCentrar, 130, 245, " SON: " & ConvNumLet(R!nPVenta, , , R!nMoneda), "F1", nTamLet, hLeft
            
            'oDoc.WTextBox 275 + contador, 10 + nCentrar, 8, 140, "NOTA: NO HAY DERECHO A DEVOLUCIÓN", "F2", 6, hLeft, vMiddle, vbBlack, 1, vbBlack
            'oDoc.WTextBox 285 + contador, 10 + nCentrar, 10, 310, "BIENES TRANSFERIDOS / SERVICIOS PRESTADOS EN LA REGION SELVA PARA SER CONSUMIDOS EN LA MISMA", "F1", 6, hLeft
            
            '*******************Begin NAGL*********************************************'
             oDoc.WTextBox 310 + contador, 20 + nCentrar, 8, 140, "NOTA: RECIBO DE INGRESO AUTORIZADO", "F1", 6, hLeft ', vMiddle, vbBlack, 1, vbBlack
             oDoc.WTextBox 318 + contador, 20 + nCentrar, 10, 310, "EMITIDO EN APLICACIÓN DE LA RESOLUCIÓN DE SUPERINTENDENCIA N° 007-99 SUNAT (24.01.99 - NUMERAL 6 - INCISO B)", "F1", 6, hLeft
             'oDoc.WTextBox 320 + contador, 20 + nCentrar, 10, 400, "NOTA: RECIBO DE INGRESO AUTORIZADO EMITIDO EN APLICACION DE LA RESOLUCIÓN DE SUPERINTENDENCIA N°007-99SUNAT (24.01.99-NUMERAL 6-INCISOB)", "F1", 6, hLeft
            '**********Agregado by NAGL 20170918 según INC1709150018*******************'
            
            sCiudadMinMayu = UCase(Mid(Trim(rsAge!UB), 1, 1)) & LCase(Mid(Trim(rsAge!UB), 2, Len(rsAge!UB))) 'Para que la ciudad sea minuscula y mayuscula
            sCiudadEmite = Trim(Mid(sCiudadMinMayu, 1, InStr(1, sCiudadMinMayu, "(") - 1))
            oDoc.WTextBox 290 + contador, 150 + nCentrar, 10, 185, "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -", "F2", 6, hLeft
            oDoc.WTextBox 297 + contador, 170 + nCentrar, 10, 55, "C A N C E L A D O", "F2", 7, hCenter
            oDoc.WTextBox 305 + contador, 122 + nCentrar, 10, 150, sCiudadEmite & "," & ArmaFecha(Format(R!dDocFecha, "dd/mm/yyyy")), "F1", nTamLet, hCenter
            
            oDoc.WTextBox 277 + contador, 330 + nCentrar, 5, 50, "SUBTOTAL", "F2", nTamLet, hLeft
            oDoc.WTextBox 287 + contador, 330 + nCentrar, 5, 50, "IGV", "F2", nTamLet, hLeft
            oDoc.WTextBox 297 + contador, 330 + nCentrar, 5, 50, "TOTAL", "F2", nTamLet, hLeft
            
            oDoc.WTextBox 275 + contador, 440, 10, 50, Format(R!nVVenta, gsFormatoNumeroView), "F1", nTamLet, hCenter, vMiddle, vbBlack, 1, vbBlack
            oDoc.WTextBox 285 + contador, 440, 10, 50, Format(R!nIGV, gsFormatoNumeroView), "F1", nTamLet, hCenter, vMiddle, vbBlack, 1, vbBlack
            oDoc.WTextBox 295 + contador, 440, 10, 50, Format(R!nPVenta, gsFormatoNumeroView), "F2", nTamLet, hCenter, vMiddle, vbBlack, 1, vbBlack
            
            oDoc.WTextBox 310 + contador, 360 + nCentrar, 10, 50, IIf(nIndex = 1, "EMISOR", IIf(nIndex = 2, "USUARIO", "SUNAT")), "F2", 6, hCenter
            
            If Not nIndex = 2 Then
                oDoc.WTextBox 360 + contador, 0, 10, 700, "- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ", "F2", 6, hLeft
            End If
            If nIndex = 1 Then
                contador = contador + 380
            Else
                contador = 0
            End If
        Next
        
    oDoc.PDFClose
    oDoc.Show
End Sub '**********CAMBIO TOTAL POR NAGL ERS 012-2017
'PASI END ********************

'*** PEAC 20201126
Public Sub Reporte35(ByVal psMes As Integer, ByVal psAnio As Integer)
Dim oCtaIf As NCajaCtaIF
Dim lsMoneda As String
Dim lnTC As Double


Dim rs As ADODB.Recordset
Dim rs35 As ADODB.Recordset
Dim rsAnexo As ADODB.Recordset

Dim lcCodAge As String
Dim lnTot1 As Double, lnTot2 As Double, lnTot3 As Double, lnTot4 As Double
Dim lnTot5 As Double, lnTot6 As Double, lnTot7 As Double, lnTot8 As Double
Dim lnTot9 As Double, lnTot10 As Double, lnTot11 As Double, lnTot12 As Double

Dim fs              As Scripting.FileSystemObject
Dim xlAplicacion    As Excel.Application
Dim xlLibro         As Excel.Workbook
Dim xlHoja1         As Excel.Worksheet
Dim xlHoja2         As Excel.Worksheet
Dim lbExisteHoja    As Boolean
Dim liLineas        As Integer
Dim I               As Integer
Dim glsArchivo      As String
Dim lsNomHoja       As String
Dim lsNomHoja2       As String

Dim TituloProgress As String
Dim MensajeProgress As String
Dim Progress As clsProgressBar
Dim nCont As Integer

On Error GoTo Reporte35Error

    frmReportes.MousePointer = 11

    Set rs = New ADODB.Recordset
    Set rs35 = New ADODB.Recordset

    Set oCtaIf = New NCajaCtaIF

    Set rs = oCtaIf.GetExisteRCD_Reporte35(psMes, psAnio)
    If rs(0) = "0" Then
        MsgBox "No existe información para imprimir", vbInformation, "Aviso"
        frmReportes.MousePointer = 0
        'Progress.CloseForm frmReportes
        Exit Sub
    End If
    
    Set Progress = New clsProgressBar
    Progress.ShowForm frmReportes
    Progress.Max = 30
    TituloProgress = "Obteniendo Datos para el Reporte 35."
    MensajeProgress = "Se esta generando el reporte. Por favor espere..."
    Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    Set rs35 = oCtaIf.GetReporte35(psMes, psAnio)

    If rs35 Is Nothing Then
        MsgBox "No existe información para imprimir", vbInformation, "Aviso"
        frmReportes.MousePointer = 0
        Progress.CloseForm frmReportes
        Exit Sub
    End If

    lnTC = rs35(9)
   
    glsArchivo = "Reporte35" & Format(gdFecSis, "yyyymmdd") & "_" & Format(Time(), "HHMMSS") & ".XLS"
       
    If Not rs35.EOF Then
        nCont = rs35.RecordCount
        'Set Progress = New clsProgressBar
        'Progress.ShowForm frmReportes
        Progress.Max = nCont
        TituloProgress = "Generando Reporte 35."
        MensajeProgress = "Se esta generando el reporte. Por favor espere..."
        Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    End If
    
    Set fs = New Scripting.FileSystemObject

    Set xlAplicacion = New Excel.Application
    If fs.FileExists(App.path & "\SPOOLER\" & glsArchivo) Then
        Set xlLibro = xlAplicacion.Workbooks.Open(App.path & "\SPOOLER\" & glsArchivo)
    Else
        Set xlLibro = xlAplicacion.Workbooks.Add
    End If
    Set xlHoja1 = xlLibro.Worksheets.Add

    xlHoja1.PageSetup.CenterHorizontally = True
    xlHoja1.PageSetup.Zoom = 60
    xlHoja1.PageSetup.Orientation = xlLandscape

            lbExisteHoja = False
            lsNomHoja = "Reporte 35"
            lsNomHoja2 = "Anexo"
            For Each xlHoja1 In xlLibro.Worksheets
                If xlHoja1.Name = lsNomHoja Then
                    xlHoja1.Activate
                    lbExisteHoja = True
                    Exit For
                End If
            Next
            If lbExisteHoja = False Then
                Set xlHoja1 = xlLibro.Worksheets.Add
                xlHoja1.Name = lsNomHoja
            End If

            xlAplicacion.Range("A1:A1").ColumnWidth = 3.71
            xlAplicacion.Range("B1:B1").ColumnWidth = 40
            xlAplicacion.Range("c1:c1").ColumnWidth = 15
            xlAplicacion.Range("D1:D1").ColumnWidth = 15
            xlAplicacion.Range("E1:E1").ColumnWidth = 15
            xlAplicacion.Range("F1:F1").ColumnWidth = 15
            xlAplicacion.Range("G1:G1").ColumnWidth = 15
            xlAplicacion.Range("H1:H1").ColumnWidth = 15
            xlAplicacion.Range("I1:I1").ColumnWidth = 15
            xlAplicacion.Range("J1:J1").ColumnWidth = 15
            xlAplicacion.Range("K1:K1").ColumnWidth = 15
            xlAplicacion.Range("L1:L1").ColumnWidth = 15
            xlAplicacion.Range("M1:M1").ColumnWidth = 15
            xlAplicacion.Range("N1:N1").ColumnWidth = 15
           
            xlAplicacion.Range("A1:Z100").Font.Size = 8
            xlAplicacion.Range("A1:Z100").Font.Name = "Arial"
       
            xlHoja1.Cells(1, 2) = "SUPERINTENDENCIA DE BANCA Y SEGUROS"
            
            xlHoja1.Cells(3, 2) = "EMPRESA: " & gsNomCmac
            xlHoja1.Cells(4, 2) = "Mes Y Año: " & UCase(MonthName(psMes)) & "-" & CStr(psAnio)
            xlHoja1.Cells(5, 2) = "T/C: " & CStr(lnTC)

            xlHoja1.Rows("9:9").RowHeight = 45

            xlHoja1.Range("B8:B9").MergeCells = True
            xlHoja1.Range("C8:F8").MergeCells = True
            xlHoja1.Range("G8:J8").MergeCells = True
            xlHoja1.Range("K8:N8").MergeCells = True

            liLineas = 9
            
            xlHoja1.Cells(8, 2) = "Tipo de Crédito"
            xlHoja1.Cells(8, 3) = "Reprogramación Modalidad Masiva"
            xlHoja1.Cells(8, 7) = "Reprogramación Modalidad Individual"
            xlHoja1.Cells(8, 11) = "Total Reprogramación Modalidad Masiva+Reprogramación Modalidad Individual"
            
            xlHoja1.Cells(9, 3) = "Cartera (8109.37.XX.01)"
            xlHoja1.Cells(9, 4) = "Devengado Cobrado"
            xlHoja1.Cells(9, 5) = "Devengado por cobrar (8109.37.XX.02)"
            xlHoja1.Cells(9, 6) = "Interés Criterio Percibido (8109.37.XX.03)"
            
            xlHoja1.Cells(9, 7) = "Cartera (8109.37.XX.01)"
            xlHoja1.Cells(9, 8) = "Devengado Cobrado"
            xlHoja1.Cells(9, 9) = "Devengado por cobrar (8109.37.XX.02)"
            xlHoja1.Cells(9, 10) = "Interés Criterio Percibido (8109.37.XX.03)"
            
            xlHoja1.Cells(9, 11) = "Cartera (8109.37.XX.01)"
            xlHoja1.Cells(9, 12) = "Devengado Cobrado"
            xlHoja1.Cells(9, 13) = "Devengado por cobrar (8109.37.XX.02)"
            xlHoja1.Cells(9, 14) = "Interés Criterio Percibido (8109.37.XX.03)"
            
            xlHoja1.Cells(10, 2) = "Corporativo (5)"
            xlHoja1.Cells(11, 2) = "Gran Empresa"
            xlHoja1.Cells(12, 2) = "Mediana Empresa"
            xlHoja1.Cells(13, 2) = "Pequeña Empresa"
            xlHoja1.Cells(14, 2) = "Microempresa"
            xlHoja1.Cells(15, 2) = "Consumo Revolvente"
            xlHoja1.Cells(16, 2) = "Consumo no revolvente"
            xlHoja1.Cells(17, 2) = "Hipotecario para vivienda"
            xlHoja1.Cells(18, 2) = "Empresa del Sistema Financiero"
            
            xlHoja1.Range("B8:N9").HorizontalAlignment = xlCenter
            xlHoja1.Range("B8:N9").VerticalAlignment = xlCenter
            xlHoja1.Range("B8:N9").WrapText = True
            xlHoja1.Range("B8:N9").Orientation = 0

            xlHoja1.Range("C8:F18").Interior.Color = RGB(255, 242, 204)
            xlHoja1.Range("G8:N18").Interior.Color = RGB(226, 239, 218)
            xlHoja1.Range("B8:N19").Borders.LineStyle = 1
            xlHoja1.Range("B1:B18").Font.Bold = True
            xlHoja1.Range("C8:N9").Font.Bold = True
            xlHoja1.Range("C10:N19").Style = "Comma"

            xlHoja1.Range("C19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("D19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("E19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("F19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("G19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("H19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("I19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("J19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("K19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("L19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("M19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"
            xlHoja1.Range("N19").FormulaR1C1 = "=SUM(R[-9]C:R[-1]C)"


    nCont = 0
    Do While Not rs35.EOF
        nCont = nCont + 1 'PASIERS0142015
        liLineas = liLineas + 1
        lcCodAge = rs35(0)
        xlHoja1.Cells(liLineas, 3) = rs35(1)
        xlHoja1.Cells(liLineas, 4) = rs35(2)
        xlHoja1.Cells(liLineas, 5) = rs35(3)
        xlHoja1.Cells(liLineas, 6) = rs35(4)
        
        xlHoja1.Cells(liLineas, 7) = rs35(5)
        xlHoja1.Cells(liLineas, 8) = rs35(6)
        xlHoja1.Cells(liLineas, 9) = rs35(7)
        xlHoja1.Cells(liLineas, 10) = rs35(8)
        
        xlHoja1.Range(xlHoja1.Cells(liLineas, 11), xlHoja1.Cells(liLineas, 11)).FormulaR1C1 = "=+RC[-8]+RC[-4]"
        xlHoja1.Range(xlHoja1.Cells(liLineas, 12), xlHoja1.Cells(liLineas, 12)).FormulaR1C1 = "=+RC[-8]+RC[-4]"
        xlHoja1.Range(xlHoja1.Cells(liLineas, 13), xlHoja1.Cells(liLineas, 13)).FormulaR1C1 = "=+RC[-8]+RC[-4]"
        xlHoja1.Range(xlHoja1.Cells(liLineas, 14), xlHoja1.Cells(liLineas, 14)).FormulaR1C1 = "=+RC[-8]+RC[-4]"
    
        Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue
        
            rs35.MoveNext
            If rs35.EOF Then
                Exit Do
            End If
    Loop

For Each xlHoja2 In xlLibro.Worksheets
   If xlHoja2.Name = lsNomHoja2 Then
        xlHoja2.Activate
     lbExisteHoja = True
    Exit For
   End If
Next

If lbExisteHoja = False Then
    Set xlHoja2 = xlLibro.Worksheets.Add
    xlHoja2.Name = lsNomHoja2
End If

liLineas = 3

Progress.Max = 45
TituloProgress = "Obteniendo Datos para el Anexo del Reporte 35."
MensajeProgress = "Se esta generando el reporte. Por favor espere..."
Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue

Set rsAnexo = oCtaIf.GetAnexoRepo35(psMes, psAnio, lnTC)

xlHoja2.Cells(3, 1) = "MOV"
xlHoja2.Cells(3, 2) = "CUENTA"
xlHoja2.Cells(3, 3) = "CONCEPTO"
xlHoja2.Cells(3, 4) = "MONTO"
xlHoja2.Cells(3, 5) = "CONCEPTO"
xlHoja2.Cells(3, 6) = "ESTADO ACTUAL"
xlHoja2.Cells(3, 7) = "TIPO CREDITO"
xlHoja2.Cells(3, 8) = "MODALIDAD"
xlHoja2.Range("A3:H3").Interior.Color = RGB(198, 224, 180)

    If Not rsAnexo.EOF Then
        nCont = rs35.RecordCount
        'Set Progress = New clsProgressBar
        'Progress.ShowForm frmReportes
        Progress.Max = nCont
        TituloProgress = "Generando el Anexo del Reporte 35."
        MensajeProgress = "Se esta generando el reporte. Por favor espere..."
        Progress.Progress 0, TituloProgress, MensajeProgress, "", vbBlue
    End If

    nCont = 0

Do While Not rsAnexo.EOF
    nCont = nCont + 1
    liLineas = liLineas + 1
    xlHoja2.Cells(liLineas, 1) = rsAnexo(0)
    xlHoja2.Cells(liLineas, 2) = rsAnexo(1)
    xlHoja2.Cells(liLineas, 3) = rsAnexo(2)
    xlHoja2.Cells(liLineas, 4) = rsAnexo(3)
    xlHoja2.Cells(liLineas, 5) = rsAnexo(4)
    xlHoja2.Cells(liLineas, 6) = rsAnexo(5)
    xlHoja2.Cells(liLineas, 7) = rsAnexo(7)
    xlHoja2.Cells(liLineas, 8) = rsAnexo(8)
        
    Progress.Progress nCont, TituloProgress, MensajeProgress, "", vbBlue
        
    rsAnexo.MoveNext
    If rsAnexo.EOF Then
        Exit Do
    End If

Loop

xlHoja2.Columns("D:D").Style = "Comma"
xlHoja2.Columns("A:H").EntireColumn.AutoFit

'**************************************************************
        Progress.CloseForm frmReportes
        frmReportes.MousePointer = 0

        xlHoja1.SaveAs App.path & "\SPOOLER\" & glsArchivo
        ExcelEnd App.path & "\Spooler\" & glsArchivo, xlAplicacion, xlLibro, xlHoja1

        Set xlAplicacion = Nothing
        Set xlLibro = Nothing
        Set xlHoja1 = Nothing
        MsgBox "Se ha generado el Archivo en " & App.path & "\SPOOLER\" & glsArchivo
        Call CargaArchivo(glsArchivo, App.path & "\SPOOLER\")

Set oCtaIf = Nothing
    Exit Sub
Reporte35Error:
    MsgBox Err.Description, vbInformation, "Aviso"
    Exit Sub

End Sub

